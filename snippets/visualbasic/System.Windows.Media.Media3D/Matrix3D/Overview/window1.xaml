<?xml version="1.0" encoding="Windows-1252"?>
<Window  
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    x:Class="Vector3DSample.Window1" 
    Title="Vector3D Sample"
    Height = "600"
    Width = "800">


<!--Main Grid Panel-->
  <Grid Name="mainGridPanel" Margin="10">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="Auto" />
      <ColumnDefinition Width="20" />
      <ColumnDefinition />
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="20" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>

    <!-- Top Border -->
    <Rectangle Grid.Row="0" 
            Grid.Column="0" 
            Grid.ColumnSpan="3"
            Fill="#99CCCCCC" />
    <TextBlock Grid.Row="0" Grid.Column="0" Margin="10,10,0,10">
        <Bold>Vector3D Sample</Bold>
    </TextBlock>

    <!--Begin: List of operations-->
    <Rectangle Grid.Row="2" Grid.Column="0"
            Fill="#99CCCCFF" RadiusX="10" RadiusY="10"/>

    <DockPanel Grid.Row="2" Grid.Column="0" >
        <TextBlock Margin ="10,20,0,0" DockPanel.Dock ="Top">
            <Bold>Vector3D Operations</Bold>
        </TextBlock>

        <!-- A list of radio buttons used to select which operation to perform -->
        <!--<ScrollViewer Width="400" Height="400" DockPanel.Dock="Left" Margin ="10">-->
      <StackPanel>
        <RadioButton Checked="PerformOperation" Name="rb1">Add point1 by vector1 using overloaded + operator</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb2">Add vector1 to vector2 using overloaded + operator</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb3">Add point1 to vector1 using Static Vector Add method</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb4">Add vector1 to vector2 using Static Vector Add method</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb5">Subtract vector1 from vector2 using overloaded - operator</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb6">Subtract vector1 from vector2 using Static Vector Subtract method</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb7">Subtract vector1 from point1 using overloaded - operator</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb8">Subtract vector1 from point1 using Static Vector Subtract method</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb9">Multiple vector1 by scalar1 using * overloaded operator</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb10">Multiple scalar1 by vector1 using * overloaded operator</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb11">Multiple vector1 by matrix1 using * overloaded operator</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb12">Multiple vector1 by scalar1 using the static Multiply method</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb13">Multiple scalar1 by vector1 using the static Multiply method</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb14">Multiple vector1 by matrix1 using the static Multiply method</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb15">Divide vector1 by scalar1 using overloaded / operator</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb16">Divide vector1 by scalar1 using Static Vector Divide method</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb17">Unary Negate vector1 using - unary operator</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb18">Calculate the length of vector1 using the length property</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb19">Calculate the square of the length of vector1 using the lengthsquared property</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb20">Normalize Vector1 using the Normalize method</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb21">Calculate the angle between vector1 and vector2</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb22">Calculate the crossproduct of vector1 and vector2</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb23">Calculate the dot prodict of vector1 and vector2</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb24">Check vector1 and vector2 for equality using the overloaded == operator</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb25">Check vector1 and vector2 for equality using the static Equals method</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb26">Check if an Object and vector1 for equality using the non-static Equals method</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb27">Converts a string representation of a vector into a Vector structure using static Parse method</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb28">Check vector1 and vector2 for inequality using the overloaded != operator</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb29">negate vector1 using static Negate method</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb30">negate vector1 using overloaded unary negation operator</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb31">Get the ToString of vector1</RadioButton>
        <RadioButton Checked="PerformOperation" Name="rb32">Get the hashcode of vector1</RadioButton>
      </StackPanel>
        <!--</ScrollViewer>-->

    </DockPanel>
    <!--End: List of operations-->

    <!-- Begin: The Variable and Result Tables -->
    <Rectangle Grid.Row="2" Grid.Column="2"
            Fill="#99CCCCCC" RadiusX="10" RadiusY="10"/>
    <DockPanel Grid.Row="2" Grid.Column="2" Margin ="0,10,0,30">

        <!-- Displays the variables used in the operations -->

        <Grid DockPanel.Dock="Top"  Margin="20,30,0,0">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="75" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="20" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="0">
                <Bold>Variables</Bold>
            </TextBlock>
            <TextBlock Grid.Row="1" Grid.Column="0">
                <Bold>Point 1:</Bold>
            </TextBlock>
            <TextBlock Grid.Row="1" Grid.Column="1" Name="txtPoint1">
                <Bold></Bold>
            </TextBlock>
            <TextBlock Grid.Row="2" Grid.Column="0">
                <Bold>Point 2:</Bold>
            </TextBlock>
            <TextBlock Grid.Row="2" Grid.Column="1" Name="txtPoint2">
                <Bold></Bold>
            </TextBlock>
            <TextBlock Grid.Row="3" Grid.Column="0">
                <Bold>Vector 1:</Bold>
            </TextBlock>
            <TextBlock Grid.Row="3" Grid.Column="1" Name="txtVector1">
                <Bold></Bold>
            </TextBlock>
            <TextBlock Grid.Row="4" Grid.Column="0">
                <Bold>Vector 2:</Bold>
            </TextBlock>
            <TextBlock Grid.Row="4" Grid.Column="1" Name="txtVector2">
                <Bold></Bold>
            </TextBlock>
            <TextBlock Grid.Row="5" Grid.Column="0">
                <Bold>Matrix 1:</Bold>
            </TextBlock>
            <TextBlock Grid.Row="5" Grid.Column="1" Name="txtMatrix1">
                <Bold></Bold>
            </TextBlock>
            <TextBlock Grid.Row="6" Grid.Column="0">
                <Bold>Scalar 1:</Bold>
            </TextBlock>
            <TextBlock Grid.Row="6" Grid.Column="1" Name="txtScalar1">
                <Bold></Bold>
            </TextBlock>
        </Grid>

        <!-- Displays the result information of the operations -->
        <Grid DockPanel.Dock="Top"
              Margin="20,110,0,0">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="75" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="20" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="0">
                <Bold>Results</Bold>
            </TextBlock>
            <TextBlock Grid.Row="1" Grid.Column="0">
                <Bold>Operation:</Bold>
            </TextBlock>
            <TextBlock Grid.Row="1" Grid.Column="1" Name="txtOperation">
                <Bold></Bold>
            </TextBlock>
            <TextBlock Grid.Row="2" Grid.Column="0">
                <Bold>Syntax:</Bold>
            </TextBlock>
            <TextBlock Grid.Row="2" Grid.Column="1" Name="txtSyntax">
                <Bold></Bold>
            </TextBlock>
            <TextBlock Grid.Row="3" Grid.Column="0">
                <Bold>Result:</Bold>
            </TextBlock>
            <TextBlock Grid.Row="3" Grid.Column="1" Name="txtResultValue">
                <Bold></Bold>
            </TextBlock>
            <TextBlock Grid.Row="4" Grid.Column="0">
                <Bold>Result Type:</Bold>
            </TextBlock>
            <TextBlock Grid.Row="4" Grid.Column="1" Name="txtResultType">
                <Bold></Bold>
            </TextBlock>
        </Grid>

    </DockPanel>
    <!-- End: The Variable and Result Tables -->

</Grid>
<!--End Main Grid Panel-->


</Window>

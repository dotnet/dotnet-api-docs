<Window x:Class="AltnerationIndexSnippets.Window1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:src="clr-namespace:AltnerationIndexSnippets"
    Title="Window1">
  <ScrollViewer>
    <StackPanel>
      <StackPanel.Resources>

        <!--Shows the AlternationIndex of the item container.-->
        <DataTemplate x:Key="dt1">
          <TextBlock Text="{Binding RelativeSource={RelativeSource FindAncestor, 
                                    AncestorType={x:Type ListBoxItem}},
 	                                Path=(ItemsControl.AlternationIndex)}"/>
        </DataTemplate>

        <src:Places x:Key="places"/>

        <!--Group the items by State.-->
        <CollectionViewSource Source="{StaticResource places}" x:Key="groupedData">
          <CollectionViewSource.GroupDescriptions>
            <PropertyGroupDescription PropertyName="State"/>
          </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>

        <src:ListBoxData x:Key="data"/>
        <src:ListLeagueList x:Key="MyTreeViewData"/>

      </StackPanel.Resources>
      <!--<Snippet1>-->
      <Grid>
        <Grid.Resources>
          <Style x:Key="alternatingWithTriggers" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Blue"/>
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
              <Trigger Property="ListBox.AlternationIndex" Value="1">
                <Setter Property="Background" Value="CornflowerBlue"/>
                <Setter Property="Foreground" Value="Black"/>
              </Trigger>
              <Trigger Property="ListBox.AlternationIndex" Value="2">
                <Setter Property="Background" Value="LightBlue"/>
                <Setter Property="Foreground" Value="Navy"/>
              </Trigger>
            </Style.Triggers>
          </Style>

        </Grid.Resources>
        <ListBox AlternationCount="3" ItemsSource="{StaticResource data}" 
                 ItemContainerStyle="{StaticResource alternatingWithTriggers}">
        </ListBox>
      </Grid>
      <!--</Snippet1>-->

      <!--<Snippet2>-->
      <Grid>
        <Grid.Resources>
          <AlternationConverter x:Key="BackgroundConverter">
            <SolidColorBrush>Blue</SolidColorBrush>
            <SolidColorBrush>CornflowerBlue</SolidColorBrush>
            <SolidColorBrush>LightBlue</SolidColorBrush>
          </AlternationConverter>

          <AlternationConverter x:Key="AlternateForegroundConverter">
            <SolidColorBrush>White</SolidColorBrush>
            <SolidColorBrush>Black</SolidColorBrush>
            <SolidColorBrush>Navy</SolidColorBrush>
          </AlternationConverter>

          <Style x:Key="alternatingWithBinding" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" 
                    Value="{Binding RelativeSource={RelativeSource Self},
                           Path=(ItemsControl.AlternationIndex),
                           Converter={StaticResource BackgroundConverter}}"/>

            <Setter Property="Foreground" 
                    Value="{Binding RelativeSource={RelativeSource Self},
                           Path=(ItemsControl.AlternationIndex),
                           Converter={StaticResource AlternateForegroundConverter}}"/>
          </Style>

        </Grid.Resources>

        <ListBox AlternationCount="3" ItemsSource="{StaticResource data}"
                 ItemContainerStyle="{StaticResource alternatingWithBinding}"/>
      </Grid>
      <!--</Snippet2>-->

      <!--<Snippet3>-->
      <StackPanel>

        <StackPanel.Resources>

          <!--Returns a Brush for the header of a GroupItem.-->
          <AlternationConverter x:Key="GroupHeaderBackgroundConverter">
            <SolidColorBrush>LightBlue</SolidColorBrush>
            <SolidColorBrush>LightSteelBlue</SolidColorBrush>
          </AlternationConverter>

          <!--Returns a Brush for a ListBoxItem.-->
          <AlternationConverter x:Key="BackgroundConverter">
            <SolidColorBrush>Silver</SolidColorBrush>
            <SolidColorBrush>LightGray</SolidColorBrush>
            <SolidColorBrush>GhostWhite</SolidColorBrush>
          </AlternationConverter>

        </StackPanel.Resources>

        <ListBox ItemsSource="{Binding Source={StaticResource groupedData}}"
                 DisplayMemberPath="CityName" AlternationCount="3" Name="lb">

          <ListBox.GroupStyle>
            <!--Set alternating backgrounds on the header of each group.-->
            <GroupStyle AlternationCount="2">
              <GroupStyle.HeaderTemplate>
                <DataTemplate>
                  <TextBlock FontWeight="Bold" 
                             Text="{Binding Path=Name}" 
                             Background="{Binding 
                                 RelativeSource={RelativeSource FindAncestor, 
                                 AncestorType={x:Type GroupItem}},
                                 Path=(ItemsControl.AlternationIndex),
                                 Converter={StaticResource 
                                            GroupHeaderBackgroundConverter}}"/>
                </DataTemplate>
              </GroupStyle.HeaderTemplate>
            </GroupStyle>
          </ListBox.GroupStyle>

          <ListBox.ItemContainerStyle>
            <!--Set alternating backgrounds on the items in the ListBox.-->
            <Style TargetType="{x:Type ListBoxItem}">
              <Setter Property="Background" 
                      Value="{Binding RelativeSource={RelativeSource Self},
                           Path=(ItemsControl.AlternationIndex),
                           Converter={StaticResource BackgroundConverter}}"/>
            </Style>
          </ListBox.ItemContainerStyle>
        </ListBox>
      </StackPanel>
      <!--</Snippet3>-->

      <!--<Snippet4>-->
      <Grid>
        <Grid.Resources>
          <AlternationConverter x:Key="BackgroundConverter">
            <SolidColorBrush>Blue</SolidColorBrush>
            <SolidColorBrush>LightBlue</SolidColorBrush>
          </AlternationConverter>

          <AlternationConverter x:Key="FontStyleConverter">
            <FontStyle >Italic</FontStyle>
            <FontStyle >Normal</FontStyle>
          </AlternationConverter>

          <Style x:Key="alternatingWithBinding" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" 
                    Value="{Binding RelativeSource={RelativeSource Self},
                           Path=(ItemsControl.AlternationIndex),
                           Converter={StaticResource BackgroundConverter}}"/>

            <Setter Property="FontStyle" 
                    Value="{Binding RelativeSource={RelativeSource Self},
                           Path=(ItemsControl.AlternationIndex),
                           Converter={StaticResource FontStyleConverter}}"/>
          </Style>

        </Grid.Resources>

        <ListBox AlternationCount="2" ItemsSource="{StaticResource data}"
                 ItemContainerStyle="{StaticResource alternatingWithBinding}"/>
      </Grid>
      <!--</Snippet4>-->



      <!--<Snippet5>-->
      <StackPanel>
        <StackPanel.Resources>

          <!--Returns alternating brushes.-->
          <AlternationConverter x:Key="TeamsBackgroundConverter">
            <SolidColorBrush>LimeGreen</SolidColorBrush>
            <SolidColorBrush>SpringGreen</SolidColorBrush>
            <SolidColorBrush>Chartreuse</SolidColorBrush>
          </AlternationConverter>

          <!--The DataTemplate used by TreeViewItems in the third level
          of the TreeView.-->
          <DataTemplate x:Key="Level3Data">
            <TextBlock Text="{Binding Path=Name}"
              Background="{Binding RelativeSource={RelativeSource FindAncestor, 
                 AncestorType={x:Type TreeViewItem}},
                 Path=(ItemsControl.AlternationIndex),
                 Converter={StaticResource TeamsBackgroundConverter}}"/>
          </DataTemplate>

          <!--Returns altnernating FontStyles.-->
          <AlternationConverter x:Key="LeagueFontStyleConverter">
            <FontStyle >Italic</FontStyle>
            <FontStyle >Normal</FontStyle>
          </AlternationConverter>

          <!--The HierarchicalDataTemplate used by TreeViewItems
           in the second level of the TreeView.-->
          <HierarchicalDataTemplate x:Key="Level2Data"
            ItemsSource="{Binding Path=Teams}"
            ItemTemplate="{StaticResource Level3Data}"
            AlternationCount="3">
            <TextBlock Text="{Binding Path=Name}"
              FontStyle="{Binding RelativeSource={RelativeSource FindAncestor, 
                 AncestorType={x:Type TreeViewItem}},
                 Path=(ItemsControl.AlternationIndex),
                 Converter={StaticResource LeagueFontStyleConverter}}"/>
          </HierarchicalDataTemplate>

          <!--The HierarchicalDataTemplate used by TreeViewItems
           in the first level of the TreeView.-->
          <HierarchicalDataTemplate x:Key="Level1Data"
            ItemsSource="{Binding Path=Divisions}"
            ItemTemplate="{StaticResource Level2Data}"
            AlternationCount="2">
            <TextBlock Text="{Binding Path=Name}" FontWeight="Bold"/>
          </HierarchicalDataTemplate>

          <Style TargetType="TreeViewItem">
            <Setter Property="IsExpanded" Value="True"/>
          </Style>
        </StackPanel.Resources>

        <TreeView ItemsSource="{Binding Source={StaticResource MyTreeViewData}}"
                  ItemTemplate="{StaticResource Level1Data}"/>
      </StackPanel>
      <!--</Snippet5>-->

    </StackPanel>
  </ScrollViewer>

</Window>

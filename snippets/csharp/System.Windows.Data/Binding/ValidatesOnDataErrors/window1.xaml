<Window x:Class="BindingValidationSnippets.Window1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:src="clr-namespace:BindingValidationSnippets"
    Title="Window1" Height="300" Width="300">
  <Window.Resources>


  </Window.Resources>
  <StackPanel>
    <!--<SnippetIDataErrorInfoXaml>-->
    <StackPanel Margin="20">
      <StackPanel.Resources>
        <src:PersonImplementsIDataErrorInfo x:Key="data"/>
        
        <!--The tool tip for the TextBox to display the validation error message.-->
        <Style x:Key="textBoxInError" TargetType="TextBox">
          <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
              <Setter Property="ToolTip"
                  Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                  Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
          </Style.Triggers>
        </Style>

      </StackPanel.Resources>
      <TextBlock>Enter your age:</TextBlock>
      <TextBox Style="{StaticResource textBoxInError}">
        <TextBox.Text>
          <!--ValidatesOnDataErrors to is set to True, so the Binding
              checks for errors raised by the IDataErrorInfo object.
              An alternative syntax is to add <DataErrorValidationRule/> within
              the <Binding.ValidationRules> section.-->
          <Binding Path="Age" Source="{StaticResource data}"
                   ValidatesOnDataErrors="True"
                   UpdateSourceTrigger="PropertyChanged">
          </Binding>
        </TextBox.Text>
      </TextBox>
      <TextBlock>Mouse-over to see the validation error message.</TextBlock>
    </StackPanel>
    <!--</SnippetIDataErrorInfoXaml>-->

    <!--<SnippetThrowExceptionXaml>-->
    <StackPanel Margin="20">
      <StackPanel.Resources>
        
        <src:PersonThrowException x:Key="data"/>
        
        <!--The tool tip for the TextBox to display the validation error message.-->
        <Style x:Key="textBoxInError" TargetType="TextBox">
          <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
              <Setter Property="ToolTip"
                  Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                  Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
          </Style.Triggers>
        </Style>

      </StackPanel.Resources>
      <TextBlock>Enter your age:</TextBlock>
      <TextBox Style="{StaticResource textBoxInError}">
        <TextBox.Text>
          <!--By setting ValidatesOnExceptions to True, it checks for exceptions
            that are thrown during the update of the source property.
            An alternative syntax is to add <ExceptionValidationRule/> within
            the <Binding.ValidationRules> section.-->
          <Binding Path="Age" Source="{StaticResource data}"
                   ValidatesOnExceptions="True"
                   UpdateSourceTrigger="PropertyChanged">
          </Binding>
        </TextBox.Text>
      </TextBox>
      <TextBlock>Mouse-over to see the validation error message.</TextBlock>
    </StackPanel>
    <!--</SnippetThrowExceptionXaml>-->
  </StackPanel>
</Window>

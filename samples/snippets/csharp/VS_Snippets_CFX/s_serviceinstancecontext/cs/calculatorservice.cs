//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://Microsoft.ServiceModel.Samples", ConfigurationName="IInstanceContextCalculator")]
public interface IInstanceContextCalculator
{

    [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IInstanceContextCalculator/Add", ReplyAction="http://Microsoft.ServiceModel.Samples/IInstanceContextCalculator/AddResponse")]
    int Add(int n1, int n2);

    [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IInstanceContextCalculator/Subtract", ReplyAction="http://Microsoft.ServiceModel.Samples/IInstanceContextCalculator/SubtractResponse" +
        "")]
    int Subtract(int n1, int n2);

    [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IInstanceContextCalculator/Multiply", ReplyAction="http://Microsoft.ServiceModel.Samples/IInstanceContextCalculator/MultiplyResponse" +
        "")]
    int Multiply(int n1, int n2);

    [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IInstanceContextCalculator/Divide", ReplyAction="http://Microsoft.ServiceModel.Samples/IInstanceContextCalculator/DivideResponse")]
    int Divide(int n1, int n2);

    [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IInstanceContextCalculator/GetInstanceConte" +
        "xtInfo", ReplyAction="http://Microsoft.ServiceModel.Samples/IInstanceContextCalculator/GetInstanceConte" +
        "xtInfoResponse")]
    string GetInstanceContextInfo();

    [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IInstanceContextCalculator/GetIncomingChann" +
        "els", ReplyAction="http://Microsoft.ServiceModel.Samples/IInstanceContextCalculator/GetIncomingChann" +
        "elsResponse")]
    void GetIncomingChannels();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface IInstanceContextCalculatorChannel : IInstanceContextCalculator, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class InstanceContextCalculatorClient : System.ServiceModel.ClientBase<IInstanceContextCalculator>, IInstanceContextCalculator
{

    public InstanceContextCalculatorClient()
    {
    }

    public InstanceContextCalculatorClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
    {
    }

    public InstanceContextCalculatorClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public InstanceContextCalculatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public InstanceContextCalculatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
    {
    }

    public int Add(int n1, int n2)
    {
        return base.Channel.Add(n1, n2);
    }

    public int Subtract(int n1, int n2)
    {
        return base.Channel.Subtract(n1, n2);
    }

    public int Multiply(int n1, int n2)
    {
        return base.Channel.Multiply(n1, n2);
    }

    public int Divide(int n1, int n2)
    {
        return base.Channel.Divide(n1, n2);
    }

    public string GetInstanceContextInfo()
    {
        return base.Channel.GetInstanceContextInfo();
    }

    public void GetIncomingChannels()
    {
        base.Channel.GetIncomingChannels();
    }
}

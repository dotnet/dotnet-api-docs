//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.312
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System.IO;
using System;
namespace LibraryContractsAddInAdapters {


public class LibraryManagerAddInAdapter
{

    internal static LibraryContractsBase.LibraryManager ContractToViewAdapter(Library.ILibraryManagerContract contract)
    {
        StreamWriter sw = new StreamWriter(@"c:\meow\adaptercalls.txt", true);
        sw.WriteLine("Called LibraryManagerAddInAdapter.ContractToViewAdapter");
        sw.Close();
        if (contract.GetType().Equals(typeof(LibraryManagerViewToContractAddInAdapter)))
        {
            return ((LibraryManagerViewToContractAddInAdapter)(contract)).GetSourceView();
        }
        else {
            return new LibraryManagerContractToViewAddInAdapter(contract);
        }
    }

    internal static Library.ILibraryManagerContract ViewToContractAdapter(LibraryContractsBase.LibraryManager view)
    {
        StreamWriter sw = new StreamWriter(@"c:\meow\adaptercalls.txt", true);
        sw.WriteLine("Called LibraryManagerAddInAdapter.ViewToContractAdapter");
        sw.Close();
        if (view.GetType().Equals(typeof(LibraryManagerContractToViewAddInAdapter)))
        {
            return ((LibraryManagerContractToViewAddInAdapter)(view)).GetSourceContract();
        }
        else {
            return new LibraryManagerViewToContractAddInAdapter(view);
        }
    }
}
}


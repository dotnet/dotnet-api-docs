<?xml version="1.0" encoding="utf-8"?>
<Framework Name="dotnet-plat-ext-1.1">
  <Assemblies>
    <Assembly Name="Microsoft.Extensions.Caching.Abstractions" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Caching.Memory" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Caching.Redis" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Caching.SqlServer" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.CommandLineUtils" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Configuration.Abstractions" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Configuration.AzureKeyVault" Version="1.0.0.0" />
    <Assembly Name="Microsoft.Extensions.Configuration.Binder" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Configuration.CommandLine" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Configuration" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Configuration.EnvironmentVariables" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Configuration.FileExtensions" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Configuration.Ini" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Configuration.Json" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Configuration.UserSecrets" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Configuration.Xml" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.DependencyInjection.Abstractions" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.DependencyInjection" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.DiagnosticAdapter" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.FileProviders.Abstractions" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.FileProviders.Composite" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.FileProviders.Embedded" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.FileProviders.Physical" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.FileSystemGlobbing" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Globalization.CultureInfoCache" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Localization.Abstractions" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Localization" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Logging.Abstractions" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Logging.AzureAppServices" Version="1.0.0.0" />
    <Assembly Name="Microsoft.Extensions.Logging.Console" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Logging.Debug" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Logging" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Logging.EventLog" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Logging.EventSource" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Logging.Filter" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Logging.TraceSource" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.ObjectPool" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Options.ConfigurationExtensions" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Options" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.PlatformAbstractions" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.Primitives" Version="1.1.0.0" />
    <Assembly Name="Microsoft.Extensions.WebEncoders" Version="1.1.0.0" />
  </Assemblies>
  <Namespace Name="Microsoft.Extensions.Caching.Distributed">
    <Type Name="Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryExtensions" Id="T:Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryExtensions">
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions,System.DateTimeOffset)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions,System.TimeSpan)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryExtensions.SetSlidingExpiration(Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions,System.TimeSpan)" />
    </Type>
    <Type Name="Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions" Id="T:Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions">
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions.#ctor" />
      <Member Id="P:Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions.AbsoluteExpiration" />
      <Member Id="P:Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions.AbsoluteExpirationRelativeToNow" />
      <Member Id="P:Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions.SlidingExpiration" />
    </Type>
    <Type Name="Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions" Id="T:Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions">
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetString(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetStringAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.Set(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.Byte[])" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.Byte[])" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetString(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetString(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.String,Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetStringAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetStringAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.String,Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)" />
    </Type>
    <Type Name="Microsoft.Extensions.Caching.Distributed.IDistributedCache" Id="T:Microsoft.Extensions.Caching.Distributed.IDistributedCache">
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.Get(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.GetAsync(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.Refresh(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.RefreshAsync(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.Remove(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.RemoveAsync(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.Set(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.SetAsync(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)" />
    </Type>
    <Type Name="Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache" Id="T:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache">
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Get(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.GetAsync(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Refresh(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.RefreshAsync(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Remove(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.RemoveAsync(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Set(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)" />
      <Member Id="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.SetAsync(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Caching.Memory">
    <Type Name="Microsoft.Extensions.Caching.Memory.CacheEntryExtensions" Id="T:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions">
      <Member Id="M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Primitives.IChangeToken)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,System.DateTimeOffset)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,System.TimeSpan)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetOptions(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.CacheItemPriority)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetSlidingExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,System.TimeSpan)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetValue(Microsoft.Extensions.Caching.Memory.ICacheEntry,System.Object)" />
    </Type>
    <Type Name="Microsoft.Extensions.Caching.Memory.CacheExtensions" Id="T:Microsoft.Extensions.Caching.Memory.CacheExtensions">
      <Member Id="M:Microsoft.Extensions.Caching.Memory.CacheExtensions.Get(Microsoft.Extensions.Caching.Memory.IMemoryCache,System.Object)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.CacheExtensions.Get``1(Microsoft.Extensions.Caching.Memory.IMemoryCache,System.Object)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.CacheExtensions.GetOrCreate``1(Microsoft.Extensions.Caching.Memory.IMemoryCache,System.Object,System.Func{Microsoft.Extensions.Caching.Memory.ICacheEntry,``0})" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.CacheExtensions.GetOrCreateAsync``1(Microsoft.Extensions.Caching.Memory.IMemoryCache,System.Object,System.Func{Microsoft.Extensions.Caching.Memory.ICacheEntry,System.Threading.Tasks.Task{``0}})" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.CacheExtensions.Set``1(Microsoft.Extensions.Caching.Memory.IMemoryCache,System.Object,``0)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.CacheExtensions.Set``1(Microsoft.Extensions.Caching.Memory.IMemoryCache,System.Object,``0,Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.CacheExtensions.Set``1(Microsoft.Extensions.Caching.Memory.IMemoryCache,System.Object,``0,Microsoft.Extensions.Primitives.IChangeToken)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.CacheExtensions.Set``1(Microsoft.Extensions.Caching.Memory.IMemoryCache,System.Object,``0,System.DateTimeOffset)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.CacheExtensions.Set``1(Microsoft.Extensions.Caching.Memory.IMemoryCache,System.Object,``0,System.TimeSpan)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.CacheExtensions.TryGetValue``1(Microsoft.Extensions.Caching.Memory.IMemoryCache,System.Object,``0@)" />
    </Type>
    <Type Name="Microsoft.Extensions.Caching.Memory.CacheItemPriority" Id="T:Microsoft.Extensions.Caching.Memory.CacheItemPriority">
      <Member Id="F:Microsoft.Extensions.Caching.Memory.CacheItemPriority.High" />
      <Member Id="F:Microsoft.Extensions.Caching.Memory.CacheItemPriority.Low" />
      <Member Id="F:Microsoft.Extensions.Caching.Memory.CacheItemPriority.NeverRemove" />
      <Member Id="F:Microsoft.Extensions.Caching.Memory.CacheItemPriority.Normal" />
    </Type>
    <Type Name="Microsoft.Extensions.Caching.Memory.EvictionReason" Id="T:Microsoft.Extensions.Caching.Memory.EvictionReason">
      <Member Id="F:Microsoft.Extensions.Caching.Memory.EvictionReason.Capacity" />
      <Member Id="F:Microsoft.Extensions.Caching.Memory.EvictionReason.Expired" />
      <Member Id="F:Microsoft.Extensions.Caching.Memory.EvictionReason.None" />
      <Member Id="F:Microsoft.Extensions.Caching.Memory.EvictionReason.Removed" />
      <Member Id="F:Microsoft.Extensions.Caching.Memory.EvictionReason.Replaced" />
      <Member Id="F:Microsoft.Extensions.Caching.Memory.EvictionReason.TokenExpired" />
    </Type>
    <Type Name="Microsoft.Extensions.Caching.Memory.ICacheEntry" Id="T:Microsoft.Extensions.Caching.Memory.ICacheEntry">
      <Member Id="P:Microsoft.Extensions.Caching.Memory.ICacheEntry.AbsoluteExpiration" />
      <Member Id="P:Microsoft.Extensions.Caching.Memory.ICacheEntry.AbsoluteExpirationRelativeToNow" />
      <Member Id="P:Microsoft.Extensions.Caching.Memory.ICacheEntry.ExpirationTokens" />
      <Member Id="P:Microsoft.Extensions.Caching.Memory.ICacheEntry.Key" />
      <Member Id="P:Microsoft.Extensions.Caching.Memory.ICacheEntry.PostEvictionCallbacks" />
      <Member Id="P:Microsoft.Extensions.Caching.Memory.ICacheEntry.Priority" />
      <Member Id="P:Microsoft.Extensions.Caching.Memory.ICacheEntry.SlidingExpiration" />
      <Member Id="P:Microsoft.Extensions.Caching.Memory.ICacheEntry.Value" />
    </Type>
    <Type Name="Microsoft.Extensions.Caching.Memory.IMemoryCache" Id="T:Microsoft.Extensions.Caching.Memory.IMemoryCache">
      <Member Id="M:Microsoft.Extensions.Caching.Memory.IMemoryCache.CreateEntry(System.Object)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.IMemoryCache.Remove(System.Object)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.IMemoryCache.TryGetValue(System.Object,System.Object@)" />
    </Type>
    <Type Name="Microsoft.Extensions.Caching.Memory.MemoryCache" Id="T:Microsoft.Extensions.Caching.Memory.MemoryCache">
      <Member Id="M:Microsoft.Extensions.Caching.Memory.MemoryCache.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Caching.Memory.MemoryCacheOptions})" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.MemoryCache.Compact(System.Double)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.MemoryCache.CreateEntry(System.Object)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.MemoryCache.Dispose" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.MemoryCache.Dispose(System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.MemoryCache.Finalize" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.MemoryCache.Remove(System.Object)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.MemoryCache.TryGetValue(System.Object,System.Object@)" />
      <Member Id="P:Microsoft.Extensions.Caching.Memory.MemoryCache.Count" />
    </Type>
    <Type Name="Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions" Id="T:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions">
      <Member Id="M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Primitives.IChangeToken)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.DateTimeOffset)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.TimeSpan)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.CacheItemPriority)" />
      <Member Id="M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetSlidingExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.TimeSpan)" />
    </Type>
    <Type Name="Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" Id="T:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions">
      <Member Id="M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.#ctor" />
      <Member Id="P:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.AbsoluteExpiration" />
      <Member Id="P:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.AbsoluteExpirationRelativeToNow" />
      <Member Id="P:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.ExpirationTokens" />
      <Member Id="P:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.PostEvictionCallbacks" />
      <Member Id="P:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.Priority" />
      <Member Id="P:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.SlidingExpiration" />
    </Type>
    <Type Name="Microsoft.Extensions.Caching.Memory.MemoryCacheOptions" Id="T:Microsoft.Extensions.Caching.Memory.MemoryCacheOptions">
      <Member Id="M:Microsoft.Extensions.Caching.Memory.MemoryCacheOptions.#ctor" />
      <Member Id="P:Microsoft.Extensions.Caching.Memory.MemoryCacheOptions.Clock" />
      <Member Id="P:Microsoft.Extensions.Caching.Memory.MemoryCacheOptions.CompactOnMemoryPressure" />
      <Member Id="P:Microsoft.Extensions.Caching.Memory.MemoryCacheOptions.ExpirationScanFrequency" />
      <Member Id="P:Microsoft.Extensions.Caching.Memory.MemoryCacheOptions.Microsoft#Extensions#Options#IOptions&lt;Microsoft#Extensions#Caching#Memory#MemoryCacheOptions&gt;#Value" />
    </Type>
    <Type Name="Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration" Id="T:Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration">
      <Member Id="M:Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration.#ctor" />
      <Member Id="P:Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration.EvictionCallback" />
      <Member Id="P:Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration.State" />
    </Type>
    <Type Name="Microsoft.Extensions.Caching.Memory.PostEvictionDelegate" Id="T:Microsoft.Extensions.Caching.Memory.PostEvictionDelegate" />
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Caching.Redis">
    <Type Name="Microsoft.Extensions.Caching.Redis.RedisCache" Id="T:Microsoft.Extensions.Caching.Redis.RedisCache">
      <Member Id="M:Microsoft.Extensions.Caching.Redis.RedisCache.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Caching.Redis.RedisCacheOptions})" />
      <Member Id="M:Microsoft.Extensions.Caching.Redis.RedisCache.Dispose" />
      <Member Id="M:Microsoft.Extensions.Caching.Redis.RedisCache.Get(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Redis.RedisCache.GetAsync(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Redis.RedisCache.Refresh(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Redis.RedisCache.RefreshAsync(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Redis.RedisCache.Remove(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Redis.RedisCache.RemoveAsync(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.Redis.RedisCache.Set(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)" />
      <Member Id="M:Microsoft.Extensions.Caching.Redis.RedisCache.SetAsync(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)" />
    </Type>
    <Type Name="Microsoft.Extensions.Caching.Redis.RedisCacheOptions" Id="T:Microsoft.Extensions.Caching.Redis.RedisCacheOptions">
      <Member Id="M:Microsoft.Extensions.Caching.Redis.RedisCacheOptions.#ctor" />
      <Member Id="P:Microsoft.Extensions.Caching.Redis.RedisCacheOptions.Configuration" />
      <Member Id="P:Microsoft.Extensions.Caching.Redis.RedisCacheOptions.InstanceName" />
      <Member Id="P:Microsoft.Extensions.Caching.Redis.RedisCacheOptions.Microsoft#Extensions#Options#IOptions&lt;Microsoft#Extensions#Caching#Redis#RedisCacheOptions&gt;#Value" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Caching.SqlServer">
    <Type Name="Microsoft.Extensions.Caching.SqlServer.SqlServerCache" Id="T:Microsoft.Extensions.Caching.SqlServer.SqlServerCache">
      <Member Id="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions})" />
      <Member Id="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.Get(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.GetAsync(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.Refresh(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.RefreshAsync(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.Remove(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.RemoveAsync(System.String)" />
      <Member Id="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.Set(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)" />
      <Member Id="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.SetAsync(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)" />
    </Type>
    <Type Name="Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions" Id="T:Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions">
      <Member Id="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions.#ctor" />
      <Member Id="P:Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions.ConnectionString" />
      <Member Id="P:Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions.DefaultSlidingExpiration" />
      <Member Id="P:Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions.ExpiredItemsDeletionInterval" />
      <Member Id="P:Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions.Microsoft#Extensions#Options#IOptions&lt;Microsoft#Extensions#Caching#SqlServer#SqlServerCacheOptions&gt;#Value" />
      <Member Id="P:Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions.SchemaName" />
      <Member Id="P:Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions.SystemClock" />
      <Member Id="P:Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions.TableName" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.CommandLineUtils">
    <Type Name="Microsoft.Extensions.CommandLineUtils.AnsiConsole" Id="T:Microsoft.Extensions.CommandLineUtils.AnsiConsole">
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.AnsiConsole.GetError(System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.AnsiConsole.GetOutput(System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.AnsiConsole.WriteLine(System.String)" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.AnsiConsole.OriginalForegroundColor" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.AnsiConsole.Writer" />
    </Type>
    <Type Name="Microsoft.Extensions.CommandLineUtils.CommandArgument" Id="T:Microsoft.Extensions.CommandLineUtils.CommandArgument">
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandArgument.#ctor" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandArgument.Description" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandArgument.MultipleValues" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandArgument.Name" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandArgument.ShowInHelpText" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandArgument.Value" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandArgument.Values" />
    </Type>
    <Type Name="Microsoft.Extensions.CommandLineUtils.CommandLineApplication" Id="T:Microsoft.Extensions.CommandLineUtils.CommandLineApplication">
      <Member Id="F:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Arguments" />
      <Member Id="F:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Commands" />
      <Member Id="F:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Options" />
      <Member Id="F:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.RemainingArguments" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.#ctor(System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Argument(System.String,System.String,System.Action{Microsoft.Extensions.CommandLineUtils.CommandArgument},System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Argument(System.String,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Command(System.String,System.Action{Microsoft.Extensions.CommandLineUtils.CommandLineApplication},System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Execute(System.String[])" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.GetFullNameAndVersion" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.GetHelpText(System.String)" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.GetOptions" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.HelpOption(System.String)" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OnExecute(System.Func{System.Int32})" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OnExecute(System.Func{System.Threading.Tasks.Task{System.Int32}})" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Option(System.String,System.String,Microsoft.Extensions.CommandLineUtils.CommandOptionType)" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Option(System.String,System.String,Microsoft.Extensions.CommandLineUtils.CommandOptionType,System.Action{Microsoft.Extensions.CommandLineUtils.CommandOption})" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Option(System.String,System.String,Microsoft.Extensions.CommandLineUtils.CommandOptionType,System.Action{Microsoft.Extensions.CommandLineUtils.CommandOption},System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Option(System.String,System.String,Microsoft.Extensions.CommandLineUtils.CommandOptionType,System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShowHelp(System.String)" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShowHint" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShowRootCommandFullNameAndVersion" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShowVersion" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.VersionOption(System.String,System.Func{System.String},System.Func{System.String})" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.VersionOption(System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.AllowArgumentSeparator" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Description" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Error" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ExtendedHelpText" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.FullName" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Invoke" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.IsShowingInformation" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.LongVersionGetter" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Name" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OptionHelp" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OptionVersion" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Out" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Parent" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShortVersionGetter" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShowInHelpText" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Syntax" />
    </Type>
    <Type Name="Microsoft.Extensions.CommandLineUtils.CommandOption" Id="T:Microsoft.Extensions.CommandLineUtils.CommandOption">
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandOption.#ctor(System.String,Microsoft.Extensions.CommandLineUtils.CommandOptionType)" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandOption.HasValue" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandOption.TryParse(System.String)" />
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandOption.Value" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandOption.Description" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandOption.Inherited" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandOption.LongName" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandOption.OptionType" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandOption.ShortName" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandOption.ShowInHelpText" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandOption.SymbolName" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandOption.Template" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandOption.ValueName" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandOption.Values" />
    </Type>
    <Type Name="Microsoft.Extensions.CommandLineUtils.CommandOptionType" Id="T:Microsoft.Extensions.CommandLineUtils.CommandOptionType">
      <Member Id="F:Microsoft.Extensions.CommandLineUtils.CommandOptionType.MultipleValue" />
      <Member Id="F:Microsoft.Extensions.CommandLineUtils.CommandOptionType.NoValue" />
      <Member Id="F:Microsoft.Extensions.CommandLineUtils.CommandOptionType.SingleValue" />
    </Type>
    <Type Name="Microsoft.Extensions.CommandLineUtils.CommandParsingException" Id="T:Microsoft.Extensions.CommandLineUtils.CommandParsingException">
      <Member Id="M:Microsoft.Extensions.CommandLineUtils.CommandParsingException.#ctor(Microsoft.Extensions.CommandLineUtils.CommandLineApplication,System.String)" />
      <Member Id="P:Microsoft.Extensions.CommandLineUtils.CommandParsingException.Command" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Configuration.AzureKeyVault">
    <Type Name="Microsoft.Extensions.Configuration.AzureKeyVault.DefaultKeyVaultSecretManager" Id="T:Microsoft.Extensions.Configuration.AzureKeyVault.DefaultKeyVaultSecretManager">
      <Member Id="M:Microsoft.Extensions.Configuration.AzureKeyVault.DefaultKeyVaultSecretManager.#ctor" />
      <Member Id="M:Microsoft.Extensions.Configuration.AzureKeyVault.DefaultKeyVaultSecretManager.GetKey(Microsoft.Azure.KeyVault.Models.SecretBundle)" />
      <Member Id="M:Microsoft.Extensions.Configuration.AzureKeyVault.DefaultKeyVaultSecretManager.Load(Microsoft.Azure.KeyVault.Models.SecretItem)" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.AzureKeyVault.IKeyVaultSecretManager" Id="T:Microsoft.Extensions.Configuration.AzureKeyVault.IKeyVaultSecretManager">
      <Member Id="M:Microsoft.Extensions.Configuration.AzureKeyVault.IKeyVaultSecretManager.GetKey(Microsoft.Azure.KeyVault.Models.SecretBundle)" />
      <Member Id="M:Microsoft.Extensions.Configuration.AzureKeyVault.IKeyVaultSecretManager.Load(Microsoft.Azure.KeyVault.Models.SecretItem)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Configuration">
    <Type Name="Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions" Id="T:Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions">
      <Member Id="M:Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Extensions.Configuration.AzureKeyVault.IKeyVaultSecretManager)" />
      <Member Id="M:Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.String,System.String,Microsoft.Extensions.Configuration.AzureKeyVault.IKeyVaultSecretManager)" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.CommandLineConfigurationExtensions" Id="T:Microsoft.Extensions.Configuration.CommandLineConfigurationExtensions">
      <Member Id="M:Microsoft.Extensions.Configuration.CommandLineConfigurationExtensions.AddCommandLine(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String[])" />
      <Member Id="M:Microsoft.Extensions.Configuration.CommandLineConfigurationExtensions.AddCommandLine(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String[],System.Collections.Generic.IDictionary{System.String,System.String})" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.ConfigurationBinder" Id="T:Microsoft.Extensions.Configuration.ConfigurationBinder">
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(Microsoft.Extensions.Configuration.IConfiguration,System.Object)" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationBinder.Get(Microsoft.Extensions.Configuration.IConfiguration,System.Type)" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationBinder.Get``1(Microsoft.Extensions.Configuration.IConfiguration)" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String)" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String,System.Object)" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String)" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String,``0)" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.ConfigurationBuilder" Id="T:Microsoft.Extensions.Configuration.ConfigurationBuilder">
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationBuilder.#ctor" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationBuilder.Add(Microsoft.Extensions.Configuration.IConfigurationSource)" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationBuilder.Build" />
      <Member Id="P:Microsoft.Extensions.Configuration.ConfigurationBuilder.Properties" />
      <Member Id="P:Microsoft.Extensions.Configuration.ConfigurationBuilder.Sources" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.ConfigurationExtensions" Id="T:Microsoft.Extensions.Configuration.ConfigurationExtensions">
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationExtensions.AddUserSecrets(Microsoft.Extensions.Configuration.IConfigurationBuilder)" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationExtensions.AddUserSecrets(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Reflection.Assembly)" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationExtensions.AddUserSecrets(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationExtensions.AddUserSecrets``1(Microsoft.Extensions.Configuration.IConfigurationBuilder)" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationExtensions.AsEnumerable(Microsoft.Extensions.Configuration.IConfiguration)" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationExtensions.AsEnumerable(Microsoft.Extensions.Configuration.IConfiguration,System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationExtensions.GetConnectionString(Microsoft.Extensions.Configuration.IConfiguration,System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.ConfigurationKeyComparer" Id="T:Microsoft.Extensions.Configuration.ConfigurationKeyComparer">
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationKeyComparer.#ctor" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationKeyComparer.Compare(System.String,System.String)" />
      <Member Id="P:Microsoft.Extensions.Configuration.ConfigurationKeyComparer.Instance" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.ConfigurationPath" Id="T:Microsoft.Extensions.Configuration.ConfigurationPath">
      <Member Id="F:Microsoft.Extensions.Configuration.ConfigurationPath.KeyDelimiter" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationPath.Combine(System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationPath.Combine(System.String[])" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationPath.GetParentPath(System.String)" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationPath.GetSectionKey(System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.ConfigurationProvider" Id="T:Microsoft.Extensions.Configuration.ConfigurationProvider">
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationProvider.#ctor" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationProvider.GetChildKeys(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationProvider.GetReloadToken" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationProvider.Load" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationProvider.OnReload" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationProvider.Set(System.String,System.String)" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationProvider.TryGet(System.String,System.String@)" />
      <Member Id="P:Microsoft.Extensions.Configuration.ConfigurationProvider.Data" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.ConfigurationReloadToken" Id="T:Microsoft.Extensions.Configuration.ConfigurationReloadToken">
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationReloadToken.#ctor" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationReloadToken.OnReload" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationReloadToken.RegisterChangeCallback(System.Action{System.Object},System.Object)" />
      <Member Id="P:Microsoft.Extensions.Configuration.ConfigurationReloadToken.ActiveChangeCallbacks" />
      <Member Id="P:Microsoft.Extensions.Configuration.ConfigurationReloadToken.HasChanged" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.ConfigurationRoot" Id="T:Microsoft.Extensions.Configuration.ConfigurationRoot">
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationRoot.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.Configuration.IConfigurationProvider})" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationRoot.GetChildren" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationRoot.GetReloadToken" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationRoot.GetSection(System.String)" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationRoot.Reload" />
      <Member Id="P:Microsoft.Extensions.Configuration.ConfigurationRoot.Item(System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.ConfigurationSection" Id="T:Microsoft.Extensions.Configuration.ConfigurationSection">
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationSection.#ctor(Microsoft.Extensions.Configuration.ConfigurationRoot,System.String)" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationSection.GetChildren" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationSection.GetReloadToken" />
      <Member Id="M:Microsoft.Extensions.Configuration.ConfigurationSection.GetSection(System.String)" />
      <Member Id="P:Microsoft.Extensions.Configuration.ConfigurationSection.Item(System.String)" />
      <Member Id="P:Microsoft.Extensions.Configuration.ConfigurationSection.Key" />
      <Member Id="P:Microsoft.Extensions.Configuration.ConfigurationSection.Path" />
      <Member Id="P:Microsoft.Extensions.Configuration.ConfigurationSection.Value" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.EnvironmentVariablesExtensions" Id="T:Microsoft.Extensions.Configuration.EnvironmentVariablesExtensions">
      <Member Id="M:Microsoft.Extensions.Configuration.EnvironmentVariablesExtensions.AddEnvironmentVariables(Microsoft.Extensions.Configuration.IConfigurationBuilder)" />
      <Member Id="M:Microsoft.Extensions.Configuration.EnvironmentVariablesExtensions.AddEnvironmentVariables(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.FileConfigurationExtensions" Id="T:Microsoft.Extensions.Configuration.FileConfigurationExtensions">
      <Member Id="M:Microsoft.Extensions.Configuration.FileConfigurationExtensions.GetFileLoadExceptionHandler(Microsoft.Extensions.Configuration.IConfigurationBuilder)" />
      <Member Id="M:Microsoft.Extensions.Configuration.FileConfigurationExtensions.GetFileProvider(Microsoft.Extensions.Configuration.IConfigurationBuilder)" />
      <Member Id="M:Microsoft.Extensions.Configuration.FileConfigurationExtensions.SetBasePath(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)" />
      <Member Id="M:Microsoft.Extensions.Configuration.FileConfigurationExtensions.SetFileLoadExceptionHandler(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Action{Microsoft.Extensions.Configuration.FileLoadExceptionContext})" />
      <Member Id="M:Microsoft.Extensions.Configuration.FileConfigurationExtensions.SetFileProvider(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.FileProviders.IFileProvider)" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.FileConfigurationProvider" Id="T:Microsoft.Extensions.Configuration.FileConfigurationProvider">
      <Member Id="M:Microsoft.Extensions.Configuration.FileConfigurationProvider.#ctor(Microsoft.Extensions.Configuration.FileConfigurationSource)" />
      <Member Id="M:Microsoft.Extensions.Configuration.FileConfigurationProvider.Load" />
      <Member Id="M:Microsoft.Extensions.Configuration.FileConfigurationProvider.Load(System.IO.Stream)" />
      <Member Id="P:Microsoft.Extensions.Configuration.FileConfigurationProvider.Source" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.FileConfigurationSource" Id="T:Microsoft.Extensions.Configuration.FileConfigurationSource">
      <Member Id="M:Microsoft.Extensions.Configuration.FileConfigurationSource.#ctor" />
      <Member Id="M:Microsoft.Extensions.Configuration.FileConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)" />
      <Member Id="M:Microsoft.Extensions.Configuration.FileConfigurationSource.EnsureDefaults(Microsoft.Extensions.Configuration.IConfigurationBuilder)" />
      <Member Id="M:Microsoft.Extensions.Configuration.FileConfigurationSource.ResolveFileProvider" />
      <Member Id="P:Microsoft.Extensions.Configuration.FileConfigurationSource.FileProvider" />
      <Member Id="P:Microsoft.Extensions.Configuration.FileConfigurationSource.OnLoadException" />
      <Member Id="P:Microsoft.Extensions.Configuration.FileConfigurationSource.Optional" />
      <Member Id="P:Microsoft.Extensions.Configuration.FileConfigurationSource.Path" />
      <Member Id="P:Microsoft.Extensions.Configuration.FileConfigurationSource.ReloadDelay" />
      <Member Id="P:Microsoft.Extensions.Configuration.FileConfigurationSource.ReloadOnChange" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.FileLoadExceptionContext" Id="T:Microsoft.Extensions.Configuration.FileLoadExceptionContext">
      <Member Id="M:Microsoft.Extensions.Configuration.FileLoadExceptionContext.#ctor" />
      <Member Id="P:Microsoft.Extensions.Configuration.FileLoadExceptionContext.Exception" />
      <Member Id="P:Microsoft.Extensions.Configuration.FileLoadExceptionContext.Ignore" />
      <Member Id="P:Microsoft.Extensions.Configuration.FileLoadExceptionContext.Provider" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.IConfiguration" Id="T:Microsoft.Extensions.Configuration.IConfiguration">
      <Member Id="M:Microsoft.Extensions.Configuration.IConfiguration.GetChildren" />
      <Member Id="M:Microsoft.Extensions.Configuration.IConfiguration.GetReloadToken" />
      <Member Id="M:Microsoft.Extensions.Configuration.IConfiguration.GetSection(System.String)" />
      <Member Id="P:Microsoft.Extensions.Configuration.IConfiguration.Item(System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.IConfigurationBuilder" Id="T:Microsoft.Extensions.Configuration.IConfigurationBuilder">
      <Member Id="M:Microsoft.Extensions.Configuration.IConfigurationBuilder.Add(Microsoft.Extensions.Configuration.IConfigurationSource)" />
      <Member Id="M:Microsoft.Extensions.Configuration.IConfigurationBuilder.Build" />
      <Member Id="P:Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties" />
      <Member Id="P:Microsoft.Extensions.Configuration.IConfigurationBuilder.Sources" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.IConfigurationProvider" Id="T:Microsoft.Extensions.Configuration.IConfigurationProvider">
      <Member Id="M:Microsoft.Extensions.Configuration.IConfigurationProvider.GetChildKeys(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <Member Id="M:Microsoft.Extensions.Configuration.IConfigurationProvider.GetReloadToken" />
      <Member Id="M:Microsoft.Extensions.Configuration.IConfigurationProvider.Load" />
      <Member Id="M:Microsoft.Extensions.Configuration.IConfigurationProvider.Set(System.String,System.String)" />
      <Member Id="M:Microsoft.Extensions.Configuration.IConfigurationProvider.TryGet(System.String,System.String@)" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.IConfigurationRoot" Id="T:Microsoft.Extensions.Configuration.IConfigurationRoot">
      <Member Id="M:Microsoft.Extensions.Configuration.IConfigurationRoot.Reload" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.IConfigurationSection" Id="T:Microsoft.Extensions.Configuration.IConfigurationSection">
      <Member Id="P:Microsoft.Extensions.Configuration.IConfigurationSection.Key" />
      <Member Id="P:Microsoft.Extensions.Configuration.IConfigurationSection.Path" />
      <Member Id="P:Microsoft.Extensions.Configuration.IConfigurationSection.Value" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.IConfigurationSource" Id="T:Microsoft.Extensions.Configuration.IConfigurationSource">
      <Member Id="M:Microsoft.Extensions.Configuration.IConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.IniConfigurationExtensions" Id="T:Microsoft.Extensions.Configuration.IniConfigurationExtensions">
      <Member Id="M:Microsoft.Extensions.Configuration.IniConfigurationExtensions.AddIniFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.FileProviders.IFileProvider,System.String,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Configuration.IniConfigurationExtensions.AddIniFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)" />
      <Member Id="M:Microsoft.Extensions.Configuration.IniConfigurationExtensions.AddIniFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Configuration.IniConfigurationExtensions.AddIniFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean,System.Boolean)" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.JsonConfigurationExtensions" Id="T:Microsoft.Extensions.Configuration.JsonConfigurationExtensions">
      <Member Id="M:Microsoft.Extensions.Configuration.JsonConfigurationExtensions.AddJsonFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.FileProviders.IFileProvider,System.String,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Configuration.JsonConfigurationExtensions.AddJsonFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)" />
      <Member Id="M:Microsoft.Extensions.Configuration.JsonConfigurationExtensions.AddJsonFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Configuration.JsonConfigurationExtensions.AddJsonFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean,System.Boolean)" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.MemoryConfigurationBuilderExtensions" Id="T:Microsoft.Extensions.Configuration.MemoryConfigurationBuilderExtensions">
      <Member Id="M:Microsoft.Extensions.Configuration.MemoryConfigurationBuilderExtensions.AddInMemoryCollection(Microsoft.Extensions.Configuration.IConfigurationBuilder)" />
      <Member Id="M:Microsoft.Extensions.Configuration.MemoryConfigurationBuilderExtensions.AddInMemoryCollection(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.XmlConfigurationExtensions" Id="T:Microsoft.Extensions.Configuration.XmlConfigurationExtensions">
      <Member Id="M:Microsoft.Extensions.Configuration.XmlConfigurationExtensions.AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.FileProviders.IFileProvider,System.String,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Configuration.XmlConfigurationExtensions.AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)" />
      <Member Id="M:Microsoft.Extensions.Configuration.XmlConfigurationExtensions.AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Configuration.XmlConfigurationExtensions.AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean,System.Boolean)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Configuration.CommandLine">
    <Type Name="Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider" Id="T:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider">
      <Member Id="M:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Load" />
      <Member Id="P:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Args" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource" Id="T:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource">
      <Member Id="M:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.#ctor" />
      <Member Id="M:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)" />
      <Member Id="P:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Args" />
      <Member Id="P:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.SwitchMappings" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Configuration.EnvironmentVariables">
    <Type Name="Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationProvider" Id="T:Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationProvider">
      <Member Id="M:Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationProvider.#ctor" />
      <Member Id="M:Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationProvider.#ctor(System.String)" />
      <Member Id="M:Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationProvider.Load" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationSource" Id="T:Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationSource">
      <Member Id="M:Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationSource.#ctor" />
      <Member Id="M:Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)" />
      <Member Id="P:Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationSource.Prefix" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Configuration.Ini">
    <Type Name="Microsoft.Extensions.Configuration.Ini.IniConfigurationProvider" Id="T:Microsoft.Extensions.Configuration.Ini.IniConfigurationProvider">
      <Member Id="M:Microsoft.Extensions.Configuration.Ini.IniConfigurationProvider.#ctor(Microsoft.Extensions.Configuration.Ini.IniConfigurationSource)" />
      <Member Id="M:Microsoft.Extensions.Configuration.Ini.IniConfigurationProvider.Load(System.IO.Stream)" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.Ini.IniConfigurationSource" Id="T:Microsoft.Extensions.Configuration.Ini.IniConfigurationSource">
      <Member Id="M:Microsoft.Extensions.Configuration.Ini.IniConfigurationSource.#ctor" />
      <Member Id="M:Microsoft.Extensions.Configuration.Ini.IniConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Configuration.Json">
    <Type Name="Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider" Id="T:Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider">
      <Member Id="M:Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider.#ctor(Microsoft.Extensions.Configuration.Json.JsonConfigurationSource)" />
      <Member Id="M:Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider.Load(System.IO.Stream)" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.Json.JsonConfigurationSource" Id="T:Microsoft.Extensions.Configuration.Json.JsonConfigurationSource">
      <Member Id="M:Microsoft.Extensions.Configuration.Json.JsonConfigurationSource.#ctor" />
      <Member Id="M:Microsoft.Extensions.Configuration.Json.JsonConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Configuration.Memory">
    <Type Name="Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider" Id="T:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider">
      <Member Id="M:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.#ctor(Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource)" />
      <Member Id="M:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.Add(System.String,System.String)" />
      <Member Id="M:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.GetEnumerator" />
      <Member Id="M:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.System#Collections#IEnumerable#GetEnumerator" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource" Id="T:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource">
      <Member Id="M:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource.#ctor" />
      <Member Id="M:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)" />
      <Member Id="P:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource.InitialData" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Configuration.UserSecrets">
    <Type Name="Microsoft.Extensions.Configuration.UserSecrets.PathHelper" Id="T:Microsoft.Extensions.Configuration.UserSecrets.PathHelper">
      <Member Id="M:Microsoft.Extensions.Configuration.UserSecrets.PathHelper.#ctor" />
      <Member Id="M:Microsoft.Extensions.Configuration.UserSecrets.PathHelper.GetSecretsPath(Microsoft.Extensions.FileProviders.IFileProvider)" />
      <Member Id="M:Microsoft.Extensions.Configuration.UserSecrets.PathHelper.GetSecretsPath(System.String)" />
      <Member Id="M:Microsoft.Extensions.Configuration.UserSecrets.PathHelper.GetSecretsPathFromSecretsId(System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" Id="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute">
      <Member Id="M:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute.#ctor(System.String)" />
      <Member Id="P:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute.UserSecretsId" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Configuration.Xml">
    <Type Name="Microsoft.Extensions.Configuration.Xml.XmlConfigurationProvider" Id="T:Microsoft.Extensions.Configuration.Xml.XmlConfigurationProvider">
      <Member Id="M:Microsoft.Extensions.Configuration.Xml.XmlConfigurationProvider.#ctor(Microsoft.Extensions.Configuration.Xml.XmlConfigurationSource)" />
      <Member Id="M:Microsoft.Extensions.Configuration.Xml.XmlConfigurationProvider.Load(System.IO.Stream)" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.Xml.XmlConfigurationSource" Id="T:Microsoft.Extensions.Configuration.Xml.XmlConfigurationSource">
      <Member Id="M:Microsoft.Extensions.Configuration.Xml.XmlConfigurationSource.#ctor" />
      <Member Id="M:Microsoft.Extensions.Configuration.Xml.XmlConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor" Id="T:Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor">
      <Member Id="F:Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor.Instance" />
      <Member Id="M:Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor.#ctor" />
      <Member Id="M:Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor.CreateDecryptingXmlReader(System.IO.Stream,System.Xml.XmlReaderSettings)" />
      <Member Id="M:Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor.DecryptDocumentAndCreateXmlReader(System.Xml.XmlDocument)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.DependencyInjection">
    <Type Name="Microsoft.Extensions.DependencyInjection.ActivatorUtilities" Id="T:Microsoft.Extensions.DependencyInjection.ActivatorUtilities">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory(System.Type,System.Type[])" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateInstance(System.IServiceProvider,System.Type,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateInstance``1(System.IServiceProvider,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetServiceOrCreateInstance(System.IServiceProvider,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetServiceOrCreateInstance``1(System.IServiceProvider)" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory" Id="T:Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.#ctor" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.EncoderServiceCollectionExtensions" Id="T:Microsoft.Extensions.DependencyInjection.EncoderServiceCollectionExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.EncoderServiceCollectionExtensions.AddWebEncoders(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.EncoderServiceCollectionExtensions.AddWebEncoders(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.WebEncoders.WebEncoderOptions})" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.IServiceCollection" Id="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />
    <Type Name="Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1" Id="T:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateServiceProvider(`0)" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.IServiceScope" Id="T:Microsoft.Extensions.DependencyInjection.IServiceScope">
      <Member Id="P:Microsoft.Extensions.DependencyInjection.IServiceScope.ServiceProvider" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.IServiceScopeFactory" Id="T:Microsoft.Extensions.DependencyInjection.IServiceScopeFactory">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.IServiceScopeFactory.CreateScope" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ISupportRequiredService" Id="T:Microsoft.Extensions.DependencyInjection.ISupportRequiredService">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ISupportRequiredService.GetRequiredService(System.Type)" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.LocalizationServiceCollectionExtensions" Id="T:Microsoft.Extensions.DependencyInjection.LocalizationServiceCollectionExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.LocalizationServiceCollectionExtensions.AddLocalization(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.LocalizationServiceCollectionExtensions.AddLocalization(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Localization.LocalizationOptions})" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.LoggingServiceCollectionExtensions" Id="T:Microsoft.Extensions.DependencyInjection.LoggingServiceCollectionExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.LoggingServiceCollectionExtensions.AddLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.MemoryCacheServiceCollectionExtensions" Id="T:Microsoft.Extensions.DependencyInjection.MemoryCacheServiceCollectionExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.MemoryCacheServiceCollectionExtensions.AddDistributedMemoryCache(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.MemoryCacheServiceCollectionExtensions.AddMemoryCache(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.MemoryCacheServiceCollectionExtensions.AddMemoryCache(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Caching.Memory.MemoryCacheOptions})" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ObjectFactory" Id="T:Microsoft.Extensions.DependencyInjection.ObjectFactory" />
    <Type Name="Microsoft.Extensions.DependencyInjection.OptionsConfigurationServiceCollectionExtensions" Id="T:Microsoft.Extensions.DependencyInjection.OptionsConfigurationServiceCollectionExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.OptionsConfigurationServiceCollectionExtensions.Configure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions" Id="T:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.AddOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.Configure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{``0})" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.RedisCacheServiceCollectionExtensions" Id="T:Microsoft.Extensions.DependencyInjection.RedisCacheServiceCollectionExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.RedisCacheServiceCollectionExtensions.AddDistributedRedisCache(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Caching.Redis.RedisCacheOptions})" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ServiceCollection" Id="T:Microsoft.Extensions.DependencyInjection.ServiceCollection">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.#ctor" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.Clear" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.Contains(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.CopyTo(Microsoft.Extensions.DependencyInjection.ServiceDescriptor[],System.Int32)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.GetEnumerator" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.IndexOf(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.Insert(System.Int32,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.Remove(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.RemoveAt(System.Int32)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.System#Collections#Generic#ICollection&lt;Microsoft#Extensions#DependencyInjection#ServiceDescriptor&gt;#Add(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceCollection.Count" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceCollection.IsReadOnly" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceCollection.Item(System.Int32)" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions" Id="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean)" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions" Id="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``1})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,``0)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``1})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``1})" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ServiceDescriptor" Id="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.#ctor(System.Type,System.Func{System.IServiceProvider,System.Object},Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.#ctor(System.Type,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.#ctor(System.Type,System.Type,Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Describe(System.Type,System.Func{System.IServiceProvider,System.Object},Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Describe(System.Type,System.Type,Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Scoped(System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Scoped(System.Type,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Scoped``1(System.Func{System.IServiceProvider,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Scoped``2" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Scoped``2(System.Func{System.IServiceProvider,``1})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton(System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton(System.Type,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton(System.Type,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton``1(``0)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton``1(System.Func{System.IServiceProvider,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton``2" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton``2(System.Func{System.IServiceProvider,``1})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Transient(System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Transient(System.Type,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Transient``1(System.Func{System.IServiceProvider,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Transient``2" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Transient``2(System.Func{System.IServiceProvider,``1})" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ImplementationFactory" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ImplementationInstance" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ImplementationType" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Lifetime" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ServiceType" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ServiceLifetime" Id="T:Microsoft.Extensions.DependencyInjection.ServiceLifetime">
      <Member Id="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />
      <Member Id="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />
      <Member Id="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions" Id="T:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.CreateScope(System.IServiceProvider)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(System.IServiceProvider,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService``1(System.IServiceProvider)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService``1(System.IServiceProvider)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetServices(System.IServiceProvider,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetServices``1(System.IServiceProvider)" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.SqlServerCachingServicesExtensions" Id="T:Microsoft.Extensions.DependencyInjection.SqlServerCachingServicesExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.SqlServerCachingServicesExtensions.AddDistributedSqlServerCache(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions})" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.DependencyInjection.Extensions">
    <Type Name="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions" Id="T:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Add(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Add(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyInjection.ServiceDescriptor})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Replace(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAdd(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAdd(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyInjection.ServiceDescriptor})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyInjection.ServiceDescriptor})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,``0)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.DiagnosticAdapter">
    <Type Name="Microsoft.Extensions.DiagnosticAdapter.DiagnosticNameAttribute" Id="T:Microsoft.Extensions.DiagnosticAdapter.DiagnosticNameAttribute">
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticNameAttribute.#ctor(System.String)" />
      <Member Id="P:Microsoft.Extensions.DiagnosticAdapter.DiagnosticNameAttribute.Name" />
    </Type>
    <Type Name="Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter" Id="T:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter">
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor(System.Object)" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor(System.Object,System.Func{System.String,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor(System.Object,System.Func{System.String,System.Boolean},Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter)" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.IsEnabled(System.String)" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.System#IObserver&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#OnCompleted" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.System#IObserver&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#OnError(System.Exception)" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.System#IObserver&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#OnNext(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.Write(System.String,System.Object)" />
    </Type>
    <Type Name="Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter" Id="T:Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter">
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter.Adapt(System.Reflection.MethodInfo,System.Type)" />
    </Type>
    <Type Name="Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapter" Id="T:Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapter">
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapter.#ctor" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapter.Adapt(System.Reflection.MethodInfo,System.Type)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.DiagnosticAdapter.Infrastructure">
    <Type Name="Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxy" Id="T:Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxy">
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxy.Upwrap``1" />
    </Type>
    <Type Name="Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory" Id="T:Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory">
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory.CreateProxy``1(System.Object)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.DiagnosticAdapter.Internal">
    <Type Name="Microsoft.Extensions.DiagnosticAdapter.Internal.InvalidProxyOperationException" Id="T:Microsoft.Extensions.DiagnosticAdapter.Internal.InvalidProxyOperationException">
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.InvalidProxyOperationException.#ctor(System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyAssembly" Id="T:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyAssembly">
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyAssembly.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])" />
    </Type>
    <Type Name="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase" Id="T:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase">
      <Member Id="F:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase.WrappedType" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase.#ctor(System.Type)" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase.Upwrap``1" />
      <Member Id="P:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase.UnderlyingInstanceAsObject" />
    </Type>
    <Type Name="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase`1" Id="T:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase`1">
      <Member Id="F:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase`1.Instance" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase`1.#ctor(`0)" />
      <Member Id="P:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase`1.UnderlyingInstance" />
      <Member Id="P:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase`1.UnderlyingInstanceAsObject" />
    </Type>
    <Type Name="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable`2" Id="T:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable`2">
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable`2.#ctor(System.Collections.Generic.IEnumerable{`0},System.Type)" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable`2.GetEnumerator" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable`2.System#Collections#IEnumerable#GetEnumerator" />
    </Type>
    <Type Name="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable`2/ProxyEnumerator" Id="T:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable`2.ProxyEnumerator">
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable`2.ProxyEnumerator.#ctor(System.Collections.Generic.IEnumerator{`0},System.Type)" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable`2.ProxyEnumerator.Dispose" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable`2.ProxyEnumerator.MoveNext" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable`2.ProxyEnumerator.Reset" />
      <Member Id="P:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable`2.ProxyEnumerator.Current" />
      <Member Id="P:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable`2.ProxyEnumerator.System#Collections#IEnumerator#Current" />
    </Type>
    <Type Name="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyFactory" Id="T:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyFactory">
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyFactory.#ctor" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyFactory.CreateProxy``1(System.Object)" />
    </Type>
    <Type Name="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList`2" Id="T:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList`2">
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList`2.#ctor(System.Collections.Generic.IList{`0})" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList`2.#ctor(System.Collections.Generic.IList{`0},System.Type)" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList`2.GetEnumerator" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList`2.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList`2.Count" />
      <Member Id="P:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList`2.Item(System.Int32)" />
    </Type>
    <Type Name="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyMethodEmitter" Id="T:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyMethodEmitter">
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyMethodEmitter.CreateProxyMethod(System.Reflection.MethodInfo,System.Type)" />
    </Type>
    <Type Name="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCache" Id="T:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCache">
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCache.#ctor" />
    </Type>
    <Type Name="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult" Id="T:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult">
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult.#ctor" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult.FromError(System.Tuple{System.Type,System.Type},System.String)" />
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult.FromType(System.Tuple{System.Type,System.Type},System.Type,System.Reflection.ConstructorInfo)" />
      <Member Id="P:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult.Constructor" />
      <Member Id="P:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult.Error" />
      <Member Id="P:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult.IsError" />
      <Member Id="P:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult.Key" />
      <Member Id="P:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult.Type" />
    </Type>
    <Type Name="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeEmitter" Id="T:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeEmitter">
      <Member Id="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeEmitter.GetProxyType(Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCache,System.Type,System.Type)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.FileProviders.Composite">
    <Type Name="Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents" Id="T:Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents">
      <Member Id="M:Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.FileProviders.IFileProvider},System.String)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.GetEnumerator" />
      <Member Id="M:Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.Exists" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.FileProviders">
    <Type Name="Microsoft.Extensions.FileProviders.CompositeFileProvider" Id="T:Microsoft.Extensions.FileProviders.CompositeFileProvider">
      <Member Id="M:Microsoft.Extensions.FileProviders.CompositeFileProvider.#ctor(Microsoft.Extensions.FileProviders.IFileProvider[])" />
      <Member Id="M:Microsoft.Extensions.FileProviders.CompositeFileProvider.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileProvider})" />
      <Member Id="M:Microsoft.Extensions.FileProviders.CompositeFileProvider.GetDirectoryContents(System.String)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.CompositeFileProvider.GetFileInfo(System.String)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.CompositeFileProvider.Watch(System.String)" />
      <Member Id="P:Microsoft.Extensions.FileProviders.CompositeFileProvider.FileProviders" />
    </Type>
    <Type Name="Microsoft.Extensions.FileProviders.EmbeddedFileProvider" Id="T:Microsoft.Extensions.FileProviders.EmbeddedFileProvider">
      <Member Id="M:Microsoft.Extensions.FileProviders.EmbeddedFileProvider.#ctor(System.Reflection.Assembly)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.EmbeddedFileProvider.#ctor(System.Reflection.Assembly,System.String)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.EmbeddedFileProvider.GetDirectoryContents(System.String)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.EmbeddedFileProvider.GetFileInfo(System.String)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.EmbeddedFileProvider.Watch(System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.FileProviders.FileSystemInfoHelper" Id="T:Microsoft.Extensions.FileProviders.FileSystemInfoHelper">
      <Member Id="M:Microsoft.Extensions.FileProviders.FileSystemInfoHelper.#ctor" />
    </Type>
    <Type Name="Microsoft.Extensions.FileProviders.IDirectoryContents" Id="T:Microsoft.Extensions.FileProviders.IDirectoryContents">
      <Member Id="P:Microsoft.Extensions.FileProviders.IDirectoryContents.Exists" />
    </Type>
    <Type Name="Microsoft.Extensions.FileProviders.IFileInfo" Id="T:Microsoft.Extensions.FileProviders.IFileInfo">
      <Member Id="M:Microsoft.Extensions.FileProviders.IFileInfo.CreateReadStream" />
      <Member Id="P:Microsoft.Extensions.FileProviders.IFileInfo.Exists" />
      <Member Id="P:Microsoft.Extensions.FileProviders.IFileInfo.IsDirectory" />
      <Member Id="P:Microsoft.Extensions.FileProviders.IFileInfo.LastModified" />
      <Member Id="P:Microsoft.Extensions.FileProviders.IFileInfo.Length" />
      <Member Id="P:Microsoft.Extensions.FileProviders.IFileInfo.Name" />
      <Member Id="P:Microsoft.Extensions.FileProviders.IFileInfo.PhysicalPath" />
    </Type>
    <Type Name="Microsoft.Extensions.FileProviders.IFileProvider" Id="T:Microsoft.Extensions.FileProviders.IFileProvider">
      <Member Id="M:Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.IFileProvider.GetFileInfo(System.String)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.IFileProvider.Watch(System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.FileProviders.NotFoundDirectoryContents" Id="T:Microsoft.Extensions.FileProviders.NotFoundDirectoryContents">
      <Member Id="M:Microsoft.Extensions.FileProviders.NotFoundDirectoryContents.#ctor" />
      <Member Id="M:Microsoft.Extensions.FileProviders.NotFoundDirectoryContents.GetEnumerator" />
      <Member Id="M:Microsoft.Extensions.FileProviders.NotFoundDirectoryContents.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:Microsoft.Extensions.FileProviders.NotFoundDirectoryContents.Exists" />
      <Member Id="P:Microsoft.Extensions.FileProviders.NotFoundDirectoryContents.Singleton" />
    </Type>
    <Type Name="Microsoft.Extensions.FileProviders.NotFoundFileInfo" Id="T:Microsoft.Extensions.FileProviders.NotFoundFileInfo">
      <Member Id="M:Microsoft.Extensions.FileProviders.NotFoundFileInfo.#ctor(System.String)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.NotFoundFileInfo.CreateReadStream" />
      <Member Id="P:Microsoft.Extensions.FileProviders.NotFoundFileInfo.Exists" />
      <Member Id="P:Microsoft.Extensions.FileProviders.NotFoundFileInfo.IsDirectory" />
      <Member Id="P:Microsoft.Extensions.FileProviders.NotFoundFileInfo.LastModified" />
      <Member Id="P:Microsoft.Extensions.FileProviders.NotFoundFileInfo.Length" />
      <Member Id="P:Microsoft.Extensions.FileProviders.NotFoundFileInfo.Name" />
      <Member Id="P:Microsoft.Extensions.FileProviders.NotFoundFileInfo.PhysicalPath" />
    </Type>
    <Type Name="Microsoft.Extensions.FileProviders.NullChangeToken" Id="T:Microsoft.Extensions.FileProviders.NullChangeToken">
      <Member Id="M:Microsoft.Extensions.FileProviders.NullChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)" />
      <Member Id="P:Microsoft.Extensions.FileProviders.NullChangeToken.ActiveChangeCallbacks" />
      <Member Id="P:Microsoft.Extensions.FileProviders.NullChangeToken.HasChanged" />
      <Member Id="P:Microsoft.Extensions.FileProviders.NullChangeToken.Singleton" />
    </Type>
    <Type Name="Microsoft.Extensions.FileProviders.NullFileProvider" Id="T:Microsoft.Extensions.FileProviders.NullFileProvider">
      <Member Id="M:Microsoft.Extensions.FileProviders.NullFileProvider.#ctor" />
      <Member Id="M:Microsoft.Extensions.FileProviders.NullFileProvider.GetDirectoryContents(System.String)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.NullFileProvider.GetFileInfo(System.String)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.NullFileProvider.Watch(System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.FileProviders.PhysicalFileProvider" Id="T:Microsoft.Extensions.FileProviders.PhysicalFileProvider">
      <Member Id="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.#ctor(System.String)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.Dispose" />
      <Member Id="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.GetDirectoryContents(System.String)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.GetFileInfo(System.String)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.Watch(System.String)" />
      <Member Id="P:Microsoft.Extensions.FileProviders.PhysicalFileProvider.Root" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.FileProviders.Embedded">
    <Type Name="Microsoft.Extensions.FileProviders.Embedded.EmbeddedResourceFileInfo" Id="T:Microsoft.Extensions.FileProviders.Embedded.EmbeddedResourceFileInfo">
      <Member Id="M:Microsoft.Extensions.FileProviders.Embedded.EmbeddedResourceFileInfo.#ctor(System.Reflection.Assembly,System.String,System.String,System.DateTimeOffset)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.Embedded.EmbeddedResourceFileInfo.CreateReadStream" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Embedded.EmbeddedResourceFileInfo.Exists" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Embedded.EmbeddedResourceFileInfo.IsDirectory" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Embedded.EmbeddedResourceFileInfo.LastModified" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Embedded.EmbeddedResourceFileInfo.Length" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Embedded.EmbeddedResourceFileInfo.Name" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Embedded.EmbeddedResourceFileInfo.PhysicalPath" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.FileProviders.Internal">
    <Type Name="Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents" Id="T:Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents">
      <Member Id="M:Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents.#ctor(System.String)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents.GetEnumerator" />
      <Member Id="M:Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents.Exists" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.FileProviders.Physical">
    <Type Name="Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo" Id="T:Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo">
      <Member Id="M:Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo.#ctor(System.IO.DirectoryInfo)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo.CreateReadStream" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo.Exists" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo.IsDirectory" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo.LastModified" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo.Length" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo.Name" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo.PhysicalPath" />
    </Type>
    <Type Name="Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo" Id="T:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo">
      <Member Id="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.#ctor(System.IO.FileInfo)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.CreateReadStream" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Exists" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.IsDirectory" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.LastModified" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Length" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Name" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.PhysicalPath" />
    </Type>
    <Type Name="Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher" Id="T:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher">
      <Member Id="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.#ctor(System.String,System.IO.FileSystemWatcher,System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.CreateFileChangeToken(System.String)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.Dispose" />
    </Type>
    <Type Name="Microsoft.Extensions.FileProviders.Physical.PollingFileChangeToken" Id="T:Microsoft.Extensions.FileProviders.Physical.PollingFileChangeToken">
      <Member Id="M:Microsoft.Extensions.FileProviders.Physical.PollingFileChangeToken.#ctor(System.IO.FileInfo)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.Physical.PollingFileChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Physical.PollingFileChangeToken.ActiveChangeCallbacks" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Physical.PollingFileChangeToken.HasChanged" />
    </Type>
    <Type Name="Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken" Id="T:Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken">
      <Member Id="M:Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken.GetLastWriteUtc(System.String)" />
      <Member Id="M:Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken.Microsoft#Extensions#Primitives#IChangeToken#RegisterChangeCallback(System.Action{System.Object},System.Object)" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken.ActiveChangeCallbacks" />
      <Member Id="P:Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken.HasChanged" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.FileSystemGlobbing.Abstractions">
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase" Id="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.#ctor" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.EnumerateFileSystemInfos" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetDirectory(System.String)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetFile(System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper" Id="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.#ctor(System.IO.DirectoryInfo,System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.EnumerateFileSystemInfos" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.GetDirectory(System.String)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.GetFile(System.String)" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.FullName" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.Name" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.ParentDirectory" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase" Id="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase.#ctor" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoWrapper" Id="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoWrapper">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoWrapper.#ctor(System.IO.FileInfo)" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoWrapper.FullName" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoWrapper.Name" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoWrapper.ParentDirectory" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase" Id="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.#ctor" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.FullName" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.Name" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.ParentDirectory" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.FileSystemGlobbing">
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch" Id="T:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.Equals(Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.Equals(System.Object)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.GetHashCode" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.Path" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.Stem" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo" Id="T:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.EnumerateFileSystemInfos" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.GetDirectory(System.String)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.GetFile(System.String)" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.FullName" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.Name" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.ParentDirectory" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Matcher" Id="T:Microsoft.Extensions.FileSystemGlobbing.Matcher">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.#ctor" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.#ctor(System.StringComparison)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.AddExclude(System.String)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.AddInclude(System.String)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.Execute(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions" Id="T:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddExcludePatterns(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String}[])" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddIncludePatterns(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String}[])" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.GetResultsInFullPath(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String,System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult" Id="T:Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch})" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch},System.Boolean)" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult.Files" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult.HasMatches" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.FileSystemGlobbing.Internal">
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.ILinearPattern" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.ILinearPattern">
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.ILinearPattern.Segments" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.IPathSegment" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.IPathSegment">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.IPathSegment.Match(System.String)" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.IPathSegment.CanProduceStem" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.IPattern" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.IPattern">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.IPattern.CreatePatternContextForExclude" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.IPattern.CreatePatternContextForInclude" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.IPatternContext" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.IPatternContext">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.IPatternContext.Declare(System.Action{Microsoft.Extensions.FileSystemGlobbing.Internal.IPathSegment,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.IPatternContext.PopDirectory" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.IPatternContext.PushDirectory(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.IPatternContext.Test(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.IPatternContext.Test(Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase)" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.IRaggedPattern" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.IRaggedPattern">
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.IRaggedPattern.Contains" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.IRaggedPattern.EndsWith" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.IRaggedPattern.Segments" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.IRaggedPattern.StartsWith" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.MatcherContext" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.MatcherContext">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.MatcherContext.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileSystemGlobbing.Internal.IPattern},System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileSystemGlobbing.Internal.IPattern},Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase,System.StringComparison)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.MatcherContext.Execute" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.PatternTestResult" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternTestResult">
      <Member Id="F:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternTestResult.Failed" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternTestResult.Success(System.String)" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternTestResult.IsSuccessful" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternTestResult.Stem" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments">
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.CurrentPathSegment" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.CurrentPathSegment">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.CurrentPathSegment.#ctor" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.CurrentPathSegment.Match(System.String)" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.CurrentPathSegment.CanProduceStem" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.LiteralPathSegment" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.LiteralPathSegment">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.LiteralPathSegment.#ctor(System.String,System.StringComparison)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.LiteralPathSegment.Equals(System.Object)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.LiteralPathSegment.GetHashCode" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.LiteralPathSegment.Match(System.String)" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.LiteralPathSegment.CanProduceStem" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.LiteralPathSegment.Value" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.ParentPathSegment" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.ParentPathSegment">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.ParentPathSegment.#ctor" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.ParentPathSegment.Match(System.String)" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.ParentPathSegment.CanProduceStem" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.RecursiveWildcardSegment" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.RecursiveWildcardSegment">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.RecursiveWildcardSegment.#ctor" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.RecursiveWildcardSegment.Match(System.String)" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.RecursiveWildcardSegment.CanProduceStem" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.WildcardPathSegment" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.WildcardPathSegment">
      <Member Id="F:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.WildcardPathSegment.MatchAll" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.WildcardPathSegment.#ctor(System.String,System.Collections.Generic.List{System.String},System.String,System.StringComparison)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.WildcardPathSegment.Match(System.String)" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.WildcardPathSegment.BeginsWith" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.WildcardPathSegment.CanProduceStem" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.WildcardPathSegment.Contains" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.WildcardPathSegment.EndsWith" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts">
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContext`1" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContext`1">
      <Member Id="F:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContext`1.Frame" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContext`1.#ctor" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContext`1.Declare(System.Action{Microsoft.Extensions.FileSystemGlobbing.Internal.IPathSegment,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContext`1.IsStackEmpty" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContext`1.PopDirectory" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContext`1.PushDataFrame(`0)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContext`1.PushDirectory(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContext`1.Test(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContext`1.Test(Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase)" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinear" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinear">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinear.#ctor(Microsoft.Extensions.FileSystemGlobbing.Internal.ILinearPattern)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinear.CalculateStem(Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinear.IsLastSegment" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinear.PushDirectory(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinear.Test(Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinear.TestMatchingSegment(System.String)" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinear.Pattern" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinear/FrameData" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinear.FrameData">
      <Member Id="F:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinear.FrameData.InStem" />
      <Member Id="F:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinear.FrameData.IsNotApplicable" />
      <Member Id="F:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinear.FrameData.SegmentIndex" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinear.FrameData.Stem" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinear.FrameData.StemItems" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinearExclude" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinearExclude">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinearExclude.#ctor(Microsoft.Extensions.FileSystemGlobbing.Internal.ILinearPattern)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinearExclude.Test(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinearInclude" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinearInclude">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinearInclude.#ctor(Microsoft.Extensions.FileSystemGlobbing.Internal.ILinearPattern)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinearInclude.Declare(System.Action{Microsoft.Extensions.FileSystemGlobbing.Internal.IPathSegment,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinearInclude.Test(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged.#ctor(Microsoft.Extensions.FileSystemGlobbing.Internal.IRaggedPattern)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged.CalculateStem(Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged.IsEndingGroup" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged.IsStartingGroup" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged.PopDirectory" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged.PushDirectory(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged.Test(Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged.TestMatchingGroup(Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged.TestMatchingSegment(System.String)" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged.Pattern" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged/FrameData" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged.FrameData">
      <Member Id="F:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged.FrameData.BacktrackAvailable" />
      <Member Id="F:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged.FrameData.InStem" />
      <Member Id="F:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged.FrameData.IsNotApplicable" />
      <Member Id="F:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged.FrameData.SegmentGroup" />
      <Member Id="F:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged.FrameData.SegmentGroupIndex" />
      <Member Id="F:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged.FrameData.SegmentIndex" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged.FrameData.Stem" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged.FrameData.StemItems" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRaggedExclude" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRaggedExclude">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRaggedExclude.#ctor(Microsoft.Extensions.FileSystemGlobbing.Internal.IRaggedPattern)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRaggedExclude.Test(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)" />
    </Type>
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRaggedInclude" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRaggedInclude">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRaggedInclude.#ctor(Microsoft.Extensions.FileSystemGlobbing.Internal.IRaggedPattern)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRaggedInclude.Declare(System.Action{Microsoft.Extensions.FileSystemGlobbing.Internal.IPathSegment,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRaggedInclude.Test(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.FileSystemGlobbing.Internal.Patterns">
    <Type Name="Microsoft.Extensions.FileSystemGlobbing.Internal.Patterns.PatternBuilder" Id="T:Microsoft.Extensions.FileSystemGlobbing.Internal.Patterns.PatternBuilder">
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.Patterns.PatternBuilder.#ctor" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.Patterns.PatternBuilder.#ctor(System.StringComparison)" />
      <Member Id="M:Microsoft.Extensions.FileSystemGlobbing.Internal.Patterns.PatternBuilder.Build(System.String)" />
      <Member Id="P:Microsoft.Extensions.FileSystemGlobbing.Internal.Patterns.PatternBuilder.ComparisonType" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Globalization">
    <Type Name="Microsoft.Extensions.Globalization.CultureInfoCache" Id="T:Microsoft.Extensions.Globalization.CultureInfoCache">
      <Member Id="M:Microsoft.Extensions.Globalization.CultureInfoCache.GetCultureInfo(System.String,System.Collections.Generic.IList{System.Globalization.CultureInfo})" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Internal">
    <Type Name="Microsoft.Extensions.Internal.GcNotification" Id="T:Microsoft.Extensions.Internal.GcNotification">
      <Member Id="M:Microsoft.Extensions.Internal.GcNotification.Finalize" />
      <Member Id="M:Microsoft.Extensions.Internal.GcNotification.Register(System.Func{System.Object,System.Boolean},System.Object)" />
    </Type>
    <Type Name="Microsoft.Extensions.Internal.ISystemClock" Id="T:Microsoft.Extensions.Internal.ISystemClock">
      <Member Id="P:Microsoft.Extensions.Internal.ISystemClock.UtcNow" />
    </Type>
    <Type Name="Microsoft.Extensions.Internal.SystemClock" Id="T:Microsoft.Extensions.Internal.SystemClock">
      <Member Id="M:Microsoft.Extensions.Internal.SystemClock.#ctor" />
      <Member Id="P:Microsoft.Extensions.Internal.SystemClock.UtcNow" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Localization.Internal">
    <Type Name="Microsoft.Extensions.Localization.Internal.AssemblyResourceStringProvider" Id="T:Microsoft.Extensions.Localization.Internal.AssemblyResourceStringProvider">
      <Member Id="M:Microsoft.Extensions.Localization.Internal.AssemblyResourceStringProvider.#ctor(Microsoft.Extensions.Localization.IResourceNamesCache,Microsoft.Extensions.Localization.Internal.AssemblyWrapper,System.String)" />
      <Member Id="M:Microsoft.Extensions.Localization.Internal.AssemblyResourceStringProvider.GetAllResourceStrings(System.Globalization.CultureInfo,System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Localization.Internal.AssemblyResourceStringProvider.GetAssembly(System.Globalization.CultureInfo)" />
    </Type>
    <Type Name="Microsoft.Extensions.Localization.Internal.AssemblyWrapper" Id="T:Microsoft.Extensions.Localization.Internal.AssemblyWrapper">
      <Member Id="M:Microsoft.Extensions.Localization.Internal.AssemblyWrapper.#ctor(System.Reflection.Assembly)" />
      <Member Id="M:Microsoft.Extensions.Localization.Internal.AssemblyWrapper.GetManifestResourceStream(System.String)" />
      <Member Id="P:Microsoft.Extensions.Localization.Internal.AssemblyWrapper.Assembly" />
      <Member Id="P:Microsoft.Extensions.Localization.Internal.AssemblyWrapper.FullName" />
    </Type>
    <Type Name="Microsoft.Extensions.Localization.Internal.IResourceStringProvider" Id="T:Microsoft.Extensions.Localization.Internal.IResourceStringProvider">
      <Member Id="M:Microsoft.Extensions.Localization.Internal.IResourceStringProvider.GetAllResourceStrings(System.Globalization.CultureInfo,System.Boolean)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Localization">
    <Type Name="Microsoft.Extensions.Localization.IResourceNamesCache" Id="T:Microsoft.Extensions.Localization.IResourceNamesCache">
      <Member Id="M:Microsoft.Extensions.Localization.IResourceNamesCache.GetOrAdd(System.String,System.Func{System.String,System.Collections.Generic.IList{System.String}})" />
    </Type>
    <Type Name="Microsoft.Extensions.Localization.IStringLocalizer" Id="T:Microsoft.Extensions.Localization.IStringLocalizer">
      <Member Id="M:Microsoft.Extensions.Localization.IStringLocalizer.GetAllStrings(System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Localization.IStringLocalizer.WithCulture(System.Globalization.CultureInfo)" />
      <Member Id="P:Microsoft.Extensions.Localization.IStringLocalizer.Item(System.String)" />
      <Member Id="P:Microsoft.Extensions.Localization.IStringLocalizer.Item(System.String,System.Object[])" />
    </Type>
    <Type Name="Microsoft.Extensions.Localization.IStringLocalizer`1" Id="T:Microsoft.Extensions.Localization.IStringLocalizer`1" />
    <Type Name="Microsoft.Extensions.Localization.IStringLocalizerFactory" Id="T:Microsoft.Extensions.Localization.IStringLocalizerFactory">
      <Member Id="M:Microsoft.Extensions.Localization.IStringLocalizerFactory.Create(System.String,System.String)" />
      <Member Id="M:Microsoft.Extensions.Localization.IStringLocalizerFactory.Create(System.Type)" />
    </Type>
    <Type Name="Microsoft.Extensions.Localization.LocalizationOptions" Id="T:Microsoft.Extensions.Localization.LocalizationOptions">
      <Member Id="M:Microsoft.Extensions.Localization.LocalizationOptions.#ctor" />
      <Member Id="P:Microsoft.Extensions.Localization.LocalizationOptions.ResourcesPath" />
    </Type>
    <Type Name="Microsoft.Extensions.Localization.LocalizedString" Id="T:Microsoft.Extensions.Localization.LocalizedString">
      <Member Id="M:Microsoft.Extensions.Localization.LocalizedString.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Extensions.Localization.LocalizedString.#ctor(System.String,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Localization.LocalizedString.op_Implicit(Microsoft.Extensions.Localization.LocalizedString)~System.String" />
      <Member Id="M:Microsoft.Extensions.Localization.LocalizedString.ToString" />
      <Member Id="P:Microsoft.Extensions.Localization.LocalizedString.Name" />
      <Member Id="P:Microsoft.Extensions.Localization.LocalizedString.ResourceNotFound" />
      <Member Id="P:Microsoft.Extensions.Localization.LocalizedString.Value" />
    </Type>
    <Type Name="Microsoft.Extensions.Localization.ResourceLocationAttribute" Id="T:Microsoft.Extensions.Localization.ResourceLocationAttribute">
      <Member Id="M:Microsoft.Extensions.Localization.ResourceLocationAttribute.#ctor(System.String)" />
      <Member Id="P:Microsoft.Extensions.Localization.ResourceLocationAttribute.ResourceLocation" />
    </Type>
    <Type Name="Microsoft.Extensions.Localization.ResourceManagerStringLocalizer" Id="T:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer">
      <Member Id="M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer.#ctor(System.Resources.ResourceManager,Microsoft.Extensions.Localization.Internal.AssemblyWrapper,System.String,Microsoft.Extensions.Localization.IResourceNamesCache)" />
      <Member Id="M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer.#ctor(System.Resources.ResourceManager,Microsoft.Extensions.Localization.Internal.IResourceStringProvider,System.String,Microsoft.Extensions.Localization.IResourceNamesCache)" />
      <Member Id="M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer.#ctor(System.Resources.ResourceManager,System.Reflection.Assembly,System.String,Microsoft.Extensions.Localization.IResourceNamesCache)" />
      <Member Id="M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer.GetAllStrings(System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer.GetAllStrings(System.Boolean,System.Globalization.CultureInfo)" />
      <Member Id="M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer.GetStringSafely(System.String,System.Globalization.CultureInfo)" />
      <Member Id="M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer.WithCulture(System.Globalization.CultureInfo)" />
      <Member Id="P:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer.Item(System.String)" />
      <Member Id="P:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer.Item(System.String,System.Object[])" />
    </Type>
    <Type Name="Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory" Id="T:Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory">
      <Member Id="M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Localization.LocalizationOptions})" />
      <Member Id="M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.Create(System.String,System.String)" />
      <Member Id="M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.Create(System.Type)" />
      <Member Id="M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.CreateResourceManagerStringLocalizer(System.Reflection.Assembly,System.String)" />
      <Member Id="M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourceLocationAttribute(System.Reflection.Assembly)" />
      <Member Id="M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourcePrefix(System.Reflection.TypeInfo)" />
      <Member Id="M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourcePrefix(System.Reflection.TypeInfo,System.String,System.String)" />
      <Member Id="M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourcePrefix(System.String,System.String)" />
      <Member Id="M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourcePrefix(System.String,System.String,System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.Localization.ResourceManagerWithCultureStringLocalizer" Id="T:Microsoft.Extensions.Localization.ResourceManagerWithCultureStringLocalizer">
      <Member Id="M:Microsoft.Extensions.Localization.ResourceManagerWithCultureStringLocalizer.#ctor(System.Resources.ResourceManager,System.Reflection.Assembly,System.String,Microsoft.Extensions.Localization.IResourceNamesCache,System.Globalization.CultureInfo)" />
      <Member Id="M:Microsoft.Extensions.Localization.ResourceManagerWithCultureStringLocalizer.GetAllStrings(System.Boolean)" />
      <Member Id="P:Microsoft.Extensions.Localization.ResourceManagerWithCultureStringLocalizer.Item(System.String)" />
      <Member Id="P:Microsoft.Extensions.Localization.ResourceManagerWithCultureStringLocalizer.Item(System.String,System.Object[])" />
    </Type>
    <Type Name="Microsoft.Extensions.Localization.ResourceNamesCache" Id="T:Microsoft.Extensions.Localization.ResourceNamesCache">
      <Member Id="M:Microsoft.Extensions.Localization.ResourceNamesCache.#ctor" />
      <Member Id="M:Microsoft.Extensions.Localization.ResourceNamesCache.GetOrAdd(System.String,System.Func{System.String,System.Collections.Generic.IList{System.String}})" />
    </Type>
    <Type Name="Microsoft.Extensions.Localization.StringLocalizer`1" Id="T:Microsoft.Extensions.Localization.StringLocalizer`1">
      <Member Id="M:Microsoft.Extensions.Localization.StringLocalizer`1.#ctor(Microsoft.Extensions.Localization.IStringLocalizerFactory)" />
      <Member Id="M:Microsoft.Extensions.Localization.StringLocalizer`1.GetAllStrings(System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Localization.StringLocalizer`1.WithCulture(System.Globalization.CultureInfo)" />
      <Member Id="P:Microsoft.Extensions.Localization.StringLocalizer`1.Item(System.String)" />
      <Member Id="P:Microsoft.Extensions.Localization.StringLocalizer`1.Item(System.String,System.Object[])" />
    </Type>
    <Type Name="Microsoft.Extensions.Localization.StringLocalizerExtensions" Id="T:Microsoft.Extensions.Localization.StringLocalizerExtensions">
      <Member Id="M:Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings(Microsoft.Extensions.Localization.IStringLocalizer)" />
      <Member Id="M:Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String)" />
      <Member Id="M:Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String,System.Object[])" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Logging.Abstractions.Internal">
    <Type Name="Microsoft.Extensions.Logging.Abstractions.Internal.NullScope" Id="T:Microsoft.Extensions.Logging.Abstractions.Internal.NullScope">
      <Member Id="M:Microsoft.Extensions.Logging.Abstractions.Internal.NullScope.Dispose" />
      <Member Id="P:Microsoft.Extensions.Logging.Abstractions.Internal.NullScope.Instance" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.Abstractions.Internal.TypeNameHelper" Id="T:Microsoft.Extensions.Logging.Abstractions.Internal.TypeNameHelper">
      <Member Id="M:Microsoft.Extensions.Logging.Abstractions.Internal.TypeNameHelper.#ctor" />
      <Member Id="M:Microsoft.Extensions.Logging.Abstractions.Internal.TypeNameHelper.GetTypeDisplayName(System.Type)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Logging.Abstractions">
    <Type Name="Microsoft.Extensions.Logging.Abstractions.NullLogger" Id="T:Microsoft.Extensions.Logging.Abstractions.NullLogger">
      <Member Id="M:Microsoft.Extensions.Logging.Abstractions.NullLogger.BeginScope``1(``0)" />
      <Member Id="M:Microsoft.Extensions.Logging.Abstractions.NullLogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)" />
      <Member Id="M:Microsoft.Extensions.Logging.Abstractions.NullLogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})" />
      <Member Id="P:Microsoft.Extensions.Logging.Abstractions.NullLogger.Instance" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.Abstractions.NullLoggerProvider" Id="T:Microsoft.Extensions.Logging.Abstractions.NullLoggerProvider">
      <Member Id="M:Microsoft.Extensions.Logging.Abstractions.NullLoggerProvider.CreateLogger(System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.Abstractions.NullLoggerProvider.Dispose" />
      <Member Id="P:Microsoft.Extensions.Logging.Abstractions.NullLoggerProvider.Instance" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Logging.AzureAppServices">
    <Type Name="Microsoft.Extensions.Logging.AzureAppServices.AzureAppServicesDiagnosticsSettings" Id="T:Microsoft.Extensions.Logging.AzureAppServices.AzureAppServicesDiagnosticsSettings">
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.AzureAppServicesDiagnosticsSettings.#ctor" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.AzureAppServicesDiagnosticsSettings.BackgroundQueueSize" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.AzureAppServicesDiagnosticsSettings.BlobBatchSize" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.AzureAppServicesDiagnosticsSettings.BlobCommitPeriod" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.AzureAppServicesDiagnosticsSettings.BlobName" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.AzureAppServicesDiagnosticsSettings.FileFlushPeriod" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.AzureAppServicesDiagnosticsSettings.FileSizeLimit" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.AzureAppServicesDiagnosticsSettings.OutputTemplate" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.AzureAppServicesDiagnosticsSettings.RetainedFileCountLimit" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Logging.AzureAppServices.Internal">
    <Type Name="Microsoft.Extensions.Logging.AzureAppServices.Internal.AzureAppServicesDiagnosticsLoggerProvider" Id="T:Microsoft.Extensions.Logging.AzureAppServices.Internal.AzureAppServicesDiagnosticsLoggerProvider">
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.AzureAppServicesDiagnosticsLoggerProvider.#ctor(Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppContext,Microsoft.Extensions.Logging.AzureAppServices.AzureAppServicesDiagnosticsSettings)" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.AzureAppServicesDiagnosticsLoggerProvider.CreateLogger(System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.AzureAppServicesDiagnosticsLoggerProvider.Dispose" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.AzureAppServices.Internal.AzureBlobLoggerProvider" Id="T:Microsoft.Extensions.Logging.AzureAppServices.Internal.AzureBlobLoggerProvider">
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.AzureBlobLoggerProvider.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.TimeSpan)" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.AzureBlobLoggerProvider.ConfigureLogger(Microsoft.Extensions.Logging.AzureAppServices.Internal.IWebAppLogConfigurationReader)" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.AzureAppServices.Internal.AzureBlobSink" Id="T:Microsoft.Extensions.Logging.AzureAppServices.Internal.AzureBlobSink">
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.AzureBlobSink.#ctor(System.Func{System.String,Microsoft.Extensions.Logging.AzureAppServices.Internal.ICloudAppendBlob},System.String,System.String,Serilog.Formatting.ITextFormatter,System.Int32,System.TimeSpan)" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.AzureBlobSink.EmitBatchAsync(System.Collections.Generic.IEnumerable{Serilog.Events.LogEvent})" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.AzureAppServices.Internal.BackgroundSink" Id="T:Microsoft.Extensions.Logging.AzureAppServices.Internal.BackgroundSink">
      <Member Id="F:Microsoft.Extensions.Logging.AzureAppServices.Internal.BackgroundSink.DefaultLogMessagesQueueSize" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.BackgroundSink.#ctor(Serilog.Core.ILogEventSink,System.Nullable{System.Int32})" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.BackgroundSink.Dispose" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.BackgroundSink.Emit(Serilog.Events.LogEvent)" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.AzureAppServices.Internal.BlobAppendReferenceWrapper" Id="T:Microsoft.Extensions.Logging.AzureAppServices.Internal.BlobAppendReferenceWrapper">
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.BlobAppendReferenceWrapper.#ctor(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob)" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.BlobAppendReferenceWrapper.CreateAsync" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.BlobAppendReferenceWrapper.OpenWriteAsync" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.AzureAppServices.Internal.FileLoggerProvider" Id="T:Microsoft.Extensions.Logging.AzureAppServices.Internal.FileLoggerProvider">
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.FileLoggerProvider.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.Nullable{System.TimeSpan})" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.FileLoggerProvider.ConfigureLogger(Microsoft.Extensions.Logging.AzureAppServices.Internal.IWebAppLogConfigurationReader)" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.AzureAppServices.Internal.ICloudAppendBlob" Id="T:Microsoft.Extensions.Logging.AzureAppServices.Internal.ICloudAppendBlob">
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.ICloudAppendBlob.CreateAsync" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.ICloudAppendBlob.OpenWriteAsync" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.AzureAppServices.Internal.IWebAppContext" Id="T:Microsoft.Extensions.Logging.AzureAppServices.Internal.IWebAppContext">
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.Internal.IWebAppContext.HomeFolder" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.Internal.IWebAppContext.IsRunningInAzureWebApp" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.Internal.IWebAppContext.SiteInstanceId" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.Internal.IWebAppContext.SiteName" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.AzureAppServices.Internal.IWebAppLogConfigurationReader" Id="T:Microsoft.Extensions.Logging.AzureAppServices.Internal.IWebAppLogConfigurationReader">
      <Member Id="E:Microsoft.Extensions.Logging.AzureAppServices.Internal.IWebAppLogConfigurationReader.OnConfigurationChanged" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.Internal.IWebAppLogConfigurationReader.Current" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppContext" Id="T:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppContext">
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppContext.Default" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppContext.HomeFolder" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppContext.IsRunningInAzureWebApp" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppContext.SiteInstanceId" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppContext.SiteName" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfiguration" Id="T:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfiguration">
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfiguration.BlobContainerUrl" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfiguration.BlobLoggingEnabled" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfiguration.BlobLoggingLevel" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfiguration.Disabled" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfiguration.FileLoggingEnabled" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfiguration.FileLoggingFolder" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfiguration.FileLoggingLevel" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfiguration.IsRunningInWebApp" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder" Id="T:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder">
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder.#ctor" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder.Build" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder.SetBlobLoggingEnabled(System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder.SetBlobLoggingLevel(Microsoft.Extensions.Logging.LogLevel)" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder.SetBlobLoggingUrl(System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder.SetFileLoggingEnabled(System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder.SetFileLoggingFolder(System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder.SetFileLoggingLevel(Microsoft.Extensions.Logging.LogLevel)" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder.SetIsRunningInAzureWebApps(System.Boolean)" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationReader" Id="T:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationReader">
      <Member Id="E:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationReader.OnConfigurationChanged" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationReader.#ctor(Microsoft.Extensions.Logging.AzureAppServices.Internal.IWebAppContext)" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationReader.Dispose" />
      <Member Id="P:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationReader.Current" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.AzureAppServices.Internal.WebConfigurationReaderLevelSwitch" Id="T:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebConfigurationReaderLevelSwitch">
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebConfigurationReaderLevelSwitch.#ctor(Microsoft.Extensions.Logging.AzureAppServices.Internal.IWebAppLogConfigurationReader,System.Func{Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfiguration,Microsoft.Extensions.Logging.LogLevel})" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Logging">
    <Type Name="Microsoft.Extensions.Logging.AzureAppServicesLoggerFactoryExtensions" Id="T:Microsoft.Extensions.Logging.AzureAppServicesLoggerFactoryExtensions">
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServicesLoggerFactoryExtensions.AddAzureWebAppDiagnostics(Microsoft.Extensions.Logging.ILoggerFactory)" />
      <Member Id="M:Microsoft.Extensions.Logging.AzureAppServicesLoggerFactoryExtensions.AddAzureWebAppDiagnostics(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.AzureAppServices.AzureAppServicesDiagnosticsSettings)" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.ConsoleLoggerExtensions" Id="T:Microsoft.Extensions.Logging.ConsoleLoggerExtensions">
      <Member Id="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory)" />
      <Member Id="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)" />
      <Member Id="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)" />
      <Member Id="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)" />
      <Member Id="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel,System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions" Id="T:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions">
      <Member Id="M:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory)" />
      <Member Id="M:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)" />
      <Member Id="M:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.EventId" Id="T:Microsoft.Extensions.Logging.EventId">
      <Member Id="M:Microsoft.Extensions.Logging.EventId.#ctor(System.Int32,System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.EventId.op_Implicit(System.Int32)~Microsoft.Extensions.Logging.EventId" />
      <Member Id="M:Microsoft.Extensions.Logging.EventId.ToString" />
      <Member Id="P:Microsoft.Extensions.Logging.EventId.Id" />
      <Member Id="P:Microsoft.Extensions.Logging.EventId.Name" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.EventLoggerFactoryExtensions" Id="T:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions">
      <Member Id="M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory)" />
      <Member Id="M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.EventLog.EventLogSettings)" />
      <Member Id="M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.EventSourceLoggerFactoryExtensions" Id="T:Microsoft.Extensions.Logging.EventSourceLoggerFactoryExtensions">
      <Member Id="M:Microsoft.Extensions.Logging.EventSourceLoggerFactoryExtensions.AddEventSourceLogger(Microsoft.Extensions.Logging.ILoggerFactory)" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions" Id="T:Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions">
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.IFilterLoggerSettings)" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.FilterLoggerSettings" Id="T:Microsoft.Extensions.Logging.FilterLoggerSettings">
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggerSettings.#ctor" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggerSettings.Add(System.String,Microsoft.Extensions.Logging.LogLevel)" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggerSettings.Microsoft#Extensions#Logging#IFilterLoggerSettings#Reload" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggerSettings.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,Microsoft#Extensions#Logging#LogLevel&gt;&gt;#GetEnumerator" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggerSettings.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)" />
      <Member Id="P:Microsoft.Extensions.Logging.FilterLoggerSettings.Microsoft#Extensions#Logging#IFilterLoggerSettings#ChangeToken" />
      <Member Id="P:Microsoft.Extensions.Logging.FilterLoggerSettings.Switches" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.IFilterLoggerSettings" Id="T:Microsoft.Extensions.Logging.IFilterLoggerSettings">
      <Member Id="M:Microsoft.Extensions.Logging.IFilterLoggerSettings.Reload" />
      <Member Id="M:Microsoft.Extensions.Logging.IFilterLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)" />
      <Member Id="P:Microsoft.Extensions.Logging.IFilterLoggerSettings.ChangeToken" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.ILogger" Id="T:Microsoft.Extensions.Logging.ILogger">
      <Member Id="M:Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)" />
      <Member Id="M:Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)" />
      <Member Id="M:Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.ILogger`1" Id="T:Microsoft.Extensions.Logging.ILogger`1" />
    <Type Name="Microsoft.Extensions.Logging.ILoggerFactory" Id="T:Microsoft.Extensions.Logging.ILoggerFactory">
      <Member Id="M:Microsoft.Extensions.Logging.ILoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)" />
      <Member Id="M:Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger(System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.ILoggerProvider" Id="T:Microsoft.Extensions.Logging.ILoggerProvider">
      <Member Id="M:Microsoft.Extensions.Logging.ILoggerProvider.CreateLogger(System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.Logger`1" Id="T:Microsoft.Extensions.Logging.Logger`1">
      <Member Id="M:Microsoft.Extensions.Logging.Logger`1.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)" />
      <Member Id="M:Microsoft.Extensions.Logging.Logger`1.Microsoft#Extensions#Logging#ILogger#BeginScope``1(``0)" />
      <Member Id="M:Microsoft.Extensions.Logging.Logger`1.Microsoft#Extensions#Logging#ILogger#IsEnabled(Microsoft.Extensions.Logging.LogLevel)" />
      <Member Id="M:Microsoft.Extensions.Logging.Logger`1.Microsoft#Extensions#Logging#ILogger#Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.LoggerExtensions" Id="T:Microsoft.Extensions.Logging.LoggerExtensions">
      <Member Id="M:Microsoft.Extensions.Logging.LoggerExtensions.BeginScope(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.LoggerFactory" Id="T:Microsoft.Extensions.Logging.LoggerFactory">
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFactory.#ctor" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFactory.CheckDisposed" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFactory.CreateLogger(System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFactory.Dispose" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.LoggerFactoryExtensions" Id="T:Microsoft.Extensions.Logging.LoggerFactoryExtensions">
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Microsoft.Extensions.Logging.ILoggerFactory,System.Type)" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1(Microsoft.Extensions.Logging.ILoggerFactory)" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.LoggerMessage" Id="T:Microsoft.Extensions.Logging.LoggerMessage">
      <Member Id="M:Microsoft.Extensions.Logging.LoggerMessage.Define(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerMessage.Define``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerMessage.Define``2(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerMessage.Define``3(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerMessage.Define``4(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerMessage.Define``5(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerMessage.Define``6(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerMessage.DefineScope(System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerMessage.DefineScope``1(System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerMessage.DefineScope``2(System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerMessage.DefineScope``3(System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.LogLevel" Id="T:Microsoft.Extensions.Logging.LogLevel">
      <Member Id="F:Microsoft.Extensions.Logging.LogLevel.Critical" />
      <Member Id="F:Microsoft.Extensions.Logging.LogLevel.Debug" />
      <Member Id="F:Microsoft.Extensions.Logging.LogLevel.Error" />
      <Member Id="F:Microsoft.Extensions.Logging.LogLevel.Information" />
      <Member Id="F:Microsoft.Extensions.Logging.LogLevel.None" />
      <Member Id="F:Microsoft.Extensions.Logging.LogLevel.Trace" />
      <Member Id="F:Microsoft.Extensions.Logging.LogLevel.Warning" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.TraceSourceFactoryExtensions" Id="T:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions">
      <Member Id="M:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch)" />
      <Member Id="M:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)" />
      <Member Id="M:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String,System.Diagnostics.TraceListener)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Logging.Console">
    <Type Name="Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings" Id="T:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings">
      <Member Id="M:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.#ctor(Microsoft.Extensions.Configuration.IConfiguration)" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.Reload" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)" />
      <Member Id="P:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.ChangeToken" />
      <Member Id="P:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.IncludeScopes" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.Console.ConsoleLogger" Id="T:Microsoft.Extensions.Logging.Console.ConsoleLogger">
      <Member Id="M:Microsoft.Extensions.Logging.Console.ConsoleLogger.#ctor(System.String,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.ConsoleLogger.BeginScope``1(``0)" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.ConsoleLogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.ConsoleLogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.ConsoleLogger.WriteMessage(Microsoft.Extensions.Logging.LogLevel,System.String,System.Int32,System.String,System.Exception)" />
      <Member Id="P:Microsoft.Extensions.Logging.Console.ConsoleLogger.Console" />
      <Member Id="P:Microsoft.Extensions.Logging.Console.ConsoleLogger.Filter" />
      <Member Id="P:Microsoft.Extensions.Logging.Console.ConsoleLogger.IncludeScopes" />
      <Member Id="P:Microsoft.Extensions.Logging.Console.ConsoleLogger.Name" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider" Id="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider">
      <Member Id="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.#ctor(Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.#ctor(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.CreateLogger(System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.Dispose" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings" Id="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings">
      <Member Id="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.#ctor" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.Reload" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)" />
      <Member Id="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.ChangeToken" />
      <Member Id="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.IncludeScopes" />
      <Member Id="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.Switches" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.Console.ConsoleLogScope" Id="T:Microsoft.Extensions.Logging.Console.ConsoleLogScope">
      <Member Id="M:Microsoft.Extensions.Logging.Console.ConsoleLogScope.Push(System.String,System.Object)" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.ConsoleLogScope.ToString" />
      <Member Id="P:Microsoft.Extensions.Logging.Console.ConsoleLogScope.Current" />
      <Member Id="P:Microsoft.Extensions.Logging.Console.ConsoleLogScope.Parent" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings" Id="T:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings">
      <Member Id="M:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.Reload" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)" />
      <Member Id="P:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.ChangeToken" />
      <Member Id="P:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.IncludeScopes" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Logging.Console.Internal">
    <Type Name="Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole" Id="T:Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole">
      <Member Id="M:Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.#ctor(Microsoft.Extensions.Logging.Console.Internal.IAnsiSystemConsole)" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.Flush" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.Write(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.WriteLine(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.Console.Internal.IAnsiSystemConsole" Id="T:Microsoft.Extensions.Logging.Console.Internal.IAnsiSystemConsole">
      <Member Id="M:Microsoft.Extensions.Logging.Console.Internal.IAnsiSystemConsole.Write(System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.Internal.IAnsiSystemConsole.WriteLine(System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.Console.Internal.IConsole" Id="T:Microsoft.Extensions.Logging.Console.Internal.IConsole">
      <Member Id="M:Microsoft.Extensions.Logging.Console.Internal.IConsole.Flush" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.Internal.IConsole.Write(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.Internal.IConsole.WriteLine(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.Console.Internal.WindowsLogConsole" Id="T:Microsoft.Extensions.Logging.Console.Internal.WindowsLogConsole">
      <Member Id="M:Microsoft.Extensions.Logging.Console.Internal.WindowsLogConsole.#ctor" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.Internal.WindowsLogConsole.Flush" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.Internal.WindowsLogConsole.Write(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})" />
      <Member Id="M:Microsoft.Extensions.Logging.Console.Internal.WindowsLogConsole.WriteLine(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Logging.Debug">
    <Type Name="Microsoft.Extensions.Logging.Debug.DebugLogger" Id="T:Microsoft.Extensions.Logging.Debug.DebugLogger">
      <Member Id="M:Microsoft.Extensions.Logging.Debug.DebugLogger.#ctor(System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.Debug.DebugLogger.#ctor(System.String,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Logging.Debug.DebugLogger.BeginScope``1(``0)" />
      <Member Id="M:Microsoft.Extensions.Logging.Debug.DebugLogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)" />
      <Member Id="M:Microsoft.Extensions.Logging.Debug.DebugLogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.Debug.DebugLoggerProvider" Id="T:Microsoft.Extensions.Logging.Debug.DebugLoggerProvider">
      <Member Id="M:Microsoft.Extensions.Logging.Debug.DebugLoggerProvider.#ctor(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Logging.Debug.DebugLoggerProvider.CreateLogger(System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.Debug.DebugLoggerProvider.Dispose" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Logging.EventLog">
    <Type Name="Microsoft.Extensions.Logging.EventLog.EventLogLogger" Id="T:Microsoft.Extensions.Logging.EventLog.EventLogLogger">
      <Member Id="M:Microsoft.Extensions.Logging.EventLog.EventLogLogger.#ctor(System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.EventLog.EventLogLogger.#ctor(System.String,Microsoft.Extensions.Logging.EventLog.EventLogSettings)" />
      <Member Id="M:Microsoft.Extensions.Logging.EventLog.EventLogLogger.BeginScope``1(``0)" />
      <Member Id="M:Microsoft.Extensions.Logging.EventLog.EventLogLogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)" />
      <Member Id="M:Microsoft.Extensions.Logging.EventLog.EventLogLogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})" />
      <Member Id="P:Microsoft.Extensions.Logging.EventLog.EventLogLogger.EventLog" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider" Id="T:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider">
      <Member Id="M:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.#ctor" />
      <Member Id="M:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.#ctor(Microsoft.Extensions.Logging.EventLog.EventLogSettings)" />
      <Member Id="M:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.CreateLogger(System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.Dispose" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.EventLog.EventLogSettings" Id="T:Microsoft.Extensions.Logging.EventLog.EventLogSettings">
      <Member Id="M:Microsoft.Extensions.Logging.EventLog.EventLogSettings.#ctor" />
      <Member Id="P:Microsoft.Extensions.Logging.EventLog.EventLogSettings.EventLog" />
      <Member Id="P:Microsoft.Extensions.Logging.EventLog.EventLogSettings.Filter" />
      <Member Id="P:Microsoft.Extensions.Logging.EventLog.EventLogSettings.LogName" />
      <Member Id="P:Microsoft.Extensions.Logging.EventLog.EventLogSettings.MachineName" />
      <Member Id="P:Microsoft.Extensions.Logging.EventLog.EventLogSettings.SourceName" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.EventLog.WindowsEventLog" Id="T:Microsoft.Extensions.Logging.EventLog.WindowsEventLog">
      <Member Id="M:Microsoft.Extensions.Logging.EventLog.WindowsEventLog.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.EventLog.WindowsEventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)" />
      <Member Id="P:Microsoft.Extensions.Logging.EventLog.WindowsEventLog.DiagnosticsEventLog" />
      <Member Id="P:Microsoft.Extensions.Logging.EventLog.WindowsEventLog.MaxMessageSize" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Logging.EventLog.Internal">
    <Type Name="Microsoft.Extensions.Logging.EventLog.Internal.IEventLog" Id="T:Microsoft.Extensions.Logging.EventLog.Internal.IEventLog">
      <Member Id="M:Microsoft.Extensions.Logging.EventLog.Internal.IEventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)" />
      <Member Id="P:Microsoft.Extensions.Logging.EventLog.Internal.IEventLog.MaxMessageSize" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Logging.Filter.Internal">
    <Type Name="Microsoft.Extensions.Logging.Filter.Internal.FilterLogger" Id="T:Microsoft.Extensions.Logging.Filter.Internal.FilterLogger">
      <Member Id="M:Microsoft.Extensions.Logging.Filter.Internal.FilterLogger.#ctor(Microsoft.Extensions.Logging.ILogger,System.String,Microsoft.Extensions.Logging.IFilterLoggerSettings)" />
      <Member Id="M:Microsoft.Extensions.Logging.Filter.Internal.FilterLogger.BeginScope``1(``0)" />
      <Member Id="M:Microsoft.Extensions.Logging.Filter.Internal.FilterLogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)" />
      <Member Id="M:Microsoft.Extensions.Logging.Filter.Internal.FilterLogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.Filter.Internal.FilterLoggerFactory" Id="T:Microsoft.Extensions.Logging.Filter.Internal.FilterLoggerFactory">
      <Member Id="M:Microsoft.Extensions.Logging.Filter.Internal.FilterLoggerFactory.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.IFilterLoggerSettings)" />
      <Member Id="M:Microsoft.Extensions.Logging.Filter.Internal.FilterLoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)" />
      <Member Id="M:Microsoft.Extensions.Logging.Filter.Internal.FilterLoggerFactory.CreateLogger(System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.Filter.Internal.FilterLoggerFactory.Dispose" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.Filter.Internal.FilterLoggerProvider" Id="T:Microsoft.Extensions.Logging.Filter.Internal.FilterLoggerProvider">
      <Member Id="M:Microsoft.Extensions.Logging.Filter.Internal.FilterLoggerProvider.#ctor(Microsoft.Extensions.Logging.ILoggerProvider,Microsoft.Extensions.Logging.IFilterLoggerSettings)" />
      <Member Id="M:Microsoft.Extensions.Logging.Filter.Internal.FilterLoggerProvider.CreateLogger(System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.Filter.Internal.FilterLoggerProvider.Dispose" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Logging.Internal">
    <Type Name="Microsoft.Extensions.Logging.Internal.FormattedLogValues" Id="T:Microsoft.Extensions.Logging.Internal.FormattedLogValues">
      <Member Id="M:Microsoft.Extensions.Logging.Internal.FormattedLogValues.#ctor(System.String,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.Logging.Internal.FormattedLogValues.GetEnumerator" />
      <Member Id="M:Microsoft.Extensions.Logging.Internal.FormattedLogValues.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="M:Microsoft.Extensions.Logging.Internal.FormattedLogValues.ToString" />
      <Member Id="P:Microsoft.Extensions.Logging.Internal.FormattedLogValues.Count" />
      <Member Id="P:Microsoft.Extensions.Logging.Internal.FormattedLogValues.Item(System.Int32)" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.Internal.LogValuesFormatter" Id="T:Microsoft.Extensions.Logging.Internal.LogValuesFormatter">
      <Member Id="M:Microsoft.Extensions.Logging.Internal.LogValuesFormatter.#ctor(System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.Internal.LogValuesFormatter.Format(System.Object[])" />
      <Member Id="M:Microsoft.Extensions.Logging.Internal.LogValuesFormatter.GetValue(System.Object[],System.Int32)" />
      <Member Id="M:Microsoft.Extensions.Logging.Internal.LogValuesFormatter.GetValues(System.Object[])" />
      <Member Id="P:Microsoft.Extensions.Logging.Internal.LogValuesFormatter.OriginalFormat" />
      <Member Id="P:Microsoft.Extensions.Logging.Internal.LogValuesFormatter.ValueNames" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Logging.TraceSource">
    <Type Name="Microsoft.Extensions.Logging.TraceSource.TraceSourceLogger" Id="T:Microsoft.Extensions.Logging.TraceSource.TraceSourceLogger">
      <Member Id="M:Microsoft.Extensions.Logging.TraceSource.TraceSourceLogger.#ctor(System.Diagnostics.TraceSource)" />
      <Member Id="M:Microsoft.Extensions.Logging.TraceSource.TraceSourceLogger.BeginScope``1(``0)" />
      <Member Id="M:Microsoft.Extensions.Logging.TraceSource.TraceSourceLogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)" />
      <Member Id="M:Microsoft.Extensions.Logging.TraceSource.TraceSourceLogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.TraceSource.TraceSourceLoggerProvider" Id="T:Microsoft.Extensions.Logging.TraceSource.TraceSourceLoggerProvider">
      <Member Id="M:Microsoft.Extensions.Logging.TraceSource.TraceSourceLoggerProvider.#ctor(System.Diagnostics.SourceSwitch)" />
      <Member Id="M:Microsoft.Extensions.Logging.TraceSource.TraceSourceLoggerProvider.#ctor(System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)" />
      <Member Id="M:Microsoft.Extensions.Logging.TraceSource.TraceSourceLoggerProvider.CreateLogger(System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.TraceSource.TraceSourceLoggerProvider.Dispose" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.TraceSource.TraceSourceScope" Id="T:Microsoft.Extensions.Logging.TraceSource.TraceSourceScope">
      <Member Id="M:Microsoft.Extensions.Logging.TraceSource.TraceSourceScope.#ctor(System.Object)" />
      <Member Id="M:Microsoft.Extensions.Logging.TraceSource.TraceSourceScope.Dispose" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.ObjectPool">
    <Type Name="Microsoft.Extensions.ObjectPool.DefaultObjectPool`1" Id="T:Microsoft.Extensions.ObjectPool.DefaultObjectPool`1">
      <Member Id="M:Microsoft.Extensions.ObjectPool.DefaultObjectPool`1.#ctor(Microsoft.Extensions.ObjectPool.IPooledObjectPolicy{`0})" />
      <Member Id="M:Microsoft.Extensions.ObjectPool.DefaultObjectPool`1.#ctor(Microsoft.Extensions.ObjectPool.IPooledObjectPolicy{`0},System.Int32)" />
      <Member Id="M:Microsoft.Extensions.ObjectPool.DefaultObjectPool`1.Get" />
      <Member Id="M:Microsoft.Extensions.ObjectPool.DefaultObjectPool`1.Return(`0)" />
    </Type>
    <Type Name="Microsoft.Extensions.ObjectPool.DefaultObjectPoolProvider" Id="T:Microsoft.Extensions.ObjectPool.DefaultObjectPoolProvider">
      <Member Id="M:Microsoft.Extensions.ObjectPool.DefaultObjectPoolProvider.#ctor" />
      <Member Id="M:Microsoft.Extensions.ObjectPool.DefaultObjectPoolProvider.Create``1(Microsoft.Extensions.ObjectPool.IPooledObjectPolicy{``0})" />
      <Member Id="P:Microsoft.Extensions.ObjectPool.DefaultObjectPoolProvider.MaximumRetained" />
    </Type>
    <Type Name="Microsoft.Extensions.ObjectPool.DefaultPooledObjectPolicy`1" Id="T:Microsoft.Extensions.ObjectPool.DefaultPooledObjectPolicy`1">
      <Member Id="M:Microsoft.Extensions.ObjectPool.DefaultPooledObjectPolicy`1.#ctor" />
      <Member Id="M:Microsoft.Extensions.ObjectPool.DefaultPooledObjectPolicy`1.Create" />
      <Member Id="M:Microsoft.Extensions.ObjectPool.DefaultPooledObjectPolicy`1.Return(`0)" />
    </Type>
    <Type Name="Microsoft.Extensions.ObjectPool.IPooledObjectPolicy`1" Id="T:Microsoft.Extensions.ObjectPool.IPooledObjectPolicy`1">
      <Member Id="M:Microsoft.Extensions.ObjectPool.IPooledObjectPolicy`1.Create" />
      <Member Id="M:Microsoft.Extensions.ObjectPool.IPooledObjectPolicy`1.Return(`0)" />
    </Type>
    <Type Name="Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool`1" Id="T:Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool`1">
      <Member Id="M:Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool`1.#ctor(Microsoft.Extensions.ObjectPool.ObjectPool{`0})" />
      <Member Id="M:Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool`1.Get" />
      <Member Id="M:Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool`1.Return(`0)" />
    </Type>
    <Type Name="Microsoft.Extensions.ObjectPool.LeakTrackingObjectPoolProvider" Id="T:Microsoft.Extensions.ObjectPool.LeakTrackingObjectPoolProvider">
      <Member Id="M:Microsoft.Extensions.ObjectPool.LeakTrackingObjectPoolProvider.#ctor(Microsoft.Extensions.ObjectPool.ObjectPoolProvider)" />
      <Member Id="M:Microsoft.Extensions.ObjectPool.LeakTrackingObjectPoolProvider.Create``1(Microsoft.Extensions.ObjectPool.IPooledObjectPolicy{``0})" />
    </Type>
    <Type Name="Microsoft.Extensions.ObjectPool.ObjectPool`1" Id="T:Microsoft.Extensions.ObjectPool.ObjectPool`1">
      <Member Id="M:Microsoft.Extensions.ObjectPool.ObjectPool`1.#ctor" />
      <Member Id="M:Microsoft.Extensions.ObjectPool.ObjectPool`1.Get" />
      <Member Id="M:Microsoft.Extensions.ObjectPool.ObjectPool`1.Return(`0)" />
    </Type>
    <Type Name="Microsoft.Extensions.ObjectPool.ObjectPoolProvider" Id="T:Microsoft.Extensions.ObjectPool.ObjectPoolProvider">
      <Member Id="M:Microsoft.Extensions.ObjectPool.ObjectPoolProvider.#ctor" />
      <Member Id="M:Microsoft.Extensions.ObjectPool.ObjectPoolProvider.Create``1" />
      <Member Id="M:Microsoft.Extensions.ObjectPool.ObjectPoolProvider.Create``1(Microsoft.Extensions.ObjectPool.IPooledObjectPolicy{``0})" />
    </Type>
    <Type Name="Microsoft.Extensions.ObjectPool.ObjectPoolProviderExtensions" Id="T:Microsoft.Extensions.ObjectPool.ObjectPoolProviderExtensions">
      <Member Id="M:Microsoft.Extensions.ObjectPool.ObjectPoolProviderExtensions.CreateStringBuilderPool(Microsoft.Extensions.ObjectPool.ObjectPoolProvider)" />
      <Member Id="M:Microsoft.Extensions.ObjectPool.ObjectPoolProviderExtensions.CreateStringBuilderPool(Microsoft.Extensions.ObjectPool.ObjectPoolProvider,System.Int32,System.Int32)" />
    </Type>
    <Type Name="Microsoft.Extensions.ObjectPool.StringBuilderPooledObjectPolicy" Id="T:Microsoft.Extensions.ObjectPool.StringBuilderPooledObjectPolicy">
      <Member Id="M:Microsoft.Extensions.ObjectPool.StringBuilderPooledObjectPolicy.#ctor" />
      <Member Id="M:Microsoft.Extensions.ObjectPool.StringBuilderPooledObjectPolicy.Create" />
      <Member Id="M:Microsoft.Extensions.ObjectPool.StringBuilderPooledObjectPolicy.Return(System.Text.StringBuilder)" />
      <Member Id="P:Microsoft.Extensions.ObjectPool.StringBuilderPooledObjectPolicy.InitialCapacity" />
      <Member Id="P:Microsoft.Extensions.ObjectPool.StringBuilderPooledObjectPolicy.MaximumRetainedCapacity" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Options">
    <Type Name="Microsoft.Extensions.Options.ConfigurationChangeTokenSource`1" Id="T:Microsoft.Extensions.Options.ConfigurationChangeTokenSource`1">
      <Member Id="M:Microsoft.Extensions.Options.ConfigurationChangeTokenSource`1.#ctor(Microsoft.Extensions.Configuration.IConfiguration)" />
      <Member Id="M:Microsoft.Extensions.Options.ConfigurationChangeTokenSource`1.GetChangeToken" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.ConfigureFromConfigurationOptions`1" Id="T:Microsoft.Extensions.Options.ConfigureFromConfigurationOptions`1">
      <Member Id="M:Microsoft.Extensions.Options.ConfigureFromConfigurationOptions`1.#ctor(Microsoft.Extensions.Configuration.IConfiguration)" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.ConfigureOptions`1" Id="T:Microsoft.Extensions.Options.ConfigureOptions`1">
      <Member Id="M:Microsoft.Extensions.Options.ConfigureOptions`1.#ctor(System.Action{`0})" />
      <Member Id="M:Microsoft.Extensions.Options.ConfigureOptions`1.Configure(`0)" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureOptions`1.Action" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.IConfigureOptions`1" Id="T:Microsoft.Extensions.Options.IConfigureOptions`1">
      <Member Id="M:Microsoft.Extensions.Options.IConfigureOptions`1.Configure(`0)" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.IOptions`1" Id="T:Microsoft.Extensions.Options.IOptions`1">
      <Member Id="P:Microsoft.Extensions.Options.IOptions`1.Value" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.IOptionsChangeTokenSource`1" Id="T:Microsoft.Extensions.Options.IOptionsChangeTokenSource`1">
      <Member Id="M:Microsoft.Extensions.Options.IOptionsChangeTokenSource`1.GetChangeToken" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.IOptionsMonitor`1" Id="T:Microsoft.Extensions.Options.IOptionsMonitor`1">
      <Member Id="M:Microsoft.Extensions.Options.IOptionsMonitor`1.OnChange(System.Action{`0})" />
      <Member Id="P:Microsoft.Extensions.Options.IOptionsMonitor`1.CurrentValue" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.IOptionsSnapshot`1" Id="T:Microsoft.Extensions.Options.IOptionsSnapshot`1">
      <Member Id="P:Microsoft.Extensions.Options.IOptionsSnapshot`1.Value" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.Options" Id="T:Microsoft.Extensions.Options.Options">
      <Member Id="M:Microsoft.Extensions.Options.Options.Create``1(``0)" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.OptionsManager`1" Id="T:Microsoft.Extensions.Options.OptionsManager`1">
      <Member Id="M:Microsoft.Extensions.Options.OptionsManager`1.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Options.IConfigureOptions{`0}})" />
      <Member Id="P:Microsoft.Extensions.Options.OptionsManager`1.Value" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.OptionsMonitor`1" Id="T:Microsoft.Extensions.Options.OptionsMonitor`1">
      <Member Id="M:Microsoft.Extensions.Options.OptionsMonitor`1.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Options.IConfigureOptions{`0}},System.Collections.Generic.IEnumerable{Microsoft.Extensions.Options.IOptionsChangeTokenSource{`0}})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsMonitor`1.OnChange(System.Action{`0})" />
      <Member Id="P:Microsoft.Extensions.Options.OptionsMonitor`1.CurrentValue" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.OptionsSnapshot`1" Id="T:Microsoft.Extensions.Options.OptionsSnapshot`1">
      <Member Id="M:Microsoft.Extensions.Options.OptionsSnapshot`1.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{`0})" />
      <Member Id="P:Microsoft.Extensions.Options.OptionsSnapshot`1.Value" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.OptionsWrapper`1" Id="T:Microsoft.Extensions.Options.OptionsWrapper`1">
      <Member Id="M:Microsoft.Extensions.Options.OptionsWrapper`1.#ctor(`0)" />
      <Member Id="P:Microsoft.Extensions.Options.OptionsWrapper`1.Value" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.PlatformAbstractions">
    <Type Name="Microsoft.Extensions.PlatformAbstractions.ApplicationEnvironment" Id="T:Microsoft.Extensions.PlatformAbstractions.ApplicationEnvironment">
      <Member Id="M:Microsoft.Extensions.PlatformAbstractions.ApplicationEnvironment.#ctor" />
      <Member Id="P:Microsoft.Extensions.PlatformAbstractions.ApplicationEnvironment.ApplicationBasePath" />
      <Member Id="P:Microsoft.Extensions.PlatformAbstractions.ApplicationEnvironment.ApplicationName" />
      <Member Id="P:Microsoft.Extensions.PlatformAbstractions.ApplicationEnvironment.ApplicationVersion" />
      <Member Id="P:Microsoft.Extensions.PlatformAbstractions.ApplicationEnvironment.RuntimeFramework" />
    </Type>
    <Type Name="Microsoft.Extensions.PlatformAbstractions.PlatformServices" Id="T:Microsoft.Extensions.PlatformAbstractions.PlatformServices">
      <Member Id="P:Microsoft.Extensions.PlatformAbstractions.PlatformServices.Application" />
      <Member Id="P:Microsoft.Extensions.PlatformAbstractions.PlatformServices.Default" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Primitives">
    <Type Name="Microsoft.Extensions.Primitives.CancellationChangeToken" Id="T:Microsoft.Extensions.Primitives.CancellationChangeToken">
      <Member Id="M:Microsoft.Extensions.Primitives.CancellationChangeToken.#ctor(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Extensions.Primitives.CancellationChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)" />
      <Member Id="P:Microsoft.Extensions.Primitives.CancellationChangeToken.ActiveChangeCallbacks" />
      <Member Id="P:Microsoft.Extensions.Primitives.CancellationChangeToken.HasChanged" />
    </Type>
    <Type Name="Microsoft.Extensions.Primitives.ChangeToken" Id="T:Microsoft.Extensions.Primitives.ChangeToken">
      <Member Id="M:Microsoft.Extensions.Primitives.ChangeToken.OnChange(System.Func{Microsoft.Extensions.Primitives.IChangeToken},System.Action)" />
      <Member Id="M:Microsoft.Extensions.Primitives.ChangeToken.OnChange``1(System.Func{Microsoft.Extensions.Primitives.IChangeToken},System.Action{``0},``0)" />
    </Type>
    <Type Name="Microsoft.Extensions.Primitives.IChangeToken" Id="T:Microsoft.Extensions.Primitives.IChangeToken">
      <Member Id="M:Microsoft.Extensions.Primitives.IChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)" />
      <Member Id="P:Microsoft.Extensions.Primitives.IChangeToken.ActiveChangeCallbacks" />
      <Member Id="P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged" />
    </Type>
    <Type Name="Microsoft.Extensions.Primitives.InplaceStringBuilder" Id="T:Microsoft.Extensions.Primitives.InplaceStringBuilder">
      <Member Id="M:Microsoft.Extensions.Primitives.InplaceStringBuilder.#ctor(System.Int32)" />
      <Member Id="M:Microsoft.Extensions.Primitives.InplaceStringBuilder.Append(System.Char)" />
      <Member Id="M:Microsoft.Extensions.Primitives.InplaceStringBuilder.Append(System.String)" />
      <Member Id="M:Microsoft.Extensions.Primitives.InplaceStringBuilder.ToString" />
      <Member Id="P:Microsoft.Extensions.Primitives.InplaceStringBuilder.Capacity" />
    </Type>
    <Type Name="Microsoft.Extensions.Primitives.StringSegment" Id="T:Microsoft.Extensions.Primitives.StringSegment">
      <Member Id="M:Microsoft.Extensions.Primitives.StringSegment.#ctor(System.String)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringSegment.#ctor(System.String,System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringSegment.EndsWith(System.String,System.StringComparison)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringSegment.Equals(Microsoft.Extensions.Primitives.StringSegment)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringSegment.Equals(Microsoft.Extensions.Primitives.StringSegment,System.StringComparison)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringSegment.Equals(System.Object)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringSegment.Equals(System.String)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringSegment.Equals(System.String,System.StringComparison)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringSegment.GetHashCode" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringSegment.IndexOf(System.Char)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringSegment.IndexOf(System.Char,System.Int32)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringSegment.IndexOf(System.Char,System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringSegment.op_Equality(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringSegment.op_Inequality(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringSegment.StartsWith(System.String,System.StringComparison)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringSegment.Subsegment(System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringSegment.Substring(System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringSegment.ToString" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringSegment.Trim" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringSegment.TrimEnd" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringSegment.TrimStart" />
      <Member Id="P:Microsoft.Extensions.Primitives.StringSegment.Buffer" />
      <Member Id="P:Microsoft.Extensions.Primitives.StringSegment.HasValue" />
      <Member Id="P:Microsoft.Extensions.Primitives.StringSegment.Length" />
      <Member Id="P:Microsoft.Extensions.Primitives.StringSegment.Offset" />
      <Member Id="P:Microsoft.Extensions.Primitives.StringSegment.Value" />
    </Type>
    <Type Name="Microsoft.Extensions.Primitives.StringTokenizer" Id="T:Microsoft.Extensions.Primitives.StringTokenizer">
      <Member Id="M:Microsoft.Extensions.Primitives.StringTokenizer.#ctor(System.String,System.Char[])" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringTokenizer.GetEnumerator" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringTokenizer.System#Collections#Generic#IEnumerable&lt;Microsoft#Extensions#Primitives#StringSegment&gt;#GetEnumerator" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringTokenizer.System#Collections#IEnumerable#GetEnumerator" />
    </Type>
    <Type Name="Microsoft.Extensions.Primitives.StringTokenizer/Enumerator" Id="T:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator">
      <Member Id="M:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.#ctor(Microsoft.Extensions.Primitives.StringTokenizer@)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Dispose" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.MoveNext" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Reset" />
      <Member Id="P:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Current" />
      <Member Id="P:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.System#Collections#IEnumerator#Current" />
    </Type>
    <Type Name="Microsoft.Extensions.Primitives.StringValues" Id="T:Microsoft.Extensions.Primitives.StringValues">
      <Member Id="F:Microsoft.Extensions.Primitives.StringValues.Empty" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.#ctor(System.String)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.#ctor(System.String[])" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.Concat(Microsoft.Extensions.Primitives.StringValues,Microsoft.Extensions.Primitives.StringValues)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.Equals(Microsoft.Extensions.Primitives.StringValues)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.Equals(Microsoft.Extensions.Primitives.StringValues,Microsoft.Extensions.Primitives.StringValues)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.Equals(Microsoft.Extensions.Primitives.StringValues,System.String)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.Equals(Microsoft.Extensions.Primitives.StringValues,System.String[])" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.Equals(System.Object)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.Equals(System.String)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.Equals(System.String,Microsoft.Extensions.Primitives.StringValues)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.Equals(System.String[])" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.Equals(System.String[],Microsoft.Extensions.Primitives.StringValues)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.GetEnumerator" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.GetHashCode" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.IsNullOrEmpty(Microsoft.Extensions.Primitives.StringValues)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.op_Equality(Microsoft.Extensions.Primitives.StringValues,Microsoft.Extensions.Primitives.StringValues)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.op_Equality(Microsoft.Extensions.Primitives.StringValues,System.Object)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.op_Equality(Microsoft.Extensions.Primitives.StringValues,System.String)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.op_Equality(Microsoft.Extensions.Primitives.StringValues,System.String[])" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.op_Equality(System.Object,Microsoft.Extensions.Primitives.StringValues)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.op_Equality(System.String,Microsoft.Extensions.Primitives.StringValues)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.op_Equality(System.String[],Microsoft.Extensions.Primitives.StringValues)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.op_Implicit(Microsoft.Extensions.Primitives.StringValues)~System.String" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.op_Implicit(Microsoft.Extensions.Primitives.StringValues)~System.String[]" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.op_Implicit(System.String)~Microsoft.Extensions.Primitives.StringValues" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.op_Implicit(System.String[])~Microsoft.Extensions.Primitives.StringValues" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.op_Inequality(Microsoft.Extensions.Primitives.StringValues,Microsoft.Extensions.Primitives.StringValues)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.op_Inequality(Microsoft.Extensions.Primitives.StringValues,System.Object)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.op_Inequality(Microsoft.Extensions.Primitives.StringValues,System.String)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.op_Inequality(Microsoft.Extensions.Primitives.StringValues,System.String[])" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.op_Inequality(System.Object,Microsoft.Extensions.Primitives.StringValues)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.op_Inequality(System.String,Microsoft.Extensions.Primitives.StringValues)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.op_Inequality(System.String[],Microsoft.Extensions.Primitives.StringValues)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#ICollection&lt;System#String&gt;#Add(System.String)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#ICollection&lt;System#String&gt;#Clear" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#ICollection&lt;System#String&gt;#Contains(System.String)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#ICollection&lt;System#String&gt;#CopyTo(System.String[],System.Int32)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#ICollection&lt;System#String&gt;#Remove(System.String)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#IEnumerable&lt;System#String&gt;#GetEnumerator" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#IList&lt;System#String&gt;#IndexOf(System.String)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#IList&lt;System#String&gt;#Insert(System.Int32,System.String)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#IList&lt;System#String&gt;#RemoveAt(System.Int32)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.ToArray" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.ToString" />
      <Member Id="P:Microsoft.Extensions.Primitives.StringValues.Count" />
      <Member Id="P:Microsoft.Extensions.Primitives.StringValues.Item(System.Int32)" />
      <Member Id="P:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#ICollection&lt;System#String&gt;#IsReadOnly" />
      <Member Id="P:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#IList&lt;System#String&gt;#Item(System.Int32)" />
    </Type>
    <Type Name="Microsoft.Extensions.Primitives.StringValues/Enumerator" Id="T:Microsoft.Extensions.Primitives.StringValues.Enumerator">
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.Enumerator.#ctor(Microsoft.Extensions.Primitives.StringValues@)" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.Enumerator.MoveNext" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.Enumerator.System#Collections#IEnumerator#Reset" />
      <Member Id="M:Microsoft.Extensions.Primitives.StringValues.Enumerator.System#IDisposable#Dispose" />
      <Member Id="P:Microsoft.Extensions.Primitives.StringValues.Enumerator.Current" />
      <Member Id="P:Microsoft.Extensions.Primitives.StringValues.Enumerator.System#Collections#IEnumerator#Current" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.WebEncoders.Testing">
    <Type Name="Microsoft.Extensions.WebEncoders.Testing.HtmlTestEncoder" Id="T:Microsoft.Extensions.WebEncoders.Testing.HtmlTestEncoder">
      <Member Id="M:Microsoft.Extensions.WebEncoders.Testing.HtmlTestEncoder.#ctor" />
      <Member Id="M:Microsoft.Extensions.WebEncoders.Testing.HtmlTestEncoder.Encode(System.IO.TextWriter,System.Char[],System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Extensions.WebEncoders.Testing.HtmlTestEncoder.Encode(System.IO.TextWriter,System.String,System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Extensions.WebEncoders.Testing.HtmlTestEncoder.Encode(System.String)" />
      <Member Id="M:Microsoft.Extensions.WebEncoders.Testing.HtmlTestEncoder.FindFirstCharacterToEncode(System.Char*,System.Int32)" />
      <Member Id="M:Microsoft.Extensions.WebEncoders.Testing.HtmlTestEncoder.TryEncodeUnicodeScalar(System.Int32,System.Char*,System.Int32,System.Int32@)" />
      <Member Id="M:Microsoft.Extensions.WebEncoders.Testing.HtmlTestEncoder.WillEncode(System.Int32)" />
      <Member Id="P:Microsoft.Extensions.WebEncoders.Testing.HtmlTestEncoder.MaxOutputCharactersPerInputCharacter" />
    </Type>
    <Type Name="Microsoft.Extensions.WebEncoders.Testing.JavaScriptTestEncoder" Id="T:Microsoft.Extensions.WebEncoders.Testing.JavaScriptTestEncoder">
      <Member Id="M:Microsoft.Extensions.WebEncoders.Testing.JavaScriptTestEncoder.#ctor" />
      <Member Id="M:Microsoft.Extensions.WebEncoders.Testing.JavaScriptTestEncoder.Encode(System.IO.TextWriter,System.Char[],System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Extensions.WebEncoders.Testing.JavaScriptTestEncoder.Encode(System.IO.TextWriter,System.String,System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Extensions.WebEncoders.Testing.JavaScriptTestEncoder.Encode(System.String)" />
      <Member Id="M:Microsoft.Extensions.WebEncoders.Testing.JavaScriptTestEncoder.FindFirstCharacterToEncode(System.Char*,System.Int32)" />
      <Member Id="M:Microsoft.Extensions.WebEncoders.Testing.JavaScriptTestEncoder.TryEncodeUnicodeScalar(System.Int32,System.Char*,System.Int32,System.Int32@)" />
      <Member Id="M:Microsoft.Extensions.WebEncoders.Testing.JavaScriptTestEncoder.WillEncode(System.Int32)" />
      <Member Id="P:Microsoft.Extensions.WebEncoders.Testing.JavaScriptTestEncoder.MaxOutputCharactersPerInputCharacter" />
    </Type>
    <Type Name="Microsoft.Extensions.WebEncoders.Testing.UrlTestEncoder" Id="T:Microsoft.Extensions.WebEncoders.Testing.UrlTestEncoder">
      <Member Id="M:Microsoft.Extensions.WebEncoders.Testing.UrlTestEncoder.#ctor" />
      <Member Id="M:Microsoft.Extensions.WebEncoders.Testing.UrlTestEncoder.Encode(System.IO.TextWriter,System.Char[],System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Extensions.WebEncoders.Testing.UrlTestEncoder.Encode(System.IO.TextWriter,System.String,System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Extensions.WebEncoders.Testing.UrlTestEncoder.Encode(System.String)" />
      <Member Id="M:Microsoft.Extensions.WebEncoders.Testing.UrlTestEncoder.FindFirstCharacterToEncode(System.Char*,System.Int32)" />
      <Member Id="M:Microsoft.Extensions.WebEncoders.Testing.UrlTestEncoder.TryEncodeUnicodeScalar(System.Int32,System.Char*,System.Int32,System.Int32@)" />
      <Member Id="M:Microsoft.Extensions.WebEncoders.Testing.UrlTestEncoder.WillEncode(System.Int32)" />
      <Member Id="P:Microsoft.Extensions.WebEncoders.Testing.UrlTestEncoder.MaxOutputCharactersPerInputCharacter" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.WebEncoders">
    <Type Name="Microsoft.Extensions.WebEncoders.WebEncoderOptions" Id="T:Microsoft.Extensions.WebEncoders.WebEncoderOptions">
      <Member Id="M:Microsoft.Extensions.WebEncoders.WebEncoderOptions.#ctor" />
      <Member Id="P:Microsoft.Extensions.WebEncoders.WebEncoderOptions.TextEncoderSettings" />
    </Type>
  </Namespace>
  <Namespace Name="System.Diagnostics">
    <Type Name="System.Diagnostics.DiagnosticListenerExtensions" Id="T:System.Diagnostics.DiagnosticListenerExtensions">
      <Member Id="M:System.Diagnostics.DiagnosticListenerExtensions.SubscribeWithAdapter(System.Diagnostics.DiagnosticListener,System.Object)" />
      <Member Id="M:System.Diagnostics.DiagnosticListenerExtensions.SubscribeWithAdapter(System.Diagnostics.DiagnosticListener,System.Object,System.Func{System.String,System.Boolean})" />
    </Type>
  </Namespace>
</Framework>
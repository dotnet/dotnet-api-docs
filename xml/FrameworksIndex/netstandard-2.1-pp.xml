<?xml version="1.0" encoding="utf-8"?>
<Framework Name="netstandard-2.1-pp">
  <Assemblies>
    <Assembly Name="Microsoft.Bcl.AsyncInterfaces" Version="10.0.0.0" />
    <Assembly Name="Microsoft.Bcl.Cryptography" Version="10.0.0.0" />
    <Assembly Name="Microsoft.Bcl.Memory" Version="10.0.0.0" />
    <Assembly Name="Microsoft.Bcl.Numerics" Version="10.0.0.0" />
    <Assembly Name="Microsoft.Extensions.Configuration.Json" Version="10.0.0.0" />
    <Assembly Name="Microsoft.Extensions.DependencyInjection.Abstractions" Version="10.0.0.0" />
    <Assembly Name="Microsoft.Extensions.DependencyInjection" Version="10.0.0.0" />
    <Assembly Name="Microsoft.Extensions.Hosting.Abstractions" Version="10.0.0.0" />
    <Assembly Name="Microsoft.Extensions.Hosting" Version="10.0.0.0" />
    <Assembly Name="Microsoft.Extensions.Hosting.Systemd" Version="10.0.0.0" />
    <Assembly Name="Microsoft.Extensions.Hosting.WindowsServices" Version="10.0.0.0" />
    <Assembly Name="Microsoft.Extensions.Logging" Version="10.0.0.0" />
    <Assembly Name="Microsoft.Extensions.Options.DataAnnotations" Version="10.0.0.0" />
    <Assembly Name="Microsoft.Extensions.Options" Version="10.0.0.0" />
    <Assembly Name="System.ComponentModel.Composition.Registration" Version="10.0.0.0" />
    <Assembly Name="System.Reflection.Context" Version="10.0.0.0" />
    <Assembly Name="System.Security.Cryptography.Pkcs" Version="10.0.0.0" />
    <Assembly Name="System.Threading.Channels" Version="10.0.0.0" />
    <Assembly Name="System.Threading.Tasks.Dataflow" Version="10.0.0.0" />
    <Assembly Name="System.Utf8String.Experimental" Version="5.0.0.0" />
  </Assemblies>
  <Namespace Name="Microsoft.Extensions.Configuration.Json">
    <Type Name="Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider" Id="T:Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider">
      <Member Id="M:Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider.#ctor(Microsoft.Extensions.Configuration.Json.JsonConfigurationSource)" />
      <Member Id="M:Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider.Load(System.IO.Stream)" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.Json.JsonConfigurationSource" Id="T:Microsoft.Extensions.Configuration.Json.JsonConfigurationSource">
      <Member Id="M:Microsoft.Extensions.Configuration.Json.JsonConfigurationSource.#ctor" />
      <Member Id="M:Microsoft.Extensions.Configuration.Json.JsonConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationProvider" Id="T:Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationProvider">
      <Member Id="M:Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationProvider.#ctor(Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationSource)" />
      <Member Id="M:Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationProvider.Load(System.IO.Stream)" />
    </Type>
    <Type Name="Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationSource" Id="T:Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationSource">
      <Member Id="M:Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationSource.#ctor" />
      <Member Id="M:Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Configuration">
    <Type Name="Microsoft.Extensions.Configuration.JsonConfigurationExtensions" Id="T:Microsoft.Extensions.Configuration.JsonConfigurationExtensions">
      <Member Id="M:Microsoft.Extensions.Configuration.JsonConfigurationExtensions.AddJsonFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.FileProviders.IFileProvider,System.String,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Configuration.JsonConfigurationExtensions.AddJsonFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Action{Microsoft.Extensions.Configuration.Json.JsonConfigurationSource})" />
      <Member Id="M:Microsoft.Extensions.Configuration.JsonConfigurationExtensions.AddJsonFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)" />
      <Member Id="M:Microsoft.Extensions.Configuration.JsonConfigurationExtensions.AddJsonFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Configuration.JsonConfigurationExtensions.AddJsonFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Configuration.JsonConfigurationExtensions.AddJsonStream(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.IO.Stream)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.DependencyInjection">
    <Type Name="Microsoft.Extensions.DependencyInjection.ActivatorUtilities" Id="T:Microsoft.Extensions.DependencyInjection.ActivatorUtilities">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory(System.Type,System.Type[])" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory``1(System.Type[])" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateInstance(System.IServiceProvider,System.Type,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateInstance``1(System.IServiceProvider,System.Object[])" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetServiceOrCreateInstance(System.IServiceProvider,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetServiceOrCreateInstance``1(System.IServiceProvider)" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ActivatorUtilitiesConstructorAttribute" Id="T:Microsoft.Extensions.DependencyInjection.ActivatorUtilitiesConstructorAttribute">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ActivatorUtilitiesConstructorAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.AsyncServiceScope" Id="T:Microsoft.Extensions.DependencyInjection.AsyncServiceScope">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.AsyncServiceScope.#ctor(Microsoft.Extensions.DependencyInjection.IServiceScope)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.AsyncServiceScope.Dispose" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.AsyncServiceScope.DisposeAsync" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.AsyncServiceScope.ServiceProvider" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory" Id="T:Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.#ctor" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.#ctor(Microsoft.Extensions.DependencyInjection.ServiceProviderOptions)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.FromKeyedServicesAttribute" Id="T:Microsoft.Extensions.DependencyInjection.FromKeyedServicesAttribute">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.FromKeyedServicesAttribute.#ctor" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.FromKeyedServicesAttribute.#ctor(System.Object)" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.FromKeyedServicesAttribute.Key" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.FromKeyedServicesAttribute.LookupMode" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.IKeyedServiceProvider" Id="T:Microsoft.Extensions.DependencyInjection.IKeyedServiceProvider">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.IKeyedServiceProvider.GetKeyedService(System.Type,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.IKeyedServiceProvider.GetRequiredKeyedService(System.Type,System.Object)" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.IServiceCollection" Id="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />
    <Type Name="Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1" Id="T:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateServiceProvider(`0)" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.IServiceProviderIsKeyedService" Id="T:Microsoft.Extensions.DependencyInjection.IServiceProviderIsKeyedService">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.IServiceProviderIsKeyedService.IsKeyedService(System.Type,System.Object)" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.IServiceProviderIsService" Id="T:Microsoft.Extensions.DependencyInjection.IServiceProviderIsService">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.IServiceProviderIsService.IsService(System.Type)" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.IServiceScope" Id="T:Microsoft.Extensions.DependencyInjection.IServiceScope">
      <Member Id="P:Microsoft.Extensions.DependencyInjection.IServiceScope.ServiceProvider" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.IServiceScopeFactory" Id="T:Microsoft.Extensions.DependencyInjection.IServiceScopeFactory">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.IServiceScopeFactory.CreateScope" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ISupportRequiredService" Id="T:Microsoft.Extensions.DependencyInjection.ISupportRequiredService">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ISupportRequiredService.GetRequiredService(System.Type)" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.KeyedService" Id="T:Microsoft.Extensions.DependencyInjection.KeyedService">
      <Member Id="P:Microsoft.Extensions.DependencyInjection.KeyedService.AnyKey" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.LoggingServiceCollectionExtensions" Id="T:Microsoft.Extensions.DependencyInjection.LoggingServiceCollectionExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.LoggingServiceCollectionExtensions.AddLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.LoggingServiceCollectionExtensions.AddLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Logging.ILoggingBuilder})" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ObjectFactory" Id="T:Microsoft.Extensions.DependencyInjection.ObjectFactory" />
    <Type Name="Microsoft.Extensions.DependencyInjection.ObjectFactory`1" Id="T:Microsoft.Extensions.DependencyInjection.ObjectFactory`1" />
    <Type Name="Microsoft.Extensions.DependencyInjection.OptionsBuilderDataAnnotationsExtensions" Id="T:Microsoft.Extensions.DependencyInjection.OptionsBuilderDataAnnotationsExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.OptionsBuilderDataAnnotationsExtensions.ValidateDataAnnotations``1(Microsoft.Extensions.Options.OptionsBuilder{``0})" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.OptionsBuilderExtensions" Id="T:Microsoft.Extensions.DependencyInjection.OptionsBuilderExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.OptionsBuilderExtensions.ValidateOnStart``1(Microsoft.Extensions.Options.OptionsBuilder{``0})" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions" Id="T:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.AddOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.AddOptions``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.AddOptions``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.AddOptionsWithValidateOnStart``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.AddOptionsWithValidateOnStart``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.Configure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.Configure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.ConfigureAll``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.ConfigureOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.ConfigureOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.ConfigureOptions``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.PostConfigure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.PostConfigure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.PostConfigureAll``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{``0})" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ServiceCollection" Id="T:Microsoft.Extensions.DependencyInjection.ServiceCollection">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.#ctor" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.Clear" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.Contains(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.CopyTo(Microsoft.Extensions.DependencyInjection.ServiceDescriptor[],System.Int32)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.GetEnumerator" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.IndexOf(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.Insert(System.Int32,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.MakeReadOnly" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.Remove(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.RemoveAt(System.Int32)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.System#Collections#Generic#ICollection&lt;Microsoft#Extensions#DependencyInjection#ServiceDescriptor&gt;#Add(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollection.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceCollection.Count" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceCollection.IsReadOnly" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceCollection.Item(System.Int32)" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions" Id="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceProviderOptions)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean)" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ServiceCollectionHostedServiceExtensions" Id="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionHostedServiceExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionHostedServiceExtensions.AddHostedService``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionHostedServiceExtensions.AddHostedService``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions" Id="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Func{System.IServiceProvider,System.Object,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedScoped``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedScoped``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,System.Object,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedScoped``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedScoped``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,System.Object,``1})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Func{System.IServiceProvider,System.Object,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,``0)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,System.Object,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,System.Object,``1})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Func{System.IServiceProvider,System.Object,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedTransient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedTransient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,System.Object,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedTransient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddKeyedTransient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,System.Object,``1})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``1})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,``0)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``1})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``1})" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ServiceDescriptor" Id="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.#ctor(System.Type,System.Func{System.IServiceProvider,System.Object},Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.#ctor(System.Type,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.#ctor(System.Type,System.Object,System.Func{System.IServiceProvider,System.Object,System.Object},Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.#ctor(System.Type,System.Object,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.#ctor(System.Type,System.Object,System.Type,Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.#ctor(System.Type,System.Type,Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Describe(System.Type,System.Func{System.IServiceProvider,System.Object},Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Describe(System.Type,System.Type,Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.DescribeKeyed(System.Type,System.Object,System.Func{System.IServiceProvider,System.Object,System.Object},Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.DescribeKeyed(System.Type,System.Object,System.Type,Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.KeyedScoped(System.Type,System.Object,System.Func{System.IServiceProvider,System.Object,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.KeyedScoped(System.Type,System.Object,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.KeyedScoped``1(System.Object,System.Func{System.IServiceProvider,System.Object,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.KeyedScoped``2(System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.KeyedScoped``2(System.Object,System.Func{System.IServiceProvider,System.Object,``1})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.KeyedSingleton(System.Type,System.Object,System.Func{System.IServiceProvider,System.Object,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.KeyedSingleton(System.Type,System.Object,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.KeyedSingleton(System.Type,System.Object,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.KeyedSingleton``1(System.Object,``0)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.KeyedSingleton``1(System.Object,System.Func{System.IServiceProvider,System.Object,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.KeyedSingleton``2(System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.KeyedSingleton``2(System.Object,System.Func{System.IServiceProvider,System.Object,``1})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.KeyedTransient(System.Type,System.Object,System.Func{System.IServiceProvider,System.Object,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.KeyedTransient(System.Type,System.Object,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.KeyedTransient``1(System.Object,System.Func{System.IServiceProvider,System.Object,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.KeyedTransient``2(System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.KeyedTransient``2(System.Object,System.Func{System.IServiceProvider,System.Object,``1})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Scoped(System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Scoped(System.Type,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Scoped``1(System.Func{System.IServiceProvider,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Scoped``2" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Scoped``2(System.Func{System.IServiceProvider,``1})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton(System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton(System.Type,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton(System.Type,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton``1(``0)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton``1(System.Func{System.IServiceProvider,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton``2" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton``2(System.Func{System.IServiceProvider,``1})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ToString" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Transient(System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Transient(System.Type,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Transient``1(System.Func{System.IServiceProvider,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Transient``2" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Transient``2(System.Func{System.IServiceProvider,``1})" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ImplementationFactory" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ImplementationInstance" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ImplementationType" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.IsKeyedService" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.KeyedImplementationFactory" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.KeyedImplementationInstance" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.KeyedImplementationType" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Lifetime" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ServiceKey" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ServiceType" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ServiceKeyAttribute" Id="T:Microsoft.Extensions.DependencyInjection.ServiceKeyAttribute">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceKeyAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ServiceKeyLookupMode" Id="T:Microsoft.Extensions.DependencyInjection.ServiceKeyLookupMode">
      <Member Id="F:Microsoft.Extensions.DependencyInjection.ServiceKeyLookupMode.ExplicitKey" />
      <Member Id="F:Microsoft.Extensions.DependencyInjection.ServiceKeyLookupMode.InheritKey" />
      <Member Id="F:Microsoft.Extensions.DependencyInjection.ServiceKeyLookupMode.NullKey" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ServiceLifetime" Id="T:Microsoft.Extensions.DependencyInjection.ServiceLifetime">
      <Member Id="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />
      <Member Id="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />
      <Member Id="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ServiceProvider" Id="T:Microsoft.Extensions.DependencyInjection.ServiceProvider">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProvider.Dispose" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProvider.DisposeAsync" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProvider.GetKeyedService(System.Type,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProvider.GetRequiredKeyedService(System.Type,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(System.Type)" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ServiceProviderKeyedServiceExtensions" Id="T:Microsoft.Extensions.DependencyInjection.ServiceProviderKeyedServiceExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProviderKeyedServiceExtensions.GetKeyedService(System.IServiceProvider,System.Type,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProviderKeyedServiceExtensions.GetKeyedService``1(System.IServiceProvider,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProviderKeyedServiceExtensions.GetKeyedServices(System.IServiceProvider,System.Type,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProviderKeyedServiceExtensions.GetKeyedServices``1(System.IServiceProvider,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProviderKeyedServiceExtensions.GetRequiredKeyedService(System.IServiceProvider,System.Type,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProviderKeyedServiceExtensions.GetRequiredKeyedService``1(System.IServiceProvider,System.Object)" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ServiceProviderOptions" Id="T:Microsoft.Extensions.DependencyInjection.ServiceProviderOptions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProviderOptions.#ctor" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceProviderOptions.ValidateOnBuild" />
      <Member Id="P:Microsoft.Extensions.DependencyInjection.ServiceProviderOptions.ValidateScopes" />
    </Type>
    <Type Name="Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions" Id="T:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.CreateAsyncScope(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.CreateAsyncScope(System.IServiceProvider)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.CreateScope(System.IServiceProvider)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(System.IServiceProvider,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService``1(System.IServiceProvider)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService``1(System.IServiceProvider)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetServices(System.IServiceProvider,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetServices``1(System.IServiceProvider)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.DependencyInjection.Extensions">
    <Type Name="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions" Id="T:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions">
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Add(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Add(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyInjection.ServiceDescriptor})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.RemoveAll(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.RemoveAll``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.RemoveAllKeyed(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.RemoveAllKeyed``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Replace(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAdd(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAdd(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyInjection.ServiceDescriptor})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyInjection.ServiceDescriptor})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddKeyedScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddKeyedScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Func{System.IServiceProvider,System.Object,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddKeyedScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddKeyedScoped``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddKeyedScoped``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,System.Object,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddKeyedScoped``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Func{System.IServiceProvider,System.Object,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,``0)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,System.Object,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddKeyedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddKeyedTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddKeyedTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Func{System.IServiceProvider,System.Object,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddKeyedTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddKeyedTransient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddKeyedTransient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,System.Object,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddKeyedTransient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,``0)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <Member Id="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Hosting">
    <Type Name="Microsoft.Extensions.Hosting.BackgroundService" Id="T:Microsoft.Extensions.Hosting.BackgroundService">
      <Member Id="M:Microsoft.Extensions.Hosting.BackgroundService.#ctor" />
      <Member Id="M:Microsoft.Extensions.Hosting.BackgroundService.Dispose" />
      <Member Id="M:Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Extensions.Hosting.BackgroundService.ExecuteTask" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.BackgroundServiceExceptionBehavior" Id="T:Microsoft.Extensions.Hosting.BackgroundServiceExceptionBehavior">
      <Member Id="F:Microsoft.Extensions.Hosting.BackgroundServiceExceptionBehavior.Ignore" />
      <Member Id="F:Microsoft.Extensions.Hosting.BackgroundServiceExceptionBehavior.StopHost" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.ConsoleLifetimeOptions" Id="T:Microsoft.Extensions.Hosting.ConsoleLifetimeOptions">
      <Member Id="M:Microsoft.Extensions.Hosting.ConsoleLifetimeOptions.#ctor" />
      <Member Id="P:Microsoft.Extensions.Hosting.ConsoleLifetimeOptions.SuppressStatusMessages" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.EnvironmentName" Id="T:Microsoft.Extensions.Hosting.EnvironmentName">
      <Member Id="F:Microsoft.Extensions.Hosting.EnvironmentName.Development" />
      <Member Id="F:Microsoft.Extensions.Hosting.EnvironmentName.Production" />
      <Member Id="F:Microsoft.Extensions.Hosting.EnvironmentName.Staging" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.Environments" Id="T:Microsoft.Extensions.Hosting.Environments">
      <Member Id="F:Microsoft.Extensions.Hosting.Environments.Development" />
      <Member Id="F:Microsoft.Extensions.Hosting.Environments.Production" />
      <Member Id="F:Microsoft.Extensions.Hosting.Environments.Staging" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.Host" Id="T:Microsoft.Extensions.Hosting.Host">
      <Member Id="M:Microsoft.Extensions.Hosting.Host.CreateApplicationBuilder" />
      <Member Id="M:Microsoft.Extensions.Hosting.Host.CreateApplicationBuilder(Microsoft.Extensions.Hosting.HostApplicationBuilderSettings)" />
      <Member Id="M:Microsoft.Extensions.Hosting.Host.CreateApplicationBuilder(System.String[])" />
      <Member Id="M:Microsoft.Extensions.Hosting.Host.CreateDefaultBuilder" />
      <Member Id="M:Microsoft.Extensions.Hosting.Host.CreateDefaultBuilder(System.String[])" />
      <Member Id="M:Microsoft.Extensions.Hosting.Host.CreateEmptyApplicationBuilder(Microsoft.Extensions.Hosting.HostApplicationBuilderSettings)" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.HostAbortedException" Id="T:Microsoft.Extensions.Hosting.HostAbortedException">
      <Member Id="M:Microsoft.Extensions.Hosting.HostAbortedException.#ctor" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostAbortedException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostAbortedException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.HostApplicationBuilder" Id="T:Microsoft.Extensions.Hosting.HostApplicationBuilder">
      <Member Id="M:Microsoft.Extensions.Hosting.HostApplicationBuilder.#ctor" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostApplicationBuilder.#ctor(Microsoft.Extensions.Hosting.HostApplicationBuilderSettings)" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostApplicationBuilder.#ctor(System.String[])" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostApplicationBuilder.Build" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostApplicationBuilder.ConfigureContainer``1(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0},System.Action{``0})" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Configuration" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Environment" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Logging" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Metrics" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Microsoft#Extensions#Hosting#IHostApplicationBuilder#Configuration" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Microsoft#Extensions#Hosting#IHostApplicationBuilder#Properties" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Services" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.HostApplicationBuilderSettings" Id="T:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings">
      <Member Id="M:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.#ctor" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.ApplicationName" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.Args" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.Configuration" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.ContentRootPath" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.DisableDefaults" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.EnvironmentName" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.HostBuilder" Id="T:Microsoft.Extensions.Hosting.HostBuilder">
      <Member Id="M:Microsoft.Extensions.Hosting.HostBuilder.#ctor" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostBuilder.Build" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostBuilder.ConfigureAppConfiguration(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Configuration.IConfigurationBuilder})" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostBuilder.ConfigureContainer``1(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,``0})" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostBuilder.ConfigureHostConfiguration(System.Action{Microsoft.Extensions.Configuration.IConfigurationBuilder})" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostBuilder.ConfigureServices(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection})" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostBuilder.UseServiceProviderFactory``1(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0})" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostBuilder.UseServiceProviderFactory``1(System.Func{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0}})" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostBuilder.Properties" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.HostBuilderContext" Id="T:Microsoft.Extensions.Hosting.HostBuilderContext">
      <Member Id="M:Microsoft.Extensions.Hosting.HostBuilderContext.#ctor(System.Collections.Generic.IDictionary{System.Object,System.Object})" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostBuilderContext.Configuration" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostBuilderContext.HostingEnvironment" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostBuilderContext.Properties" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.HostDefaults" Id="T:Microsoft.Extensions.Hosting.HostDefaults">
      <Member Id="F:Microsoft.Extensions.Hosting.HostDefaults.ApplicationKey" />
      <Member Id="F:Microsoft.Extensions.Hosting.HostDefaults.ContentRootKey" />
      <Member Id="F:Microsoft.Extensions.Hosting.HostDefaults.EnvironmentKey" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.HostEnvironmentEnvExtensions" Id="T:Microsoft.Extensions.Hosting.HostEnvironmentEnvExtensions">
      <Member Id="M:Microsoft.Extensions.Hosting.HostEnvironmentEnvExtensions.IsDevelopment(Microsoft.Extensions.Hosting.IHostEnvironment)" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostEnvironmentEnvExtensions.IsEnvironment(Microsoft.Extensions.Hosting.IHostEnvironment,System.String)" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostEnvironmentEnvExtensions.IsProduction(Microsoft.Extensions.Hosting.IHostEnvironment)" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostEnvironmentEnvExtensions.IsStaging(Microsoft.Extensions.Hosting.IHostEnvironment)" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.HostingAbstractionsHostBuilderExtensions" Id="T:Microsoft.Extensions.Hosting.HostingAbstractionsHostBuilderExtensions">
      <Member Id="M:Microsoft.Extensions.Hosting.HostingAbstractionsHostBuilderExtensions.Start(Microsoft.Extensions.Hosting.IHostBuilder)" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingAbstractionsHostBuilderExtensions.StartAsync(Microsoft.Extensions.Hosting.IHostBuilder,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions" Id="T:Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions">
      <Member Id="M:Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.Run(Microsoft.Extensions.Hosting.IHost)" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(Microsoft.Extensions.Hosting.IHost,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.Start(Microsoft.Extensions.Hosting.IHost)" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.StopAsync(Microsoft.Extensions.Hosting.IHost,System.TimeSpan)" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.WaitForShutdown(Microsoft.Extensions.Hosting.IHost)" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.WaitForShutdownAsync(Microsoft.Extensions.Hosting.IHost,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.HostingEnvironmentExtensions" Id="T:Microsoft.Extensions.Hosting.HostingEnvironmentExtensions">
      <Member Id="M:Microsoft.Extensions.Hosting.HostingEnvironmentExtensions.IsDevelopment(Microsoft.Extensions.Hosting.IHostingEnvironment)" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingEnvironmentExtensions.IsEnvironment(Microsoft.Extensions.Hosting.IHostingEnvironment,System.String)" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingEnvironmentExtensions.IsProduction(Microsoft.Extensions.Hosting.IHostingEnvironment)" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingEnvironmentExtensions.IsStaging(Microsoft.Extensions.Hosting.IHostingEnvironment)" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.HostingHostBuilderExtensions" Id="T:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions">
      <Member Id="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureAppConfiguration(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Configuration.IConfigurationBuilder})" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureContainer``1(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{``0})" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureDefaults(Microsoft.Extensions.Hosting.IHostBuilder,System.String[])" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureHostOptions(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Hosting.HostOptions})" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureHostOptions(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.HostOptions})" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureLogging(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Logging.ILoggingBuilder})" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureLogging(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Logging.ILoggingBuilder})" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureMetrics(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Diagnostics.Metrics.IMetricsBuilder})" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureMetrics(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Diagnostics.Metrics.IMetricsBuilder})" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureServices(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.RunConsoleAsync(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.ConsoleLifetimeOptions},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.RunConsoleAsync(Microsoft.Extensions.Hosting.IHostBuilder,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.UseConsoleLifetime(Microsoft.Extensions.Hosting.IHostBuilder)" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.UseConsoleLifetime(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.ConsoleLifetimeOptions})" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.UseContentRoot(Microsoft.Extensions.Hosting.IHostBuilder,System.String)" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.UseDefaultServiceProvider(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.DependencyInjection.ServiceProviderOptions})" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.UseDefaultServiceProvider(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.ServiceProviderOptions})" />
      <Member Id="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.UseEnvironment(Microsoft.Extensions.Hosting.IHostBuilder,System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.HostOptions" Id="T:Microsoft.Extensions.Hosting.HostOptions">
      <Member Id="M:Microsoft.Extensions.Hosting.HostOptions.#ctor" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostOptions.BackgroundServiceExceptionBehavior" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostOptions.ServicesStartConcurrently" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostOptions.ServicesStopConcurrently" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostOptions.ShutdownTimeout" />
      <Member Id="P:Microsoft.Extensions.Hosting.HostOptions.StartupTimeout" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.IApplicationLifetime" Id="T:Microsoft.Extensions.Hosting.IApplicationLifetime">
      <Member Id="M:Microsoft.Extensions.Hosting.IApplicationLifetime.StopApplication" />
      <Member Id="P:Microsoft.Extensions.Hosting.IApplicationLifetime.ApplicationStarted" />
      <Member Id="P:Microsoft.Extensions.Hosting.IApplicationLifetime.ApplicationStopped" />
      <Member Id="P:Microsoft.Extensions.Hosting.IApplicationLifetime.ApplicationStopping" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.IHost" Id="T:Microsoft.Extensions.Hosting.IHost">
      <Member Id="M:Microsoft.Extensions.Hosting.IHost.StartAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Extensions.Hosting.IHost.StopAsync(System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Extensions.Hosting.IHost.Services" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.IHostApplicationBuilder" Id="T:Microsoft.Extensions.Hosting.IHostApplicationBuilder">
      <Member Id="M:Microsoft.Extensions.Hosting.IHostApplicationBuilder.ConfigureContainer``1(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0},System.Action{``0})" />
      <Member Id="P:Microsoft.Extensions.Hosting.IHostApplicationBuilder.Configuration" />
      <Member Id="P:Microsoft.Extensions.Hosting.IHostApplicationBuilder.Environment" />
      <Member Id="P:Microsoft.Extensions.Hosting.IHostApplicationBuilder.Logging" />
      <Member Id="P:Microsoft.Extensions.Hosting.IHostApplicationBuilder.Metrics" />
      <Member Id="P:Microsoft.Extensions.Hosting.IHostApplicationBuilder.Properties" />
      <Member Id="P:Microsoft.Extensions.Hosting.IHostApplicationBuilder.Services" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.IHostApplicationLifetime" Id="T:Microsoft.Extensions.Hosting.IHostApplicationLifetime">
      <Member Id="M:Microsoft.Extensions.Hosting.IHostApplicationLifetime.StopApplication" />
      <Member Id="P:Microsoft.Extensions.Hosting.IHostApplicationLifetime.ApplicationStarted" />
      <Member Id="P:Microsoft.Extensions.Hosting.IHostApplicationLifetime.ApplicationStopped" />
      <Member Id="P:Microsoft.Extensions.Hosting.IHostApplicationLifetime.ApplicationStopping" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.IHostBuilder" Id="T:Microsoft.Extensions.Hosting.IHostBuilder">
      <Member Id="M:Microsoft.Extensions.Hosting.IHostBuilder.Build" />
      <Member Id="M:Microsoft.Extensions.Hosting.IHostBuilder.ConfigureAppConfiguration(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Configuration.IConfigurationBuilder})" />
      <Member Id="M:Microsoft.Extensions.Hosting.IHostBuilder.ConfigureContainer``1(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,``0})" />
      <Member Id="M:Microsoft.Extensions.Hosting.IHostBuilder.ConfigureHostConfiguration(System.Action{Microsoft.Extensions.Configuration.IConfigurationBuilder})" />
      <Member Id="M:Microsoft.Extensions.Hosting.IHostBuilder.ConfigureServices(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection})" />
      <Member Id="M:Microsoft.Extensions.Hosting.IHostBuilder.UseServiceProviderFactory``1(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0})" />
      <Member Id="M:Microsoft.Extensions.Hosting.IHostBuilder.UseServiceProviderFactory``1(System.Func{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0}})" />
      <Member Id="P:Microsoft.Extensions.Hosting.IHostBuilder.Properties" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.IHostedLifecycleService" Id="T:Microsoft.Extensions.Hosting.IHostedLifecycleService">
      <Member Id="M:Microsoft.Extensions.Hosting.IHostedLifecycleService.StartedAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Extensions.Hosting.IHostedLifecycleService.StartingAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Extensions.Hosting.IHostedLifecycleService.StoppedAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Extensions.Hosting.IHostedLifecycleService.StoppingAsync(System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.IHostedService" Id="T:Microsoft.Extensions.Hosting.IHostedService">
      <Member Id="M:Microsoft.Extensions.Hosting.IHostedService.StartAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.IHostEnvironment" Id="T:Microsoft.Extensions.Hosting.IHostEnvironment">
      <Member Id="P:Microsoft.Extensions.Hosting.IHostEnvironment.ApplicationName" />
      <Member Id="P:Microsoft.Extensions.Hosting.IHostEnvironment.ContentRootFileProvider" />
      <Member Id="P:Microsoft.Extensions.Hosting.IHostEnvironment.ContentRootPath" />
      <Member Id="P:Microsoft.Extensions.Hosting.IHostEnvironment.EnvironmentName" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.IHostingEnvironment" Id="T:Microsoft.Extensions.Hosting.IHostingEnvironment">
      <Member Id="P:Microsoft.Extensions.Hosting.IHostingEnvironment.ApplicationName" />
      <Member Id="P:Microsoft.Extensions.Hosting.IHostingEnvironment.ContentRootFileProvider" />
      <Member Id="P:Microsoft.Extensions.Hosting.IHostingEnvironment.ContentRootPath" />
      <Member Id="P:Microsoft.Extensions.Hosting.IHostingEnvironment.EnvironmentName" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.IHostLifetime" Id="T:Microsoft.Extensions.Hosting.IHostLifetime">
      <Member Id="M:Microsoft.Extensions.Hosting.IHostLifetime.StopAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Extensions.Hosting.IHostLifetime.WaitForStartAsync(System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.SystemdHostBuilderExtensions" Id="T:Microsoft.Extensions.Hosting.SystemdHostBuilderExtensions">
      <Member Id="M:Microsoft.Extensions.Hosting.SystemdHostBuilderExtensions.AddSystemd(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.Hosting.SystemdHostBuilderExtensions.UseSystemd(Microsoft.Extensions.Hosting.IHostBuilder)" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.WindowsServiceLifetimeHostBuilderExtensions" Id="T:Microsoft.Extensions.Hosting.WindowsServiceLifetimeHostBuilderExtensions">
      <Member Id="M:Microsoft.Extensions.Hosting.WindowsServiceLifetimeHostBuilderExtensions.AddWindowsService(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <Member Id="M:Microsoft.Extensions.Hosting.WindowsServiceLifetimeHostBuilderExtensions.AddWindowsService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Hosting.WindowsServiceLifetimeOptions})" />
      <Member Id="M:Microsoft.Extensions.Hosting.WindowsServiceLifetimeHostBuilderExtensions.UseWindowsService(Microsoft.Extensions.Hosting.IHostBuilder)" />
      <Member Id="M:Microsoft.Extensions.Hosting.WindowsServiceLifetimeHostBuilderExtensions.UseWindowsService(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.WindowsServiceLifetimeOptions})" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.WindowsServiceLifetimeOptions" Id="T:Microsoft.Extensions.Hosting.WindowsServiceLifetimeOptions">
      <Member Id="M:Microsoft.Extensions.Hosting.WindowsServiceLifetimeOptions.#ctor" />
      <Member Id="P:Microsoft.Extensions.Hosting.WindowsServiceLifetimeOptions.ServiceName" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Hosting.Internal">
    <Type Name="Microsoft.Extensions.Hosting.Internal.ApplicationLifetime" Id="T:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime">
      <Member Id="M:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.#ctor(Microsoft.Extensions.Logging.ILogger{Microsoft.Extensions.Hosting.Internal.ApplicationLifetime})" />
      <Member Id="M:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.NotifyStarted" />
      <Member Id="M:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.NotifyStopped" />
      <Member Id="M:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.StopApplication" />
      <Member Id="P:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.ApplicationStarted" />
      <Member Id="P:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.ApplicationStopped" />
      <Member Id="P:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.ApplicationStopping" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.Internal.ConsoleLifetime" Id="T:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime">
      <Member Id="M:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.ConsoleLifetimeOptions},Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Hosting.IHostApplicationLifetime,Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.HostOptions})" />
      <Member Id="M:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.ConsoleLifetimeOptions},Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Hosting.IHostApplicationLifetime,Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.HostOptions},Microsoft.Extensions.Logging.ILoggerFactory)" />
      <Member Id="M:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.Dispose" />
      <Member Id="M:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.StopAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.WaitForStartAsync(System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.Internal.HostingEnvironment" Id="T:Microsoft.Extensions.Hosting.Internal.HostingEnvironment">
      <Member Id="M:Microsoft.Extensions.Hosting.Internal.HostingEnvironment.#ctor" />
      <Member Id="P:Microsoft.Extensions.Hosting.Internal.HostingEnvironment.ApplicationName" />
      <Member Id="P:Microsoft.Extensions.Hosting.Internal.HostingEnvironment.ContentRootFileProvider" />
      <Member Id="P:Microsoft.Extensions.Hosting.Internal.HostingEnvironment.ContentRootPath" />
      <Member Id="P:Microsoft.Extensions.Hosting.Internal.HostingEnvironment.EnvironmentName" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Hosting.Systemd">
    <Type Name="Microsoft.Extensions.Hosting.Systemd.ISystemdNotifier" Id="T:Microsoft.Extensions.Hosting.Systemd.ISystemdNotifier">
      <Member Id="M:Microsoft.Extensions.Hosting.Systemd.ISystemdNotifier.Notify(Microsoft.Extensions.Hosting.Systemd.ServiceState)" />
      <Member Id="P:Microsoft.Extensions.Hosting.Systemd.ISystemdNotifier.IsEnabled" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.Systemd.ServiceState" Id="T:Microsoft.Extensions.Hosting.Systemd.ServiceState">
      <Member Id="F:Microsoft.Extensions.Hosting.Systemd.ServiceState.Ready" />
      <Member Id="F:Microsoft.Extensions.Hosting.Systemd.ServiceState.Stopping" />
      <Member Id="M:Microsoft.Extensions.Hosting.Systemd.ServiceState.#ctor(System.String)" />
      <Member Id="M:Microsoft.Extensions.Hosting.Systemd.ServiceState.ToString" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.Systemd.SystemdHelpers" Id="T:Microsoft.Extensions.Hosting.Systemd.SystemdHelpers">
      <Member Id="M:Microsoft.Extensions.Hosting.Systemd.SystemdHelpers.IsSystemdService" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.Systemd.SystemdLifetime" Id="T:Microsoft.Extensions.Hosting.Systemd.SystemdLifetime">
      <Member Id="M:Microsoft.Extensions.Hosting.Systemd.SystemdLifetime.#ctor(Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Hosting.IHostApplicationLifetime,Microsoft.Extensions.Hosting.Systemd.ISystemdNotifier,Microsoft.Extensions.Logging.ILoggerFactory)" />
      <Member Id="M:Microsoft.Extensions.Hosting.Systemd.SystemdLifetime.Dispose" />
      <Member Id="M:Microsoft.Extensions.Hosting.Systemd.SystemdLifetime.StopAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Extensions.Hosting.Systemd.SystemdLifetime.WaitForStartAsync(System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.Systemd.SystemdNotifier" Id="T:Microsoft.Extensions.Hosting.Systemd.SystemdNotifier">
      <Member Id="M:Microsoft.Extensions.Hosting.Systemd.SystemdNotifier.#ctor" />
      <Member Id="M:Microsoft.Extensions.Hosting.Systemd.SystemdNotifier.Notify(Microsoft.Extensions.Hosting.Systemd.ServiceState)" />
      <Member Id="P:Microsoft.Extensions.Hosting.Systemd.SystemdNotifier.IsEnabled" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Hosting.WindowsServices">
    <Type Name="Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceHelpers" Id="T:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceHelpers">
      <Member Id="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceHelpers.IsWindowsService" />
    </Type>
    <Type Name="Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime" Id="T:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime">
      <Member Id="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.#ctor(Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Hosting.IHostApplicationLifetime,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.HostOptions})" />
      <Member Id="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.#ctor(Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Hosting.IHostApplicationLifetime,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.HostOptions},Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.WindowsServiceLifetimeOptions})" />
      <Member Id="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.Dispose(System.Boolean)" />
      <Member Id="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.OnShutdown" />
      <Member Id="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.OnStart(System.String[])" />
      <Member Id="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.OnStop" />
      <Member Id="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.StopAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.WaitForStartAsync(System.Threading.CancellationToken)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Logging">
    <Type Name="Microsoft.Extensions.Logging.ActivityTrackingOptions" Id="T:Microsoft.Extensions.Logging.ActivityTrackingOptions">
      <Member Id="F:Microsoft.Extensions.Logging.ActivityTrackingOptions.Baggage" />
      <Member Id="F:Microsoft.Extensions.Logging.ActivityTrackingOptions.None" />
      <Member Id="F:Microsoft.Extensions.Logging.ActivityTrackingOptions.ParentId" />
      <Member Id="F:Microsoft.Extensions.Logging.ActivityTrackingOptions.SpanId" />
      <Member Id="F:Microsoft.Extensions.Logging.ActivityTrackingOptions.Tags" />
      <Member Id="F:Microsoft.Extensions.Logging.ActivityTrackingOptions.TraceFlags" />
      <Member Id="F:Microsoft.Extensions.Logging.ActivityTrackingOptions.TraceId" />
      <Member Id="F:Microsoft.Extensions.Logging.ActivityTrackingOptions.TraceState" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions" Id="T:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions">
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.ILoggingBuilder,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.ILoggingBuilder,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.ILoggingBuilder,System.Func{System.String,System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.ILoggingBuilder,System.String,Microsoft.Extensions.Logging.LogLevel)" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.ILoggingBuilder,System.String,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.LoggerFilterOptions,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.LoggerFilterOptions,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.LoggerFilterOptions,System.Func{System.String,System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.LoggerFilterOptions,System.String,Microsoft.Extensions.Logging.LogLevel)" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.LoggerFilterOptions,System.String,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.ILoggingBuilder,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.ILoggingBuilder,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.ILoggingBuilder,System.String,Microsoft.Extensions.Logging.LogLevel)" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.ILoggingBuilder,System.String,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.LoggerFilterOptions,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.LoggerFilterOptions,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.LoggerFilterOptions,System.String,Microsoft.Extensions.Logging.LogLevel)" />
      <Member Id="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.LoggerFilterOptions,System.String,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.LoggerFactory" Id="T:Microsoft.Extensions.Logging.LoggerFactory">
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFactory.#ctor" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFactory.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.ILoggerProvider})" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFactory.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.ILoggerProvider},Microsoft.Extensions.Logging.LoggerFilterOptions)" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFactory.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.ILoggerProvider},Microsoft.Extensions.Options.IOptionsMonitor{Microsoft.Extensions.Logging.LoggerFilterOptions})" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFactory.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.ILoggerProvider},Microsoft.Extensions.Options.IOptionsMonitor{Microsoft.Extensions.Logging.LoggerFilterOptions},Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Logging.LoggerFactoryOptions})" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFactory.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.ILoggerProvider},Microsoft.Extensions.Options.IOptionsMonitor{Microsoft.Extensions.Logging.LoggerFilterOptions},Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Logging.LoggerFactoryOptions},Microsoft.Extensions.Logging.IExternalScopeProvider)" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFactory.CheckDisposed" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFactory.Create(System.Action{Microsoft.Extensions.Logging.ILoggingBuilder})" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFactory.CreateLogger(System.String)" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFactory.Dispose" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.LoggerFactoryOptions" Id="T:Microsoft.Extensions.Logging.LoggerFactoryOptions">
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFactoryOptions.#ctor" />
      <Member Id="P:Microsoft.Extensions.Logging.LoggerFactoryOptions.ActivityTrackingOptions" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.LoggerFilterOptions" Id="T:Microsoft.Extensions.Logging.LoggerFilterOptions">
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFilterOptions.#ctor" />
      <Member Id="P:Microsoft.Extensions.Logging.LoggerFilterOptions.CaptureScopes" />
      <Member Id="P:Microsoft.Extensions.Logging.LoggerFilterOptions.MinLevel" />
      <Member Id="P:Microsoft.Extensions.Logging.LoggerFilterOptions.Rules" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.LoggerFilterRule" Id="T:Microsoft.Extensions.Logging.LoggerFilterRule">
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFilterRule.#ctor(System.String,System.String,System.Nullable{Microsoft.Extensions.Logging.LogLevel},System.Func{System.String,System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggerFilterRule.ToString" />
      <Member Id="P:Microsoft.Extensions.Logging.LoggerFilterRule.CategoryName" />
      <Member Id="P:Microsoft.Extensions.Logging.LoggerFilterRule.Filter" />
      <Member Id="P:Microsoft.Extensions.Logging.LoggerFilterRule.LogLevel" />
      <Member Id="P:Microsoft.Extensions.Logging.LoggerFilterRule.ProviderName" />
    </Type>
    <Type Name="Microsoft.Extensions.Logging.LoggingBuilderExtensions" Id="T:Microsoft.Extensions.Logging.LoggingBuilderExtensions">
      <Member Id="M:Microsoft.Extensions.Logging.LoggingBuilderExtensions.AddProvider(Microsoft.Extensions.Logging.ILoggingBuilder,Microsoft.Extensions.Logging.ILoggerProvider)" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggingBuilderExtensions.ClearProviders(Microsoft.Extensions.Logging.ILoggingBuilder)" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggingBuilderExtensions.Configure(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Logging.LoggerFactoryOptions})" />
      <Member Id="M:Microsoft.Extensions.Logging.LoggingBuilderExtensions.SetMinimumLevel(Microsoft.Extensions.Logging.ILoggingBuilder,Microsoft.Extensions.Logging.LogLevel)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Options">
    <Type Name="Microsoft.Extensions.Options.ConfigureNamedOptions`1" Id="T:Microsoft.Extensions.Options.ConfigureNamedOptions`1">
      <Member Id="M:Microsoft.Extensions.Options.ConfigureNamedOptions`1.#ctor(System.String,System.Action{`0})" />
      <Member Id="M:Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(`0)" />
      <Member Id="M:Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(System.String,`0)" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`1.Action" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`1.Name" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.ConfigureNamedOptions`2" Id="T:Microsoft.Extensions.Options.ConfigureNamedOptions`2">
      <Member Id="M:Microsoft.Extensions.Options.ConfigureNamedOptions`2.#ctor(System.String,`1,System.Action{`0,`1})" />
      <Member Id="M:Microsoft.Extensions.Options.ConfigureNamedOptions`2.Configure(`0)" />
      <Member Id="M:Microsoft.Extensions.Options.ConfigureNamedOptions`2.Configure(System.String,`0)" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`2.Action" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`2.Dependency" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`2.Name" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.ConfigureNamedOptions`3" Id="T:Microsoft.Extensions.Options.ConfigureNamedOptions`3">
      <Member Id="M:Microsoft.Extensions.Options.ConfigureNamedOptions`3.#ctor(System.String,`1,`2,System.Action{`0,`1,`2})" />
      <Member Id="M:Microsoft.Extensions.Options.ConfigureNamedOptions`3.Configure(`0)" />
      <Member Id="M:Microsoft.Extensions.Options.ConfigureNamedOptions`3.Configure(System.String,`0)" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`3.Action" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`3.Dependency1" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`3.Dependency2" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`3.Name" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.ConfigureNamedOptions`4" Id="T:Microsoft.Extensions.Options.ConfigureNamedOptions`4">
      <Member Id="M:Microsoft.Extensions.Options.ConfigureNamedOptions`4.#ctor(System.String,`1,`2,`3,System.Action{`0,`1,`2,`3})" />
      <Member Id="M:Microsoft.Extensions.Options.ConfigureNamedOptions`4.Configure(`0)" />
      <Member Id="M:Microsoft.Extensions.Options.ConfigureNamedOptions`4.Configure(System.String,`0)" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`4.Action" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`4.Dependency1" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`4.Dependency2" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`4.Dependency3" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`4.Name" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.ConfigureNamedOptions`5" Id="T:Microsoft.Extensions.Options.ConfigureNamedOptions`5">
      <Member Id="M:Microsoft.Extensions.Options.ConfigureNamedOptions`5.#ctor(System.String,`1,`2,`3,`4,System.Action{`0,`1,`2,`3,`4})" />
      <Member Id="M:Microsoft.Extensions.Options.ConfigureNamedOptions`5.Configure(`0)" />
      <Member Id="M:Microsoft.Extensions.Options.ConfigureNamedOptions`5.Configure(System.String,`0)" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`5.Action" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`5.Dependency1" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`5.Dependency2" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`5.Dependency3" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`5.Dependency4" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`5.Name" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.ConfigureNamedOptions`6" Id="T:Microsoft.Extensions.Options.ConfigureNamedOptions`6">
      <Member Id="M:Microsoft.Extensions.Options.ConfigureNamedOptions`6.#ctor(System.String,`1,`2,`3,`4,`5,System.Action{`0,`1,`2,`3,`4,`5})" />
      <Member Id="M:Microsoft.Extensions.Options.ConfigureNamedOptions`6.Configure(`0)" />
      <Member Id="M:Microsoft.Extensions.Options.ConfigureNamedOptions`6.Configure(System.String,`0)" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`6.Action" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`6.Dependency1" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`6.Dependency2" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`6.Dependency3" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`6.Dependency4" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`6.Dependency5" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureNamedOptions`6.Name" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.ConfigureOptions`1" Id="T:Microsoft.Extensions.Options.ConfigureOptions`1">
      <Member Id="M:Microsoft.Extensions.Options.ConfigureOptions`1.#ctor(System.Action{`0})" />
      <Member Id="M:Microsoft.Extensions.Options.ConfigureOptions`1.Configure(`0)" />
      <Member Id="P:Microsoft.Extensions.Options.ConfigureOptions`1.Action" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.DataAnnotationValidateOptions`1" Id="T:Microsoft.Extensions.Options.DataAnnotationValidateOptions`1">
      <Member Id="M:Microsoft.Extensions.Options.DataAnnotationValidateOptions`1.#ctor(System.String)" />
      <Member Id="M:Microsoft.Extensions.Options.DataAnnotationValidateOptions`1.Validate(System.String,`0)" />
      <Member Id="P:Microsoft.Extensions.Options.DataAnnotationValidateOptions`1.Name" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.IConfigureNamedOptions`1" Id="T:Microsoft.Extensions.Options.IConfigureNamedOptions`1">
      <Member Id="M:Microsoft.Extensions.Options.IConfigureNamedOptions`1.Configure(System.String,`0)" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.IConfigureOptions`1" Id="T:Microsoft.Extensions.Options.IConfigureOptions`1">
      <Member Id="M:Microsoft.Extensions.Options.IConfigureOptions`1.Configure(`0)" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.IOptions`1" Id="T:Microsoft.Extensions.Options.IOptions`1">
      <Member Id="P:Microsoft.Extensions.Options.IOptions`1.Value" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.IOptionsChangeTokenSource`1" Id="T:Microsoft.Extensions.Options.IOptionsChangeTokenSource`1">
      <Member Id="M:Microsoft.Extensions.Options.IOptionsChangeTokenSource`1.GetChangeToken" />
      <Member Id="P:Microsoft.Extensions.Options.IOptionsChangeTokenSource`1.Name" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.IOptionsFactory`1" Id="T:Microsoft.Extensions.Options.IOptionsFactory`1">
      <Member Id="M:Microsoft.Extensions.Options.IOptionsFactory`1.Create(System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.IOptionsMonitor`1" Id="T:Microsoft.Extensions.Options.IOptionsMonitor`1">
      <Member Id="M:Microsoft.Extensions.Options.IOptionsMonitor`1.Get(System.String)" />
      <Member Id="M:Microsoft.Extensions.Options.IOptionsMonitor`1.OnChange(System.Action{`0,System.String})" />
      <Member Id="P:Microsoft.Extensions.Options.IOptionsMonitor`1.CurrentValue" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.IOptionsMonitorCache`1" Id="T:Microsoft.Extensions.Options.IOptionsMonitorCache`1">
      <Member Id="M:Microsoft.Extensions.Options.IOptionsMonitorCache`1.Clear" />
      <Member Id="M:Microsoft.Extensions.Options.IOptionsMonitorCache`1.GetOrAdd(System.String,System.Func{`0})" />
      <Member Id="M:Microsoft.Extensions.Options.IOptionsMonitorCache`1.TryAdd(System.String,`0)" />
      <Member Id="M:Microsoft.Extensions.Options.IOptionsMonitorCache`1.TryRemove(System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.IOptionsSnapshot`1" Id="T:Microsoft.Extensions.Options.IOptionsSnapshot`1">
      <Member Id="M:Microsoft.Extensions.Options.IOptionsSnapshot`1.Get(System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.IPostConfigureOptions`1" Id="T:Microsoft.Extensions.Options.IPostConfigureOptions`1">
      <Member Id="M:Microsoft.Extensions.Options.IPostConfigureOptions`1.PostConfigure(System.String,`0)" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.IStartupValidator" Id="T:Microsoft.Extensions.Options.IStartupValidator">
      <Member Id="M:Microsoft.Extensions.Options.IStartupValidator.Validate" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.IValidateOptions`1" Id="T:Microsoft.Extensions.Options.IValidateOptions`1">
      <Member Id="M:Microsoft.Extensions.Options.IValidateOptions`1.Validate(System.String,`0)" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.Options" Id="T:Microsoft.Extensions.Options.Options">
      <Member Id="F:Microsoft.Extensions.Options.Options.DefaultName" />
      <Member Id="M:Microsoft.Extensions.Options.Options.Create``1(``0)" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.OptionsBuilder`1" Id="T:Microsoft.Extensions.Options.OptionsBuilder`1">
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.Configure(System.Action{`0})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.Configure``1(System.Action{`0,``0})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.Configure``2(System.Action{`0,``0,``1})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.Configure``3(System.Action{`0,``0,``1,``2})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.Configure``4(System.Action{`0,``0,``1,``2,``3})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.Configure``5(System.Action{`0,``0,``1,``2,``3,``4})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.PostConfigure(System.Action{`0})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.PostConfigure``1(System.Action{`0,``0})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.PostConfigure``2(System.Action{`0,``0,``1})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.PostConfigure``3(System.Action{`0,``0,``1,``2})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.PostConfigure``4(System.Action{`0,``0,``1,``2,``3})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.PostConfigure``5(System.Action{`0,``0,``1,``2,``3,``4})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.Validate(System.Func{`0,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.Validate(System.Func{`0,System.Boolean},System.String)" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.Validate``1(System.Func{`0,``0,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.Validate``1(System.Func{`0,``0,System.Boolean},System.String)" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.Validate``2(System.Func{`0,``0,``1,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.Validate``2(System.Func{`0,``0,``1,System.Boolean},System.String)" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.Validate``3(System.Func{`0,``0,``1,``2,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.Validate``3(System.Func{`0,``0,``1,``2,System.Boolean},System.String)" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.Validate``4(System.Func{`0,``0,``1,``2,``3,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.Validate``4(System.Func{`0,``0,``1,``2,``3,System.Boolean},System.String)" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.Validate``5(System.Func{`0,``0,``1,``2,``3,``4,System.Boolean})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsBuilder`1.Validate``5(System.Func{`0,``0,``1,``2,``3,``4,System.Boolean},System.String)" />
      <Member Id="P:Microsoft.Extensions.Options.OptionsBuilder`1.Name" />
      <Member Id="P:Microsoft.Extensions.Options.OptionsBuilder`1.Services" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.OptionsCache`1" Id="T:Microsoft.Extensions.Options.OptionsCache`1">
      <Member Id="M:Microsoft.Extensions.Options.OptionsCache`1.#ctor" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsCache`1.Clear" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd(System.String,System.Func{`0})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsCache`1.TryAdd(System.String,`0)" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsCache`1.TryRemove(System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.OptionsFactory`1" Id="T:Microsoft.Extensions.Options.OptionsFactory`1">
      <Member Id="M:Microsoft.Extensions.Options.OptionsFactory`1.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Options.IConfigureOptions{`0}},System.Collections.Generic.IEnumerable{Microsoft.Extensions.Options.IPostConfigureOptions{`0}})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsFactory`1.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Options.IConfigureOptions{`0}},System.Collections.Generic.IEnumerable{Microsoft.Extensions.Options.IPostConfigureOptions{`0}},System.Collections.Generic.IEnumerable{Microsoft.Extensions.Options.IValidateOptions{`0}})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsFactory`1.Create(System.String)" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsFactory`1.CreateInstance(System.String)" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.OptionsManager`1" Id="T:Microsoft.Extensions.Options.OptionsManager`1">
      <Member Id="M:Microsoft.Extensions.Options.OptionsManager`1.#ctor(Microsoft.Extensions.Options.IOptionsFactory{`0})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsManager`1.Get(System.String)" />
      <Member Id="P:Microsoft.Extensions.Options.OptionsManager`1.Value" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.OptionsMonitor`1" Id="T:Microsoft.Extensions.Options.OptionsMonitor`1">
      <Member Id="M:Microsoft.Extensions.Options.OptionsMonitor`1.#ctor(Microsoft.Extensions.Options.IOptionsFactory{`0},System.Collections.Generic.IEnumerable{Microsoft.Extensions.Options.IOptionsChangeTokenSource{`0}},Microsoft.Extensions.Options.IOptionsMonitorCache{`0})" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsMonitor`1.Dispose" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsMonitor`1.Get(System.String)" />
      <Member Id="M:Microsoft.Extensions.Options.OptionsMonitor`1.OnChange(System.Action{`0,System.String})" />
      <Member Id="P:Microsoft.Extensions.Options.OptionsMonitor`1.CurrentValue" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.OptionsMonitorExtensions" Id="T:Microsoft.Extensions.Options.OptionsMonitorExtensions">
      <Member Id="M:Microsoft.Extensions.Options.OptionsMonitorExtensions.OnChange``1(Microsoft.Extensions.Options.IOptionsMonitor{``0},System.Action{``0})" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.OptionsValidationException" Id="T:Microsoft.Extensions.Options.OptionsValidationException">
      <Member Id="M:Microsoft.Extensions.Options.OptionsValidationException.#ctor(System.String,System.Type,System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="P:Microsoft.Extensions.Options.OptionsValidationException.Failures" />
      <Member Id="P:Microsoft.Extensions.Options.OptionsValidationException.Message" />
      <Member Id="P:Microsoft.Extensions.Options.OptionsValidationException.OptionsName" />
      <Member Id="P:Microsoft.Extensions.Options.OptionsValidationException.OptionsType" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.OptionsValidatorAttribute" Id="T:Microsoft.Extensions.Options.OptionsValidatorAttribute">
      <Member Id="M:Microsoft.Extensions.Options.OptionsValidatorAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.OptionsWrapper`1" Id="T:Microsoft.Extensions.Options.OptionsWrapper`1">
      <Member Id="M:Microsoft.Extensions.Options.OptionsWrapper`1.#ctor(`0)" />
      <Member Id="P:Microsoft.Extensions.Options.OptionsWrapper`1.Value" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.PostConfigureOptions`1" Id="T:Microsoft.Extensions.Options.PostConfigureOptions`1">
      <Member Id="M:Microsoft.Extensions.Options.PostConfigureOptions`1.#ctor(System.String,System.Action{`0})" />
      <Member Id="M:Microsoft.Extensions.Options.PostConfigureOptions`1.PostConfigure(System.String,`0)" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`1.Action" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`1.Name" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.PostConfigureOptions`2" Id="T:Microsoft.Extensions.Options.PostConfigureOptions`2">
      <Member Id="M:Microsoft.Extensions.Options.PostConfigureOptions`2.#ctor(System.String,`1,System.Action{`0,`1})" />
      <Member Id="M:Microsoft.Extensions.Options.PostConfigureOptions`2.PostConfigure(`0)" />
      <Member Id="M:Microsoft.Extensions.Options.PostConfigureOptions`2.PostConfigure(System.String,`0)" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`2.Action" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`2.Dependency" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`2.Name" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.PostConfigureOptions`3" Id="T:Microsoft.Extensions.Options.PostConfigureOptions`3">
      <Member Id="M:Microsoft.Extensions.Options.PostConfigureOptions`3.#ctor(System.String,`1,`2,System.Action{`0,`1,`2})" />
      <Member Id="M:Microsoft.Extensions.Options.PostConfigureOptions`3.PostConfigure(`0)" />
      <Member Id="M:Microsoft.Extensions.Options.PostConfigureOptions`3.PostConfigure(System.String,`0)" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`3.Action" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`3.Dependency1" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`3.Dependency2" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`3.Name" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.PostConfigureOptions`4" Id="T:Microsoft.Extensions.Options.PostConfigureOptions`4">
      <Member Id="M:Microsoft.Extensions.Options.PostConfigureOptions`4.#ctor(System.String,`1,`2,`3,System.Action{`0,`1,`2,`3})" />
      <Member Id="M:Microsoft.Extensions.Options.PostConfigureOptions`4.PostConfigure(`0)" />
      <Member Id="M:Microsoft.Extensions.Options.PostConfigureOptions`4.PostConfigure(System.String,`0)" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`4.Action" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`4.Dependency1" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`4.Dependency2" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`4.Dependency3" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`4.Name" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.PostConfigureOptions`5" Id="T:Microsoft.Extensions.Options.PostConfigureOptions`5">
      <Member Id="M:Microsoft.Extensions.Options.PostConfigureOptions`5.#ctor(System.String,`1,`2,`3,`4,System.Action{`0,`1,`2,`3,`4})" />
      <Member Id="M:Microsoft.Extensions.Options.PostConfigureOptions`5.PostConfigure(`0)" />
      <Member Id="M:Microsoft.Extensions.Options.PostConfigureOptions`5.PostConfigure(System.String,`0)" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`5.Action" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`5.Dependency1" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`5.Dependency2" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`5.Dependency3" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`5.Dependency4" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`5.Name" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.PostConfigureOptions`6" Id="T:Microsoft.Extensions.Options.PostConfigureOptions`6">
      <Member Id="M:Microsoft.Extensions.Options.PostConfigureOptions`6.#ctor(System.String,`1,`2,`3,`4,`5,System.Action{`0,`1,`2,`3,`4,`5})" />
      <Member Id="M:Microsoft.Extensions.Options.PostConfigureOptions`6.PostConfigure(`0)" />
      <Member Id="M:Microsoft.Extensions.Options.PostConfigureOptions`6.PostConfigure(System.String,`0)" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`6.Action" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`6.Dependency1" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`6.Dependency2" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`6.Dependency3" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`6.Dependency4" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`6.Dependency5" />
      <Member Id="P:Microsoft.Extensions.Options.PostConfigureOptions`6.Name" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.ValidateEnumeratedItemsAttribute" Id="T:Microsoft.Extensions.Options.ValidateEnumeratedItemsAttribute">
      <Member Id="M:Microsoft.Extensions.Options.ValidateEnumeratedItemsAttribute.#ctor" />
      <Member Id="M:Microsoft.Extensions.Options.ValidateEnumeratedItemsAttribute.#ctor(System.Type)" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateEnumeratedItemsAttribute.Validator" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.ValidateObjectMembersAttribute" Id="T:Microsoft.Extensions.Options.ValidateObjectMembersAttribute">
      <Member Id="M:Microsoft.Extensions.Options.ValidateObjectMembersAttribute.#ctor" />
      <Member Id="M:Microsoft.Extensions.Options.ValidateObjectMembersAttribute.#ctor(System.Type)" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateObjectMembersAttribute.Validator" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.ValidateOptions`1" Id="T:Microsoft.Extensions.Options.ValidateOptions`1">
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptions`1.#ctor(System.String,System.Func{`0,System.Boolean},System.String)" />
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptions`1.Validate(System.String,`0)" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`1.FailureMessage" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`1.Name" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`1.Validation" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.ValidateOptions`2" Id="T:Microsoft.Extensions.Options.ValidateOptions`2">
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptions`2.#ctor(System.String,`1,System.Func{`0,`1,System.Boolean},System.String)" />
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptions`2.Validate(System.String,`0)" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`2.Dependency" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`2.FailureMessage" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`2.Name" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`2.Validation" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.ValidateOptions`3" Id="T:Microsoft.Extensions.Options.ValidateOptions`3">
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptions`3.#ctor(System.String,`1,`2,System.Func{`0,`1,`2,System.Boolean},System.String)" />
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptions`3.Validate(System.String,`0)" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`3.Dependency1" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`3.Dependency2" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`3.FailureMessage" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`3.Name" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`3.Validation" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.ValidateOptions`4" Id="T:Microsoft.Extensions.Options.ValidateOptions`4">
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptions`4.#ctor(System.String,`1,`2,`3,System.Func{`0,`1,`2,`3,System.Boolean},System.String)" />
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptions`4.Validate(System.String,`0)" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`4.Dependency1" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`4.Dependency2" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`4.Dependency3" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`4.FailureMessage" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`4.Name" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`4.Validation" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.ValidateOptions`5" Id="T:Microsoft.Extensions.Options.ValidateOptions`5">
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptions`5.#ctor(System.String,`1,`2,`3,`4,System.Func{`0,`1,`2,`3,`4,System.Boolean},System.String)" />
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptions`5.Validate(System.String,`0)" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`5.Dependency1" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`5.Dependency2" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`5.Dependency3" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`5.Dependency4" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`5.FailureMessage" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`5.Name" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`5.Validation" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.ValidateOptions`6" Id="T:Microsoft.Extensions.Options.ValidateOptions`6">
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptions`6.#ctor(System.String,`1,`2,`3,`4,`5,System.Func{`0,`1,`2,`3,`4,`5,System.Boolean},System.String)" />
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptions`6.Validate(System.String,`0)" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`6.Dependency1" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`6.Dependency2" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`6.Dependency3" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`6.Dependency4" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`6.Dependency5" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`6.FailureMessage" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`6.Name" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptions`6.Validation" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.ValidateOptionsResult" Id="T:Microsoft.Extensions.Options.ValidateOptionsResult">
      <Member Id="F:Microsoft.Extensions.Options.ValidateOptionsResult.Skip" />
      <Member Id="F:Microsoft.Extensions.Options.ValidateOptionsResult.Success" />
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptionsResult.#ctor" />
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptionsResult.Fail(System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptionsResult.Fail(System.String)" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptionsResult.Failed" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptionsResult.FailureMessage" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptionsResult.Failures" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptionsResult.Skipped" />
      <Member Id="P:Microsoft.Extensions.Options.ValidateOptionsResult.Succeeded" />
    </Type>
    <Type Name="Microsoft.Extensions.Options.ValidateOptionsResultBuilder" Id="T:Microsoft.Extensions.Options.ValidateOptionsResultBuilder">
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptionsResultBuilder.#ctor" />
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptionsResultBuilder.AddError(System.String,System.String)" />
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptionsResultBuilder.AddResult(Microsoft.Extensions.Options.ValidateOptionsResult)" />
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptionsResultBuilder.AddResult(System.ComponentModel.DataAnnotations.ValidationResult)" />
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptionsResultBuilder.AddResults(System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult})" />
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptionsResultBuilder.Build" />
      <Member Id="M:Microsoft.Extensions.Options.ValidateOptionsResultBuilder.Clear" />
    </Type>
  </Namespace>
  <Namespace Name="System.Buffers.Text">
    <Type Name="System.Buffers.Text.Base64Url" Id="T:System.Buffers.Text.Base64Url">
      <Member Id="M:System.Buffers.Text.Base64Url.DecodeFromChars(System.ReadOnlySpan{System.Char})" />
      <Member Id="M:System.Buffers.Text.Base64Url.DecodeFromChars(System.ReadOnlySpan{System.Char},System.Span{System.Byte})" />
      <Member Id="M:System.Buffers.Text.Base64Url.DecodeFromChars(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)" />
      <Member Id="M:System.Buffers.Text.Base64Url.DecodeFromUtf8(System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Buffers.Text.Base64Url.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte})" />
      <Member Id="M:System.Buffers.Text.Base64Url.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)" />
      <Member Id="M:System.Buffers.Text.Base64Url.DecodeFromUtf8InPlace(System.Span{System.Byte})" />
      <Member Id="M:System.Buffers.Text.Base64Url.EncodeToChars(System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Buffers.Text.Base64Url.EncodeToChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})" />
      <Member Id="M:System.Buffers.Text.Base64Url.EncodeToChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Int32@,System.Int32@,System.Boolean)" />
      <Member Id="M:System.Buffers.Text.Base64Url.EncodeToString(System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Buffers.Text.Base64Url.EncodeToUtf8(System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Buffers.Text.Base64Url.EncodeToUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte})" />
      <Member Id="M:System.Buffers.Text.Base64Url.EncodeToUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)" />
      <Member Id="M:System.Buffers.Text.Base64Url.GetEncodedLength(System.Int32)" />
      <Member Id="M:System.Buffers.Text.Base64Url.GetMaxDecodedLength(System.Int32)" />
      <Member Id="M:System.Buffers.Text.Base64Url.IsValid(System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Buffers.Text.Base64Url.IsValid(System.ReadOnlySpan{System.Byte},System.Int32@)" />
      <Member Id="M:System.Buffers.Text.Base64Url.IsValid(System.ReadOnlySpan{System.Char})" />
      <Member Id="M:System.Buffers.Text.Base64Url.IsValid(System.ReadOnlySpan{System.Char},System.Int32@)" />
      <Member Id="M:System.Buffers.Text.Base64Url.TryDecodeFromChars(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Buffers.Text.Base64Url.TryDecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Buffers.Text.Base64Url.TryEncodeToChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Int32@)" />
      <Member Id="M:System.Buffers.Text.Base64Url.TryEncodeToUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Buffers.Text.Base64Url.TryEncodeToUtf8InPlace(System.Span{System.Byte},System.Int32,System.Int32@)" />
    </Type>
  </Namespace>
  <Namespace Name="System.ComponentModel.Composition.Registration">
    <Type Name="System.ComponentModel.Composition.Registration.ExportBuilder" Id="T:System.ComponentModel.Composition.Registration.ExportBuilder">
      <Member Id="M:System.ComponentModel.Composition.Registration.ExportBuilder.#ctor" />
      <Member Id="M:System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata(System.String,System.Object)" />
      <Member Id="M:System.ComponentModel.Composition.Registration.ExportBuilder.AsContractName(System.String)" />
      <Member Id="M:System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType(System.Type)" />
      <Member Id="M:System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType``1" />
      <Member Id="M:System.ComponentModel.Composition.Registration.ExportBuilder.Inherited" />
    </Type>
    <Type Name="System.ComponentModel.Composition.Registration.ImportBuilder" Id="T:System.ComponentModel.Composition.Registration.ImportBuilder">
      <Member Id="M:System.ComponentModel.Composition.Registration.ImportBuilder.#ctor" />
      <Member Id="M:System.ComponentModel.Composition.Registration.ImportBuilder.AllowDefault" />
      <Member Id="M:System.ComponentModel.Composition.Registration.ImportBuilder.AllowRecomposition" />
      <Member Id="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractName(System.String)" />
      <Member Id="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType(System.Type)" />
      <Member Id="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType``1" />
      <Member Id="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsMany(System.Boolean)" />
      <Member Id="M:System.ComponentModel.Composition.Registration.ImportBuilder.RequiredCreationPolicy(System.ComponentModel.Composition.CreationPolicy)" />
      <Member Id="M:System.ComponentModel.Composition.Registration.ImportBuilder.Source(System.ComponentModel.Composition.ImportSource)" />
    </Type>
    <Type Name="System.ComponentModel.Composition.Registration.ParameterImportBuilder" Id="T:System.ComponentModel.Composition.Registration.ParameterImportBuilder">
      <Member Id="M:System.ComponentModel.Composition.Registration.ParameterImportBuilder.#ctor" />
      <Member Id="M:System.ComponentModel.Composition.Registration.ParameterImportBuilder.Import``1" />
      <Member Id="M:System.ComponentModel.Composition.Registration.ParameterImportBuilder.Import``1(System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})" />
    </Type>
    <Type Name="System.ComponentModel.Composition.Registration.PartBuilder" Id="T:System.ComponentModel.Composition.Registration.PartBuilder">
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder.Export" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder.Export``1" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder.Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)" />
    </Type>
    <Type Name="System.ComponentModel.Composition.Registration.PartBuilder`1" Id="T:System.ComponentModel.Composition.Registration.PartBuilder`1">
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,`0}})" />
    </Type>
    <Type Name="System.ComponentModel.Composition.Registration.RegistrationBuilder" Id="T:System.ComponentModel.Composition.Registration.RegistrationBuilder">
      <Member Id="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.#ctor" />
      <Member Id="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType(System.Type)" />
      <Member Id="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType``1" />
      <Member Id="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom(System.Type)" />
      <Member Id="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom``1" />
      <Member Id="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching(System.Predicate{System.Type})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching``1(System.Predicate{System.Type})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <Member Id="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})" />
    </Type>
  </Namespace>
  <Namespace Name="System.Reflection.Context">
    <Type Name="System.Reflection.Context.CustomReflectionContext" Id="T:System.Reflection.Context.CustomReflectionContext">
      <Member Id="M:System.Reflection.Context.CustomReflectionContext.#ctor" />
      <Member Id="M:System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)" />
      <Member Id="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" />
      <Member Id="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})" />
      <Member Id="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})" />
      <Member Id="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <Member Id="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <Member Id="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)" />
      <Member Id="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)" />
    </Type>
  </Namespace>
  <Namespace Name="System.Security.Cryptography">
    <Type Name="System.Security.Cryptography.CompositeMLDsa" Id="T:System.Security.Cryptography.CompositeMLDsa">
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.#ctor(System.Security.Cryptography.CompositeMLDsaAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.Dispose" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.Dispose(System.Boolean)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ExportCompositeMLDsaPrivateKey" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ExportCompositeMLDsaPrivateKey(System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ExportCompositeMLDsaPrivateKeyCore(System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ExportCompositeMLDsaPublicKey" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ExportCompositeMLDsaPublicKey(System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ExportCompositeMLDsaPublicKeyCore(System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ExportEncryptedPkcs8PrivateKey(System.String,System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ExportEncryptedPkcs8PrivateKeyPem(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ExportEncryptedPkcs8PrivateKeyPem(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ExportEncryptedPkcs8PrivateKeyPem(System.String,System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ExportPkcs8PrivateKey" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ExportPkcs8PrivateKeyPem" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ExportSubjectPublicKeyInfo" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ExportSubjectPublicKeyInfoPem" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.GenerateKey(System.Security.Cryptography.CompositeMLDsaAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ImportCompositeMLDsaPrivateKey(System.Security.Cryptography.CompositeMLDsaAlgorithm,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ImportCompositeMLDsaPrivateKey(System.Security.Cryptography.CompositeMLDsaAlgorithm,System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ImportCompositeMLDsaPublicKey(System.Security.Cryptography.CompositeMLDsaAlgorithm,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ImportCompositeMLDsaPublicKey(System.Security.Cryptography.CompositeMLDsaAlgorithm,System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ImportEncryptedPkcs8PrivateKey(System.String,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ImportFromEncryptedPem(System.String,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ImportFromEncryptedPem(System.String,System.String)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ImportFromPem(System.ReadOnlySpan{System.Char})" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ImportFromPem(System.String)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ImportPkcs8PrivateKey(System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ImportPkcs8PrivateKey(System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ImportSubjectPublicKeyInfo(System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.ImportSubjectPublicKeyInfo(System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.IsAlgorithmSupported(System.Security.Cryptography.CompositeMLDsaAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.SignData(System.Byte[],System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.SignData(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.SignDataCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.TryExportCompositeMLDsaPrivateKey(System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.TryExportCompositeMLDsaPublicKey(System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.TryExportEncryptedPkcs8PrivateKey(System.String,System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.TryExportPkcs8PrivateKey(System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.TryExportPkcs8PrivateKeyCore(System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.TryExportSubjectPublicKeyInfo(System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.VerifyData(System.Byte[],System.Byte[],System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.VerifyData(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsa.VerifyDataCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsa.Algorithm" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsa.IsSupported" />
    </Type>
    <Type Name="System.Security.Cryptography.CompositeMLDsaAlgorithm" Id="T:System.Security.Cryptography.CompositeMLDsaAlgorithm">
      <Member Id="M:System.Security.Cryptography.CompositeMLDsaAlgorithm.Equals(System.Object)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsaAlgorithm.Equals(System.Security.Cryptography.CompositeMLDsaAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsaAlgorithm.GetHashCode" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsaAlgorithm.op_Equality(System.Security.Cryptography.CompositeMLDsaAlgorithm,System.Security.Cryptography.CompositeMLDsaAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsaAlgorithm.op_Inequality(System.Security.Cryptography.CompositeMLDsaAlgorithm,System.Security.Cryptography.CompositeMLDsaAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.CompositeMLDsaAlgorithm.ToString" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MaxSignatureSizeInBytes" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa44WithECDsaP256" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa44WithEd25519" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa44WithRSA2048Pkcs15" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa44WithRSA2048Pss" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa65WithECDsaBrainpoolP256r1" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa65WithECDsaP256" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa65WithECDsaP384" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa65WithEd25519" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa65WithRSA3072Pkcs15" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa65WithRSA3072Pss" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa65WithRSA4096Pkcs15" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa65WithRSA4096Pss" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa87WithECDsaBrainpoolP384r1" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa87WithECDsaP384" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa87WithECDsaP521" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa87WithEd448" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa87WithRSA3072Pss" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa87WithRSA4096Pss" />
      <Member Id="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.Name" />
    </Type>
    <Type Name="System.Security.Cryptography.CryptographicAttributeObject" Id="T:System.Security.Cryptography.CryptographicAttributeObject">
      <Member Id="M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid)" />
      <Member Id="M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedDataCollection)" />
      <Member Id="P:System.Security.Cryptography.CryptographicAttributeObject.Oid" />
      <Member Id="P:System.Security.Cryptography.CryptographicAttributeObject.Values" />
    </Type>
    <Type Name="System.Security.Cryptography.CryptographicAttributeObjectCollection" Id="T:System.Security.Cryptography.CryptographicAttributeObjectCollection">
      <Member Id="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.#ctor" />
      <Member Id="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.#ctor(System.Security.Cryptography.CryptographicAttributeObject)" />
      <Member Id="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Add(System.Security.Cryptography.AsnEncodedData)" />
      <Member Id="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Add(System.Security.Cryptography.CryptographicAttributeObject)" />
      <Member Id="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.CopyTo(System.Security.Cryptography.CryptographicAttributeObject[],System.Int32)" />
      <Member Id="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.GetEnumerator" />
      <Member Id="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Remove(System.Security.Cryptography.CryptographicAttributeObject)" />
      <Member Id="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <Member Id="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.Count" />
      <Member Id="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.IsSynchronized" />
      <Member Id="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.Item(System.Int32)" />
      <Member Id="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.SyncRoot" />
    </Type>
    <Type Name="System.Security.Cryptography.CryptographicAttributeObjectEnumerator" Id="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator">
      <Member Id="M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.MoveNext" />
      <Member Id="M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Reset" />
      <Member Id="P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Current" />
      <Member Id="P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.System#Collections#IEnumerator#Current" />
    </Type>
    <Type Name="System.Security.Cryptography.MLDsa" Id="T:System.Security.Cryptography.MLDsa">
      <Member Id="M:System.Security.Cryptography.MLDsa.#ctor(System.Security.Cryptography.MLDsaAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.MLDsa.Dispose" />
      <Member Id="M:System.Security.Cryptography.MLDsa.Dispose(System.Boolean)" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ExportEncryptedPkcs8PrivateKey(System.String,System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ExportEncryptedPkcs8PrivateKeyPem(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ExportEncryptedPkcs8PrivateKeyPem(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ExportEncryptedPkcs8PrivateKeyPem(System.String,System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ExportMLDsaPrivateKey" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ExportMLDsaPrivateKey(System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ExportMLDsaPrivateKeyCore(System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ExportMLDsaPrivateSeed" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ExportMLDsaPrivateSeed(System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ExportMLDsaPrivateSeedCore(System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ExportMLDsaPublicKey" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ExportMLDsaPublicKey(System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ExportMLDsaPublicKeyCore(System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ExportPkcs8PrivateKey" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ExportPkcs8PrivateKeyPem" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ExportSubjectPublicKeyInfo" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ExportSubjectPublicKeyInfoPem" />
      <Member Id="M:System.Security.Cryptography.MLDsa.GenerateKey(System.Security.Cryptography.MLDsaAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ImportEncryptedPkcs8PrivateKey(System.String,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ImportFromEncryptedPem(System.String,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ImportFromEncryptedPem(System.String,System.String)" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ImportFromPem(System.ReadOnlySpan{System.Char})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ImportFromPem(System.String)" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ImportMLDsaPrivateKey(System.Security.Cryptography.MLDsaAlgorithm,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ImportMLDsaPrivateKey(System.Security.Cryptography.MLDsaAlgorithm,System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ImportMLDsaPrivateSeed(System.Security.Cryptography.MLDsaAlgorithm,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ImportMLDsaPrivateSeed(System.Security.Cryptography.MLDsaAlgorithm,System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ImportMLDsaPublicKey(System.Security.Cryptography.MLDsaAlgorithm,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ImportMLDsaPublicKey(System.Security.Cryptography.MLDsaAlgorithm,System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ImportPkcs8PrivateKey(System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ImportPkcs8PrivateKey(System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ImportSubjectPublicKeyInfo(System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.MLDsa.ImportSubjectPublicKeyInfo(System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.SignData(System.Byte[],System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.MLDsa.SignData(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.SignDataCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.SignMu(System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.MLDsa.SignMu(System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.SignMu(System.ReadOnlySpan{System.Byte},System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.SignMuCore(System.ReadOnlySpan{System.Byte},System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.SignPreHash(System.Byte[],System.String,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.MLDsa.SignPreHash(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.String,System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.SignPreHashCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.String,System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.MLDsa.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.MLDsa.TryExportEncryptedPkcs8PrivateKey(System.String,System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.MLDsa.TryExportPkcs8PrivateKey(System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.MLDsa.TryExportPkcs8PrivateKeyCore(System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.MLDsa.TryExportSubjectPublicKeyInfo(System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.MLDsa.VerifyData(System.Byte[],System.Byte[],System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.MLDsa.VerifyData(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.VerifyDataCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.VerifyMu(System.Byte[],System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.MLDsa.VerifyMu(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.VerifyMuCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.VerifyPreHash(System.Byte[],System.Byte[],System.String,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.MLDsa.VerifyPreHash(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.String,System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLDsa.VerifyPreHashCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.String,System.ReadOnlySpan{System.Byte})" />
      <Member Id="P:System.Security.Cryptography.MLDsa.Algorithm" />
      <Member Id="P:System.Security.Cryptography.MLDsa.IsSupported" />
    </Type>
    <Type Name="System.Security.Cryptography.MLDsaAlgorithm" Id="T:System.Security.Cryptography.MLDsaAlgorithm">
      <Member Id="M:System.Security.Cryptography.MLDsaAlgorithm.Equals(System.Object)" />
      <Member Id="M:System.Security.Cryptography.MLDsaAlgorithm.Equals(System.Security.Cryptography.MLDsaAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.MLDsaAlgorithm.GetHashCode" />
      <Member Id="M:System.Security.Cryptography.MLDsaAlgorithm.op_Equality(System.Security.Cryptography.MLDsaAlgorithm,System.Security.Cryptography.MLDsaAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.MLDsaAlgorithm.op_Inequality(System.Security.Cryptography.MLDsaAlgorithm,System.Security.Cryptography.MLDsaAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.MLDsaAlgorithm.ToString" />
      <Member Id="P:System.Security.Cryptography.MLDsaAlgorithm.MLDsa44" />
      <Member Id="P:System.Security.Cryptography.MLDsaAlgorithm.MLDsa65" />
      <Member Id="P:System.Security.Cryptography.MLDsaAlgorithm.MLDsa87" />
      <Member Id="P:System.Security.Cryptography.MLDsaAlgorithm.MuSizeInBytes" />
      <Member Id="P:System.Security.Cryptography.MLDsaAlgorithm.Name" />
      <Member Id="P:System.Security.Cryptography.MLDsaAlgorithm.PrivateKeySizeInBytes" />
      <Member Id="P:System.Security.Cryptography.MLDsaAlgorithm.PrivateSeedSizeInBytes" />
      <Member Id="P:System.Security.Cryptography.MLDsaAlgorithm.PublicKeySizeInBytes" />
      <Member Id="P:System.Security.Cryptography.MLDsaAlgorithm.SignatureSizeInBytes" />
    </Type>
    <Type Name="System.Security.Cryptography.MLKem" Id="T:System.Security.Cryptography.MLKem">
      <Member Id="M:System.Security.Cryptography.MLKem.#ctor(System.Security.Cryptography.MLKemAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.MLKem.Decapsulate(System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.MLKem.Decapsulate(System.ReadOnlySpan{System.Byte},System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLKem.DecapsulateCore(System.ReadOnlySpan{System.Byte},System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLKem.Dispose" />
      <Member Id="M:System.Security.Cryptography.MLKem.Dispose(System.Boolean)" />
      <Member Id="M:System.Security.Cryptography.MLKem.Encapsulate(System.Byte[]@,System.Byte[]@)" />
      <Member Id="M:System.Security.Cryptography.MLKem.Encapsulate(System.Span{System.Byte},System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLKem.EncapsulateCore(System.Span{System.Byte},System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLKem.ExportDecapsulationKey" />
      <Member Id="M:System.Security.Cryptography.MLKem.ExportDecapsulationKey(System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLKem.ExportDecapsulationKeyCore(System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLKem.ExportEncapsulationKey" />
      <Member Id="M:System.Security.Cryptography.MLKem.ExportEncapsulationKey(System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLKem.ExportEncapsulationKeyCore(System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLKem.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.MLKem.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.MLKem.ExportEncryptedPkcs8PrivateKey(System.String,System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.MLKem.ExportEncryptedPkcs8PrivateKeyPem(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.MLKem.ExportEncryptedPkcs8PrivateKeyPem(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.MLKem.ExportEncryptedPkcs8PrivateKeyPem(System.String,System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.MLKem.ExportPkcs8PrivateKey" />
      <Member Id="M:System.Security.Cryptography.MLKem.ExportPkcs8PrivateKeyPem" />
      <Member Id="M:System.Security.Cryptography.MLKem.ExportPrivateSeed" />
      <Member Id="M:System.Security.Cryptography.MLKem.ExportPrivateSeed(System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLKem.ExportPrivateSeedCore(System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLKem.ExportSubjectPublicKeyInfo" />
      <Member Id="M:System.Security.Cryptography.MLKem.ExportSubjectPublicKeyInfoPem" />
      <Member Id="M:System.Security.Cryptography.MLKem.GenerateKey(System.Security.Cryptography.MLKemAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.MLKem.ImportDecapsulationKey(System.Security.Cryptography.MLKemAlgorithm,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.MLKem.ImportDecapsulationKey(System.Security.Cryptography.MLKemAlgorithm,System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLKem.ImportEncapsulationKey(System.Security.Cryptography.MLKemAlgorithm,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.MLKem.ImportEncapsulationKey(System.Security.Cryptography.MLKemAlgorithm,System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLKem.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLKem.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLKem.ImportEncryptedPkcs8PrivateKey(System.String,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.MLKem.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLKem.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <Member Id="M:System.Security.Cryptography.MLKem.ImportFromEncryptedPem(System.String,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.MLKem.ImportFromEncryptedPem(System.String,System.String)" />
      <Member Id="M:System.Security.Cryptography.MLKem.ImportFromPem(System.ReadOnlySpan{System.Char})" />
      <Member Id="M:System.Security.Cryptography.MLKem.ImportFromPem(System.String)" />
      <Member Id="M:System.Security.Cryptography.MLKem.ImportPkcs8PrivateKey(System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.MLKem.ImportPkcs8PrivateKey(System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLKem.ImportPrivateSeed(System.Security.Cryptography.MLKemAlgorithm,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.MLKem.ImportPrivateSeed(System.Security.Cryptography.MLKemAlgorithm,System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLKem.ImportSubjectPublicKeyInfo(System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.MLKem.ImportSubjectPublicKeyInfo(System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.MLKem.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.MLKem.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.MLKem.TryExportEncryptedPkcs8PrivateKey(System.String,System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.MLKem.TryExportPkcs8PrivateKey(System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.MLKem.TryExportPkcs8PrivateKeyCore(System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.MLKem.TryExportSubjectPublicKeyInfo(System.Span{System.Byte},System.Int32@)" />
      <Member Id="P:System.Security.Cryptography.MLKem.Algorithm" />
      <Member Id="P:System.Security.Cryptography.MLKem.IsSupported" />
    </Type>
    <Type Name="System.Security.Cryptography.MLKemAlgorithm" Id="T:System.Security.Cryptography.MLKemAlgorithm">
      <Member Id="M:System.Security.Cryptography.MLKemAlgorithm.Equals(System.Object)" />
      <Member Id="M:System.Security.Cryptography.MLKemAlgorithm.Equals(System.Security.Cryptography.MLKemAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.MLKemAlgorithm.GetHashCode" />
      <Member Id="M:System.Security.Cryptography.MLKemAlgorithm.op_Equality(System.Security.Cryptography.MLKemAlgorithm,System.Security.Cryptography.MLKemAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.MLKemAlgorithm.op_Inequality(System.Security.Cryptography.MLKemAlgorithm,System.Security.Cryptography.MLKemAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.MLKemAlgorithm.ToString" />
      <Member Id="P:System.Security.Cryptography.MLKemAlgorithm.CiphertextSizeInBytes" />
      <Member Id="P:System.Security.Cryptography.MLKemAlgorithm.DecapsulationKeySizeInBytes" />
      <Member Id="P:System.Security.Cryptography.MLKemAlgorithm.EncapsulationKeySizeInBytes" />
      <Member Id="P:System.Security.Cryptography.MLKemAlgorithm.MLKem1024" />
      <Member Id="P:System.Security.Cryptography.MLKemAlgorithm.MLKem512" />
      <Member Id="P:System.Security.Cryptography.MLKemAlgorithm.MLKem768" />
      <Member Id="P:System.Security.Cryptography.MLKemAlgorithm.Name" />
      <Member Id="P:System.Security.Cryptography.MLKemAlgorithm.PrivateSeedSizeInBytes" />
      <Member Id="P:System.Security.Cryptography.MLKemAlgorithm.SharedSecretSizeInBytes" />
    </Type>
    <Type Name="System.Security.Cryptography.SlhDsa" Id="T:System.Security.Cryptography.SlhDsa">
      <Member Id="M:System.Security.Cryptography.SlhDsa.#ctor(System.Security.Cryptography.SlhDsaAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.Dispose" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.Dispose(System.Boolean)" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ExportEncryptedPkcs8PrivateKey(System.String,System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ExportEncryptedPkcs8PrivateKeyPem(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ExportEncryptedPkcs8PrivateKeyPem(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ExportEncryptedPkcs8PrivateKeyPem(System.String,System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ExportPkcs8PrivateKey" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ExportPkcs8PrivateKeyPem" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ExportSlhDsaPrivateKey" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ExportSlhDsaPrivateKey(System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ExportSlhDsaPrivateKeyCore(System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ExportSlhDsaPublicKey" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ExportSlhDsaPublicKey(System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ExportSlhDsaPublicKeyCore(System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ExportSubjectPublicKeyInfo" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ExportSubjectPublicKeyInfoPem" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.GenerateKey(System.Security.Cryptography.SlhDsaAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ImportEncryptedPkcs8PrivateKey(System.String,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ImportFromEncryptedPem(System.String,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ImportFromEncryptedPem(System.String,System.String)" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ImportFromPem(System.ReadOnlySpan{System.Char})" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ImportFromPem(System.String)" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ImportPkcs8PrivateKey(System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ImportPkcs8PrivateKey(System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ImportSlhDsaPrivateKey(System.Security.Cryptography.SlhDsaAlgorithm,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ImportSlhDsaPrivateKey(System.Security.Cryptography.SlhDsaAlgorithm,System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ImportSlhDsaPublicKey(System.Security.Cryptography.SlhDsaAlgorithm,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ImportSlhDsaPublicKey(System.Security.Cryptography.SlhDsaAlgorithm,System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ImportSubjectPublicKeyInfo(System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.ImportSubjectPublicKeyInfo(System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.SignData(System.Byte[],System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.SignData(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.SignDataCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.SignPreHash(System.Byte[],System.String,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.SignPreHash(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.String,System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.SignPreHashCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.String,System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.TryExportEncryptedPkcs8PrivateKey(System.String,System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.TryExportPkcs8PrivateKey(System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.TryExportPkcs8PrivateKeyCore(System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.TryExportSubjectPublicKeyInfo(System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.VerifyData(System.Byte[],System.Byte[],System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.VerifyData(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.VerifyDataCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.VerifyPreHash(System.Byte[],System.Byte[],System.String,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.VerifyPreHash(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.String,System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SlhDsa.VerifyPreHashCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.String,System.ReadOnlySpan{System.Byte})" />
      <Member Id="P:System.Security.Cryptography.SlhDsa.Algorithm" />
      <Member Id="P:System.Security.Cryptography.SlhDsa.IsSupported" />
    </Type>
    <Type Name="System.Security.Cryptography.SlhDsaAlgorithm" Id="T:System.Security.Cryptography.SlhDsaAlgorithm">
      <Member Id="M:System.Security.Cryptography.SlhDsaAlgorithm.Equals(System.Object)" />
      <Member Id="M:System.Security.Cryptography.SlhDsaAlgorithm.Equals(System.Security.Cryptography.SlhDsaAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.SlhDsaAlgorithm.GetHashCode" />
      <Member Id="M:System.Security.Cryptography.SlhDsaAlgorithm.op_Equality(System.Security.Cryptography.SlhDsaAlgorithm,System.Security.Cryptography.SlhDsaAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.SlhDsaAlgorithm.op_Inequality(System.Security.Cryptography.SlhDsaAlgorithm,System.Security.Cryptography.SlhDsaAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.SlhDsaAlgorithm.ToString" />
      <Member Id="P:System.Security.Cryptography.SlhDsaAlgorithm.Name" />
      <Member Id="P:System.Security.Cryptography.SlhDsaAlgorithm.PrivateKeySizeInBytes" />
      <Member Id="P:System.Security.Cryptography.SlhDsaAlgorithm.PublicKeySizeInBytes" />
      <Member Id="P:System.Security.Cryptography.SlhDsaAlgorithm.SignatureSizeInBytes" />
      <Member Id="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaSha2_128f" />
      <Member Id="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaSha2_128s" />
      <Member Id="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaSha2_192f" />
      <Member Id="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaSha2_192s" />
      <Member Id="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaSha2_256f" />
      <Member Id="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaSha2_256s" />
      <Member Id="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaShake128f" />
      <Member Id="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaShake128s" />
      <Member Id="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaShake192f" />
      <Member Id="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaShake192s" />
      <Member Id="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaShake256f" />
      <Member Id="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaShake256s" />
    </Type>
    <Type Name="System.Security.Cryptography.SP800108HmacCounterKdf" Id="T:System.Security.Cryptography.SP800108HmacCounterKdf">
      <Member Id="M:System.Security.Cryptography.SP800108HmacCounterKdf.#ctor(System.Byte[],System.Security.Cryptography.HashAlgorithmName)" />
      <Member Id="M:System.Security.Cryptography.SP800108HmacCounterKdf.#ctor(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName)" />
      <Member Id="M:System.Security.Cryptography.SP800108HmacCounterKdf.DeriveBytes(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Int32)" />
      <Member Id="M:System.Security.Cryptography.SP800108HmacCounterKdf.DeriveBytes(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.String,System.String,System.Int32)" />
      <Member Id="M:System.Security.Cryptography.SP800108HmacCounterKdf.DeriveBytes(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Int32)" />
      <Member Id="M:System.Security.Cryptography.SP800108HmacCounterKdf.DeriveBytes(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SP800108HmacCounterKdf.DeriveBytes(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Int32)" />
      <Member Id="M:System.Security.Cryptography.SP800108HmacCounterKdf.DeriveBytes(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SP800108HmacCounterKdf.DeriveKey(System.Byte[],System.Byte[],System.Int32)" />
      <Member Id="M:System.Security.Cryptography.SP800108HmacCounterKdf.DeriveKey(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Int32)" />
      <Member Id="M:System.Security.Cryptography.SP800108HmacCounterKdf.DeriveKey(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SP800108HmacCounterKdf.DeriveKey(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Int32)" />
      <Member Id="M:System.Security.Cryptography.SP800108HmacCounterKdf.DeriveKey(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Span{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.SP800108HmacCounterKdf.DeriveKey(System.String,System.String,System.Int32)" />
      <Member Id="M:System.Security.Cryptography.SP800108HmacCounterKdf.Dispose" />
    </Type>
  </Namespace>
  <Namespace Name="System.Security.Cryptography.Pkcs">
    <Type Name="System.Security.Cryptography.Pkcs.AlgorithmIdentifier" Id="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier">
      <Member Id="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor" />
      <Member Id="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid,System.Int32)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.KeyLength" />
      <Member Id="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Oid" />
      <Member Id="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Parameters" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.CmsRecipient" Id="T:System.Security.Cryptography.Pkcs.CmsRecipient">
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSAEncryptionPadding)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSAEncryptionPadding)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.CmsRecipient.Certificate" />
      <Member Id="P:System.Security.Cryptography.Pkcs.CmsRecipient.RecipientIdentifierType" />
      <Member Id="P:System.Security.Cryptography.Pkcs.CmsRecipient.RSAEncryptionPadding" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.CmsRecipientCollection" Id="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection">
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor" />
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.CmsRecipient)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Add(System.Security.Cryptography.Pkcs.CmsRecipient)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Array,System.Int32)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Security.Cryptography.Pkcs.CmsRecipient[],System.Int32)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.GetEnumerator" />
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Remove(System.Security.Cryptography.Pkcs.CmsRecipient)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Count" />
      <Member Id="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.IsSynchronized" />
      <Member Id="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Item(System.Int32)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.SyncRoot" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" Id="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator">
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.MoveNext" />
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Reset" />
      <Member Id="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Current" />
      <Member Id="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.System#Collections#IEnumerator#Current" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.CmsSigner" Id="T:System.Security.Cryptography.Pkcs.CmsSigner">
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor" />
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.CspParameters)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.AsymmetricAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.CompositeMLDsa)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.MLDsa)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSA,System.Security.Cryptography.RSASignaturePadding)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.SlhDsa)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" />
      <Member Id="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificates" />
      <Member Id="P:System.Security.Cryptography.Pkcs.CmsSigner.DigestAlgorithm" />
      <Member Id="P:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption" />
      <Member Id="P:System.Security.Cryptography.Pkcs.CmsSigner.PrivateKey" />
      <Member Id="P:System.Security.Cryptography.Pkcs.CmsSigner.SignaturePadding" />
      <Member Id="P:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes" />
      <Member Id="P:System.Security.Cryptography.Pkcs.CmsSigner.SignerIdentifierType" />
      <Member Id="P:System.Security.Cryptography.Pkcs.CmsSigner.UnsignedAttributes" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.ContentInfo" Id="T:System.Security.Cryptography.Pkcs.ContentInfo">
      <Member Id="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.ReadOnlySpan{System.Byte})" />
      <Member Id="P:System.Security.Cryptography.Pkcs.ContentInfo.Content" />
      <Member Id="P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.EnvelopedCms" Id="T:System.Security.Cryptography.Pkcs.EnvelopedCms">
      <Member Id="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor" />
      <Member Id="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt" />
      <Member Id="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.AsymmetricAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encode" />
      <Member Id="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates" />
      <Member Id="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm" />
      <Member Id="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo" />
      <Member Id="P:System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos" />
      <Member Id="P:System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes" />
      <Member Id="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Version" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" Id="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo">
      <Member Id="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date" />
      <Member Id="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey" />
      <Member Id="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm" />
      <Member Id="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey" />
      <Member Id="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute" />
      <Member Id="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier" />
      <Member Id="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.KeyTransRecipientInfo" Id="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo">
      <Member Id="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.EncryptedKey" />
      <Member Id="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.KeyEncryptionAlgorithm" />
      <Member Id="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.RecipientIdentifier" />
      <Member Id="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.Version" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Pkcs12Builder" Id="T:System.Security.Cryptography.Pkcs.Pkcs12Builder">
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.#ctor" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.Byte[],System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.String,System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsUnencrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.Encode" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.ReadOnlySpan{System.Char},System.Security.Cryptography.HashAlgorithmName,System.Int32)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.String,System.Security.Cryptography.HashAlgorithmName,System.Int32)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithoutIntegrity" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.TryEncode(System.Span{System.Byte},System.Int32@)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Pkcs12CertBag" Id="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag">
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.#ctor(System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.GetCertificate" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.GetCertificateType" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs12CertBag.EncodedCertificate" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs12CertBag.IsX509Certificate" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode" Id="T:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode">
      <Member Id="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.None" />
      <Member Id="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />
      <Member Id="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.PublicKey" />
      <Member Id="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Unknown" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Pkcs12Info" Id="T:System.Security.Cryptography.Pkcs.Pkcs12Info">
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12Info.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.ReadOnlySpan{System.Char})" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.String)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode" Id="T:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode">
      <Member Id="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.None" />
      <Member Id="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password" />
      <Member Id="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.PublicKey" />
      <Member Id="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Unknown" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Pkcs12KeyBag" Id="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag">
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12KeyBag.#ctor(System.ReadOnlyMemory{System.Byte},System.Boolean)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs12KeyBag.Pkcs8PrivateKey" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Pkcs12SafeBag" Id="T:System.Security.Cryptography.Pkcs.Pkcs12SafeBag">
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.#ctor(System.String,System.ReadOnlyMemory{System.Byte},System.Boolean)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.Encode" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.GetBagId" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.TryEncode(System.Span{System.Byte},System.Int32@)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.Attributes" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.EncodedBagValue" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Pkcs12SafeContents" Id="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContents">
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.#ctor" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddKeyUnencrypted(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddNestedContents(System.Security.Cryptography.Pkcs.Pkcs12SafeContents)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddSafeBag(System.Security.Cryptography.Pkcs.Pkcs12SafeBag)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddSecret(System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.Byte[],System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.String,System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.ReadOnlySpan{System.Char})" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.String)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.GetBags" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.IsReadOnly" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag" Id="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag">
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag.SafeContents" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Pkcs12SecretBag" Id="T:System.Security.Cryptography.Pkcs.Pkcs12SecretBag">
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12SecretBag.GetSecretType" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs12SecretBag.SecretValue" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" Id="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag">
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag.#ctor(System.ReadOnlyMemory{System.Byte},System.Boolean)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag.EncryptedPkcs8PrivateKey" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Id="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo">
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.#ctor(System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.ReadOnlyMemory{System.Byte},System.Boolean)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Byte},System.ReadOnlyMemory{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encode" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncode(System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmId" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmParameters" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Attributes" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.PrivateKeyBytes" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" Id="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject">
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.Security.Cryptography.AsnEncodedData)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.Security.Cryptography.Oid,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.String,System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.CopyFrom(System.Security.Cryptography.AsnEncodedData)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.Oid" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Pkcs9ContentType" Id="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType">
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.#ctor" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.CopyFrom(System.Security.Cryptography.AsnEncodedData)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs9ContentType.ContentType" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" Id="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription">
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.String)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.CopyFrom(System.Security.Cryptography.AsnEncodedData)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.DocumentDescription" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Pkcs9DocumentName" Id="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName">
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.String)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.CopyFrom(System.Security.Cryptography.AsnEncodedData)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.DocumentName" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" Id="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId">
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor(System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor(System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.CopyFrom(System.Security.Cryptography.AsnEncodedData)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.KeyId" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Pkcs9MessageDigest" Id="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest">
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.#ctor" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.CopyFrom(System.Security.Cryptography.AsnEncodedData)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.MessageDigest" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Pkcs9SigningTime" Id="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime">
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.DateTime)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.CopyFrom(System.Security.Cryptography.AsnEncodedData)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.SigningTime" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.PublicKeyInfo" Id="T:System.Security.Cryptography.Pkcs.PublicKeyInfo">
      <Member Id="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm" />
      <Member Id="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.RecipientInfo" Id="T:System.Security.Cryptography.Pkcs.RecipientInfo">
      <Member Id="P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey" />
      <Member Id="P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm" />
      <Member Id="P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier" />
      <Member Id="P:System.Security.Cryptography.Pkcs.RecipientInfo.Type" />
      <Member Id="P:System.Security.Cryptography.Pkcs.RecipientInfo.Version" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.RecipientInfoCollection" Id="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection">
      <Member Id="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator" />
      <Member Id="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count" />
      <Member Id="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.IsSynchronized" />
      <Member Id="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.SyncRoot" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" Id="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator">
      <Member Id="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.MoveNext" />
      <Member Id="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Reset" />
      <Member Id="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Current" />
      <Member Id="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.System#Collections#IEnumerator#Current" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.RecipientInfoType" Id="T:System.Security.Cryptography.Pkcs.RecipientInfoType">
      <Member Id="F:System.Security.Cryptography.Pkcs.RecipientInfoType.KeyAgreement" />
      <Member Id="F:System.Security.Cryptography.Pkcs.RecipientInfoType.KeyTransport" />
      <Member Id="F:System.Security.Cryptography.Pkcs.RecipientInfoType.Unknown" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" Id="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest">
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromData(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Oid,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromSignerInfo(System.Security.Cryptography.Pkcs.SignerInfo,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.Encode" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetExtensions" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetMessageHash" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetNonce" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.ProcessResponse(System.ReadOnlyMemory{System.Byte},System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest@,System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.TryEncode(System.Span{System.Byte},System.Int32@)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HasExtensions" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HashAlgorithmId" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.RequestedPolicyId" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.RequestSignerCertificate" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.Version" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Rfc3161TimestampToken" Id="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken">
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.AsSignedCms" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampToken@,System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForData(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForHash(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForHash(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.Oid,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForSignerInfo(System.Security.Cryptography.Pkcs.SignerInfo,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.TokenInfo" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo" Id="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo">
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.DateTimeOffset,System.Nullable{System.Int64},System.Boolean,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Security.Cryptography.X509Certificates.X509ExtensionCollection)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Encode" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetExtensions" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetMessageHash" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetNonce" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetSerialNumber" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetTimestampAuthorityName" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo@,System.Int32@)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.TryEncode(System.Span{System.Byte},System.Int32@)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.AccuracyInMicroseconds" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.HasExtensions" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.HashAlgorithmId" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.IsOrdering" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.PolicyId" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Timestamp" />
      <Member Id="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Version" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.SignedCms" Id="T:System.Security.Cryptography.Pkcs.SignedCms">
      <Member Id="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignedCms.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignedCms.Encode" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SignedCms.Version" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.SignerInfo" Id="T:System.Security.Cryptography.Pkcs.SignerInfo">
      <Member Id="M:System.Security.Cryptography.Pkcs.SignerInfo.AddUnsignedAttribute(System.Security.Cryptography.AsnEncodedData)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignerInfo.GetSignature" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveUnsignedAttribute(System.Security.Cryptography.AsnEncodedData)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SignerInfo.SignatureAlgorithm" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.SignerInfoCollection" Id="T:System.Security.Cryptography.Pkcs.SignerInfoCollection">
      <Member Id="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Array,System.Int32)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.SignerInfo[],System.Int32)" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.GetEnumerator" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Count" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.IsSynchronized" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Item(System.Int32)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.SyncRoot" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.SignerInfoEnumerator" Id="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator">
      <Member Id="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.MoveNext" />
      <Member Id="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Reset" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Current" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.System#Collections#IEnumerator#Current" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.SubjectIdentifier" Id="T:System.Security.Cryptography.Pkcs.SubjectIdentifier">
      <Member Id="M:System.Security.Cryptography.Pkcs.SubjectIdentifier.MatchesCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey" Id="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey">
      <Member Id="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" />
      <Member Id="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType" Id="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType">
      <Member Id="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.IssuerAndSerialNumber" />
      <Member Id="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.PublicKeyInfo" />
      <Member Id="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.SubjectKeyIdentifier" />
      <Member Id="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.Unknown" />
    </Type>
    <Type Name="System.Security.Cryptography.Pkcs.SubjectIdentifierType" Id="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType">
      <Member Id="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber" />
      <Member Id="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.NoSignature" />
      <Member Id="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.SubjectKeyIdentifier" />
      <Member Id="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.Unknown" />
    </Type>
  </Namespace>
  <Namespace Name="System.Security.Cryptography.X509Certificates">
    <Type Name="System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits" Id="T:System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits">
      <Member Id="M:System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits.#ctor" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits.#ctor(System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits)" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits.MakeReadOnly" />
      <Member Id="P:System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits.DangerousNoLimits" />
      <Member Id="P:System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits.Defaults" />
      <Member Id="P:System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits.IgnoreEncryptedAuthSafes" />
      <Member Id="P:System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits.IgnorePrivateKeys" />
      <Member Id="P:System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits.IndividualKdfIterationLimit" />
      <Member Id="P:System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits.IsReadOnly" />
      <Member Id="P:System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits.MacIterationLimit" />
      <Member Id="P:System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits.MaxCertificates" />
      <Member Id="P:System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits.MaxKeys" />
      <Member Id="P:System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits.PreserveCertificateAlias" />
      <Member Id="P:System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits.PreserveKeyName" />
      <Member Id="P:System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits.PreserveStorageProvider" />
      <Member Id="P:System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits.PreserveUnknownAttributes" />
      <Member Id="P:System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits.TotalKdfIterationLimit" />
    </Type>
    <Type Name="System.Security.Cryptography.X509Certificates.Pkcs12LoadLimitExceededException" Id="T:System.Security.Cryptography.X509Certificates.Pkcs12LoadLimitExceededException">
      <Member Id="M:System.Security.Cryptography.X509Certificates.Pkcs12LoadLimitExceededException.#ctor(System.String)" />
    </Type>
    <Type Name="System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors" Id="T:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors">
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.CompositeMLDsa)" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.MLDsa)" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.MLKem)" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.SlhDsa)" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.GetCompositeMLDsaPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.GetCompositeMLDsaPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.GetMLDsaPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.GetMLDsaPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.GetMLKemPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.GetMLKemPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.GetSlhDsaPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.GetSlhDsaPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
    </Type>
    <Type Name="System.Security.Cryptography.X509Certificates.X509CertificateLoader" Id="T:System.Security.Cryptography.X509Certificates.X509CertificateLoader">
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateLoader.LoadCertificate(System.Byte[])" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateLoader.LoadCertificate(System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateLoader.LoadCertificateFromFile(System.String)" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateLoader.LoadPkcs12(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags,System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits)" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateLoader.LoadPkcs12(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Char},System.Security.Cryptography.X509Certificates.X509KeyStorageFlags,System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits)" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateLoader.LoadPkcs12Collection(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags,System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits)" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateLoader.LoadPkcs12Collection(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Char},System.Security.Cryptography.X509Certificates.X509KeyStorageFlags,System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits)" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateLoader.LoadPkcs12CollectionFromFile(System.String,System.ReadOnlySpan{System.Char},System.Security.Cryptography.X509Certificates.X509KeyStorageFlags,System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits)" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateLoader.LoadPkcs12CollectionFromFile(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags,System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits)" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateLoader.LoadPkcs12FromFile(System.String,System.ReadOnlySpan{System.Char},System.Security.Cryptography.X509Certificates.X509KeyStorageFlags,System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits)" />
      <Member Id="M:System.Security.Cryptography.X509Certificates.X509CertificateLoader.LoadPkcs12FromFile(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags,System.Security.Cryptography.X509Certificates.Pkcs12LoaderLimits)" />
    </Type>
  </Namespace>
  <Namespace Name="System.Security.Cryptography.Xml">
    <Type Name="System.Security.Cryptography.Xml.X509IssuerSerial" Id="T:System.Security.Cryptography.Xml.X509IssuerSerial">
      <Member Id="P:System.Security.Cryptography.Xml.X509IssuerSerial.IssuerName" />
      <Member Id="P:System.Security.Cryptography.Xml.X509IssuerSerial.SerialNumber" />
    </Type>
  </Namespace>
  <Namespace Name="System.Text.Unicode">
    <Type Name="System.Text.Unicode.Utf8" Id="T:System.Text.Unicode.Utf8">
      <Member Id="M:System.Text.Unicode.Utf8.FromUtf16(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean,System.Boolean)" />
      <Member Id="M:System.Text.Unicode.Utf8.IsValid(System.ReadOnlySpan{System.Byte})" />
      <Member Id="M:System.Text.Unicode.Utf8.ToUtf16(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Int32@,System.Int32@,System.Boolean,System.Boolean)" />
    </Type>
  </Namespace>
  <Namespace Name="System.Threading.Channels">
    <Type Name="System.Threading.Channels.BoundedChannelFullMode" Id="T:System.Threading.Channels.BoundedChannelFullMode">
      <Member Id="F:System.Threading.Channels.BoundedChannelFullMode.DropNewest" />
      <Member Id="F:System.Threading.Channels.BoundedChannelFullMode.DropOldest" />
      <Member Id="F:System.Threading.Channels.BoundedChannelFullMode.DropWrite" />
      <Member Id="F:System.Threading.Channels.BoundedChannelFullMode.Wait" />
    </Type>
    <Type Name="System.Threading.Channels.BoundedChannelOptions" Id="T:System.Threading.Channels.BoundedChannelOptions">
      <Member Id="M:System.Threading.Channels.BoundedChannelOptions.#ctor(System.Int32)" />
      <Member Id="P:System.Threading.Channels.BoundedChannelOptions.Capacity" />
      <Member Id="P:System.Threading.Channels.BoundedChannelOptions.FullMode" />
    </Type>
    <Type Name="System.Threading.Channels.Channel" Id="T:System.Threading.Channels.Channel">
      <Member Id="M:System.Threading.Channels.Channel.CreateBounded``1(System.Int32)" />
      <Member Id="M:System.Threading.Channels.Channel.CreateBounded``1(System.Threading.Channels.BoundedChannelOptions)" />
      <Member Id="M:System.Threading.Channels.Channel.CreateBounded``1(System.Threading.Channels.BoundedChannelOptions,System.Action{``0})" />
      <Member Id="M:System.Threading.Channels.Channel.CreateUnbounded``1" />
      <Member Id="M:System.Threading.Channels.Channel.CreateUnbounded``1(System.Threading.Channels.UnboundedChannelOptions)" />
    </Type>
    <Type Name="System.Threading.Channels.Channel`1" Id="T:System.Threading.Channels.Channel`1">
      <Member Id="M:System.Threading.Channels.Channel`1.#ctor" />
    </Type>
    <Type Name="System.Threading.Channels.Channel`2" Id="T:System.Threading.Channels.Channel`2">
      <Member Id="M:System.Threading.Channels.Channel`2.#ctor" />
      <Member Id="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelReader{`1}" />
      <Member Id="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelWriter{`0}" />
      <Member Id="P:System.Threading.Channels.Channel`2.Reader" />
      <Member Id="P:System.Threading.Channels.Channel`2.Writer" />
    </Type>
    <Type Name="System.Threading.Channels.ChannelClosedException" Id="T:System.Threading.Channels.ChannelClosedException">
      <Member Id="M:System.Threading.Channels.ChannelClosedException.#ctor" />
      <Member Id="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Exception)" />
      <Member Id="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String)" />
      <Member Id="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Threading.Channels.ChannelOptions" Id="T:System.Threading.Channels.ChannelOptions">
      <Member Id="M:System.Threading.Channels.ChannelOptions.#ctor" />
      <Member Id="P:System.Threading.Channels.ChannelOptions.AllowSynchronousContinuations" />
      <Member Id="P:System.Threading.Channels.ChannelOptions.SingleReader" />
      <Member Id="P:System.Threading.Channels.ChannelOptions.SingleWriter" />
    </Type>
    <Type Name="System.Threading.Channels.ChannelReader`1" Id="T:System.Threading.Channels.ChannelReader`1">
      <Member Id="M:System.Threading.Channels.ChannelReader`1.#ctor" />
      <Member Id="M:System.Threading.Channels.ChannelReader`1.ReadAllAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Threading.Channels.ChannelReader`1.ReadAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Threading.Channels.ChannelReader`1.TryPeek(`0@)" />
      <Member Id="M:System.Threading.Channels.ChannelReader`1.TryRead(`0@)" />
      <Member Id="M:System.Threading.Channels.ChannelReader`1.WaitToReadAsync(System.Threading.CancellationToken)" />
      <Member Id="P:System.Threading.Channels.ChannelReader`1.CanCount" />
      <Member Id="P:System.Threading.Channels.ChannelReader`1.CanPeek" />
      <Member Id="P:System.Threading.Channels.ChannelReader`1.Completion" />
      <Member Id="P:System.Threading.Channels.ChannelReader`1.Count" />
    </Type>
    <Type Name="System.Threading.Channels.ChannelWriter`1" Id="T:System.Threading.Channels.ChannelWriter`1">
      <Member Id="M:System.Threading.Channels.ChannelWriter`1.#ctor" />
      <Member Id="M:System.Threading.Channels.ChannelWriter`1.Complete(System.Exception)" />
      <Member Id="M:System.Threading.Channels.ChannelWriter`1.TryComplete(System.Exception)" />
      <Member Id="M:System.Threading.Channels.ChannelWriter`1.TryWrite(`0)" />
      <Member Id="M:System.Threading.Channels.ChannelWriter`1.WaitToWriteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Threading.Channels.ChannelWriter`1.WriteAsync(`0,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Threading.Channels.UnboundedChannelOptions" Id="T:System.Threading.Channels.UnboundedChannelOptions">
      <Member Id="M:System.Threading.Channels.UnboundedChannelOptions.#ctor" />
    </Type>
  </Namespace>
  <Namespace Name="System.Threading.Tasks.Dataflow">
    <Type Name="System.Threading.Tasks.Dataflow.ActionBlock`1" Id="T:System.Threading.Tasks.Dataflow.ActionBlock`1">
      <Member Id="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Complete" />
      <Member Id="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Post(`0)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&lt;TInput&gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.ActionBlock`1.ToString" />
      <Member Id="P:System.Threading.Tasks.Dataflow.ActionBlock`1.Completion" />
      <Member Id="P:System.Threading.Tasks.Dataflow.ActionBlock`1.InputCount" />
    </Type>
    <Type Name="System.Threading.Tasks.Dataflow.BatchBlock`1" Id="T:System.Threading.Tasks.Dataflow.BatchBlock`1">
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchBlock`1.#ctor(System.Int32)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchBlock`1.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchBlock`1.Complete" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0[]},System.Threading.Tasks.Dataflow.DataflowLinkOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T[]&gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]},System.Boolean@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T[]&gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T[]&gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&lt;T&gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchBlock`1.ToString" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchBlock`1.TriggerBatch" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchBlock`1.TryReceive(System.Predicate{`0[]},`0[]@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0[]}@)" />
      <Member Id="P:System.Threading.Tasks.Dataflow.BatchBlock`1.BatchSize" />
      <Member Id="P:System.Threading.Tasks.Dataflow.BatchBlock`1.Completion" />
      <Member Id="P:System.Threading.Tasks.Dataflow.BatchBlock`1.OutputCount" />
    </Type>
    <Type Name="System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" Id="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2">
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.#ctor(System.Int32)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Complete" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&lt;System#Tuple&lt;System#Collections#Generic#IList&lt;T1&gt;,System#Collections#Generic#IList&lt;T2&gt;&gt;&gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Boolean@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&lt;System#Tuple&lt;System#Collections#Generic#IList&lt;T1&gt;,System#Collections#Generic#IList&lt;T2&gt;&gt;&gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&lt;System#Tuple&lt;System#Collections#Generic#IList&lt;T1&gt;,System#Collections#Generic#IList&lt;T2&gt;&gt;&gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.ToString" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}}@)" />
      <Member Id="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.BatchSize" />
      <Member Id="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Completion" />
      <Member Id="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.OutputCount" />
      <Member Id="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Target1" />
      <Member Id="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Target2" />
    </Type>
    <Type Name="System.Threading.Tasks.Dataflow.BatchedJoinBlock`3" Id="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3">
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor(System.Int32)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Complete" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock&lt;System#Tuple&lt;System#Collections#Generic#IList&lt;T1&gt;,System#Collections#Generic#IList&lt;T2&gt;,System#Collections#Generic#IList&lt;T3&gt;&gt;&gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Boolean@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock&lt;System#Tuple&lt;System#Collections#Generic#IList&lt;T1&gt;,System#Collections#Generic#IList&lt;T2&gt;,System#Collections#Generic#IList&lt;T3&gt;&gt;&gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock&lt;System#Tuple&lt;System#Collections#Generic#IList&lt;T1&gt;,System#Collections#Generic#IList&lt;T2&gt;,System#Collections#Generic#IList&lt;T3&gt;&gt;&gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.ToString" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}}@)" />
      <Member Id="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.BatchSize" />
      <Member Id="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Completion" />
      <Member Id="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.OutputCount" />
      <Member Id="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target1" />
      <Member Id="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target2" />
      <Member Id="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target3" />
    </Type>
    <Type Name="System.Threading.Tasks.Dataflow.BroadcastBlock`1" Id="T:System.Threading.Tasks.Dataflow.BroadcastBlock`1">
      <Member Id="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.#ctor(System.Func{`0,`0})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.#ctor(System.Func{`0,`0},System.Threading.Tasks.Dataflow.DataflowBlockOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.Complete" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#IReceivableSourceBlock&lt;T&gt;#TryReceiveAll(System.Collections.Generic.IList{`0}@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T&gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T&gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T&gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&lt;T&gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.ToString" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.TryReceive(System.Predicate{`0},`0@)" />
      <Member Id="P:System.Threading.Tasks.Dataflow.BroadcastBlock`1.Completion" />
    </Type>
    <Type Name="System.Threading.Tasks.Dataflow.BufferBlock`1" Id="T:System.Threading.Tasks.Dataflow.BufferBlock`1">
      <Member Id="M:System.Threading.Tasks.Dataflow.BufferBlock`1.#ctor" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BufferBlock`1.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BufferBlock`1.Complete" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BufferBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T&gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T&gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T&gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&lt;T&gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BufferBlock`1.ToString" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceive(System.Predicate{`0},`0@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)" />
      <Member Id="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Completion" />
      <Member Id="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Count" />
    </Type>
    <Type Name="System.Threading.Tasks.Dataflow.DataflowBlock" Id="T:System.Threading.Tasks.Dataflow.DataflowBlock">
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget``1" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAllAsync``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},System.Threading.CancellationToken)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)" />
    </Type>
    <Type Name="System.Threading.Tasks.Dataflow.DataflowBlockOptions" Id="T:System.Threading.Tasks.Dataflow.DataflowBlockOptions">
      <Member Id="F:System.Threading.Tasks.Dataflow.DataflowBlockOptions.Unbounded" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowBlockOptions.#ctor" />
      <Member Id="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.BoundedCapacity" />
      <Member Id="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.CancellationToken" />
      <Member Id="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.EnsureOrdered" />
      <Member Id="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.MaxMessagesPerTask" />
      <Member Id="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat" />
      <Member Id="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.TaskScheduler" />
    </Type>
    <Type Name="System.Threading.Tasks.Dataflow.DataflowLinkOptions" Id="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions">
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowLinkOptions.#ctor" />
      <Member Id="P:System.Threading.Tasks.Dataflow.DataflowLinkOptions.Append" />
      <Member Id="P:System.Threading.Tasks.Dataflow.DataflowLinkOptions.MaxMessages" />
      <Member Id="P:System.Threading.Tasks.Dataflow.DataflowLinkOptions.PropagateCompletion" />
    </Type>
    <Type Name="System.Threading.Tasks.Dataflow.DataflowMessageHeader" Id="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader">
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowMessageHeader.#ctor(System.Int64)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowMessageHeader.Equals(System.Object)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowMessageHeader.Equals(System.Threading.Tasks.Dataflow.DataflowMessageHeader)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowMessageHeader.GetHashCode" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowMessageHeader.op_Equality(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.DataflowMessageHeader)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.DataflowMessageHeader.op_Inequality(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.DataflowMessageHeader)" />
      <Member Id="P:System.Threading.Tasks.Dataflow.DataflowMessageHeader.Id" />
      <Member Id="P:System.Threading.Tasks.Dataflow.DataflowMessageHeader.IsValid" />
    </Type>
    <Type Name="System.Threading.Tasks.Dataflow.DataflowMessageStatus" Id="T:System.Threading.Tasks.Dataflow.DataflowMessageStatus">
      <Member Id="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />
      <Member Id="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />
      <Member Id="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" />
      <Member Id="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" />
      <Member Id="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" />
    </Type>
    <Type Name="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" Id="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions">
      <Member Id="M:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.#ctor" />
      <Member Id="P:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.MaxDegreeOfParallelism" />
      <Member Id="P:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.SingleProducerConstrained" />
    </Type>
    <Type Name="System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions" Id="T:System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions">
      <Member Id="M:System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions.#ctor" />
      <Member Id="P:System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions.Greedy" />
      <Member Id="P:System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions.MaxNumberOfGroups" />
    </Type>
    <Type Name="System.Threading.Tasks.Dataflow.IDataflowBlock" Id="T:System.Threading.Tasks.Dataflow.IDataflowBlock">
      <Member Id="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete" />
      <Member Id="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)" />
      <Member Id="P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion" />
    </Type>
    <Type Name="System.Threading.Tasks.Dataflow.IPropagatorBlock`2" Id="T:System.Threading.Tasks.Dataflow.IPropagatorBlock`2" />
    <Type Name="System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" Id="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1">
      <Member Id="M:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceive(System.Predicate{`0},`0@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)" />
    </Type>
    <Type Name="System.Threading.Tasks.Dataflow.ISourceBlock`1" Id="T:System.Threading.Tasks.Dataflow.ISourceBlock`1">
      <Member Id="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})" />
    </Type>
    <Type Name="System.Threading.Tasks.Dataflow.ITargetBlock`1" Id="T:System.Threading.Tasks.Dataflow.ITargetBlock`1">
      <Member Id="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
    </Type>
    <Type Name="System.Threading.Tasks.Dataflow.JoinBlock`2" Id="T:System.Threading.Tasks.Dataflow.JoinBlock`2">
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`2.#ctor" />
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`2.#ctor(System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`2.Complete" />
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&lt;System#Tuple&lt;T1,T2&gt;&gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}},System.Boolean@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&lt;System#Tuple&lt;T1,T2&gt;&gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&lt;System#Tuple&lt;T1,T2&gt;&gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`2.ToString" />
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`2.TryReceive(System.Predicate{System.Tuple{`0,`1}},System.Tuple{`0,`1}@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`2.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{`0,`1}}@)" />
      <Member Id="P:System.Threading.Tasks.Dataflow.JoinBlock`2.Completion" />
      <Member Id="P:System.Threading.Tasks.Dataflow.JoinBlock`2.OutputCount" />
      <Member Id="P:System.Threading.Tasks.Dataflow.JoinBlock`2.Target1" />
      <Member Id="P:System.Threading.Tasks.Dataflow.JoinBlock`2.Target2" />
    </Type>
    <Type Name="System.Threading.Tasks.Dataflow.JoinBlock`3" Id="T:System.Threading.Tasks.Dataflow.JoinBlock`3">
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`3.#ctor" />
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`3.#ctor(System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`3.Complete" />
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`3.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1,`2}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`3.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock&lt;System#Tuple&lt;T1,T2,T3&gt;&gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1,`2}},System.Boolean@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock&lt;System#Tuple&lt;T1,T2,T3&gt;&gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1,`2}})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock&lt;System#Tuple&lt;T1,T2,T3&gt;&gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1,`2}})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`3.ToString" />
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`3.TryReceive(System.Predicate{System.Tuple{`0,`1,`2}},System.Tuple{`0,`1,`2}@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.JoinBlock`3.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{`0,`1,`2}}@)" />
      <Member Id="P:System.Threading.Tasks.Dataflow.JoinBlock`3.Completion" />
      <Member Id="P:System.Threading.Tasks.Dataflow.JoinBlock`3.OutputCount" />
      <Member Id="P:System.Threading.Tasks.Dataflow.JoinBlock`3.Target1" />
      <Member Id="P:System.Threading.Tasks.Dataflow.JoinBlock`3.Target2" />
      <Member Id="P:System.Threading.Tasks.Dataflow.JoinBlock`3.Target3" />
    </Type>
    <Type Name="System.Threading.Tasks.Dataflow.TransformBlock`2" Id="T:System.Threading.Tasks.Dataflow.TransformBlock`2">
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformBlock`2.#ctor(System.Func{`0,`1})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformBlock`2.#ctor(System.Func{`0,`1},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{`1}})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformBlock`2.Complete" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Threading.Tasks.Dataflow.DataflowLinkOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&lt;TOutput&gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&lt;TOutput&gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&lt;TOutput&gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock&lt;TInput&gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformBlock`2.ToString" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformBlock`2.TryReceive(System.Predicate{`1},`1@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformBlock`2.TryReceiveAll(System.Collections.Generic.IList{`1}@)" />
      <Member Id="P:System.Threading.Tasks.Dataflow.TransformBlock`2.Completion" />
      <Member Id="P:System.Threading.Tasks.Dataflow.TransformBlock`2.InputCount" />
      <Member Id="P:System.Threading.Tasks.Dataflow.TransformBlock`2.OutputCount" />
    </Type>
    <Type Name="System.Threading.Tasks.Dataflow.TransformManyBlock`2" Id="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2">
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IAsyncEnumerable{`1}})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IAsyncEnumerable{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.Complete" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Threading.Tasks.Dataflow.DataflowLinkOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&lt;TOutput&gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&lt;TOutput&gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&lt;TOutput&gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock&lt;TInput&gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.ToString" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceive(System.Predicate{`1},`1@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceiveAll(System.Collections.Generic.IList{`1}@)" />
      <Member Id="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.Completion" />
      <Member Id="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.InputCount" />
      <Member Id="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.OutputCount" />
    </Type>
    <Type Name="System.Threading.Tasks.Dataflow.WriteOnceBlock`1" Id="T:System.Threading.Tasks.Dataflow.WriteOnceBlock`1">
      <Member Id="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.#ctor(System.Func{`0,`0})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.#ctor(System.Func{`0,`0},System.Threading.Tasks.Dataflow.DataflowBlockOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.Complete" />
      <Member Id="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#IReceivableSourceBlock&lt;T&gt;#TryReceiveAll(System.Collections.Generic.IList{`0}@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T&gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T&gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T&gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})" />
      <Member Id="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&lt;T&gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <Member Id="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.ToString" />
      <Member Id="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.TryReceive(System.Predicate{`0},`0@)" />
      <Member Id="P:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.Completion" />
    </Type>
  </Namespace>
</Framework>
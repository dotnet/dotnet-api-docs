<Type Name="ContextualOptionsServiceCollectionExtensions" FullName="Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class ContextualOptionsServiceCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ContextualOptionsServiceCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ContextualOptionsServiceCollectionExtensions" />
  <TypeSignature Language="F#" Value="type ContextualOptionsServiceCollectionExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextualOptionsServiceCollectionExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Options.Contextual</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for adding contextual options services to the DI container.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddContextualOptions">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddContextualOptions (this Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddContextualOptions(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.AddContextualOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddContextualOptions (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddContextualOptions : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.AddContextualOptions services" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddContextualOptions(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options.Contextual</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <summary>
            Adds services required for using contextual options.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Configure&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection Configure&lt;TOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;Microsoft.Extensions.Options.Contextual.IOptionsContext,TOptions&gt; configureOptions) where TOptions : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection Configure&lt;class TOptions&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`2&lt;class Microsoft.Extensions.Options.Contextual.IOptionsContext, !!TOptions&gt; configureOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.Configure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Options.Contextual.IOptionsContext,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Configure(Of TOptions As Class) (services As IServiceCollection, configureOptions As Action(Of IOptionsContext, TOptions)) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member Configure : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;Microsoft.Extensions.Options.Contextual.IOptionsContext, 'Options (requires 'Options : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Options : null)" Usage="Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.Configure (services, configureOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOptions&gt;&#xA; where TOptions : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ Configure(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Action&lt;Microsoft::Extensions::Options::Contextual::IOptionsContext ^, TOptions&gt; ^ configureOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options.Contextual</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configureOptions" Type="System.Action&lt;Microsoft.Extensions.Options.Contextual.IOptionsContext,TOptions&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">The options type to be configured.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <param name="configureOptions">The action used to configure the options.</param>
        <summary>
            Registers an action used to configure a particular type of options.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Configure&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection Configure&lt;TOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Func&lt;Microsoft.Extensions.Options.Contextual.IOptionsContext,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.Options.Contextual.IConfigureContextualOptions&lt;TOptions&gt;&gt;&gt; loadOptions) where TOptions : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection Configure&lt;class TOptions&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Func`3&lt;class Microsoft.Extensions.Options.Contextual.IOptionsContext, valuetype System.Threading.CancellationToken, valuetype System.Threading.Tasks.ValueTask`1&lt;class Microsoft.Extensions.Options.Contextual.IConfigureContextualOptions`1&lt;!!TOptions&gt;&gt;&gt; loadOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.Configure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{Microsoft.Extensions.Options.Contextual.IOptionsContext,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask{Microsoft.Extensions.Options.Contextual.IConfigureContextualOptions{``0}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Configure(Of TOptions As Class) (services As IServiceCollection, loadOptions As Func(Of IOptionsContext, CancellationToken, ValueTask(Of IConfigureContextualOptions(Of TOptions)))) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member Configure : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;Microsoft.Extensions.Options.Contextual.IOptionsContext, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.Options.Contextual.IConfigureContextualOptions&lt;'Options&gt;&gt;&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Options : null)" Usage="Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.Configure (services, loadOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOptions&gt;&#xA; where TOptions : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ Configure(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Func&lt;Microsoft::Extensions::Options::Contextual::IOptionsContext ^, System::Threading::CancellationToken, System::Threading::Tasks::ValueTask&lt;Microsoft::Extensions::Options::Contextual::IConfigureContextualOptions&lt;TOptions&gt; ^&gt;&gt; ^ loadOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options.Contextual</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="loadOptions" Type="System.Func&lt;Microsoft.Extensions.Options.Contextual.IOptionsContext,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.Options.Contextual.IConfigureContextualOptions&lt;TOptions&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">The options type to be configured.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <param name="loadOptions">The action used to configure the options.</param>
        <summary>
            Registers an action used to configure a particular type of options.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Configure&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection Configure&lt;TOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, Action&lt;Microsoft.Extensions.Options.Contextual.IOptionsContext,TOptions&gt; configureOptions) where TOptions : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection Configure&lt;class TOptions&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, class System.Action`2&lt;class Microsoft.Extensions.Options.Contextual.IOptionsContext, !!TOptions&gt; configureOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.Configure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Microsoft.Extensions.Options.Contextual.IOptionsContext,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Configure(Of TOptions As Class) (services As IServiceCollection, name As String, configureOptions As Action(Of IOptionsContext, TOptions)) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member Configure : Microsoft.Extensions.DependencyInjection.IServiceCollection * string * Action&lt;Microsoft.Extensions.Options.Contextual.IOptionsContext, 'Options (requires 'Options : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Options : null)" Usage="Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.Configure (services, name, configureOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOptions&gt;&#xA; where TOptions : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ Configure(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::String ^ name, Action&lt;Microsoft::Extensions::Options::Contextual::IOptionsContext ^, TOptions&gt; ^ configureOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options.Contextual</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="configureOptions" Type="System.Action&lt;Microsoft.Extensions.Options.Contextual.IOptionsContext,TOptions&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">The options type to be configured.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <param name="name">The name of the options to configure.</param>
        <param name="configureOptions">The action used to configure the options.</param>
        <summary>
            Registers an action used to configure a particular type of options.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Configure&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection Configure&lt;TOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, Func&lt;Microsoft.Extensions.Options.Contextual.IOptionsContext,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.Options.Contextual.IConfigureContextualOptions&lt;TOptions&gt;&gt;&gt; loadOptions) where TOptions : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection Configure&lt;class TOptions&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, class System.Func`3&lt;class Microsoft.Extensions.Options.Contextual.IOptionsContext, valuetype System.Threading.CancellationToken, valuetype System.Threading.Tasks.ValueTask`1&lt;class Microsoft.Extensions.Options.Contextual.IConfigureContextualOptions`1&lt;!!TOptions&gt;&gt;&gt; loadOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.Configure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Func{Microsoft.Extensions.Options.Contextual.IOptionsContext,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask{Microsoft.Extensions.Options.Contextual.IConfigureContextualOptions{``0}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Configure(Of TOptions As Class) (services As IServiceCollection, name As String, loadOptions As Func(Of IOptionsContext, CancellationToken, ValueTask(Of IConfigureContextualOptions(Of TOptions)))) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member Configure : Microsoft.Extensions.DependencyInjection.IServiceCollection * string * Func&lt;Microsoft.Extensions.Options.Contextual.IOptionsContext, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.Options.Contextual.IConfigureContextualOptions&lt;'Options&gt;&gt;&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Options : null)" Usage="Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.Configure (services, name, loadOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOptions&gt;&#xA; where TOptions : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ Configure(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::String ^ name, Func&lt;Microsoft::Extensions::Options::Contextual::IOptionsContext ^, System::Threading::CancellationToken, System::Threading::Tasks::ValueTask&lt;Microsoft::Extensions::Options::Contextual::IConfigureContextualOptions&lt;TOptions&gt; ^&gt;&gt; ^ loadOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options.Contextual</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="loadOptions" Type="System.Func&lt;Microsoft.Extensions.Options.Contextual.IOptionsContext,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.Options.Contextual.IConfigureContextualOptions&lt;TOptions&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">The options type to be configured.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <param name="name">The name of the options to configure.</param>
        <param name="loadOptions">The action used to configure the options.</param>
        <summary>
            Registers an action used to configure a particular type of options.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostConfigure&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection PostConfigure&lt;TOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;Microsoft.Extensions.Options.Contextual.IOptionsContext,TOptions&gt; configureOptions) where TOptions : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection PostConfigure&lt;class TOptions&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`2&lt;class Microsoft.Extensions.Options.Contextual.IOptionsContext, !!TOptions&gt; configureOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.PostConfigure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Options.Contextual.IOptionsContext,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostConfigure(Of TOptions As Class) (services As IServiceCollection, configureOptions As Action(Of IOptionsContext, TOptions)) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member PostConfigure : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;Microsoft.Extensions.Options.Contextual.IOptionsContext, 'Options (requires 'Options : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Options : null)" Usage="Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.PostConfigure (services, configureOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOptions&gt;&#xA; where TOptions : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ PostConfigure(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Action&lt;Microsoft::Extensions::Options::Contextual::IOptionsContext ^, TOptions&gt; ^ configureOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options.Contextual</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configureOptions" Type="System.Action&lt;Microsoft.Extensions.Options.Contextual.IOptionsContext,TOptions&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">The options type to be configured.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <param name="configureOptions">The action used to configure the options.</param>
        <summary>
            Registers an action used to initialize a particular type of options.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostConfigure&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection PostConfigure&lt;TOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string? name, Action&lt;Microsoft.Extensions.Options.Contextual.IOptionsContext,TOptions&gt; configureOptions) where TOptions : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection PostConfigure&lt;class TOptions&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, class System.Action`2&lt;class Microsoft.Extensions.Options.Contextual.IOptionsContext, !!TOptions&gt; configureOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.PostConfigure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Microsoft.Extensions.Options.Contextual.IOptionsContext,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostConfigure(Of TOptions As Class) (services As IServiceCollection, name As String, configureOptions As Action(Of IOptionsContext, TOptions)) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member PostConfigure : Microsoft.Extensions.DependencyInjection.IServiceCollection * string * Action&lt;Microsoft.Extensions.Options.Contextual.IOptionsContext, 'Options (requires 'Options : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Options : null)" Usage="Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.PostConfigure (services, name, configureOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOptions&gt;&#xA; where TOptions : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ PostConfigure(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::String ^ name, Action&lt;Microsoft::Extensions::Options::Contextual::IOptionsContext ^, TOptions&gt; ^ configureOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options.Contextual</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="configureOptions" Type="System.Action&lt;Microsoft.Extensions.Options.Contextual.IOptionsContext,TOptions&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">The options type to be configured.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <param name="name">The name of the options instance.</param>
        <param name="configureOptions">The action used to configure the options.</param>
        <summary>
            Registers an action used to initialize a particular type of options.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostConfigureAll&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection PostConfigureAll&lt;TOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;Microsoft.Extensions.Options.Contextual.IOptionsContext,TOptions&gt; configureOptions) where TOptions : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection PostConfigureAll&lt;class TOptions&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`2&lt;class Microsoft.Extensions.Options.Contextual.IOptionsContext, !!TOptions&gt; configureOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.PostConfigureAll``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Options.Contextual.IOptionsContext,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostConfigureAll(Of TOptions As Class) (services As IServiceCollection, configureOptions As Action(Of IOptionsContext, TOptions)) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member PostConfigureAll : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;Microsoft.Extensions.Options.Contextual.IOptionsContext, 'Options (requires 'Options : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Options : null)" Usage="Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.PostConfigureAll (services, configureOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOptions&gt;&#xA; where TOptions : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ PostConfigureAll(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Action&lt;Microsoft::Extensions::Options::Contextual::IOptionsContext ^, TOptions&gt; ^ configureOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options.Contextual</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configureOptions" Type="System.Action&lt;Microsoft.Extensions.Options.Contextual.IOptionsContext,TOptions&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">The options type to be configured.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <param name="configureOptions">The action used to configure the options.</param>
        <summary>
            Registers an action used to initialize all instances of a particular type of options.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateContextualOptions&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection ValidateContextualOptions&lt;TOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Func&lt;TOptions,bool&gt; validate, string failureMessage) where TOptions : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection ValidateContextualOptions&lt;class TOptions&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Func`2&lt;!!TOptions, bool&gt; validate, string failureMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.ValidateContextualOptions``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{``0,System.Boolean},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ValidateContextualOptions(Of TOptions As Class) (services As IServiceCollection, validate As Func(Of TOptions, Boolean), failureMessage As String) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member ValidateContextualOptions : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;'Options, bool (requires 'Options : null)&gt; * string -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Options : null)" Usage="Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.ValidateContextualOptions (services, validate, failureMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOptions&gt;&#xA; where TOptions : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ ValidateContextualOptions(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Func&lt;TOptions, bool&gt; ^ validate, System::String ^ failureMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options.Contextual</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="validate" Type="System.Func&lt;TOptions,System.Boolean&gt;" />
        <Parameter Name="failureMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">The options type to be validated.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <param name="validate">The validation function.</param>
        <param name="failureMessage">The failure message to use when validation fails.</param>
        <summary>
            Register a validation action for an options type.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateContextualOptions&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection ValidateContextualOptions&lt;TOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, Func&lt;TOptions,bool&gt; validate, string failureMessage) where TOptions : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection ValidateContextualOptions&lt;class TOptions&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, class System.Func`2&lt;!!TOptions, bool&gt; validate, string failureMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.ValidateContextualOptions``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Func{``0,System.Boolean},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ValidateContextualOptions(Of TOptions As Class) (services As IServiceCollection, name As String, validate As Func(Of TOptions, Boolean), failureMessage As String) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member ValidateContextualOptions : Microsoft.Extensions.DependencyInjection.IServiceCollection * string * Func&lt;'Options, bool (requires 'Options : null)&gt; * string -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Options : null)" Usage="Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.ValidateContextualOptions (services, name, validate, failureMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOptions&gt;&#xA; where TOptions : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ ValidateContextualOptions(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::String ^ name, Func&lt;TOptions, bool&gt; ^ validate, System::String ^ failureMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options.Contextual</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="validate" Type="System.Func&lt;TOptions,System.Boolean&gt;" />
        <Parameter Name="failureMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">The options type to be validated.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <param name="name">The name of the options instance.</param>
        <param name="validate">The validation function.</param>
        <param name="failureMessage">The failure message to use when validation fails.</param>
        <summary>
            Register a validation action for an options type.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

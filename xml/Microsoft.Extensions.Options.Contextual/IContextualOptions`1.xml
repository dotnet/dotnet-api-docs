<Type Name="IContextualOptions&lt;TOptions&gt;" FullName="Microsoft.Extensions.Options.Contextual.IContextualOptions&lt;TOptions&gt;">
  <TypeSignature Language="C#" Value="public interface IContextualOptions&lt;TOptions&gt; where TOptions : class" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContextualOptions`1&lt;class TOptions&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Options.Contextual.IContextualOptions`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContextualOptions(Of TOptions)" />
  <TypeSignature Language="F#" Value="type IContextualOptions&lt;'Options (requires 'Options : null)&gt; = interface" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TOptions&gt;&#xA; where TOptions : classpublic interface class IContextualOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Options.Contextual</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TOptions">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TOptions">The type of options being requested.</typeparam>
    <summary>
            Used to retrieve configured <typeparamref name="TOptions" /> instances.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAsync&lt;TContext&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;TOptions&gt; GetAsync&lt;TContext&gt; (in TContext context, System.Threading.CancellationToken cancellationToken) where TContext : Microsoft.Extensions.Options.Contextual.IOptionsContext;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;!TOptions&gt; GetAsync&lt;(class Microsoft.Extensions.Options.Contextual.IOptionsContext) TContext&gt;([in]!!TContext context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.Contextual.IContextualOptions`1.GetAsync``1(``0@|System.Runtime.InteropServices.InAttribute,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync(Of TContext As IOptionsContext) (context As TContext, cancellationToken As CancellationToken) As ValueTask(Of TOptions)" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : 'Context * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;'Options (requires 'Options : null)&gt; (requires 'Context :&gt; Microsoft.Extensions.Options.Contextual.IOptionsContext)" Usage="iContextualOptions.GetAsync (context, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TContext&gt;&#xA; where TContext : Microsoft::Extensions::Options::Contextual::IOptionsContext System::Threading::Tasks::ValueTask&lt;TOptions&gt; GetAsync(TContext&amp; ^ context, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options.Contextual</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;TOptions&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Options.Contextual.IOptionsContext</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="TContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">A type defining the context for this request.</typeparam>
        <param name="context">The context that will be used to create the options.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Gets the configured <typeparamref name="TOptions" /> instance.
            </summary>
        <returns>A configured instance of <typeparamref name="TOptions" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

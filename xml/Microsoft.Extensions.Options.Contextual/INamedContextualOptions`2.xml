<Type Name="INamedContextualOptions&lt;TOptions,TContext&gt;" FullName="Microsoft.Extensions.Options.Contextual.INamedContextualOptions&lt;TOptions,TContext&gt;">
  <TypeSignature Language="C#" Value="public interface INamedContextualOptions&lt;TOptions,TContext&gt; : Microsoft.Extensions.Options.Contextual.IContextualOptions&lt;TOptions,TContext&gt; where TOptions : class where TContext : IOptionsContext" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit INamedContextualOptions`2&lt;class TOptions, (class Microsoft.Extensions.Options.Contextual.IOptionsContext) TContext&gt; implements class Microsoft.Extensions.Options.Contextual.IContextualOptions`2&lt;!TOptions, !TContext&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Options.Contextual.INamedContextualOptions`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface INamedContextualOptions(Of TOptions, TContext)&#xA;Implements IContextualOptions(Of TOptions, TContext)" />
  <TypeSignature Language="F#" Value="type INamedContextualOptions&lt;'Options, 'Context (requires 'Options : null and 'Context :&gt; IOptionsContext)&gt; = interface&#xA;    interface IContextualOptions&lt;'Options, 'Context (requires 'Options : null and 'Context :&gt; IOptionsContext)&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TOptions, typename TContext&gt;&#xA; where TOptions : class where TContext : IOptionsContextpublic interface class INamedContextualOptions : Microsoft::Extensions::Options::Contextual::IContextualOptions&lt;TOptions, TContext&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Options.Contextual</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TOptions">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TContext">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Constraints>
        <InterfaceName>Microsoft.Extensions.Options.Contextual.IOptionsContext</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Options.Contextual.IContextualOptions&lt;TOptions,TContext&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TOptions">The type of options being requested.</typeparam>
    <typeparam name="TContext">A type defining the context for this request.</typeparam>
    <summary>
            Provides functionality to retrieve named configured <typeparamref name="TOptions" /> instances.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;TOptions&gt; GetAsync (string name, in TContext context, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;!TOptions&gt; GetAsync(string name, [in]!TContext context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.Contextual.INamedContextualOptions`2.GetAsync(System.String,`1@|System.Runtime.InteropServices.InAttribute,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (name As String, context As TContext, cancellationToken As CancellationToken) As ValueTask(Of TOptions)" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * 'Context * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;'Options (requires 'Options : null)&gt;" Usage="iNamedContextualOptions.GetAsync (name, context, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::ValueTask&lt;TOptions&gt; GetAsync(System::String ^ name, TContext&amp; ^ context, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options.Contextual</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;TOptions&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="TContext">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the options to get.</param>
        <param name="context">The context that will be used to create the options.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Gets the named configured <typeparamref name="TOptions" /> instance.
            </summary>
        <returns>A configured instance of <typeparamref name="TOptions" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

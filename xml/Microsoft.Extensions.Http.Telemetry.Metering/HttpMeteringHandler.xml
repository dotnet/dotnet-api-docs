<Type Name="HttpMeteringHandler" FullName="Microsoft.Extensions.Http.Telemetry.Metering.HttpMeteringHandler">
  <TypeSignature Language="C#" Value="public class HttpMeteringHandler : System.Net.Http.DelegatingHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpMeteringHandler extends System.Net.Http.DelegatingHandler" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Http.Telemetry.Metering.HttpMeteringHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpMeteringHandler&#xA;Inherits DelegatingHandler" />
  <TypeSignature Language="F#" Value="type HttpMeteringHandler = class&#xA;    inherit DelegatingHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpMeteringHandler : System::Net::Http::DelegatingHandler" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.DelegatingHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Handler that logs outgoing request duration.
            </summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Net.Http.DelegatingHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpMeteringHandler (Microsoft.Extensions.Telemetry.Metering.Meter&lt;Microsoft.Extensions.Http.Telemetry.Metering.HttpMeteringHandler&gt; meter, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.Http.Telemetry.Metering.IOutgoingRequestMetricEnricher&gt; enrichers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Telemetry.Metering.Meter`1&lt;class Microsoft.Extensions.Http.Telemetry.Metering.HttpMeteringHandler&gt; meter, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.Http.Telemetry.Metering.IOutgoingRequestMetricEnricher&gt; enrichers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Telemetry.Metering.HttpMeteringHandler.#ctor(Microsoft.Extensions.Telemetry.Metering.Meter{Microsoft.Extensions.Http.Telemetry.Metering.HttpMeteringHandler},System.Collections.Generic.IEnumerable{Microsoft.Extensions.Http.Telemetry.Metering.IOutgoingRequestMetricEnricher})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (meter As Meter(Of HttpMeteringHandler), enrichers As IEnumerable(Of IOutgoingRequestMetricEnricher))" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Http.Telemetry.Metering.HttpMeteringHandler : Microsoft.Extensions.Telemetry.Metering.Meter&lt;Microsoft.Extensions.Http.Telemetry.Metering.HttpMeteringHandler&gt; * seq&lt;Microsoft.Extensions.Http.Telemetry.Metering.IOutgoingRequestMetricEnricher&gt; -&gt; Microsoft.Extensions.Http.Telemetry.Metering.HttpMeteringHandler" Usage="new Microsoft.Extensions.Http.Telemetry.Metering.HttpMeteringHandler (meter, enrichers)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpMeteringHandler(Microsoft::Extensions::Telemetry::Metering::Meter&lt;Microsoft::Extensions::Http::Telemetry::Metering::HttpMeteringHandler ^&gt; ^ meter, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::Http::Telemetry::Metering::IOutgoingRequestMetricEnricher ^&gt; ^ enrichers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="meter" Type="Microsoft.Extensions.Telemetry.Metering.Meter&lt;Microsoft.Extensions.Http.Telemetry.Metering.HttpMeteringHandler&gt;" />
        <Parameter Name="enrichers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.Http.Telemetry.Metering.IOutgoingRequestMetricEnricher&gt;" />
      </Parameters>
      <Docs>
        <param name="meter">The meter.</param>
        <param name="enrichers">Enumerable of outgoing request metric enrichers.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Http.Telemetry.Metering.HttpMeteringHandler" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Telemetry.Metering.HttpMeteringHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SendAsync (request As HttpRequestMessage, cancellationToken As CancellationToken) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpMeteringHandler.SendAsync (request, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">The HTTP request message to send to the server.</param>
        <param name="cancellationToken">A cancellation token to cancel operation.</param>
        <summary>
            Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.
            </summary>
        <returns>
            The task object representing the asynchronous operation.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="HttpClientMeteringExtensions" FullName="Microsoft.Extensions.Http.Telemetry.Metering.HttpClientMeteringExtensions">
  <TypeSignature Language="C#" Value="public static class HttpClientMeteringExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HttpClientMeteringExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Http.Telemetry.Metering.HttpClientMeteringExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module HttpClientMeteringExtensions" />
  <TypeSignature Language="F#" Value="type HttpClientMeteringExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpClientMeteringExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for HttpClient.Metering package. /&gt;.
            </summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Net.Http.DelegatingHandler" />
  </Docs>
  <Members>
    <Member MemberName="AddDefaultHttpClientMetering">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddDefaultHttpClientMetering (this Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddDefaultHttpClientMetering(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Telemetry.Metering.HttpClientMeteringExtensions.AddDefaultHttpClientMetering(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddDefaultHttpClientMetering (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddDefaultHttpClientMetering : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.Http.Telemetry.Metering.HttpClientMeteringExtensions.AddDefaultHttpClientMetering services" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddDefaultHttpClientMetering(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <summary>
            Adds a <see cref="T:System.Net.Http.DelegatingHandler" /> to collect and emit metrics for outgoing requests from all http clients created using IHttpClientFactory.
            </summary>
        <returns>
          <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> instance for chaining.
            </returns>
        <remarks>
            This extension configures outgoing request metrics auto collection
            for all http clients created using IHttpClientFactory.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpClientMetering">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClientMetering (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClientMetering(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Telemetry.Metering.HttpClientMeteringExtensions.AddHttpClientMetering(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpClientMetering (builder As IHttpClientBuilder) As IHttpClientBuilder" />
      <MemberSignature Language="F#" Value="static member AddHttpClientMetering : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.Http.Telemetry.Metering.HttpClientMeteringExtensions.AddHttpClientMetering builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpClientMetering(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
        <summary>
            Adds a <see cref="T:System.Net.Http.DelegatingHandler" /> to collect and emit metrics for outgoing requests.
            </summary>
        <returns>
            An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpClientMeteringForAllHttpClients">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddHttpClientMeteringForAllHttpClients (this Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddHttpClientMeteringForAllHttpClients(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Telemetry.Metering.HttpClientMeteringExtensions.AddHttpClientMeteringForAllHttpClients(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpClientMeteringForAllHttpClients (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddHttpClientMeteringForAllHttpClients : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.Http.Telemetry.Metering.HttpClientMeteringExtensions.AddHttpClientMeteringForAllHttpClients services" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddHttpClientMeteringForAllHttpClients(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <summary>
            Adds Http client diagnostics listener to capture metrics for requests from all http clients.
            </summary>
        <returns>
          <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> instance for chaining.
            </returns>
        <remarks>
            This extension configures outgoing request metrics auto collection
            globally for all http clients regardless of how the http client is created.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOutgoingRequestMetricEnricher">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddOutgoingRequestMetricEnricher (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Microsoft.Extensions.Http.Telemetry.Metering.IOutgoingRequestMetricEnricher enricher);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddOutgoingRequestMetricEnricher(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class Microsoft.Extensions.Http.Telemetry.Metering.IOutgoingRequestMetricEnricher enricher) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Telemetry.Metering.HttpClientMeteringExtensions.AddOutgoingRequestMetricEnricher(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Http.Telemetry.Metering.IOutgoingRequestMetricEnricher)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddOutgoingRequestMetricEnricher (services As IServiceCollection, enricher As IOutgoingRequestMetricEnricher) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddOutgoingRequestMetricEnricher : Microsoft.Extensions.DependencyInjection.IServiceCollection * Microsoft.Extensions.Http.Telemetry.Metering.IOutgoingRequestMetricEnricher -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.Http.Telemetry.Metering.HttpClientMeteringExtensions.AddOutgoingRequestMetricEnricher (services, enricher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddOutgoingRequestMetricEnricher(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Microsoft::Extensions::Http::Telemetry::Metering::IOutgoingRequestMetricEnricher ^ enricher);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="enricher" Type="Microsoft.Extensions.Http.Telemetry.Metering.IOutgoingRequestMetricEnricher" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add <paramref name="enricher" /> to.</param>
        <param name="enricher">The instance of <paramref name="enricher" /> to add to <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <summary>
            Adds <paramref name="enricher" /> to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to enrich outgoing request metrics.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOutgoingRequestMetricEnricher&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddOutgoingRequestMetricEnricher&lt;T&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services) where T : class, Microsoft.Extensions.Http.Telemetry.Metering.IOutgoingRequestMetricEnricher;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddOutgoingRequestMetricEnricher&lt;class (class Microsoft.Extensions.Http.Telemetry.Metering.IOutgoingRequestMetricEnricher) T&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Telemetry.Metering.HttpClientMeteringExtensions.AddOutgoingRequestMetricEnricher``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddOutgoingRequestMetricEnricher(Of T As {Class, IOutgoingRequestMetricEnricher}) (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddOutgoingRequestMetricEnricher : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'T : null and 'T :&gt; Microsoft.Extensions.Http.Telemetry.Metering.IOutgoingRequestMetricEnricher)" Usage="Microsoft.Extensions.Http.Telemetry.Metering.HttpClientMeteringExtensions.AddOutgoingRequestMetricEnricher services" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class, Microsoft::Extensions::Http::Telemetry::Metering::IOutgoingRequestMetricEnricher[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddOutgoingRequestMetricEnricher(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.Extensions.Http.Telemetry.Metering.IOutgoingRequestMetricEnricher</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of enricher.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the instance of <typeparamref name="T" /> to.</param>
        <summary>
            Adds an enricher instance of <typeparamref name="T" /> to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to enrich outgoing request metrics.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

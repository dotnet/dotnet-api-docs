<Namespace Name="System.IO.IsolatedStorage">
  <Docs>
    <summary>The <see cref="N:System.IO.IsolatedStorage" /> namespace contains types that allow the creation and use of isolated stores. With these stores, you can read and write data that less trusted code cannot access and prevent the exposure of sensitive information that can be saved elsewhere on the file system. Data is stored in compartments that are isolated by the current user and by the assembly in which the code exists. Additionally, data can be isolated by domain. Roaming profiles can be used in conjunction with isolated storage so isolated stores will travel with the user's profile. The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageScope" /> enumeration indicates different types of isolation. For more information about when to use isolated storage, see <see href="https://docs.microsoft.com/dotnet/standard/io/isolated-storage">Isolated Storage</see>.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.IO.IsolatedStorage.IsolatedStorageFile> class provides most of the necessary functionality for isolated storage. Use this class to obtain, delete and manage isolated storage. The <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> class handles reading and writing files to a store. This is similar to reading and writing in standard File I/O classes. For more information about I/O, see the <xref:System.IO> namespace.  
  
 For examples using isolated storage, see [Isolated Storage](/dotnet/standard/io/isolated-storage)  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>
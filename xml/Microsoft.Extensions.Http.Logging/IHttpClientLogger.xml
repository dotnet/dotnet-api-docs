<Type Name="IHttpClientLogger" FullName="Microsoft.Extensions.Http.Logging.IHttpClientLogger">
  <TypeSignature Language="C#" Value="public interface IHttpClientLogger" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IHttpClientLogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Http.Logging.IHttpClientLogger" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHttpClientLogger" />
  <TypeSignature Language="F#" Value="type IHttpClientLogger = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IHttpClientLogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            An abstraction for custom HTTP request logging for a named <see cref="T:System.Net.Http.HttpClient" /> instances returned by <see cref="T:System.Net.Http.IHttpClientFactory" />.
            </summary>
    <remarks>
      <para>
            It is up to the user implementing the interface to decide where (to <see cref="T:Microsoft.Extensions.Logging.ILogger" />, or anything else) and what exactly to log.
            However, the implementation should be mindful about potential adverse side effects of accessing some of the <see cref="T:System.Net.Http.HttpRequestMessage" /> or
            <see cref="T:System.Net.Http.HttpResponseMessage" /> properties, such as reading from a content stream; if possible, such behavior should be avoided.
            </para>
      <para>
            Logging implementation also should not throw any exceptions, as an unhandled exception in logging would fail the request.
            </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="LogRequestFailed">
      <MemberSignature Language="C#" Value="public void LogRequestFailed (object? context, System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpResponseMessage? response, Exception exception, TimeSpan elapsed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LogRequestFailed(object context, class System.Net.Http.HttpRequestMessage request, class System.Net.Http.HttpResponseMessage response, class System.Exception exception, valuetype System.TimeSpan elapsed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Logging.IHttpClientLogger.LogRequestFailed(System.Object,System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage,System.Exception,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LogRequestFailed (context As Object, request As HttpRequestMessage, response As HttpResponseMessage, exception As Exception, elapsed As TimeSpan)" />
      <MemberSignature Language="F#" Value="abstract member LogRequestFailed : obj * System.Net.Http.HttpRequestMessage * System.Net.Http.HttpResponseMessage * Exception * TimeSpan -&gt; unit" Usage="iHttpClientLogger.LogRequestFailed (context, request, response, exception, elapsed)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LogRequestFailed(System::Object ^ context, System::Net::Http::HttpRequestMessage ^ request, System::Net::Http::HttpResponseMessage ^ response, Exception ^ exception, TimeSpan elapsed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="response" Type="System.Net.Http.HttpResponseMessage">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="elapsed" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="context">The context object that was previously returned by <see cref="M:Microsoft.Extensions.Http.Logging.IHttpClientLogger.LogRequestStart(System.Net.Http.HttpRequestMessage)" />.</param>
        <param name="request">The HTTP request message that was sent.</param>
        <param name="response">If available, the HTTP response message that was received, and `null` otherwise.</param>
        <param name="exception">Exception that happened during processing the HTTP request.</param>
        <param name="elapsed">Time elapsed since calling <see cref="M:Microsoft.Extensions.Http.Logging.IHttpClientLogger.LogRequestStart(System.Net.Http.HttpRequestMessage)" />.</param>
        <summary>
            Logs the exception happened while sending an HTTP request.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRequestStart">
      <MemberSignature Language="C#" Value="public object? LogRequestStart (System.Net.Http.HttpRequestMessage request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LogRequestStart(class System.Net.Http.HttpRequestMessage request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Logging.IHttpClientLogger.LogRequestStart(System.Net.Http.HttpRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogRequestStart (request As HttpRequestMessage) As Object" />
      <MemberSignature Language="F#" Value="abstract member LogRequestStart : System.Net.Http.HttpRequestMessage -&gt; obj" Usage="iHttpClientLogger.LogRequestStart request" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ LogRequestStart(System::Net::Http::HttpRequestMessage ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
      </Parameters>
      <Docs>
        <param name="request">The HTTP request message that will be sent.</param>
        <summary>
            Logs before sending an HTTP request.
            </summary>
        <returns>A context object that will be passed to a corresponding <see cref="M:Microsoft.Extensions.Http.Logging.IHttpClientLogger.LogRequestStop(System.Object,System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage,System.TimeSpan)" /> or <see cref="M:Microsoft.Extensions.Http.Logging.IHttpClientLogger.LogRequestFailed(System.Object,System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage,System.Exception,System.TimeSpan)" />. Can be `null`
            if no context object is needed by the implementation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRequestStop">
      <MemberSignature Language="C#" Value="public void LogRequestStop (object? context, System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpResponseMessage response, TimeSpan elapsed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LogRequestStop(object context, class System.Net.Http.HttpRequestMessage request, class System.Net.Http.HttpResponseMessage response, valuetype System.TimeSpan elapsed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Logging.IHttpClientLogger.LogRequestStop(System.Object,System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LogRequestStop (context As Object, request As HttpRequestMessage, response As HttpResponseMessage, elapsed As TimeSpan)" />
      <MemberSignature Language="F#" Value="abstract member LogRequestStop : obj * System.Net.Http.HttpRequestMessage * System.Net.Http.HttpResponseMessage * TimeSpan -&gt; unit" Usage="iHttpClientLogger.LogRequestStop (context, request, response, elapsed)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LogRequestStop(System::Object ^ context, System::Net::Http::HttpRequestMessage ^ request, System::Net::Http::HttpResponseMessage ^ response, TimeSpan elapsed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="response" Type="System.Net.Http.HttpResponseMessage" />
        <Parameter Name="elapsed" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="context">The context object that was previously returned by <see cref="M:Microsoft.Extensions.Http.Logging.IHttpClientLogger.LogRequestStart(System.Net.Http.HttpRequestMessage)" />.</param>
        <param name="request">The HTTP request message that was sent.</param>
        <param name="response">The HTTP response message that was received.</param>
        <param name="elapsed">Time elapsed since calling <see cref="M:Microsoft.Extensions.Http.Logging.IHttpClientLogger.LogRequestStart(System.Net.Http.HttpRequestMessage)" />.</param>
        <summary>
            Logs after receiving an HTTP response.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="LoggingOptions" FullName="Microsoft.Extensions.Http.Logging.LoggingOptions">
  <TypeSignature Language="C#" Value="public class LoggingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LoggingOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Http.Logging.LoggingOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class LoggingOptions" />
  <TypeSignature Language="F#" Value="type LoggingOptions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoggingOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Http.Diagnostics</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.4.0.0</AssemblyVersion>
    <AssemblyVersion>8.5.0.0</AssemblyVersion>
    <AssemblyVersion>8.6.0.0</AssemblyVersion>
    <AssemblyVersion>8.7.0.0</AssemblyVersion>
    <AssemblyVersion>8.8.0.0</AssemblyVersion>
    <AssemblyVersion>8.9.1.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Options to configure HTTP client requests logging.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoggingOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Logging.LoggingOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LoggingOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Diagnostics</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BodyReadTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan BodyReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan BodyReadTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Logging.LoggingOptions.BodyReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyReadTimeout As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.BodyReadTimeout : TimeSpan with get, set" Usage="Microsoft.Extensions.Http.Logging.LoggingOptions.BodyReadTimeout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan BodyReadTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Diagnostics</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the maximum amount of time to wait for the request or response body to be read.
            </summary>
        <value>
            The default value is 1 second.
            </value>
        <remarks>
            The value should be in the range of 1 millisecond to 1 minute.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="BodySizeLimit">
      <MemberSignature Language="C#" Value="public int BodySizeLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BodySizeLimit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Logging.LoggingOptions.BodySizeLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property BodySizeLimit As Integer" />
      <MemberSignature Language="F#" Value="member this.BodySizeLimit : int with get, set" Usage="Microsoft.Extensions.Http.Logging.LoggingOptions.BodySizeLimit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BodySizeLimit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Diagnostics</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Range(1, 1572864)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Range(1, 1572864)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the maximum number of bytes of the request or response body to read.
            </summary>
        <value>
            The default value is â‰ˆ 32K.
            </value>
        <remarks>
            The number should ideally be below 85000 bytes to not be allocated on the <see href="https://learn.microsoft.com/dotnet/standard/garbage-collection/large-object-heap">large object heap</see>.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogBody">
      <MemberSignature Language="C#" Value="public bool LogBody { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogBody" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Logging.LoggingOptions.LogBody" />
      <MemberSignature Language="VB.NET" Value="Public Property LogBody As Boolean" />
      <MemberSignature Language="F#" Value="member this.LogBody : bool with get, set" Usage="Microsoft.Extensions.Http.Logging.LoggingOptions.LogBody" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogBody { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Diagnostics</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the HTTP request and response body are logged.
            </summary>
        <value>
            The default value is <see langword="false" />.
            </value>
        <remarks>
            Avoid enabling this option in a production environment as it might lead to leaking privacy information.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogContentHeaders">
      <MemberSignature Language="C#" Value="public bool LogContentHeaders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogContentHeaders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Logging.LoggingOptions.LogContentHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Property LogContentHeaders As Boolean" />
      <MemberSignature Language="F#" Value="member this.LogContentHeaders : bool with get, set" Usage="Microsoft.Extensions.Http.Logging.LoggingOptions.LogContentHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogContentHeaders { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Diagnostics</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0003", UrlFormat="https://aka.ms/dotnet-extensions-warnings/{0}")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0003", UrlFormat="https://aka.ms/dotnet-extensions-warnings/{0}")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the HTTP request and response content headers are logged.
            </summary>
        <value>
            The default value is <see langword="false" />.
            </value>
        <remarks>
            This property controls whether the logging of HTTP request and response representation headers (e.g. <c>Content-Type</c>) is enabled.
            Keep this option disabled if <see cref="P:Microsoft.Extensions.Http.Logging.LoggingOptions.RequestHeadersDataClasses" /> or <see cref="P:Microsoft.Extensions.Http.Logging.LoggingOptions.ResponseHeadersDataClasses" />
            don't contain any representation headers, otherwise it will create unnecessary minor performance impact on the headers logging.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRequestStart">
      <MemberSignature Language="C#" Value="public bool LogRequestStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogRequestStart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Logging.LoggingOptions.LogRequestStart" />
      <MemberSignature Language="VB.NET" Value="Public Property LogRequestStart As Boolean" />
      <MemberSignature Language="F#" Value="member this.LogRequestStart : bool with get, set" Usage="Microsoft.Extensions.Http.Logging.LoggingOptions.LogRequestStart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogRequestStart { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Diagnostics</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the request is logged additionally before any further processing.
            </summary>
        <value>
            The default value is <see langword="false" />.
            </value>
        <remarks>
            When enabled, two entries will be logged for each incoming request - one for request and one for response, if available.
            When disabled, only one entry will be logged for each incoming request, which includes both request and response data.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestBodyContentTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ISet&lt;string&gt; RequestBodyContentTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;string&gt; RequestBodyContentTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Logging.LoggingOptions.RequestBodyContentTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestBodyContentTypes As ISet(Of String)" />
      <MemberSignature Language="F#" Value="member this.RequestBodyContentTypes : System.Collections.Generic.ISet&lt;string&gt; with get, set" Usage="Microsoft.Extensions.Http.Logging.LoggingOptions.RequestBodyContentTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ISet&lt;System::String ^&gt; ^ RequestBodyContentTypes { System::Collections::Generic::ISet&lt;System::String ^&gt; ^ get(); void set(System::Collections::Generic::ISet&lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Diagnostics</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Required&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the list of HTTP request content types which are considered text and thus possible to serialize.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestHeadersDataClasses">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Extensions.Compliance.Classification.DataClassification&gt; RequestHeadersDataClasses { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, valuetype Microsoft.Extensions.Compliance.Classification.DataClassification&gt; RequestHeadersDataClasses" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Logging.LoggingOptions.RequestHeadersDataClasses" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestHeadersDataClasses As IDictionary(Of String, DataClassification)" />
      <MemberSignature Language="F#" Value="member this.RequestHeadersDataClasses : System.Collections.Generic.IDictionary&lt;string, Microsoft.Extensions.Compliance.Classification.DataClassification&gt; with get, set" Usage="Microsoft.Extensions.Http.Logging.LoggingOptions.RequestHeadersDataClasses" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::Compliance::Classification::DataClassification&gt; ^ RequestHeadersDataClasses { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::Compliance::Classification::DataClassification&gt; ^ get(); void set(System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::Compliance::Classification::DataClassification&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Diagnostics</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Required&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Extensions.Compliance.Classification.DataClassification&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the set of HTTP request headers to log and their respective data classifications to use for redaction.
            </summary>
        <value>
            The default value is <see cref="T:System.Collections.Generic.HashSet`1" />.
            </value>
        <remarks>
            If empty, no HTTP request headers will be logged.
            If the data class is <see cref="P:Microsoft.Extensions.Compliance.Classification.DataClassification.None" />, no redaction will be done.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPathLoggingMode">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Http.Logging.OutgoingPathLoggingMode RequestPathLoggingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Http.Logging.OutgoingPathLoggingMode RequestPathLoggingMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Logging.LoggingOptions.RequestPathLoggingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPathLoggingMode As OutgoingPathLoggingMode" />
      <MemberSignature Language="F#" Value="member this.RequestPathLoggingMode : Microsoft.Extensions.Http.Logging.OutgoingPathLoggingMode with get, set" Usage="Microsoft.Extensions.Http.Logging.LoggingOptions.RequestPathLoggingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Http::Logging::OutgoingPathLoggingMode RequestPathLoggingMode { Microsoft::Extensions::Http::Logging::OutgoingPathLoggingMode get(); void set(Microsoft::Extensions::Http::Logging::OutgoingPathLoggingMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Diagnostics</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Http.Logging.OutgoingPathLoggingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating how the outgoing HTTP request path should be logged.
            </summary>
        <value>
            The default value is <see cref="F:Microsoft.Extensions.Http.Logging.OutgoingPathLoggingMode.Formatted" />.
            </value>
        <remarks>
            This option is applied only when the <see cref="P:Microsoft.Extensions.Http.Logging.LoggingOptions.RequestPathParameterRedactionMode" /> option is not set to
            <see cref="F:Microsoft.Extensions.Http.Diagnostics.HttpRouteParameterRedactionMode.None" />,
            otherwise this setting is ignored and the non-redacted HTTP request path is logged.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPathParameterRedactionMode">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Http.Diagnostics.HttpRouteParameterRedactionMode RequestPathParameterRedactionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Http.Diagnostics.HttpRouteParameterRedactionMode RequestPathParameterRedactionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Logging.LoggingOptions.RequestPathParameterRedactionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPathParameterRedactionMode As HttpRouteParameterRedactionMode" />
      <MemberSignature Language="F#" Value="member this.RequestPathParameterRedactionMode : Microsoft.Extensions.Http.Diagnostics.HttpRouteParameterRedactionMode with get, set" Usage="Microsoft.Extensions.Http.Logging.LoggingOptions.RequestPathParameterRedactionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Http::Diagnostics::HttpRouteParameterRedactionMode RequestPathParameterRedactionMode { Microsoft::Extensions::Http::Diagnostics::HttpRouteParameterRedactionMode get(); void set(Microsoft::Extensions::Http::Diagnostics::HttpRouteParameterRedactionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Diagnostics</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Http.Diagnostics.HttpRouteParameterRedactionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating how outgoing HTTP request path parameters should be redacted.
            </summary>
        <value>
            The default value is <see cref="F:Microsoft.Extensions.Http.Diagnostics.HttpRouteParameterRedactionMode.Strict" />.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseBodyContentTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ISet&lt;string&gt; ResponseBodyContentTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;string&gt; ResponseBodyContentTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Logging.LoggingOptions.ResponseBodyContentTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseBodyContentTypes As ISet(Of String)" />
      <MemberSignature Language="F#" Value="member this.ResponseBodyContentTypes : System.Collections.Generic.ISet&lt;string&gt; with get, set" Usage="Microsoft.Extensions.Http.Logging.LoggingOptions.ResponseBodyContentTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ISet&lt;System::String ^&gt; ^ ResponseBodyContentTypes { System::Collections::Generic::ISet&lt;System::String ^&gt; ^ get(); void set(System::Collections::Generic::ISet&lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Diagnostics</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Required&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the list of HTTP response content types which are considered text and thus possible to serialize.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseHeadersDataClasses">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Extensions.Compliance.Classification.DataClassification&gt; ResponseHeadersDataClasses { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, valuetype Microsoft.Extensions.Compliance.Classification.DataClassification&gt; ResponseHeadersDataClasses" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Logging.LoggingOptions.ResponseHeadersDataClasses" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseHeadersDataClasses As IDictionary(Of String, DataClassification)" />
      <MemberSignature Language="F#" Value="member this.ResponseHeadersDataClasses : System.Collections.Generic.IDictionary&lt;string, Microsoft.Extensions.Compliance.Classification.DataClassification&gt; with get, set" Usage="Microsoft.Extensions.Http.Logging.LoggingOptions.ResponseHeadersDataClasses" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::Compliance::Classification::DataClassification&gt; ^ ResponseHeadersDataClasses { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::Compliance::Classification::DataClassification&gt; ^ get(); void set(System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::Compliance::Classification::DataClassification&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Diagnostics</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Required&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Extensions.Compliance.Classification.DataClassification&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the set of HTTP response headers to log and their respective data classifications to use for redaction.
            </summary>
        <value>
            The default value is <see cref="T:System.Collections.Generic.HashSet`1" />.
            </value>
        <remarks>
            If the data class is <see cref="P:Microsoft.Extensions.Compliance.Classification.DataClassification.None" />, no redaction will be done.
            If empty, no HTTP response headers will be logged.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteParameterDataClasses">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Extensions.Compliance.Classification.DataClassification&gt; RouteParameterDataClasses { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, valuetype Microsoft.Extensions.Compliance.Classification.DataClassification&gt; RouteParameterDataClasses" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Logging.LoggingOptions.RouteParameterDataClasses" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteParameterDataClasses As IDictionary(Of String, DataClassification)" />
      <MemberSignature Language="F#" Value="member this.RouteParameterDataClasses : System.Collections.Generic.IDictionary&lt;string, Microsoft.Extensions.Compliance.Classification.DataClassification&gt; with get, set" Usage="Microsoft.Extensions.Http.Logging.LoggingOptions.RouteParameterDataClasses" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::Compliance::Classification::DataClassification&gt; ^ RouteParameterDataClasses { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::Compliance::Classification::DataClassification&gt; ^ get(); void set(System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::Compliance::Classification::DataClassification&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Diagnostics</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Required&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Extensions.Compliance.Classification.DataClassification&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the route parameters to redact with their corresponding data classifications to apply appropriate redaction.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

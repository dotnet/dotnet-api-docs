<Type Name="DbDataSource" FullName="System.Data.Common.DbDataSource">
  <TypeSignature Language="C#" Value="public abstract class DbDataSource : IAsyncDisposable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataSource extends System.Object implements class System.IAsyncDisposable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbDataSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataSource&#xA;Implements IAsyncDisposable, IDisposable" />
  <TypeSignature Language="F#" Value="type DbDataSource = class&#xA;    interface IDisposable&#xA;    interface IAsyncDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataSource abstract : IAsyncDisposable, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents a data source which can be used to obtain open connections, and against which commands can be executed directly.</summary>
    <remarks>Unlike <see cref="T:System.Data.Common.DbProviderFactory" />, which is purely a factory for provider-specific objects such as <see cref="T:System.Data.Common.DbConnection" />, <see cref="T:System.Data.Common.DbDataSource" /> hands out open connections to specific databases, encapsulating all the information needed to connect to a database. Depending on how the <see cref="T:System.Data.Common.DbDataSource" /> was configured, the connections it hands out may be pooled.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DbDataSource" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public abstract string ConnectionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataSource.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ConnectionString As String" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string" Usage="System.Data.Common.DbDataSource.ConnectionString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ConnectionString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the connection string of the database represented by this <see cref="T:System.Data.Common.DbDataSource" />. The exact contents of the connection string depend on the specific data source for this connection.</summary>
        <value>The connection string of the database represented by this <see cref="T:System.Data.Common.DbDataSource" />. The exact contents of the connection string depend on the specific data source for this connection.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBatch">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbBatch CreateBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbBatch CreateBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataSource.CreateBatch" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBatch () As DbBatch" />
      <MemberSignature Language="F#" Value="member this.CreateBatch : unit -&gt; System.Data.Common.DbBatch" Usage="dbDataSource.CreateBatch " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbBatch ^ CreateBatch();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbBatch</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <see cref="T:System.Data.Common.DbBatch" /> that's ready for execution against the <see cref="T:System.Data.Common.DbDataSource" />.</summary>
        <returns>A <see cref="T:System.Data.Common.DbBatch" /> that's ready for execution against the <see cref="T:System.Data.Common.DbDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Batches returned from this method are already configured to execute against their originating <xref:System.Data.Common.DbDataSource>; their <xref:System.Data.Common.DbBatch.Connection%2A> does not need to be set, and doing so will throw an exception.

 Since these batches have no explicitly-managed connection, it is not possible to use them with transactions, and trying to set <xref:System.Data.Common.DbBatch.Transaction%2A> will throw an exception. To use a transaction, get a connection from <xref:System.Data.Common.DbDataSource.OpenConnection%2A> and create a command against it.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand CreateCommand (string? commandText = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand CreateCommand(string commandText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataSource.CreateCommand(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand (Optional commandText As String = Nothing) As DbCommand" />
      <MemberSignature Language="F#" Value="member this.CreateCommand : string -&gt; System.Data.Common.DbCommand" Usage="dbDataSource.CreateCommand commandText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandText">The text command with which to initialize the <see cref="T:System.Data.Common.DbCommand" /> that this method returns.</param>
        <summary>Returns a <see cref="T:System.Data.Common.DbCommand" /> that's ready for execution against the <see cref="T:System.Data.Common.DbDataSource" />.</summary>
        <returns>A <see cref="T:System.Data.Common.DbCommand" /> that's ready for execution against the <see cref="T:System.Data.Common.DbDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Commands returned from this method are already configured to execute against their originating <xref:System.Data.Common.DbDataSource>; their <xref:System.Data.Common.DbCommand.Connection%2A> does not need to be set, and doing so will throw an exception.

 Since these commands have no explicitly-managed connection, it is not possible to use them with transactions, and trying to set <xref:System.Data.Common.DbCommand.Transaction%2A> will throw an exception. To use a transaction, get a connection from <xref:System.Data.Common.DbDataSource.OpenConnection%2A> and create a command against it.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConnection">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbConnection CreateConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbConnection CreateConnection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataSource.CreateConnection" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateConnection () As DbConnection" />
      <MemberSignature Language="F#" Value="member this.CreateConnection : unit -&gt; System.Data.Common.DbConnection" Usage="dbDataSource.CreateConnection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbConnection ^ CreateConnection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new, closed connection to the database represented by this <see cref="T:System.Data.Common.DbDataSource" />.</summary>
        <returns>A new, closed connection to the database represented by this <see cref="T:System.Data.Common.DbDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The connection must be opened before it can be used. 

 It is the responsibility of the caller to properly dispose the connection returned by this method. Failure to do so may result in a connection leak.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbBatch">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbBatch CreateDbBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbBatch CreateDbBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataSource.CreateDbBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDbBatch () As DbBatch" />
      <MemberSignature Language="F#" Value="abstract member CreateDbBatch : unit -&gt; System.Data.Common.DbBatch&#xA;override this.CreateDbBatch : unit -&gt; System.Data.Common.DbBatch" Usage="dbDataSource.CreateDbBatch " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbBatch ^ CreateDbBatch();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbBatch</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <see cref="T:System.Data.Common.DbBatch" /> that's ready for execution against the <see cref="T:System.Data.Common.DbDataSource" />.</summary>
        <returns>A <see cref="T:System.Data.Common.DbBatch" /> that's ready for execution against the <see cref="T:System.Data.Common.DbDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is meant to be overridden by implementing ADO.NET providers, and is not a user-facing API.
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbCommand CreateDbCommand (string? commandText = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbCommand CreateDbCommand(string commandText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataSource.CreateDbCommand(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDbCommand (Optional commandText As String = Nothing) As DbCommand" />
      <MemberSignature Language="F#" Value="abstract member CreateDbCommand : string -&gt; System.Data.Common.DbCommand&#xA;override this.CreateDbCommand : string -&gt; System.Data.Common.DbCommand" Usage="dbDataSource.CreateDbCommand commandText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandText">The text command with which to initialize the <see cref="T:System.Data.Common.DbCommand" /> that this method returns.</param>
        <summary>Returns a <see cref="T:System.Data.Common.DbCommand" /> that's ready for execution against the <see cref="T:System.Data.Common.DbDataSource" />.</summary>
        <returns>A <see cref="T:System.Data.Common.DbCommand" /> that's ready for execution against the <see cref="T:System.Data.Common.DbDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is meant to be overridden by implementing ADO.NET providers, and is not a user-facing API.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbConnection">
      <MemberSignature Language="C#" Value="protected abstract System.Data.Common.DbConnection CreateDbConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbConnection CreateDbConnection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataSource.CreateDbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateDbConnection () As DbConnection" />
      <MemberSignature Language="F#" Value="abstract member CreateDbConnection : unit -&gt; System.Data.Common.DbConnection" Usage="dbDataSource.CreateDbConnection " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Data::Common::DbConnection ^ CreateDbConnection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new, closed connection to the database represented by this <see cref="T:System.Data.Common.DbDataSource" />.</summary>
        <returns>A new, closed connection to the database represented by this <see cref="T:System.Data.Common.DbDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is meant to be overridden by implementing ADO.NET providers, and is not a user-facing API.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataSource.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="dbDataSource.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the current instance of <xref:System.Data.Common.DbDataSource> represents a connection pool, disposing it should close all idle connections, and arrange for busy connections to be closed as soon as possible.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataSource.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="dbDataSource.Dispose disposing" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        <summary>Called by the Dispose() and Finalize() methods to release the managed and unmanaged resources used by the current instance of the <see cref="T:System.Data.Common.DbDataSource" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is meant to be overridden by implementing ADO.NET providers, and is not a user-facing API.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataSource.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="dbDataSource.DisposeAsync " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously.</summary>
        <returns>A task that represents the asynchronous dispose operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the current instance of <xref:System.Data.Common.DbDataSource> represents a connection pool, disposing it should close all idle connections, and arrange for busy connections to be closed as soon as possible.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsyncCore">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.ValueTask DisposeAsyncCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsyncCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataSource.DisposeAsyncCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DisposeAsyncCore () As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsyncCore : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsyncCore : unit -&gt; System.Threading.Tasks.ValueTask" Usage="dbDataSource.DisposeAsyncCore " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::ValueTask DisposeAsyncCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Performs application-defined tasks associated with freeing, releasing, or resetting managed resources asynchronously.</summary>
        <returns>A task that represents the asynchronous dispose operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is meant to be overridden by implementing ADO.NET providers, and is not a user-facing API.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenConnection">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbConnection OpenConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbConnection OpenConnection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataSource.OpenConnection" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenConnection () As DbConnection" />
      <MemberSignature Language="F#" Value="member this.OpenConnection : unit -&gt; System.Data.Common.DbConnection" Usage="dbDataSource.OpenConnection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbConnection ^ OpenConnection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new, open connection to the database represented by this <see cref="T:System.Data.Common.DbDataSource" />.</summary>
        <returns>A new, open connection to the database represented by this <see cref="T:System.Data.Common.DbDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The returned connection is already open, and is ready for immediate use.

 It is the responsibility of the caller to properly dispose the connection returned by this method. Failure to do so may result in a connection leak.
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenConnectionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbConnection&gt; OpenConnectionAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.Tasks.ValueTask`1&lt;class System.Data.Common.DbConnection&gt; OpenConnectionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataSource.OpenConnectionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenConnectionAsync (Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of DbConnection)" />
      <MemberSignature Language="F#" Value="member this.OpenConnectionAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbConnection&gt;" Usage="dbDataSource.OpenConnectionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbConnection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        <summary>Asynchronously returns a new, open connection to the database represented by this <see cref="T:System.Data.Common.DbDataSource" />.</summary>
        <returns>A new, open connection to the database represented by this <see cref="T:System.Data.Common.DbDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The returned connection is already open, and is ready for immediate use.

 It is the responsibility of the caller to properly dispose the connection returned by this method. Failure to do so may result in a connection leak.
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenDbConnection">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbConnection OpenDbConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbConnection OpenDbConnection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataSource.OpenDbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OpenDbConnection () As DbConnection" />
      <MemberSignature Language="F#" Value="abstract member OpenDbConnection : unit -&gt; System.Data.Common.DbConnection&#xA;override this.OpenDbConnection : unit -&gt; System.Data.Common.DbConnection" Usage="dbDataSource.OpenDbConnection " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbConnection ^ OpenDbConnection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new, open connection to the database represented by this <see cref="T:System.Data.Common.DbDataSource" />.</summary>
        <returns>A new, open connection to the database represented by this <see cref="T:System.Data.Common.DbDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is meant to be overridden by implementing ADO.NET providers, and is not a user-facing API.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenDbConnectionAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbConnection&gt; OpenDbConnectionAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;class System.Data.Common.DbConnection&gt; OpenDbConnectionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataSource.OpenDbConnectionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OpenDbConnectionAsync (Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of DbConnection)" />
      <MemberSignature Language="F#" Value="abstract member OpenDbConnectionAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbConnection&gt;&#xA;override this.OpenDbConnectionAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbConnection&gt;" Usage="dbDataSource.OpenDbConnectionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbConnection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        <summary>Asynchronously returns a new, open connection to the database represented by this <see cref="T:System.Data.Common.DbDataSource" />.</summary>
        <returns>A new, open connection to the database represented by this <see cref="T:System.Data.Common.DbDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is meant to be overridden by implementing ADO.NET providers, and is not a user-facing API.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

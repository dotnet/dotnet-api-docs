<Type Name="CoreHealthChecksExtensions" FullName="Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions">
  <TypeSignature Language="C#" Value="public static class CoreHealthChecksExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CoreHealthChecksExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module CoreHealthChecksExtensions" />
  <TypeSignature Language="F#" Value="type CoreHealthChecksExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class CoreHealthChecksExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Diagnostics.HealthChecks.Core</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Controls various health check features.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddApplicationLifecycleHealthCheck">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddApplicationLifecycleHealthCheck (this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddApplicationLifecycleHealthCheck(class Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddApplicationLifecycleHealthCheck(Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddApplicationLifecycleHealthCheck (builder As IHealthChecksBuilder) As IHealthChecksBuilder" />
      <MemberSignature Language="F#" Value="static member AddApplicationLifecycleHealthCheck : Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder -&gt; Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder" Usage="Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddApplicationLifecycleHealthCheck builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHealthChecksBuilder ^ AddApplicationLifecycleHealthCheck(Microsoft::Extensions::DependencyInjection::IHealthChecksBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.HealthChecks.Core</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="builder">The builder to add the provider to.</param>
        <summary>
            Registers a health check provider that's tied to the application's lifecycle.
            </summary>
        <returns>The value of <paramref name="builder" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If <paramref name="builder" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddApplicationLifecycleHealthCheck">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddApplicationLifecycleHealthCheck (this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddApplicationLifecycleHealthCheck(class Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddApplicationLifecycleHealthCheck(Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddApplicationLifecycleHealthCheck (builder As IHealthChecksBuilder, tags As IEnumerable(Of String)) As IHealthChecksBuilder" />
      <MemberSignature Language="F#" Value="static member AddApplicationLifecycleHealthCheck : Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder * seq&lt;string&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder" Usage="Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddApplicationLifecycleHealthCheck (builder, tags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHealthChecksBuilder ^ AddApplicationLifecycleHealthCheck(Microsoft::Extensions::DependencyInjection::IHealthChecksBuilder ^ builder, System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ tags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.HealthChecks.Core</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder" RefType="this" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">The builder to add the provider to.</param>
        <param name="tags">A list of tags that can be used to filter health checks.</param>
        <summary>
            Registers a health check provider that's tied to the application's lifecycle.
            </summary>
        <returns>The value of <paramref name="builder" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If <paramref name="builder" /> or <paramref name="tags" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddApplicationLifecycleHealthCheck">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddApplicationLifecycleHealthCheck (this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, params string[] tags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddApplicationLifecycleHealthCheck(class Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, string[] tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddApplicationLifecycleHealthCheck(Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddApplicationLifecycleHealthCheck (builder As IHealthChecksBuilder, ParamArray tags As String()) As IHealthChecksBuilder" />
      <MemberSignature Language="F#" Value="static member AddApplicationLifecycleHealthCheck : Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder * string[] -&gt; Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder" Usage="Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddApplicationLifecycleHealthCheck (builder, tags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHealthChecksBuilder ^ AddApplicationLifecycleHealthCheck(Microsoft::Extensions::DependencyInjection::IHealthChecksBuilder ^ builder, ... cli::array &lt;System::String ^&gt; ^ tags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.HealthChecks.Core</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder" RefType="this" />
        <Parameter Name="tags" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="builder">The builder to add the provider to.</param>
        <param name="tags">A list of tags that can be used to filter health checks.</param>
        <summary>
            Registers a health check provider that's tied to the application's lifecycle.
            </summary>
        <returns>The value of <paramref name="builder" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKubernetesHealthCheckPublisher">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddKubernetesHealthCheckPublisher (this Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddKubernetesHealthCheckPublisher(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddKubernetesHealthCheckPublisher(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddKubernetesHealthCheckPublisher (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddKubernetesHealthCheckPublisher : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddKubernetesHealthCheckPublisher services" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddKubernetesHealthCheckPublisher(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.HealthChecks.Core</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the publisher to.</param>
        <summary>
            Registers a health status publisher which opens a TCP port if the application is considered healthy.
            </summary>
        <returns>The value of <paramref name="services" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If <paramref name="services" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddKubernetesHealthCheckPublisher">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddKubernetesHealthCheckPublisher (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Microsoft.Extensions.Configuration.IConfigurationSection section);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddKubernetesHealthCheckPublisher(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class Microsoft.Extensions.Configuration.IConfigurationSection section) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddKubernetesHealthCheckPublisher(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationSection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddKubernetesHealthCheckPublisher (services As IServiceCollection, section As IConfigurationSection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddKubernetesHealthCheckPublisher : Microsoft.Extensions.DependencyInjection.IServiceCollection * Microsoft.Extensions.Configuration.IConfigurationSection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddKubernetesHealthCheckPublisher (services, section)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddKubernetesHealthCheckPublisher(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Microsoft::Extensions::Configuration::IConfigurationSection ^ section);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.HealthChecks.Core</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicDependency(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties, typeof(Microsoft.Extensions.Diagnostics.HealthChecks.KubernetesHealthCheckPublisherOptions))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicDependency(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties, typeof(Microsoft.Extensions.Diagnostics.HealthChecks.KubernetesHealthCheckPublisherOptions))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessage("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code", Justification="Addressed by [DynamicDependency]")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessage("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code", Justification="Addressed by [DynamicDependency]")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="section" Type="Microsoft.Extensions.Configuration.IConfigurationSection" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the publisher to.</param>
        <param name="section">Configuration for <see cref="T:Microsoft.Extensions.Diagnostics.HealthChecks.KubernetesHealthCheckPublisherOptions" />.</param>
        <summary>
            Registers a health status publisher which opens a TCP port if the application is considered healthy.
            </summary>
        <returns>The value of <paramref name="services" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If <paramref name="services" /> or <paramref name="section" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddKubernetesHealthCheckPublisher">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddKubernetesHealthCheckPublisher (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;Microsoft.Extensions.Diagnostics.HealthChecks.KubernetesHealthCheckPublisherOptions&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddKubernetesHealthCheckPublisher(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;class Microsoft.Extensions.Diagnostics.HealthChecks.KubernetesHealthCheckPublisherOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddKubernetesHealthCheckPublisher(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Diagnostics.HealthChecks.KubernetesHealthCheckPublisherOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddKubernetesHealthCheckPublisher (services As IServiceCollection, configure As Action(Of KubernetesHealthCheckPublisherOptions)) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddKubernetesHealthCheckPublisher : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;Microsoft.Extensions.Diagnostics.HealthChecks.KubernetesHealthCheckPublisherOptions&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddKubernetesHealthCheckPublisher (services, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddKubernetesHealthCheckPublisher(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Action&lt;Microsoft::Extensions::Diagnostics::HealthChecks::KubernetesHealthCheckPublisherOptions ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.HealthChecks.Core</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Diagnostics.HealthChecks.KubernetesHealthCheckPublisherOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the publisher to.</param>
        <param name="configure">Configuration for <see cref="T:Microsoft.Extensions.Diagnostics.HealthChecks.KubernetesHealthCheckPublisherOptions" />.</param>
        <summary>
            Registers a health status publisher which opens a TCP port if the application is considered healthy.
            </summary>
        <returns>The value of <paramref name="services" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If <paramref name="services" /> or <paramref name="configure" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddManualHealthCheck">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddManualHealthCheck (this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddManualHealthCheck(class Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddManualHealthCheck(Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddManualHealthCheck (builder As IHealthChecksBuilder) As IHealthChecksBuilder" />
      <MemberSignature Language="F#" Value="static member AddManualHealthCheck : Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder -&gt; Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder" Usage="Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddManualHealthCheck builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHealthChecksBuilder ^ AddManualHealthCheck(Microsoft::Extensions::DependencyInjection::IHealthChecksBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.HealthChecks.Core</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="builder">The builder to add the provider to.</param>
        <summary>
            Registers a health check provider that enables manual control of the application's health.
            </summary>
        <returns>The value of <paramref name="builder" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If <paramref name="builder" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddManualHealthCheck">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddManualHealthCheck (this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddManualHealthCheck(class Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddManualHealthCheck(Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddManualHealthCheck (builder As IHealthChecksBuilder, tags As IEnumerable(Of String)) As IHealthChecksBuilder" />
      <MemberSignature Language="F#" Value="static member AddManualHealthCheck : Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder * seq&lt;string&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder" Usage="Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddManualHealthCheck (builder, tags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHealthChecksBuilder ^ AddManualHealthCheck(Microsoft::Extensions::DependencyInjection::IHealthChecksBuilder ^ builder, System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ tags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.HealthChecks.Core</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder" RefType="this" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">The builder to add the provider to.</param>
        <param name="tags">A list of tags that can be used to filter health checks.</param>
        <summary>
            Registers a health check provider that enables manual control of the application's health.
            </summary>
        <returns>The value of <paramref name="builder" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If <paramref name="builder" /> or <paramref name="tags" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddManualHealthCheck">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddManualHealthCheck (this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, params string[] tags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddManualHealthCheck(class Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, string[] tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddManualHealthCheck(Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddManualHealthCheck (builder As IHealthChecksBuilder, ParamArray tags As String()) As IHealthChecksBuilder" />
      <MemberSignature Language="F#" Value="static member AddManualHealthCheck : Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder * string[] -&gt; Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder" Usage="Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddManualHealthCheck (builder, tags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHealthChecksBuilder ^ AddManualHealthCheck(Microsoft::Extensions::DependencyInjection::IHealthChecksBuilder ^ builder, ... cli::array &lt;System::String ^&gt; ^ tags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.HealthChecks.Core</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder" RefType="this" />
        <Parameter Name="tags" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="builder">The builder to add the provider to.</param>
        <param name="tags">A list of tags that can be used to filter health checks.</param>
        <summary>
            Registers a health check provider that enables manual control of the application's health.
            </summary>
        <returns>The value of <paramref name="builder" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If <paramref name="builder" /> or <paramref name="tags" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddTelemetryHealthCheckPublisher">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddTelemetryHealthCheckPublisher (this Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddTelemetryHealthCheckPublisher(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddTelemetryHealthCheckPublisher(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTelemetryHealthCheckPublisher (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddTelemetryHealthCheckPublisher : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddTelemetryHealthCheckPublisher services" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddTelemetryHealthCheckPublisher(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.HealthChecks.Core</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The dependency injection container to add the publisher to.</param>
        <summary>
            Registers a health check publisher which emits telemetry representing the application's health.
            </summary>
        <returns>The value of <paramref name="services" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If <paramref name="services" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddTelemetryHealthCheckPublisher">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddTelemetryHealthCheckPublisher (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Microsoft.Extensions.Configuration.IConfigurationSection section);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddTelemetryHealthCheckPublisher(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class Microsoft.Extensions.Configuration.IConfigurationSection section) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddTelemetryHealthCheckPublisher(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationSection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTelemetryHealthCheckPublisher (services As IServiceCollection, section As IConfigurationSection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddTelemetryHealthCheckPublisher : Microsoft.Extensions.DependencyInjection.IServiceCollection * Microsoft.Extensions.Configuration.IConfigurationSection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddTelemetryHealthCheckPublisher (services, section)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddTelemetryHealthCheckPublisher(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Microsoft::Extensions::Configuration::IConfigurationSection ^ section);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.HealthChecks.Core</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="section" Type="Microsoft.Extensions.Configuration.IConfigurationSection" />
      </Parameters>
      <Docs>
        <param name="services">The dependency injection container to add the publisher to.</param>
        <param name="section">Configuration for <see cref="T:Microsoft.Extensions.Diagnostics.HealthChecks.TelemetryHealthCheckPublisherOptions" />.</param>
        <summary>
            Registers a health check publisher which emits telemetry representing the application's health.
            </summary>
        <returns>The value of <paramref name="services" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If <paramref name="services" /> or <paramref name="section" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddTelemetryHealthCheckPublisher">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddTelemetryHealthCheckPublisher (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;Microsoft.Extensions.Diagnostics.HealthChecks.TelemetryHealthCheckPublisherOptions&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddTelemetryHealthCheckPublisher(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;class Microsoft.Extensions.Diagnostics.HealthChecks.TelemetryHealthCheckPublisherOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddTelemetryHealthCheckPublisher(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Diagnostics.HealthChecks.TelemetryHealthCheckPublisherOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTelemetryHealthCheckPublisher (services As IServiceCollection, configure As Action(Of TelemetryHealthCheckPublisherOptions)) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddTelemetryHealthCheckPublisher : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;Microsoft.Extensions.Diagnostics.HealthChecks.TelemetryHealthCheckPublisherOptions&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.AddTelemetryHealthCheckPublisher (services, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddTelemetryHealthCheckPublisher(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Action&lt;Microsoft::Extensions::Diagnostics::HealthChecks::TelemetryHealthCheckPublisherOptions ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.HealthChecks.Core</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Diagnostics.HealthChecks.TelemetryHealthCheckPublisherOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="services">The dependency injection container to add the publisher to.</param>
        <param name="configure">Configuration for <see cref="T:Microsoft.Extensions.Diagnostics.HealthChecks.TelemetryHealthCheckPublisherOptions" />.</param>
        <summary>
            Registers a health check publisher which emits telemetry representing the application's health.
            </summary>
        <returns>The value of <paramref name="services" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If <paramref name="services" /> or <paramref name="configure" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReportHealthy">
      <MemberSignature Language="C#" Value="public static void ReportHealthy (this Microsoft.Extensions.Diagnostics.HealthChecks.IManualHealthCheck manualHealthCheck);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReportHealthy(class Microsoft.Extensions.Diagnostics.HealthChecks.IManualHealthCheck manualHealthCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.ReportHealthy(Microsoft.Extensions.Diagnostics.HealthChecks.IManualHealthCheck)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ReportHealthy (manualHealthCheck As IManualHealthCheck)" />
      <MemberSignature Language="F#" Value="static member ReportHealthy : Microsoft.Extensions.Diagnostics.HealthChecks.IManualHealthCheck -&gt; unit" Usage="Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.ReportHealthy manualHealthCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ReportHealthy(Microsoft::Extensions::Diagnostics::HealthChecks::IManualHealthCheck ^ manualHealthCheck);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.HealthChecks.Core</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manualHealthCheck" Type="Microsoft.Extensions.Diagnostics.HealthChecks.IManualHealthCheck" RefType="this" />
      </Parameters>
      <Docs>
        <param name="manualHealthCheck">The <see cref="T:Microsoft.Extensions.Diagnostics.HealthChecks.IManualHealthCheck" />.</param>
        <summary>
            Sets the manual health check to the healthy state.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If <paramref name="manualHealthCheck" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReportUnhealthy">
      <MemberSignature Language="C#" Value="public static void ReportUnhealthy (this Microsoft.Extensions.Diagnostics.HealthChecks.IManualHealthCheck manualHealthCheck, string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReportUnhealthy(class Microsoft.Extensions.Diagnostics.HealthChecks.IManualHealthCheck manualHealthCheck, string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.ReportUnhealthy(Microsoft.Extensions.Diagnostics.HealthChecks.IManualHealthCheck,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ReportUnhealthy (manualHealthCheck As IManualHealthCheck, reason As String)" />
      <MemberSignature Language="F#" Value="static member ReportUnhealthy : Microsoft.Extensions.Diagnostics.HealthChecks.IManualHealthCheck * string -&gt; unit" Usage="Microsoft.Extensions.Diagnostics.HealthChecks.CoreHealthChecksExtensions.ReportUnhealthy (manualHealthCheck, reason)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ReportUnhealthy(Microsoft::Extensions::Diagnostics::HealthChecks::IManualHealthCheck ^ manualHealthCheck, System::String ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.HealthChecks.Core</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manualHealthCheck" Type="Microsoft.Extensions.Diagnostics.HealthChecks.IManualHealthCheck" RefType="this" />
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="manualHealthCheck">The <see cref="T:Microsoft.Extensions.Diagnostics.HealthChecks.IManualHealthCheck" />.</param>
        <param name="reason">The reason why the health check is unhealthy.</param>
        <summary>
            Sets the manual health check to return an unhealthy states and an associated reason.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If <paramref name="manualHealthCheck" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

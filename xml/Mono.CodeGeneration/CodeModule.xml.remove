<Type Name="CodeModule" FullName="Mono.CodeGeneration.CodeModule">
  <TypeSignature Language="C#" Value="public class CodeModule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CodeModule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Mono.CodeGeneration.CodeModule" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeModule" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeModule" />
  <TypeSignature Language="F#" Value="type CodeModule = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeModule.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeModule(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new Mono.CodeGeneration.CodeModule : string -&gt; Mono.CodeGeneration.CodeModule" Usage="new Mono.CodeGeneration.CodeModule name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClass">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeClass CreateClass (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeClass CreateClass(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeModule.CreateClass(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClass (name As String) As CodeClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeClass ^ CreateClass(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateClass : string -&gt; Mono.CodeGeneration.CodeClass" Usage="codeModule.CreateClass name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeClass</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClass">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeClass CreateClass (string name, Type baseType, params Type[] interfaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeClass CreateClass(string name, class System.Type baseType, class System.Type[] interfaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeModule.CreateClass(System.String,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClass (name As String, baseType As Type, ParamArray interfaces As Type()) As CodeClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeClass ^ CreateClass(System::String ^ name, Type ^ baseType, ... cli::array &lt;Type ^&gt; ^ interfaces);" />
      <MemberSignature Language="F#" Value="member this.CreateClass : string * Type * Type[] -&gt; Mono.CodeGeneration.CodeClass" Usage="codeModule.CreateClass (name, baseType, interfaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeClass</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="baseType" Type="System.Type" />
        <Parameter Name="interfaces" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="baseType">To be added.</param>
        <param name="interfaces">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClass">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeClass CreateClass (string name, System.Reflection.TypeAttributes attr, Type baseType, params Type[] interfaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeClass CreateClass(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type baseType, class System.Type[] interfaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeModule.CreateClass(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClass (name As String, attr As TypeAttributes, baseType As Type, ParamArray interfaces As Type()) As CodeClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeClass ^ CreateClass(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ baseType, ... cli::array &lt;Type ^&gt; ^ interfaces);" />
      <MemberSignature Language="F#" Value="member this.CreateClass : string * System.Reflection.TypeAttributes * Type * Type[] -&gt; Mono.CodeGeneration.CodeClass" Usage="codeModule.CreateClass (name, attr, baseType, interfaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeClass</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="baseType" Type="System.Type" />
        <Parameter Name="interfaces" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="attr">To be added.</param>
        <param name="baseType">To be added.</param>
        <param name="interfaces">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuleBuilder">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder ModuleBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Emit.ModuleBuilder ModuleBuilder" />
      <MemberSignature Language="DocId" Value="P:Mono.CodeGeneration.CodeModule.ModuleBuilder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModuleBuilder As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Emit::ModuleBuilder ^ ModuleBuilder { System::Reflection::Emit::ModuleBuilder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ModuleBuilder : System.Reflection.Emit.ModuleBuilder" Usage="Mono.CodeGeneration.CodeModule.ModuleBuilder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shared">
      <MemberSignature Language="C#" Value="public static Mono.CodeGeneration.CodeModule Shared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Mono.CodeGeneration.CodeModule Shared" />
      <MemberSignature Language="DocId" Value="P:Mono.CodeGeneration.CodeModule.Shared" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Shared As CodeModule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Mono::CodeGeneration::CodeModule ^ Shared { Mono::CodeGeneration::CodeModule ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Shared : Mono.CodeGeneration.CodeModule" Usage="Mono.CodeGeneration.CodeModule.Shared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeModule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

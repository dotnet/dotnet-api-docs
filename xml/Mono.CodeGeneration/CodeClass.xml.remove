<Type Name="CodeClass" FullName="Mono.CodeGeneration.CodeClass">
  <TypeSignature Language="C#" Value="public class CodeClass" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CodeClass extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Mono.CodeGeneration.CodeClass" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeClass" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeClass" />
  <TypeSignature Language="F#" Value="type CodeClass = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeClass (System.Reflection.Emit.ModuleBuilder mb, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Emit.ModuleBuilder mb, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.#ctor(System.Reflection.Emit.ModuleBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mb As ModuleBuilder, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeClass(System::Reflection::Emit::ModuleBuilder ^ mb, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new Mono.CodeGeneration.CodeClass : System.Reflection.Emit.ModuleBuilder * string -&gt; Mono.CodeGeneration.CodeClass" Usage="new Mono.CodeGeneration.CodeClass (mb, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mb" Type="System.Reflection.Emit.ModuleBuilder" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mb">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeClass (System.Reflection.Emit.ModuleBuilder mb, string name, Type baseType, params Type[] interfaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Emit.ModuleBuilder mb, string name, class System.Type baseType, class System.Type[] interfaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.#ctor(System.Reflection.Emit.ModuleBuilder,System.String,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mb As ModuleBuilder, name As String, baseType As Type, ParamArray interfaces As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeClass(System::Reflection::Emit::ModuleBuilder ^ mb, System::String ^ name, Type ^ baseType, ... cli::array &lt;Type ^&gt; ^ interfaces);" />
      <MemberSignature Language="F#" Value="new Mono.CodeGeneration.CodeClass : System.Reflection.Emit.ModuleBuilder * string * Type * Type[] -&gt; Mono.CodeGeneration.CodeClass" Usage="new Mono.CodeGeneration.CodeClass (mb, name, baseType, interfaces)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mb" Type="System.Reflection.Emit.ModuleBuilder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="baseType" Type="System.Type" />
        <Parameter Name="interfaces" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mb">To be added.</param>
        <param name="name">To be added.</param>
        <param name="baseType">To be added.</param>
        <param name="interfaces">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeClass (System.Reflection.Emit.ModuleBuilder mb, string name, System.Reflection.TypeAttributes attr, Type baseType, params Type[] interfaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Emit.ModuleBuilder mb, string name, valuetype System.Reflection.TypeAttributes attr, class System.Type baseType, class System.Type[] interfaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.#ctor(System.Reflection.Emit.ModuleBuilder,System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mb As ModuleBuilder, name As String, attr As TypeAttributes, baseType As Type, ParamArray interfaces As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeClass(System::Reflection::Emit::ModuleBuilder ^ mb, System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ baseType, ... cli::array &lt;Type ^&gt; ^ interfaces);" />
      <MemberSignature Language="F#" Value="new Mono.CodeGeneration.CodeClass : System.Reflection.Emit.ModuleBuilder * string * System.Reflection.TypeAttributes * Type * Type[] -&gt; Mono.CodeGeneration.CodeClass" Usage="new Mono.CodeGeneration.CodeClass (mb, name, attr, baseType, interfaces)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mb" Type="System.Reflection.Emit.ModuleBuilder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="baseType" Type="System.Type" />
        <Parameter Name="interfaces" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mb">To be added.</param>
        <param name="name">To be added.</param>
        <param name="attr">To be added.</param>
        <param name="baseType">To be added.</param>
        <param name="interfaces">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConstructor">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeMethod CreateConstructor (params Type[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeMethod CreateConstructor(class System.Type[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.CreateConstructor(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateConstructor (ParamArray parameters As Type()) As CodeMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeMethod ^ CreateConstructor(... cli::array &lt;Type ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.CreateConstructor : Type[] -&gt; Mono.CodeGeneration.CodeMethod" Usage="codeClass.CreateConstructor parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConstructor">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeMethod CreateConstructor (System.Reflection.MethodAttributes attributes, params Type[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeMethod CreateConstructor(valuetype System.Reflection.MethodAttributes attributes, class System.Type[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.CreateConstructor(System.Reflection.MethodAttributes,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateConstructor (attributes As MethodAttributes, ParamArray parameters As Type()) As CodeMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeMethod ^ CreateConstructor(System::Reflection::MethodAttributes attributes, ... cli::array &lt;Type ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.CreateConstructor : System.Reflection.MethodAttributes * Type[] -&gt; Mono.CodeGeneration.CodeMethod" Usage="codeClass.CreateConstructor (attributes, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="parameters" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="attributes">To be added.</param>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCustomAttribute">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeCustomAttribute CreateCustomAttribute (Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeCustomAttribute CreateCustomAttribute(class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.CreateCustomAttribute(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCustomAttribute (attributeType As Type) As CodeCustomAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeCustomAttribute ^ CreateCustomAttribute(Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="member this.CreateCustomAttribute : Type -&gt; Mono.CodeGeneration.CodeCustomAttribute" Usage="codeClass.CreateCustomAttribute attributeType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeCustomAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="attributeType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCustomAttribute">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeCustomAttribute CreateCustomAttribute (Type attributeType, Type[] ctorArgTypes, Mono.CodeGeneration.CodeLiteral[] ctorArgs, System.Reflection.FieldInfo[] fields, Mono.CodeGeneration.CodeLiteral[] fieldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeCustomAttribute CreateCustomAttribute(class System.Type attributeType, class System.Type[] ctorArgTypes, class Mono.CodeGeneration.CodeLiteral[] ctorArgs, class System.Reflection.FieldInfo[] fields, class Mono.CodeGeneration.CodeLiteral[] fieldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.CreateCustomAttribute(System.Type,System.Type[],Mono.CodeGeneration.CodeLiteral[],System.Reflection.FieldInfo[],Mono.CodeGeneration.CodeLiteral[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCustomAttribute (attributeType As Type, ctorArgTypes As Type(), ctorArgs As CodeLiteral(), fields As FieldInfo(), fieldValues As CodeLiteral()) As CodeCustomAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeCustomAttribute ^ CreateCustomAttribute(Type ^ attributeType, cli::array &lt;Type ^&gt; ^ ctorArgTypes, cli::array &lt;Mono::CodeGeneration::CodeLiteral ^&gt; ^ ctorArgs, cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ fields, cli::array &lt;Mono::CodeGeneration::CodeLiteral ^&gt; ^ fieldValues);" />
      <MemberSignature Language="F#" Value="member this.CreateCustomAttribute : Type * Type[] * Mono.CodeGeneration.CodeLiteral[] * System.Reflection.FieldInfo[] * Mono.CodeGeneration.CodeLiteral[] -&gt; Mono.CodeGeneration.CodeCustomAttribute" Usage="codeClass.CreateCustomAttribute (attributeType, ctorArgTypes, ctorArgs, fields, fieldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeCustomAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="ctorArgTypes" Type="System.Type[]" />
        <Parameter Name="ctorArgs" Type="Mono.CodeGeneration.CodeLiteral[]" />
        <Parameter Name="fields" Type="System.Reflection.FieldInfo[]" />
        <Parameter Name="fieldValues" Type="Mono.CodeGeneration.CodeLiteral[]" />
      </Parameters>
      <Docs>
        <param name="attributeType">To be added.</param>
        <param name="ctorArgTypes">To be added.</param>
        <param name="ctorArgs">To be added.</param>
        <param name="fields">To be added.</param>
        <param name="fieldValues">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCustomAttribute">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeCustomAttribute CreateCustomAttribute (Type attributeType, Type[] ctorArgTypes, object[] ctorArgs, string[] namedArgFieldNames, object[] namedArgValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeCustomAttribute CreateCustomAttribute(class System.Type attributeType, class System.Type[] ctorArgTypes, object[] ctorArgs, string[] namedArgFieldNames, object[] namedArgValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.CreateCustomAttribute(System.Type,System.Type[],System.Object[],System.String[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCustomAttribute (attributeType As Type, ctorArgTypes As Type(), ctorArgs As Object(), namedArgFieldNames As String(), namedArgValues As Object()) As CodeCustomAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeCustomAttribute ^ CreateCustomAttribute(Type ^ attributeType, cli::array &lt;Type ^&gt; ^ ctorArgTypes, cli::array &lt;System::Object ^&gt; ^ ctorArgs, cli::array &lt;System::String ^&gt; ^ namedArgFieldNames, cli::array &lt;System::Object ^&gt; ^ namedArgValues);" />
      <MemberSignature Language="F#" Value="member this.CreateCustomAttribute : Type * Type[] * obj[] * string[] * obj[] -&gt; Mono.CodeGeneration.CodeCustomAttribute" Usage="codeClass.CreateCustomAttribute (attributeType, ctorArgTypes, ctorArgs, namedArgFieldNames, namedArgValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeCustomAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="ctorArgTypes" Type="System.Type[]" />
        <Parameter Name="ctorArgs" Type="System.Object[]" />
        <Parameter Name="namedArgFieldNames" Type="System.String[]" />
        <Parameter Name="namedArgValues" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="attributeType">To be added.</param>
        <param name="ctorArgTypes">To be added.</param>
        <param name="ctorArgs">To be added.</param>
        <param name="namedArgFieldNames">To be added.</param>
        <param name="namedArgValues">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMethod">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeMethod CreateMethod (string name, Type returnType, params Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeMethod CreateMethod(string name, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.CreateMethod(System.String,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMethod (name As String, returnType As Type, ParamArray parameterTypes As Type()) As CodeMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeMethod ^ CreateMethod(System::String ^ name, Type ^ returnType, ... cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.CreateMethod : string * Type * Type[] -&gt; Mono.CodeGeneration.CodeMethod" Usage="codeClass.CreateMethod (name, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="returnType">To be added.</param>
        <param name="parameterTypes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMethod">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeMethod CreateMethod (string name, System.Reflection.MethodAttributes attributes, Type returnType, params Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeMethod CreateMethod(string name, valuetype System.Reflection.MethodAttributes attributes, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.CreateMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMethod (name As String, attributes As MethodAttributes, returnType As Type, ParamArray parameterTypes As Type()) As CodeMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeMethod ^ CreateMethod(System::String ^ name, System::Reflection::MethodAttributes attributes, Type ^ returnType, ... cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.CreateMethod : string * System.Reflection.MethodAttributes * Type * Type[] -&gt; Mono.CodeGeneration.CodeMethod" Usage="codeClass.CreateMethod (name, attributes, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="attributes">To be added.</param>
        <param name="returnType">To be added.</param>
        <param name="parameterTypes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeProperty CreateProperty (string name, Type returnType, params Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeProperty CreateProperty(string name, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.CreateProperty(System.String,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProperty (name As String, returnType As Type, ParamArray parameterTypes As Type()) As CodeProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeProperty ^ CreateProperty(System::String ^ name, Type ^ returnType, ... cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.CreateProperty : string * Type * Type[] -&gt; Mono.CodeGeneration.CodeProperty" Usage="codeClass.CreateProperty (name, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="returnType">To be added.</param>
        <param name="parameterTypes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeProperty CreateProperty (string name, Type returnType, System.Reflection.MethodAttributes methodAttributes, params Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeProperty CreateProperty(string name, class System.Type returnType, valuetype System.Reflection.MethodAttributes methodAttributes, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.CreateProperty(System.String,System.Type,System.Reflection.MethodAttributes,System.Type[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeProperty ^ CreateProperty(System::String ^ name, Type ^ returnType, System::Reflection::MethodAttributes methodAttributes, ... cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.CreateProperty : string * Type * System.Reflection.MethodAttributes * Type[] -&gt; Mono.CodeGeneration.CodeProperty" Usage="codeClass.CreateProperty (name, returnType, methodAttributes, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="methodAttributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="parameterTypes" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="returnType">To be added.</param>
        <param name="methodAttributes">To be added.</param>
        <param name="parameterTypes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStaticMethod">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeMethod CreateStaticMethod (string name, Type returnType, params Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeMethod CreateStaticMethod(string name, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.CreateStaticMethod(System.String,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateStaticMethod (name As String, returnType As Type, ParamArray parameterTypes As Type()) As CodeMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeMethod ^ CreateStaticMethod(System::String ^ name, Type ^ returnType, ... cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.CreateStaticMethod : string * Type * Type[] -&gt; Mono.CodeGeneration.CodeMethod" Usage="codeClass.CreateStaticMethod (name, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="returnType">To be added.</param>
        <param name="parameterTypes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateType">
      <MemberSignature Language="C#" Value="public Type CreateType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type CreateType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.CreateType" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ CreateType();" />
      <MemberSignature Language="F#" Value="member this.CreateType : unit -&gt; Type" Usage="codeClass.CreateType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateVirtualMethod">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeMethod CreateVirtualMethod (string name, Type returnType, params Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeMethod CreateVirtualMethod(string name, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.CreateVirtualMethod(System.String,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateVirtualMethod (name As String, returnType As Type, ParamArray parameterTypes As Type()) As CodeMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeMethod ^ CreateVirtualMethod(System::String ^ name, Type ^ returnType, ... cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.CreateVirtualMethod : string * Type * Type[] -&gt; Mono.CodeGeneration.CodeMethod" Usage="codeClass.CreateVirtualMethod (name, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="returnType">To be added.</param>
        <param name="parameterTypes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineField">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeFieldReference DefineField (string name, Type type, params Mono.CodeGeneration.CodeCustomAttribute[] customAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeFieldReference DefineField(string name, class System.Type type, class Mono.CodeGeneration.CodeCustomAttribute[] customAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.DefineField(System.String,System.Type,Mono.CodeGeneration.CodeCustomAttribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeFieldReference ^ DefineField(System::String ^ name, Type ^ type, ... cli::array &lt;Mono::CodeGeneration::CodeCustomAttribute ^&gt; ^ customAttributes);" />
      <MemberSignature Language="F#" Value="member this.DefineField : string * Type * Mono.CodeGeneration.CodeCustomAttribute[] -&gt; Mono.CodeGeneration.CodeFieldReference" Usage="codeClass.DefineField (name, type, customAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeFieldReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="customAttributes" Type="Mono.CodeGeneration.CodeCustomAttribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="type">To be added.</param>
        <param name="customAttributes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineField">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeFieldReference DefineField (string name, Type type, System.Reflection.FieldAttributes attrs, Mono.CodeGeneration.CodeExpression initialValue, params Mono.CodeGeneration.CodeCustomAttribute[] customAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeFieldReference DefineField(string name, class System.Type type, valuetype System.Reflection.FieldAttributes attrs, class Mono.CodeGeneration.CodeExpression initialValue, class Mono.CodeGeneration.CodeCustomAttribute[] customAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.DefineField(System.String,System.Type,System.Reflection.FieldAttributes,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeCustomAttribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeFieldReference ^ DefineField(System::String ^ name, Type ^ type, System::Reflection::FieldAttributes attrs, Mono::CodeGeneration::CodeExpression ^ initialValue, ... cli::array &lt;Mono::CodeGeneration::CodeCustomAttribute ^&gt; ^ customAttributes);" />
      <MemberSignature Language="F#" Value="member this.DefineField : string * Type * System.Reflection.FieldAttributes * Mono.CodeGeneration.CodeExpression * Mono.CodeGeneration.CodeCustomAttribute[] -&gt; Mono.CodeGeneration.CodeFieldReference" Usage="codeClass.DefineField (name, type, attrs, initialValue, customAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeFieldReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attrs" Type="System.Reflection.FieldAttributes" />
        <Parameter Name="initialValue" Type="Mono.CodeGeneration.CodeExpression" />
        <Parameter Name="customAttributes" Type="Mono.CodeGeneration.CodeCustomAttribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="type">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="initialValue">To be added.</param>
        <param name="customAttributes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineStaticField">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeFieldReference DefineStaticField (Mono.CodeGeneration.CodeExpression initialValue, params Mono.CodeGeneration.CodeCustomAttribute[] customAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeFieldReference DefineStaticField(class Mono.CodeGeneration.CodeExpression initialValue, class Mono.CodeGeneration.CodeCustomAttribute[] customAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.DefineStaticField(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeCustomAttribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineStaticField (initialValue As CodeExpression, ParamArray customAttributes As CodeCustomAttribute()) As CodeFieldReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeFieldReference ^ DefineStaticField(Mono::CodeGeneration::CodeExpression ^ initialValue, ... cli::array &lt;Mono::CodeGeneration::CodeCustomAttribute ^&gt; ^ customAttributes);" />
      <MemberSignature Language="F#" Value="member this.DefineStaticField : Mono.CodeGeneration.CodeExpression * Mono.CodeGeneration.CodeCustomAttribute[] -&gt; Mono.CodeGeneration.CodeFieldReference" Usage="codeClass.DefineStaticField (initialValue, customAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeFieldReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initialValue" Type="Mono.CodeGeneration.CodeExpression" />
        <Parameter Name="customAttributes" Type="Mono.CodeGeneration.CodeCustomAttribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="initialValue">To be added.</param>
        <param name="customAttributes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineStaticField">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeFieldReference DefineStaticField (string name, Type type, Mono.CodeGeneration.CodeExpression initialValue, params Mono.CodeGeneration.CodeCustomAttribute[] customAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeFieldReference DefineStaticField(string name, class System.Type type, class Mono.CodeGeneration.CodeExpression initialValue, class Mono.CodeGeneration.CodeCustomAttribute[] customAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.DefineStaticField(System.String,System.Type,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeCustomAttribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeFieldReference ^ DefineStaticField(System::String ^ name, Type ^ type, Mono::CodeGeneration::CodeExpression ^ initialValue, ... cli::array &lt;Mono::CodeGeneration::CodeCustomAttribute ^&gt; ^ customAttributes);" />
      <MemberSignature Language="F#" Value="member this.DefineStaticField : string * Type * Mono.CodeGeneration.CodeExpression * Mono.CodeGeneration.CodeCustomAttribute[] -&gt; Mono.CodeGeneration.CodeFieldReference" Usage="codeClass.DefineStaticField (name, type, initialValue, customAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeFieldReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initialValue" Type="Mono.CodeGeneration.CodeExpression" />
        <Parameter Name="customAttributes" Type="Mono.CodeGeneration.CodeCustomAttribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="type">To be added.</param>
        <param name="initialValue">To be added.</param>
        <param name="customAttributes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultConstructor">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeMethod GetDefaultConstructor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeMethod GetDefaultConstructor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.GetDefaultConstructor" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefaultConstructor () As CodeMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeMethod ^ GetDefaultConstructor();" />
      <MemberSignature Language="F#" Value="member this.GetDefaultConstructor : unit -&gt; Mono.CodeGeneration.CodeMethod" Usage="codeClass.GetDefaultConstructor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeMethod</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStaticConstructor">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeMethod GetStaticConstructor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeMethod GetStaticConstructor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.GetStaticConstructor" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStaticConstructor () As CodeMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeMethod ^ GetStaticConstructor();" />
      <MemberSignature Language="F#" Value="member this.GetStaticConstructor : unit -&gt; Mono.CodeGeneration.CodeMethod" Usage="codeClass.GetStaticConstructor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeMethod</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementMethod">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeMethod ImplementMethod (System.Reflection.MethodInfo basem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeMethod ImplementMethod(class System.Reflection.MethodInfo basem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.ImplementMethod(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImplementMethod (basem As MethodInfo) As CodeMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeMethod ^ ImplementMethod(System::Reflection::MethodInfo ^ basem);" />
      <MemberSignature Language="F#" Value="member this.ImplementMethod : System.Reflection.MethodInfo -&gt; Mono.CodeGeneration.CodeMethod" Usage="codeClass.ImplementMethod basem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basem" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="basem">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementMethod">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeMethod ImplementMethod (Type baseType, System.Reflection.MethodInfo basem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeMethod ImplementMethod(class System.Type baseType, class System.Reflection.MethodInfo basem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.ImplementMethod(System.Type,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImplementMethod (baseType As Type, basem As MethodInfo) As CodeMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeMethod ^ ImplementMethod(Type ^ baseType, System::Reflection::MethodInfo ^ basem);" />
      <MemberSignature Language="F#" Value="member this.ImplementMethod : Type * System.Reflection.MethodInfo -&gt; Mono.CodeGeneration.CodeMethod" Usage="codeClass.ImplementMethod (baseType, basem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseType" Type="System.Type" />
        <Parameter Name="basem" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="baseType">To be added.</param>
        <param name="basem">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementMethod">
      <MemberSignature Language="C#" Value="public Mono.CodeGeneration.CodeMethod ImplementMethod (Type baseType, string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CodeGeneration.CodeMethod ImplementMethod(class System.Type baseType, string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.ImplementMethod(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImplementMethod (baseType As Type, methodName As String) As CodeMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mono::CodeGeneration::CodeMethod ^ ImplementMethod(Type ^ baseType, System::String ^ methodName);" />
      <MemberSignature Language="F#" Value="member this.ImplementMethod : Type * string -&gt; Mono.CodeGeneration.CodeMethod" Usage="codeClass.ImplementMethod (baseType, methodName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CodeGeneration.CodeMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseType" Type="System.Type" />
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseType">To be added.</param>
        <param name="methodName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintCode">
      <MemberSignature Language="C#" Value="public string PrintCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string PrintCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.PrintCode" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintCode () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ PrintCode();" />
      <MemberSignature Language="F#" Value="member this.PrintCode : unit -&gt; string" Usage="codeClass.PrintCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintCode">
      <MemberSignature Language="C#" Value="public void PrintCode (Mono.CodeGeneration.CodeWriter cw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrintCode(class Mono.CodeGeneration.CodeWriter cw) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CodeGeneration.CodeClass.PrintCode(Mono.CodeGeneration.CodeWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintCode (cw As CodeWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrintCode(Mono::CodeGeneration::CodeWriter ^ cw);" />
      <MemberSignature Language="F#" Value="member this.PrintCode : Mono.CodeGeneration.CodeWriter -&gt; unit" Usage="codeClass.PrintCode cw" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cw" Type="Mono.CodeGeneration.CodeWriter" />
      </Parameters>
      <Docs>
        <param name="cw">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeBuilder">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder TypeBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Emit.TypeBuilder TypeBuilder" />
      <MemberSignature Language="DocId" Value="P:Mono.CodeGeneration.CodeClass.TypeBuilder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeBuilder As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Emit::TypeBuilder ^ TypeBuilder { System::Reflection::Emit::TypeBuilder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeBuilder : System.Reflection.Emit.TypeBuilder" Usage="Mono.CodeGeneration.CodeClass.TypeBuilder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="X86Base" FullName="System.Runtime.Intrinsics.X86.X86Base">
  <TypeSignature Language="C#" Value="public abstract class X86Base" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit X86Base extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Intrinsics.X86.X86Base" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class X86Base" />
  <TypeSignature Language="F#" Value="type X86Base = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class X86Base abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;net-6.0;net-8.0;net-9.0">
      <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides access to the x86 base hardware instructions via intrinsics.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CpuId">
      <MemberSignature Language="C#" Value="public static (int Eax, int Ebx, int Ecx, int Edx) CpuId (int functionId, int subFunctionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`4&lt;int32, int32, int32, int32&gt; CpuId(int32 functionId, int32 subFunctionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.X86.X86Base.CpuId(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CpuId (functionId As Integer, subFunctionId As Integer) As ValueTuple(Of Integer, Integer, Integer, Integer)" />
      <MemberSignature Language="F#" Value="static member CpuId : int * int -&gt; ValueTuple&lt;int, int, int, int&gt;" Usage="System.Runtime.Intrinsics.X86.X86Base.CpuId (functionId, subFunctionId)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;int, int, int, int&gt; CpuId(int functionId, int subFunctionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Int32,System.Int32,System.Int32,System.Int32&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-5.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Eax", "Ebx", "Ecx", "Edx" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Eax", "Ebx", "Ecx", "Edx" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionId" Type="System.Int32" />
        <Parameter Name="subFunctionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="functionId">To be added.</param>
        <param name="subFunctionId">To be added.</param>
        <summary>void __cpuidex(int cpuInfo[4], int function_id, int subfunction_id); CPUID</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static (int Quotient, int Remainder) DivRem (uint lower, int upper, int divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;int32, int32&gt; DivRem(unsigned int32 lower, int32 upper, int32 divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.X86.X86Base.DivRem(System.UInt32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (lower As UInteger, upper As Integer, divisor As Integer) As ValueTuple(Of Integer, Integer)" />
      <MemberSignature Language="F#" Value="static member DivRem : uint32 * int * int -&gt; ValueTuple&lt;int, int&gt;" Usage="System.Runtime.Intrinsics.X86.X86Base.DivRem (lower, upper, divisor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;int, int&gt; DivRem(System::UInt32 lower, int upper, int divisor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.RequiresPreviewFeatures("DivRem is in preview.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.RequiresPreviewFeatures("DivRem is in preview.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-9.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("SYSLIB5004", UrlFormat="https://aka.ms/dotnet-warnings/{0}")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("SYSLIB5004", UrlFormat="https://aka.ms/dotnet-warnings/{0}")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Int32,System.Int32&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Quotient", "Remainder" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Quotient", "Remainder" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lower" Type="System.UInt32" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
        <Parameter Name="upper" Type="System.Int32" Index="1" FrameworkAlternate="net-8.0;net-9.0" />
        <Parameter Name="divisor" Type="System.Int32" Index="2" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="lower">To be added.</param>
        <param name="upper">To be added.</param>
        <param name="divisor">To be added.</param>
        <summary>int _div64(__int64 dividend, int divisor, int* remainder) IDIV reg/m32</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static (uint Quotient, uint Remainder) DivRem (uint lower, uint upper, uint divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;unsigned int32, unsigned int32&gt; DivRem(unsigned int32 lower, unsigned int32 upper, unsigned int32 divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.X86.X86Base.DivRem(System.UInt32,System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (lower As UInteger, upper As UInteger, divisor As UInteger) As ValueTuple(Of UInteger, UInteger)" />
      <MemberSignature Language="F#" Value="static member DivRem : uint32 * uint32 * uint32 -&gt; ValueTuple&lt;uint32, uint32&gt;" Usage="System.Runtime.Intrinsics.X86.X86Base.DivRem (lower, upper, divisor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::UInt32, System::UInt32&gt; DivRem(System::UInt32 lower, System::UInt32 upper, System::UInt32 divisor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.RequiresPreviewFeatures("DivRem is in preview.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.RequiresPreviewFeatures("DivRem is in preview.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-9.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("SYSLIB5004", UrlFormat="https://aka.ms/dotnet-warnings/{0}")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("SYSLIB5004", UrlFormat="https://aka.ms/dotnet-warnings/{0}")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.UInt32,System.UInt32&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Quotient", "Remainder" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Quotient", "Remainder" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lower" Type="System.UInt32" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
        <Parameter Name="upper" Type="System.UInt32" Index="1" FrameworkAlternate="net-8.0;net-9.0" />
        <Parameter Name="divisor" Type="System.UInt32" Index="2" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="lower">To be added.</param>
        <param name="upper">To be added.</param>
        <param name="divisor">To be added.</param>
        <summary>unsigned _udiv64(unsigned __int64 dividend, unsigned divisor, unsigned* remainder) DIV reg/m32</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static (IntPtr Quotient, IntPtr Remainder) DivRem (UIntPtr lower, IntPtr upper, IntPtr divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;native int, native int&gt; DivRem(native unsigned int lower, native int upper, native int divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.X86.X86Base.DivRem(System.UIntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (lower As UIntPtr, upper As IntPtr, divisor As IntPtr) As ValueTuple(Of IntPtr, IntPtr)" />
      <MemberSignature Language="F#" Value="static member DivRem : unativeint * nativeint * nativeint -&gt; ValueTuple&lt;nativeint, nativeint&gt;" Usage="System.Runtime.Intrinsics.X86.X86Base.DivRem (lower, upper, divisor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;IntPtr, IntPtr&gt; DivRem(UIntPtr lower, IntPtr upper, IntPtr divisor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.RequiresPreviewFeatures("DivRem is in preview.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.RequiresPreviewFeatures("DivRem is in preview.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-9.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("SYSLIB5004", UrlFormat="https://aka.ms/dotnet-warnings/{0}")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("SYSLIB5004", UrlFormat="https://aka.ms/dotnet-warnings/{0}")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.IntPtr,System.IntPtr&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Quotient", "Remainder" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Quotient", "Remainder" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lower" Type="System.UIntPtr" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
        <Parameter Name="upper" Type="System.IntPtr" Index="1" FrameworkAlternate="net-8.0;net-9.0" />
        <Parameter Name="divisor" Type="System.IntPtr" Index="2" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="lower">To be added.</param>
        <param name="upper">To be added.</param>
        <param name="divisor">To be added.</param>
        <summary>IDIV reg/m</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static (UIntPtr Quotient, UIntPtr Remainder) DivRem (UIntPtr lower, UIntPtr upper, UIntPtr divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;native unsigned int, native unsigned int&gt; DivRem(native unsigned int lower, native unsigned int upper, native unsigned int divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.X86.X86Base.DivRem(System.UIntPtr,System.UIntPtr,System.UIntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (lower As UIntPtr, upper As UIntPtr, divisor As UIntPtr) As ValueTuple(Of UIntPtr, UIntPtr)" />
      <MemberSignature Language="F#" Value="static member DivRem : unativeint * unativeint * unativeint -&gt; ValueTuple&lt;unativeint, unativeint&gt;" Usage="System.Runtime.Intrinsics.X86.X86Base.DivRem (lower, upper, divisor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;UIntPtr, UIntPtr&gt; DivRem(UIntPtr lower, UIntPtr upper, UIntPtr divisor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.RequiresPreviewFeatures("DivRem is in preview.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.RequiresPreviewFeatures("DivRem is in preview.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-9.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("SYSLIB5004", UrlFormat="https://aka.ms/dotnet-warnings/{0}")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("SYSLIB5004", UrlFormat="https://aka.ms/dotnet-warnings/{0}")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.UIntPtr,System.UIntPtr&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Quotient", "Remainder" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Quotient", "Remainder" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lower" Type="System.UIntPtr" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
        <Parameter Name="upper" Type="System.UIntPtr" Index="1" FrameworkAlternate="net-8.0;net-9.0" />
        <Parameter Name="divisor" Type="System.UIntPtr" Index="2" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="lower">To be added.</param>
        <param name="upper">To be added.</param>
        <param name="divisor">To be added.</param>
        <summary>IDIV reg/m</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public static bool IsSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSupported" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Intrinsics.X86.X86Base.IsSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSupported As Boolean" />
      <MemberSignature Language="F#" Value="static member IsSupported : bool" Usage="System.Runtime.Intrinsics.X86.X86Base.IsSupported" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSupported { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the APIs in this class are supported.</summary>
        <value>
          <see langword="true" /> if the APIs are supported; otherwise, <see langword="false" />.</value>
        <remarks>A value of <see langword="false" /> indicates that the APIs will throw <see cref="T:System.PlatformNotSupportedException" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public static void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.X86.X86Base.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Pause ()" />
      <MemberSignature Language="F#" Value="static member Pause : unit -&gt; unit" Usage="System.Runtime.Intrinsics.X86.X86Base.Pause " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Pause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>void _mm_pause (void); PAUSE</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="CommandLineGenerator" FullName="Microsoft.Build.Tasks.Xaml.CommandLineGenerator">
  <TypeSignature Language="C#" Value="public class CommandLineGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommandLineGenerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.Xaml.CommandLineGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Class CommandLineGenerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandLineGenerator" />
  <TypeSignature Language="F#" Value="type CommandLineGenerator = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The list of active switches in the order they should be emitted.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandLineGenerator (Microsoft.Build.Framework.XamlTypes.Rule rule, System.Collections.Generic.Dictionary&lt;string,object&gt; parameterValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.XamlTypes.Rule rule, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; parameterValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.#ctor(Microsoft.Build.Framework.XamlTypes.Rule,System.Collections.Generic.Dictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rule As Rule, parameterValues As Dictionary(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandLineGenerator(Microsoft::Build::Framework::XamlTypes::Rule ^ rule, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ parameterValues);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Tasks.Xaml.CommandLineGenerator : Microsoft.Build.Framework.XamlTypes.Rule * System.Collections.Generic.Dictionary&lt;string, obj&gt; -&gt; Microsoft.Build.Tasks.Xaml.CommandLineGenerator" Usage="new Microsoft.Build.Tasks.Xaml.CommandLineGenerator (rule, parameterValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rule" Type="Microsoft.Build.Framework.XamlTypes.Rule" />
        <Parameter Name="parameterValues" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="rule">The rule</param>
        <param name="parameterValues">The parameter values.</param>
        <summary>
            Creates a generator that generates a command-line based on the specified Xaml file and parameters.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalOptions">
      <MemberSignature Language="C#" Value="public string AdditionalOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AdditionalOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.AdditionalOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property AdditionalOptions As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AdditionalOptions { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AdditionalOptions : string with get, set" Usage="Microsoft.Build.Tasks.Xaml.CommandLineGenerator.AdditionalOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Any additional options (as a literal string) that may have been specified in the project file
            </summary>
        <value>A string of additional options to include on the command line.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlwaysAppend">
      <MemberSignature Language="C#" Value="public string AlwaysAppend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlwaysAppend" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.AlwaysAppend" />
      <MemberSignature Language="VB.NET" Value="Public Property AlwaysAppend As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AlwaysAppend { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlwaysAppend : string with get, set" Usage="Microsoft.Build.Tasks.Xaml.CommandLineGenerator.AlwaysAppend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The string to append to the end of a non-templated commandline.
            </summary>
        <value>The string to append to a command line when there is no template.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandLineTemplate">
      <MemberSignature Language="C#" Value="public string CommandLineTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandLineTemplate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.CommandLineTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandLineTemplate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandLineTemplate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandLineTemplate : string with get, set" Usage="Microsoft.Build.Tasks.Xaml.CommandLineGenerator.CommandLineTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The template which, if set, will be used to govern formatting of the command line(s)
            </summary>
        <value>The template to use when creating the command line.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCommandLine">
      <MemberSignature Language="C#" Value="public string GenerateCommandLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GenerateCommandLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.GenerateCommandLine" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCommandLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GenerateCommandLine();" />
      <MemberSignature Language="F#" Value="member this.GenerateCommandLine : unit -&gt; string" Usage="commandLineGenerator.GenerateCommandLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Generate the command-line
            </summary>
        <returns>The command line.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

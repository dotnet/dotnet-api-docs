<Type Name="CommandLine" FullName="System.CommandLine.DragonFruit.CommandLine">
  <TypeSignature Language="C#" Value="public static class CommandLine" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CommandLine extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.DragonFruit.CommandLine" />
  <TypeSignature Language="VB.NET" Value="Public Module CommandLine" />
  <TypeSignature Language="F#" Value="type CommandLine = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandLine abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine.DragonFruit</AssemblyName>
    <AssemblyVersion>0.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BuildAlias">
      <MemberSignature Language="C#" Value="public static string BuildAlias (this System.CommandLine.Binding.IValueDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BuildAlias(class System.CommandLine.Binding.IValueDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.DragonFruit.CommandLine.BuildAlias(System.CommandLine.Binding.IValueDescriptor)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BuildAlias (descriptor As IValueDescriptor) As String" />
      <MemberSignature Language="F#" Value="static member BuildAlias : System.CommandLine.Binding.IValueDescriptor -&gt; string" Usage="System.CommandLine.DragonFruit.CommandLine.BuildAlias descriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ BuildAlias(System::CommandLine::Binding::IValueDescriptor ^ descriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.DragonFruit</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.CommandLine.Binding.IValueDescriptor" RefType="this" />
      </Parameters>
      <Docs>
        <param name="descriptor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildOption">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Option BuildOption (this System.CommandLine.NamingConventionBinder.ParameterDescriptor parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Option BuildOption(class System.CommandLine.NamingConventionBinder.ParameterDescriptor parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.DragonFruit.CommandLine.BuildOption(System.CommandLine.NamingConventionBinder.ParameterDescriptor)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BuildOption (parameter As ParameterDescriptor) As Option" />
      <MemberSignature Language="F#" Value="static member BuildOption : System.CommandLine.NamingConventionBinder.ParameterDescriptor -&gt; System.CommandLine.Option" Usage="System.CommandLine.DragonFruit.CommandLine.BuildOption parameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::CommandLine::Option ^ BuildOption(System::CommandLine::NamingConventionBinder::ParameterDescriptor ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.DragonFruit</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Option</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.CommandLine.NamingConventionBinder.ParameterDescriptor" RefType="this" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildOptions">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.CommandLine.Option&gt; BuildOptions (this System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.CommandLine.Option&gt; BuildOptions(class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.DragonFruit.CommandLine.BuildOptions(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Iterator Function BuildOptions (method As MethodInfo) As IEnumerable(Of Option)" />
      <MemberSignature Language="F#" Value="static member BuildOptions : System.Reflection.MethodInfo -&gt; seq&lt;System.CommandLine.Option&gt;" Usage="System.CommandLine.DragonFruit.CommandLine.BuildOptions method" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::CommandLine::Option ^&gt; ^ BuildOptions(System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.DragonFruit</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.CommandLine.DragonFruit.CommandLine+&lt;BuildOptions&gt;d__11))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.CommandLine.DragonFruit.CommandLine+&lt;BuildOptions&gt;d__11))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.CommandLine.Option&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" RefType="this" />
      </Parameters>
      <Docs>
        <param name="method">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureFromMethod">
      <MemberSignature Language="C#" Value="public static void ConfigureFromMethod (this System.CommandLine.Command command, System.Reflection.MethodInfo method, object target = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfigureFromMethod(class System.CommandLine.Command command, class System.Reflection.MethodInfo method, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.DragonFruit.CommandLine.ConfigureFromMethod(System.CommandLine.Command,System.Reflection.MethodInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ConfigureFromMethod (command As Command, method As MethodInfo, Optional target As Object = Nothing)" />
      <MemberSignature Language="F#" Value="static member ConfigureFromMethod : System.CommandLine.Command * System.Reflection.MethodInfo * obj -&gt; unit" Usage="System.CommandLine.DragonFruit.CommandLine.ConfigureFromMethod (command, method, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.DragonFruit</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.CommandLine.Command" RefType="this" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="method">To be added.</param>
        <param name="target">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureHelpFromXmlComments">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Builder.CommandLineBuilder ConfigureHelpFromXmlComments (this System.CommandLine.Builder.CommandLineBuilder builder, System.Reflection.MethodInfo method, string xmlDocsFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Builder.CommandLineBuilder ConfigureHelpFromXmlComments(class System.CommandLine.Builder.CommandLineBuilder builder, class System.Reflection.MethodInfo method, string xmlDocsFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.DragonFruit.CommandLine.ConfigureHelpFromXmlComments(System.CommandLine.Builder.CommandLineBuilder,System.Reflection.MethodInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigureHelpFromXmlComments (builder As CommandLineBuilder, method As MethodInfo, xmlDocsFilePath As String) As CommandLineBuilder" />
      <MemberSignature Language="F#" Value="static member ConfigureHelpFromXmlComments : System.CommandLine.Builder.CommandLineBuilder * System.Reflection.MethodInfo * string -&gt; System.CommandLine.Builder.CommandLineBuilder" Usage="System.CommandLine.DragonFruit.CommandLine.ConfigureHelpFromXmlComments (builder, method, xmlDocsFilePath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::CommandLine::Builder::CommandLineBuilder ^ ConfigureHelpFromXmlComments(System::CommandLine::Builder::CommandLineBuilder ^ builder, System::Reflection::MethodInfo ^ method, System::String ^ xmlDocsFilePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.DragonFruit</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Builder.CommandLineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.CommandLine.Builder.CommandLineBuilder" RefType="this" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="xmlDocsFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="method">To be added.</param>
        <param name="xmlDocsFilePath">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureRootCommandFromMethod">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Builder.CommandLineBuilder ConfigureRootCommandFromMethod (this System.CommandLine.Builder.CommandLineBuilder builder, System.Reflection.MethodInfo method, object target = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Builder.CommandLineBuilder ConfigureRootCommandFromMethod(class System.CommandLine.Builder.CommandLineBuilder builder, class System.Reflection.MethodInfo method, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.DragonFruit.CommandLine.ConfigureRootCommandFromMethod(System.CommandLine.Builder.CommandLineBuilder,System.Reflection.MethodInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigureRootCommandFromMethod (builder As CommandLineBuilder, method As MethodInfo, Optional target As Object = Nothing) As CommandLineBuilder" />
      <MemberSignature Language="F#" Value="static member ConfigureRootCommandFromMethod : System.CommandLine.Builder.CommandLineBuilder * System.Reflection.MethodInfo * obj -&gt; System.CommandLine.Builder.CommandLineBuilder" Usage="System.CommandLine.DragonFruit.CommandLine.ConfigureRootCommandFromMethod (builder, method, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.DragonFruit</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Builder.CommandLineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.CommandLine.Builder.CommandLineBuilder" RefType="this" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="method">To be added.</param>
        <param name="target">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAssembly">
      <MemberSignature Language="C#" Value="public static int ExecuteAssembly (System.Reflection.Assembly entryAssembly, string[] args, string entryPointFullTypeName, string xmlDocsFilePath = default, System.CommandLine.IConsole console = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ExecuteAssembly(class System.Reflection.Assembly entryAssembly, string[] args, string entryPointFullTypeName, string xmlDocsFilePath, class System.CommandLine.IConsole console) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.DragonFruit.CommandLine.ExecuteAssembly(System.Reflection.Assembly,System.String[],System.String,System.String,System.CommandLine.IConsole)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteAssembly (entryAssembly As Assembly, args As String(), entryPointFullTypeName As String, Optional xmlDocsFilePath As String = Nothing, Optional console As IConsole = Nothing) As Integer" />
      <MemberSignature Language="F#" Value="static member ExecuteAssembly : System.Reflection.Assembly * string[] * string * string * System.CommandLine.IConsole -&gt; int" Usage="System.CommandLine.DragonFruit.CommandLine.ExecuteAssembly (entryAssembly, args, entryPointFullTypeName, xmlDocsFilePath, console)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.DragonFruit</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryAssembly" Type="System.Reflection.Assembly" />
        <Parameter Name="args" Type="System.String[]" />
        <Parameter Name="entryPointFullTypeName" Type="System.String" />
        <Parameter Name="xmlDocsFilePath" Type="System.String" />
        <Parameter Name="console" Type="System.CommandLine.IConsole" />
      </Parameters>
      <Docs>
        <param name="entryAssembly">To be added.</param>
        <param name="args">To be added.</param>
        <param name="entryPointFullTypeName">To be added.</param>
        <param name="xmlDocsFilePath">To be added.</param>
        <param name="console">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAssemblyAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; ExecuteAssemblyAsync (System.Reflection.Assembly entryAssembly, string[] args, string entryPointFullTypeName, string xmlDocsFilePath = default, System.CommandLine.IConsole console = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; ExecuteAssemblyAsync(class System.Reflection.Assembly entryAssembly, string[] args, string entryPointFullTypeName, string xmlDocsFilePath, class System.CommandLine.IConsole console) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.DragonFruit.CommandLine.ExecuteAssemblyAsync(System.Reflection.Assembly,System.String[],System.String,System.String,System.CommandLine.IConsole)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteAssemblyAsync (entryAssembly As Assembly, args As String(), entryPointFullTypeName As String, Optional xmlDocsFilePath As String = Nothing, Optional console As IConsole = Nothing) As Task(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ExecuteAssemblyAsync : System.Reflection.Assembly * string[] * string * string * System.CommandLine.IConsole -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="System.CommandLine.DragonFruit.CommandLine.ExecuteAssemblyAsync (entryAssembly, args, entryPointFullTypeName, xmlDocsFilePath, console)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.DragonFruit</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryAssembly" Type="System.Reflection.Assembly" />
        <Parameter Name="args" Type="System.String[]" />
        <Parameter Name="entryPointFullTypeName" Type="System.String" />
        <Parameter Name="xmlDocsFilePath" Type="System.String" />
        <Parameter Name="console" Type="System.CommandLine.IConsole" />
      </Parameters>
      <Docs>
        <param name="entryAssembly">To be added.</param>
        <param name="args">To be added.</param>
        <param name="entryPointFullTypeName">To be added.</param>
        <param name="xmlDocsFilePath">To be added.</param>
        <param name="console">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMethod">
      <MemberSignature Language="C#" Value="public static int InvokeMethod (string[] args, System.Reflection.MethodInfo method, string xmlDocsFilePath = default, object target = default, System.CommandLine.IConsole console = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 InvokeMethod(string[] args, class System.Reflection.MethodInfo method, string xmlDocsFilePath, object target, class System.CommandLine.IConsole console) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.DragonFruit.CommandLine.InvokeMethod(System.String[],System.Reflection.MethodInfo,System.String,System.Object,System.CommandLine.IConsole)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeMethod (args As String(), method As MethodInfo, Optional xmlDocsFilePath As String = Nothing, Optional target As Object = Nothing, Optional console As IConsole = Nothing) As Integer" />
      <MemberSignature Language="F#" Value="static member InvokeMethod : string[] * System.Reflection.MethodInfo * string * obj * System.CommandLine.IConsole -&gt; int" Usage="System.CommandLine.DragonFruit.CommandLine.InvokeMethod (args, method, xmlDocsFilePath, target, console)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.DragonFruit</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="xmlDocsFilePath" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="console" Type="System.CommandLine.IConsole" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <param name="method">To be added.</param>
        <param name="xmlDocsFilePath">To be added.</param>
        <param name="target">To be added.</param>
        <param name="console">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMethodAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; InvokeMethodAsync (string[] args, System.Reflection.MethodInfo method, string xmlDocsFilePath = default, object target = default, System.CommandLine.IConsole console = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; InvokeMethodAsync(string[] args, class System.Reflection.MethodInfo method, string xmlDocsFilePath, object target, class System.CommandLine.IConsole console) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.DragonFruit.CommandLine.InvokeMethodAsync(System.String[],System.Reflection.MethodInfo,System.String,System.Object,System.CommandLine.IConsole)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeMethodAsync (args As String(), method As MethodInfo, Optional xmlDocsFilePath As String = Nothing, Optional target As Object = Nothing, Optional console As IConsole = Nothing) As Task(Of Integer)" />
      <MemberSignature Language="F#" Value="static member InvokeMethodAsync : string[] * System.Reflection.MethodInfo * string * obj * System.CommandLine.IConsole -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="System.CommandLine.DragonFruit.CommandLine.InvokeMethodAsync (args, method, xmlDocsFilePath, target, console)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.DragonFruit</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="xmlDocsFilePath" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="console" Type="System.CommandLine.IConsole" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <param name="method">To be added.</param>
        <param name="xmlDocsFilePath">To be added.</param>
        <param name="target">To be added.</param>
        <param name="console">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

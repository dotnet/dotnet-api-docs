<Type Name="MemoryCacheEntryExtensions" FullName="Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions">
  <TypeSignature Language="C#" Value="public static class MemoryCacheEntryExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MemoryCacheEntryExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module MemoryCacheEntryExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemoryCacheEntryExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type MemoryCacheEntryExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Caching.Abstractions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddExpirationToken">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions AddExpirationToken (this Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions options, Microsoft.Extensions.Primitives.IChangeToken expirationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions AddExpirationToken(class Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions options, class Microsoft.Extensions.Primitives.IChangeToken expirationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Primitives.IChangeToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddExpirationToken (options As MemoryCacheEntryOptions, expirationToken As IChangeToken) As MemoryCacheEntryOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Caching::Memory::MemoryCacheEntryOptions ^ AddExpirationToken(Microsoft::Extensions::Caching::Memory::MemoryCacheEntryOptions ^ options, Microsoft::Extensions::Primitives::IChangeToken ^ expirationToken);" />
      <MemberSignature Language="F#" Value="static member AddExpirationToken : Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions * Microsoft.Extensions.Primitives.IChangeToken -&gt; Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" Usage="Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.AddExpirationToken (options, expirationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" RefType="this" />
        <Parameter Name="expirationToken" Type="Microsoft.Extensions.Primitives.IChangeToken" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" />.</param>
        <param name="expirationToken">The <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> that causes the cache entry to expire.</param>
        <summary>Expire the cache entry if the given <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> expires.</summary>
        <returns>The <see cref="T:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterPostEvictionCallback">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions RegisterPostEvictionCallback (this Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions options, Microsoft.Extensions.Caching.Memory.PostEvictionDelegate callback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions RegisterPostEvictionCallback(class Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions options, class Microsoft.Extensions.Caching.Memory.PostEvictionDelegate callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RegisterPostEvictionCallback (options As MemoryCacheEntryOptions, callback As PostEvictionDelegate) As MemoryCacheEntryOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Caching::Memory::MemoryCacheEntryOptions ^ RegisterPostEvictionCallback(Microsoft::Extensions::Caching::Memory::MemoryCacheEntryOptions ^ options, Microsoft::Extensions::Caching::Memory::PostEvictionDelegate ^ callback);" />
      <MemberSignature Language="F#" Value="static member RegisterPostEvictionCallback : Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions * Microsoft.Extensions.Caching.Memory.PostEvictionDelegate -&gt; Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" Usage="Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback (options, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" RefType="this" />
        <Parameter Name="callback" Type="Microsoft.Extensions.Caching.Memory.PostEvictionDelegate" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" />.</param>
        <param name="callback">The callback to register for calling after an entry is evicted.</param>
        <summary>The given callback will be fired after the cache entry is evicted from the cache.</summary>
        <returns>The <see cref="T:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterPostEvictionCallback">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions RegisterPostEvictionCallback (this Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions options, Microsoft.Extensions.Caching.Memory.PostEvictionDelegate callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions RegisterPostEvictionCallback(class Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions options, class Microsoft.Extensions.Caching.Memory.PostEvictionDelegate callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RegisterPostEvictionCallback (options As MemoryCacheEntryOptions, callback As PostEvictionDelegate, state As Object) As MemoryCacheEntryOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Caching::Memory::MemoryCacheEntryOptions ^ RegisterPostEvictionCallback(Microsoft::Extensions::Caching::Memory::MemoryCacheEntryOptions ^ options, Microsoft::Extensions::Caching::Memory::PostEvictionDelegate ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member RegisterPostEvictionCallback : Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions * Microsoft.Extensions.Caching.Memory.PostEvictionDelegate * obj -&gt; Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" Usage="Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback (options, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" RefType="this" />
        <Parameter Name="callback" Type="Microsoft.Extensions.Caching.Memory.PostEvictionDelegate" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" />.</param>
        <param name="callback">The callback to register for calling after an entry is evicted.</param>
        <param name="state">The state to pass to the callback.</param>
        <summary>The given callback will be fired after the cache entry is evicted from the cache.</summary>
        <returns>The <see cref="T:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions SetAbsoluteExpiration (this Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions options, DateTimeOffset absolute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions SetAbsoluteExpiration(class Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions options, valuetype System.DateTimeOffset absolute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetAbsoluteExpiration (options As MemoryCacheEntryOptions, absolute As DateTimeOffset) As MemoryCacheEntryOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Caching::Memory::MemoryCacheEntryOptions ^ SetAbsoluteExpiration(Microsoft::Extensions::Caching::Memory::MemoryCacheEntryOptions ^ options, DateTimeOffset absolute);" />
      <MemberSignature Language="F#" Value="static member SetAbsoluteExpiration : Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions * DateTimeOffset -&gt; Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" Usage="Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration (options, absolute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" RefType="this" />
        <Parameter Name="absolute" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" />.</param>
        <param name="absolute">The expiration time, in absolute terms.</param>
        <summary>Sets an absolute expiration date for the cache entry.</summary>
        <returns>The <see cref="T:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions SetAbsoluteExpiration (this Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions options, TimeSpan relative);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions SetAbsoluteExpiration(class Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions options, valuetype System.TimeSpan relative) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetAbsoluteExpiration (options As MemoryCacheEntryOptions, relative As TimeSpan) As MemoryCacheEntryOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Caching::Memory::MemoryCacheEntryOptions ^ SetAbsoluteExpiration(Microsoft::Extensions::Caching::Memory::MemoryCacheEntryOptions ^ options, TimeSpan relative);" />
      <MemberSignature Language="F#" Value="static member SetAbsoluteExpiration : Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions * TimeSpan -&gt; Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" Usage="Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration (options, relative)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" RefType="this" />
        <Parameter Name="relative" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" />.</param>
        <param name="relative">The expiration time, relative to now.</param>
        <summary>Sets an absolute expiration time, relative to now.</summary>
        <returns>The <see cref="T:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPriority">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions SetPriority (this Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions options, Microsoft.Extensions.Caching.Memory.CacheItemPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions SetPriority(class Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions options, valuetype Microsoft.Extensions.Caching.Memory.CacheItemPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.CacheItemPriority)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetPriority (options As MemoryCacheEntryOptions, priority As CacheItemPriority) As MemoryCacheEntryOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Caching::Memory::MemoryCacheEntryOptions ^ SetPriority(Microsoft::Extensions::Caching::Memory::MemoryCacheEntryOptions ^ options, Microsoft::Extensions::Caching::Memory::CacheItemPriority priority);" />
      <MemberSignature Language="F#" Value="static member SetPriority : Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions * Microsoft.Extensions.Caching.Memory.CacheItemPriority -&gt; Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" Usage="Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetPriority (options, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" RefType="this" />
        <Parameter Name="priority" Type="Microsoft.Extensions.Caching.Memory.CacheItemPriority" />
      </Parameters>
      <Docs>
        <param name="options">The option on which to set the priority.</param>
        <param name="priority">The <see cref="T:Microsoft.Extensions.Caching.Memory.CacheItemPriority" /> to set on the option.</param>
        <summary>Sets the priority for keeping the cache entry in the cache during a memory pressure tokened cleanup.</summary>
        <returns>The <see cref="T:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSize">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions SetSize (this Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions options, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions SetSize(class Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions options, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetSize(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetSize (options As MemoryCacheEntryOptions, size As Long) As MemoryCacheEntryOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Caching::Memory::MemoryCacheEntryOptions ^ SetSize(Microsoft::Extensions::Caching::Memory::MemoryCacheEntryOptions ^ options, long size);" />
      <MemberSignature Language="F#" Value="static member SetSize : Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions * int64 -&gt; Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" Usage="Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetSize (options, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="size" Type="System.Int64" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="options">The options to set the entry size on.</param>
        <param name="size">The size to set on the <see cref="T:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" />.</param>
        <summary>Sets the size of the cache entry value.</summary>
        <returns>The <see cref="T:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSlidingExpiration">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions SetSlidingExpiration (this Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions options, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions SetSlidingExpiration(class Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions options, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetSlidingExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetSlidingExpiration (options As MemoryCacheEntryOptions, offset As TimeSpan) As MemoryCacheEntryOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Caching::Memory::MemoryCacheEntryOptions ^ SetSlidingExpiration(Microsoft::Extensions::Caching::Memory::MemoryCacheEntryOptions ^ options, TimeSpan offset);" />
      <MemberSignature Language="F#" Value="static member SetSlidingExpiration : Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions * TimeSpan -&gt; Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" Usage="Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetSlidingExpiration (options, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" RefType="this" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" />.</param>
        <param name="offset">The sliding expiration time.</param>
        <summary>Sets how long the cache entry can be inactive (e.g. not accessed) before it will be removed.
            This will not extend the entry lifetime beyond the absolute expiration (if set).</summary>
        <returns>The <see cref="T:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

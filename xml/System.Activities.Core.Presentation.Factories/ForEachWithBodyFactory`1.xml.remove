<Type Name="ForEachWithBodyFactory&lt;T&gt;" FullName="System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory&lt;T&gt;">
  <TypeSignature Language="C#" Value="public sealed class ForEachWithBodyFactory&lt;T&gt; : System.Activities.Presentation.IActivityTemplateFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ForEachWithBodyFactory`1&lt;T&gt; extends System.Object implements class System.Activities.Presentation.IActivityTemplateFactory" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ForEachWithBodyFactory(Of T)&#xA;Implements IActivityTemplateFactory" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ForEachWithBodyFactory sealed : System::Activities::Presentation::IActivityTemplateFactory" />
  <TypeSignature Language="F#" Value="type ForEachWithBodyFactory&lt;'T&gt; = class&#xA;    interface IActivityTemplateFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Core.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.Presentation.IActivityTemplateFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">The type of the values provided in the <see cref="P:System.Activities.Statements.ForEach`1.Values" /> collection of the <see cref="T:System.Activities.Statements.ForEach`1" /> activity.</typeparam>
    <summary>Creates new <see cref="T:System.Activities.Statements.ForEach`1" /> activities with a body each.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ForEachWithBodyFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ForEachWithBodyFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Core.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory`1" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public System.Activities.Activity Create (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Activity Create(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory`1.Create(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (target As DependencyObject) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Activities::Activity ^ Create(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Create : System.Windows.DependencyObject -&gt; System.Activities.Activity&#xA;override this.Create : System.Windows.DependencyObject -&gt; System.Activities.Activity" Usage="forEachWithBodyFactory.Create target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.IActivityTemplateFactory.Create(System.Windows.DependencyObject)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Core.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">The workflow UI element that is the visual container of the new activity.</param>
        <summary>Creates a new <see cref="T:System.Activities.Statements.ForEach`1" /> activity with a body.</summary>
        <returns>A new <see cref="T:System.Activities.Statements.ForEach`1" /> activity with a body.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This parameter is ignored.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

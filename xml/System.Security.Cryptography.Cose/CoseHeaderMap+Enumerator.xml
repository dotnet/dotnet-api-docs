<Type Name="CoseHeaderMap+Enumerator" FullName="System.Security.Cryptography.Cose.CoseHeaderMap+Enumerator">
  <TypeSignature Language="C#" Value="public struct CoseHeaderMap.Enumerator : System.Collections.Generic.IEnumerator&lt;(System.Security.Cryptography.Cose.CoseHeaderLabel, ReadOnlyMemory&lt;byte&gt;)&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit CoseHeaderMap/Enumerator extends System.ValueType implements class System.Collections.Generic.IEnumerator`1&lt;valuetype System.ValueTuple`2&lt;valuetype System.Security.Cryptography.Cose.CoseHeaderLabel, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt;&gt;&gt;, class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Cose.CoseHeaderMap.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure CoseHeaderMap.Enumerator&#xA;Implements IEnumerator(Of ValueTuple(Of CoseHeaderLabel, ReadOnlyMemory(Of Byte)))" />
  <TypeSignature Language="F#" Value="type CoseHeaderMap.Enumerator = struct&#xA;    interface IEnumerator&lt;ValueTuple&lt;CoseHeaderLabel, ReadOnlyMemory&lt;byte&gt;&gt;&gt;&#xA;    interface IEnumerator&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public: value class CoseHeaderMap::Enumerator : System::Collections::Generic::IEnumerator&lt;ValueTuple&lt;System::Security::Cryptography::Cose::CoseHeaderLabel, ReadOnlyMemory&lt;System::Byte&gt;&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;System.ValueTuple&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.ReadOnlyMemory&lt;System.Byte&gt;&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public (System.Security.Cryptography.Cose.CoseHeaderLabel Label, ReadOnlyMemory&lt;byte&gt; EncodedValue) Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ValueTuple`2&lt;valuetype System.Security.Cryptography.Cose.CoseHeaderLabel, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt;&gt; Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Cose.CoseHeaderMap.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As ValueTuple(Of CoseHeaderLabel, ReadOnlyMemory(Of Byte))" />
      <MemberSignature Language="F#" Value="member this.Current : ValueTuple&lt;System.Security.Cryptography.Cose.CoseHeaderLabel, ReadOnlyMemory&lt;byte&gt;&gt;" Usage="System.Security.Cryptography.Cose.CoseHeaderMap.Enumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ValueTuple&lt;System::Security::Cryptography::Cose::CoseHeaderLabel, ReadOnlyMemory&lt;System::Byte&gt;&gt; Current { ValueTuple&lt;System::Security::Cryptography::Cose::CoseHeaderLabel, ReadOnlyMemory&lt;System::Byte&gt;&gt; get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IEnumerator`1.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Label", "EncodedValue" })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Label", "EncodedValue" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.ReadOnlyMemory&lt;System.Byte&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the element in the collection at the current position of the enumerator.</summary>
        <value>The element in the collection at the current position of the enumerator.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.Enumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="enumerator.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="enumerator.MoveNext " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Advances the enumerator to the next element of the collection.</summary>
        <returns>
          <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.Enumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="enumerator.Reset " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Cose.CoseHeaderMap.Enumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IEnumerator.Current : obj" Usage="System.Collections.IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IEnumerator::Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the element in the collection at the current position of the enumerator.</summary>
        <value>The element in the collection at the current position of the enumerator.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This member is an explicit interface member implementation. It can be used only when the <xref:System.Security.Cryptography.Cose.CoseHeaderMap.Enumerator> instance is cast to an <xref:System.Collections.IEnumerator> interface.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

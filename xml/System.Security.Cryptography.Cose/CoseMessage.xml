<Type Name="CoseMessage" FullName="System.Security.Cryptography.Cose.CoseMessage">
  <TypeSignature Language="C#" Value="public abstract class CoseMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CoseMessage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Cose.CoseMessage" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CoseMessage" />
  <TypeSignature Language="F#" Value="type CoseMessage = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class CoseMessage abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a COSE message as described in RFC 8152.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;byte&gt;? Content { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt;&gt; Content" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Cose.CoseMessage.Content" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Content As Nullable(Of ReadOnlyMemory(Of Byte))" />
      <MemberSignature Language="F#" Value="member this.Content : Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt;" Usage="System.Security.Cryptography.Cose.CoseMessage.Content" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;ReadOnlyMemory&lt;System::Byte&gt;&gt; Content { Nullable&lt;ReadOnlyMemory&lt;System::Byte&gt;&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.ReadOnlyMemory&lt;System.Byte&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the content of this message or <see langword="null" /> if the content was detached from the message.</summary>
        <value>A region of memory that contains the content of this message or <see langword="null" /> if the content was detached from the message.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeMultiSign">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Cose.CoseMultiSignMessage DecodeMultiSign (byte[] cborPayload);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Cose.CoseMultiSignMessage DecodeMultiSign(unsigned int8[] cborPayload) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseMessage.DecodeMultiSign(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeMultiSign (cborPayload As Byte()) As CoseMultiSignMessage" />
      <MemberSignature Language="F#" Value="static member DecodeMultiSign : byte[] -&gt; System.Security.Cryptography.Cose.CoseMultiSignMessage" Usage="System.Security.Cryptography.Cose.CoseMessage.DecodeMultiSign cborPayload" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Cose::CoseMultiSignMessage ^ DecodeMultiSign(cli::array &lt;System::Byte&gt; ^ cborPayload);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Cose.CoseMultiSignMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cborPayload" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cborPayload">The sequence of bytes to decode.</param>
        <summary>Decodes a CBOR payload as a COSE_Sign message.</summary>
        <returns>The decoded message.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cborPayload" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <paramref name="cborPayload" /> could not be decoded as a COSE_Sign message.</exception>
      </Docs>
    </Member>
    <Member MemberName="DecodeMultiSign">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Cose.CoseMultiSignMessage DecodeMultiSign (ReadOnlySpan&lt;byte&gt; cborPayload);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Cose.CoseMultiSignMessage DecodeMultiSign(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; cborPayload) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseMessage.DecodeMultiSign(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeMultiSign (cborPayload As ReadOnlySpan(Of Byte)) As CoseMultiSignMessage" />
      <MemberSignature Language="F#" Value="static member DecodeMultiSign : ReadOnlySpan&lt;byte&gt; -&gt; System.Security.Cryptography.Cose.CoseMultiSignMessage" Usage="System.Security.Cryptography.Cose.CoseMessage.DecodeMultiSign cborPayload" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Cose::CoseMultiSignMessage ^ DecodeMultiSign(ReadOnlySpan&lt;System::Byte&gt; cborPayload);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Cose.CoseMultiSignMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cborPayload" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="cborPayload">The sequence of bytes to decode.</param>
        <summary>Decodes a CBOR payload as a COSE_Sign message.</summary>
        <returns>The decoded message.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <paramref name="cborPayload" /> could not be decoded as a COSE_Sign message.</exception>
      </Docs>
    </Member>
    <Member MemberName="DecodeSign1">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Cose.CoseSign1Message DecodeSign1 (byte[] cborPayload);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Cose.CoseSign1Message DecodeSign1(unsigned int8[] cborPayload) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseMessage.DecodeSign1(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeSign1 (cborPayload As Byte()) As CoseSign1Message" />
      <MemberSignature Language="F#" Value="static member DecodeSign1 : byte[] -&gt; System.Security.Cryptography.Cose.CoseSign1Message" Usage="System.Security.Cryptography.Cose.CoseMessage.DecodeSign1 cborPayload" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Cose::CoseSign1Message ^ DecodeSign1(cli::array &lt;System::Byte&gt; ^ cborPayload);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Cose.CoseSign1Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cborPayload" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cborPayload">The sequence of bytes to decode.</param>
        <summary>Decodes a CBOR payload as a COSE_Sign1 message.</summary>
        <returns>The decoded message.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cborPayload" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <paramref name="cborPayload" /> could not be decoded as a COSE_Sign1 message.</exception>
      </Docs>
    </Member>
    <Member MemberName="DecodeSign1">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Cose.CoseSign1Message DecodeSign1 (ReadOnlySpan&lt;byte&gt; cborPayload);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Cose.CoseSign1Message DecodeSign1(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; cborPayload) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseMessage.DecodeSign1(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeSign1 (cborPayload As ReadOnlySpan(Of Byte)) As CoseSign1Message" />
      <MemberSignature Language="F#" Value="static member DecodeSign1 : ReadOnlySpan&lt;byte&gt; -&gt; System.Security.Cryptography.Cose.CoseSign1Message" Usage="System.Security.Cryptography.Cose.CoseMessage.DecodeSign1 cborPayload" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Cose::CoseSign1Message ^ DecodeSign1(ReadOnlySpan&lt;System::Byte&gt; cborPayload);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Cose.CoseSign1Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cborPayload" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="cborPayload">The sequence of CBOR-encoded bytes to decode.</param>
        <summary>Decodes a CBOR payload as a COSE_Sign1 message.</summary>
        <returns>The decoded message.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <paramref name="cborPayload" /> could not be decoded as a COSE_Sign1 message.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public byte[] Encode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseMessage.Encode" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode () As Byte()" />
      <MemberSignature Language="F#" Value="member this.Encode : unit -&gt; byte[]" Usage="coseMessage.Encode " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Encodes this message as CBOR.</summary>
        <returns>The message encoded as CBOR.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseMessage.UnprotectedHeaders" /> collections have one or more labels in common.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public int Encode (Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Encode(valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseMessage.Encode(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode (destination As Span(Of Byte)) As Integer" />
      <MemberSignature Language="F#" Value="member this.Encode : Span&lt;byte&gt; -&gt; int" Usage="coseMessage.Encode destination" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Encode(Span&lt;System::Byte&gt; destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="destination">The buffer in which to write the encoded value.</param>
        <summary>Encodes this message as CBOR.</summary>
        <returns>The number of bytes written to <paramref name="destination" />.</returns>
        <remarks>Use <see cref="M:System.Security.Cryptography.Cose.CoseMessage.GetEncodedLength" /> to determine how many bytes result in encoding this message.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destination" /> is too small to hold the value.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseMessage.UnprotectedHeaders" /> collections have one or more labels in common.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEncodedLength">
      <MemberSignature Language="C#" Value="public abstract int GetEncodedLength ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetEncodedLength() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseMessage.GetEncodedLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncodedLength () As Integer" />
      <MemberSignature Language="F#" Value="abstract member GetEncodedLength : unit -&gt; int" Usage="coseMessage.GetEncodedLength " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetEncodedLength();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>When overriden in a derived class, calculates the number of bytes produced by encoding this <see cref="T:System.Security.Cryptography.Cose.CoseMessage" />.</summary>
        <returns>The number of bytes produced by encoding this message.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectedHeaders">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Cose.CoseHeaderMap ProtectedHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Cose.CoseHeaderMap ProtectedHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectedHeaders As CoseHeaderMap" />
      <MemberSignature Language="F#" Value="member this.ProtectedHeaders : System.Security.Cryptography.Cose.CoseHeaderMap" Usage="System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Cose::CoseHeaderMap ^ ProtectedHeaders { System::Security::Cryptography::Cose::CoseHeaderMap ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Cose.CoseHeaderMap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the protected header parameters associated with this message.</summary>
        <value>A collection of protected header parameters associated with this message.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RawProtectedHeaders">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;byte&gt; RawProtectedHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; RawProtectedHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Cose.CoseMessage.RawProtectedHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawProtectedHeaders As ReadOnlyMemory(Of Byte)" />
      <MemberSignature Language="F#" Value="member this.RawProtectedHeaders : ReadOnlyMemory&lt;byte&gt;" Usage="System.Security.Cryptography.Cose.CoseMessage.RawProtectedHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlyMemory&lt;System::Byte&gt; RawProtectedHeaders { ReadOnlyMemory&lt;System::Byte&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the raw bytes of the protected header parameters associated with this message.</summary>
        <value>A region of memory that contains the raw bytes of the protected header parameters associated with this message.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncode">
      <MemberSignature Language="C#" Value="public abstract bool TryEncode (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryEncode(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseMessage.TryEncode(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryEncode (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryEncode : Span&lt;byte&gt; * int -&gt; bool" Usage="coseMessage.TryEncode (destination, bytesWritten)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryEncode(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">The buffer in which to write the encoded value.</param>
        <param name="bytesWritten">On success, receives the number of bytes written to <paramref name="destination" />. This parameter is treated as uninitialized.</param>
        <summary>When overriden in a derived class, attempts to encode this message into the specified buffer.</summary>
        <returns>
          <see langword="true" /> if <paramref name="destination" /> had sufficient length to receive the value; otherwise, <see langword="false" />.</returns>
        <remarks>Use <see cref="M:System.Security.Cryptography.Cose.CoseMessage.GetEncodedLength" /> to determine how many bytes result in encoding this message.</remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseMessage.UnprotectedHeaders" /> collections have one or more labels in common.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnprotectedHeaders">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Cose.CoseHeaderMap UnprotectedHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Cose.CoseHeaderMap UnprotectedHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Cose.CoseMessage.UnprotectedHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnprotectedHeaders As CoseHeaderMap" />
      <MemberSignature Language="F#" Value="member this.UnprotectedHeaders : System.Security.Cryptography.Cose.CoseHeaderMap" Usage="System.Security.Cryptography.Cose.CoseMessage.UnprotectedHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Cose::CoseHeaderMap ^ UnprotectedHeaders { System::Security::Cryptography::Cose::CoseHeaderMap ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Cose.CoseHeaderMap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the unprotected header parameters associated with this message.</summary>
        <value>A collection of unprotected header parameters associated with this message.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

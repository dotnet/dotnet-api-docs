<Type Name="CoseHeaderMap" FullName="System.Security.Cryptography.Cose.CoseHeaderMap">
  <TypeSignature Language="C#" Value="public sealed class CoseHeaderMap : System.Collections.Generic.IEnumerable&lt;(System.Security.Cryptography.Cose.CoseHeaderLabel, ReadOnlyMemory&lt;byte&gt;)&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CoseHeaderMap extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.ValueTuple`2&lt;valuetype System.Security.Cryptography.Cose.CoseHeaderLabel, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt;&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Cose.CoseHeaderMap" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CoseHeaderMap&#xA;Implements IEnumerable(Of ValueTuple(Of CoseHeaderLabel, ReadOnlyMemory(Of Byte)))" />
  <TypeSignature Language="F#" Value="type CoseHeaderMap = class&#xA;    interface seq&lt;ValueTuple&lt;CoseHeaderLabel, ReadOnlyMemory&lt;byte&gt;&gt;&gt;&#xA;    interface IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CoseHeaderMap sealed : System::Collections::Generic::IEnumerable&lt;ValueTuple&lt;System::Security::Cryptography::Cose::CoseHeaderLabel, ReadOnlyMemory&lt;System::Byte&gt;&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.ValueTuple&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.ReadOnlyMemory&lt;System.Byte&gt;&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CoseHeaderMap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CoseHeaderMap();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncodedValue">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;byte&gt; GetEncodedValue (System.Security.Cryptography.Cose.CoseHeaderLabel label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; GetEncodedValue(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.GetEncodedValue(System.Security.Cryptography.Cose.CoseHeaderLabel)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEncodedValue (label As CoseHeaderLabel) As ReadOnlyMemory(Of Byte)" />
      <MemberSignature Language="F#" Value="member this.GetEncodedValue : System.Security.Cryptography.Cose.CoseHeaderLabel -&gt; ReadOnlyMemory&lt;byte&gt;" Usage="coseHeaderMap.GetEncodedValue label" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlyMemory&lt;System::Byte&gt; GetEncodedValue(System::Security::Cryptography::Cose::CoseHeaderLabel label);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Cose.CoseHeaderMap.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Security.Cryptography.Cose.CoseHeaderMap/Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As CoseHeaderMap.Enumerator" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Security.Cryptography.Cose.CoseHeaderMap.Enumerator" Usage="coseHeaderMap.GetEnumerator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Cose::CoseHeaderMap::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Cose.CoseHeaderMap+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueAsBytes">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;byte&gt; GetValueAsBytes (System.Security.Cryptography.Cose.CoseHeaderLabel label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; GetValueAsBytes(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.GetValueAsBytes(System.Security.Cryptography.Cose.CoseHeaderLabel)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueAsBytes (label As CoseHeaderLabel) As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="F#" Value="member this.GetValueAsBytes : System.Security.Cryptography.Cose.CoseHeaderLabel -&gt; ReadOnlySpan&lt;byte&gt;" Usage="coseHeaderMap.GetValueAsBytes label" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlySpan&lt;System::Byte&gt; GetValueAsBytes(System::Security::Cryptography::Cose::CoseHeaderLabel label);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueAsInt32">
      <MemberSignature Language="C#" Value="public int GetValueAsInt32 (System.Security.Cryptography.Cose.CoseHeaderLabel label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetValueAsInt32(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.GetValueAsInt32(System.Security.Cryptography.Cose.CoseHeaderLabel)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueAsInt32 (label As CoseHeaderLabel) As Integer" />
      <MemberSignature Language="F#" Value="member this.GetValueAsInt32 : System.Security.Cryptography.Cose.CoseHeaderLabel -&gt; int" Usage="coseHeaderMap.GetValueAsInt32 label" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetValueAsInt32(System::Security::Cryptography::Cose::CoseHeaderLabel label);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueAsString">
      <MemberSignature Language="C#" Value="public string GetValueAsString (System.Security.Cryptography.Cose.CoseHeaderLabel label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetValueAsString(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.GetValueAsString(System.Security.Cryptography.Cose.CoseHeaderLabel)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueAsString (label As CoseHeaderLabel) As String" />
      <MemberSignature Language="F#" Value="member this.GetValueAsString : System.Security.Cryptography.Cose.CoseHeaderLabel -&gt; string" Usage="coseHeaderMap.GetValueAsString label" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetValueAsString(System::Security::Cryptography::Cose::CoseHeaderLabel label);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Cose.CoseHeaderMap.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Security.Cryptography.Cose.CoseHeaderMap.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Security.Cryptography.Cose.CoseHeaderLabel label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.Remove(System.Security.Cryptography.Cose.CoseHeaderLabel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (label As CoseHeaderLabel)" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Security.Cryptography.Cose.CoseHeaderLabel -&gt; unit" Usage="coseHeaderMap.Remove label" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Security::Cryptography::Cose::CoseHeaderLabel label);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEncodedValue">
      <MemberSignature Language="C#" Value="public void SetEncodedValue (System.Security.Cryptography.Cose.CoseHeaderLabel label, ReadOnlySpan&lt;byte&gt; encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEncodedValue(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel label, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.SetEncodedValue(System.Security.Cryptography.Cose.CoseHeaderLabel,System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEncodedValue (label As CoseHeaderLabel, encodedValue As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="F#" Value="member this.SetEncodedValue : System.Security.Cryptography.Cose.CoseHeaderLabel * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="coseHeaderMap.SetEncodedValue (label, encodedValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEncodedValue(System::Security::Cryptography::Cose::CoseHeaderLabel label, ReadOnlySpan&lt;System::Byte&gt; encodedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
        <Parameter Name="encodedValue" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="encodedValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (System.Security.Cryptography.Cose.CoseHeaderLabel label, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel label, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.SetValue(System.Security.Cryptography.Cose.CoseHeaderLabel,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (label As CoseHeaderLabel, value As Integer)" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Security.Cryptography.Cose.CoseHeaderLabel * int -&gt; unit" Usage="coseHeaderMap.SetValue (label, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Security::Cryptography::Cose::CoseHeaderLabel label, int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (System.Security.Cryptography.Cose.CoseHeaderLabel label, ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel label, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.SetValue(System.Security.Cryptography.Cose.CoseHeaderLabel,System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (label As CoseHeaderLabel, value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Security.Cryptography.Cose.CoseHeaderLabel * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="coseHeaderMap.SetValue (label, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Security::Cryptography::Cose::CoseHeaderLabel label, ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (System.Security.Cryptography.Cose.CoseHeaderLabel label, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel label, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.SetValue(System.Security.Cryptography.Cose.CoseHeaderLabel,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (label As CoseHeaderLabel, value As String)" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Security.Cryptography.Cose.CoseHeaderLabel * string -&gt; unit" Usage="coseHeaderMap.SetValue (label, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Security::Cryptography::Cose::CoseHeaderLabel label, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.ValueTuple&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.ReadOnlyMemory&lt;System.Byte&gt;&gt;&gt;.GetEnumerator" ExplicitInterfaceMemberName="System.Collections.Generic.IEnumerable&lt;(System.Security.Cryptography.Cose.CoseHeaderLabelLabel,System.ReadOnlyMemory&lt;System.Byte&gt;EncodedValue)&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;(System.Security.Cryptography.Cose.CoseHeaderLabel Label, ReadOnlyMemory&lt;byte&gt; EncodedValue)&gt; IEnumerable&lt;(CoseHeaderLabel, ReadOnlyMemory&lt;byte&gt;)&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.ValueTuple`2&lt;valuetype System.Security.Cryptography.Cose.CoseHeaderLabel, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt;&gt;&gt; System.Collections.Generic.IEnumerable&lt;(System.Security.Cryptography.Cose.CoseHeaderLabelLabel,System.ReadOnlyMemory&lt;System.Byte&gt;EncodedValue)&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.System#Collections#Generic#IEnumerable&lt;(System#Security#Cryptography#Cose#CoseHeaderLabelLabel,System#ReadOnlyMemory&lt;System#Byte&gt;EncodedValue)&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of ValueTuple(Of CoseHeaderLabel, ReadOnlyMemory(Of Byte))) Implements IEnumerable(Of ValueTuple(Of CoseHeaderLabel, ReadOnlyMemory(Of Byte))).GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEnumerable&lt;(System.Security.Cryptography.Cose.CoseHeaderLabelLabel,System.ReadOnlyMemory&lt;System.Byte&gt;EncodedValue)&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;ValueTuple&lt;System.Security.Cryptography.Cose.CoseHeaderLabel, ReadOnlyMemory&lt;byte&gt;&gt;&gt;&#xA;override this.System.Collections.Generic.IEnumerable&lt;(System.Security.Cryptography.Cose.CoseHeaderLabelLabel,System.ReadOnlyMemory&lt;System.Byte&gt;EncodedValue)&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;ValueTuple&lt;System.Security.Cryptography.Cose.CoseHeaderLabel, ReadOnlyMemory&lt;byte&gt;&gt;&gt;" Usage="coseHeaderMap.System.Collections.Generic.IEnumerable&lt;(System.Security.Cryptography.Cose.CoseHeaderLabelLabel,System.ReadOnlyMemory&lt;System.Byte&gt;EncodedValue)&gt;.GetEnumerator " />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;ValueTuple&lt;System::Security::Cryptography::Cose::CoseHeaderLabel, ReadOnlyMemory&lt;System::Byte&gt;&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;(System.Security.Cryptography.Cose.CoseHeaderLabelLabel,System.ReadOnlyMemory&lt;System.Byte&gt;EncodedValue)&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;ValueTuple&lt;System::Security::Cryptography::Cose::CoseHeaderLabel, ReadOnlyMemory&lt;System::Byte&gt;&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.ValueTuple&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.ReadOnlyMemory&lt;System.Byte&gt;&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Label", "EncodedValue" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Label", "EncodedValue" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="coseHeaderMap.System.Collections.IEnumerable.GetEnumerator " />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEncodedValue">
      <MemberSignature Language="C#" Value="public bool TryGetEncodedValue (System.Security.Cryptography.Cose.CoseHeaderLabel label, out ReadOnlyMemory&lt;byte&gt; encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEncodedValue(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel label, [out] valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt;&amp; encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.TryGetEncodedValue(System.Security.Cryptography.Cose.CoseHeaderLabel,System.ReadOnlyMemory{System.Byte}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEncodedValue (label As CoseHeaderLabel, ByRef encodedValue As ReadOnlyMemory(Of Byte)) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryGetEncodedValue : System.Security.Cryptography.Cose.CoseHeaderLabel * ReadOnlyMemory -&gt; bool" Usage="coseHeaderMap.TryGetEncodedValue (label, encodedValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEncodedValue(System::Security::Cryptography::Cose::CoseHeaderLabel label, [Runtime::InteropServices::Out] ReadOnlyMemory&lt;System::Byte&gt; % encodedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
        <Parameter Name="encodedValue" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="encodedValue">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="CoseHeaderMap" FullName="System.Security.Cryptography.Cose.CoseHeaderMap">
  <TypeSignature Language="C#" Value="public sealed class CoseHeaderMap : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;&gt;, System.Collections.Generic.IDictionary&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;&gt;, System.Collections.Generic.IReadOnlyDictionary&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CoseHeaderMap extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;valuetype System.Security.Cryptography.Cose.CoseHeaderLabel, valuetype System.Security.Cryptography.Cose.CoseHeaderValue&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;valuetype System.Security.Cryptography.Cose.CoseHeaderLabel, valuetype System.Security.Cryptography.Cose.CoseHeaderValue&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;valuetype System.Security.Cryptography.Cose.CoseHeaderLabel, valuetype System.Security.Cryptography.Cose.CoseHeaderValue&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;valuetype System.Security.Cryptography.Cose.CoseHeaderLabel, valuetype System.Security.Cryptography.Cose.CoseHeaderValue&gt;&gt;, class System.Collections.Generic.IReadOnlyDictionary`2&lt;valuetype System.Security.Cryptography.Cose.CoseHeaderLabel, valuetype System.Security.Cryptography.Cose.CoseHeaderValue&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Cose.CoseHeaderMap" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CoseHeaderMap&#xA;Implements ICollection(Of KeyValuePair(Of CoseHeaderLabel, CoseHeaderValue)), IDictionary(Of CoseHeaderLabel, CoseHeaderValue), IEnumerable(Of KeyValuePair(Of CoseHeaderLabel, CoseHeaderValue)), IReadOnlyCollection(Of KeyValuePair(Of CoseHeaderLabel, CoseHeaderValue)), IReadOnlyDictionary(Of CoseHeaderLabel, CoseHeaderValue)" />
  <TypeSignature Language="F#" Value="type CoseHeaderMap = class&#xA;    interface IDictionary&lt;CoseHeaderLabel, CoseHeaderValue&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;CoseHeaderLabel, CoseHeaderValue&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;CoseHeaderLabel, CoseHeaderValue&gt;&gt;&#xA;    interface IEnumerable&#xA;    interface IReadOnlyDictionary&lt;CoseHeaderLabel, CoseHeaderValue&gt;&#xA;    interface IReadOnlyCollection&lt;KeyValuePair&lt;CoseHeaderLabel, CoseHeaderValue&gt;&gt;" />
  <TypeSignature Language="C++ CLI" Value="public ref class CoseHeaderMap sealed : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::Security::Cryptography::Cose::CoseHeaderLabel, System::Security::Cryptography::Cose::CoseHeaderValue&gt;&gt;, System::Collections::Generic::IDictionary&lt;System::Security::Cryptography::Cose::CoseHeaderLabel, System::Security::Cryptography::Cose::CoseHeaderValue&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::Security::Cryptography::Cose::CoseHeaderLabel, System::Security::Cryptography::Cose::CoseHeaderValue&gt;&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Collections::Generic::KeyValuePair&lt;System::Security::Cryptography::Cose::CoseHeaderLabel, System::Security::Cryptography::Cose::CoseHeaderValue&gt;&gt;, System::Collections::Generic::IReadOnlyDictionary&lt;System::Security::Cryptography::Cose::CoseHeaderLabel, System::Security::Cryptography::Cose::CoseHeaderValue&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyDictionary&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents a collection of header parameters of a COSE message.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CoseHeaderMap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CoseHeaderMap();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Cose.CoseHeaderMap" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;valuetype System.Security.Cryptography.Cose.CoseHeaderLabel, valuetype System.Security.Cryptography.Cose.CoseHeaderValue&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.Add(System.Collections.Generic.KeyValuePair{System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As KeyValuePair(Of CoseHeaderLabel, CoseHeaderValue))" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel, System.Security.Cryptography.Cose.CoseHeaderValue&gt; -&gt; unit&#xA;override this.Add : System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel, System.Security.Cryptography.Cose.CoseHeaderValue&gt; -&gt; unit" Usage="coseHeaderMap.Add item" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Collections::Generic::KeyValuePair&lt;System::Security::Cryptography::Cose::CoseHeaderLabel, System::Security::Cryptography::Cose::CoseHeaderValue&gt; item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;" />
      </Parameters>
      <Docs>
        <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The header map is read-only.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="item" />'s value is not a valid CBOR value.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Security.Cryptography.Cose.CoseHeaderLabel label, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel label, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.Add(System.Security.Cryptography.Cose.CoseHeaderLabel,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (label As CoseHeaderLabel, value As Byte())" />
      <MemberSignature Language="F#" Value="member this.Add : System.Security.Cryptography.Cose.CoseHeaderLabel * byte[] -&gt; unit" Usage="coseHeaderMap.Add (label, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Security::Cryptography::Cose::CoseHeaderLabel label, cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="label">The label for the header to add.</param>
        <param name="value">The value of the header to add.</param>
        <summary>Adds the specified label and value to the header map.</summary>
        <remarks>
          <paramref name="value" /> does not need to contain a valid CBOR-encoded value, as it will be encoded as a CBOR byte string.
            To specify a CBOR-encoded value directly, see <see cref="M:System.Security.Cryptography.Cose.CoseHeaderValue.FromEncodedValue(System.ReadOnlySpan{System.Byte})" /> and <see cref="M:System.Security.Cryptography.Cose.CoseHeaderMap.Add(System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue)" />.</remarks>
        <exception cref="T:System.InvalidOperationException">The header map is read-only.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Security.Cryptography.Cose.CoseHeaderLabel label, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel label, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.Add(System.Security.Cryptography.Cose.CoseHeaderLabel,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (label As CoseHeaderLabel, value As Integer)" />
      <MemberSignature Language="F#" Value="member this.Add : System.Security.Cryptography.Cose.CoseHeaderLabel * int -&gt; unit" Usage="coseHeaderMap.Add (label, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Security::Cryptography::Cose::CoseHeaderLabel label, int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="label">The label for the header to add.</param>
        <param name="value">The value of the header to add.</param>
        <summary>Adds the specified label and value to the header map.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The header map is read-only.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Security.Cryptography.Cose.CoseHeaderLabel label, ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel label, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.Add(System.Security.Cryptography.Cose.CoseHeaderLabel,System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (label As CoseHeaderLabel, value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="F#" Value="member this.Add : System.Security.Cryptography.Cose.CoseHeaderLabel * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="coseHeaderMap.Add (label, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Security::Cryptography::Cose::CoseHeaderLabel label, ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="label">The label for the header to add.</param>
        <param name="value">The value of the header to add.</param>
        <summary>Adds the specified label and value to the header map.</summary>
        <remarks>
          <paramref name="value" /> does not need to contain a valid CBOR-encoded value, as it will be encoded as a CBOR byte string.
            To specify a CBOR-encoded value directly, see <see cref="M:System.Security.Cryptography.Cose.CoseHeaderValue.FromEncodedValue(System.ReadOnlySpan{System.Byte})" /> and <see cref="M:System.Security.Cryptography.Cose.CoseHeaderMap.Add(System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue)" />.</remarks>
        <exception cref="T:System.InvalidOperationException">The header map is read-only.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Security.Cryptography.Cose.CoseHeaderLabel key, System.Security.Cryptography.Cose.CoseHeaderValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel key, valuetype System.Security.Cryptography.Cose.CoseHeaderValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.Add(System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As CoseHeaderLabel, value As CoseHeaderValue)" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Security.Cryptography.Cose.CoseHeaderLabel * System.Security.Cryptography.Cose.CoseHeaderValue -&gt; unit&#xA;override this.Add : System.Security.Cryptography.Cose.CoseHeaderLabel * System.Security.Cryptography.Cose.CoseHeaderValue -&gt; unit" Usage="coseHeaderMap.Add (key, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Security::Cryptography::Cose::CoseHeaderLabel key, System::Security::Cryptography::Cose::CoseHeaderValue value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
        <Parameter Name="value" Type="System.Security.Cryptography.Cose.CoseHeaderValue" />
      </Parameters>
      <Docs>
        <param name="key">The object to use as the key of the element to add.</param>
        <param name="value">The object to use as the value of the element to add.</param>
        <summary>Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The header map is read-only.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> is not a valid CBOR value.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Security.Cryptography.Cose.CoseHeaderLabel label, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel label, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.Add(System.Security.Cryptography.Cose.CoseHeaderLabel,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (label As CoseHeaderLabel, value As String)" />
      <MemberSignature Language="F#" Value="member this.Add : System.Security.Cryptography.Cose.CoseHeaderLabel * string -&gt; unit" Usage="coseHeaderMap.Add (label, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Security::Cryptography::Cose::CoseHeaderLabel label, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="label">The label for the header to add.</param>
        <param name="value">The value of the header to add.</param>
        <summary>Adds the specified label and value to the header map.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The header map is read-only.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="coseHeaderMap.Clear " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The header map is read-only.</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;valuetype System.Security.Cryptography.Cose.CoseHeaderLabel, valuetype System.Security.Cryptography.Cose.CoseHeaderValue&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.Contains(System.Collections.Generic.KeyValuePair{System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue})" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As KeyValuePair(Of CoseHeaderLabel, CoseHeaderValue)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel, System.Security.Cryptography.Cose.CoseHeaderValue&gt; -&gt; bool&#xA;override this.Contains : System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel, System.Security.Cryptography.Cose.CoseHeaderValue&gt; -&gt; bool" Usage="coseHeaderMap.Contains item" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Collections::Generic::KeyValuePair&lt;System::Security::Cryptography::Cose::CoseHeaderLabel, System::Security::Cryptography::Cose::CoseHeaderValue&gt; item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;" />
      </Parameters>
      <Docs>
        <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.</summary>
        <returns>
          <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (System.Security.Cryptography.Cose.CoseHeaderLabel key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.ContainsKey(System.Security.Cryptography.Cose.CoseHeaderLabel)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As CoseHeaderLabel) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : System.Security.Cryptography.Cose.CoseHeaderLabel -&gt; bool&#xA;override this.ContainsKey : System.Security.Cryptography.Cose.CoseHeaderLabel -&gt; bool" Usage="coseHeaderMap.ContainsKey key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::Security::Cryptography::Cose::CoseHeaderLabel key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
      </Parameters>
      <Docs>
        <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
        <summary>Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.</summary>
        <returns>
          <see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the key; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;valuetype System.Security.Cryptography.Cose.CoseHeaderLabel, valuetype System.Security.Cryptography.Cose.CoseHeaderValue&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.CopyTo(System.Collections.Generic.KeyValuePair{System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of CoseHeaderLabel, CoseHeaderValue)(), arrayIndex As Integer)" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel, System.Security.Cryptography.Cose.CoseHeaderValue&gt;[] * int -&gt; unit&#xA;override this.CopyTo : System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel, System.Security.Cryptography.Cose.CoseHeaderValue&gt;[] * int -&gt; unit" Usage="coseHeaderMap.CopyTo (array, arrayIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::Security::Cryptography::Cose::CoseHeaderLabel, System::Security::Cryptography::Cose::CoseHeaderValue&gt;&gt; ^ array, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
        <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        <summary>Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Cose.CoseHeaderMap.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Security.Cryptography.Cose.CoseHeaderMap.Count" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
        <value>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;valuetype System.Security.Cryptography.Cose.CoseHeaderLabel, valuetype System.Security.Cryptography.Cose.CoseHeaderValue&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of CoseHeaderLabel, CoseHeaderValue))" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel, System.Security.Cryptography.Cose.CoseHeaderValue&gt;&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel, System.Security.Cryptography.Cose.CoseHeaderValue&gt;&gt;" Usage="coseHeaderMap.GetEnumerator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::Security::Cryptography::Cose::CoseHeaderLabel, System::Security::Cryptography::Cose::CoseHeaderValue&gt;&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through the collection.</summary>
        <returns>An enumerator that can be used to iterate through the collection.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetValueAsBytes">
      <MemberSignature Language="C#" Value="public byte[] GetValueAsBytes (System.Security.Cryptography.Cose.CoseHeaderLabel label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetValueAsBytes(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.GetValueAsBytes(System.Security.Cryptography.Cose.CoseHeaderLabel)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueAsBytes (label As CoseHeaderLabel) As Byte()" />
      <MemberSignature Language="F#" Value="member this.GetValueAsBytes : System.Security.Cryptography.Cose.CoseHeaderLabel -&gt; byte[]" Usage="coseHeaderMap.GetValueAsBytes label" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetValueAsBytes(System::Security::Cryptography::Cose::CoseHeaderLabel label);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
      </Parameters>
      <Docs>
        <param name="label">The label of the value to get.</param>
        <summary>Gets the value associated with the specified label, as a byte string.</summary>
        <returns>The value associated with the specified label, as a byte string.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The value could not be decoded as byte string.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValueAsBytes">
      <MemberSignature Language="C#" Value="public int GetValueAsBytes (System.Security.Cryptography.Cose.CoseHeaderLabel label, Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetValueAsBytes(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel label, valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.GetValueAsBytes(System.Security.Cryptography.Cose.CoseHeaderLabel,System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueAsBytes (label As CoseHeaderLabel, destination As Span(Of Byte)) As Integer" />
      <MemberSignature Language="F#" Value="member this.GetValueAsBytes : System.Security.Cryptography.Cose.CoseHeaderLabel * Span&lt;byte&gt; -&gt; int" Usage="coseHeaderMap.GetValueAsBytes (label, destination)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetValueAsBytes(System::Security::Cryptography::Cose::CoseHeaderLabel label, Span&lt;System::Byte&gt; destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="label">The label of the value to get.</param>
        <param name="destination">The buffer in which to write the value.</param>
        <summary>Gets the value associated with the specified label, as a byte string.</summary>
        <returns>The number of bytes written to <paramref name="destination" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destination" /> is too small to hold the value.</exception>
        <exception cref="T:System.InvalidOperationException">The value could not be decoded as byte string.</exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <paramref name="label" /> is not found.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValueAsInt32">
      <MemberSignature Language="C#" Value="public int GetValueAsInt32 (System.Security.Cryptography.Cose.CoseHeaderLabel label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetValueAsInt32(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.GetValueAsInt32(System.Security.Cryptography.Cose.CoseHeaderLabel)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueAsInt32 (label As CoseHeaderLabel) As Integer" />
      <MemberSignature Language="F#" Value="member this.GetValueAsInt32 : System.Security.Cryptography.Cose.CoseHeaderLabel -&gt; int" Usage="coseHeaderMap.GetValueAsInt32 label" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetValueAsInt32(System::Security::Cryptography::Cose::CoseHeaderLabel label);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
      </Parameters>
      <Docs>
        <param name="label">The label of the value to get.</param>
        <summary>Gets the value associated with the specified label, as a signed integer.</summary>
        <returns>The value associated with the specified label, as a signed integer.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The value could not be decoded as a 32-bit signed integer.</exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <paramref name="label" /> is not found.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValueAsString">
      <MemberSignature Language="C#" Value="public string GetValueAsString (System.Security.Cryptography.Cose.CoseHeaderLabel label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetValueAsString(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.GetValueAsString(System.Security.Cryptography.Cose.CoseHeaderLabel)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueAsString (label As CoseHeaderLabel) As String" />
      <MemberSignature Language="F#" Value="member this.GetValueAsString : System.Security.Cryptography.Cose.CoseHeaderLabel -&gt; string" Usage="coseHeaderMap.GetValueAsString label" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetValueAsString(System::Security::Cryptography::Cose::CoseHeaderLabel label);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
      </Parameters>
      <Docs>
        <param name="label">The label of the value to get.</param>
        <summary>Gets the value associated with the specified label, as a text string.</summary>
        <returns>The value associated with the specified label, as a text string.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The value could not be decoded as text string.</exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <paramref name="label" /> is not found.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Cose.CoseHeaderMap.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Security.Cryptography.Cose.CoseHeaderMap.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the header map is read-only.</summary>
        <value>
          <see langword="true" /> if the header map is read-only; otherwise, <see langword="false" /></value>
        <remarks>The "protected headers" collection in a COSE message is always read-only.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Cose.CoseHeaderValue this[System.Security.Cryptography.Cose.CoseHeaderLabel key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.Cose.CoseHeaderValue Item(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel)" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Cose.CoseHeaderMap.Item(System.Security.Cryptography.Cose.CoseHeaderLabel)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As CoseHeaderLabel) As CoseHeaderValue" />
      <MemberSignature Language="F#" Value="member this.Item(System.Security.Cryptography.Cose.CoseHeaderLabel) : System.Security.Cryptography.Cose.CoseHeaderValue with get, set" Usage="System.Security.Cryptography.Cose.CoseHeaderMap.Item" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Cose::CoseHeaderValue default[System::Security::Cryptography::Cose::CoseHeaderLabel] { System::Security::Cryptography::Cose::CoseHeaderValue get(System::Security::Cryptography::Cose::CoseHeaderLabel key); void set(System::Security::Cryptography::Cose::CoseHeaderLabel key, System::Security::Cryptography::Cose::CoseHeaderValue value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Cose.CoseHeaderValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
      </Parameters>
      <Docs>
        <param name="key">The key of the element to get or set.</param>
        <summary>Gets or sets the element with the specified key.</summary>
        <value>The element with the specified key.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The property is set and the <see cref="T:System.Security.Cryptography.Cose.CoseHeaderMap" /> is read-only.</exception>
        <exception cref="T:System.ArgumentException">The property is set and the encoded bytes in the specified <see cref="T:System.Security.Cryptography.Cose.CoseHeaderValue" /> contain trailing data or more than one CBOR value.</exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and <paramref name="key" /> is not found.</exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Security.Cryptography.Cose.CoseHeaderLabel&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;valuetype System.Security.Cryptography.Cose.CoseHeaderLabel&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Cose.CoseHeaderMap.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of CoseHeaderLabel)" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.ICollection&lt;System.Security.Cryptography.Cose.CoseHeaderLabel&gt;" Usage="System.Security.Cryptography.Cose.CoseHeaderMap.Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::Security::Cryptography::Cose::CoseHeaderLabel&gt; ^ Keys { System::Collections::Generic::ICollection&lt;System::Security::Cryptography::Cose::CoseHeaderLabel&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Security.Cryptography.Cose.CoseHeaderLabel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
        <value>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;valuetype System.Security.Cryptography.Cose.CoseHeaderLabel, valuetype System.Security.Cryptography.Cose.CoseHeaderValue&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.Remove(System.Collections.Generic.KeyValuePair{System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue})" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As KeyValuePair(Of CoseHeaderLabel, CoseHeaderValue)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel, System.Security.Cryptography.Cose.CoseHeaderValue&gt; -&gt; bool&#xA;override this.Remove : System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel, System.Security.Cryptography.Cose.CoseHeaderValue&gt; -&gt; bool" Usage="coseHeaderMap.Remove item" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Collections::Generic::KeyValuePair&lt;System::Security::Cryptography::Cose::CoseHeaderLabel, System::Security::Cryptography::Cose::CoseHeaderValue&gt; item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;" />
      </Parameters>
      <Docs>
        <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
        <returns>
          <see langword="true" /> if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />. This method also returns <see langword="false" /> if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The header map is read-only.</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Security.Cryptography.Cose.CoseHeaderLabel label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.Remove(System.Security.Cryptography.Cose.CoseHeaderLabel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (label As CoseHeaderLabel) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Security.Cryptography.Cose.CoseHeaderLabel -&gt; bool&#xA;override this.Remove : System.Security.Cryptography.Cose.CoseHeaderLabel -&gt; bool" Usage="coseHeaderMap.Remove label" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Security::Cryptography::Cose::CoseHeaderLabel label);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
      </Parameters>
      <Docs>
        <param name="label">The label of the element to remove.</param>
        <summary>Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
        <returns>
          <see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.  This method also returns <see langword="false" /> if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The header map is read-only.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Cose.CoseHeaderLabel&gt; System.Collections.Generic.IReadOnlyDictionary&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Security.Cryptography.Cose.CoseHeaderLabel&gt; System.Collections.Generic.IReadOnlyDictionary&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Cose.CoseHeaderMap.System#Collections#Generic#IReadOnlyDictionary&lt;System#Security#Cryptography#Cose#CoseHeaderLabel,System#Security#Cryptography#Cose#CoseHeaderValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As IEnumerable(Of CoseHeaderLabel) Implements IReadOnlyDictionary(Of CoseHeaderLabel, CoseHeaderValue).Keys" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.IReadOnlyDictionary&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;.Keys : seq&lt;System.Security.Cryptography.Cose.CoseHeaderLabel&gt;" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;System::Security::Cryptography::Cose::CoseHeaderLabel&gt; ^ System::Collections::Generic::IReadOnlyDictionary&lt;System::Security::Cryptography::Cose::CoseHeaderLabel,System::Security::Cryptography::Cose::CoseHeaderValue&gt;::Keys { System::Collections::Generic::IEnumerable&lt;System::Security::Cryptography::Cose::CoseHeaderLabel&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Cose.CoseHeaderLabel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an enumerable collection that contains the keys in the read-only dictionary.</summary>
        <value>An enumerable collection that contains the keys in the read-only dictionary.</value>
        <remarks>To be added.</remarks>
        <inheritdoc cref="P:System.Collections.Generic.IReadOnlyDictionary`2.Keys" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Cose.CoseHeaderValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Security.Cryptography.Cose.CoseHeaderValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Cose.CoseHeaderMap.System#Collections#Generic#IReadOnlyDictionary&lt;System#Security#Cryptography#Cose#CoseHeaderLabel,System#Security#Cryptography#Cose#CoseHeaderValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As IEnumerable(Of CoseHeaderValue) Implements IReadOnlyDictionary(Of CoseHeaderLabel, CoseHeaderValue).Values" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.IReadOnlyDictionary&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;.Values : seq&lt;System.Security.Cryptography.Cose.CoseHeaderValue&gt;" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue&gt;.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;System::Security::Cryptography::Cose::CoseHeaderValue&gt; ^ System::Collections::Generic::IReadOnlyDictionary&lt;System::Security::Cryptography::Cose::CoseHeaderLabel,System::Security::Cryptography::Cose::CoseHeaderValue&gt;::Values { System::Collections::Generic::IEnumerable&lt;System::Security::Cryptography::Cose::CoseHeaderValue&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Cose.CoseHeaderValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an enumerable collection that contains the values in the read-only dictionary.</summary>
        <value>An enumerable collection that contains the values in the read-only dictionary.</value>
        <remarks>To be added.</remarks>
        <inheritdoc cref="P:System.Collections.Generic.IReadOnlyDictionary`2.Values" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="coseHeaderMap.System.Collections.IEnumerable.GetEnumerator " />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through a collection.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This member is an explicit interface member implementation. It can be used only when the <xref:System.Security.Cryptography.Cose.CoseHeaderMap> instance is cast to an <xref:System.Collections.IEnumerable> interface.

          ]]></format>
        </remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (System.Security.Cryptography.Cose.CoseHeaderLabel key, out System.Security.Cryptography.Cose.CoseHeaderValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(valuetype System.Security.Cryptography.Cose.CoseHeaderLabel key, [out] valuetype System.Security.Cryptography.Cose.CoseHeaderValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Cose.CoseHeaderMap.TryGetValue(System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As CoseHeaderLabel, ByRef value As CoseHeaderValue) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : System.Security.Cryptography.Cose.CoseHeaderLabel * CoseHeaderValue -&gt; bool&#xA;override this.TryGetValue : System.Security.Cryptography.Cose.CoseHeaderLabel * CoseHeaderValue -&gt; bool" Usage="coseHeaderMap.TryGetValue (key, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(System::Security::Cryptography::Cose::CoseHeaderLabel key, [Runtime::InteropServices::Out] System::Security::Cryptography::Cose::CoseHeaderValue % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.Cose.CoseHeaderLabel" />
        <Parameter Name="value" Type="System.Security.Cryptography.Cose.CoseHeaderValue" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Security.Cryptography.Cose.CoseHeaderValue&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;valuetype System.Security.Cryptography.Cose.CoseHeaderValue&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Cose.CoseHeaderMap.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of CoseHeaderValue)" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.ICollection&lt;System.Security.Cryptography.Cose.CoseHeaderValue&gt;" Usage="System.Security.Cryptography.Cose.CoseHeaderMap.Values" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::Security::Cryptography::Cose::CoseHeaderValue&gt; ^ Values { System::Collections::Generic::ICollection&lt;System::Security::Cryptography::Cose::CoseHeaderValue&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cose</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Security.Cryptography.Cose.CoseHeaderValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
        <value>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

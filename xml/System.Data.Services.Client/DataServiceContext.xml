<Type Name="DataServiceContext" FullName="System.Data.Services.Client.DataServiceContext">
  <TypeSignature Language="C#" Value="public class DataServiceContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataServiceContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Client.DataServiceContext" />
  <TypeSignature Language="VB.NET" Value="Public Class DataServiceContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataServiceContext" />
  <TypeSignature Language="F#" Value="type DataServiceContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services.Client</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The <see cref="T:System.Data.Services.Client.DataServiceContext" /> represents the runtime context of the data service.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] are stateless, but the <xref:System.Data.Services.Client.DataServiceContext> is not. State on the client is maintained between interactions in order to support features such as update management. This class, and the <xref:System.Data.Services.Client.DataServiceQuery> class that represents a particular HTTP request to a data service, are the two main classes in the client library.  
  
   
  
## Examples  
 The following example shows how to use the <xref:System.Data.Services.Client.DataServiceContext> generated by the Add Service Reference tool to implicitly execute a query against the Northwind data service that returns all customers. The URI of the requested `Customers` entity set is determined automatically by the context. The query is executed implicitly when the enumeration occurs. The Northwind data service is created when you complete the [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#GetAllCustomers](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#getallcustomers)]
 [!code-vb[Astoria Northwind Client#GetAllCustomers](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#getallcustomers)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/21075e50-8917-413e-a8ea-35a0f6e65aa5">Working with .NET Framework Client Libraries (WCF Data Services)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceContext (Uri serviceRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri serviceRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceRoot As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceContext(Uri ^ serviceRoot);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceContext : Uri -&gt; System.Data.Services.Client.DataServiceContext" Usage="new System.Data.Services.Client.DataServiceContext serviceRoot" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceRoot" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="serviceRoot">An absolute URI that identifies the root of a data service.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceContext" /> class with the specified <paramref name="serviceRoot" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The client library expects the `baseURI` to point to the root of a data service, but it does not issue a request to validate it. If the `baseURI` does not identify the root of the service, the behavior of the client library is undefined.  
  
 A URI with a trailing slash is equivalent to one without the trailing character.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When the <paramref name="serviceRoot" /> is null.</exception>
        <exception cref="T:System.ArgumentException">If the <paramref name="serviceRoot" /> is not an absolute URI  
  
 -or-  
  
 If the <paramref name="serviceRoot" /> is a well formed URI without a query or query fragment.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddLink">
      <MemberSignature Language="C#" Value="public void AddLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AddLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.AddLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.AddLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">The source object for the new link.</param>
        <param name="sourceProperty">The name of the navigation property on the source object that returns the related object.</param>
        <param name="target">The object related to the source object by the new link.</param>
        <summary>Adds the specified link to the set of objects the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is tracking.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Notifies the <xref:System.Data.Services.Client.DataServiceContext> that a new link exists between the related source and target objects and that the link is represented by the specified source property. The <xref:System.Data.Services.Client.DataServiceContext> adds this link to the set of newly created links that will be sent to the data service on the next call to <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>.  
  
 Links are one-way relationships. Because associations are bi-directional, in a one-to-one association you must call either <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> again to create the reverse link, and in a many-to-one association you must call <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> to create a reference link to the "one" end of the association.  
  
 The target object must be of the type identified by the `sourceProperty` parameter or a subtype of the type.  
  
   
  
## Examples  
 The following example shows how to use the <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> and <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> methods to create links that define relationships. In this example, the navigation properties on the `Order_Details` object are also explicitly set. This example uses the <xref:System.Data.Services.Client.DataServiceContext> generated by the Add Service Reference tool based on the Northwind data service, which is created when you complete the [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#addorderdetailtoorder)]
 [!code-vb[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#addorderdetailtoorder)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="source" />, <paramref name="sourceProperty" />, or <paramref name="target" /> are null.</exception>
        <exception cref="T:System.InvalidOperationException">If a link already exists.  
  
 -or-  
  
 If either the <paramref name="source" /> or <paramref name="target" /> objects are in a <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> or <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> state.  
  
 -or-  
  
 If <paramref name="sourceProperty" /> is not a collection.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public void AddObject (string entitySetName, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddObject(string entitySetName, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AddObject(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddObject (entitySetName As String, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddObject(System::String ^ entitySetName, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.AddObject : string * obj -&gt; unit" Usage="dataServiceContext.AddObject (entitySetName, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entitySetName">The name of the entity set to which the resource will be added.</param>
        <param name="entity">The object to be tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</param>
        <summary>Adds the specified object to the set of objects that the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is tracking.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The object is put into the tracking set of the <xref:System.Data.Services.Client.DataServiceContext> in the <xref:System.Data.Services.Client.EntityStates.Added> state. The <xref:System.Data.Services.Client.DataServiceContext> will try to insert the object by HTTP POST on the next call to <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>. This method does not add objects related to the specified entity to the <xref:System.Data.Services.Client.DataServiceContext>. Each object must be added through a separate call to <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>.  
  
 The method does not validate that the entity set specified is in the data service associated with the <xref:System.Data.Services.Client.DataServiceContext> or that the added object has the required properties needed to be added to the specified `entity set`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="entitySetName" /> or <paramref name="entity" /> is null.</exception>
        <exception cref="T:System.ArgumentException">When <paramref name="entitySetName" /> is empty.  
  
 -or-  
  
 When <paramref name="entity" /> does not have a key property defined.</exception>
        <exception cref="T:System.InvalidOperationException">When the entity is already being tracked by the context.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRelatedObject">
      <MemberSignature Language="C#" Value="public void AddRelatedObject (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRelatedObject(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AddRelatedObject(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRelatedObject (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRelatedObject(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.AddRelatedObject : obj * string * obj -&gt; unit" Usage="dataServiceContext.AddRelatedObject (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">The parent object that is being tracked by the context.</param>
        <param name="sourceProperty">The name of the navigation property that returns the related object based on an association between the two entities.</param>
        <param name="target">The related object that is being added.</param>
        <summary>Adds a related object to the context and creates the link that defines the relationship between the two objects in a single request.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can call the <xref:System.Data.Services.Client.DataServiceContext.AddRelatedObject%2A> method to add a related object instead of calling these three methods: <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyingChanges">
      <MemberSignature Language="C#" Value="public bool ApplyingChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyingChanges" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.ApplyingChanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplyingChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyingChanges { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplyingChanges : bool" Usage="System.Data.Services.Client.DataServiceContext.ApplyingChanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is currently applying changes to tracked objects.</summary>
        <value>Returns <see langword="true" /> when changes are currently being applied; otherwise returns <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachLink">
      <MemberSignature Language="C#" Value="public void AttachLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AttachLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.AttachLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.AttachLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">The source object in the new link.</param>
        <param name="sourceProperty">The name of the property on the source object that represents the link between the source and target object.</param>
        <param name="target">The target object in the link that is bound to the source object specified in this call. The target object must be of the type identified by the source property or a subtype.</param>
        <summary>Notifies the <see cref="T:System.Data.Services.Client.DataServiceContext" /> to start tracking the specified link that defines a relationship between entity objects.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="source" />, <paramref name="sourceProperty" />, or <paramref name="target" /> is null.</exception>
        <exception cref="T:System.InvalidOperationException">When the link between the two entities already exists.  
  
 -or-  
  
 When <paramref name="source" /> or <paramref name="target" /> is in an <see cref="F:System.Data.Services.Client.EntityStates.Added" /> or <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> state.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AttachTo">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Notifies the <see cref="T:System.Data.Services.Client.DataServiceContext" /> to start tracking the specified resource and supplies the location of the resource in the specified resource set.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AttachTo">
      <MemberSignature Language="C#" Value="public void AttachTo (string entitySetName, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachTo(string entitySetName, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachTo (entitySetName As String, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachTo(System::String ^ entitySetName, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.AttachTo : string * obj -&gt; unit" Usage="dataServiceContext.AttachTo (entitySetName, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entitySetName">The name of the set that contains the resource.</param>
        <param name="entity">The resource to be tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />. The resource is attached in the Unchanged state.</param>
        <summary>Notifies the <see cref="T:System.Data.Services.Client.DataServiceContext" /> to start tracking the specified resource and supplies the location of the resource within the specified resource set.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the entity is part of an object graph, this operation does not traverse the graph to add related objects. It is a shallow operation.  
  
 The method does not validate whether the specified entity set occurs in the data service associated with the <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> or <paramref name="entitySetName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">When <paramref name="entitySetName" /> is an empty string.  
  
 -or-  
  
 When the <paramref name="entity" /> does not have a key property defined.</exception>
        <exception cref="T:System.InvalidOperationException">When the <paramref name="entity" /> is already being tracked by the context.</exception>
      </Docs>
    </Member>
    <Member MemberName="AttachTo">
      <MemberSignature Language="C#" Value="public void AttachTo (string entitySetName, object entity, string etag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachTo(string entitySetName, object entity, string etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachTo (entitySetName As String, entity As Object, etag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachTo(System::String ^ entitySetName, System::Object ^ entity, System::String ^ etag);" />
      <MemberSignature Language="F#" Value="member this.AttachTo : string * obj * string -&gt; unit" Usage="dataServiceContext.AttachTo (entitySetName, entity, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="etag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entitySetName">The string value that contains the name of the entity set to which to the entity is attached.</param>
        <param name="entity">The entity to add.</param>
        <param name="etag">An etag value that represents the state of the entity the last time it was retrieved from the data service. This value is treated as an opaque string; no validation is performed on it by the client library.</param>
        <summary>Notifies the <see cref="T:System.Data.Services.Client.DataServiceContext" /> to start tracking the specified resource and supplies the location of the resource in the specified resource set.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Calling this method notifies the <xref:System.Data.Services.Client.DataServiceContext> to start tracking the specified entity and identifies the entity set to which the entity belongs.  
  
 If the entity is part of an object graph, this operation does not traverse the graph to add related objects. The object is added to the <xref:System.Data.Services.Client.DataServiceContext> in the unchanged state. The method does not validate whether the entity set specified occurs in the data service associated with the <xref:System.Data.Services.Client.DataServiceContext>.  
  
 If the overload with an etag is used, the specified etag is associated with the newly attached entity. The etag is then sent to the data service, with all subsequent update or query operations for the entity, according to HTTP semantics. Manual generation of etag values is not recommended, but this overload is provided to enable entities that may have been serialized and stored to be reattached together with relevant concurrency metadata.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="entitySetName" /> is <see langword="null" />.  
  
 -or-  
  
 When <paramref name="entity" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">When <paramref name="entitySetName" /> is an empty string.  
  
 -or-  
  
 When the supplied object does not have a key property.</exception>
        <exception cref="T:System.InvalidOperationException">When the supplied object is already being tracked by the context</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri" Usage="System.Data.Services.Client.DataServiceContext.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the absolute URI identifying the root of the target data service.</summary>
        <value>An absolute URI that identifies the root of a T data service.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A URI provided with a trailing slash is equivalent to one without the trailing character.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecute&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Asynchronously sends a request to the data service to execute a specific URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute&lt;T&gt; (System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; continuation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute&lt;T&gt;(class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!!T&gt; continuation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute(Of T) (continuation As DataServiceQueryContinuation(Of T), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; IAsyncResult ^ BeginExecute(System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ continuation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginExecute (continuation, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type returned by the query.</typeparam>
        <param name="continuation">A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that represents the next page of data to return from the data service.</param>
        <param name="callback">Delegate to invoke when results are available for client consumption.</param>
        <param name="state">User-defined state object passed to the callback.</param>
        <summary>Asynchronously sends a request to the data service to retrieve the next page of data in a paged query result.</summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that represents the status of the operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The supplied <xref:System.Data.Services.Client.DataServiceQueryContinuation%601> object contains the URI that, when executed, returns the next page of data in the query result.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute&lt;TElement&gt; (Uri requestUri, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute&lt;TElement&gt;(class System.Uri requestUri, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Uri,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute(Of TElement) (requestUri As Uri, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; IAsyncResult ^ BeginExecute(Uri ^ requestUri, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : Uri * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginExecute (requestUri, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">The type returned by the query.</typeparam>
        <param name="requestUri">The URI to which the query request will be sent. The URI may be any valid data service URI; it can contain <c>$</c> query parameters.</param>
        <param name="callback">Delegate to invoke when results are available for client consumption.</param>
        <param name="state">User-defined state object passed to the callback.</param>
        <summary>Asynchronously sends the request so that this call does not block processing while waiting for the results from the service.</summary>
        <returns>An object that is used to track the status of the asynchronous operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The returned <xref:System.IAsyncResult> object is used to determine when the asynchronous operation has completed. For more information, see [Asynchronous Operations](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md).  
  
 The method <xref:System.Data.Services.Client.DataServiceContext.BeginExecute%2A> uses the same semantics as <xref:System.Data.Services.Client.DataServiceContext.Execute%2A>, however this method asynchronously sends the request so that this call does not block processing while waiting for the results from the service. According to the standard begin-end asynchronous pattern, the provided callback is invoked when query results are retrieved.  
  
   
  
## Examples  
 The following example shows how to execute an asynchronous query by calling the <xref:System.Data.Services.Client.DataServiceQuery%601.BeginExecute%2A> method to start the query. The inline delegate calls the <xref:System.Data.Services.Client.DataServiceQuery%601.EndExecute%2A> method to display the query results. This example uses the <xref:System.Data.Services.Client.DataServiceContext> generated by the Add Service Reference tool based on the Northwind data service, which is created when you complete the [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#executequeryasync)]
 [!code-vb[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#executequeryasync)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/902a2dc1-d0e9-4b00-90a8-becc4cb1f6a7">How to: Execute Asynchronous Data Service Queries (WCF Data Services)</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteBatch">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteBatch (AsyncCallback callback, object state, params System.Data.Services.Client.DataServiceRequest[] queries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteBatch(class System.AsyncCallback callback, object state, class System.Data.Services.Client.DataServiceRequest[] queries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginExecuteBatch(System.AsyncCallback,System.Object,System.Data.Services.Client.DataServiceRequest[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteBatch (callback As AsyncCallback, state As Object, ParamArray queries As DataServiceRequest()) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteBatch(AsyncCallback ^ callback, System::Object ^ state, ... cli::array &lt;System::Data::Services::Client::DataServiceRequest ^&gt; ^ queries);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteBatch : AsyncCallback * obj * System.Data.Services.Client.DataServiceRequest[] -&gt; IAsyncResult" Usage="dataServiceContext.BeginExecuteBatch (callback, state, queries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="queries" Type="System.Data.Services.Client.DataServiceRequest[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="callback">The delegate that is called when a response to the batch request is received.</param>
        <param name="state">User-defined state object that is used to pass context data to the callback method.</param>
        <param name="queries">The array of query requests to include in the batch request.</param>
        <summary>Asynchronously submits a group of queries as a batch to the data service.</summary>
        <returns>An <see cref="T:System.IAsyncResult" /> object that is used to track the status of the asynchronous operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The returned <xref:System.IAsyncResult> object is used to determine when the asynchronous operation has completed. For more information, see [Asynchronous Operations](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md).  
  
 The queries are specified as <xref:System.Data.Services.Client.DataServiceRequest%601> instances. Returns a <xref:System.Data.Services.Client.DataServiceResponse> that represents the response of the batch request as a whole. Individual query responses are represented as <xref:System.Data.Services.Client.DataServiceResponse> objects that can be accessed by enumerating the <xref:System.Data.Services.Client.DataServiceResponse> instance.  
  
 When this method returns, all of the HTTP response for the batch request has been read from the network stream but the responses have not been processed. No identity resolution or object materialization occurs for a specified entity in the response until it is enumerated.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetReadStream">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetReadStream (object entity, System.Data.Services.Client.DataServiceRequestArgs args, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetReadStream(object entity, class System.Data.Services.Client.DataServiceRequestArgs args, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginGetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetReadStream (entity As Object, args As DataServiceRequestArgs, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetReadStream(System::Object ^ entity, System::Data::Services::Client::DataServiceRequestArgs ^ args, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetReadStream : obj * System.Data.Services.Client.DataServiceRequestArgs * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginGetReadStream (entity, args, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="args" Type="System.Data.Services.Client.DataServiceRequestArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that has the binary property to retrieve.</param>
        <param name="args">Instance of the <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> class that contains settings for the HTTP request message.</param>
        <param name="callback">Delegate to invoke when results are available for client consumption.</param>
        <param name="state">User-defined state object passed to the callback.</param>
        <summary>Asynchronously gets binary property data for the specified entity as a data stream along with the specified message headers.</summary>
        <returns>An <see cref="T:System.IAsyncResult" /> object that is used to track the status of the asynchronous operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A> method asynchronously requests a data stream that contains the binary property of the requested `entity`.  
  
 In the AtomPub protocol, the `entity` is a Media Link Entry and the binary property is the associated Media Resource.  
  
 No validation is performed on the headers that are set in `args`. Therefore, do not change an HTTP header in a way that changes the meaning of the request.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Any of the parameters supplied to the method is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" />.  
  
 -or-  
  
 The <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.  
  
 -or-  
  
 The <paramref name="entity" /> is not a Media Link Entry and does not have a binary property.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoadProperty">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Begins the operation to load the value of the specified property from the data service.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoadProperty">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadProperty (object entity, string propertyName, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadProperty(object entity, string propertyName, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadProperty (entity As Object, propertyName As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadProperty(System::Object ^ entity, System::String ^ propertyName, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadProperty : obj * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginLoadProperty (entity, propertyName, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that contains the property to load.</param>
        <param name="propertyName">The name of the property on the specified entity to load.</param>
        <param name="callback">The delegate called when a response to the request is received.</param>
        <param name="state">The user-defined state object that is used to pass context data to the callback method.</param>
        <summary>Asynchronously loads the value of the specified property from the data service.</summary>
        <returns>An <see langword="IAsyncResult" /> that represents the status of the asynchronous operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Calling this method invokes a network operation to retrieve the value of a property. The property specified may be any one of the properties on an entity, including properties which represent associations or links. If the property represents an association or link or a deferred property, calling this method provides the client with a way to lazily load related resources. If the entity is in the modified state, the property value loads related entities and marks them and any links as unchanged.  
  
 If the property is already loaded, calling this method lets you refresh the value of the property.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadProperty">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadProperty (object entity, string propertyName, System.Data.Services.Client.DataServiceQueryContinuation continuation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadProperty(object entity, string propertyName, class System.Data.Services.Client.DataServiceQueryContinuation continuation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadProperty (entity As Object, propertyName As String, continuation As DataServiceQueryContinuation, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadProperty(System::Object ^ entity, System::String ^ propertyName, System::Data::Services::Client::DataServiceQueryContinuation ^ continuation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadProperty : obj * string * System.Data.Services.Client.DataServiceQueryContinuation * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginLoadProperty (entity, propertyName, continuation, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that contains the property to load.</param>
        <param name="propertyName">The name of the property of the specified entity to load.</param>
        <param name="continuation">A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that represents the next page of related entity data to return from the data service.</param>
        <param name="callback">Delegate to invoke when results are available for client consumption.</param>
        <param name="state">User-defined state object passed to the callback.</param>
        <summary>Asynchronously loads the next page of related entities from the data service by using the supplied query continuation object.</summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that represents the status of the operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The supplied <xref:System.Data.Services.Client.DataServiceQueryContinuation%601> object contains the URI that, when executed, returns the next page of data in the query result.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadProperty">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadProperty (object entity, string propertyName, Uri nextLinkUri, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadProperty(object entity, string propertyName, class System.Uri nextLinkUri, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Uri,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadProperty (entity As Object, propertyName As String, nextLinkUri As Uri, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadProperty(System::Object ^ entity, System::String ^ propertyName, Uri ^ nextLinkUri, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadProperty : obj * string * Uri * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginLoadProperty (entity, propertyName, nextLinkUri, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="nextLinkUri" Type="System.Uri" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that contains the property to load.</param>
        <param name="propertyName">The name of the property of the specified entity to load.</param>
        <param name="nextLinkUri">The URI used to load the next results page.</param>
        <param name="callback">Delegate to invoke when results are available for client consumption.</param>
        <param name="state">User-defined state object passed to the callback.</param>
        <summary>Asynchronously loads a page of related entities from the data service by using the supplied next link URI.</summary>
        <returns>An <see cref="T:System.IAsyncResult" /> object that is used to track the status of the asynchronous operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When `entity` is in an <xref:System.Data.Services.Client.EntityStates.Unchanged> or <xref:System.Data.Services.Client.EntityStates.Modified> state, the related entities are loaded in the <xref:System.Data.Services.Client.EntityStates.Unchanged> state, and the links between the entities are also created in an <xref:System.Data.Services.Client.EntityStates.Unchanged> state.  
  
 When `entity` is in a <xref:System.Data.Services.Client.EntityStates.Deleted> state, the related entities are loaded in the <xref:System.Data.Services.Client.EntityStates.Unchanged> state, and the links between the entities are created in the <xref:System.Data.Services.Client.EntityStates.Deleted> state.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSaveChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Submits the pending changes to the data service collected by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> since the last time changes were saved.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSaveChanges">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSaveChanges (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSaveChanges(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSaveChanges (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSaveChanges(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSaveChanges : AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginSaveChanges (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">The delegate to call when the operation is completed.</param>
        <param name="state">The user-defined state object that is used to pass context data to the callback method.</param>
        <summary>Asynchronously submits the pending changes to the data service collected by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> since the last time changes were saved.</summary>
        <returns>An <see langword="IAsyncResult" /> that represents the status of the asynchronous operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Changes are added to the <xref:System.Data.Services.Client.DataServiceContext> by calling the <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.AttachTo%2A>, <xref:System.Data.Services.Client.DataServiceContext.AttachLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.Detach%2A>, or <xref:System.Data.Services.Client.DataServiceContext.DetachLink%2A>.  
  
 Changes are sent to the data service, as with the <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> method, one change operation per HTTP request.  
  
 If an error occurs while processing an operation, no additional operations are processed by the data service. Instead, a response is generated telling the client what operations were executed, the results, and which operations were not tried because of an error.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSaveChanges">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSaveChanges (System.Data.Services.Client.SaveChangesOptions options, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSaveChanges(valuetype System.Data.Services.Client.SaveChangesOptions options, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.Data.Services.Client.SaveChangesOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSaveChanges (options As SaveChangesOptions, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSaveChanges(System::Data::Services::Client::SaveChangesOptions options, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSaveChanges : System.Data.Services.Client.SaveChangesOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginSaveChanges (options, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Data.Services.Client.SaveChangesOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="options">The options for how the client can save the pending set of changes.</param>
        <param name="callback">The delegate to call when the operation is completed.</param>
        <param name="state">The user-defined state object that is used to pass context data to the callback method.</param>
        <summary>Asynchronously submits the pending changes to the data service collected by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> since the last time changes were saved.</summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Changes are added to the <xref:System.Data.Services.Client.DataServiceContext> by calling the <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.AttachTo%2A>, <xref:System.Data.Services.Client.DataServiceContext.AttachLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.Detach%2A>, or <xref:System.Data.Services.Client.DataServiceContext.DetachLink%2A>.  
  
 If <xref:System.Data.Services.Client.SaveChangesOptions.Batch> is set, all pending changes are included in a single change set in a batch and submitted to the data service in a single HTTP request. This requires that the target service supports batching.  
  
 If <xref:System.Data.Services.Client.SaveChangesOptions.Batch> is not set:  
  
-   Changes are sent to the data service such as in the <xref:System.Data.Services.Client.DataServiceContext.SaveChanges> method: one operation to one HTTP request.  
  
-   The <xref:System.Data.Services.Client.OperationResponse.StatusCode%2A> is always 200.  
  
-   The <xref:System.Data.Services.Client.OperationResponse.Headers%2A> property returns an empty collection.  
  
 If <xref:System.Data.Services.Client.SaveChangesOptions.ContinueOnError> is set:  
  
-   If an error occurs processing an operation in a change set, the subsequent operations in the change set will not be tried; however, the data service will continue to process the next change set in the batch.  
  
-   This option cannot be set when <xref:System.Data.Services.Client.SaveChangesOptions.Batch> is set because when batching is enabled, all operations are positioned in a single change set.  
  
 If <xref:System.Data.Services.Client.SaveChangesOptions.ContinueOnError> is not set:  
  
-   If an error occurs while processing an operation, no additional operations are processed by the data service.  
  
 A response is generated telling the client which operations were executed, their results, and what operations were not tried because of the error.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelRequest">
      <MemberSignature Language="C#" Value="public void CancelRequest (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelRequest(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.CancelRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelRequest (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelRequest(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.CancelRequest : IAsyncResult -&gt; unit" Usage="dataServiceContext.CancelRequest asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> object from the operation being canceled.</param>
        <summary>Attempts to cancel the operation that is associated with the supplied <see cref="T:System.IAsyncResult" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.IAsyncResult> object passed to the `asyncResult` parameter is the object returned when an operation is executed asynchronously. For more information, see [Asynchronous Operations](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md).Until this request is processed, the <xref:System.Data.Services.Client.DataServiceContext> instance is not in a predictable state. The <xref:System.Data.Services.Client.DataServiceContext> can be safely used when the <xref:System.IAsyncResult.IsCompleted%2A> property of the `asyncResult` returns a value of `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQuery&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceQuery&lt;T&gt; CreateQuery&lt;T&gt; (string entitySetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceQuery`1&lt;!!T&gt; CreateQuery&lt;T&gt;(string entitySetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.CreateQuery``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateQuery(Of T) (entitySetName As String) As DataServiceQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Data::Services::Client::DataServiceQuery&lt;T&gt; ^ CreateQuery(System::String ^ entitySetName);" />
      <MemberSignature Language="F#" Value="member this.CreateQuery : string -&gt; System.Data.Services.Client.DataServiceQuery&lt;'T&gt;" Usage="dataServiceContext.CreateQuery entitySetName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type returned by the query</typeparam>
        <param name="entitySetName">A string that resolves to a URI.</param>
        <summary>Creates a data service query for data of a specified generic type.</summary>
        <returns>A new <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> instance that represents a data service query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Data.Services.Client.DataServiceContext.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the authentication information that is used by each query created by using the <see cref="T:System.Data.Services.Client.DataServiceContext" /> object.</summary>
        <value>The base authentication interface for retrieving credentials for Web client authentication.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataNamespace">
      <MemberSignature Language="C#" Value="public string DataNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.DataNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property DataNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataNamespace : string with get, set" Usage="System.Data.Services.Client.DataServiceContext.DataNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the XML namespace for data items, not metadata items, of an Atom payload.</summary>
        <value>A string representing the XML namespace for data items of a payload in the ATOM format.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default value of this property is the default [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] namespace: `http://schemas.microsoft.com/ado/2007/08/dataservices`.  
  
 This property affects both the namespace that is used for parsing content from the data service and the namespace used to generate content sent to the data service.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteLink">
      <MemberSignature Language="C#" Value="public void DeleteLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.DeleteLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.DeleteLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.DeleteLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">The source object in the link to be marked for deletion.</param>
        <param name="sourceProperty">The name of the navigation property on the source object that is used to access the target object.</param>
        <param name="target">The target object involved in the link that is bound to the source object. The target object must be of the type identified by the source property or a subtype.</param>
        <summary>Changes the state of the link to deleted in the list of links being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Any link being tracked by the <xref:System.Data.Services.Client.DataServiceContext>, regardless of its current state, can be detached.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="source" />, <paramref name="sourceProperty" />, or <paramref name="target" /> is null.</exception>
        <exception cref="T:System.InvalidOperationException">When <paramref name="source" /> or <paramref name="target" /> is in a <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> or <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.  
  
 -or-  
  
 When <paramref name="sourceProperty" /> is not a collection.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteObject">
      <MemberSignature Language="C#" Value="public void DeleteObject (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteObject(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.DeleteObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteObject (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteObject(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.DeleteObject : obj -&gt; unit" Usage="dataServiceContext.DeleteObject entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The tracked entity to be changed to the deleted state.</param>
        <summary>Changes the state of the specified object to be deleted in the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 All links to the specified entity are also marked deleted.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">When the object is not being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public bool Detach (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Detach(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.Detach(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Detach (entity As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Detach(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.Detach : obj -&gt; bool" Usage="dataServiceContext.Detach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The tracked entity to be detached from the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</param>
        <summary>Removes the entity from the list of entities that the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is tracking.</summary>
        <returns>Returns <see langword="true" /> if the specified entity was detached; otherwise <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Once an object is detached, it is no longer tracked by the <xref:System.Data.Services.Client.DataServiceContext>.  
  
 The <xref:System.Data.Services.Client.DataServiceContext.Detach%2A> method can be called to detach any object, regardless of its <xref:System.Data.Services.Client.EntityStates>.  
  
 After detaching the specified entity, this method also detaches any links related to the entity.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DetachLink">
      <MemberSignature Language="C#" Value="public bool DetachLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DetachLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.DetachLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DetachLink (source As Object, sourceProperty As String, target As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DetachLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.DetachLink : obj * string * obj -&gt; bool" Usage="dataServiceContext.DetachLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">The source object participating in the link to be marked for deletion.</param>
        <param name="sourceProperty">The name of the property on the source object that represents the source in the link between the source and the target.</param>
        <param name="target">The target object involved in the link that is bound to the source object. The target object must be of the type identified by the source property or a subtype.</param>
        <summary>Removes the specified link from the list of links being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <returns>Returns true if the specified entity was detached; otherwise <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Any link being tracked by the <xref:System.Data.Services.Client.DataServiceContext>, regardless of its current state, can be detached.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="source" /> or <paramref name="sourceProperty" /> are <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">When <paramref name="sourceProperty" /> is an empty string.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndExecute&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TElement&gt; EndExecute&lt;TElement&gt; (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt; EndExecute&lt;TElement&gt;(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndExecute``1(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecute(Of TElement) (asyncResult As IAsyncResult) As IEnumerable(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TElement&gt; ^ EndExecute(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecute : IAsyncResult -&gt; seq&lt;'Element&gt;" Usage="dataServiceContext.EndExecute asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">The type returned by the query.</typeparam>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> object.</param>
        <summary>Called to complete the <see cref="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Uri,System.AsyncCallback,System.Object)" />.</summary>
        <returns>The results returned by the query operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 According to the standard begin-end asynchronous pattern, the provided callback is invoked when query results are retrieved. For more information, see [Asynchronous Operations](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md).  
  
 When the callback is invoked, all results have been read from the HTTP stream, but they have not been processed; no local user-facing objects have been materialized or modified and identity resolution has not occurred. When <xref:System.Data.Services.Client.DataServiceContext.EndExecute%2A> is invoked, a <xref:System.Data.Services.Client.DataServiceResponse> is created and returned but the results still have not been processed. Identity resolution, object materialization, and manipulation occur only when the user enumerates the results.  
  
   
  
## Examples  
 The following example shows how to execute an asynchronous query by calling the <xref:System.Data.Services.Client.DataServiceQuery%601.BeginExecute%2A> method to start the query. The inline delegate calls the <xref:System.Data.Services.Client.DataServiceQuery%601.EndExecute%2A> method to display the query results. This example uses the <xref:System.Data.Services.Client.DataServiceContext> generated by the Add Service Reference tool based on the Northwind data service, which is created when you complete the [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#executequeryasync)]
 [!code-vb[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#executequeryasync)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="asyncResult" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">When <paramref name="asyncResult" /> did not originate from this <see cref="T:System.Data.Services.Client.DataServiceContext" /> instance.  
  
 -or-  
  
 When the <see cref="M:System.Data.Services.Client.DataServiceContext.EndExecute``1(System.IAsyncResult)" /> method was previously called.</exception>
        <exception cref="T:System.InvalidOperationException">When an error is raised either during execution of the request or when it converts the contents of the response message into objects.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/902a2dc1-d0e9-4b00-90a8-becc4cb1f6a7">How to: Execute Asynchronous Data Service Queries (WCF Data Services)</related>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteBatch">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse EndExecuteBatch (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse EndExecuteBatch(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndExecuteBatch(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteBatch (asyncResult As IAsyncResult) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ EndExecuteBatch(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteBatch : IAsyncResult -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.EndExecuteBatch asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation.</param>
        <summary>Called to complete the <see cref="M:System.Data.Services.Client.DataServiceContext.BeginExecuteBatch(System.AsyncCallback,System.Object,System.Data.Services.Client.DataServiceRequest[])" />.</summary>
        <returns>The <see langword="DataServiceResult" /> object that indicates the result of the batch operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Submits a group of queries as a batch to the data service. Individual query responses are represented as <xref:System.Data.Services.Client.DataServiceResponse> objects derived from <xref:System.Data.Services.Client.OperationResponse> that can be accessed from the <xref:System.Data.Services.Client.DataServiceResponse> instance.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse EndGetReadStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse EndGetReadStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndGetReadStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetReadStream (asyncResult As IAsyncResult) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ EndGetReadStream(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetReadStream : IAsyncResult -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.EndGetReadStream asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">The result from the <see cref="M:System.Data.Services.Client.DataServiceContext.BeginGetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.AsyncCallback,System.Object)" /> operation that contains the binary data stream.</param>
        <summary>Called to complete the asynchronous operation of retrieving a binary property as a stream.</summary>
        <returns>An instance of <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> which contains the response stream along with its metadata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Data.Services.Client.DataServiceContext.EndGetReadStream%2A> method is called to receive the results from the <xref:System.Data.Services.Client.DataServiceContext.BeginGetReadStream%2A> method.  
  
 The <xref:System.Data.Services.Client.DataServiceContext.EndGetReadStream%2A> method does not complete until the response is received from the <xref:System.Data.Services.Client.DataServiceContext.BeginGetReadStream%2A> method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse EndLoadProperty (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse EndLoadProperty(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndLoadProperty(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndLoadProperty (asyncResult As IAsyncResult) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ EndLoadProperty(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndLoadProperty : IAsyncResult -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.EndLoadProperty asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation.</param>
        <summary>Called to complete the <see cref="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.AsyncCallback,System.Object)" /> operation.</summary>
        <returns>The response to the load operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If an error occurs during the request or while processing the response from the data service, an exception is thrown.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSaveChanges">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse EndSaveChanges (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse EndSaveChanges(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndSaveChanges(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSaveChanges (asyncResult As IAsyncResult) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ EndSaveChanges(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndSaveChanges : IAsyncResult -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.EndSaveChanges asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation.</param>
        <summary>Called to complete the <see cref="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" /> operation.</summary>
        <returns>A <see cref="T:System.Data.Services.Client.DataServiceResponse" /> object that indicates the result of the batch operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Data.Services.Client.DataServiceResponse.BatchStatusCode%2A> should be inspected to see the result of batch operations. Individual operation results can be retrieved on the operation objects returned by the <xref:System.Data.Services.Client.DataServiceResponse> enumerator.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Entities">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.EntityDescriptor&gt; Entities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Services.Client.EntityDescriptor&gt; Entities" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Entities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entities As ReadOnlyCollection(Of EntityDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::EntityDescriptor ^&gt; ^ Entities { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::EntityDescriptor ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Entities : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.EntityDescriptor&gt;" Usage="System.Data.Services.Client.DataServiceContext.Entities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.EntityDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a list of all the resources currently being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <value>A list of <see cref="T:System.Data.Services.Client.EntityDescriptor" /> objects that represent all the resources currently being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If no resources are being tracked, a list that has zero elements is returned.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Execute&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sends a request to the data service to execute a specific URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Execute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse&lt;T&gt; Execute&lt;T&gt; (System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; continuation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse`1&lt;!!T&gt; Execute&lt;T&gt;(class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!!T&gt; continuation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.Execute``1(System.Data.Services.Client.DataServiceQueryContinuation{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute(Of T) (continuation As DataServiceQueryContinuation(Of T)) As QueryOperationResponse(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Data::Services::Client::QueryOperationResponse&lt;T&gt; ^ Execute(System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ continuation);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; -&gt; System.Data.Services.Client.QueryOperationResponse&lt;'T&gt;" Usage="dataServiceContext.Execute continuation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type returned by the query.</typeparam>
        <param name="continuation">A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that represents the next page of data to return from the data service.</param>
        <summary>Sends a request to the data service to retrieve the next page of data in a paged query result.</summary>
        <returns>The response that contains the next page of data in the query result.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The supplied <xref:System.Data.Services.Client.DataServiceQueryContinuation%601> object contains the URI that, when executed, returns the next page of data in the query result.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">When an error is raised either during execution of the request or when it converts the contents of the response message into objects.</exception>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TElement&gt; Execute&lt;TElement&gt; (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt; Execute&lt;TElement&gt;(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.Execute``1(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute(Of TElement) (requestUri As Uri) As IEnumerable(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TElement&gt; ^ Execute(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.Execute : Uri -&gt; seq&lt;'Element&gt;" Usage="dataServiceContext.Execute requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">The type that the query returns.</typeparam>
        <param name="requestUri">The URI to which the query request will be sent. The URI may be any valid data service URI. Can contain $ query parameters.</param>
        <summary>Sends a request to the data service to execute a specific URI.</summary>
        <returns>The results of the query operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Data.Services.Client.DataServiceContext.Execute%2A> method is used to query a data service by URI; the method causes an HTTP GET request to be issued to the data service. The request URI specified can be absolute or relative.  
  
 If the `requestUri` is absolute, this method validates whether the URI points to the same data service that was specified when constructing the <xref:System.Data.Services.Client.DataServiceContext>. If the `requestUri` is relative, this method strips off any leading slashes and appends `requestUri` to what was provided when constructing the <xref:System.Data.Services.Client.DataServiceContext>. A slash is appended after the URI passed to the <xref:System.Data.Services.Client.DataServiceContext> constructor, if one is not already present.  
  
 When this method returns, all of the HTTP response for the request has been read from the network stream, but the response will not have been processed; there is no identity resolution or object materialization. Identity resolution and full object materialization do not occur for a specified entity in the response until it is enumerated.  
  
   
  
## Examples  
 This example uses a `do…while` loop to load `Customers` entities from a paged results from the data service. The <xref:System.Data.Services.Client.DataServiceContext.Execute%2A> method is called by using the next link URI to receive the next page of data.  
  
 [!code-csharp[Astoria Northwind Client#GetCustomersPaged](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#getcustomerspaged)]
 [!code-vb[Astoria Northwind Client#GetCustomersPaged](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#getcustomerspaged)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">When a response is not received from a request to the <paramref name="requestUri" />.</exception>
        <exception cref="T:System.ArgumentNullException">When <paramref name="requestUri" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">When <paramref name="requestUri" /> is not a valid URI for the data service.</exception>
        <exception cref="T:System.InvalidOperationException">When an error is raised either during execution of the request or when it converts the contents of the response message into objects.</exception>
        <exception cref="T:System.Data.Services.Client.DataServiceQueryException">When the data service returns an HTTP 404: Resource Not Found error.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/32f9b588-c832-44c4-a7e0-fcce635df59a">Loading Deferred Content (WCF Data Services)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/bb786ea4-f3ef-4ad3-9a41-3a0b7feb6a1f">How to: Load Paged Results (WCF Data Services)</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse ExecuteBatch (params System.Data.Services.Client.DataServiceRequest[] queries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse ExecuteBatch(class System.Data.Services.Client.DataServiceRequest[] queries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.ExecuteBatch(System.Data.Services.Client.DataServiceRequest[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteBatch (ParamArray queries As DataServiceRequest()) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ ExecuteBatch(... cli::array &lt;System::Data::Services::Client::DataServiceRequest ^&gt; ^ queries);" />
      <MemberSignature Language="F#" Value="member this.ExecuteBatch : System.Data.Services.Client.DataServiceRequest[] -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.ExecuteBatch queries" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queries" Type="System.Data.Services.Client.DataServiceRequest[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="queries">Array of <see cref="T:System.Data.Services.Client.DataServiceRequest" /> objects that make up the queries.</param>
        <summary>Submits a group of queries as a batch to the data service.</summary>
        <returns>The response to the batch operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The queries are specified as <xref:System.Data.Services.Client.DataServiceRequest%601> instances. Returns a <xref:System.Data.Services.Client.DataServiceResponse> that represents the response of the batch request as a whole. Individual query responses are represented as individual <xref:System.Data.Services.Client.OperationResponse> objects that can be accessed by enumerating the <xref:System.Data.Services.Client.DataServiceResponse> instance.  
  
 When this method returns the whole HTTP response for the batch request has been read from the network stream, but the responses have not been processed. No identity resolution or object materialization occurs for a specified entity in the response until it is enumerated.  
  
   
  
## Examples  
 The following example shows how to call the <xref:System.Data.Services.Client.DataServiceContext.ExecuteBatch*> method to execute an array of <xref:System.Data.Services.Client.DataServiceRequest%601> objects that contains queries that return both `Customers` and `Products` objects from the Northwind data service. The collection of <xref:System.Data.Services.Client.QueryOperationResponse%601> objects in the returned <xref:System.Data.Services.Client.DataServiceResponse> is enumerated, and the collection of objects that is contained in each <xref:System.Data.Services.Client.QueryOperationResponse%601> is also enumerated. This example uses the <xref:System.Data.Services.Client.DataServiceContext> generated by the Add Service Reference tool based on the Northwind data service, which is created when you complete the [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#BatchQuery](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#batchquery)]
 [!code-vb[Astoria Northwind Client#BatchQuery](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#batchquery)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/3b4db7df-bd33-43a1-8ea4-63a18e131f97">How to: Execute Queries in a Batch (WCF Data Services)</related>
      </Docs>
    </Member>
    <Member MemberName="GetEntityDescriptor">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.EntityDescriptor GetEntityDescriptor (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.EntityDescriptor GetEntityDescriptor(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetEntityDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntityDescriptor (entity As Object) As EntityDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::EntityDescriptor ^ GetEntityDescriptor(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetEntityDescriptor : obj -&gt; System.Data.Services.Client.EntityDescriptor" Usage="dataServiceContext.GetEntityDescriptor entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.EntityDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The object for which to return the entity descriptor.</param>
        <summary>Gets the <see cref="T:System.Data.Services.Client.EntityDescriptor" /> for the supplied entity object.</summary>
        <returns>The <see cref="T:System.Data.Services.Client.EntityDescriptor" /> instance for the <paramref name="entity" />, or <see langword="null" /> if an <see cref="T:System.Data.Services.Client.EntityDescriptor" /> does not exist for the object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLinkDescriptor">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.LinkDescriptor GetLinkDescriptor (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.LinkDescriptor GetLinkDescriptor(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetLinkDescriptor(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLinkDescriptor (source As Object, sourceProperty As String, target As Object) As LinkDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::LinkDescriptor ^ GetLinkDescriptor(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.GetLinkDescriptor : obj * string * obj -&gt; System.Data.Services.Client.LinkDescriptor" Usage="dataServiceContext.GetLinkDescriptor (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.LinkDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Source object in the link</param>
        <param name="sourceProperty">The name of the navigation property on the <paramref name="source" /> object that returns the related object.</param>
        <param name="target">The related entity.</param>
        <summary>Gets the <see cref="T:System.Data.Services.Client.LinkDescriptor" /> for a specific link that defines the relationship between two entities.</summary>
        <returns>The <see cref="T:System.Data.Services.Client.LinkDescriptor" /> instance for the specified relationship, or <see langword="null" /> if a <see cref="T:System.Data.Services.Client.LinkDescriptor" /> does not exist for the relationship.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataUri">
      <MemberSignature Language="C#" Value="public Uri GetMetadataUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri GetMetadataUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetMetadataUri" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataUri () As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ GetMetadataUri();" />
      <MemberSignature Language="F#" Value="member this.GetMetadataUri : unit -&gt; Uri" Usage="dataServiceContext.GetMetadataUri " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a URI of the location of .edmx metadata.</summary>
        <returns>A URI that identifies the location of the metadata description, in .edmx format, for the data service identified by the base URI that is passed to the constructor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Returns the URI passed to the constructor with a single path segment (`/$metadata`) appended. Calling this method may generate a network operation to dynamically discover the metadata URI.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReadStream">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets binary property data for the specified entity as a data stream.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse GetReadStream (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse GetReadStream(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStream (entity As Object) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ GetReadStream(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetReadStream : obj -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.GetReadStream entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that has the binary property to retrieve.</param>
        <summary>Gets binary property data for the specified entity as a data stream.</summary>
        <returns>An instance of <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> that represents the response.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A> method synchronously requests a data stream that contains the binary property of the requested `entity`.  
  
 In the AtomPub protocol, the `entity` is a Media Link Entry and the binary property is the associated Media Resource.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="entity" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" />.  
  
 -or-  
  
 The <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.  
  
 -or-  
  
 The <paramref name="entity" /> is not a Media Link Entry and does not have a binary property.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse GetReadStream (object entity, System.Data.Services.Client.DataServiceRequestArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse GetReadStream(object entity, class System.Data.Services.Client.DataServiceRequestArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStream (entity As Object, args As DataServiceRequestArgs) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ GetReadStream(System::Object ^ entity, System::Data::Services::Client::DataServiceRequestArgs ^ args);" />
      <MemberSignature Language="F#" Value="member this.GetReadStream : obj * System.Data.Services.Client.DataServiceRequestArgs -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.GetReadStream (entity, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="args" Type="System.Data.Services.Client.DataServiceRequestArgs" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that has the binary property to retrieve.</param>
        <param name="args">Instance of <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> class that contains settings for the HTTP request message.</param>
        <summary>Gets binary property data for the specified entity as a data stream along with the specified message headers.</summary>
        <returns>An instance of <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> that represents the response.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A> method synchronously requests a data stream that contains the binary property of the requested `entity`.  
  
 In the AtomPub protocol, the `entity` is a Media Link Entry and the binary property is the associated Media Resource.  
  
 No validation is performed on the headers that are set in `args`. Therefore, do not change an HTTP header in a way that changes the meaning of the request.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entity" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="args" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" />.  
  
 -or-  
  
 The <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.  
  
 -or-  
  
 The <paramref name="entity" /> is not a Media Link Entry and does not have a binary property.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse GetReadStream (object entity, string acceptContentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse GetReadStream(object entity, string acceptContentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStream (entity As Object, acceptContentType As String) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ GetReadStream(System::Object ^ entity, System::String ^ acceptContentType);" />
      <MemberSignature Language="F#" Value="member this.GetReadStream : obj * string -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.GetReadStream (entity, acceptContentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="acceptContentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that has the binary property to retrieve.</param>
        <param name="acceptContentType">The content type of the data requested from the data service, specified in the Accept header.</param>
        <summary>Gets binary property data for the specified entity as a data stream, with the specified Accept message header.</summary>
        <returns>An instance of <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> that represents the response.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `acceptContentType` parameter should be a valid value for the Accept HTTP header.  
  
 The <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A> method synchronously requests a data stream that contains the binary property of the requested `entity`.  
  
 In the AtomPub protocol, the `entity` is a Media Link Entry and the binary property is the associated Media Resource.  
  
 No validation is performed on the headers that are set in `acceptContentType`. Therefore, do not change this HTTP header in a way that changes the meaning of the request.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entity" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="acceptContentType" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" />.  
  
 -or-  
  
 The <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.  
  
 -or-  
  
 The <paramref name="entity" /> is not a Media Link Entry and does not have a binary property.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReadStreamUri">
      <MemberSignature Language="C#" Value="public Uri GetReadStreamUri (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri GetReadStreamUri(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStreamUri(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStreamUri (entity As Object) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ GetReadStreamUri(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetReadStreamUri : obj -&gt; Uri" Usage="dataServiceContext.GetReadStreamUri entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that has the binary property to retrieve.</param>
        <summary>Gets the URI that is used to return binary property data as a data stream.</summary>
        <returns>The read URI of the binary data stream.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the specified `entity` is a Media Link Entry, the <xref:System.Data.Services.Client.DataServiceContext.GetReadStreamUri%2A> method returns a URI that is used to access the content of the Media Resource.  
  
 This URI is only used to in a GET request to read the content of a Media Resource. It may not respond to POST, PUT, or DELETE requests.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">If the entity specified is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IgnoreMissingProperties">
      <MemberSignature Language="C#" Value="public bool IgnoreMissingProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreMissingProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreMissingProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreMissingProperties { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreMissingProperties : bool with get, set" Usage="System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether the properties read from the type must be mapped to properties on the client-side type.</summary>
        <value>A Boolean value that indicates whether the properties read from the type must be mapped to properties on the client-side type.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If `true`, materialization succeeds even if properties from the type cannot be mapped to properties of the client type. If `false`, the property mismatch raises an exception during object materialization.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreResourceNotFoundException">
      <MemberSignature Language="C#" Value="public bool IgnoreResourceNotFoundException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreResourceNotFoundException" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.IgnoreResourceNotFoundException" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreResourceNotFoundException As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreResourceNotFoundException { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreResourceNotFoundException : bool with get, set" Usage="System.Data.Services.Client.DataServiceContext.IgnoreResourceNotFoundException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether an exception is raised when a 404 error (resource not found) is returned by the data service.</summary>
        <value>When set to <see langword="true" />, the client library returns an empty set instead of raising a <see cref="T:System.Data.Services.Client.DataServiceQueryException" /> when the data service returns an HTTP 404: Resource Not Found error.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Links">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.LinkDescriptor&gt; Links { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Services.Client.LinkDescriptor&gt; Links" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Links" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Links As ReadOnlyCollection(Of LinkDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::LinkDescriptor ^&gt; ^ Links { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::LinkDescriptor ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Links : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.LinkDescriptor&gt;" Usage="System.Data.Services.Client.DataServiceContext.Links" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.LinkDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of all associations or links currently being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> object.</summary>
        <value>A collection of <see cref="T:System.Data.Services.Client.LinkDescriptor" /> objects that represent all associations or links current being tracked by the current being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If no links are currently being tracked, a list that has 0 elements is returned. The collection is read only.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadProperty">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Loads deferred content from the data service.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse LoadProperty (object entity, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse LoadProperty(object entity, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty (entity As Object, propertyName As String) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.LoadProperty (entity, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that contains the property to load.</param>
        <param name="propertyName">The name of the property of the specified entity to load.</param>
        <summary>Loads deferred content for a specified property from the data service.</summary>
        <returns>The response to the load operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Calling this method invokes a network operation to fetch the property value. The property specified may be any one of the properties on the entity, including properties that represent associations or links.  
  
 If the property represents an association, link or deferred property, calling this method provides the client a way to lazily load related resources.  
  
 If the entity is in the unchanged or modified state, the property value loads the related entities and marks them unchanged with unchanged links  
  
 If the property is already loaded, calling this method lets you refresh the value of the property.  
  
   
  
## Examples  
 The following example shows how to explicitly load the `Customers` object that is related to each returned `Orders` instance. This example uses the <xref:System.Data.Services.Client.DataServiceContext> generated by the Add Service Reference tool based on the Northwind data service, which is created when you complete the [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#LoadRelatedOrderCustomer](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#loadrelatedordercustomer)]
 [!code-vb[Astoria Northwind Client#LoadRelatedOrderCustomer](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#loadrelatedordercustomer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse LoadProperty (object entity, string propertyName, System.Data.Services.Client.DataServiceQueryContinuation continuation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse LoadProperty(object entity, string propertyName, class System.Data.Services.Client.DataServiceQueryContinuation continuation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty (entity As Object, propertyName As String, continuation As DataServiceQueryContinuation) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName, System::Data::Services::Client::DataServiceQueryContinuation ^ continuation);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string * System.Data.Services.Client.DataServiceQueryContinuation -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.LoadProperty (entity, propertyName, continuation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that contains the property to load.</param>
        <param name="propertyName">The name of the property of the specified entity to load.</param>
        <param name="continuation">A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that represents the next page of related entities to load from the data service.</param>
        <summary>Loads the next page of related entities from the data service by using the supplied query continuation object.</summary>
        <returns>The response that contains the next page of related entity data.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When `entity` is in an <xref:System.Data.Services.Client.EntityStates.Unchanged> or <xref:System.Data.Services.Client.EntityStates.Modified> state, the related entities are loaded as objects in an <xref:System.Data.Services.Client.EntityStates.Unchanged> state, with links also in <xref:System.Data.Services.Client.EntityStates.Unchanged> state.  
  
 When `entity` is in a <xref:System.Data.Services.Client.EntityStates.Deleted> state, the related entities are loaded as objects in an <xref:System.Data.Services.Client.EntityStates.Unchanged> state, with links that are in the <xref:System.Data.Services.Client.EntityStates.Deleted> state.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">When <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> or <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse LoadProperty (object entity, string propertyName, Uri nextLinkUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse LoadProperty(object entity, string propertyName, class System.Uri nextLinkUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty (entity As Object, propertyName As String, nextLinkUri As Uri) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName, Uri ^ nextLinkUri);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string * Uri -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.LoadProperty (entity, propertyName, nextLinkUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="nextLinkUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that contains the property to load.</param>
        <param name="propertyName">The name of the property of the specified entity to load.</param>
        <param name="nextLinkUri">The URI that is used to load the next results page.</param>
        <summary>Loads a page of related entities by using the supplied next link URI.</summary>
        <returns>An instance of <see cref="T:System.Data.Services.Client.QueryOperationResponse`1" /> that contains the results of the request.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When `entity` is in an <xref:System.Data.Services.Client.EntityStates.Unchanged> or <xref:System.Data.Services.Client.EntityStates.Modified> state, the related entities are loaded in the <xref:System.Data.Services.Client.EntityStates.Unchanged> state, and the links between the entities are also created in an <xref:System.Data.Services.Client.EntityStates.Unchanged> state.  
  
 When `entity` is in a <xref:System.Data.Services.Client.EntityStates.Deleted> state, the related entities are loaded in the <xref:System.Data.Services.Client.EntityStates.Unchanged> state, and the links between the entities are created in the <xref:System.Data.Services.Client.EntityStates.Deleted> state.  
  
   
  
## Examples  
 This example returns related `Orders` entities with each `Customers` entity and uses a `do…while` loop to load `Customers` entities pages and a nested `while` loop to load pages of related `Orders` entities from the data service. The <xref:System.Data.Services.Client.DataServiceContext.LoadProperty%2A> method is used to load pages of related `Orders` entities.  
  
 [!code-csharp[Astoria Northwind Client#GetCustomersPagedNested](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#getcustomerspagednested)]
 [!code-vb[Astoria Northwind Client#GetCustomersPagedNested](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#getcustomerspagednested)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">When <paramref name="entity" /> is in a <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> or <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/bb786ea4-f3ef-4ad3-9a41-3a0b7feb6a1f">How to: Load Paged Results (WCF Data Services)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/32f9b588-c832-44c4-a7e0-fcce635df59a">Loading Deferred Content (WCF Data Services)</related>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse&lt;T&gt; LoadProperty&lt;T&gt; (object entity, string propertyName, System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; continuation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse`1&lt;!!T&gt; LoadProperty&lt;T&gt;(object entity, string propertyName, class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!!T&gt; continuation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty``1(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty(Of T) (entity As Object, propertyName As String, continuation As DataServiceQueryContinuation(Of T)) As QueryOperationResponse(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Data::Services::Client::QueryOperationResponse&lt;T&gt; ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName, System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ continuation);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string * System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; -&gt; System.Data.Services.Client.QueryOperationResponse&lt;'T&gt;" Usage="dataServiceContext.LoadProperty (entity, propertyName, continuation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">Element type of collection to load.</typeparam>
        <param name="entity">The entity that contains the property to load.</param>
        <param name="propertyName">The name of the property of the specified entity to load.</param>
        <param name="continuation">A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that represents the next page of related entities to load from the data service.</param>
        <summary>Loads the next page of related entities from the data service by using the supplied generic query continuation object.</summary>
        <returns>The response that contains the next page of related entity data.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When `entity` is in an <xref:System.Data.Services.Client.EntityStates.Unchanged> or <xref:System.Data.Services.Client.EntityStates.Modified> state, the related entities are loaded as objects in an <xref:System.Data.Services.Client.EntityStates.Unchanged> state, with links also in <xref:System.Data.Services.Client.EntityStates.Unchanged> state.  
  
 When `entity` is in a <xref:System.Data.Services.Client.EntityStates.Deleted> state, the related entities are loaded as objects in an <xref:System.Data.Services.Client.EntityStates.Unchanged> state, with links that are in the <xref:System.Data.Services.Client.EntityStates.Deleted> state.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">When <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> or <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.</exception>
      </Docs>
    </Member>
    <Member MemberName="MergeOption">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.MergeOption MergeOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Services.Client.MergeOption MergeOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.MergeOption" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeOption As MergeOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Client::MergeOption MergeOption { System::Data::Services::Client::MergeOption get(); void set(System::Data::Services::Client::MergeOption value); };" />
      <MemberSignature Language="F#" Value="member this.MergeOption : System.Data.Services.Client.MergeOption with get, set" Usage="System.Data.Services.Client.DataServiceContext.MergeOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.MergeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the synchronization option for receiving entities from a data service.</summary>
        <value>One of the members of the <see cref="T:System.Data.Services.Client.MergeOption" /> enumeration.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This value is read by the deserialization component of the client before materializing objects. Set this property to the appropriate materialization option before executing any queries or updates to the data service. The default value is <xref:System.Data.Services.Client.MergeOption.AppendOnly>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingEntity">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; ReadingEntity;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; ReadingEntity" />
      <MemberSignature Language="DocId" Value="E:System.Data.Services.Client.DataServiceContext.ReadingEntity" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadingEntity As EventHandler(Of ReadingWritingEntityEventArgs) " FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Data::Services::Client::ReadingWritingEntityEventArgs ^&gt; ^ ReadingEntity;" />
      <MemberSignature Language="F#" Value="member this.ReadingEntity : EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " Usage="member this.ReadingEntity : System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event ReadingEntity As EventHandler(Of ReadingWritingEntityEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs after entity data has been completely read into the entity object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Data.Services.Client.DataServiceContext.ReadingEntity> event occurs after the entity data has been completely read into the target object together with all nested entities. If tracking is anything other than <xref:System.Data.Services.Client.MergeOption.NoTracking>, the object is attached before the event occurs.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveName">
      <MemberSignature Language="C#" Value="public Func&lt;Type,string&gt; ResolveName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Type, string&gt; ResolveName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.ResolveName" />
      <MemberSignature Language="VB.NET" Value="Public Property ResolveName As Func(Of Type, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;Type ^, System::String ^&gt; ^ ResolveName { Func&lt;Type ^, System::String ^&gt; ^ get(); void set(Func&lt;Type ^, System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResolveName : Func&lt;Type, string&gt; with get, set" Usage="System.Data.Services.Client.DataServiceContext.ResolveName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Type,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a function to override the default type resolution strategy used by the client library when you send entities to a data service.</summary>
        <value>Returns a string that contains the name of the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Enables override of the default type resolution used by the client library. Set this property to a delegate that identifies a function that is used to resolve a type in the client application to a namespace-qualified type name. This enables the client to perform custom mapping between the type name provided in a response from the server and a type on the client.  
  
> [!NOTE]
>  This method enables override of the entity name that is serialized to the target representation, such as Atom or JSON, for the specified type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public Func&lt;string,Type&gt; ResolveType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;string, class System.Type&gt; ResolveType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.ResolveType" />
      <MemberSignature Language="VB.NET" Value="Public Property ResolveType As Func(Of String, Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::String ^, Type ^&gt; ^ ResolveType { Func&lt;System::String ^, Type ^&gt; ^ get(); void set(Func&lt;System::String ^, Type ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResolveType : Func&lt;string, Type&gt; with get, set" Usage="System.Data.Services.Client.DataServiceContext.ResolveType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.String,System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a function that is used to override the default type resolution option that is used by the client library when receiving entities from a data service.</summary>
        <value>A function delegate that identifies an override function that is used to override the default type resolution option that is used by the client library.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Enables override of the default type resolution strategy that is used by the client library. Set this property to a delegate that identifies a function that resolves a namespace-qualified type name to a type in the client application. This enables the client to do custom mapping between the type name provided in a response from the server and a type on the client.  
  
 Overriding type resolution also enables inserting a custom mapping strategy between a type name and a type. It does not affect how a response is materialized to the identified type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Saves the changes the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is tracking to storage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Data.Services.Client.DataServiceResponse> that contains status, headers, and errors that result from the call to <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse SaveChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse SaveChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveChanges () As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ SaveChanges();" />
      <MemberSignature Language="F#" Value="member this.SaveChanges : unit -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.SaveChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Saves the changes that the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is tracking to storage.</summary>
        <returns>A <see cref="T:System.Data.Services.Client.DataServiceResponse" /> that contains status, headers, and errors that result from the call to <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse SaveChanges (System.Data.Services.Client.SaveChangesOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse SaveChanges(valuetype System.Data.Services.Client.SaveChangesOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SaveChanges(System.Data.Services.Client.SaveChangesOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveChanges (options As SaveChangesOptions) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ SaveChanges(System::Data::Services::Client::SaveChangesOptions options);" />
      <MemberSignature Language="F#" Value="member this.SaveChanges : System.Data.Services.Client.SaveChangesOptions -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.SaveChanges options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Data.Services.Client.SaveChangesOptions" />
      </Parameters>
      <Docs>
        <param name="options">A member of the <see cref="T:System.Data.Services.Client.MergeOption" /> enumeration that specifies the materialization option.</param>
        <summary>Saves the changes that the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is tracking to storage.</summary>
        <returns>A <see cref="T:System.Data.Services.Client.DataServiceResponse" /> that contains status, headers, and errors that result from the call to <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Operations are sent to the data service in the following order  
  
1.  <xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>  
  
2.  <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>  
  
3.  <xref:System.Data.Services.Client.DataServiceContext.UpdateObject%2A>  
  
4.  <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>  
  
5.  <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> and <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesDefaultOptions">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.SaveChangesOptions SaveChangesDefaultOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Services.Client.SaveChangesOptions SaveChangesDefaultOptions" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.SaveChangesDefaultOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveChangesDefaultOptions As SaveChangesOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Client::SaveChangesOptions SaveChangesDefaultOptions { System::Data::Services::Client::SaveChangesOptions get(); void set(System::Data::Services::Client::SaveChangesOptions value); };" />
      <MemberSignature Language="F#" Value="member this.SaveChangesDefaultOptions : System.Data.Services.Client.SaveChangesOptions with get, set" Usage="System.Data.Services.Client.DataServiceContext.SaveChangesDefaultOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.SaveChangesOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Data.Services.Client.SaveChangesOptions" /> values that are used by the <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> method.</summary>
        <value>The current options for the save changes operation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is provided so that options such as merge and replace semantics can be set one time for the <xref:System.Data.Services.Client.DataServiceContext> and then overridden as needed by calling one of the <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> overloads.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendingRequest">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt; SendingRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Data.Services.Client.SendingRequestEventArgs&gt; SendingRequest" />
      <MemberSignature Language="DocId" Value="E:System.Data.Services.Client.DataServiceContext.SendingRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SendingRequest As EventHandler(Of SendingRequestEventArgs) " FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Data::Services::Client::SendingRequestEventArgs ^&gt; ^ SendingRequest;" />
      <MemberSignature Language="F#" Value="member this.SendingRequest : EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt; " Usage="member this.SendingRequest : System.EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event SendingRequest As EventHandler(Of SendingRequestEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a new <see cref="T:System.Net.HttpWebRequest" /> has been created.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Data.Services.Client.DataServiceContext.SendingRequest> event occurs before the required property values are set on the object. guarantees  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLink">
      <MemberSignature Language="C#" Value="public void SetLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SetLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.SetLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.SetLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">The source object for the new link.</param>
        <param name="sourceProperty">The property on the source object that identifies the target object of the new link.</param>
        <param name="target">The child object involved in the new link that is to be initialized by calling this method. The target object must be a subtype of the type identified by the <paramref name="sourceProperty" /> parameter. If <paramref name="target" /> is set to null, the call represents a delete link operation.</param>
        <summary>Notifies the <see cref="T:System.Data.Services.Client.DataServiceContext" /> that a new link exists between the objects specified and that the link is represented by the property specified by the <paramref name="sourceProperty" /> parameter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A new link is created in the <xref:System.Data.Services.Client.EntityStates.Added> state. The <xref:System.Data.Services.Client.DataServiceContext> adds this new link to the set of newly created links to be sent to the data service on the next call to <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>.  
  
 If the target argument is null, the link represented by sourceProperty should be removed or deleted (The link is moved to the <xref:System.Data.Services.Client.EntityStates.Deleted> state).  
  
 Links are one-way relationships. If a back pointer exists indicating a two way association, this method should be called again to notify the <xref:System.Data.Services.Client.DataServiceContext> of the second link  
  
 This method only supports adding links to relationships with multiplicity = 1 (The source property is an object reference). For example, if a class `Person` is related to another `Person` by a `Friend` property, this call could be used to relate `Person` to `Person`. This method will throw an exception if the `sourceProperty` represented has a relationship of cardinality more than one.  
  
   
  
## Examples  
 The following example shows how to use the <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> and <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> methods to create links that define relationships. In this example, the navigation properties on the `Order_Details` object are also explicitly set.  
  
 [!code-csharp[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#addorderdetailtoorder)]
 [!code-vb[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#addorderdetailtoorder)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="source" />, <paramref name="sourceProperty" /> or <paramref name="target" /> are null.</exception>
        <exception cref="T:System.InvalidOperationException">When the specified link already exists.  
  
 -or-  
  
 When the objects supplied as <paramref name="source" /> or <paramref name="target" /> are in the <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> or <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> state.  
  
 -or-  
  
 When <paramref name="sourceProperty" /> is not a navigation property that defines a reference to a single related object.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSaveStream">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets a new data stream as the binary property of an entity.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSaveStream">
      <MemberSignature Language="C#" Value="public void SetSaveStream (object entity, System.IO.Stream stream, bool closeStream, System.Data.Services.Client.DataServiceRequestArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSaveStream(object entity, class System.IO.Stream stream, bool closeStream, class System.Data.Services.Client.DataServiceRequestArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.Data.Services.Client.DataServiceRequestArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSaveStream (entity As Object, stream As Stream, closeStream As Boolean, args As DataServiceRequestArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSaveStream(System::Object ^ entity, System::IO::Stream ^ stream, bool closeStream, System::Data::Services::Client::DataServiceRequestArgs ^ args);" />
      <MemberSignature Language="F#" Value="member this.SetSaveStream : obj * System.IO.Stream * bool * System.Data.Services.Client.DataServiceRequestArgs -&gt; unit" Usage="dataServiceContext.SetSaveStream (entity, stream, closeStream, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="closeStream" Type="System.Boolean" />
        <Parameter Name="args" Type="System.Data.Services.Client.DataServiceRequestArgs" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that has a binary property to which to assign the data stream.</param>
        <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the binary data.</param>
        <param name="closeStream">A <see cref="T:System.Boolean" /> value that determines whether the data stream is closed when the <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> method is completed.</param>
        <param name="args">An instance of the <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> class that contains settings for the HTTP request message.</param>
        <summary>Sets a new data stream as the binary property of an entity, with the specified settings in the request message.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> method sets the binary stream that is the Media Resource that is associated with the `entity`, which is called a Media Link Entry.  
  
 Calling the <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> method marks the entity as a Media Link Entry. The entity state is also set to <xref:System.Data.Services.Client.EntityStates.Modified> so that the stream will be sent to the data service the next time that the <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> method is called.  
  
 The <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> method reads the <xref:System.IO.Stream> through to the end. A <xref:System.IO.Stream.Seek%2A> operation is not tried on the <xref:System.IO.Stream>.  
  
 When `closeStream` is `true`, the <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> method closes the stream before it returns. The stream is closed even when an error occurs and the stream is not read.  
  
 When the `entity` has the <xref:System.Data.Services.Client.MediaEntryAttribute> applied, the Media Resource cannot be a data stream. Remove this attribute before you try to set the data stream for the `entity`.  
  
 No validation is performed on the headers that are set in `args`. Therefore, do not change an HTTP header in a way that changes the meaning of the request.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Any of the parameters supplied to the method are <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not being tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" /> instance.  
  
 -or-  
  
 The <paramref name="entity" /> has the <see cref="T:System.Data.Services.Client.MediaEntryAttribute" /> applied.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetSaveStream">
      <MemberSignature Language="C#" Value="public void SetSaveStream (object entity, System.IO.Stream stream, bool closeStream, string contentType, string slug);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSaveStream(object entity, class System.IO.Stream stream, bool closeStream, string contentType, string slug) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSaveStream (entity As Object, stream As Stream, closeStream As Boolean, contentType As String, slug As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSaveStream(System::Object ^ entity, System::IO::Stream ^ stream, bool closeStream, System::String ^ contentType, System::String ^ slug);" />
      <MemberSignature Language="F#" Value="member this.SetSaveStream : obj * System.IO.Stream * bool * string * string -&gt; unit" Usage="dataServiceContext.SetSaveStream (entity, stream, closeStream, contentType, slug)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="closeStream" Type="System.Boolean" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="slug" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that has a binary property to which to assign the data stream.</param>
        <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the binary data.</param>
        <param name="closeStream">A <see cref="T:System.Boolean" /> value that determines whether the data stream is closed when the <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> method is completed.</param>
        <param name="contentType">The Content-Type header value for the request message.</param>
        <param name="slug">The Slug header value for the request message.</param>
        <summary>Sets a new data stream as the binary property of an entity. The specified Content-Type and Slug headers are included in the request message.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> method sets the binary stream that is the Media Resource that is associated with the `entity`, which is called a Media Link Entry.  
  
 Calling the <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> method marks the entity as Media Link Entry. The entity state is also set to <xref:System.Data.Services.Client.EntityStates.Modified> so that the stream will be sent to the data service the next time that the <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> method is called.  
  
 The <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> method reads the <xref:System.IO.Stream> through to the end. A <xref:System.IO.Stream.Seek%2A> operation is not tried on the <xref:System.IO.Stream>.  
  
 When `closeStream` is `true`, the <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> method closes the stream before it returns. The stream is closed even when an error occurs and the stream is not read.  
  
 When the `entity` has the <xref:System.Data.Services.Client.MediaEntryAttribute> applied, the Media Resource cannot be a data stream. Remove this attribute before you try to set the data stream for the `entity`.  
  
 No validation is performed on the headers that are set in `contentType` and `slug`. Therefore, do not change these HTTP headers in a way that changes the meaning of the request.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Any of the parameters supplied to the method are <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not being tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" /> instance.  
  
 -or-  
  
 The <see langword="entity" /> has the <see cref="T:System.Data.Services.Client.MediaEntryAttribute" /> applied.</exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Data.Services.Client.DataServiceContext.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the time-out option that is used for the underlying HTTP request to the data service.</summary>
        <value>An integer that indicates the time interval before time-out of a service request.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This value is passed to the <xref:System.Net.HttpWebRequest.Timeout> property of the underlying <xref:System.Net.HttpWebRequest> object. The value must be set before executing any query or update operations against the target data service can affect the request. The value may be changed between requests to a data service and the new value will be picked up by the next data service request.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntity&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetEntity&lt;TEntity&gt; (Uri identity, out TEntity entity) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntity&lt;class TEntity&gt;(class System.Uri identity, [out] !!TEntity&amp; entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.TryGetEntity``1(System.Uri,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntity(Of TEntity As Class) (identity As Uri, ByRef entity As TEntity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class bool TryGetEntity(Uri ^ identity, [Runtime::InteropServices::Out] TEntity % entity);" />
      <MemberSignature Language="F#" Value="member this.TryGetEntity : Uri * 'Entity -&gt; bool (requires 'Entity : null)" Usage="dataServiceContext.TryGetEntity (identity, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.Uri" />
        <Parameter Name="entity" Type="TEntity" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">The type of the entity.</typeparam>
        <param name="identity">The URI of the tracked entity to be retrieved.</param>
        <param name="entity">The entity to be retrieved.</param>
        <summary>Test retrieval of an entity being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> by reference to the URI of the entity.</summary>
        <returns>If an entity is found at <paramref name="resourceUri" />, the entity is returned in the out parameter <paramref name="entity" /> and true is returned. If no entity is found, false is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If an entity is in the <xref:System.Data.Services.Client.EntityStates.Detached> or <xref:System.Data.Services.Client.EntityStates.Added> state, it does not have a URI and cannot be retrieved by using this method.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="identity" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetUri">
      <MemberSignature Language="C#" Value="public bool TryGetUri (object entity, out Uri identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetUri(object entity, [out] class System.Uri&amp; identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.TryGetUri(System.Object,System.Uri@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetUri (entity As Object, ByRef identity As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetUri(System::Object ^ entity, [Runtime::InteropServices::Out] Uri ^ % identity);" />
      <MemberSignature Language="F#" Value="member this.TryGetUri : obj * Uri -&gt; bool" Usage="dataServiceContext.TryGetUri (entity, identity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="identity" Type="System.Uri" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entity">The entity identified by the <paramref name="identity" />.</param>
        <param name="identity">The URI of the entity.</param>
        <summary>Retrieves the canonical URI associated with the specified entity, if available.</summary>
        <returns>Returns true if the canonical URI is returned in the out parameter. If the specified entity is not tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> or is in the added state, no URI is available and false is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Objects in the <xref:System.Data.Services.Client.EntityStates.Added> state do not yet have a URI.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeScheme">
      <MemberSignature Language="C#" Value="public Uri TypeScheme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri TypeScheme" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.TypeScheme" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeScheme As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ TypeScheme { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeScheme : Uri with get, set" Usage="System.Data.Services.Client.DataServiceContext.TypeScheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URI used to indicate what type scheme is used by the service.</summary>
        <value>A <see cref="T:System.Uri" /> object that contains the type scheme.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In an ATOM payload, the return value will be the scheme attribute of a category element used to identify the type of an entity. The default value is `http://schemas.microsoft.com/ado/2007/08/dataservices/scheme`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateObject">
      <MemberSignature Language="C#" Value="public void UpdateObject (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateObject(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.UpdateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateObject (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateObject(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.UpdateObject : obj -&gt; unit" Usage="dataServiceContext.UpdateObject entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The tracked entity to be assigned to the <see cref="F:System.Data.Services.Client.EntityStates.Modified" /> state.</param>
        <summary>Changes the state of the specified object in the <see cref="T:System.Data.Services.Client.DataServiceContext" /> to <see cref="F:System.Data.Services.Client.EntityStates.Modified" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example retrieves and modifies an existing object and then calls the <xref:System.Data.Services.Client.DataServiceContext.UpdateObject%2A> method on the <xref:System.Data.Services.Client.DataServiceContext> to mark the item in the context as updated. An HTTP MERGE message is sent to the data service when <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> is called. This example uses the <xref:System.Data.Services.Client.DataServiceContext> generated by the Add Service Reference tool based on the Northwind data service, which is created when you complete the [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#ModifyCustomer](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#modifycustomer)]
 [!code-vb[Astoria Northwind Client#ModifyCustomer](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#modifycustomer)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">When <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> state.</exception>
      </Docs>
    </Member>
    <Member MemberName="UsePostTunneling">
      <MemberSignature Language="C#" Value="public bool UsePostTunneling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePostTunneling" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.UsePostTunneling" />
      <MemberSignature Language="VB.NET" Value="Public Property UsePostTunneling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsePostTunneling { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsePostTunneling : bool with get, set" Usage="System.Data.Services.Client.DataServiceContext.UsePostTunneling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that indicates whether to use post tunneling.</summary>
        <value>A Boolean value that indicates whether to use post tunneling.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property controls whether create, update, and delete requests sent to the data service will use the post tunneling feature of the protocol or not. When set to true, tunneling is used. When set to false, standard HTTP methods are used.  
  
 The default value of this property is false.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritingEntity">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; WritingEntity;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; WritingEntity" />
      <MemberSignature Language="DocId" Value="E:System.Data.Services.Client.DataServiceContext.WritingEntity" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WritingEntity As EventHandler(Of ReadingWritingEntityEventArgs) " FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Data::Services::Client::ReadingWritingEntityEventArgs ^&gt; ^ WritingEntity;" />
      <MemberSignature Language="F#" Value="member this.WritingEntity : EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " Usage="member this.WritingEntity : System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event WritingEntity As EventHandler(Of ReadingWritingEntityEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs after an entity has been fully serialized into XML in a request message.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Handling the <xref:System.Data.Services.Client.DataServiceContext.WritingEntity> event enables you to change the XML in a request before it is sent.  
  
 The <xref:System.Data.Services.Client.DataServiceContext.WritingEntity> event may occur on a different thread when you call <xref:System.Data.Services.Client.DataServiceContext.BeginSaveChanges%28System.Data.Services.Client.SaveChangesOptions%2CSystem.AsyncCallback%2CSystem.Object%29> without including <xref:System.Data.Services.Client.SaveChangesOptions.Batch> in the supplied <xref:System.Data.Services.Client.SaveChangesOptions> value.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

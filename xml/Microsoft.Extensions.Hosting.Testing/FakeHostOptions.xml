<Type Name="FakeHostOptions" FullName="Microsoft.Extensions.Hosting.Testing.FakeHostOptions">
  <TypeSignature Language="C#" Value="public class FakeHostOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FakeHostOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Hosting.Testing.FakeHostOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class FakeHostOptions" />
  <TypeSignature Language="F#" Value="type FakeHostOptions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class FakeHostOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Options to configure <see cref="T:Microsoft.Extensions.Hosting.Testing.FakeHost" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FakeHostOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.Testing.FakeHostOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FakeHostOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FakeLogging">
      <MemberSignature Language="C#" Value="public bool FakeLogging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FakeLogging" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Hosting.Testing.FakeHostOptions.FakeLogging" />
      <MemberSignature Language="VB.NET" Value="Public Property FakeLogging As Boolean" />
      <MemberSignature Language="F#" Value="member this.FakeLogging : bool with get, set" Usage="Microsoft.Extensions.Hosting.Testing.FakeHostOptions.FakeLogging" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FakeLogging { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether fake logging is configured automatically.
            </summary>
        <value>
            The default value is <see langword="true" />.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FakeRedaction">
      <MemberSignature Language="C#" Value="public bool FakeRedaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FakeRedaction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Hosting.Testing.FakeHostOptions.FakeRedaction" />
      <MemberSignature Language="VB.NET" Value="Public Property FakeRedaction As Boolean" />
      <MemberSignature Language="F#" Value="member this.FakeRedaction : bool with get, set" Usage="Microsoft.Extensions.Hosting.Testing.FakeHostOptions.FakeRedaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FakeRedaction { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether fake redaction is configured automatically.
            </summary>
        <value>
            The default value is <see langword="true" />.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutDownTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ShutDownTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ShutDownTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Hosting.Testing.FakeHostOptions.ShutDownTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ShutDownTimeout As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.ShutDownTimeout : TimeSpan with get, set" Usage="Microsoft.Extensions.Hosting.Testing.FakeHostOptions.ShutDownTimeout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ShutDownTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the time limit for the host to shut down.
            </summary>
        <value>The default value is 10 seconds.</value>
        <remarks>This limit is used if there's no cancellation token.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartUpTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan StartUpTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan StartUpTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Hosting.Testing.FakeHostOptions.StartUpTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property StartUpTimeout As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.StartUpTimeout : TimeSpan with get, set" Usage="Microsoft.Extensions.Hosting.Testing.FakeHostOptions.StartUpTimeout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan StartUpTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the time limit for the host to start.
            </summary>
        <value>The default value is 5 seconds.</value>
        <remarks>This limit is used if there's no cancellation token.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeToLive">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToLive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToLive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Hosting.Testing.FakeHostOptions.TimeToLive" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToLive As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.TimeToLive : TimeSpan with get, set" Usage="Microsoft.Extensions.Hosting.Testing.FakeHostOptions.TimeToLive" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToLive { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the time limit for the host to be up.
            </summary>
        <value>The default is 30 seconds.</value>
        <remarks>
            -1 millisecond means infinite time to live.
            TimeToLive is not enforced when debugging.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateOnBuild">
      <MemberSignature Language="C#" Value="public bool ValidateOnBuild { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateOnBuild" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Hosting.Testing.FakeHostOptions.ValidateOnBuild" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateOnBuild As Boolean" />
      <MemberSignature Language="F#" Value="member this.ValidateOnBuild : bool with get, set" Usage="Microsoft.Extensions.Hosting.Testing.FakeHostOptions.ValidateOnBuild" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateOnBuild { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc cref="T:Microsoft.Extensions.DependencyInjection.ServiceProviderOptions" />
      </Docs>
    </Member>
    <Member MemberName="ValidateScopes">
      <MemberSignature Language="C#" Value="public bool ValidateScopes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateScopes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Hosting.Testing.FakeHostOptions.ValidateScopes" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateScopes As Boolean" />
      <MemberSignature Language="F#" Value="member this.ValidateScopes : bool with get, set" Usage="Microsoft.Extensions.Hosting.Testing.FakeHostOptions.ValidateScopes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateScopes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc cref="T:Microsoft.Extensions.DependencyInjection.ServiceProviderOptions" />
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="HostingFakesExtensions" FullName="Microsoft.Extensions.Hosting.Testing.HostingFakesExtensions">
  <TypeSignature Language="C#" Value="public static class HostingFakesExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HostingFakesExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Hosting.Testing.HostingFakesExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module HostingFakesExtensions" />
  <TypeSignature Language="F#" Value="type HostingFakesExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostingFakesExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods supporting host unit testing scenarios.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddFakeLoggingOutputSink">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Hosting.IHostBuilder AddFakeLoggingOutputSink (this Microsoft.Extensions.Hosting.IHostBuilder builder, Action&lt;string&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Hosting.IHostBuilder AddFakeLoggingOutputSink(class Microsoft.Extensions.Hosting.IHostBuilder builder, class System.Action`1&lt;string&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.Testing.HostingFakesExtensions.AddFakeLoggingOutputSink(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{System.String})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFakeLoggingOutputSink (builder As IHostBuilder, callback As Action(Of String)) As IHostBuilder" />
      <MemberSignature Language="F#" Value="static member AddFakeLoggingOutputSink : Microsoft.Extensions.Hosting.IHostBuilder * Action&lt;string&gt; -&gt; Microsoft.Extensions.Hosting.IHostBuilder" Usage="Microsoft.Extensions.Hosting.Testing.HostingFakesExtensions.AddFakeLoggingOutputSink (builder, callback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Hosting::IHostBuilder ^ AddFakeLoggingOutputSink(Microsoft::Extensions::Hosting::IHostBuilder ^ builder, Action&lt;System::String ^&gt; ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Hosting.IHostBuilder" RefType="this" />
        <Parameter Name="callback" Type="System.Action&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">An <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> instance.</param>
        <param name="callback">The action to invoke on each log message.</param>
        <summary>
            Adds an action invoked on each log message.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Hosting.IHostBuilder Configure (this Microsoft.Extensions.Hosting.IHostBuilder builder, Action&lt;Microsoft.Extensions.Hosting.IHostBuilder&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Hosting.IHostBuilder Configure(class Microsoft.Extensions.Hosting.IHostBuilder builder, class System.Action`1&lt;class Microsoft.Extensions.Hosting.IHostBuilder&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.Testing.HostingFakesExtensions.Configure(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.IHostBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Configure (builder As IHostBuilder, configure As Action(Of IHostBuilder)) As IHostBuilder" />
      <MemberSignature Language="F#" Value="static member Configure : Microsoft.Extensions.Hosting.IHostBuilder * Action&lt;Microsoft.Extensions.Hosting.IHostBuilder&gt; -&gt; Microsoft.Extensions.Hosting.IHostBuilder" Usage="Microsoft.Extensions.Hosting.Testing.HostingFakesExtensions.Configure (builder, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Hosting::IHostBuilder ^ Configure(Microsoft::Extensions::Hosting::IHostBuilder ^ builder, Action&lt;Microsoft::Extensions::Hosting::IHostBuilder ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Hosting.IHostBuilder" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Hosting.IHostBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">An <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> instance.</param>
        <param name="configure">Configures the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> instance.</param>
        <summary>
            Exposes <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for changes via a delegate.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> instance.</returns>
        <remarks>Designed to ease host configuration in unit tests by defining common configuration methods.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureAppConfiguration">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Hosting.IHostBuilder ConfigureAppConfiguration (this Microsoft.Extensions.Hosting.IHostBuilder builder, params (string key, string value)[] configurations);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Hosting.IHostBuilder ConfigureAppConfiguration(class Microsoft.Extensions.Hosting.IHostBuilder builder, valuetype System.ValueTuple`2&lt;string, string&gt;[] configurations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.Testing.HostingFakesExtensions.ConfigureAppConfiguration(Microsoft.Extensions.Hosting.IHostBuilder,System.ValueTuple{System.String,System.String}[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigureAppConfiguration (builder As IHostBuilder, ParamArray configurations As ValueTuple(Of String, String)()) As IHostBuilder" />
      <MemberSignature Language="F#" Value="static member ConfigureAppConfiguration : Microsoft.Extensions.Hosting.IHostBuilder * ValueTuple&lt;string, string&gt;[] -&gt; Microsoft.Extensions.Hosting.IHostBuilder" Usage="Microsoft.Extensions.Hosting.Testing.HostingFakesExtensions.ConfigureAppConfiguration (builder, configurations)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Hosting::IHostBuilder ^ ConfigureAppConfiguration(Microsoft::Extensions::Hosting::IHostBuilder ^ builder, ... cli::array &lt;ValueTuple&lt;System::String ^, System::String ^&gt;&gt; ^ configurations);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Hosting.IHostBuilder" RefType="this" />
        <Parameter Name="configurations" Type="System.ValueTuple&lt;System.String,System.String&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "key", "value" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "key", "value" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="builder">An <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> instance.</param>
        <param name="configurations">A list of key and value tuples that will be used as configuration entries.</param>
        <summary>
            Adds configuration entries.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureAppConfiguration">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Hosting.IHostBuilder ConfigureAppConfiguration (this Microsoft.Extensions.Hosting.IHostBuilder builder, string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Hosting.IHostBuilder ConfigureAppConfiguration(class Microsoft.Extensions.Hosting.IHostBuilder builder, string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.Testing.HostingFakesExtensions.ConfigureAppConfiguration(Microsoft.Extensions.Hosting.IHostBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigureAppConfiguration (builder As IHostBuilder, key As String, value As String) As IHostBuilder" />
      <MemberSignature Language="F#" Value="static member ConfigureAppConfiguration : Microsoft.Extensions.Hosting.IHostBuilder * string * string -&gt; Microsoft.Extensions.Hosting.IHostBuilder" Usage="Microsoft.Extensions.Hosting.Testing.HostingFakesExtensions.ConfigureAppConfiguration (builder, key, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Hosting::IHostBuilder ^ ConfigureAppConfiguration(Microsoft::Extensions::Hosting::IHostBuilder ^ builder, System::String ^ key, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Hosting.IHostBuilder" RefType="this" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">An <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> instance.</param>
        <param name="key">The configuration key.</param>
        <param name="value">The configuration value.</param>
        <summary>
            Adds a configuration value.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureHostConfiguration">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Hosting.IHostBuilder ConfigureHostConfiguration (this Microsoft.Extensions.Hosting.IHostBuilder builder, params (string key, string value)[] configurations);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Hosting.IHostBuilder ConfigureHostConfiguration(class Microsoft.Extensions.Hosting.IHostBuilder builder, valuetype System.ValueTuple`2&lt;string, string&gt;[] configurations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.Testing.HostingFakesExtensions.ConfigureHostConfiguration(Microsoft.Extensions.Hosting.IHostBuilder,System.ValueTuple{System.String,System.String}[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigureHostConfiguration (builder As IHostBuilder, ParamArray configurations As ValueTuple(Of String, String)()) As IHostBuilder" />
      <MemberSignature Language="F#" Value="static member ConfigureHostConfiguration : Microsoft.Extensions.Hosting.IHostBuilder * ValueTuple&lt;string, string&gt;[] -&gt; Microsoft.Extensions.Hosting.IHostBuilder" Usage="Microsoft.Extensions.Hosting.Testing.HostingFakesExtensions.ConfigureHostConfiguration (builder, configurations)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Hosting::IHostBuilder ^ ConfigureHostConfiguration(Microsoft::Extensions::Hosting::IHostBuilder ^ builder, ... cli::array &lt;ValueTuple&lt;System::String ^, System::String ^&gt;&gt; ^ configurations);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Hosting.IHostBuilder" RefType="this" />
        <Parameter Name="configurations" Type="System.ValueTuple&lt;System.String,System.String&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "key", "value" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "key", "value" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="builder">An <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> instance.</param>
        <param name="configurations">A list of key and value tuples that will be used as configuration entries.</param>
        <summary>
            Adds configuration entries.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureHostConfiguration">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Hosting.IHostBuilder ConfigureHostConfiguration (this Microsoft.Extensions.Hosting.IHostBuilder builder, string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Hosting.IHostBuilder ConfigureHostConfiguration(class Microsoft.Extensions.Hosting.IHostBuilder builder, string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.Testing.HostingFakesExtensions.ConfigureHostConfiguration(Microsoft.Extensions.Hosting.IHostBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigureHostConfiguration (builder As IHostBuilder, key As String, value As String) As IHostBuilder" />
      <MemberSignature Language="F#" Value="static member ConfigureHostConfiguration : Microsoft.Extensions.Hosting.IHostBuilder * string * string -&gt; Microsoft.Extensions.Hosting.IHostBuilder" Usage="Microsoft.Extensions.Hosting.Testing.HostingFakesExtensions.ConfigureHostConfiguration (builder, key, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Hosting::IHostBuilder ^ ConfigureHostConfiguration(Microsoft::Extensions::Hosting::IHostBuilder ^ builder, System::String ^ key, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Hosting.IHostBuilder" RefType="this" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">An <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> instance.</param>
        <param name="key">The configuration key.</param>
        <param name="value">The configuration value.</param>
        <summary>
            Adds a configuration value.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFakeLogCollector">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogCollector GetFakeLogCollector (this Microsoft.Extensions.Hosting.IHost host);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogCollector GetFakeLogCollector(class Microsoft.Extensions.Hosting.IHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.Testing.HostingFakesExtensions.GetFakeLogCollector(Microsoft.Extensions.Hosting.IHost)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFakeLogCollector (host As IHost) As FakeLogCollector" />
      <MemberSignature Language="F#" Value="static member GetFakeLogCollector : Microsoft.Extensions.Hosting.IHost -&gt; Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogCollector" Usage="Microsoft.Extensions.Hosting.Testing.HostingFakesExtensions.GetFakeLogCollector host" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Telemetry::Testing::Logging::FakeLogCollector ^ GetFakeLogCollector(Microsoft::Extensions::Hosting::IHost ^ host);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogCollector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Microsoft.Extensions.Hosting.IHost" RefType="this" />
      </Parameters>
      <Docs>
        <param name="host">An <see cref="T:Microsoft.Extensions.Hosting.IHost" /> instance.</param>
        <summary>
            Gets the object that collects log records sent to the fake logger.
            </summary>
        <returns>The collector which tracks records logged to fake loggers.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">When no collector exists in the provider.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFakeRedactionCollector">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector GetFakeRedactionCollector (this Microsoft.Extensions.Hosting.IHost host);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector GetFakeRedactionCollector(class Microsoft.Extensions.Hosting.IHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.Testing.HostingFakesExtensions.GetFakeRedactionCollector(Microsoft.Extensions.Hosting.IHost)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFakeRedactionCollector (host As IHost) As FakeRedactionCollector" />
      <MemberSignature Language="F#" Value="static member GetFakeRedactionCollector : Microsoft.Extensions.Hosting.IHost -&gt; Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector" Usage="Microsoft.Extensions.Hosting.Testing.HostingFakesExtensions.GetFakeRedactionCollector host" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Compliance::Testing::FakeRedactionCollector ^ GetFakeRedactionCollector(Microsoft::Extensions::Hosting::IHost ^ host);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Microsoft.Extensions.Hosting.IHost" RefType="this" />
      </Parameters>
      <Docs>
        <param name="host">An <see cref="T:Microsoft.Extensions.Hosting.IHost" /> instance.</param>
        <summary>
            Gets the object reporting all redactions performed.
            </summary>
        <returns>The collector which tracks redactions performed on log messages.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">When no collector exists in the provider.</exception>
      </Docs>
    </Member>
    <Member MemberName="StartAndStopAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task StartAndStopAsync (this Microsoft.Extensions.Hosting.IHostedService service, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task StartAndStopAsync(class Microsoft.Extensions.Hosting.IHostedService service, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.Testing.HostingFakesExtensions.StartAndStopAsync(Microsoft.Extensions.Hosting.IHostedService,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StartAndStopAsync (service As IHostedService, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="static member StartAndStopAsync : Microsoft.Extensions.Hosting.IHostedService * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Extensions.Hosting.Testing.HostingFakesExtensions.StartAndStopAsync (service, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Microsoft.Extensions.Hosting.IHostedService" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="service">The tested service.</param>
        <param name="cancellationToken">Cancellation token. See <see cref="T:System.Threading.CancellationToken" />.</param>
        <summary>
            Starts and immediately stops the service.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

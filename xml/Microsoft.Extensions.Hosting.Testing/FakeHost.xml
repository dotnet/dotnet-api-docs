<Type Name="FakeHost" FullName="Microsoft.Extensions.Hosting.Testing.FakeHost">
  <TypeSignature Language="C#" Value="public sealed class FakeHost : IDisposable, Microsoft.Extensions.Hosting.IHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FakeHost extends System.Object implements class Microsoft.Extensions.Hosting.IHost, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Hosting.Testing.FakeHost" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FakeHost&#xA;Implements IDisposable, IHost" />
  <TypeSignature Language="F#" Value="type FakeHost = class&#xA;    interface IHost&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class FakeHost sealed : IDisposable, Microsoft::Extensions::Hosting::IHost" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Hosting.IHost</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateBuilder">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Hosting.IHostBuilder CreateBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Hosting.IHostBuilder CreateBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.Testing.FakeHost.CreateBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBuilder () As IHostBuilder" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : unit -&gt; Microsoft.Extensions.Hosting.IHostBuilder" Usage="Microsoft.Extensions.Hosting.Testing.FakeHost.CreateBuilder " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Extensions::Hosting::IHostBuilder ^ CreateBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Hosting.IHostBuilder CreateBuilder (Microsoft.Extensions.Hosting.Testing.FakeHostOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Hosting.IHostBuilder CreateBuilder(class Microsoft.Extensions.Hosting.Testing.FakeHostOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.Testing.FakeHost.CreateBuilder(Microsoft.Extensions.Hosting.Testing.FakeHostOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBuilder (options As FakeHostOptions) As IHostBuilder" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : Microsoft.Extensions.Hosting.Testing.FakeHostOptions -&gt; Microsoft.Extensions.Hosting.IHostBuilder" Usage="Microsoft.Extensions.Hosting.Testing.FakeHost.CreateBuilder options" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Extensions::Hosting::IHostBuilder ^ CreateBuilder(Microsoft::Extensions::Hosting::Testing::FakeHostOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Hosting.Testing.FakeHostOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Hosting.IHostBuilder CreateBuilder (Action&lt;Microsoft.Extensions.Hosting.Testing.FakeHostOptions&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Hosting.IHostBuilder CreateBuilder(class System.Action`1&lt;class Microsoft.Extensions.Hosting.Testing.FakeHostOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.Testing.FakeHost.CreateBuilder(System.Action{Microsoft.Extensions.Hosting.Testing.FakeHostOptions})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBuilder (configure As Action(Of FakeHostOptions)) As IHostBuilder" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : Action&lt;Microsoft.Extensions.Hosting.Testing.FakeHostOptions&gt; -&gt; Microsoft.Extensions.Hosting.IHostBuilder" Usage="Microsoft.Extensions.Hosting.Testing.FakeHost.CreateBuilder configure" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Extensions::Hosting::IHostBuilder ^ CreateBuilder(Action&lt;Microsoft::Extensions::Hosting::Testing::FakeHostOptions ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Hosting.Testing.FakeHostOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="configure">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.Testing.FakeHost.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="fakeHost.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Services">
      <MemberSignature Language="C#" Value="public IServiceProvider Services { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider Services" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Hosting.Testing.FakeHost.Services" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Services As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.Services : IServiceProvider" Usage="Microsoft.Extensions.Hosting.Testing.FakeHost.Services" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ Services { IServiceProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Extensions.Hosting.IHost.Services</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task StartAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.Testing.FakeHost.StartAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartAsync (Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member StartAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.StartAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="fakeHost.StartAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Hosting.IHost.StartAsync(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StopAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task StopAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.Testing.FakeHost.StopAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function StopAsync (Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member StopAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.StopAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="fakeHost.StopAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Hosting.IHost.StopAsync(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

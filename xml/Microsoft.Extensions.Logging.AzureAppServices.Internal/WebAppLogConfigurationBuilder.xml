<Type Name="WebAppLogConfigurationBuilder" FullName="Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder">
  <TypeSignature Language="C#" Value="public class WebAppLogConfigurationBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebAppLogConfigurationBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class WebAppLogConfigurationBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebAppLogConfigurationBuilder" />
  <TypeSignature Language="F#" Value="type WebAppLogConfigurationBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging.AzureAppServices</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Used to create instances of <see cref="T:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfiguration" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebAppLogConfigurationBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebAppLogConfigurationBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.AzureAppServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfiguration Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfiguration Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As WebAppLogConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Logging::AzureAppServices::Internal::WebAppLogConfiguration ^ Build();" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfiguration" Usage="webAppLogConfigurationBuilder.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.AzureAppServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfiguration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Builds the <see cref="T:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfiguration" /> instance.</summary>
        <returns>The configuration object</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBlobLoggingEnabled">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder SetBlobLoggingEnabled (bool blobLoggingEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder SetBlobLoggingEnabled(bool blobLoggingEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder.SetBlobLoggingEnabled(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetBlobLoggingEnabled (blobLoggingEnabled As Boolean) As WebAppLogConfigurationBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Logging::AzureAppServices::Internal::WebAppLogConfigurationBuilder ^ SetBlobLoggingEnabled(bool blobLoggingEnabled);" />
      <MemberSignature Language="F#" Value="member this.SetBlobLoggingEnabled : bool -&gt; Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder" Usage="webAppLogConfigurationBuilder.SetBlobLoggingEnabled blobLoggingEnabled" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.AzureAppServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobLoggingEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="blobLoggingEnabled">True if file logging is enabled, false otherwise</param>
        <summary>Sets a value indicating whether or not blob logging is enabled.</summary>
        <returns>The builder instance</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBlobLoggingLevel">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder SetBlobLoggingLevel (Microsoft.Extensions.Logging.LogLevel logLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder SetBlobLoggingLevel(valuetype Microsoft.Extensions.Logging.LogLevel logLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder.SetBlobLoggingLevel(Microsoft.Extensions.Logging.LogLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetBlobLoggingLevel (logLevel As LogLevel) As WebAppLogConfigurationBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Logging::AzureAppServices::Internal::WebAppLogConfigurationBuilder ^ SetBlobLoggingLevel(Microsoft::Extensions::Logging::LogLevel logLevel);" />
      <MemberSignature Language="F#" Value="member this.SetBlobLoggingLevel : Microsoft.Extensions.Logging.LogLevel -&gt; Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder" Usage="webAppLogConfigurationBuilder.SetBlobLoggingLevel logLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.AzureAppServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" />
      </Parameters>
      <Docs>
        <param name="logLevel">Blob logging level</param>
        <summary>Sets logging level for the blob logger.</summary>
        <returns>The builder instance</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBlobLoggingUrl">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder SetBlobLoggingUrl (string blobUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder SetBlobLoggingUrl(string blobUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder.SetBlobLoggingUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetBlobLoggingUrl (blobUrl As String) As WebAppLogConfigurationBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Logging::AzureAppServices::Internal::WebAppLogConfigurationBuilder ^ SetBlobLoggingUrl(System::String ^ blobUrl);" />
      <MemberSignature Language="F#" Value="member this.SetBlobLoggingUrl : string -&gt; Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder" Usage="webAppLogConfigurationBuilder.SetBlobLoggingUrl blobUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.AzureAppServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="blobUrl">The container in which blobs are placed</param>
        <summary>Sets blob logging url.</summary>
        <returns>The builder instance</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFileLoggingEnabled">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder SetFileLoggingEnabled (bool fileLoggingEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder SetFileLoggingEnabled(bool fileLoggingEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder.SetFileLoggingEnabled(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetFileLoggingEnabled (fileLoggingEnabled As Boolean) As WebAppLogConfigurationBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Logging::AzureAppServices::Internal::WebAppLogConfigurationBuilder ^ SetFileLoggingEnabled(bool fileLoggingEnabled);" />
      <MemberSignature Language="F#" Value="member this.SetFileLoggingEnabled : bool -&gt; Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder" Usage="webAppLogConfigurationBuilder.SetFileLoggingEnabled fileLoggingEnabled" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.AzureAppServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileLoggingEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileLoggingEnabled">True if file logging is enabled, false otherwise</param>
        <summary>Sets a value indicating whether or not file logging is enabled.</summary>
        <returns>The builder instance</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFileLoggingFolder">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder SetFileLoggingFolder (string folder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder SetFileLoggingFolder(string folder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder.SetFileLoggingFolder(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetFileLoggingFolder (folder As String) As WebAppLogConfigurationBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Logging::AzureAppServices::Internal::WebAppLogConfigurationBuilder ^ SetFileLoggingFolder(System::String ^ folder);" />
      <MemberSignature Language="F#" Value="member this.SetFileLoggingFolder : string -&gt; Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder" Usage="webAppLogConfigurationBuilder.SetFileLoggingFolder folder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.AzureAppServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="folder" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="folder">File logging folder</param>
        <summary>Sets the folder in which file logs end up.</summary>
        <returns>The builder instance</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFileLoggingLevel">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder SetFileLoggingLevel (Microsoft.Extensions.Logging.LogLevel logLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder SetFileLoggingLevel(valuetype Microsoft.Extensions.Logging.LogLevel logLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder.SetFileLoggingLevel(Microsoft.Extensions.Logging.LogLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetFileLoggingLevel (logLevel As LogLevel) As WebAppLogConfigurationBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Logging::AzureAppServices::Internal::WebAppLogConfigurationBuilder ^ SetFileLoggingLevel(Microsoft::Extensions::Logging::LogLevel logLevel);" />
      <MemberSignature Language="F#" Value="member this.SetFileLoggingLevel : Microsoft.Extensions.Logging.LogLevel -&gt; Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder" Usage="webAppLogConfigurationBuilder.SetFileLoggingLevel logLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.AzureAppServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" />
      </Parameters>
      <Docs>
        <param name="logLevel">File logging level</param>
        <summary>Sets logging level for the file logger.</summary>
        <returns>The builder instance</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsRunningInAzureWebApps">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder SetIsRunningInAzureWebApps (bool isRunningInAzureWebApps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder SetIsRunningInAzureWebApps(bool isRunningInAzureWebApps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder.SetIsRunningInAzureWebApps(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetIsRunningInAzureWebApps (isRunningInAzureWebApps As Boolean) As WebAppLogConfigurationBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Logging::AzureAppServices::Internal::WebAppLogConfigurationBuilder ^ SetIsRunningInAzureWebApps(bool isRunningInAzureWebApps);" />
      <MemberSignature Language="F#" Value="member this.SetIsRunningInAzureWebApps : bool -&gt; Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder" Usage="webAppLogConfigurationBuilder.SetIsRunningInAzureWebApps isRunningInAzureWebApps" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.AzureAppServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.AzureAppServices.Internal.WebAppLogConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isRunningInAzureWebApps" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isRunningInAzureWebApps">True if running in Azure, false otherwise</param>
        <summary>Sets a value indicating whether or not we're in an Azure context.</summary>
        <returns>The builder instance</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ChatConversationEvaluator" FullName="Microsoft.Extensions.AI.Evaluation.Quality.ChatConversationEvaluator">
  <TypeSignature Language="C#" Value="public abstract class ChatConversationEvaluator : Microsoft.Extensions.AI.Evaluation.IEvaluator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChatConversationEvaluator extends System.Object implements class Microsoft.Extensions.AI.Evaluation.IEvaluator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.Evaluation.Quality.ChatConversationEvaluator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChatConversationEvaluator&#xA;Implements IEvaluator" />
  <TypeSignature Language="F#" Value="type ChatConversationEvaluator = class&#xA;    interface IEvaluator" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChatConversationEvaluator abstract : Microsoft::Extensions::AI::Evaluation::IEvaluator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.AI.Evaluation.IEvaluator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            An <see langword="abstract" /> base class that can be used to implement an AI-based <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChatConversationEvaluator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Quality.ChatConversationEvaluator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChatConversationEvaluator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.ValueTask&lt;(bool canRender, int remainingTokenBudget)&gt; CanRenderAsync (Microsoft.Extensions.AI.ChatMessage message, int tokenBudget, Microsoft.Extensions.AI.Evaluation.ChatConfiguration chatConfiguration, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype System.ValueTuple`2&lt;bool, int32&gt;&gt; CanRenderAsync(class Microsoft.Extensions.AI.ChatMessage message, int32 tokenBudget, class Microsoft.Extensions.AI.Evaluation.ChatConfiguration chatConfiguration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Quality.ChatConversationEvaluator.CanRenderAsync(Microsoft.Extensions.AI.ChatMessage,System.Int32,Microsoft.Extensions.AI.Evaluation.ChatConfiguration,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CanRenderAsync (message As ChatMessage, tokenBudget As Integer, chatConfiguration As ChatConfiguration, cancellationToken As CancellationToken) As ValueTask(Of ValueTuple(Of Boolean, Integer))" />
      <MemberSignature Language="F#" Value="abstract member CanRenderAsync : Microsoft.Extensions.AI.ChatMessage * int * Microsoft.Extensions.AI.Evaluation.ChatConfiguration * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;ValueTuple&lt;bool, int&gt;&gt;&#xA;override this.CanRenderAsync : Microsoft.Extensions.AI.ChatMessage * int * Microsoft.Extensions.AI.Evaluation.ChatConfiguration * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;ValueTuple&lt;bool, int&gt;&gt;" Usage="chatConversationEvaluator.CanRenderAsync (message, tokenBudget, chatConfiguration, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::ValueTask&lt;ValueTuple&lt;bool, int&gt;&gt; CanRenderAsync(Microsoft::Extensions::AI::ChatMessage ^ message, int tokenBudget, Microsoft::Extensions::AI::Evaluation::ChatConfiguration ^ chatConfiguration, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.ValueTuple&lt;System.Boolean,System.Int32&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-10.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
          </Attribute>
          <Attribute FrameworkAlternate="net-10.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "canRender", "remainingTokenBudget" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "canRender", "remainingTokenBudget" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Microsoft.Extensions.AI.ChatMessage" />
        <Parameter Name="tokenBudget" Type="System.Int32" />
        <Parameter Name="chatConfiguration" Type="Microsoft.Extensions.AI.Evaluation.ChatConfiguration" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">
            A message that is part of the conversation history for the response being evaluated and that is to be rendered
            as part of the evaluation prompt.
            </param>
        <param name="tokenBudget">
            The number of tokens available for the rendering additional content as part of the evaluation prompt.
            </param>
        <param name="chatConfiguration">
            A <see cref="T:Microsoft.Extensions.AI.Evaluation.ChatConfiguration" /> that specifies the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> and the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluationTokenCounter" /> that this <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" /> uses to perform the evaluation.
            </param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that can cancel the operation.</param>
        <summary>
            Determines if there is sufficient <paramref name="tokenBudget" /> remaining to render the
            supplied <paramref name="message" /> as part of the evaluation prompt that this <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" /> uses.
            </summary>
        <returns>
            A tuple containing a <see langword="bool" /> indicating whether there is sufficient
            <paramref name="tokenBudget" /> remaining to render the supplied <paramref name="message" /> as part of the
            evaluation prompt, and an <see langword="int" /> containing the remaining token budget that would be available
            once this <paramref name="message" /> is rendered.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChatOptions">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Extensions.AI.ChatOptions? ChatOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.ChatOptions ChatOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Quality.ChatConversationEvaluator.ChatOptions" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ChatOptions As ChatOptions" />
      <MemberSignature Language="F#" Value="member this.ChatOptions : Microsoft.Extensions.AI.ChatOptions" Usage="Microsoft.Extensions.AI.Evaluation.Quality.ChatConversationEvaluator.ChatOptions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::Extensions::AI::ChatOptions ^ ChatOptions { Microsoft::Extensions::AI::ChatOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.ChatOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.Extensions.AI.ChatOptions" /> that this <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" /> uses when performing evaluations.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt; EvaluateAsync (System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt; messages, Microsoft.Extensions.AI.ChatMessage modelResponse, Microsoft.Extensions.AI.Evaluation.ChatConfiguration? chatConfiguration = default, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt;? additionalContext = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt; EvaluateAsync(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; messages, class Microsoft.Extensions.AI.ChatMessage modelResponse, class Microsoft.Extensions.AI.Evaluation.ChatConfiguration chatConfiguration, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt; additionalContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Quality.ChatConversationEvaluator.EvaluateAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatMessage,Microsoft.Extensions.AI.Evaluation.ChatConfiguration,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluateAsync (messages As IEnumerable(Of ChatMessage), modelResponse As ChatMessage, Optional chatConfiguration As ChatConfiguration = Nothing, Optional additionalContext As IEnumerable(Of EvaluationContext) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of EvaluationResult)" />
      <MemberSignature Language="F#" Value="abstract member EvaluateAsync : seq&lt;Microsoft.Extensions.AI.ChatMessage&gt; * Microsoft.Extensions.AI.ChatMessage * Microsoft.Extensions.AI.Evaluation.ChatConfiguration * seq&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt;&#xA;override this.EvaluateAsync : seq&lt;Microsoft.Extensions.AI.ChatMessage&gt; * Microsoft.Extensions.AI.ChatMessage * Microsoft.Extensions.AI.Evaluation.ChatConfiguration * seq&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt;" Usage="chatConversationEvaluator.EvaluateAsync (messages, modelResponse, chatConfiguration, additionalContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.AI.Evaluation.IEvaluator.EvaluateAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatMessage,Microsoft.Extensions.AI.Evaluation.ChatConfiguration,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-10.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messages" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt;" />
        <Parameter Name="modelResponse" Type="Microsoft.Extensions.AI.ChatMessage" />
        <Parameter Name="chatConfiguration" Type="Microsoft.Extensions.AI.Evaluation.ChatConfiguration">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="additionalContext" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messages">To be added.</param>
        <param name="modelResponse">To be added.</param>
        <param name="chatConfiguration">To be added.</param>
        <param name="additionalContext">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="EvaluationMetricNames">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IReadOnlyCollection&lt;string&gt; EvaluationMetricNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;string&gt; EvaluationMetricNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Quality.ChatConversationEvaluator.EvaluationMetricNames" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property EvaluationMetricNames As IReadOnlyCollection(Of String)" />
      <MemberSignature Language="F#" Value="member this.EvaluationMetricNames : System.Collections.Generic.IReadOnlyCollection&lt;string&gt;" Usage="Microsoft.Extensions.AI.Evaluation.Quality.ChatConversationEvaluator.EvaluationMetricNames" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IReadOnlyCollection&lt;System::String ^&gt; ^ EvaluationMetricNames { System::Collections::Generic::IReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Extensions.AI.Evaluation.IEvaluator.EvaluationMetricNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IgnoresHistory">
      <MemberSignature Language="C#" Value="protected abstract bool IgnoresHistory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoresHistory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Quality.ChatConversationEvaluator.IgnoresHistory" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property IgnoresHistory As Boolean" />
      <MemberSignature Language="F#" Value="member this.IgnoresHistory : bool" Usage="Microsoft.Extensions.AI.Evaluation.Quality.ChatConversationEvaluator.IgnoresHistory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property bool IgnoresHistory { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether this <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" /> considers the entire conversation history (in
            addition to the request and response being evaluated) as part of the evaluation it performs.
            </summary>
        <value>
          <see langword="true" /> if this <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" /> considers the entire conversation history as part of
            the evaluation it performs; <see langword="false" /> otherwise.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeResult">
      <MemberSignature Language="C#" Value="protected abstract Microsoft.Extensions.AI.Evaluation.EvaluationResult InitializeResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.Extensions.AI.Evaluation.EvaluationResult InitializeResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Quality.ChatConversationEvaluator.InitializeResult" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function InitializeResult () As EvaluationResult" />
      <MemberSignature Language="F#" Value="abstract member InitializeResult : unit -&gt; Microsoft.Extensions.AI.Evaluation.EvaluationResult" Usage="chatConversationEvaluator.InitializeResult " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract Microsoft::Extensions::AI::Evaluation::EvaluationResult ^ InitializeResult();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.Evaluation.EvaluationResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns an <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> that includes default values for all the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s supported by this <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />.
            </summary>
        <returns>
            An <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> that includes default values for all the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s supported by this <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />.
            </returns>
        <remarks>
            The <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationMetric.Name" />s of the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s contained in the returned
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> should match <see cref="P:Microsoft.Extensions.AI.Evaluation.Quality.ChatConversationEvaluator.EvaluationMetricNames" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseEvaluationResponseAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.ValueTask ParseEvaluationResponseAsync (string modelResponseForEvaluationPrompt, Microsoft.Extensions.AI.Evaluation.EvaluationResult result, Microsoft.Extensions.AI.Evaluation.ChatConfiguration chatConfiguration, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask ParseEvaluationResponseAsync(string modelResponseForEvaluationPrompt, class Microsoft.Extensions.AI.Evaluation.EvaluationResult result, class Microsoft.Extensions.AI.Evaluation.ChatConfiguration chatConfiguration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Quality.ChatConversationEvaluator.ParseEvaluationResponseAsync(System.String,Microsoft.Extensions.AI.Evaluation.EvaluationResult,Microsoft.Extensions.AI.Evaluation.ChatConfiguration,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ParseEvaluationResponseAsync (modelResponseForEvaluationPrompt As String, result As EvaluationResult, chatConfiguration As ChatConfiguration, cancellationToken As CancellationToken) As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member ParseEvaluationResponseAsync : string * Microsoft.Extensions.AI.Evaluation.EvaluationResult * Microsoft.Extensions.AI.Evaluation.ChatConfiguration * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="chatConversationEvaluator.ParseEvaluationResponseAsync (modelResponseForEvaluationPrompt, result, chatConfiguration, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Threading::Tasks::ValueTask ParseEvaluationResponseAsync(System::String ^ modelResponseForEvaluationPrompt, Microsoft::Extensions::AI::Evaluation::EvaluationResult ^ result, Microsoft::Extensions::AI::Evaluation::ChatConfiguration ^ chatConfiguration, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelResponseForEvaluationPrompt" Type="System.String" />
        <Parameter Name="result" Type="Microsoft.Extensions.AI.Evaluation.EvaluationResult" />
        <Parameter Name="chatConfiguration" Type="Microsoft.Extensions.AI.Evaluation.ChatConfiguration" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelResponseForEvaluationPrompt">
            An AI-generated response that contains the result of the current evaluation.
            </param>
        <param name="result">
            An <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> that includes a collection of <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s that are
            supported by this <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />.
            </param>
        <param name="chatConfiguration">
            A <see cref="T:Microsoft.Extensions.AI.Evaluation.ChatConfiguration" /> that specifies the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> and the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluationTokenCounter" /> that this <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" /> uses to perform the evaluation.
            </param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that can cancel the operation.</param>
        <summary>
            Parses the evaluation result present in <paramref name="modelResponseForEvaluationPrompt" /> into the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s present in the supplied <paramref name="result" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.ValueTask" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.ValueTask&lt;string&gt; RenderAsync (Microsoft.Extensions.AI.ChatMessage message, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;string&gt; RenderAsync(class Microsoft.Extensions.AI.ChatMessage message, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Quality.ChatConversationEvaluator.RenderAsync(Microsoft.Extensions.AI.ChatMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAsync (message As ChatMessage, cancellationToken As CancellationToken) As ValueTask(Of String)" />
      <MemberSignature Language="F#" Value="abstract member RenderAsync : Microsoft.Extensions.AI.ChatMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;string&gt;&#xA;override this.RenderAsync : Microsoft.Extensions.AI.ChatMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;string&gt;" Usage="chatConversationEvaluator.RenderAsync (message, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::ValueTask&lt;System::String ^&gt; RenderAsync(Microsoft::Extensions::AI::ChatMessage ^ message, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.String&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-10.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Microsoft.Extensions.AI.ChatMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">
            A message that is part of the conversation history for the response being evaluated and that is to be rendered
            as part of the evaluation prompt.
            </param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that can cancel the operation.</param>
        <summary>
            Renders the supplied <paramref name="message" /> to a string that can be included as part of the evaluation
            prompt that this <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" /> uses.
            </summary>
        <returns>
            A string representation of the supplied <paramref name="message" /> that can be included as part of the
            evaluation prompt.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEvaluationPromptAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.ValueTask&lt;string&gt; RenderEvaluationPromptAsync (Microsoft.Extensions.AI.ChatMessage? userRequest, Microsoft.Extensions.AI.ChatMessage modelResponse, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt;? includedHistory, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt;? additionalContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;string&gt; RenderEvaluationPromptAsync(class Microsoft.Extensions.AI.ChatMessage userRequest, class Microsoft.Extensions.AI.ChatMessage modelResponse, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; includedHistory, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt; additionalContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Quality.ChatConversationEvaluator.RenderEvaluationPromptAsync(Microsoft.Extensions.AI.ChatMessage,Microsoft.Extensions.AI.ChatMessage,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function RenderEvaluationPromptAsync (userRequest As ChatMessage, modelResponse As ChatMessage, includedHistory As IEnumerable(Of ChatMessage), additionalContext As IEnumerable(Of EvaluationContext), cancellationToken As CancellationToken) As ValueTask(Of String)" />
      <MemberSignature Language="F#" Value="abstract member RenderEvaluationPromptAsync : Microsoft.Extensions.AI.ChatMessage * Microsoft.Extensions.AI.ChatMessage * seq&lt;Microsoft.Extensions.AI.ChatMessage&gt; * seq&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;string&gt;" Usage="chatConversationEvaluator.RenderEvaluationPromptAsync (userRequest, modelResponse, includedHistory, additionalContext, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Threading::Tasks::ValueTask&lt;System::String ^&gt; RenderEvaluationPromptAsync(Microsoft::Extensions::AI::ChatMessage ^ userRequest, Microsoft::Extensions::AI::ChatMessage ^ modelResponse, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ includedHistory, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::AI::Evaluation::EvaluationContext ^&gt; ^ additionalContext, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.String&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-10.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userRequest" Type="Microsoft.Extensions.AI.ChatMessage">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="modelResponse" Type="Microsoft.Extensions.AI.ChatMessage" />
        <Parameter Name="includedHistory" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="additionalContext" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userRequest">
            The request that produced the <paramref name="modelResponse" /> that is to be evaluated.
            </param>
        <param name="modelResponse">The response that is to be evaluated.</param>
        <param name="includedHistory">
            The conversation history (excluding the <paramref name="userRequest" /> and <paramref name="modelResponse" />)
            that is to be included as part of the evaluation prompt.
            </param>
        <param name="additionalContext">
            Additional contextual information (beyond that which is available in the <paramref name="userRequest" /> and
            <paramref name="includedHistory" />) that this <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" /> may need to accurately evaluate the
            supplied <paramref name="modelResponse" />.
            </param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that can cancel the operation.</param>
        <summary>
            Renders the information present in the supplied parameters into a prompt that this <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />
            uses to perform the evaluation.
            </summary>
        <returns>The evaluation prompt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemPrompt">
      <MemberSignature Language="C#" Value="protected virtual string? SystemPrompt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SystemPrompt" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Quality.ChatConversationEvaluator.SystemPrompt" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SystemPrompt As String" />
      <MemberSignature Language="F#" Value="member this.SystemPrompt : string" Usage="Microsoft.Extensions.AI.Evaluation.Quality.ChatConversationEvaluator.SystemPrompt" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ SystemPrompt { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the system prompt that this <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" /> uses when performing evaluations.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

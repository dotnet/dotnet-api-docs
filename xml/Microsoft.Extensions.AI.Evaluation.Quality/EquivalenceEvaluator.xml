<Type Name="EquivalenceEvaluator" FullName="Microsoft.Extensions.AI.Evaluation.Quality.EquivalenceEvaluator">
  <TypeSignature Language="C#" Value="public sealed class EquivalenceEvaluator : Microsoft.Extensions.AI.Evaluation.Quality.SingleNumericMetricEvaluator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EquivalenceEvaluator extends Microsoft.Extensions.AI.Evaluation.Quality.SingleNumericMetricEvaluator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.Evaluation.Quality.EquivalenceEvaluator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EquivalenceEvaluator&#xA;Inherits SingleNumericMetricEvaluator" />
  <TypeSignature Language="F#" Value="type EquivalenceEvaluator = class&#xA;    inherit SingleNumericMetricEvaluator" />
  <TypeSignature Language="C++ CLI" Value="public ref class EquivalenceEvaluator sealed : Microsoft::Extensions::AI::Evaluation::Quality::SingleNumericMetricEvaluator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Extensions.AI.Evaluation.Quality.SingleNumericMetricEvaluator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            An <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" /> that evaluates the 'Equivalence' of a response produced by an AI model.
            </summary>
    <remarks>
            The <see cref="T:Microsoft.Extensions.AI.Evaluation.Quality.EquivalenceEvaluator" /> measures the degree to which the response being evaluated is similar to the
            response supplied via <see cref="P:Microsoft.Extensions.AI.Evaluation.Quality.EquivalenceEvaluatorContext.GroundTruth" />. It returns a
            <see cref="T:Microsoft.Extensions.AI.Evaluation.NumericMetric" /> that contains a score for the 'Equivalence'. The score is a number between 1 and 5,
            with 1 indicating a poor score, and 5 indicating an excellent score.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EquivalenceEvaluator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Quality.EquivalenceEvaluator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EquivalenceEvaluator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EquivalenceMetricName">
      <MemberSignature Language="C#" Value="public static string EquivalenceMetricName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string EquivalenceMetricName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Quality.EquivalenceEvaluator.EquivalenceMetricName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EquivalenceMetricName As String" />
      <MemberSignature Language="F#" Value="static member EquivalenceMetricName : string" Usage="Microsoft.Extensions.AI.Evaluation.Quality.EquivalenceEvaluator.EquivalenceMetricName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ EquivalenceMetricName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationMetric.Name" /> of the <see cref="T:Microsoft.Extensions.AI.Evaluation.NumericMetric" /> returned by
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Quality.EquivalenceEvaluator" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoresHistory">
      <MemberSignature Language="C#" Value="protected override bool IgnoresHistory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoresHistory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Quality.EquivalenceEvaluator.IgnoresHistory" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property IgnoresHistory As Boolean" />
      <MemberSignature Language="F#" Value="member this.IgnoresHistory : bool" Usage="Microsoft.Extensions.AI.Evaluation.Quality.EquivalenceEvaluator.IgnoresHistory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IgnoresHistory { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="MetricName">
      <MemberSignature Language="C#" Value="protected override string MetricName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MetricName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Quality.EquivalenceEvaluator.MetricName" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property MetricName As String" />
      <MemberSignature Language="F#" Value="member this.MetricName : string" Usage="Microsoft.Extensions.AI.Evaluation.Quality.EquivalenceEvaluator.MetricName" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ MetricName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="RenderEvaluationPromptAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.ValueTask&lt;string&gt; RenderEvaluationPromptAsync (Microsoft.Extensions.AI.ChatMessage? userRequest, Microsoft.Extensions.AI.ChatMessage modelResponse, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt;? includedHistory, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt;? additionalContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;string&gt; RenderEvaluationPromptAsync(class Microsoft.Extensions.AI.ChatMessage userRequest, class Microsoft.Extensions.AI.ChatMessage modelResponse, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; includedHistory, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt; additionalContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Quality.EquivalenceEvaluator.RenderEvaluationPromptAsync(Microsoft.Extensions.AI.ChatMessage,Microsoft.Extensions.AI.ChatMessage,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RenderEvaluationPromptAsync (userRequest As ChatMessage, modelResponse As ChatMessage, includedHistory As IEnumerable(Of ChatMessage), additionalContext As IEnumerable(Of EvaluationContext), cancellationToken As CancellationToken) As ValueTask(Of String)" />
      <MemberSignature Language="F#" Value="override this.RenderEvaluationPromptAsync : Microsoft.Extensions.AI.ChatMessage * Microsoft.Extensions.AI.ChatMessage * seq&lt;Microsoft.Extensions.AI.ChatMessage&gt; * seq&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;string&gt;" Usage="equivalenceEvaluator.RenderEvaluationPromptAsync (userRequest, modelResponse, includedHistory, additionalContext, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::ValueTask&lt;System::String ^&gt; RenderEvaluationPromptAsync(Microsoft::Extensions::AI::ChatMessage ^ userRequest, Microsoft::Extensions::AI::ChatMessage ^ modelResponse, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ includedHistory, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::AI::Evaluation::EvaluationContext ^&gt; ^ additionalContext, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.String&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userRequest" Type="Microsoft.Extensions.AI.ChatMessage">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="modelResponse" Type="Microsoft.Extensions.AI.ChatMessage" />
        <Parameter Name="includedHistory" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="additionalContext" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userRequest">To be added.</param>
        <param name="modelResponse">To be added.</param>
        <param name="includedHistory">To be added.</param>
        <param name="additionalContext">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>

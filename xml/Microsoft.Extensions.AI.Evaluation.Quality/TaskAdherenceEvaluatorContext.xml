<Type Name="TaskAdherenceEvaluatorContext" FullName="Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluatorContext">
  <TypeSignature Language="C#" Value="public sealed class TaskAdherenceEvaluatorContext : Microsoft.Extensions.AI.Evaluation.EvaluationContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TaskAdherenceEvaluatorContext extends Microsoft.Extensions.AI.Evaluation.EvaluationContext" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluatorContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TaskAdherenceEvaluatorContext&#xA;Inherits EvaluationContext" />
  <TypeSignature Language="F#" Value="type TaskAdherenceEvaluatorContext = class&#xA;    inherit EvaluationContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaskAdherenceEvaluatorContext sealed : Microsoft::Extensions::AI::Evaluation::EvaluationContext" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
    <AssemblyVersion>9.7.0.0</AssemblyVersion>
    <AssemblyVersion>9.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Extensions.AI.Evaluation.EvaluationContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("AIEVAL001")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("AIEVAL001")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Contextual information that the <see cref="T:Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluator" /> uses to evaluate an AI system's
            effectiveness at adhering to the task assigned to it.
            </summary>
    <remarks>
      <para>
        <see cref="T:Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluator" /> measures how accurately an AI system adheres to the task assigned to it by
            examining the alignment of the supplied response with instructions and definitions present in the conversation
            history, the accuracy and clarity of the response, and the proper use of tool definitions supplied via
            <see cref="P:Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluatorContext.ToolDefinitions" />.
            </para>
      <para>
            Note that at the moment, <see cref="T:Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluator" /> only supports evaluating calls to tools that are
            defined as <see cref="T:Microsoft.Extensions.AI.AIFunctionDeclaration" />s. Any other <see cref="T:Microsoft.Extensions.AI.AITool" /> definitions that are supplied via
            <see cref="P:Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluatorContext.ToolDefinitions" /> will be ignored.
            </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskAdherenceEvaluatorContext (params Microsoft.Extensions.AI.AITool[] toolDefinitions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.AI.AITool[] toolDefinitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluatorContext.#ctor(Microsoft.Extensions.AI.AITool[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray toolDefinitions As AITool())" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluatorContext : Microsoft.Extensions.AI.AITool[] -&gt; Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluatorContext" Usage="new Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluatorContext toolDefinitions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskAdherenceEvaluatorContext(... cli::array &lt;Microsoft::Extensions::AI::AITool ^&gt; ^ toolDefinitions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="toolDefinitions" Type="Microsoft.Extensions.AI.AITool[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="toolDefinitions">
          <para>
            The set of tool definitions (see <see cref="P:Microsoft.Extensions.AI.ChatOptions.Tools" />) that were used when generating the model
            response that is being evaluated.
            </para>
          <para>
            Note that at the moment, <see cref="T:Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluator" /> only supports evaluating calls to tools that
            are defined as <see cref="T:Microsoft.Extensions.AI.AIFunctionDeclaration" />s. Any other <see cref="T:Microsoft.Extensions.AI.AITool" /> definitions will be ignored.
            </para>
        </param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluatorContext" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskAdherenceEvaluatorContext (System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.AITool&gt; toolDefinitions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.AITool&gt; toolDefinitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluatorContext.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.AITool})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (toolDefinitions As IEnumerable(Of AITool))" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluatorContext : seq&lt;Microsoft.Extensions.AI.AITool&gt; -&gt; Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluatorContext" Usage="new Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluatorContext toolDefinitions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskAdherenceEvaluatorContext(System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::AI::AITool ^&gt; ^ toolDefinitions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="toolDefinitions" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.AITool&gt;" />
      </Parameters>
      <Docs>
        <param name="toolDefinitions">
          <para>
            The set of tool definitions (see <see cref="P:Microsoft.Extensions.AI.ChatOptions.Tools" />) that were used when generating the model
            response that is being evaluated.
            </para>
          <para>
            Note that at the moment, <see cref="T:Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluator" /> only supports evaluating calls to tools that
            are defined as <see cref="T:Microsoft.Extensions.AI.AIFunctionDeclaration" />s. Any other <see cref="T:Microsoft.Extensions.AI.AITool" /> definitions will be ignored.
            </para>
        </param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluatorContext" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.AI.AITool&gt; ToolDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Extensions.AI.AITool&gt; ToolDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluatorContext.ToolDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolDefinitions As IReadOnlyList(Of AITool)" />
      <MemberSignature Language="F#" Value="member this.ToolDefinitions : System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.AI.AITool&gt;" Usage="Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluatorContext.ToolDefinitions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::Extensions::AI::AITool ^&gt; ^ ToolDefinitions { System::Collections::Generic::IReadOnlyList&lt;Microsoft::Extensions::AI::AITool ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.AI.AITool&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets set of tool definitions (see <see cref="P:Microsoft.Extensions.AI.ChatOptions.Tools" />) that were used when generating the model
            response that is being evaluated.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluator" /> measures how accurately an AI system adheres to the task assigned to it by
            examining the alignment of the supplied response with instructions and definitions present in the conversation
            history, the accuracy and clarity of the response, and the proper use of tool definitions supplied via
            <see cref="P:Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluatorContext.ToolDefinitions" />.
            </para>
          <para>
            Note that at the moment, <see cref="T:Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluator" /> only supports evaluating calls to tools that are
            defined as <see cref="T:Microsoft.Extensions.AI.AIFunctionDeclaration" />s. Any other <see cref="T:Microsoft.Extensions.AI.AITool" /> definitions that are supplied via
            <see cref="P:Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluatorContext.ToolDefinitions" /> will be ignored.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolDefinitionsContextName">
      <MemberSignature Language="C#" Value="public static string ToolDefinitionsContextName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ToolDefinitionsContextName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluatorContext.ToolDefinitionsContextName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToolDefinitionsContextName As String" />
      <MemberSignature Language="F#" Value="static member ToolDefinitionsContextName : string" Usage="Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluatorContext.ToolDefinitionsContextName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ToolDefinitionsContextName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the unique <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationContext.Name" /> that is used for
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Quality.TaskAdherenceEvaluatorContext" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

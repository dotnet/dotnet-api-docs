<Type Name="RelevanceEvaluator" FullName="Microsoft.Extensions.AI.Evaluation.Quality.RelevanceEvaluator">
  <TypeSignature Language="C#" Value="public sealed class RelevanceEvaluator : Microsoft.Extensions.AI.Evaluation.IEvaluator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RelevanceEvaluator extends System.Object implements class Microsoft.Extensions.AI.Evaluation.IEvaluator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.Evaluation.Quality.RelevanceEvaluator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RelevanceEvaluator&#xA;Implements IEvaluator" />
  <TypeSignature Language="F#" Value="type RelevanceEvaluator = class&#xA;    interface IEvaluator" />
  <TypeSignature Language="C++ CLI" Value="public ref class RelevanceEvaluator sealed : Microsoft::Extensions::AI::Evaluation::IEvaluator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.AI.Evaluation.IEvaluator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            An <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" /> that evaluates the 'Relevance' of a response produced by an AI model.
            </summary>
    <remarks>
      <para>
        <see cref="T:Microsoft.Extensions.AI.Evaluation.Quality.RelevanceEvaluator" /> measures an AI system's performance in understanding the input and generating
            contextually appropriate responses. It returns a <see cref="T:Microsoft.Extensions.AI.Evaluation.NumericMetric" /> that contains a score for 'Relevance'.
            The score is a number between 1 and 5, with 1 indicating a poor score, and 5 indicating an excellent score.
            </para>
      <para>
            High relevance scores signify the AI system's understanding of the input and its capability to produce coherent
            and contextually appropriate outputs. Conversely, low relevance scores indicate that generated responses might
            be off-topic, lacking in context, or insufficient in addressing the user's intended queries.
            </para>
      <para>
        <b>Note:</b>
        <see cref="T:Microsoft.Extensions.AI.Evaluation.Quality.RelevanceEvaluator" /> is an AI-based evaluator that uses an AI model to perform its
            evaluation. While the prompt that this evaluator uses to perform its evaluation is designed to be model-agnostic,
            the performance of this prompt (and the resulting evaluation) can vary depending on the model used, and can be
            especially poor when a smaller / local model is used.
            </para>
      <para>
            The prompt that <see cref="T:Microsoft.Extensions.AI.Evaluation.Quality.RelevanceEvaluator" /> uses has been tested against (and tuned to work well with) the
            following models. So, using this evaluator with a model from the following list is likely to produce the best
            results. (The model to be used can be configured via <see cref="P:Microsoft.Extensions.AI.Evaluation.ChatConfiguration.ChatClient" />.)
            </para>
      <para>
        <b>GPT-4o</b>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelevanceEvaluator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Quality.RelevanceEvaluator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelevanceEvaluator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt; EvaluateAsync (System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt; messages, Microsoft.Extensions.AI.ChatResponse modelResponse, Microsoft.Extensions.AI.Evaluation.ChatConfiguration? chatConfiguration = default, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt;? additionalContext = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt; EvaluateAsync(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; messages, class Microsoft.Extensions.AI.ChatResponse modelResponse, class Microsoft.Extensions.AI.Evaluation.ChatConfiguration chatConfiguration, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt; additionalContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Quality.RelevanceEvaluator.EvaluateAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatResponse,Microsoft.Extensions.AI.Evaluation.ChatConfiguration,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluateAsync (messages As IEnumerable(Of ChatMessage), modelResponse As ChatResponse, Optional chatConfiguration As ChatConfiguration = Nothing, Optional additionalContext As IEnumerable(Of EvaluationContext) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of EvaluationResult)" />
      <MemberSignature Language="F#" Value="abstract member EvaluateAsync : seq&lt;Microsoft.Extensions.AI.ChatMessage&gt; * Microsoft.Extensions.AI.ChatResponse * Microsoft.Extensions.AI.Evaluation.ChatConfiguration * seq&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt;&#xA;override this.EvaluateAsync : seq&lt;Microsoft.Extensions.AI.ChatMessage&gt; * Microsoft.Extensions.AI.ChatResponse * Microsoft.Extensions.AI.Evaluation.ChatConfiguration * seq&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt;" Usage="relevanceEvaluator.EvaluateAsync (messages, modelResponse, chatConfiguration, additionalContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.AI.Evaluation.IEvaluator.EvaluateAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatResponse,Microsoft.Extensions.AI.Evaluation.ChatConfiguration,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-10.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messages" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt;" />
        <Parameter Name="modelResponse" Type="Microsoft.Extensions.AI.ChatResponse" />
        <Parameter Name="chatConfiguration" Type="Microsoft.Extensions.AI.Evaluation.ChatConfiguration">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="additionalContext" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messages">To be added.</param>
        <param name="modelResponse">To be added.</param>
        <param name="chatConfiguration">To be added.</param>
        <param name="additionalContext">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="EvaluationMetricNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyCollection&lt;string&gt; EvaluationMetricNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;string&gt; EvaluationMetricNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Quality.RelevanceEvaluator.EvaluationMetricNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluationMetricNames As IReadOnlyCollection(Of String)" />
      <MemberSignature Language="F#" Value="member this.EvaluationMetricNames : System.Collections.Generic.IReadOnlyCollection&lt;string&gt;" Usage="Microsoft.Extensions.AI.Evaluation.Quality.RelevanceEvaluator.EvaluationMetricNames" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyCollection&lt;System::String ^&gt; ^ EvaluationMetricNames { System::Collections::Generic::IReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Extensions.AI.Evaluation.IEvaluator.EvaluationMetricNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="RelevanceMetricName">
      <MemberSignature Language="C#" Value="public static string RelevanceMetricName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string RelevanceMetricName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Quality.RelevanceEvaluator.RelevanceMetricName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RelevanceMetricName As String" />
      <MemberSignature Language="F#" Value="static member RelevanceMetricName : string" Usage="Microsoft.Extensions.AI.Evaluation.Quality.RelevanceEvaluator.RelevanceMetricName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ RelevanceMetricName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Quality</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationMetric.Name" /> of the <see cref="T:Microsoft.Extensions.AI.Evaluation.NumericMetric" /> returned by
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Quality.RelevanceEvaluator" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

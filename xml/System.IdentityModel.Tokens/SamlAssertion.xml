<Type Name="SamlAssertion" FullName="System.IdentityModel.Tokens.SamlAssertion">
  <TypeSignature Language="C#" Value="public class SamlAssertion" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SamlAssertion extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SamlAssertion" />
  <TypeSignature Language="VB.NET" Value="Public Class SamlAssertion" />
  <TypeSignature Language="C++ CLI" Value="public ref class SamlAssertion" />
  <TypeSignature Language="F#" Value="type SamlAssertion = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a Security Assertion Markup Language 1.1 (SAML 1.1) assertion.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.IdentityModel.Tokens.SamlAssertion> class corresponds to the `<saml:Assertion>` XML element that is defined in the OASIS SAML 1.1 specification.  
  
 The claims for <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens are contained within a <xref:System.IdentityModel.Tokens.SamlAssertion>. A <xref:System.IdentityModel.Tokens.SamlAssertion> has an extensible set of claims known as SAML statements that are represented by the <xref:System.IdentityModel.Tokens.SamlAssertion.Statements%2A> property. The SAML authority that issued the SAML assertion is specified in the <xref:System.IdentityModel.Tokens.SamlAssertion.Issuer%2A> property.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SamlAssertion ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlAssertion.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SamlAssertion();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SamlAssertion (string assertionId, string issuer, DateTime issueInstant, System.IdentityModel.Tokens.SamlConditions samlConditions, System.IdentityModel.Tokens.SamlAdvice samlAdvice, System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.SamlStatement&gt; samlStatements);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assertionId, string issuer, valuetype System.DateTime issueInstant, class System.IdentityModel.Tokens.SamlConditions samlConditions, class System.IdentityModel.Tokens.SamlAdvice samlAdvice, class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.Tokens.SamlStatement&gt; samlStatements) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlAssertion.#ctor(System.String,System.String,System.DateTime,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assertionId As String, issuer As String, issueInstant As DateTime, samlConditions As SamlConditions, samlAdvice As SamlAdvice, samlStatements As IEnumerable(Of SamlStatement))" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SamlAssertion(System::String ^ assertionId, System::String ^ issuer, DateTime issueInstant, System::IdentityModel::Tokens::SamlConditions ^ samlConditions, System::IdentityModel::Tokens::SamlAdvice ^ samlAdvice, System::Collections::Generic::IEnumerable&lt;System::IdentityModel::Tokens::SamlStatement ^&gt; ^ samlStatements);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SamlAssertion : string * string * DateTime * System.IdentityModel.Tokens.SamlConditions * System.IdentityModel.Tokens.SamlAdvice * seq&lt;System.IdentityModel.Tokens.SamlStatement&gt; -&gt; System.IdentityModel.Tokens.SamlAssertion" Usage="new System.IdentityModel.Tokens.SamlAssertion (assertionId, issuer, issueInstant, samlConditions, samlAdvice, samlStatements)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public SamlAssertion (string assertionId, string issuer, DateTime issueInstant, System.IdentityModel.Tokens.SamlConditions conditions, System.IdentityModel.Tokens.SamlAdvice advice, System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.SamlStatement&gt; statements);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assertionId, string issuer, valuetype System.DateTime issueInstant, class System.IdentityModel.Tokens.SamlConditions conditions, class System.IdentityModel.Tokens.SamlAdvice advice, class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.Tokens.SamlStatement&gt; statements) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assertionId As String, issuer As String, issueInstant As DateTime, conditions As SamlConditions, advice As SamlAdvice, statements As IEnumerable(Of SamlStatement))" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SamlAssertion(System::String ^ assertionId, System::String ^ issuer, DateTime issueInstant, System::IdentityModel::Tokens::SamlConditions ^ conditions, System::IdentityModel::Tokens::SamlAdvice ^ advice, System::Collections::Generic::IEnumerable&lt;System::IdentityModel::Tokens::SamlStatement ^&gt; ^ statements);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SamlAssertion : string * string * DateTime * System.IdentityModel.Tokens.SamlConditions * System.IdentityModel.Tokens.SamlAdvice * seq&lt;System.IdentityModel.Tokens.SamlStatement&gt; -&gt; System.IdentityModel.Tokens.SamlAssertion" Usage="new System.IdentityModel.Tokens.SamlAssertion (assertionId, issuer, issueInstant, conditions, advice, statements)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assertionId" Type="System.String" Index="0" />
        <Parameter Name="issuer" Type="System.String" Index="1" />
        <Parameter Name="issueInstant" Type="System.DateTime" Index="2" />
        <Parameter Name="samlConditions" Type="System.IdentityModel.Tokens.SamlConditions" Index="3" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="conditions" Type="System.IdentityModel.Tokens.SamlConditions" Index="3" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="samlAdvice" Type="System.IdentityModel.Tokens.SamlAdvice" Index="4" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="advice" Type="System.IdentityModel.Tokens.SamlAdvice" Index="4" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="samlStatements" Type="System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.SamlStatement&gt;" Index="5" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="statements" Type="System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.SamlStatement&gt;" Index="5" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assertionId">The identifier for the assertion.</param>
        <param name="issuer">The SAML authority that issued this SAML assertion.</param>
        <param name="issueInstant">A <see cref="T:System.DateTime" /> that specifies when the SAML assertion was issued.</param>
        <param name="samlConditions">A <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> that specifies a set of conditions that may be taken into account when assessing the validity of the SAML assertion.</param>
        <param name="conditions">A <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> that specifies a set of conditions that may be taken into account when assessing the validity of the SAML assertion.</param>
        <param name="samlAdvice">A <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> that specifies additional information supplied by the SAML authority that can aide in the processing of the SAML assertion.</param>
        <param name="advice">A <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> that specifies additional information supplied by the SAML authority that can aide in the processing of the SAML assertion.</param>
        <param name="samlStatements">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlStatement" /> that contain SAML statements.</param>
        <param name="statements">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlStatement" /> that contain SAML statements.</param>
        <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> class using the specified SAML assertion identifier, issuer of the assertion, the date and time when the assertion was issued, a set of processing conditions, additional information, and a collection of SAML statements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `assertionId` parameter must start with a letter or the "_" character.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assertionId" /> is <see langword="null" />.
  
 -or-  
  
 <paramref name="assertionId" /> is <see cref="F:System.String.Empty" />.
  
 -or-  
  
 <paramref name="assertionId" /> does not start with a letter or the "_" character.  
  
 -or-  
  
 <paramref name="issuer" /> is <see langword="null" />.
  
 -or-  
  
 <paramref name="issuer" /> is <see cref="F:System.String.Empty" />.
  
 -or-  
  
 <paramref name="samlStatements" /> is <see langword="null" />.
  
 -or-  
  
 <paramref name="samlStatements" /> does not contain any elements.
  
 -or-  
  
 <paramref name="samlStatements" /> contains a <see langword="null" /> element.</exception>
      </Docs>
    </Member>
    <Member MemberName="Advice">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SamlAdvice Advice { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SamlAdvice Advice" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAssertion.Advice" />
      <MemberSignature Language="VB.NET" Value="Public Property Advice As SamlAdvice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SamlAdvice ^ Advice { System::IdentityModel::Tokens::SamlAdvice ^ get(); void set(System::IdentityModel::Tokens::SamlAdvice ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Advice : System.IdentityModel.Tokens.SamlAdvice with get, set" Usage="System.IdentityModel.Tokens.SamlAssertion.Advice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlAdvice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets additional information related to the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> that is supplied by the SAML authority that can aide in the processing of the SAML assertion.</summary>
        <value>A <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> that specifies additional information that is supplied by the SAML authority that can aide in the processing of the SAML assertion.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.IdentityModel.Tokens.SamlAssertion.Advice%2A> property corresponds to the `<saml:Advice>` element defined in the Assertions and Protocol for the OASIS SAML specification.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAssertion.Advice" /> property is set and the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> property is <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AssertionId">
      <MemberSignature Language="C#" Value="public string AssertionId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssertionId" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAssertion.AssertionId" />
      <MemberSignature Language="VB.NET" Value="Public Property AssertionId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssertionId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AssertionId : string with get, set" Usage="System.IdentityModel.Tokens.SamlAssertion.AssertionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the identifier for this assertion.</summary>
        <value>The identifier for this assertion.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.IdentityModel.Tokens.SamlAssertion.AssertionId%2A> property corresponds to the `AssertionID` attribute of the `<saml:Assertion>` element defined in the OASIS SAML 1.1 specification.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The value of the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> property is <see langword="true" /> and an attempt is made to set the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.AssertionId" /> property.</exception>
        <exception cref="T:System.ArgumentException">An attempt is made to set the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.AssertionId" /> property to <see langword="null" /> or an empty string.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteSourceData">
      <MemberSignature Language="C#" Value="public virtual bool CanWriteSourceData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteSourceData" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAssertion.CanWriteSourceData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanWriteSourceData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteSourceData { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWriteSourceData : bool" Usage="System.IdentityModel.Tokens.SamlAssertion.CanWriteSourceData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether this assertion was deserialized from XML source and can re-emit the XML data unchanged.</summary>
        <value>
          <see langword="true" /> if this assertion can re-emit the XML source data unchanged; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default implementation preserves the source data when read using the <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion%2A> method and can re-emit the original data as long as the <xref:System.IdentityModel.Tokens.SamlAssertion.AssertionId%2A> property has not changed from the time that assertion was read.  
  
> [!IMPORTANT]
>  It is very important that SAML assertions with different data have different IDs. If implementing a scheme whereby an assertion "template" is loaded and certain bits of data are filled in, the Id must be changed.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SamlAssertion.WriteSourceData(System.Xml.XmlWriter)" />
      </Docs>
    </Member>
    <Member MemberName="Conditions">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SamlConditions Conditions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SamlConditions Conditions" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAssertion.Conditions" />
      <MemberSignature Language="VB.NET" Value="Public Property Conditions As SamlConditions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SamlConditions ^ Conditions { System::IdentityModel::Tokens::SamlConditions ^ get(); void set(System::IdentityModel::Tokens::SamlConditions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Conditions : System.IdentityModel.Tokens.SamlConditions with get, set" Usage="System.IdentityModel.Tokens.SamlAssertion.Conditions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlConditions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a set of conditions that may be taken into account when assessing the validity of the SAML assertion.</summary>
        <value>A <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> that specifies a set of conditions that may be taken into account when assessing the validity of the SAML assertion.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.IdentityModel.Tokens.SamlAssertion.Conditions%2A> property corresponds to the `<saml:Conditions>` element defined in the OASIS SAML 1.1 specification.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> property is <see langword="true" /> and an attempt is made to set the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.Conditions" /> property.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the properties of this instance are read-only.</summary>
        <value>
          <see langword="true" /> if the properties of this instance are read-only; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To make this instance of the <xref:System.IdentityModel.Tokens.SamlAssertion> class read-only, call the <xref:System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly%2A> method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IssueInstant">
      <MemberSignature Language="C#" Value="public DateTime IssueInstant { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime IssueInstant" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAssertion.IssueInstant" />
      <MemberSignature Language="VB.NET" Value="Public Property IssueInstant As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime IssueInstant { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.IssueInstant : DateTime with get, set" Usage="System.IdentityModel.Tokens.SamlAssertion.IssueInstant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the date and time when the SAML assertion was issued.</summary>
        <value>A <see cref="T:System.DateTime" /> expressed in the Coordinated Universal Time (UTC) that specifies when the SAML assertion was issued.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.IdentityModel.Tokens.SamlAssertion.IssueInstant%2A> property corresponds to the `IssueInstant` attribute of the `<saml:Assertion>` element defined in the OASIS 1.1 SAML specification.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> property is <see langword="true" /> and an attempt is made to set the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IssueInstant" /> property.</exception>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public string Issuer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAssertion.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public Property Issuer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Issuer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : string with get, set" Usage="System.IdentityModel.Tokens.SamlAssertion.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the SAML authority that issued this SAML assertion.</summary>
        <value>The SAML authority that issued this SAML assertion.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.IdentityModel.Tokens.SamlAssertion.Issuer%2A> property corresponds to the `Issuer` attribute of the `<saml:Assertion>` element defined in the OASIS SAML 1.1 specification.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> property is <see langword="true" /> and an attempt is made to set the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.Issuer" /> property.</exception>
        <exception cref="T:System.ArgumentException">An attempt is made to set the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.Issuer" /> property to <see langword="null" /> or an empty string.</exception>
      </Docs>
    </Member>
    <Member MemberName="MajorVersion">
      <MemberSignature Language="C#" Value="public int MajorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MajorVersion" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAssertion.MajorVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MajorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MajorVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MajorVersion : int" Usage="System.IdentityModel.Tokens.SamlAssertion.MajorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the major version of the SAML specification to which this SAML assertion conforms.</summary>
        <value>The major version of the SAML specification to which this SAML assertion conforms. The default value is the value of the <see cref="P:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue" /> property.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.IdentityModel.Tokens.SamlAssertion.MajorVersion%2A> property corresponds to the `MajorVersion` attribute of the `<saml:Assertion>` element defined in the Assertions and Protocol for the OASIS SAML specification.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeReadOnly">
      <MemberSignature Language="C#" Value="public void MakeReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeReadOnly();" />
      <MemberSignature Language="F#" Value="member this.MakeReadOnly : unit -&gt; unit" Usage="samlAssertion.MakeReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Causes this instance to be read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the <xref:System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly%2A> method is called, the <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly%2A> property is set to `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinorVersion">
      <MemberSignature Language="C#" Value="public int MinorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinorVersion" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAssertion.MinorVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinorVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinorVersion : int" Usage="System.IdentityModel.Tokens.SamlAssertion.MinorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minor version of the SAML specification to which this SAML assertion conforms.</summary>
        <value>The minor version of the SAML specification to which this SAML assertion conforms. The default value is the value of the <see cref="P:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue" /> property.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.IdentityModel.Tokens.SamlAssertion.MinorVersion%2A> property corresponds to the `MinorVersion` attribute of the `<saml:Assertion>` element defined in the Assertions and Protocol for the OASIS SAML specification.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadSignature">
      <MemberSignature Language="C#" Value="protected void ReadSignature (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver, System.IdentityModel.Tokens.SamlSerializer samlSerializer);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReadSignature(class System.Xml.XmlDictionaryReader reader, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, class System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver, class System.IdentityModel.Tokens.SamlSerializer samlSerializer) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlAssertion.ReadSignature(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SamlSerializer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReadSignature (reader As XmlDictionaryReader, keyInfoSerializer As SecurityTokenSerializer, outOfBandTokenResolver As SecurityTokenResolver, samlSerializer As SamlSerializer)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReadSignature(System::Xml::XmlDictionaryReader ^ reader, System::IdentityModel::Selectors::SecurityTokenSerializer ^ keyInfoSerializer, System::IdentityModel::Selectors::SecurityTokenResolver ^ outOfBandTokenResolver, System::IdentityModel::Tokens::SamlSerializer ^ samlSerializer);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.ReadSignature : System.Xml.XmlDictionaryReader * System.IdentityModel.Selectors.SecurityTokenSerializer * System.IdentityModel.Selectors.SecurityTokenResolver * System.IdentityModel.Tokens.SamlSerializer -&gt; unit" Usage="samlAssertion.ReadSignature (reader, keyInfoSerializer, outOfBandTokenResolver, samlSerializer)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected void ReadSignature (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoTokenSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver, System.IdentityModel.Tokens.SamlSerializer samlSerializer);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReadSignature(class System.Xml.XmlDictionaryReader reader, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoTokenSerializer, class System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver, class System.IdentityModel.Tokens.SamlSerializer samlSerializer) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReadSignature (reader As XmlDictionaryReader, keyInfoTokenSerializer As SecurityTokenSerializer, outOfBandTokenResolver As SecurityTokenResolver, samlSerializer As SamlSerializer)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReadSignature(System::Xml::XmlDictionaryReader ^ reader, System::IdentityModel::Selectors::SecurityTokenSerializer ^ keyInfoTokenSerializer, System::IdentityModel::Selectors::SecurityTokenResolver ^ outOfBandTokenResolver, System::IdentityModel::Tokens::SamlSerializer ^ samlSerializer);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.ReadSignature : System.Xml.XmlDictionaryReader * System.IdentityModel.Selectors.SecurityTokenSerializer * System.IdentityModel.Selectors.SecurityTokenResolver * System.IdentityModel.Tokens.SamlSerializer -&gt; unit" Usage="samlAssertion.ReadSignature (reader, keyInfoTokenSerializer, outOfBandTokenResolver, samlSerializer)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" Index="0" />
        <Parameter Name="keyInfoSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyInfoTokenSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="outOfBandTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" Index="2" />
        <Parameter Name="samlSerializer" Type="System.IdentityModel.Tokens.SamlSerializer" Index="3" />
      </Parameters>
      <Docs>
        <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the digital signature.</param>
        <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the <see langword="KeyInfo" /> clause of the digital signature.</param>
        <param name="keyInfoTokenSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the <see langword="KeyInfo" /> clause of the digital signature.</param>
        <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
        <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements that are defined in the SAML specification.</param>
        <summary>Reads the digital signature for a SAML assertion from an XML reader.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the <xref:System.IdentityModel.Tokens.SamlAssertion.ReadSignature%2A> method is called, the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningToken%2A> property is set.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> is <see langword="null" />  
  
 -or-  
  
 <paramref name="samlSerializer" /> is <see langword="null" />  
  
 -or-  
  
 the digital signature has not been read from the SAML assertion yet.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public virtual void ReadXml (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlDictionaryReader reader, class System.IdentityModel.Tokens.SamlSerializer samlSerializer, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, class System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlAssertion.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadXml (reader As XmlDictionaryReader, samlSerializer As SamlSerializer, keyInfoSerializer As SecurityTokenSerializer, outOfBandTokenResolver As SecurityTokenResolver)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadXml(System::Xml::XmlDictionaryReader ^ reader, System::IdentityModel::Tokens::SamlSerializer ^ samlSerializer, System::IdentityModel::Selectors::SecurityTokenSerializer ^ keyInfoSerializer, System::IdentityModel::Selectors::SecurityTokenResolver ^ outOfBandTokenResolver);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member ReadXml : System.Xml.XmlDictionaryReader * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; unit&#xA;override this.ReadXml : System.Xml.XmlDictionaryReader * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; unit" Usage="samlAssertion.ReadXml (reader, samlSerializer, keyInfoSerializer, outOfBandTokenResolver)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual void ReadXml (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoTokenSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlDictionaryReader reader, class System.IdentityModel.Tokens.SamlSerializer samlSerializer, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoTokenSerializer, class System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadXml (reader As XmlDictionaryReader, samlSerializer As SamlSerializer, keyInfoTokenSerializer As SecurityTokenSerializer, outOfBandTokenResolver As SecurityTokenResolver)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadXml(System::Xml::XmlDictionaryReader ^ reader, System::IdentityModel::Tokens::SamlSerializer ^ samlSerializer, System::IdentityModel::Selectors::SecurityTokenSerializer ^ keyInfoTokenSerializer, System::IdentityModel::Selectors::SecurityTokenResolver ^ outOfBandTokenResolver);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ReadXml : System.Xml.XmlDictionaryReader * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; unit&#xA;override this.ReadXml : System.Xml.XmlDictionaryReader * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; unit" Usage="samlAssertion.ReadXml (reader, samlSerializer, keyInfoTokenSerializer, outOfBandTokenResolver)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" Index="0" />
        <Parameter Name="samlSerializer" Type="System.IdentityModel.Tokens.SamlSerializer" Index="1" />
        <Parameter Name="keyInfoSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" Index="2" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyInfoTokenSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="outOfBandTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" Index="3" />
      </Parameters>
      <Docs>
        <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the SAML assertion.</param>
        <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML assertion that are defined in the SAML specification.</param>
        <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the <see langword="KeyInfo" /> clause of the digital signature.</param>
        <param name="keyInfoTokenSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the <see langword="KeyInfo" /> clause of the digital signature.</param>
        <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
        <summary>Reads a SAML assertion from the specified XML reader.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> is <see langword="null" />  
  
 -or-  
  
 <paramref name="samlSerializer" /> is <see langword="null" /></exception>
        <exception cref="T:System.InvalidOperationException">the <see cref="M:System.IdentityModel.Tokens.SamlAssertion.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" /> method had been previously called and that SAML assertion was digitally signed.</exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
          <paramref name="reader" /> does not refer to a SAML assertion that is compliant with the SAML 1.1 specification.</exception>
      </Docs>
    </Member>
    <Member MemberName="SigningCredentials">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SigningCredentials SigningCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property SigningCredentials As SigningCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SigningCredentials ^ SigningCredentials { System::IdentityModel::Tokens::SigningCredentials ^ get(); void set(System::IdentityModel::Tokens::SigningCredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SigningCredentials : System.IdentityModel.Tokens.SigningCredentials with get, set" Usage="System.IdentityModel.Tokens.SamlAssertion.SigningCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SigningCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the security credentials that are used to digitally sign the SAML assertion.</summary>
        <value>A <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> that is used to digitally sign the SAML assertion.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> property represents the credentials that are used to sign a SAML assertion when it is serialized into XML. Similarly, the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningToken%2A> property represents the security token that signed a SAML token in an incoming SOAP message.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> property is <see langword="true" /> and an attempt is made to set the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials" /> property.</exception>
      </Docs>
    </Member>
    <Member MemberName="SigningToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken SigningToken { get; }" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityToken SigningToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAssertion.SigningToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SigningToken As SecurityToken" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityToken ^ SigningToken { System::IdentityModel::Tokens::SecurityToken ^ get(); };" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.SigningToken : System.IdentityModel.Tokens.SecurityToken" Usage="System.IdentityModel.Tokens.SamlAssertion.SigningToken" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken SigningToken { get; set; }" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Property SigningToken As SecurityToken" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityToken ^ SigningToken { System::IdentityModel::Tokens::SecurityToken ^ get(); void set(System::IdentityModel::Tokens::SecurityToken ^ value); };" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.SigningToken : System.IdentityModel.Tokens.SecurityToken with get, set" Usage="System.IdentityModel.Tokens.SamlAssertion.SigningToken" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the security token contained in or referenced by a digitally signed SAML assertion.</summary>
        <value>A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> contained in or referenced by a digitally signed SAML assertion.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the <xref:System.IdentityModel.Tokens.SamlAssertion.ReadXml%2A> method is called and a SAML assertion is digitally signed, the digital signature is set to the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> property. When the SAML assertion is not digitally signed, the value of the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> property is `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Statements">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.IdentityModel.Tokens.SamlStatement&gt; Statements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.IdentityModel.Tokens.SamlStatement&gt; Statements" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAssertion.Statements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Statements As IList(Of SamlStatement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::IdentityModel::Tokens::SamlStatement ^&gt; ^ Statements { System::Collections::Generic::IList&lt;System::IdentityModel::Tokens::SamlStatement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Statements : System.Collections.Generic.IList&lt;System.IdentityModel.Tokens.SamlStatement&gt;" Usage="System.IdentityModel.Tokens.SamlAssertion.Statements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.IdentityModel.Tokens.SamlStatement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the set of SAML statements associated with the SAML assertion.</summary>
        <value>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlStatement" /> that contains the SAML statements associated with the SAML assertion.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.IdentityModel.Tokens.SamlAssertion.%23ctor%2A> to set the SAML statements associated with a SAML assertion or add it directly to the collection that is returned by this property when the <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly%2A> property is `false`.  
  
 The following table maps the three types of SAML statements defined in the Assertions and Protocol for the OASIS SAML specification to their respective types.  
  
|Statement Type|CLR Type|  
|--------------------|--------------|  
|Authentication|<xref:System.IdentityModel.Tokens.SamlAuthenticationStatement>|  
|Attribute|<xref:System.IdentityModel.Tokens.SamlAttributeStatement>|  
|Authorization decision|<xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>|  
|Statement defined in an extension schema|<xref:System.IdentityModel.Tokens.SamlStatement>|  
|Subject statement defined in an extension schema|<xref:System.IdentityModel.Tokens.SamlSubjectStatement>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteSourceData">
      <MemberSignature Language="C#" Value="public virtual void WriteSourceData (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteSourceData(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlAssertion.WriteSourceData(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteSourceData (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteSourceData(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteSourceData : System.Xml.XmlWriter -&gt; unit&#xA;override this.WriteSourceData : System.Xml.XmlWriter -&gt; unit" Usage="samlAssertion.WriteSourceData writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="writer">The XML writer with which to write the source data.</param>
        <summary>Writes the source data, if available.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default implementation preserves the source data when read using the <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion%2A> method and can re-emit the original data as long as the <xref:System.IdentityModel.Tokens.SamlAssertion.AssertionId%2A> property has not changed from the time that assertion was read.  
  
> [!IMPORTANT]
>  It is very important that SAML assertions with different data have different IDs. If implementing a scheme whereby an assertion "template" is loaded and certain bits of data are filled in, the Id must be changed.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No source data is available</exception>
        <altmember cref="P:System.IdentityModel.Tokens.SamlAssertion.CanWriteSourceData" />
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public virtual void WriteXml (System.Xml.XmlDictionaryWriter writer, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlDictionaryWriter writer, class System.IdentityModel.Tokens.SamlSerializer samlSerializer, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlAssertion.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteXml (writer As XmlDictionaryWriter, samlSerializer As SamlSerializer, keyInfoSerializer As SecurityTokenSerializer)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteXml(System::Xml::XmlDictionaryWriter ^ writer, System::IdentityModel::Tokens::SamlSerializer ^ samlSerializer, System::IdentityModel::Selectors::SecurityTokenSerializer ^ keyInfoSerializer);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member WriteXml : System.Xml.XmlDictionaryWriter * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer -&gt; unit&#xA;override this.WriteXml : System.Xml.XmlDictionaryWriter * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer -&gt; unit" Usage="samlAssertion.WriteXml (writer, samlSerializer, keyInfoSerializer)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual void WriteXml (System.Xml.XmlDictionaryWriter writer, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoTokenSerializer);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlDictionaryWriter writer, class System.IdentityModel.Tokens.SamlSerializer samlSerializer, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoTokenSerializer) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteXml (writer As XmlDictionaryWriter, samlSerializer As SamlSerializer, keyInfoTokenSerializer As SecurityTokenSerializer)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteXml(System::Xml::XmlDictionaryWriter ^ writer, System::IdentityModel::Tokens::SamlSerializer ^ samlSerializer, System::IdentityModel::Selectors::SecurityTokenSerializer ^ keyInfoTokenSerializer);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member WriteXml : System.Xml.XmlDictionaryWriter * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer -&gt; unit&#xA;override this.WriteXml : System.Xml.XmlDictionaryWriter * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer -&gt; unit" Usage="samlAssertion.WriteXml (writer, samlSerializer, keyInfoTokenSerializer)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" Index="0" />
        <Parameter Name="samlSerializer" Type="System.IdentityModel.Tokens.SamlSerializer" Index="1" />
        <Parameter Name="keyInfoSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" Index="2" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyInfoTokenSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the SAML assertion.</param>
        <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing the objects in the <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> to XML.</param>
        <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing <see langword="KeyInfo" /> clauses.</param>
        <param name="keyInfoTokenSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing <see langword="KeyInfo" /> clauses.</param>
        <summary>Writes the SAML assertion into the specified XML writer as a <see langword="&lt;saml:Assertion&gt;" /> element.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="writer" /> is <see langword="null" />  
  
 -or-  
  
 <paramref name="samlSerializer" /> is <see langword="null" /></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">the <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> is configured such that serializing it into XML would result non-compliance with the SAML v1.1 specification.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

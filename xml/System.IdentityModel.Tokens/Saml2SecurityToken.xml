<Type Name="Saml2SecurityToken" FullName="System.IdentityModel.Tokens.Saml2SecurityToken">
  <TypeSignature Language="C#" Value="public class Saml2SecurityToken : System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Saml2SecurityToken extends System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.Saml2SecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public Class Saml2SecurityToken&#xA;Inherits SecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class Saml2SecurityToken : System::IdentityModel::Tokens::SecurityToken" />
  <TypeSignature Language="F#" Value="type Saml2SecurityToken = class&#xA;    inherit SecurityToken" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityToken</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a security token that is based upon a SAML assertion.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The claims for <xref:System.IdentityModel.Tokens.Saml2SecurityToken> security tokens are expressed as part of a <xref:System.IdentityModel.Tokens.Saml2Assertion>. A <xref:System.IdentityModel.Tokens.Saml2Assertion> has an extensible set of claims known as SAML statements that are represented by the <xref:System.IdentityModel.Tokens.Saml2Assertion.Statements%2A> property. The SAML authority that issued the SAML assertion is specified in the <xref:System.IdentityModel.Tokens.Saml2Assertion.Issuer%2A> property.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.Saml2Assertion" />
    <altmember cref="T:System.IdentityModel.Tokens.Saml2Statement" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Saml2SecurityToken (System.IdentityModel.Tokens.Saml2Assertion assertion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.Saml2Assertion assertion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityToken.#ctor(System.IdentityModel.Tokens.Saml2Assertion)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assertion As Saml2Assertion)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Saml2SecurityToken(System::IdentityModel::Tokens::Saml2Assertion ^ assertion);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.Saml2SecurityToken : System.IdentityModel.Tokens.Saml2Assertion -&gt; System.IdentityModel.Tokens.Saml2SecurityToken" Usage="new System.IdentityModel.Tokens.Saml2SecurityToken assertion" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assertion" Type="System.IdentityModel.Tokens.Saml2Assertion" />
      </Parameters>
      <Docs>
        <param name="assertion">A <see cref="T:System.IdentityModel.Tokens.Saml2Assertion" /> that represents the SAML assertion for this security token.</param>
        <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" /> class using the specified SAML assertion.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For <xref:System.IdentityModel.Tokens.Saml2SecurityToken> security tokens, the claims are specified using a SAML assertion.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Saml2SecurityToken (System.IdentityModel.Tokens.Saml2Assertion assertion, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; keys, System.IdentityModel.Tokens.SecurityToken issuerToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.Saml2Assertion assertion, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; keys, class System.IdentityModel.Tokens.SecurityToken issuerToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityToken.#ctor(System.IdentityModel.Tokens.Saml2Assertion,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey},System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assertion As Saml2Assertion, keys As ReadOnlyCollection(Of SecurityKey), issuerToken As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Saml2SecurityToken(System::IdentityModel::Tokens::Saml2Assertion ^ assertion, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ keys, System::IdentityModel::Tokens::SecurityToken ^ issuerToken);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.Saml2SecurityToken : System.IdentityModel.Tokens.Saml2Assertion * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; * System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Tokens.Saml2SecurityToken" Usage="new System.IdentityModel.Tokens.Saml2SecurityToken (assertion, keys, issuerToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assertion" Type="System.IdentityModel.Tokens.Saml2Assertion" />
        <Parameter Name="keys" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" />
        <Parameter Name="issuerToken" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="assertion">A <see cref="T:System.IdentityModel.Tokens.Saml2Assertion" /> that represents the SAML assertion for this security token.</param>
        <param name="keys">The set of keys associated with this security token.</param>
        <param name="issuerToken">The token of the issuer for this security token.</param>
        <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" /> class using the specified SAML assertion, cryptographic keys and issuer token.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For <xref:System.IdentityModel.Tokens.Saml2SecurityToken> security tokens, the claims are specified using a SAML assertion.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assertion">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.Saml2Assertion Assertion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.Saml2Assertion Assertion" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Saml2SecurityToken.Assertion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assertion As Saml2Assertion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::Saml2Assertion ^ Assertion { System::IdentityModel::Tokens::Saml2Assertion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assertion : System.IdentityModel.Tokens.Saml2Assertion" Usage="System.IdentityModel.Tokens.Saml2SecurityToken.Assertion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2Assertion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the SAML assertion for this security token.</summary>
        <value>A <see cref="T:System.IdentityModel.Tokens.Saml2Assertion" /> that represents the SAML assertion for this security token.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For <xref:System.IdentityModel.Tokens.Saml2SecurityToken> security tokens, the claims are specified using a SAML assertion.  
  
 Use a constructor or the <xref:System.IdentityModel.Tokens.Saml2SecurityToken.%23ctor%28System.IdentityModel.Tokens.Saml2Assertion%29?displayProperty=nameWithType> method to set the <xref:System.IdentityModel.Tokens.Saml2SecurityToken.Assertion%2A> property.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override bool CanCreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanCreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityToken.CanCreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanCreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause override bool CanCreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="override this.CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="saml2SecurityToken.CanCreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
        <summary>Gets a value indicating whether this security token is capable of creating the specified key identifier.</summary>
        <returns>
          <see langword="true" /> when <paramref name="T" /> is of type <see cref="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause" />; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.IdentityModel.Tokens.Saml2SecurityToken.CanCreateKeyIdentifierClause%2A> method to determine if a <xref:System.IdentityModel.Tokens.Saml2SecurityToken> security token can create a specific key identifier. To create the key identifier call the <xref:System.IdentityModel.Tokens.Saml2SecurityToken.CreateKeyIdentifierClause%60%601> method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T CreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T CreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityToken.CreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause override T CreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="override this.CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="saml2SecurityToken.CreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
        <summary>Creates the specified key identifier clause.</summary>
        <returns>A <see cref="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause" /> that is a key identifier clause for a SAML security token.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.IdentityModel.Tokens.Saml2SecurityToken.CanCreateKeyIdentifierClause%2A> method to determine if a <xref:System.IdentityModel.Tokens.Saml2SecurityToken> security token can create a specific key identifier. To create the key identifier call the <xref:System.IdentityModel.Tokens.Saml2SecurityToken.CreateKeyIdentifierClause%60%601> method.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="T" /> is not of type <see cref="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Saml2SecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IdentityModel.Tokens.Saml2SecurityToken.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unique identifier of the security token.</summary>
        <value>The unique identifier of the security token.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the <xref:System.IdentityModel.Tokens.Saml2SecurityToken> security token is serialized into XML, the value of the Id attribute is set to the value of the <xref:System.IdentityModel.Tokens.Saml2SecurityToken.Id%2A> property.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IssuerToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken IssuerToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityToken IssuerToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Saml2SecurityToken.IssuerToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssuerToken As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityToken ^ IssuerToken { System::IdentityModel::Tokens::SecurityToken ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IssuerToken : System.IdentityModel.Tokens.SecurityToken" Usage="System.IdentityModel.Tokens.Saml2SecurityToken.IssuerToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the security token of the issuer.</summary>
        <value>The security token of the issuer.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MatchesKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="saml2SecurityToken.MatchesKeyIdentifierClause keyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">An <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</param>
        <summary>Returns a value indicating whether the key identifier for this instance is equal to the specified key identifier.</summary>
        <returns>
          <see langword="true" /> if <paramref name="keyIdentifierClause" /> is a <see cref="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause" /> and it has the same unique identifier as the <see cref="P:System.IdentityModel.Tokens.Saml2SecurityToken.Id" /> property; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Saml2SecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" Usage="System.IdentityModel.Tokens.Saml2SecurityToken.SecurityKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the cryptographic keys associated with the security token.</summary>
        <value>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the security token.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.IdentityModel.Tokens.Saml2SecurityToken.SecurityKeys%2A> property to set the cryptographic keys for this security token to protect a SOAP message. The keys can be used, among other things, to digitally sign or encrypt SOAP messages.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public override DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Saml2SecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ValidFrom { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidFrom : DateTime" Usage="System.IdentityModel.Tokens.Saml2SecurityToken.ValidFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the first instant in time at which this security token is valid.</summary>
        <value>A <see cref="T:System.DateTime" /> that represents the first instant in time at which this security token is valid.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.IdentityModel.Tokens.Saml2SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.Saml2SecurityToken.ValidTo%2A> properties to determine the time period in which a <xref:System.IdentityModel.Tokens.Saml2SecurityToken> token is valid. The <xref:System.IdentityModel.Tokens.Saml2SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.Saml2SecurityToken.ValidTo%2A> properties represent the first and last instants in time in which the security token is valid, respectively.  
  
 By default, a 5-minute clock skew is allowed between the sender and receiver of the security token. So, if the <xref:System.IdentityModel.Tokens.Saml2Conditions.NotBefore%2A> property is set to 1:00 PM, then the <xref:System.IdentityModel.Tokens.Saml2SecurityToken.ValidFrom%2A> property is set to 12:55 PM.  
  
 When the <xref:System.IdentityModel.Tokens.Saml2SecurityToken.ValidFrom%2A> property is set to <xref:System.DateTime.MinValue>, then the SAML assertion associated with this <xref:System.IdentityModel.Tokens.Saml2SecurityToken> security token does not have any conditions set.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.Saml2SecurityToken.ValidTo" />
        <altmember cref="T:System.IdentityModel.Tokens.Saml2Assertion" />
        <altmember cref="P:System.IdentityModel.Tokens.Saml2Assertion.Conditions" />
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public override DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Saml2SecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ValidTo { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidTo : DateTime" Usage="System.IdentityModel.Tokens.Saml2SecurityToken.ValidTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the last instant in time at which this security token is valid.</summary>
        <value>A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.IdentityModel.Tokens.Saml2SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.Saml2SecurityToken.ValidTo%2A> properties to determine the time period in which a <xref:System.IdentityModel.Tokens.Saml2SecurityToken> token is valid. The <xref:System.IdentityModel.Tokens.Saml2SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.Saml2SecurityToken.ValidTo%2A> properties represent the first and last instants in time in which the security token is valid, respectively.  
  
 By default, a 5-minute clock skew is allowed between the sender and receiver of the security token. So, if the <xref:System.IdentityModel.Tokens.Saml2Conditions.NotOnOrAfter%2A> property is set to 1:00 PM, then the <xref:System.IdentityModel.Tokens.Saml2SecurityToken.ValidFrom%2A> property is set to 1:05 PM.  
  
 When the <xref:System.IdentityModel.Tokens.Saml2SecurityToken.ValidTo%2A> property is set to <xref:System.DateTime.MaxValue>, then the SAML assertion associated with this <xref:System.IdentityModel.Tokens.Saml2SecurityToken> security token does not have any conditions set.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.Saml2SecurityToken.ValidFrom" />
        <altmember cref="T:System.IdentityModel.Tokens.Saml2Assertion" />
        <altmember cref="P:System.IdentityModel.Tokens.Saml2Assertion.Conditions" />
      </Docs>
    </Member>
  </Members>
</Type>

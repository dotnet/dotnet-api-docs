<Type Name="SwiftError" FullName="System.Runtime.InteropServices.Swift.SwiftError">
  <TypeSignature Language="C#" Value="public readonly struct SwiftError" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SwiftError extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.Swift.SwiftError" />
  <TypeSignature Language="VB.NET" Value="Public Structure SwiftError" />
  <TypeSignature Language="F#" Value="type SwiftError = struct" />
  <TypeSignature Language="C++ CLI" Value="public value class SwiftError" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents the Swift error context, indicating that the argument is the error context.</summary>
    <remarks>
      <para> This struct is used to retrieve the 'error' context from Swift functions in the context of interop with .NET.
 </para>
      <para> Here's an example of how a SwiftError can be declared:
 <code lang="csharp"> [UnmanagedCallConv(CallConvs = [typeof(CallConvSwift)])] [DllImport("SwiftLibrary", EntryPoint = "export")] public static extern void swiftFunction(SwiftError* error); </code></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SwiftError (void* value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(void* value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Swift.SwiftError.#ctor(System.Void*)" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.Swift.SwiftError : nativeptr&lt;unit&gt; -&gt; System.Runtime.InteropServices.Swift.SwiftError" Usage="new System.Runtime.InteropServices.Swift.SwiftError value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SwiftError(void* value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Void*" />
      </Parameters>
      <Docs>
        <param name="value">The pointer value representing the error context.</param>
        <summary>Creates a new instance of the SwiftError struct with the specified pointer value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public void* Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance void* Value" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.Swift.SwiftError.Value" />
      <MemberSignature Language="F#" Value="member this.Value : nativeptr&lt;unit&gt;" Usage="System.Runtime.InteropServices.Swift.SwiftError.Value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property void* Value { void* get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void*</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the pointer of the error context.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="SwiftIndirectResult" FullName="System.Runtime.InteropServices.Swift.SwiftIndirectResult">
  <TypeSignature Language="C#" Value="public readonly struct SwiftIndirectResult" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SwiftIndirectResult extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.Swift.SwiftIndirectResult" />
  <TypeSignature Language="VB.NET" Value="Public Structure SwiftIndirectResult" />
  <TypeSignature Language="F#" Value="type SwiftIndirectResult = struct" />
  <TypeSignature Language="C++ CLI" Value="public value class SwiftIndirectResult" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents the Swift return buffer context.</summary>
    <remarks>This struct is used to access the return buffer when interoping with Swift functions that return non-frozen structs.
 It provides a pointer to the memory location where the result should be stored.</remarks>
    <example>Here's an example of how a SwiftIndirectResult can be declared:
    <code lang="csharp">
[UnmanagedCallConv(CallConvs = [typeof(CallConvSwift)])]
[LibraryImport("SwiftLibrary", EntryPoint = "export")]
public static extern void swiftFunction(SwiftIndirectResult result);
    </code></example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SwiftIndirectResult (void* value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(void* value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Swift.SwiftIndirectResult.#ctor(System.Void*)" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.Swift.SwiftIndirectResult : nativeptr&lt;unit&gt; -&gt; System.Runtime.InteropServices.Swift.SwiftIndirectResult" Usage="new System.Runtime.InteropServices.Swift.SwiftIndirectResult value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SwiftIndirectResult(void* value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Void*" />
      </Parameters>
      <Docs>
        <param name="value">The pointer value representing return buffer context.</param>
        <summary>Creates a new instance of the SwiftIndirectResult struct with the specified pointer value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public void* Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance void* Value" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.Swift.SwiftIndirectResult.Value" />
      <MemberSignature Language="F#" Value="member this.Value : nativeptr&lt;unit&gt;" Usage="System.Runtime.InteropServices.Swift.SwiftIndirectResult.Value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property void* Value { void* get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void*</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the pointer of the return buffer register.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

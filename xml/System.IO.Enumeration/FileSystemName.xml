<Type Name="FileSystemName" FullName="System.IO.Enumeration.FileSystemName">
  <TypeSignature Language="C#" Value="public static class FileSystemName" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FileSystemName extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Enumeration.FileSystemName" />
  <TypeSignature Language="VB.NET" Value="Public Class FileSystemName" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemName abstract sealed" />
  <TypeSignature Language="F#" Value="type FileSystemName = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.IO.FileSystem" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides methods for matching file system names.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="MatchesSimpleExpression">
      <MemberSignature Language="C#" Value="public static bool MatchesSimpleExpression (ReadOnlySpan&lt;char&gt; expression, ReadOnlySpan&lt;char&gt; name, bool ignoreCase = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool MatchesSimpleExpression(valuetype System.ReadOnlySpan`1&lt;char&gt; expression, valuetype System.ReadOnlySpan`1&lt;char&gt; name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Enumeration.FileSystemName.MatchesSimpleExpression(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MatchesSimpleExpression (expression As ReadOnlySpan(Of Char), name As ReadOnlySpan(Of Char), Optional ignoreCase As Boolean = true) As Boolean" />
      <MemberSignature Language="F#" Value="static member MatchesSimpleExpression : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * bool -&gt; bool" Usage="System.IO.Enumeration.FileSystemName.MatchesSimpleExpression (expression, name, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="name" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="expression">The expression to match with.</param>
        <param name="name">The name to check against the expression.</param>
        <param name="ignoreCase">
          <see langword="true" /> to ignore case (default); <see langword="false" /> if the match should be case-sensitive.</param>
        <summary>Verifies if the given expression matches the given name. Supports the following wildcards: '*' and '?'. The backslash character '\\' escapes.</summary>
        <returns>
          <see langword="true" /> if the given expression matches the given name; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesWin32Expression">
      <MemberSignature Language="C#" Value="public static bool MatchesWin32Expression (ReadOnlySpan&lt;char&gt; expression, ReadOnlySpan&lt;char&gt; name, bool ignoreCase = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool MatchesWin32Expression(valuetype System.ReadOnlySpan`1&lt;char&gt; expression, valuetype System.ReadOnlySpan`1&lt;char&gt; name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Enumeration.FileSystemName.MatchesWin32Expression(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MatchesWin32Expression (expression As ReadOnlySpan(Of Char), name As ReadOnlySpan(Of Char), Optional ignoreCase As Boolean = true) As Boolean" />
      <MemberSignature Language="F#" Value="static member MatchesWin32Expression : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * bool -&gt; bool" Usage="System.IO.Enumeration.FileSystemName.MatchesWin32Expression (expression, name, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="name" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="expression">The expression to match with, such as "*.foo".</param>
        <param name="name">The name to check against the expression.</param>
        <param name="ignoreCase">
          <see langword="true" /> to ignore case (default), <see langword="false" /> if the match should be case-sensitive.</param>
        <summary>Verifies if the given Win32 expression matches the given name. Supports the following wildcards: '*', '?', '&lt;', '&gt;', '"'. The backslash character '\' escapes.</summary>
        <returns>
          <see langword="true" /> if the given expression matches the given name; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

The syntax of the `expression` parameter is based on the syntax used by <xref:System.IO.FileSystemWatcher>, which is based on [RtlIsNameInExpression](/windows/win32/devnotes/rtlisnameinexpression), which defines the rules for matching DOS wildcards (`'*'`, `'?'`, `'<'`, `'>'`, `'"'`).
 
Matching will not correspond to Win32 behavior unless you transform the expression using <xref:System.IO.Enumeration.FileSystemName.TranslateWin32Expression(System.String)>.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateWin32Expression">
      <MemberSignature Language="C#" Value="public static string TranslateWin32Expression (string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TranslateWin32Expression(string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Enumeration.FileSystemName.TranslateWin32Expression(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TranslateWin32Expression (expression As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TranslateWin32Expression(System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member TranslateWin32Expression : string -&gt; string" Usage="System.IO.Enumeration.FileSystemName.TranslateWin32Expression expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">The expression to translate.</param>
        <summary>Translates the given Win32 expression. Change '*' and '?' to '&lt;', '&gt;' and '"' to match Win32 behavior.</summary>
        <returns>A string with the translated Win32 expression.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

For compatibility, Windows changes some wildcards to provide a closer match to historical DOS 8.3 filename matching.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="RolePrincipal" FullName="System.Web.Security.RolePrincipal">
  <TypeSignature Language="C#" Value="public class RolePrincipal : System.Security.Claims.ClaimsPrincipal, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RolePrincipal extends System.Security.Claims.ClaimsPrincipal implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.RolePrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class RolePrincipal&#xA;Inherits ClaimsPrincipal&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RolePrincipal : System::Security::Claims::ClaimsPrincipal, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type RolePrincipal = class&#xA;    inherit ClaimsPrincipal&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Claims.ClaimsPrincipal</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-2.0">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents security information for the current HTTP request, including role membership. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.Security.RolePrincipal> object implements the <xref:System.Security.Principal.IPrincipal> interface and represents the current security context for the HTTP request.  
  
 When role management is enabled (see <xref:System.Web.Security.Roles>), the <xref:System.Web.Security.RoleManagerModule> assigns a <xref:System.Web.Security.RolePrincipal> object to the <xref:System.Web.HttpContext.User%2A> property of the <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>.  
  
 The <xref:System.Web.Security.RolePrincipal> class exposes the security identity for the current HTTP request and additionally performs checks for role membership. If <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> is `true`, then the <xref:System.Web.Security.RolePrincipal> object manages the cached list of roles and looks up role membership for the current user in the cached list first, then the role <xref:System.Web.Security.Roles.Provider%2A>. If <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> is `false`, the <xref:System.Web.Security.RolePrincipal> object always looks up role membership using the role provider.  
  
 The <xref:System.Web.Security.RolePrincipal> object encrypts and decrypts role information cached in the cookie identified by the <xref:System.Web.Security.Roles.CookieName%2A> based on the <xref:System.Web.Security.Roles.CookieProtectionValue%2A>.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Managing Authorization Using ASP.NET Roles</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Creates a new instance of the <see cref="T:System.Web.Security.RolePrincipal" /> class.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Managing Authorization Using ASP.NET Roles</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : System.Security.Principal.IIdentity -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal identity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">The user identity to create the <see cref="T:System.Web.Security.RolePrincipal" /> for.</param>
        <summary>Instantiates a <see cref="T:System.Web.Security.RolePrincipal" /> object for the specified <paramref name="identity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This overload of the <xref:System.Web.Security.RolePrincipal.%23ctor%2A> constructor creates a new <xref:System.Web.Security.RolePrincipal> object and initializes its property values. Cached role information is not read from the cookie identified by the <xref:System.Web.Security.Roles.CookieName%2A> property. The <xref:System.Web.Security.RolePrincipal.ProviderName%2A> property is set to the <xref:System.Configuration.Provider.ProviderBase.Name%2A> of the default role provider.  
  
 For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  
  
   
  
## Examples  
 The following code example creates a new <xref:System.Web.Security.RolePrincipal> object. If <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> is `true`, the example creates the <xref:System.Web.Security.RolePrincipal> with cookie information from the cookie identified by the <xref:System.Web.Security.Roles.CookieName%2A> property.  
  
 [!code-csharp[System.Web.Security.RolePrincipal#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#2)]
 [!code-vb[System.Web.Security.RolePrincipal#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> is <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Managing Authorization Using ASP.NET Roles</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RolePrincipal (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RolePrincipal(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
        <param name="context">The destination for this serialization.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Security.RolePrincipal" /> class using information that is contained in the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object and using the specified streaming context.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (System.Security.Principal.IIdentity identity, string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity, string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity, encryptedTicket As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::Security::Principal::IIdentity ^ identity, System::String ^ encryptedTicket);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : System.Security.Principal.IIdentity * string -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (identity, encryptedTicket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity">The user identity to create the <see cref="T:System.Web.Security.RolePrincipal" /> for.</param>
        <param name="encryptedTicket">A string that contains encrypted role information.</param>
        <summary>Instantiates a <see cref="T:System.Web.Security.RolePrincipal" /> object for the specified <paramref name="identity" /> with role information from the specified <paramref name="encryptedTicket" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]

 This overload of the <xref:System.Web.Security.RolePrincipal.%23ctor%2A> constructor creates a new <xref:System.Web.Security.RolePrincipal> object and initializes its property values. Role information for the current user is read from the supplied `encryptedTicket` and cached with the <xref:System.Web.Security.RolePrincipal> object. The <xref:System.Web.Security.RolePrincipal.ProviderName%2A> property is set to the <xref:System.Configuration.Provider.ProviderBase.Name%2A> of the default role provider.  
  
 For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  
  
   
  
## Examples  
 The following code example creates a new <xref:System.Web.Security.RolePrincipal> object. If <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> is `true`, the example creates the <xref:System.Web.Security.RolePrincipal> with cookie information from the cookie identified by the <xref:System.Web.Security.Roles.CookieName%2A> property.  
  
 [!code-csharp[System.Web.Security.RolePrincipal#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#2)]
 [!code-vb[System.Web.Security.RolePrincipal#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="encryptedTicket" /> is <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Managing Authorization Using ASP.NET Roles</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::String ^ providerName, System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : string * System.Security.Principal.IIdentity -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (providerName, identity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="providerName">The name of the role provider for the user.</param>
        <param name="identity">The user identity to create the <see cref="T:System.Web.Security.RolePrincipal" /> for.</param>
        <summary>Instantiates a <see cref="T:System.Web.Security.RolePrincipal" /> object for the specified <paramref name="identity" /> using the specified <paramref name="providerName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This overload of the <xref:System.Web.Security.RolePrincipal.%23ctor%2A> constructor creates a new <xref:System.Web.Security.RolePrincipal> object and initializes its property values. The <xref:System.Web.Security.RolePrincipal.ProviderName%2A> property is set to the value specified in the `providerName` parameter.  
  
 For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerName" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="providerName" /> refers to a role provider that does not exist in the configuration for the application.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Managing Authorization Using ASP.NET Roles</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity, string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, class System.Security.Principal.IIdentity identity, string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, identity As IIdentity, encryptedTicket As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::String ^ providerName, System::Security::Principal::IIdentity ^ identity, System::String ^ encryptedTicket);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : string * System.Security.Principal.IIdentity * string -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (providerName, identity, encryptedTicket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">The name of the role provider for the user.</param>
        <param name="identity">The user identity to create the <see cref="T:System.Web.Security.RolePrincipal" /> for.</param>
        <param name="encryptedTicket">A string that contains encrypted role information.</param>
        <summary>Instantiates a <see cref="T:System.Web.Security.RolePrincipal" /> object for the specified <paramref name="identity" /> using the specified <paramref name="providerName" /> and role information from the specified <paramref name="encryptedTicket" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]

 This overload of the <xref:System.Web.Security.RolePrincipal.%23ctor%2A> constructor creates a new <xref:System.Web.Security.RolePrincipal> object and initializes its property values. Role information for the current user is read from the supplied `encryptedTicket` and cached with the <xref:System.Web.Security.RolePrincipal> object. The <xref:System.Web.Security.RolePrincipal.ProviderName%2A> property is set to the value specified in the `providerName` parameter.  
  
 For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="encryptedTicket" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerName" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="providerName" /> refers to a role provider that does not exist in the configuration for the application.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Managing Authorization Using ASP.NET Roles</related>
      </Docs>
    </Member>
    <Member MemberName="CachedListChanged">
      <MemberSignature Language="C#" Value="public bool CachedListChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CachedListChanged" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.CachedListChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachedListChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CachedListChanged { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CachedListChanged : bool" Usage="System.Web.Security.RolePrincipal.CachedListChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the list of role names cached with the <see cref="T:System.Web.Security.RolePrincipal" /> object has been modified.</summary>
        <value>
          <see langword="true" /> if the list of role names cached with the <see cref="T:System.Web.Security.RolePrincipal" /> object has been modified; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> property will return `true` after role names have been retrieved from the default role <xref:System.Web.Security.Roles.Provider%2A> and added to the cache by the <xref:System.Web.Security.RolePrincipal.GetRoles%2A> method, or when the <xref:System.Web.Security.RolePrincipal.IsInRole%2A> method calls the <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> method of the default role provider and then receives a response of `true`, resulting in the role name passed to the <xref:System.Web.Security.RolePrincipal.IsInRole%2A> method being added to the cache.  
  
 The <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> property will also return true if <xref:System.Web.Security.Roles.CookieSlidingExpiration%2A> is set to `true` and the <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> has passed, resulting in a new <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> being set.  
  
   
  
## Examples  
 The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Managing Authorization Using ASP.NET Roles</related>
      </Docs>
    </Member>
    <Member MemberName="CookiePath">
      <MemberSignature Language="C#" Value="public string CookiePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.CookiePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CookiePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CookiePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookiePath : string" Usage="System.Web.Security.RolePrincipal.CookiePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the path for the cached role names cookie.</summary>
        <value>The path of the cookie where role names are cached. The default is /.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.Security.RolePrincipal.CookiePath%2A> property returns the value of the `cookiePath` attribute from the Web.config file for your ASP.NET application. For more information on cookie paths, see <xref:System.Web.HttpCookie.Path%2A>.  
  
   
  
## Examples  
 The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Managing Authorization Using ASP.NET Roles</related>
      </Docs>
    </Member>
    <Member MemberName="Expired">
      <MemberSignature Language="C#" Value="public bool Expired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Expired" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Expired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Expired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Expired : bool" Usage="System.Web.Security.RolePrincipal.Expired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the roles cookie has expired.</summary>
        <value>
          <see langword="true" /> if the roles cookie has expired; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.Security.RolePrincipal.Expired%2A> property returns a `Boolean` value indicating whether the roles cookie has expired based on the <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> and the current date and time.  
  
   
  
## Examples  
 The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Managing Authorization Using ASP.NET Roles</related>
      </Docs>
    </Member>
    <Member MemberName="ExpireDate">
      <MemberSignature Language="C#" Value="public DateTime ExpireDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ExpireDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.ExpireDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpireDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ExpireDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpireDate : DateTime" Usage="System.Web.Security.RolePrincipal.ExpireDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the date and time when the roles cookie will expire.</summary>
        <value>The <see cref="T:System.DateTime" /> value when the roles cookie will expire.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Managing Authorization Using ASP.NET Roles</related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="rolePrincipal.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
        <param name="context">The destination for this serialization.</param>
        <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data that is required in order to serialize the target object using the specified streaming context.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information, see the <xref:System.Runtime.Serialization.ISerializable.GetObjectData%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29> method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoles">
      <MemberSignature Language="C#" Value="public string[] GetRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.GetRoles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetRoles();" />
      <MemberSignature Language="F#" Value="member this.GetRoles : unit -&gt; string[]" Usage="rolePrincipal.GetRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a list of roles that the <see cref="T:System.Web.Security.RolePrincipal" /> is a member of.</summary>
        <returns>The list of roles that the <see cref="T:System.Web.Security.RolePrincipal" /> is a member of.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> is `true` and role names have been cached for the user represented by the <xref:System.Web.Security.RolePrincipal>, then the <xref:System.Web.Security.RolePrincipal.GetRoles%2A> method will return the list of role names in the cache that the user is a member of. If role names have not been cached, then the <xref:System.Web.Security.RolePrincipal.GetRoles%2A> method returns the list of role names that the user is a member of from the default role <xref:System.Web.Security.Roles.Provider%2A>. Only role names for the current <xref:System.Web.Security.Roles.ApplicationName%2A> are returned. To determine whether role names have been cached in the <xref:System.Web.Security.RolePrincipal> object, check the <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> property.  
  
   
  
## Examples  
 The following code example displays the roles that the logged-on user is a member of.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/GetRolescs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/GetRolesvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see cref="P:System.Web.Security.RolePrincipal.Identity" /> property is <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Managing Authorization Using ASP.NET Roles</related>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public override System.Security.Principal.IIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Identity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ Identity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Security.Principal.IIdentity" Usage="System.Web.Security.RolePrincipal.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the security identity for the current HTTP request.</summary>
        <value>The security identity for the current HTTP request.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.Security.RolePrincipal.Identity%2A> of a <xref:System.Web.Security.RolePrincipal> object is set when the <xref:System.Web.Security.RolePrincipal> constructor is called.  
  
   
  
## Examples  
 The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Managing Authorization Using ASP.NET Roles</related>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public override bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="override this.IsInRole : string -&gt; bool" Usage="rolePrincipal.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">The role to search for.</param>
        <summary>Gets a value indicating whether the user represented by the <see cref="T:System.Web.Security.RolePrincipal" /> is in the specified role.</summary>
        <returns>
          <see langword="true" /> if user represented by the <see cref="T:System.Web.Security.RolePrincipal" /> is in the specified role; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.IsInRole%2A> first checks the <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> property to determine whether a cached list of role names for the current user is available. If the <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> property is `true`, the cached list is checked for the specified role. If the <xref:System.Web.Security.RolePrincipal.IsInRole%2A> method finds the specified role in the cached list, it returns `true`.  
  
 If <xref:System.Web.Security.RolePrincipal.IsInRole%2A> does not find the specified role, it calls the <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> method of the default <xref:System.Web.Security.Roles.Provider%2A> instance to determine whether the user name is associated with a role from the data source for the configured <xref:System.Web.Security.Roles.ApplicationName%2A> value.  
  
   
  
## Examples  
 The following code example checks to see whether the logged-on user is in the Administrators role before allowing the user to view user roles.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/ViewRolescs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/ViewRolesvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see cref="P:System.Web.Security.RolePrincipal.Identity" /> property is <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Managing Authorization Using ASP.NET Roles</related>
      </Docs>
    </Member>
    <Member MemberName="IsRoleListCached">
      <MemberSignature Language="C#" Value="public bool IsRoleListCached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRoleListCached" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.IsRoleListCached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRoleListCached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRoleListCached { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRoleListCached : bool" Usage="System.Web.Security.RolePrincipal.IsRoleListCached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the list of roles for the user has been cached in a cookie.</summary>
        <value>
          <see langword="true" /> if role names are cached in a cookie; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the `cacheRolesInCookie` attribute in the Web.config file for the application is set to `true`, then a list of role names for the current user is written to a cookie when user membership in a particular role is checked. The <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> property indicates whether role names have been written to the cookie. Note that, even though the `cacheRolesInCookie` configuration attribute may be `true`, the <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> property does not return `true` until after role information has been written to the cookie. If no role checks are performed for a user, <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> will return `false`.  
  
   
  
## Examples  
 The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Managing Authorization Using ASP.NET Roles</related>
      </Docs>
    </Member>
    <Member MemberName="IssueDate">
      <MemberSignature Language="C#" Value="public DateTime IssueDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime IssueDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.IssueDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssueDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime IssueDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.IssueDate : DateTime" Usage="System.Web.Security.RolePrincipal.IssueDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the date and time that the roles cookie was issued.</summary>
        <value>The <see cref="T:System.DateTime" /> that the roles cookie was issued.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Managing Authorization Using ASP.NET Roles</related>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderName : string" Usage="System.Web.Security.RolePrincipal.ProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the role provider that stores and retrieves role information for the user.</summary>
        <value>The name of the role provider that stores and retrieves role information for the user.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.Security.RolePrincipal.ProviderName%2A> property exposes the name of the role provider that manages the role information for the user represented by the <xref:System.Web.Security.RolePrincipal> object. This enables you to access the specific role-provider instance for a user by using the <xref:System.Web.Security.Roles.Providers%2A> property of the <xref:System.Web.Security.Roles> class regardless of whether the provider is the default provider for the application. For example, you may create a method that takes a <xref:System.Web.Security.RolePrincipal> as input and returns the list of roles for the represented user. You can ensure that the appropriate role provider is used to return the list of roles for the <xref:System.Web.Security.RolePrincipal> by calling the <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> method of the role provider from the <xref:System.Web.Security.Roles.Providers%2A> collection that is indexed by the <xref:System.Web.Security.RolePrincipal.ProviderName%2A> property value.  
  
 To populate the <xref:System.Web.Security.RolePrincipal> object for each request, you must use a <xref:System.Web.Security.RoleManagerModule.GetRoles> event handler defined in the Global.asax file for the application.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Managing Authorization Using ASP.NET Roles</related>
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="public void SetDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.SetDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDirty();" />
      <MemberSignature Language="F#" Value="member this.SetDirty : unit -&gt; unit" Usage="rolePrincipal.SetDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Marks the cached role list as having been changed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.Security.RolePrincipal.SetDirty%2A> method marks the cached role list as having been changed by setting <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> to `true` and <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> to `false`.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Managing Authorization Using ASP.NET Roles</related>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
        <param name="context">The destination for this serialization.</param>
        <summary>For a description of this member, see <see cref="M:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit-interface member implementation. It can be used only when the <xref:System.Web.Security.RolePrincipal> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToEncryptedTicket">
      <MemberSignature Language="C#" Value="public string ToEncryptedTicket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToEncryptedTicket() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.ToEncryptedTicket" />
      <MemberSignature Language="VB.NET" Value="Public Function ToEncryptedTicket () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToEncryptedTicket();" />
      <MemberSignature Language="F#" Value="member this.ToEncryptedTicket : unit -&gt; string" Usage="rolePrincipal.ToEncryptedTicket " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the role information cached with the <see cref="T:System.Web.Security.RolePrincipal" /> object encrypted based on the <see cref="P:System.Web.Security.Roles.CookieProtectionValue" />.</summary>
        <returns>The role information cached with the <see cref="T:System.Web.Security.RolePrincipal" /> object encrypted based on the <see cref="P:System.Web.Security.Roles.CookieProtectionValue" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value returned by the <xref:System.Web.Security.RolePrincipal.ToEncryptedTicket%2A> method is stored in the roles cookie when <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> is `true`.  
  
   
  
## Examples  
 The following code example writes the results of the <xref:System.Web.Security.RolePrincipal.ToEncryptedTicket%2A> method to the roles cookie.  
  
 [!code-csharp[System.Web.Security.RolePrincipal#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#6)]
 [!code-vb[System.Web.Security.RolePrincipal#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Managing Authorization Using ASP.NET Roles</related>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : int" Usage="System.Web.Security.RolePrincipal.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the version number of the roles cookie.</summary>
        <value>The version number of the roles cookie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 By including a version number in the roles cookie, future releases of ASP.NET can modify the format of the roles cookie and use the <xref:System.Web.Security.RolePrincipal.Version%2A> property to distinguish between different formats.  
  
   
  
## Examples  
 The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Managing Authorization Using ASP.NET Roles</related>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="DataRowChangeEventHandler" FullName="System.Data.DataRowChangeEventHandler">
  <TypeSignature Language="C#" Value="public delegate void DataRowChangeEventHandler(object sender, DataRowChangeEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DataRowChangeEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRowChangeEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DataRowChangeEventHandler(sender As Object, e As DataRowChangeEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DataRowChangeEventHandler(System::Object ^ sender, DataRowChangeEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type DataRowChangeEventHandler = delegate of obj * DataRowChangeEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Data.Common" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">The source of the event.</param>
    <param name="e">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</param>
    <summary>Represents the method that will handle the <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowDeleting" />, and <see cref="E:System.Data.DataTable.RowDeleted" /> events of a <see cref="T:System.Data.DataTable" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you create a <xref:System.Data.DataRowChangeEventHandler> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, until you remove the delegate. For more information about delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 The following example adds a <xref:System.Data.DataRowChangeEventHandler> and the procedure to handle the event when a row is changed. The procedure prints the action and value of the changed row.  
  
 [!code-csharp[DataWorks Data.DataRowChangeEventHandler#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks Data.DataRowChangeEventHandler/CS/source.cs#1)]
 [!code-vb[DataWorks Data.DataRowChangeEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks Data.DataRowChangeEventHandler/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.DataRow" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="T:System.Data.DataRowChangeEventArgs" />
  </Docs>
</Type>

<Type Name="UserOnlyStore&lt;TUser,TContext,TKey,TUserClaim,TUserLogin,TUserToken&gt;" FullName="Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore&lt;TUser,TContext,TKey,TUserClaim,TUserLogin,TUserToken&gt;">
  <TypeSignature Language="C#" Value="public class UserOnlyStore&lt;TUser,TContext,TKey,TUserClaim,TUserLogin,TUserToken&gt; : Microsoft.AspNetCore.Identity.UserStoreBase&lt;TUser,TKey,TUserClaim,TUserLogin,TUserToken&gt;, IDisposable, Microsoft.AspNetCore.Identity.IProtectedUserStore&lt;TUser&gt;, Microsoft.AspNetCore.Identity.IQueryableUserStore&lt;TUser&gt;, Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore&lt;TUser&gt;, Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore&lt;TUser&gt;, Microsoft.AspNetCore.Identity.IUserClaimStore&lt;TUser&gt;, Microsoft.AspNetCore.Identity.IUserEmailStore&lt;TUser&gt;, Microsoft.AspNetCore.Identity.IUserLockoutStore&lt;TUser&gt;, Microsoft.AspNetCore.Identity.IUserLoginStore&lt;TUser&gt;, Microsoft.AspNetCore.Identity.IUserPasswordStore&lt;TUser&gt;, Microsoft.AspNetCore.Identity.IUserPhoneNumberStore&lt;TUser&gt;, Microsoft.AspNetCore.Identity.IUserSecurityStampStore&lt;TUser&gt;, Microsoft.AspNetCore.Identity.IUserStore&lt;TUser&gt;, Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore&lt;TUser&gt;, Microsoft.AspNetCore.Identity.IUserTwoFactorStore&lt;TUser&gt; where TUser : IdentityUser&lt;TKey&gt; where TContext : DbContext where TKey : IEquatable&lt;TKey&gt; where TUserClaim : IdentityUserClaim&lt;TKey&gt;new() where TUserLogin : IdentityUserLogin&lt;TKey&gt;new() where TUserToken : IdentityUserToken&lt;TKey&gt;new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UserOnlyStore`6&lt;(class Microsoft.AspNetCore.Identity.IdentityUser`1&lt;!TKey&gt;) TUser, (class Microsoft.EntityFrameworkCore.DbContext) TContext, (class System.IEquatable`1&lt;!TKey&gt;) TKey, .ctor (class Microsoft.AspNetCore.Identity.IdentityUserClaim`1&lt;!TKey&gt;) TUserClaim, .ctor (class Microsoft.AspNetCore.Identity.IdentityUserLogin`1&lt;!TKey&gt;) TUserLogin, .ctor (class Microsoft.AspNetCore.Identity.IdentityUserToken`1&lt;!TKey&gt;) TUserToken&gt; extends Microsoft.AspNetCore.Identity.UserStoreBase`5&lt;!TUser, !TKey, !TUserClaim, !TUserLogin, !TUserToken&gt; implements class Microsoft.AspNetCore.Identity.IProtectedUserStore`1&lt;!TUser&gt;, class Microsoft.AspNetCore.Identity.IQueryableUserStore`1&lt;!TUser&gt;, class Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore`1&lt;!TUser&gt;, class Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore`1&lt;!TUser&gt;, class Microsoft.AspNetCore.Identity.IUserClaimStore`1&lt;!TUser&gt;, class Microsoft.AspNetCore.Identity.IUserEmailStore`1&lt;!TUser&gt;, class Microsoft.AspNetCore.Identity.IUserLockoutStore`1&lt;!TUser&gt;, class Microsoft.AspNetCore.Identity.IUserLoginStore`1&lt;!TUser&gt;, class Microsoft.AspNetCore.Identity.IUserPasswordStore`1&lt;!TUser&gt;, class Microsoft.AspNetCore.Identity.IUserPhoneNumberStore`1&lt;!TUser&gt;, class Microsoft.AspNetCore.Identity.IUserSecurityStampStore`1&lt;!TUser&gt;, class Microsoft.AspNetCore.Identity.IUserStore`1&lt;!TUser&gt;, class Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore`1&lt;!TUser&gt;, class Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1&lt;!TUser&gt;, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6" />
  <TypeSignature Language="VB.NET" Value="Public Class UserOnlyStore(Of TUser, TContext, TKey, TUserClaim, TUserLogin, TUserToken)&#xA;Inherits UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken)&#xA;Implements IDisposable, IProtectedUserStore(Of TUser), IQueryableUserStore(Of TUser), IUserAuthenticationTokenStore(Of TUser), IUserAuthenticatorKeyStore(Of TUser), IUserClaimStore(Of TUser), IUserEmailStore(Of TUser), IUserLockoutStore(Of TUser), IUserLoginStore(Of TUser), IUserPasswordStore(Of TUser), IUserPhoneNumberStore(Of TUser), IUserSecurityStampStore(Of TUser), IUserStore(Of TUser), IUserTwoFactorRecoveryCodeStore(Of TUser), IUserTwoFactorStore(Of TUser)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TUser, typename TContext, typename TKey, typename TUserClaim, typename TUserLogin, typename TUserToken&gt;&#xA; where TUser : IdentityUser&lt;TKey&gt; where TContext : DbContext where TKey : IEquatable&lt;TKey&gt; where TUserClaim : IdentityUserClaim&lt;TKey&gt;gcnew() where TUserLogin : IdentityUserLogin&lt;TKey&gt;gcnew() where TUserToken : IdentityUserToken&lt;TKey&gt;gcnew()public ref class UserOnlyStore : Microsoft::AspNetCore::Identity::UserStoreBase&lt;TUser, TKey, TUserClaim, TUserLogin, TUserToken&gt;, IDisposable, Microsoft::AspNetCore::Identity::IProtectedUserStore&lt;TUser&gt;, Microsoft::AspNetCore::Identity::IQueryableUserStore&lt;TUser&gt;, Microsoft::AspNetCore::Identity::IUserAuthenticationTokenStore&lt;TUser&gt;, Microsoft::AspNetCore::Identity::IUserAuthenticatorKeyStore&lt;TUser&gt;, Microsoft::AspNetCore::Identity::IUserClaimStore&lt;TUser&gt;, Microsoft::AspNetCore::Identity::IUserEmailStore&lt;TUser&gt;, Microsoft::AspNetCore::Identity::IUserLockoutStore&lt;TUser&gt;, Microsoft::AspNetCore::Identity::IUserLoginStore&lt;TUser&gt;, Microsoft::AspNetCore::Identity::IUserPasswordStore&lt;TUser&gt;, Microsoft::AspNetCore::Identity::IUserPhoneNumberStore&lt;TUser&gt;, Microsoft::AspNetCore::Identity::IUserSecurityStampStore&lt;TUser&gt;, Microsoft::AspNetCore::Identity::IUserStore&lt;TUser&gt;, Microsoft::AspNetCore::Identity::IUserTwoFactorRecoveryCodeStore&lt;TUser&gt;, Microsoft::AspNetCore::Identity::IUserTwoFactorStore&lt;TUser&gt;" />
  <TypeSignature Language="F#" Value="type UserOnlyStore&lt;'User, 'Context, 'Key, 'UserClaim, 'UserLogin, 'UserToken (requires 'User :&gt; IdentityUser&lt;'Key&gt; and 'Context :&gt; DbContext and 'Key :&gt; IEquatable&lt;'Key&gt; and 'UserClaim :&gt; IdentityUserClaim&lt;'Key&gt; and 'UserClaim : (new : unit -&gt; 'UserClaim) and 'UserLogin :&gt; IdentityUserLogin&lt;'Key&gt; and 'UserLogin : (new : unit -&gt; 'UserLogin) and 'UserToken :&gt; IdentityUserToken&lt;'Key&gt; and 'UserToken : (new : unit -&gt; 'UserToken))&gt; = class&#xA;    inherit UserStoreBase&lt;'User, 'Key, 'UserClaim, 'UserLogin, 'UserToken (requires 'User :&gt; IdentityUser&lt;'Key&gt; and 'Key :&gt; IEquatable&lt;'Key&gt; and 'UserClaim :&gt; IdentityUserClaim&lt;'Key&gt; and 'UserClaim : (new : unit -&gt; 'UserClaim) and 'UserLogin :&gt; IdentityUserLogin&lt;'Key&gt; and 'UserLogin : (new : unit -&gt; 'UserLogin) and 'UserToken :&gt; IdentityUserToken&lt;'Key&gt; and 'UserToken : (new : unit -&gt; 'UserToken))&gt;&#xA;    interface IUserLoginStore&lt;'User (requires 'User :&gt; IdentityUser&lt;'Key&gt;)&gt;&#xA;    interface IUserStore&lt;'User (requires 'User :&gt; IdentityUser&lt;'Key&gt;)&gt;&#xA;    interface IDisposable&#xA;    interface IUserClaimStore&lt;'User (requires 'User :&gt; IdentityUser&lt;'Key&gt;)&gt;&#xA;    interface IUserPasswordStore&lt;'User (requires 'User :&gt; IdentityUser&lt;'Key&gt;)&gt;&#xA;    interface IUserSecurityStampStore&lt;'User (requires 'User :&gt; IdentityUser&lt;'Key&gt;)&gt;&#xA;    interface IUserEmailStore&lt;'User (requires 'User :&gt; IdentityUser&lt;'Key&gt;)&gt;&#xA;    interface IUserLockoutStore&lt;'User (requires 'User :&gt; IdentityUser&lt;'Key&gt;)&gt;&#xA;    interface IUserPhoneNumberStore&lt;'User (requires 'User :&gt; IdentityUser&lt;'Key&gt;)&gt;&#xA;    interface IQueryableUserStore&lt;'User (requires 'User :&gt; IdentityUser&lt;'Key&gt;)&gt;&#xA;    interface IUserTwoFactorStore&lt;'User (requires 'User :&gt; IdentityUser&lt;'Key&gt;)&gt;&#xA;    interface IUserAuthenticationTokenStore&lt;'User (requires 'User :&gt; IdentityUser&lt;'Key&gt;)&gt;&#xA;    interface IUserAuthenticatorKeyStore&lt;'User (requires 'User :&gt; IdentityUser&lt;'Key&gt;)&gt;&#xA;    interface IUserTwoFactorRecoveryCodeStore&lt;'User (requires 'User :&gt; IdentityUser&lt;'Key&gt;)&gt;&#xA;    interface IProtectedUserStore&lt;'User (requires 'User :&gt; IdentityUser&lt;'Key&gt;)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TUser">
      <Constraints>
        <BaseTypeName>Microsoft.AspNetCore.Identity.IdentityUser&lt;TKey&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TContext">
      <Constraints>
        <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TKey">
      <Constraints>
        <InterfaceName>System.IEquatable&lt;TKey&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TUserClaim">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.AspNetCore.Identity.IdentityUserClaim&lt;TKey&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TUserLogin">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.AspNetCore.Identity.IdentityUserLogin&lt;TKey&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TUserToken">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.AspNetCore.Identity.IdentityUserToken&lt;TKey&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Identity.UserStoreBase&lt;TUser,TKey,TUserClaim,TUserLogin,TUserToken&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">TUser</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!1">TKey</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!2">TUserClaim</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!3">TUserLogin</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!4">TUserToken</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IProtectedUserStore&lt;TUser&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IQueryableUserStore&lt;TUser&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore&lt;TUser&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore&lt;TUser&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IUserClaimStore&lt;TUser&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IUserEmailStore&lt;TUser&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IUserLockoutStore&lt;TUser&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IUserLoginStore&lt;TUser&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IUserPasswordStore&lt;TUser&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IUserPhoneNumberStore&lt;TUser&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IUserSecurityStampStore&lt;TUser&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IUserStore&lt;TUser&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore&lt;TUser&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IUserTwoFactorStore&lt;TUser&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TUser">To be added.</typeparam>
    <typeparam name="TContext">To be added.</typeparam>
    <typeparam name="TKey">To be added.</typeparam>
    <typeparam name="TUserClaim">To be added.</typeparam>
    <typeparam name="TUserLogin">To be added.</typeparam>
    <typeparam name="TUserToken">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UserOnlyStore (TContext context, Microsoft.AspNetCore.Identity.IdentityErrorDescriber describer = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!TContext context, class Microsoft.AspNetCore.Identity.IdentityErrorDescriber describer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.#ctor(`1,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As TContext, Optional describer As IdentityErrorDescriber = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore&lt;'User, 'Context, 'Key, 'UserClaim, 'UserLogin, 'UserToken (requires 'User :&gt; Microsoft.AspNetCore.Identity.IdentityUser&lt;'Key&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; IEquatable&lt;'Key&gt; and 'UserClaim :&gt; Microsoft.AspNetCore.Identity.IdentityUserClaim&lt;'Key&gt; and 'UserClaim : (new : unit -&gt; 'UserClaim) and 'UserLogin :&gt; Microsoft.AspNetCore.Identity.IdentityUserLogin&lt;'Key&gt; and 'UserLogin : (new : unit -&gt; 'UserLogin) and 'UserToken :&gt; Microsoft.AspNetCore.Identity.IdentityUserToken&lt;'Key&gt; and 'UserToken : (new : unit -&gt; 'UserToken))&gt; : 'Context * Microsoft.AspNetCore.Identity.IdentityErrorDescriber -&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore&lt;'User, 'Context, 'Key, 'UserClaim, 'UserLogin, 'UserToken (requires 'User :&gt; Microsoft.AspNetCore.Identity.IdentityUser&lt;'Key&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; IEquatable&lt;'Key&gt; and 'UserClaim :&gt; Microsoft.AspNetCore.Identity.IdentityUserClaim&lt;'Key&gt; and 'UserClaim : (new : unit -&gt; 'UserClaim) and 'UserLogin :&gt; Microsoft.AspNetCore.Identity.IdentityUserLogin&lt;'Key&gt; and 'UserLogin : (new : unit -&gt; 'UserLogin) and 'UserToken :&gt; Microsoft.AspNetCore.Identity.IdentityUserToken&lt;'Key&gt; and 'UserToken : (new : unit -&gt; 'UserToken))&gt;" Usage="new Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore&lt;'User, 'Context, 'Key, 'UserClaim, 'UserLogin, 'UserToken (requires 'User :&gt; Microsoft.AspNetCore.Identity.IdentityUser&lt;'Key&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; System.IEquatable&lt;'Key&gt; and 'UserClaim :&gt; Microsoft.AspNetCore.Identity.IdentityUserClaim&lt;'Key&gt; and 'UserClaim : (new : unit -&gt; 'UserClaim) and 'UserLogin :&gt; Microsoft.AspNetCore.Identity.IdentityUserLogin&lt;'Key&gt; and 'UserLogin : (new : unit -&gt; 'UserLogin) and 'UserToken :&gt; Microsoft.AspNetCore.Identity.IdentityUserToken&lt;'Key&gt; and 'UserToken : (new : unit -&gt; 'UserToken))&gt; (context, describer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="TContext" />
        <Parameter Name="describer" Type="Microsoft.AspNetCore.Identity.IdentityErrorDescriber" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="describer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClaimsAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task AddClaimsAsync (TUser user, System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task AddClaimsAsync(!TUser user, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddClaimsAsync (user As TUser, claims As IEnumerable(Of Claim), Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="override this.AddClaimsAsync : 'User * seq&lt;System.Security.Claims.Claim&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="userOnlyStore.AddClaimsAsync (user, claims, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IUserClaimStore`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">To be added.</param>
        <param name="claims">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLoginAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task AddLoginAsync (TUser user, Microsoft.AspNetCore.Identity.UserLoginInfo login, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task AddLoginAsync(!TUser user, class Microsoft.AspNetCore.Identity.UserLoginInfo login, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddLoginAsync (user As TUser, login As UserLoginInfo, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="override this.AddLoginAsync : 'User * Microsoft.AspNetCore.Identity.UserLoginInfo * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="userOnlyStore.AddLoginAsync (user, login, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IUserLoginStore`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="login" Type="Microsoft.AspNetCore.Identity.UserLoginInfo" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">To be added.</param>
        <param name="login">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUserTokenAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task AddUserTokenAsync (TUserToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task AddUserTokenAsync(!TUserToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.AddUserTokenAsync(`5)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function AddUserTokenAsync (token As TUserToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task ^ AddUserTokenAsync(TUserToken token);" />
      <MemberSignature Language="F#" Value="override this.AddUserTokenAsync : 'UserToken -&gt; System.Threading.Tasks.Task" Usage="userOnlyStore.AddUserTokenAsync token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="TUserToken" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSaveChanges">
      <MemberSignature Language="C#" Value="public bool AutoSaveChanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSaveChanges" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.AutoSaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSaveChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoSaveChanges { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSaveChanges : bool with get, set" Usage="Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore&lt;'User, 'Context, 'Key, 'UserClaim, 'UserLogin, 'UserToken (requires 'User :&gt; Microsoft.AspNetCore.Identity.IdentityUser&lt;'Key&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; System.IEquatable&lt;'Key&gt; and 'UserClaim :&gt; Microsoft.AspNetCore.Identity.IdentityUserClaim&lt;'Key&gt; and 'UserClaim : (new : unit -&gt; 'UserClaim) and 'UserLogin :&gt; Microsoft.AspNetCore.Identity.IdentityUserLogin&lt;'Key&gt; and 'UserLogin : (new : unit -&gt; 'UserLogin) and 'UserToken :&gt; Microsoft.AspNetCore.Identity.IdentityUserToken&lt;'Key&gt; and 'UserToken : (new : unit -&gt; 'UserToken))&gt;.AutoSaveChanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public TContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TContext Context" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As TContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TContext Context { TContext get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : 'Context" Usage="Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore&lt;'User, 'Context, 'Key, 'UserClaim, 'UserLogin, 'UserToken (requires 'User :&gt; Microsoft.AspNetCore.Identity.IdentityUser&lt;'Key&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; System.IEquatable&lt;'Key&gt; and 'UserClaim :&gt; Microsoft.AspNetCore.Identity.IdentityUserClaim&lt;'Key&gt; and 'UserClaim : (new : unit -&gt; 'UserClaim) and 'UserLogin :&gt; Microsoft.AspNetCore.Identity.IdentityUserLogin&lt;'Key&gt; and 'UserLogin : (new : unit -&gt; 'UserLogin) and 'UserToken :&gt; Microsoft.AspNetCore.Identity.IdentityUserToken&lt;'Key&gt; and 'UserToken : (new : unit -&gt; 'UserToken))&gt;.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt; CreateAsync (TUser user, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Identity.IdentityResult&gt; CreateAsync(!TUser user, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.CreateAsync(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateAsync (user As TUser, Optional cancellationToken As CancellationToken = null) As Task(Of IdentityResult)" />
      <MemberSignature Language="F#" Value="override this.CreateAsync : 'User * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt;" Usage="userOnlyStore.CreateAsync (user, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IUserStore`1.CreateAsync(`0,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt; DeleteAsync (TUser user, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Identity.IdentityResult&gt; DeleteAsync(!TUser user, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.DeleteAsync(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteAsync (user As TUser, Optional cancellationToken As CancellationToken = null) As Task(Of IdentityResult)" />
      <MemberSignature Language="F#" Value="override this.DeleteAsync : 'User * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt;" Usage="userOnlyStore.DeleteAsync (user, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IUserStore`1.DeleteAsync(`0,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByEmailAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;TUser&gt; FindByEmailAsync (string normalizedEmail, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;!TUser&gt; FindByEmailAsync(string normalizedEmail, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.FindByEmailAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindByEmailAsync (normalizedEmail As String, Optional cancellationToken As CancellationToken = null) As Task(Of TUser)" />
      <MemberSignature Language="F#" Value="override this.FindByEmailAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'User (requires 'User :&gt; Microsoft.AspNetCore.Identity.IdentityUser&lt;'Key&gt;)&gt;" Usage="userOnlyStore.FindByEmailAsync (normalizedEmail, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IUserEmailStore`1.FindByEmailAsync(System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TUser&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedEmail" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="normalizedEmail">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByIdAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;TUser&gt; FindByIdAsync (string userId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;!TUser&gt; FindByIdAsync(string userId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.FindByIdAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindByIdAsync (userId As String, Optional cancellationToken As CancellationToken = null) As Task(Of TUser)" />
      <MemberSignature Language="F#" Value="override this.FindByIdAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'User (requires 'User :&gt; Microsoft.AspNetCore.Identity.IdentityUser&lt;'Key&gt;)&gt;" Usage="userOnlyStore.FindByIdAsync (userId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IUserStore`1.FindByIdAsync(System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TUser&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userId">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByLoginAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;TUser&gt; FindByLoginAsync (string loginProvider, string providerKey, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;!TUser&gt; FindByLoginAsync(string loginProvider, string providerKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindByLoginAsync (loginProvider As String, providerKey As String, Optional cancellationToken As CancellationToken = null) As Task(Of TUser)" />
      <MemberSignature Language="F#" Value="override this.FindByLoginAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'User (requires 'User :&gt; Microsoft.AspNetCore.Identity.IdentityUser&lt;'Key&gt;)&gt;" Usage="userOnlyStore.FindByLoginAsync (loginProvider, providerKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IUserLoginStore`1.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TUser&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loginProvider" Type="System.String" />
        <Parameter Name="providerKey" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="loginProvider">To be added.</param>
        <param name="providerKey">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByNameAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;TUser&gt; FindByNameAsync (string normalizedUserName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;!TUser&gt; FindByNameAsync(string normalizedUserName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.FindByNameAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindByNameAsync (normalizedUserName As String, Optional cancellationToken As CancellationToken = null) As Task(Of TUser)" />
      <MemberSignature Language="F#" Value="override this.FindByNameAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'User (requires 'User :&gt; Microsoft.AspNetCore.Identity.IdentityUser&lt;'Key&gt;)&gt;" Usage="userOnlyStore.FindByNameAsync (normalizedUserName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IUserStore`1.FindByNameAsync(System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TUser&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedUserName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="normalizedUserName">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindTokenAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;TUserToken&gt; FindTokenAsync (TUser user, string loginProvider, string name, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;!TUserToken&gt; FindTokenAsync(!TUser user, string loginProvider, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.FindTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FindTokenAsync (user As TUser, loginProvider As String, name As String, cancellationToken As CancellationToken) As Task(Of TUserToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;TUserToken&gt; ^ FindTokenAsync(TUser user, System::String ^ loginProvider, System::String ^ name, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FindTokenAsync : 'User * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'UserToken (requires 'UserToken :&gt; Microsoft.AspNetCore.Identity.IdentityUserToken&lt;'Key&gt; and 'UserToken : (new : unit -&gt; 'UserToken))&gt;" Usage="userOnlyStore.FindTokenAsync (user, loginProvider, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TUserToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="loginProvider" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">To be added.</param>
        <param name="loginProvider">To be added.</param>
        <param name="name">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUserAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;TUser&gt; FindUserAsync (TKey userId, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;!TUser&gt; FindUserAsync(!TKey userId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.FindUserAsync(`2,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FindUserAsync (userId As TKey, cancellationToken As CancellationToken) As Task(Of TUser)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;TUser&gt; ^ FindUserAsync(TKey userId, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FindUserAsync : 'Key * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'User (requires 'User :&gt; Microsoft.AspNetCore.Identity.IdentityUser&lt;'Key&gt;)&gt;" Usage="userOnlyStore.FindUserAsync (userId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TUser&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="TKey" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userId">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUserLoginAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;TUserLogin&gt; FindUserLoginAsync (string loginProvider, string providerKey, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;!TUserLogin&gt; FindUserLoginAsync(string loginProvider, string providerKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FindUserLoginAsync (loginProvider As String, providerKey As String, cancellationToken As CancellationToken) As Task(Of TUserLogin)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;TUserLogin&gt; ^ FindUserLoginAsync(System::String ^ loginProvider, System::String ^ providerKey, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FindUserLoginAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'UserLogin (requires 'UserLogin :&gt; Microsoft.AspNetCore.Identity.IdentityUserLogin&lt;'Key&gt; and 'UserLogin : (new : unit -&gt; 'UserLogin))&gt;" Usage="userOnlyStore.FindUserLoginAsync (loginProvider, providerKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TUserLogin&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loginProvider" Type="System.String" />
        <Parameter Name="providerKey" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="loginProvider">To be added.</param>
        <param name="providerKey">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUserLoginAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;TUserLogin&gt; FindUserLoginAsync (TKey userId, string loginProvider, string providerKey, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;!TUserLogin&gt; FindUserLoginAsync(!TKey userId, string loginProvider, string providerKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.FindUserLoginAsync(`2,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FindUserLoginAsync (userId As TKey, loginProvider As String, providerKey As String, cancellationToken As CancellationToken) As Task(Of TUserLogin)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;TUserLogin&gt; ^ FindUserLoginAsync(TKey userId, System::String ^ loginProvider, System::String ^ providerKey, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FindUserLoginAsync : 'Key * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'UserLogin (requires 'UserLogin :&gt; Microsoft.AspNetCore.Identity.IdentityUserLogin&lt;'Key&gt; and 'UserLogin : (new : unit -&gt; 'UserLogin))&gt;" Usage="userOnlyStore.FindUserLoginAsync (userId, loginProvider, providerKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TUserLogin&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="TKey" />
        <Parameter Name="loginProvider" Type="System.String" />
        <Parameter Name="providerKey" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userId">To be added.</param>
        <param name="loginProvider">To be added.</param>
        <param name="providerKey">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClaimsAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;System.Security.Claims.Claim&gt;&gt; GetClaimsAsync (TUser user, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class System.Security.Claims.Claim&gt;&gt; GetClaimsAsync(!TUser user, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.GetClaimsAsync(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetClaimsAsync (user As TUser, Optional cancellationToken As CancellationToken = null) As Task(Of IList(Of Claim))" />
      <MemberSignature Language="F#" Value="override this.GetClaimsAsync : 'User * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;System.Security.Claims.Claim&gt;&gt;" Usage="userOnlyStore.GetClaimsAsync (user, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IUserClaimStore`1.GetClaimsAsync(`0,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;System.Security.Claims.Claim&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoginsAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Identity.UserLoginInfo&gt;&gt; GetLoginsAsync (TUser user, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.AspNetCore.Identity.UserLoginInfo&gt;&gt; GetLoginsAsync(!TUser user, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.GetLoginsAsync(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLoginsAsync (user As TUser, Optional cancellationToken As CancellationToken = null) As Task(Of IList(Of UserLoginInfo))" />
      <MemberSignature Language="F#" Value="override this.GetLoginsAsync : 'User * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Identity.UserLoginInfo&gt;&gt;" Usage="userOnlyStore.GetLoginsAsync (user, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IUserLoginStore`1.GetLoginsAsync(`0,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Identity.UserLoginInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsersForClaimAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;TUser&gt;&gt; GetUsersForClaimAsync (System.Security.Claims.Claim claim, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;!TUser&gt;&gt; GetUsersForClaimAsync(class System.Security.Claims.Claim claim, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersForClaimAsync (claim As Claim, Optional cancellationToken As CancellationToken = null) As Task(Of IList(Of TUser))" />
      <MemberSignature Language="F#" Value="override this.GetUsersForClaimAsync : System.Security.Claims.Claim * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;'User&gt;&gt;" Usage="userOnlyStore.GetUsersForClaimAsync (claim, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IUserClaimStore`1.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;TUser&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="claim">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveClaimsAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task RemoveClaimsAsync (TUser user, System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task RemoveClaimsAsync(!TUser user, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RemoveClaimsAsync (user As TUser, claims As IEnumerable(Of Claim), Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="override this.RemoveClaimsAsync : 'User * seq&lt;System.Security.Claims.Claim&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="userOnlyStore.RemoveClaimsAsync (user, claims, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IUserClaimStore`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">To be added.</param>
        <param name="claims">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLoginAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task RemoveLoginAsync (TUser user, string loginProvider, string providerKey, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task RemoveLoginAsync(!TUser user, string loginProvider, string providerKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RemoveLoginAsync (user As TUser, loginProvider As String, providerKey As String, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="override this.RemoveLoginAsync : 'User * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="userOnlyStore.RemoveLoginAsync (user, loginProvider, providerKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IUserLoginStore`1.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="loginProvider" Type="System.String" />
        <Parameter Name="providerKey" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">To be added.</param>
        <param name="loginProvider">To be added.</param>
        <param name="providerKey">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveUserTokenAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task RemoveUserTokenAsync (TUserToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task RemoveUserTokenAsync(!TUserToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.RemoveUserTokenAsync(`5)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RemoveUserTokenAsync (token As TUserToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task ^ RemoveUserTokenAsync(TUserToken token);" />
      <MemberSignature Language="F#" Value="override this.RemoveUserTokenAsync : 'UserToken -&gt; System.Threading.Tasks.Task" Usage="userOnlyStore.RemoveUserTokenAsync token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="TUserToken" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceClaimAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task ReplaceClaimAsync (TUser user, System.Security.Claims.Claim claim, System.Security.Claims.Claim newClaim, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task ReplaceClaimAsync(!TUser user, class System.Security.Claims.Claim claim, class System.Security.Claims.Claim newClaim, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReplaceClaimAsync (user As TUser, claim As Claim, newClaim As Claim, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="override this.ReplaceClaimAsync : 'User * System.Security.Claims.Claim * System.Security.Claims.Claim * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="userOnlyStore.ReplaceClaimAsync (user, claim, newClaim, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IUserClaimStore`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
        <Parameter Name="newClaim" Type="System.Security.Claims.Claim" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">To be added.</param>
        <param name="claim">To be added.</param>
        <param name="newClaim">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task SaveChanges (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task SaveChanges(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.SaveChanges(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SaveChanges (cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Threading::Tasks::Task ^ SaveChanges(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.SaveChanges : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="userOnlyStore.SaveChanges cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt; UpdateAsync (TUser user, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Identity.IdentityResult&gt; UpdateAsync(!TUser user, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.UpdateAsync(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UpdateAsync (user As TUser, Optional cancellationToken As CancellationToken = null) As Task(Of IdentityResult)" />
      <MemberSignature Language="F#" Value="override this.UpdateAsync : 'User * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt;" Usage="userOnlyStore.UpdateAsync (user, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IUserStore`1.UpdateAsync(`0,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserClaims">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.DbSet&lt;TUserClaim&gt; UserClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.DbSet`1&lt;!TUserClaim&gt; UserClaims" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.UserClaims" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property UserClaims As DbSet(Of TUserClaim)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::EntityFrameworkCore::DbSet&lt;TUserClaim&gt; ^ UserClaims { Microsoft::EntityFrameworkCore::DbSet&lt;TUserClaim&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserClaims : Microsoft.EntityFrameworkCore.DbSet&lt;'UserClaim (requires 'UserClaim :&gt; Microsoft.AspNetCore.Identity.IdentityUserClaim&lt;'Key&gt; and 'UserClaim : (new : unit -&gt; 'UserClaim))&gt;" Usage="Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore&lt;'User, 'Context, 'Key, 'UserClaim, 'UserLogin, 'UserToken (requires 'User :&gt; Microsoft.AspNetCore.Identity.IdentityUser&lt;'Key&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; System.IEquatable&lt;'Key&gt; and 'UserClaim :&gt; Microsoft.AspNetCore.Identity.IdentityUserClaim&lt;'Key&gt; and 'UserClaim : (new : unit -&gt; 'UserClaim) and 'UserLogin :&gt; Microsoft.AspNetCore.Identity.IdentityUserLogin&lt;'Key&gt; and 'UserLogin : (new : unit -&gt; 'UserLogin) and 'UserToken :&gt; Microsoft.AspNetCore.Identity.IdentityUserToken&lt;'Key&gt; and 'UserToken : (new : unit -&gt; 'UserToken))&gt;.UserClaims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbSet&lt;TUserClaim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLogins">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.DbSet&lt;TUserLogin&gt; UserLogins { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.DbSet`1&lt;!TUserLogin&gt; UserLogins" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.UserLogins" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property UserLogins As DbSet(Of TUserLogin)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::EntityFrameworkCore::DbSet&lt;TUserLogin&gt; ^ UserLogins { Microsoft::EntityFrameworkCore::DbSet&lt;TUserLogin&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserLogins : Microsoft.EntityFrameworkCore.DbSet&lt;'UserLogin (requires 'UserLogin :&gt; Microsoft.AspNetCore.Identity.IdentityUserLogin&lt;'Key&gt; and 'UserLogin : (new : unit -&gt; 'UserLogin))&gt;" Usage="Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore&lt;'User, 'Context, 'Key, 'UserClaim, 'UserLogin, 'UserToken (requires 'User :&gt; Microsoft.AspNetCore.Identity.IdentityUser&lt;'Key&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; System.IEquatable&lt;'Key&gt; and 'UserClaim :&gt; Microsoft.AspNetCore.Identity.IdentityUserClaim&lt;'Key&gt; and 'UserClaim : (new : unit -&gt; 'UserClaim) and 'UserLogin :&gt; Microsoft.AspNetCore.Identity.IdentityUserLogin&lt;'Key&gt; and 'UserLogin : (new : unit -&gt; 'UserLogin) and 'UserToken :&gt; Microsoft.AspNetCore.Identity.IdentityUserToken&lt;'Key&gt; and 'UserToken : (new : unit -&gt; 'UserToken))&gt;.UserLogins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbSet&lt;TUserLogin&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Users">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable&lt;TUser&gt; Users { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryable`1&lt;!TUser&gt; Users" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.Users" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Users As IQueryable(Of TUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Linq::IQueryable&lt;TUser&gt; ^ Users { System::Linq::IQueryable&lt;TUser&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Users : System.Linq.IQueryable&lt;'User (requires 'User :&gt; Microsoft.AspNetCore.Identity.IdentityUser&lt;'Key&gt;)&gt;" Usage="Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore&lt;'User, 'Context, 'Key, 'UserClaim, 'UserLogin, 'UserToken (requires 'User :&gt; Microsoft.AspNetCore.Identity.IdentityUser&lt;'Key&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; System.IEquatable&lt;'Key&gt; and 'UserClaim :&gt; Microsoft.AspNetCore.Identity.IdentityUserClaim&lt;'Key&gt; and 'UserClaim : (new : unit -&gt; 'UserClaim) and 'UserLogin :&gt; Microsoft.AspNetCore.Identity.IdentityUserLogin&lt;'Key&gt; and 'UserLogin : (new : unit -&gt; 'UserLogin) and 'UserToken :&gt; Microsoft.AspNetCore.Identity.IdentityUserToken&lt;'Key&gt; and 'UserToken : (new : unit -&gt; 'UserToken))&gt;.Users" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.Identity.IQueryableUserStore`1.Users</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TUser&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsersSet">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.DbSet&lt;TUser&gt; UsersSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.DbSet`1&lt;!TUser&gt; UsersSet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.UsersSet" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property UsersSet As DbSet(Of TUser)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::EntityFrameworkCore::DbSet&lt;TUser&gt; ^ UsersSet { Microsoft::EntityFrameworkCore::DbSet&lt;TUser&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UsersSet : Microsoft.EntityFrameworkCore.DbSet&lt;'User (requires 'User :&gt; Microsoft.AspNetCore.Identity.IdentityUser&lt;'Key&gt;)&gt;" Usage="Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore&lt;'User, 'Context, 'Key, 'UserClaim, 'UserLogin, 'UserToken (requires 'User :&gt; Microsoft.AspNetCore.Identity.IdentityUser&lt;'Key&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; System.IEquatable&lt;'Key&gt; and 'UserClaim :&gt; Microsoft.AspNetCore.Identity.IdentityUserClaim&lt;'Key&gt; and 'UserClaim : (new : unit -&gt; 'UserClaim) and 'UserLogin :&gt; Microsoft.AspNetCore.Identity.IdentityUserLogin&lt;'Key&gt; and 'UserLogin : (new : unit -&gt; 'UserLogin) and 'UserToken :&gt; Microsoft.AspNetCore.Identity.IdentityUserToken&lt;'Key&gt; and 'UserToken : (new : unit -&gt; 'UserToken))&gt;.UsersSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbSet&lt;TUser&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserTokens">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.DbSet&lt;TUserToken&gt; UserTokens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.DbSet`1&lt;!TUserToken&gt; UserTokens" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6.UserTokens" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property UserTokens As DbSet(Of TUserToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::EntityFrameworkCore::DbSet&lt;TUserToken&gt; ^ UserTokens { Microsoft::EntityFrameworkCore::DbSet&lt;TUserToken&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserTokens : Microsoft.EntityFrameworkCore.DbSet&lt;'UserToken (requires 'UserToken :&gt; Microsoft.AspNetCore.Identity.IdentityUserToken&lt;'Key&gt; and 'UserToken : (new : unit -&gt; 'UserToken))&gt;" Usage="Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore&lt;'User, 'Context, 'Key, 'UserClaim, 'UserLogin, 'UserToken (requires 'User :&gt; Microsoft.AspNetCore.Identity.IdentityUser&lt;'Key&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; System.IEquatable&lt;'Key&gt; and 'UserClaim :&gt; Microsoft.AspNetCore.Identity.IdentityUserClaim&lt;'Key&gt; and 'UserClaim : (new : unit -&gt; 'UserClaim) and 'UserLogin :&gt; Microsoft.AspNetCore.Identity.IdentityUserLogin&lt;'Key&gt; and 'UserLogin : (new : unit -&gt; 'UserLogin) and 'UserToken :&gt; Microsoft.AspNetCore.Identity.IdentityUserToken&lt;'Key&gt; and 'UserToken : (new : unit -&gt; 'UserToken))&gt;.UserTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbSet&lt;TUserToken&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

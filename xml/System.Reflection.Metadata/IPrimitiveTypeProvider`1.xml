<Type Name="IPrimitiveTypeProvider&lt;TType&gt;" FullName="System.Reflection.Metadata.IPrimitiveTypeProvider&lt;TType&gt;">
  <TypeSignature Language="C#" Value="public interface IPrimitiveTypeProvider&lt;TType&gt;" FrameworkAlternate="netcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPrimitiveTypeProvider`1&lt;TType&gt;" FrameworkAlternate="netcore-1.1" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.IPrimitiveTypeProvider`1" FrameworkAlternate="netcore-1.1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPrimitiveTypeProvider(Of TType)" FrameworkAlternate="netcore-1.1" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TType&gt;&#xA;public interface class IPrimitiveTypeProvider" FrameworkAlternate="netcore-1.1" />
  <TypeSignature Language="F#" Value="type IPrimitiveTypeProvider&lt;'ype&gt; = interface" FrameworkAlternate="netcore-1.1" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TType" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TType">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetPrimitiveType">
      <MemberSignature Language="C#" Value="public TType GetPrimitiveType (System.Reflection.Metadata.PrimitiveTypeCode typeCode);" FrameworkAlternate="netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TType GetPrimitiveType(valuetype System.Reflection.Metadata.PrimitiveTypeCode typeCode) cil managed" FrameworkAlternate="netcore-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.IPrimitiveTypeProvider`1.GetPrimitiveType(System.Reflection.Metadata.PrimitiveTypeCode)" FrameworkAlternate="netcore-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimitiveType (typeCode As PrimitiveTypeCode) As TType" FrameworkAlternate="netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TType GetPrimitiveType(System::Reflection::Metadata::PrimitiveTypeCode typeCode);" FrameworkAlternate="netcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member GetPrimitiveType : System.Reflection.Metadata.PrimitiveTypeCode -&gt; 'ype" Usage="iPrimitiveTypeProvider.GetPrimitiveType typeCode" FrameworkAlternate="netcore-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeCode" Type="System.Reflection.Metadata.PrimitiveTypeCode" Index="0" FrameworkAlternate="netcore-1.1" />
      </Parameters>
      <Docs>
        <param name="typeCode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

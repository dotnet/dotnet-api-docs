<Type Name="CustomDebugInformationHandleCollection" FullName="System.Reflection.Metadata.CustomDebugInformationHandleCollection">
  <TypeSignature Language="C#" Value="public struct CustomDebugInformationHandleCollection : System.Collections.Generic.IEnumerable&lt;System.Reflection.Metadata.CustomDebugInformationHandle&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Reflection.Metadata.CustomDebugInformationHandle&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CustomDebugInformationHandleCollection extends System.ValueType implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Reflection.Metadata.CustomDebugInformationHandle&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Reflection.Metadata.CustomDebugInformationHandle&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.CustomDebugInformationHandleCollection" />
  <TypeSignature Language="VB.NET" Value="Public Structure CustomDebugInformationHandleCollection&#xA;Implements IEnumerable(Of CustomDebugInformationHandle), IReadOnlyCollection(Of CustomDebugInformationHandle)" />
  <TypeSignature Language="C++ CLI" Value="public value class CustomDebugInformationHandleCollection : System::Collections::Generic::IEnumerable&lt;System::Reflection::Metadata::CustomDebugInformationHandle&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Reflection::Metadata::CustomDebugInformationHandle&gt;" />
  <TypeSignature Language="F#" Value="type CustomDebugInformationHandleCollection = struct&#xA;    interface seq&lt;CustomDebugInformationHandle&gt;&#xA;    interface IEnumerable&#xA;    interface IReadOnlyCollection&lt;CustomDebugInformationHandle&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Reflection.Metadata.CustomDebugInformationHandle&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Reflection.Metadata.CustomDebugInformationHandle&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.CustomDebugInformationHandleCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Reflection.Metadata.CustomDebugInformationHandleCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.CustomDebugInformationHandleCollection.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.CustomDebugInformationHandleCollection/Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.CustomDebugInformationHandleCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As CustomDebugInformationHandleCollection.Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::CustomDebugInformationHandleCollection::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Reflection.Metadata.CustomDebugInformationHandleCollection.Enumerator" Usage="customDebugInformationHandleCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.CustomDebugInformationHandleCollection+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Reflection.Metadata.CustomDebugInformationHandle&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Reflection.Metadata.CustomDebugInformationHandle&gt; IEnumerable&lt;CustomDebugInformationHandle&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Reflection.Metadata.CustomDebugInformationHandle&gt; System.Collections.Generic.IEnumerable&lt;System.Reflection.Metadata.CustomDebugInformationHandle&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.CustomDebugInformationHandleCollection.System#Collections#Generic#IEnumerable&lt;System#Reflection#Metadata#CustomDebugInformationHandle&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of CustomDebugInformationHandle) Implements IEnumerable(Of CustomDebugInformationHandle).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Reflection::Metadata::CustomDebugInformationHandle&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Reflection.Metadata.CustomDebugInformationHandle&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Reflection::Metadata::CustomDebugInformationHandle&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Reflection.Metadata.CustomDebugInformationHandle&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.CustomDebugInformationHandleCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
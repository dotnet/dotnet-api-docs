<Type Name="ITypeProvider&lt;TType&gt;" FullName="System.Reflection.Metadata.ITypeProvider&lt;TType&gt;">
  <TypeSignature Language="C#" Value="public interface ITypeProvider&lt;TType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeProvider`1&lt;TType&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.ITypeProvider`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeProvider(Of TType)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TType&gt;&#xA;public interface class ITypeProvider" />
  <TypeSignature Language="F#" Value="type ITypeProvider&lt;'ype&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TType" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TType">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetTypeFromDefinition">
      <MemberSignature Language="C#" Value="public TType GetTypeFromDefinition (System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.TypeDefinitionHandle handle, byte rawTypeKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TType GetTypeFromDefinition(class System.Reflection.Metadata.MetadataReader reader, valuetype System.Reflection.Metadata.TypeDefinitionHandle handle, unsigned int8 rawTypeKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.ITypeProvider`1.GetTypeFromDefinition(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeDefinitionHandle,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeFromDefinition (reader As MetadataReader, handle As TypeDefinitionHandle, rawTypeKind As Byte) As TType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TType GetTypeFromDefinition(System::Reflection::Metadata::MetadataReader ^ reader, System::Reflection::Metadata::TypeDefinitionHandle handle, System::Byte rawTypeKind);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeFromDefinition : System.Reflection.Metadata.MetadataReader * System.Reflection.Metadata.TypeDefinitionHandle * byte -&gt; 'ype" Usage="iTypeProvider.GetTypeFromDefinition (reader, handle, rawTypeKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Reflection.Metadata.MetadataReader" />
        <Parameter Name="handle" Type="System.Reflection.Metadata.TypeDefinitionHandle" />
        <Parameter Name="rawTypeKind" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <param name="handle">To be added.</param>
        <param name="rawTypeKind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromReference">
      <MemberSignature Language="C#" Value="public TType GetTypeFromReference (System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.TypeReferenceHandle handle, byte rawTypeKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TType GetTypeFromReference(class System.Reflection.Metadata.MetadataReader reader, valuetype System.Reflection.Metadata.TypeReferenceHandle handle, unsigned int8 rawTypeKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.ITypeProvider`1.GetTypeFromReference(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeReferenceHandle,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeFromReference (reader As MetadataReader, handle As TypeReferenceHandle, rawTypeKind As Byte) As TType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TType GetTypeFromReference(System::Reflection::Metadata::MetadataReader ^ reader, System::Reflection::Metadata::TypeReferenceHandle handle, System::Byte rawTypeKind);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeFromReference : System.Reflection.Metadata.MetadataReader * System.Reflection.Metadata.TypeReferenceHandle * byte -&gt; 'ype" Usage="iTypeProvider.GetTypeFromReference (reader, handle, rawTypeKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Reflection.Metadata.MetadataReader" />
        <Parameter Name="handle" Type="System.Reflection.Metadata.TypeReferenceHandle" />
        <Parameter Name="rawTypeKind" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <param name="handle">To be added.</param>
        <param name="rawTypeKind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromSpecification">
      <MemberSignature Language="C#" Value="public TType GetTypeFromSpecification (System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.TypeSpecificationHandle handle, byte rawTypeKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TType GetTypeFromSpecification(class System.Reflection.Metadata.MetadataReader reader, valuetype System.Reflection.Metadata.TypeSpecificationHandle handle, unsigned int8 rawTypeKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.ITypeProvider`1.GetTypeFromSpecification(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeSpecificationHandle,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeFromSpecification (reader As MetadataReader, handle As TypeSpecificationHandle, rawTypeKind As Byte) As TType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TType GetTypeFromSpecification(System::Reflection::Metadata::MetadataReader ^ reader, System::Reflection::Metadata::TypeSpecificationHandle handle, System::Byte rawTypeKind);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeFromSpecification : System.Reflection.Metadata.MetadataReader * System.Reflection.Metadata.TypeSpecificationHandle * byte -&gt; 'ype" Usage="iTypeProvider.GetTypeFromSpecification (reader, handle, rawTypeKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Reflection.Metadata.MetadataReader" />
        <Parameter Name="handle" Type="System.Reflection.Metadata.TypeSpecificationHandle" />
        <Parameter Name="rawTypeKind" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <param name="handle">To be added.</param>
        <param name="rawTypeKind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

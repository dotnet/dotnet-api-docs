<Type Name="MetadataAggregator" FullName="System.Reflection.Metadata.Ecma335.MetadataAggregator">
  <TypeSignature Language="C#" Value="public sealed class MetadataAggregator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MetadataAggregator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.Ecma335.MetadataAggregator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MetadataAggregator" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataAggregator sealed" />
  <TypeSignature Language="F#" Value="type MetadataAggregator = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.0.22.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
    <AssemblyVersion>1.4.5.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataAggregator (System.Reflection.Metadata.MetadataReader baseReader, System.Collections.Generic.IReadOnlyList&lt;System.Reflection.Metadata.MetadataReader&gt; deltaReaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Metadata.MetadataReader baseReader, class System.Collections.Generic.IReadOnlyList`1&lt;class System.Reflection.Metadata.MetadataReader&gt; deltaReaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataAggregator.#ctor(System.Reflection.Metadata.MetadataReader,System.Collections.Generic.IReadOnlyList{System.Reflection.Metadata.MetadataReader})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseReader As MetadataReader, deltaReaders As IReadOnlyList(Of MetadataReader))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetadataAggregator(System::Reflection::Metadata::MetadataReader ^ baseReader, System::Collections::Generic::IReadOnlyList&lt;System::Reflection::Metadata::MetadataReader ^&gt; ^ deltaReaders);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Metadata.Ecma335.MetadataAggregator : System.Reflection.Metadata.MetadataReader * System.Collections.Generic.IReadOnlyList&lt;System.Reflection.Metadata.MetadataReader&gt; -&gt; System.Reflection.Metadata.Ecma335.MetadataAggregator" Usage="new System.Reflection.Metadata.Ecma335.MetadataAggregator (baseReader, deltaReaders)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseReader" Type="System.Reflection.Metadata.MetadataReader" />
        <Parameter Name="deltaReaders" Type="System.Collections.Generic.IReadOnlyList&lt;System.Reflection.Metadata.MetadataReader&gt;" />
      </Parameters>
      <Docs>
        <param name="baseReader">To be added.</param>
        <param name="deltaReaders">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataAggregator (System.Collections.Generic.IReadOnlyList&lt;int&gt; baseTableRowCounts, System.Collections.Generic.IReadOnlyList&lt;int&gt; baseHeapSizes, System.Collections.Generic.IReadOnlyList&lt;System.Reflection.Metadata.MetadataReader&gt; deltaReaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IReadOnlyList`1&lt;int32&gt; baseTableRowCounts, class System.Collections.Generic.IReadOnlyList`1&lt;int32&gt; baseHeapSizes, class System.Collections.Generic.IReadOnlyList`1&lt;class System.Reflection.Metadata.MetadataReader&gt; deltaReaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataAggregator.#ctor(System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Reflection.Metadata.MetadataReader})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseTableRowCounts As IReadOnlyList(Of Integer), baseHeapSizes As IReadOnlyList(Of Integer), deltaReaders As IReadOnlyList(Of MetadataReader))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetadataAggregator(System::Collections::Generic::IReadOnlyList&lt;int&gt; ^ baseTableRowCounts, System::Collections::Generic::IReadOnlyList&lt;int&gt; ^ baseHeapSizes, System::Collections::Generic::IReadOnlyList&lt;System::Reflection::Metadata::MetadataReader ^&gt; ^ deltaReaders);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Metadata.Ecma335.MetadataAggregator : System.Collections.Generic.IReadOnlyList&lt;int&gt; * System.Collections.Generic.IReadOnlyList&lt;int&gt; * System.Collections.Generic.IReadOnlyList&lt;System.Reflection.Metadata.MetadataReader&gt; -&gt; System.Reflection.Metadata.Ecma335.MetadataAggregator" Usage="new System.Reflection.Metadata.Ecma335.MetadataAggregator (baseTableRowCounts, baseHeapSizes, deltaReaders)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseTableRowCounts" Type="System.Collections.Generic.IReadOnlyList&lt;System.Int32&gt;" />
        <Parameter Name="baseHeapSizes" Type="System.Collections.Generic.IReadOnlyList&lt;System.Int32&gt;" />
        <Parameter Name="deltaReaders" Type="System.Collections.Generic.IReadOnlyList&lt;System.Reflection.Metadata.MetadataReader&gt;" />
      </Parameters>
      <Docs>
        <param name="baseTableRowCounts">To be added.</param>
        <param name="baseHeapSizes">To be added.</param>
        <param name="deltaReaders">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGenerationHandle">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Handle GetGenerationHandle (System.Reflection.Metadata.Handle handle, out int generation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.Handle GetGenerationHandle(valuetype System.Reflection.Metadata.Handle handle, [out] int32&amp; generation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataAggregator.GetGenerationHandle(System.Reflection.Metadata.Handle,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGenerationHandle (handle As Handle, ByRef generation As Integer) As Handle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::Handle GetGenerationHandle(System::Reflection::Metadata::Handle handle, [Runtime::InteropServices::Out] int % generation);" />
      <MemberSignature Language="F#" Value="member this.GetGenerationHandle : System.Reflection.Metadata.Handle * int -&gt; System.Reflection.Metadata.Handle" Usage="metadataAggregator.GetGenerationHandle (handle, generation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.Handle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Reflection.Metadata.Handle" />
        <Parameter Name="generation" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="handle">Handle of an entity in an aggregate metadata.</param>
        <param name="generation">The generation the entity is defined in.</param>
        <summary>Calculates the handle of the entity within the metadata generation it is defined in, given a handle of an entity in an aggregate metadata.</summary>
        <returns>Handle of the entity within the metadata <paramref name="generation" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="MetadataReaderExtensions" FullName="System.Reflection.Metadata.Ecma335.MetadataReaderExtensions">
  <TypeSignature Language="C#" Value="public static class MetadataReaderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MetadataReaderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module MetadataReaderExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataReaderExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type MetadataReaderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetEditAndContinueLogEntries">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry&gt; GetEditAndContinueLogEntries (this System.Reflection.Metadata.MetadataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry&gt; GetEditAndContinueLogEntries(class System.Reflection.Metadata.MetadataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueLogEntries(System.Reflection.Metadata.MetadataReader)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEditAndContinueLogEntries (reader As MetadataReader) As IEnumerable(Of EditAndContinueLogEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Reflection::Metadata::Ecma335::EditAndContinueLogEntry&gt; ^ GetEditAndContinueLogEntries(System::Reflection::Metadata::MetadataReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member GetEditAndContinueLogEntries : System.Reflection.Metadata.MetadataReader -&gt; seq&lt;System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry&gt;" Usage="System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueLogEntries reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Reflection.Metadata.Ecma335.MetadataReaderExtensions/&lt;GetEditAndContinueLogEntries&gt;d__10))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Reflection.Metadata.MetadataReader" RefType="this" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEditAndContinueMapEntries">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Reflection.Metadata.EntityHandle&gt; GetEditAndContinueMapEntries (this System.Reflection.Metadata.MetadataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Reflection.Metadata.EntityHandle&gt; GetEditAndContinueMapEntries(class System.Reflection.Metadata.MetadataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueMapEntries(System.Reflection.Metadata.MetadataReader)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEditAndContinueMapEntries (reader As MetadataReader) As IEnumerable(Of EntityHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Reflection::Metadata::EntityHandle&gt; ^ GetEditAndContinueMapEntries(System::Reflection::Metadata::MetadataReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member GetEditAndContinueMapEntries : System.Reflection.Metadata.MetadataReader -&gt; seq&lt;System.Reflection.Metadata.EntityHandle&gt;" Usage="System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueMapEntries reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Reflection.Metadata.Ecma335.MetadataReaderExtensions/&lt;GetEditAndContinueMapEntries&gt;d__11))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.Metadata.EntityHandle&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Reflection.Metadata.MetadataReader" RefType="this" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHeapMetadataOffset">
      <MemberSignature Language="C#" Value="public static int GetHeapMetadataOffset (this System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.Ecma335.HeapIndex heapIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetHeapMetadataOffset(class System.Reflection.Metadata.MetadataReader reader, valuetype System.Reflection.Metadata.Ecma335.HeapIndex heapIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapMetadataOffset(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.HeapIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int GetHeapMetadataOffset(System::Reflection::Metadata::MetadataReader ^ reader, System::Reflection::Metadata::Ecma335::HeapIndex heapIndex);" />
      <MemberSignature Language="F#" Value="static member GetHeapMetadataOffset : System.Reflection.Metadata.MetadataReader * System.Reflection.Metadata.Ecma335.HeapIndex -&gt; int" Usage="System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapMetadataOffset (reader, heapIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Reflection.Metadata.MetadataReader" RefType="this" />
        <Parameter Name="heapIndex" Type="System.Reflection.Metadata.Ecma335.HeapIndex" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <param name="heapIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHeapSize">
      <MemberSignature Language="C#" Value="public static int GetHeapSize (this System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.Ecma335.HeapIndex heapIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetHeapSize(class System.Reflection.Metadata.MetadataReader reader, valuetype System.Reflection.Metadata.Ecma335.HeapIndex heapIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapSize(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.HeapIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int GetHeapSize(System::Reflection::Metadata::MetadataReader ^ reader, System::Reflection::Metadata::Ecma335::HeapIndex heapIndex);" />
      <MemberSignature Language="F#" Value="static member GetHeapSize : System.Reflection.Metadata.MetadataReader * System.Reflection.Metadata.Ecma335.HeapIndex -&gt; int" Usage="System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapSize (reader, heapIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Reflection.Metadata.MetadataReader" RefType="this" />
        <Parameter Name="heapIndex" Type="System.Reflection.Metadata.Ecma335.HeapIndex" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <param name="heapIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextHandle">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.BlobHandle GetNextHandle (this System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.BlobHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Reflection.Metadata.BlobHandle GetNextHandle(class System.Reflection.Metadata.MetadataReader reader, valuetype System.Reflection.Metadata.BlobHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.BlobHandle)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNextHandle (reader As MetadataReader, handle As BlobHandle) As BlobHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::Metadata::BlobHandle GetNextHandle(System::Reflection::Metadata::MetadataReader ^ reader, System::Reflection::Metadata::BlobHandle handle);" />
      <MemberSignature Language="F#" Value="static member GetNextHandle : System.Reflection.Metadata.MetadataReader * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.BlobHandle" Usage="System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle (reader, handle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Reflection.Metadata.MetadataReader" RefType="this" />
        <Parameter Name="handle" Type="System.Reflection.Metadata.BlobHandle" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextHandle">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.StringHandle GetNextHandle (this System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.StringHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Reflection.Metadata.StringHandle GetNextHandle(class System.Reflection.Metadata.MetadataReader reader, valuetype System.Reflection.Metadata.StringHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.StringHandle)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNextHandle (reader As MetadataReader, handle As StringHandle) As StringHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::Metadata::StringHandle GetNextHandle(System::Reflection::Metadata::MetadataReader ^ reader, System::Reflection::Metadata::StringHandle handle);" />
      <MemberSignature Language="F#" Value="static member GetNextHandle : System.Reflection.Metadata.MetadataReader * System.Reflection.Metadata.StringHandle -&gt; System.Reflection.Metadata.StringHandle" Usage="System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle (reader, handle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.StringHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Reflection.Metadata.MetadataReader" RefType="this" />
        <Parameter Name="handle" Type="System.Reflection.Metadata.StringHandle" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextHandle">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.UserStringHandle GetNextHandle (this System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.UserStringHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Reflection.Metadata.UserStringHandle GetNextHandle(class System.Reflection.Metadata.MetadataReader reader, valuetype System.Reflection.Metadata.UserStringHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.UserStringHandle)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNextHandle (reader As MetadataReader, handle As UserStringHandle) As UserStringHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::Metadata::UserStringHandle GetNextHandle(System::Reflection::Metadata::MetadataReader ^ reader, System::Reflection::Metadata::UserStringHandle handle);" />
      <MemberSignature Language="F#" Value="static member GetNextHandle : System.Reflection.Metadata.MetadataReader * System.Reflection.Metadata.UserStringHandle -&gt; System.Reflection.Metadata.UserStringHandle" Usage="System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle (reader, handle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.UserStringHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Reflection.Metadata.MetadataReader" RefType="this" />
        <Parameter Name="handle" Type="System.Reflection.Metadata.UserStringHandle" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableMetadataOffset">
      <MemberSignature Language="C#" Value="public static int GetTableMetadataOffset (this System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.Ecma335.TableIndex tableIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetTableMetadataOffset(class System.Reflection.Metadata.MetadataReader reader, valuetype System.Reflection.Metadata.Ecma335.TableIndex tableIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableMetadataOffset(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int GetTableMetadataOffset(System::Reflection::Metadata::MetadataReader ^ reader, System::Reflection::Metadata::Ecma335::TableIndex tableIndex);" />
      <MemberSignature Language="F#" Value="static member GetTableMetadataOffset : System.Reflection.Metadata.MetadataReader * System.Reflection.Metadata.Ecma335.TableIndex -&gt; int" Usage="System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableMetadataOffset (reader, tableIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Reflection.Metadata.MetadataReader" RefType="this" />
        <Parameter Name="tableIndex" Type="System.Reflection.Metadata.Ecma335.TableIndex" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <param name="tableIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableRowCount">
      <MemberSignature Language="C#" Value="public static int GetTableRowCount (this System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.Ecma335.TableIndex tableIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetTableRowCount(class System.Reflection.Metadata.MetadataReader reader, valuetype System.Reflection.Metadata.Ecma335.TableIndex tableIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowCount(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int GetTableRowCount(System::Reflection::Metadata::MetadataReader ^ reader, System::Reflection::Metadata::Ecma335::TableIndex tableIndex);" />
      <MemberSignature Language="F#" Value="static member GetTableRowCount : System.Reflection.Metadata.MetadataReader * System.Reflection.Metadata.Ecma335.TableIndex -&gt; int" Usage="System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowCount (reader, tableIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Reflection.Metadata.MetadataReader" RefType="this" />
        <Parameter Name="tableIndex" Type="System.Reflection.Metadata.Ecma335.TableIndex" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <param name="tableIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableRowSize">
      <MemberSignature Language="C#" Value="public static int GetTableRowSize (this System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.Ecma335.TableIndex tableIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetTableRowSize(class System.Reflection.Metadata.MetadataReader reader, valuetype System.Reflection.Metadata.Ecma335.TableIndex tableIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowSize(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int GetTableRowSize(System::Reflection::Metadata::MetadataReader ^ reader, System::Reflection::Metadata::Ecma335::TableIndex tableIndex);" />
      <MemberSignature Language="F#" Value="static member GetTableRowSize : System.Reflection.Metadata.MetadataReader * System.Reflection.Metadata.Ecma335.TableIndex -&gt; int" Usage="System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowSize (reader, tableIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Reflection.Metadata.MetadataReader" RefType="this" />
        <Parameter Name="tableIndex" Type="System.Reflection.Metadata.Ecma335.TableIndex" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <param name="tableIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypesWithEvents">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Reflection.Metadata.TypeDefinitionHandle&gt; GetTypesWithEvents (this System.Reflection.Metadata.MetadataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Reflection.Metadata.TypeDefinitionHandle&gt; GetTypesWithEvents(class System.Reflection.Metadata.MetadataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithEvents(System.Reflection.Metadata.MetadataReader)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTypesWithEvents (reader As MetadataReader) As IEnumerable(Of TypeDefinitionHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Reflection::Metadata::TypeDefinitionHandle&gt; ^ GetTypesWithEvents(System::Reflection::Metadata::MetadataReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member GetTypesWithEvents : System.Reflection.Metadata.MetadataReader -&gt; seq&lt;System.Reflection.Metadata.TypeDefinitionHandle&gt;" Usage="System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithEvents reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Reflection.Metadata.Ecma335.MetadataReaderExtensions/&lt;GetTypesWithEvents&gt;d__13))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.Metadata.TypeDefinitionHandle&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Reflection.Metadata.MetadataReader" RefType="this" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypesWithProperties">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Reflection.Metadata.TypeDefinitionHandle&gt; GetTypesWithProperties (this System.Reflection.Metadata.MetadataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Reflection.Metadata.TypeDefinitionHandle&gt; GetTypesWithProperties(class System.Reflection.Metadata.MetadataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithProperties(System.Reflection.Metadata.MetadataReader)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTypesWithProperties (reader As MetadataReader) As IEnumerable(Of TypeDefinitionHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Reflection::Metadata::TypeDefinitionHandle&gt; ^ GetTypesWithProperties(System::Reflection::Metadata::MetadataReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member GetTypesWithProperties : System.Reflection.Metadata.MetadataReader -&gt; seq&lt;System.Reflection.Metadata.TypeDefinitionHandle&gt;" Usage="System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithProperties reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Reflection.Metadata.Ecma335.MetadataReaderExtensions/&lt;GetTypesWithProperties&gt;d__12))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.Metadata.TypeDefinitionHandle&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Reflection.Metadata.MetadataReader" RefType="this" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveSignatureTypeKind">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.SignatureTypeKind ResolveSignatureTypeKind (this System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.EntityHandle typeHandle, byte rawTypeKind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Reflection.Metadata.SignatureTypeKind ResolveSignatureTypeKind(class System.Reflection.Metadata.MetadataReader reader, valuetype System.Reflection.Metadata.EntityHandle typeHandle, unsigned int8 rawTypeKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.ResolveSignatureTypeKind(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.EntityHandle,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ResolveSignatureTypeKind (reader As MetadataReader, typeHandle As EntityHandle, rawTypeKind As Byte) As SignatureTypeKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::Metadata::SignatureTypeKind ResolveSignatureTypeKind(System::Reflection::Metadata::MetadataReader ^ reader, System::Reflection::Metadata::EntityHandle typeHandle, System::Byte rawTypeKind);" />
      <MemberSignature Language="F#" Value="static member ResolveSignatureTypeKind : System.Reflection.Metadata.MetadataReader * System.Reflection.Metadata.EntityHandle * byte -&gt; System.Reflection.Metadata.SignatureTypeKind" Usage="System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.ResolveSignatureTypeKind (reader, typeHandle, rawTypeKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.SignatureTypeKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Reflection.Metadata.MetadataReader" RefType="this" />
        <Parameter Name="typeHandle" Type="System.Reflection.Metadata.EntityHandle" />
        <Parameter Name="rawTypeKind" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <param name="typeHandle">To be added.</param>
        <param name="rawTypeKind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

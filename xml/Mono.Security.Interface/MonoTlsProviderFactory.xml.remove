<Type Name="MonoTlsProviderFactory" FullName="Mono.Security.Interface.MonoTlsProviderFactory">
  <TypeSignature Language="C#" Value="public static class MonoTlsProviderFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MonoTlsProviderFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Mono.Security.Interface.MonoTlsProviderFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class MonoTlsProviderFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class MonoTlsProviderFactory abstract sealed" />
  <TypeSignature Language="F#" Value="type MonoTlsProviderFactory = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateHttpListener">
      <MemberSignature Language="C#" Value="public static System.Net.HttpListener CreateHttpListener (System.Security.Cryptography.X509Certificates.X509Certificate certificate, Mono.Security.Interface.MonoTlsProvider provider = null, Mono.Security.Interface.MonoTlsSettings settings = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.HttpListener CreateHttpListener(class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class Mono.Security.Interface.MonoTlsProvider provider, class Mono.Security.Interface.MonoTlsSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.Security.Interface.MonoTlsProviderFactory.CreateHttpListener(System.Security.Cryptography.X509Certificates.X509Certificate,Mono.Security.Interface.MonoTlsProvider,Mono.Security.Interface.MonoTlsSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHttpListener (certificate As X509Certificate, Optional provider As MonoTlsProvider = null, Optional settings As MonoTlsSettings = null) As HttpListener" />
      <MemberSignature Language="F#" Value="static member CreateHttpListener : System.Security.Cryptography.X509Certificates.X509Certificate * Mono.Security.Interface.MonoTlsProvider * Mono.Security.Interface.MonoTlsSettings -&gt; System.Net.HttpListener" Usage="Mono.Security.Interface.MonoTlsProviderFactory.CreateHttpListener (certificate, provider, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListener</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="provider" Type="Mono.Security.Interface.MonoTlsProvider" />
        <Parameter Name="settings" Type="Mono.Security.Interface.MonoTlsSettings" />
      </Parameters>
      <Docs>
        <param name="certificate">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="settings">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHttpsRequest">
      <MemberSignature Language="C#" Value="public static System.Net.HttpWebRequest CreateHttpsRequest (Uri requestUri, Mono.Security.Interface.MonoTlsProvider provider, Mono.Security.Interface.MonoTlsSettings settings = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.HttpWebRequest CreateHttpsRequest(class System.Uri requestUri, class Mono.Security.Interface.MonoTlsProvider provider, class Mono.Security.Interface.MonoTlsSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.Security.Interface.MonoTlsProviderFactory.CreateHttpsRequest(System.Uri,Mono.Security.Interface.MonoTlsProvider,Mono.Security.Interface.MonoTlsSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHttpsRequest (requestUri As Uri, provider As MonoTlsProvider, Optional settings As MonoTlsSettings = null) As HttpWebRequest" />
      <MemberSignature Language="F#" Value="static member CreateHttpsRequest : Uri * Mono.Security.Interface.MonoTlsProvider * Mono.Security.Interface.MonoTlsSettings -&gt; System.Net.HttpWebRequest" Usage="Mono.Security.Interface.MonoTlsProviderFactory.CreateHttpsRequest (requestUri, provider, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpWebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="provider" Type="Mono.Security.Interface.MonoTlsProvider" />
        <Parameter Name="settings" Type="Mono.Security.Interface.MonoTlsSettings" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="settings">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProvider">
      <MemberSignature Language="C#" Value="public static Mono.Security.Interface.MonoTlsProvider GetDefaultProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.Security.Interface.MonoTlsProvider GetDefaultProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.Security.Interface.MonoTlsProviderFactory.GetDefaultProvider" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProvider () As MonoTlsProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Mono::Security::Interface::MonoTlsProvider ^ GetDefaultProvider();" />
      <MemberSignature Language="F#" Value="static member GetDefaultProvider : unit -&gt; Mono.Security.Interface.MonoTlsProvider" Usage="Mono.Security.Interface.MonoTlsProviderFactory.GetDefaultProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Obsolete("Use GetProvider() instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Mono.Security.Interface.MonoTlsProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonoSslStream">
      <MemberSignature Language="C#" Value="public static Mono.Security.Interface.IMonoSslStream GetMonoSslStream (System.Net.Security.SslStream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.Security.Interface.IMonoSslStream GetMonoSslStream(class System.Net.Security.SslStream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.Security.Interface.MonoTlsProviderFactory.GetMonoSslStream(System.Net.Security.SslStream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMonoSslStream (stream As SslStream) As IMonoSslStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Mono::Security::Interface::IMonoSslStream ^ GetMonoSslStream(System::Net::Security::SslStream ^ stream);" />
      <MemberSignature Language="F#" Value="static member GetMonoSslStream : System.Net.Security.SslStream -&gt; Mono.Security.Interface.IMonoSslStream" Usage="Mono.Security.Interface.MonoTlsProviderFactory.GetMonoSslStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Security.Interface.IMonoSslStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.Net.Security.SslStream" />
      </Parameters>
      <Docs>
        <param name="stream">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public static Mono.Security.Interface.MonoTlsProvider GetProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.Security.Interface.MonoTlsProvider GetProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.Security.Interface.MonoTlsProviderFactory.GetProvider" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProvider () As MonoTlsProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Mono::Security::Interface::MonoTlsProvider ^ GetProvider();" />
      <MemberSignature Language="F#" Value="static member GetProvider : unit -&gt; Mono.Security.Interface.MonoTlsProvider" Usage="Mono.Security.Interface.MonoTlsProviderFactory.GetProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Security.Interface.MonoTlsProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public static Mono.Security.Interface.MonoTlsProvider GetProvider (string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.Security.Interface.MonoTlsProvider GetProvider(string provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.Security.Interface.MonoTlsProviderFactory.GetProvider(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProvider (provider As String) As MonoTlsProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Mono::Security::Interface::MonoTlsProvider ^ GetProvider(System::String ^ provider);" />
      <MemberSignature Language="F#" Value="static member GetProvider : string -&gt; Mono.Security.Interface.MonoTlsProvider" Usage="Mono.Security.Interface.MonoTlsProviderFactory.GetProvider provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Security.Interface.MonoTlsProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public static void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.Security.Interface.MonoTlsProviderFactory.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Initialize();" />
      <MemberSignature Language="F#" Value="static member Initialize : unit -&gt; unit" Usage="Mono.Security.Interface.MonoTlsProviderFactory.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public static void Initialize (string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Initialize(string provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.Security.Interface.MonoTlsProviderFactory.Initialize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Initialize (provider As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Initialize(System::String ^ provider);" />
      <MemberSignature Language="F#" Value="static member Initialize : string -&gt; unit" Usage="Mono.Security.Interface.MonoTlsProviderFactory.Initialize provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitialized">
      <MemberSignature Language="C#" Value="public static bool IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsInitialized" />
      <MemberSignature Language="DocId" Value="P:Mono.Security.Interface.MonoTlsProviderFactory.IsInitialized" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsInitialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsInitialized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInitialized : bool" Usage="Mono.Security.Interface.MonoTlsProviderFactory.IsInitialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsProviderSupported">
      <MemberSignature Language="C#" Value="public static bool IsProviderSupported (string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsProviderSupported(string provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.Security.Interface.MonoTlsProviderFactory.IsProviderSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsProviderSupported (provider As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsProviderSupported(System::String ^ provider);" />
      <MemberSignature Language="F#" Value="static member IsProviderSupported : string -&gt; bool" Usage="Mono.Security.Interface.MonoTlsProviderFactory.IsProviderSupported provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultProvider">
      <MemberSignature Language="C#" Value="public static void SetDefaultProvider (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDefaultProvider(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.Security.Interface.MonoTlsProviderFactory.SetDefaultProvider(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDefaultProvider (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDefaultProvider(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member SetDefaultProvider : string -&gt; unit" Usage="Mono.Security.Interface.MonoTlsProviderFactory.SetDefaultProvider name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Obsolete("Use Initialize(string provider) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

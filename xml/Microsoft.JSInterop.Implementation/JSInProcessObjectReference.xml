<Type Name="JSInProcessObjectReference" FullName="Microsoft.JSInterop.Implementation.JSInProcessObjectReference">
  <TypeSignature Language="C#" Value="public class JSInProcessObjectReference : Microsoft.JSInterop.Implementation.JSObjectReference, IAsyncDisposable, IDisposable, Microsoft.JSInterop.IJSInProcessObjectReference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JSInProcessObjectReference extends Microsoft.JSInterop.Implementation.JSObjectReference implements class Microsoft.JSInterop.IJSInProcessObjectReference, class Microsoft.JSInterop.IJSObjectReference, class System.IAsyncDisposable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JSInterop.Implementation.JSInProcessObjectReference" />
  <TypeSignature Language="VB.NET" Value="Public Class JSInProcessObjectReference&#xA;Inherits JSObjectReference&#xA;Implements IAsyncDisposable, IDisposable, IJSInProcessObjectReference" />
  <TypeSignature Language="F#" Value="type JSInProcessObjectReference = class&#xA;    inherit JSObjectReference&#xA;    interface IJSInProcessObjectReference&#xA;    interface IJSObjectReference&#xA;    interface IAsyncDisposable&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class JSInProcessObjectReference : Microsoft::JSInterop::Implementation::JSObjectReference, IAsyncDisposable, IDisposable, Microsoft::JSInterop::IJSInProcessObjectReference" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JSInterop</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JSInterop.Implementation.JSObjectReference</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.JSInterop.IJSInProcessObjectReference</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.JSInterop.IJSObjectReference</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IAsyncDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal JSInProcessObjectReference (Microsoft.JSInterop.JSInProcessRuntime jsRuntime, long id);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.JSInterop.JSInProcessRuntime jsRuntime, int64 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.Implementation.JSInProcessObjectReference.#ctor(Microsoft.JSInterop.JSInProcessRuntime,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (jsRuntime As JSInProcessRuntime, id As Long)" />
      <MemberSignature Language="F#" Value="new Microsoft.JSInterop.Implementation.JSInProcessObjectReference : Microsoft.JSInterop.JSInProcessRuntime * int64 -&gt; Microsoft.JSInterop.Implementation.JSInProcessObjectReference" Usage="new Microsoft.JSInterop.Implementation.JSInProcessObjectReference (jsRuntime, id)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; JSInProcessObjectReference(Microsoft::JSInterop::JSInProcessRuntime ^ jsRuntime, long id);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="jsRuntime" Type="Microsoft.JSInterop.JSInProcessRuntime" />
        <Parameter Name="id" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="jsRuntime">To be added.</param>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.Implementation.JSInProcessObjectReference.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="jSInProcessObjectReference.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public TValue Invoke&lt;TValue&gt; (string identifier, params object?[]? args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TValue Invoke&lt;TValue&gt;(string identifier, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.Implementation.JSInProcessObjectReference.Invoke``1(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke(Of TValue) (identifier As String, ParamArray args As Object()) As TValue" />
      <MemberSignature Language="F#" Value="abstract member Invoke : string * obj[] -&gt; 'Value&#xA;override this.Invoke : string * obj[] -&gt; 'Value" Usage="jSInProcessObjectReference.Invoke (identifier, args)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TValue&gt;&#xA; virtual TValue Invoke(System::String ^ identifier, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JSInterop.IJSInProcessObjectReference.Invoke``1(System.String,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TValue">To be added.</typeparam>
        <param name="identifier">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

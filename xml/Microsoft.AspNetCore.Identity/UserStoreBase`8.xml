<Type Name="UserStoreBase&lt;TUser,TRole,TKey,TUserClaim,TUserRole,TUserLogin,TUserToken,TRoleClaim&gt;" FullName="Microsoft.AspNetCore.Identity.UserStoreBase&lt;TUser,TRole,TKey,TUserClaim,TUserRole,TUserLogin,TUserToken,TRoleClaim&gt;">
  <TypeSignature Language="C#" Value="public abstract class UserStoreBase&lt;TUser,TRole,TKey,TUserClaim,TUserRole,TUserLogin,TUserToken,TRoleClaim&gt; : Microsoft.AspNetCore.Identity.UserStoreBase&lt;TUser,TKey,TUserClaim,TUserLogin,TUserToken&gt;, IDisposable, Microsoft.AspNetCore.Identity.IUserRoleStore&lt;TUser&gt;, Microsoft.AspNetCore.Identity.IUserStore&lt;TUser&gt; where TUser : IdentityUser&lt;TKey&gt; where TRole : IdentityRole&lt;TKey&gt; where TKey : IEquatable&lt;TKey&gt; where TUserClaim : IdentityUserClaim&lt;TKey&gt;, new() where TUserRole : IdentityUserRole&lt;TKey&gt;, new() where TUserLogin : IdentityUserLogin&lt;TKey&gt;, new() where TUserToken : IdentityUserToken&lt;TKey&gt;, new() where TRoleClaim : IdentityRoleClaim&lt;TKey&gt;, new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UserStoreBase`8&lt;(class Microsoft.AspNetCore.Identity.IdentityUser`1&lt;!TKey&gt;) TUser, (class Microsoft.AspNetCore.Identity.IdentityRole`1&lt;!TKey&gt;) TRole, (class System.IEquatable`1&lt;!TKey&gt;) TKey, .ctor (class Microsoft.AspNetCore.Identity.IdentityUserClaim`1&lt;!TKey&gt;) TUserClaim, .ctor (class Microsoft.AspNetCore.Identity.IdentityUserRole`1&lt;!TKey&gt;) TUserRole, .ctor (class Microsoft.AspNetCore.Identity.IdentityUserLogin`1&lt;!TKey&gt;) TUserLogin, .ctor (class Microsoft.AspNetCore.Identity.IdentityUserToken`1&lt;!TKey&gt;) TUserToken, .ctor (class Microsoft.AspNetCore.Identity.IdentityRoleClaim`1&lt;!TKey&gt;) TRoleClaim&gt; extends Microsoft.AspNetCore.Identity.UserStoreBase`5&lt;!TUser, !TKey, !TUserClaim, !TUserLogin, !TUserToken&gt; implements class Microsoft.AspNetCore.Identity.IUserRoleStore`1&lt;!TUser&gt;, class Microsoft.AspNetCore.Identity.IUserStore`1&lt;!TUser&gt;, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Identity.UserStoreBase`8" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim)&#xA;Inherits UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken)&#xA;Implements IDisposable, IUserRoleStore(Of TUser), IUserStore(Of TUser)" />
  <TypeSignature Language="F#" Value="type UserStoreBase&lt;'User, 'Role, 'Key, 'UserClaim, 'UserRole, 'UserLogin, 'UserToken, 'RoleClaim (requires 'User :&gt; IdentityUser&lt;'Key&gt; and 'Role :&gt; IdentityRole&lt;'Key&gt; and 'Key :&gt; IEquatable&lt;'Key&gt; and 'UserClaim :&gt; IdentityUserClaim&lt;'Key&gt; and 'UserClaim : (new : unit -&gt; 'UserClaim) and 'UserRole :&gt; IdentityUserRole&lt;'Key&gt; and 'UserRole : (new : unit -&gt; 'UserRole) and 'UserLogin :&gt; IdentityUserLogin&lt;'Key&gt; and 'UserLogin : (new : unit -&gt; 'UserLogin) and 'UserToken :&gt; IdentityUserToken&lt;'Key&gt; and 'UserToken : (new : unit -&gt; 'UserToken) and 'RoleClaim :&gt; IdentityRoleClaim&lt;'Key&gt; and 'RoleClaim : (new : unit -&gt; 'RoleClaim))&gt; = class&#xA;    inherit UserStoreBase&lt;'User, 'Key, 'UserClaim, 'UserLogin, 'UserToken (requires 'User :&gt; IdentityUser&lt;'Key&gt; and 'Key :&gt; IEquatable&lt;'Key&gt; and 'UserClaim :&gt; IdentityUserClaim&lt;'Key&gt; and 'UserClaim : (new : unit -&gt; 'UserClaim) and 'UserLogin :&gt; IdentityUserLogin&lt;'Key&gt; and 'UserLogin : (new : unit -&gt; 'UserLogin) and 'UserToken :&gt; IdentityUserToken&lt;'Key&gt; and 'UserToken : (new : unit -&gt; 'UserToken))&gt;&#xA;    interface IUserRoleStore&lt;'User (requires 'User :&gt; IdentityUser&lt;'Key&gt;)&gt;&#xA;    interface IUserStore&lt;'User (requires 'User :&gt; IdentityUser&lt;'Key&gt;)&gt;&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TUser, typename TRole, typename TKey, typename TUserClaim, typename TUserRole, typename TUserLogin, typename TUserToken, typename TRoleClaim&gt;&#xA; where TUser : IdentityUser&lt;TKey&gt; where TRole : IdentityRole&lt;TKey&gt; where TKey : IEquatable&lt;TKey&gt; where TUserClaim : IdentityUserClaim&lt;TKey&gt;gcnew() where TUserRole : IdentityUserRole&lt;TKey&gt;gcnew() where TUserLogin : IdentityUserLogin&lt;TKey&gt;gcnew() where TUserToken : IdentityUserToken&lt;TKey&gt;gcnew() where TRoleClaim : IdentityRoleClaim&lt;TKey&gt;gcnew()public ref class UserStoreBase abstract : Microsoft::AspNetCore::Identity::UserStoreBase&lt;TUser, TKey, TUserClaim, TUserLogin, TUserToken&gt;, IDisposable, Microsoft::AspNetCore::Identity::IUserRoleStore&lt;TUser&gt;, Microsoft::AspNetCore::Identity::IUserStore&lt;TUser&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TUser">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Constraints>
        <BaseTypeName>Microsoft.AspNetCore.Identity.IdentityUser&lt;TKey&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TRole">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Constraints>
        <BaseTypeName>Microsoft.AspNetCore.Identity.IdentityRole&lt;TKey&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TKey">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Constraints>
        <InterfaceName>System.IEquatable&lt;TKey&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TUserClaim">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.AspNetCore.Identity.IdentityUserClaim&lt;TKey&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TUserRole">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.AspNetCore.Identity.IdentityUserRole&lt;TKey&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TUserLogin">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.AspNetCore.Identity.IdentityUserLogin&lt;TKey&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TUserToken">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.AspNetCore.Identity.IdentityUserToken&lt;TKey&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TRoleClaim">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.AspNetCore.Identity.IdentityRoleClaim&lt;TKey&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Identity.UserStoreBase&lt;TUser,TKey,TUserClaim,TUserLogin,TUserToken&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TUser">TUser</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TKey">TKey</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TUserClaim">TUserClaim</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TUserLogin">TUserLogin</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TUserToken">TUserToken</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IUserRoleStore&lt;TUser&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IUserStore&lt;TUser&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1, 1, 1, 1, 1 })]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1, 1, 1, 1, 1 })&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TUser">To be added.</typeparam>
    <typeparam name="TRole">To be added.</typeparam>
    <typeparam name="TKey">To be added.</typeparam>
    <typeparam name="TUserClaim">To be added.</typeparam>
    <typeparam name="TUserRole">To be added.</typeparam>
    <typeparam name="TUserLogin">To be added.</typeparam>
    <typeparam name="TUserToken">To be added.</typeparam>
    <typeparam name="TRoleClaim">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UserStoreBase (Microsoft.AspNetCore.Identity.IdentityErrorDescriber describer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Identity.IdentityErrorDescriber describer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.UserStoreBase`8.#ctor(Microsoft.AspNetCore.Identity.IdentityErrorDescriber)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (describer As IdentityErrorDescriber)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Identity.UserStoreBase&lt;'User, 'Role, 'Key, 'UserClaim, 'UserRole, 'UserLogin, 'UserToken, 'RoleClaim (requires 'User :&gt; Microsoft.AspNetCore.Identity.IdentityUser&lt;'Key&gt; and 'Role :&gt; Microsoft.AspNetCore.Identity.IdentityRole&lt;'Key&gt; and 'Key :&gt; IEquatable&lt;'Key&gt; and 'UserClaim :&gt; Microsoft.AspNetCore.Identity.IdentityUserClaim&lt;'Key&gt; and 'UserClaim : (new : unit -&gt; 'UserClaim) and 'UserRole :&gt; Microsoft.AspNetCore.Identity.IdentityUserRole&lt;'Key&gt; and 'UserRole : (new : unit -&gt; 'UserRole) and 'UserLogin :&gt; Microsoft.AspNetCore.Identity.IdentityUserLogin&lt;'Key&gt; and 'UserLogin : (new : unit -&gt; 'UserLogin) and 'UserToken :&gt; Microsoft.AspNetCore.Identity.IdentityUserToken&lt;'Key&gt; and 'UserToken : (new : unit -&gt; 'UserToken) and 'RoleClaim :&gt; Microsoft.AspNetCore.Identity.IdentityRoleClaim&lt;'Key&gt; and 'RoleClaim : (new : unit -&gt; 'RoleClaim))&gt; : Microsoft.AspNetCore.Identity.IdentityErrorDescriber -&gt; Microsoft.AspNetCore.Identity.UserStoreBase&lt;'User, 'Role, 'Key, 'UserClaim, 'UserRole, 'UserLogin, 'UserToken, 'RoleClaim (requires 'User :&gt; Microsoft.AspNetCore.Identity.IdentityUser&lt;'Key&gt; and 'Role :&gt; Microsoft.AspNetCore.Identity.IdentityRole&lt;'Key&gt; and 'Key :&gt; IEquatable&lt;'Key&gt; and 'UserClaim :&gt; Microsoft.AspNetCore.Identity.IdentityUserClaim&lt;'Key&gt; and 'UserClaim : (new : unit -&gt; 'UserClaim) and 'UserRole :&gt; Microsoft.AspNetCore.Identity.IdentityUserRole&lt;'Key&gt; and 'UserRole : (new : unit -&gt; 'UserRole) and 'UserLogin :&gt; Microsoft.AspNetCore.Identity.IdentityUserLogin&lt;'Key&gt; and 'UserLogin : (new : unit -&gt; 'UserLogin) and 'UserToken :&gt; Microsoft.AspNetCore.Identity.IdentityUserToken&lt;'Key&gt; and 'UserToken : (new : unit -&gt; 'UserToken) and 'RoleClaim :&gt; Microsoft.AspNetCore.Identity.IdentityRoleClaim&lt;'Key&gt; and 'RoleClaim : (new : unit -&gt; 'RoleClaim))&gt;" Usage="new Microsoft.AspNetCore.Identity.UserStoreBase&lt;'User, 'Role, 'Key, 'UserClaim, 'UserRole, 'UserLogin, 'UserToken, 'RoleClaim (requires 'User :&gt; Microsoft.AspNetCore.Identity.IdentityUser&lt;'Key&gt; and 'Role :&gt; Microsoft.AspNetCore.Identity.IdentityRole&lt;'Key&gt; and 'Key :&gt; System.IEquatable&lt;'Key&gt; and 'UserClaim :&gt; Microsoft.AspNetCore.Identity.IdentityUserClaim&lt;'Key&gt; and 'UserClaim : (new : unit -&gt; 'UserClaim) and 'UserRole :&gt; Microsoft.AspNetCore.Identity.IdentityUserRole&lt;'Key&gt; and 'UserRole : (new : unit -&gt; 'UserRole) and 'UserLogin :&gt; Microsoft.AspNetCore.Identity.IdentityUserLogin&lt;'Key&gt; and 'UserLogin : (new : unit -&gt; 'UserLogin) and 'UserToken :&gt; Microsoft.AspNetCore.Identity.IdentityUserToken&lt;'Key&gt; and 'UserToken : (new : unit -&gt; 'UserToken) and 'RoleClaim :&gt; Microsoft.AspNetCore.Identity.IdentityRoleClaim&lt;'Key&gt; and 'RoleClaim : (new : unit -&gt; 'RoleClaim))&gt; describer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UserStoreBase(Microsoft::AspNetCore::Identity::IdentityErrorDescriber ^ describer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="describer" Type="Microsoft.AspNetCore.Identity.IdentityErrorDescriber" />
      </Parameters>
      <Docs>
        <param name="describer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToRoleAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task AddToRoleAsync (TUser user, string normalizedRoleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AddToRoleAsync(!TUser user, string normalizedRoleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.UserStoreBase`8.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddToRoleAsync (user As TUser, normalizedRoleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member AddToRoleAsync : 'User * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="userStoreBase.AddToRoleAsync (user, normalizedRoleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IUserRoleStore`1.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="normalizedRoleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">To be added.</param>
        <param name="normalizedRoleName">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserRole">
      <MemberSignature Language="C#" Value="protected virtual TUserRole CreateUserRole (TUser user, TRole role);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TUserRole CreateUserRole(!TUser user, !TRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.UserStoreBase`8.CreateUserRole(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateUserRole (user As TUser, role As TRole) As TUserRole" />
      <MemberSignature Language="F#" Value="abstract member CreateUserRole : 'User * 'Role -&gt; 'UserRole&#xA;override this.CreateUserRole : 'User * 'Role -&gt; 'UserRole" Usage="userStoreBase.CreateUserRole (user, role)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual TUserRole CreateUserRole(TUser user, TRole role);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TUserRole</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="role" Type="TRole" />
      </Parameters>
      <Docs>
        <param name="user">To be added.</param>
        <param name="role">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindRoleAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.Task&lt;TRole?&gt; FindRoleAsync (string normalizedRoleName, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!TRole&gt; FindRoleAsync(string normalizedRoleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.UserStoreBase`8.FindRoleAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function FindRoleAsync (normalizedRoleName As String, cancellationToken As CancellationToken) As Task(Of TRole)" />
      <MemberSignature Language="F#" Value="abstract member FindRoleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Role (requires 'Role :&gt; Microsoft.AspNetCore.Identity.IdentityRole&lt;'Key&gt;)&gt;" Usage="userStoreBase.FindRoleAsync (normalizedRoleName, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Threading::Tasks::Task&lt;TRole&gt; ^ FindRoleAsync(System::String ^ normalizedRoleName, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TRole&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedRoleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="normalizedRoleName">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUserRoleAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.Task&lt;TUserRole?&gt; FindUserRoleAsync (TKey userId, TKey roleId, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!TUserRole&gt; FindUserRoleAsync(!TKey userId, !TKey roleId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.UserStoreBase`8.FindUserRoleAsync(`2,`2,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function FindUserRoleAsync (userId As TKey, roleId As TKey, cancellationToken As CancellationToken) As Task(Of TUserRole)" />
      <MemberSignature Language="F#" Value="abstract member FindUserRoleAsync : 'Key * 'Key * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'UserRole (requires 'UserRole :&gt; Microsoft.AspNetCore.Identity.IdentityUserRole&lt;'Key&gt; and 'UserRole : (new : unit -&gt; 'UserRole))&gt;" Usage="userStoreBase.FindUserRoleAsync (userId, roleId, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Threading::Tasks::Task&lt;TUserRole&gt; ^ FindUserRoleAsync(TKey userId, TKey roleId, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TUserRole&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="TKey" />
        <Parameter Name="roleId" Type="TKey" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userId">To be added.</param>
        <param name="roleId">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRolesAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;string&gt;&gt; GetRolesAsync (TUser user, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;string&gt;&gt; GetRolesAsync(!TUser user, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.UserStoreBase`8.GetRolesAsync(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRolesAsync (user As TUser, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IList(Of String))" />
      <MemberSignature Language="F#" Value="abstract member GetRolesAsync : 'User * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;string&gt;&gt;" Usage="userStoreBase.GetRolesAsync (user, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IUserRoleStore`1.GetRolesAsync(`0,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRoleAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;TUser&gt;&gt; GetUsersInRoleAsync (string normalizedRoleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;!TUser&gt;&gt; GetUsersInRoleAsync(string normalizedRoleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.UserStoreBase`8.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUsersInRoleAsync (normalizedRoleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IList(Of TUser))" />
      <MemberSignature Language="F#" Value="abstract member GetUsersInRoleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;'User&gt;&gt;" Usage="userStoreBase.GetUsersInRoleAsync (normalizedRoleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IUserRoleStore`1.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;TUser&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedRoleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="normalizedRoleName">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInRoleAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;bool&gt; IsInRoleAsync (TUser user, string normalizedRoleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsInRoleAsync(!TUser user, string normalizedRoleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.UserStoreBase`8.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsInRoleAsync (user As TUser, normalizedRoleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member IsInRoleAsync : 'User * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="userStoreBase.IsInRoleAsync (user, normalizedRoleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IUserRoleStore`1.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="normalizedRoleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">To be added.</param>
        <param name="normalizedRoleName">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFromRoleAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task RemoveFromRoleAsync (TUser user, string normalizedRoleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveFromRoleAsync(!TUser user, string normalizedRoleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.UserStoreBase`8.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function RemoveFromRoleAsync (user As TUser, normalizedRoleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member RemoveFromRoleAsync : 'User * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="userStoreBase.RemoveFromRoleAsync (user, normalizedRoleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IUserRoleStore`1.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="normalizedRoleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">To be added.</param>
        <param name="normalizedRoleName">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

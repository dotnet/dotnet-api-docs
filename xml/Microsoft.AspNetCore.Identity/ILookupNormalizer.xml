<Type Name="ILookupNormalizer" FullName="Microsoft.AspNetCore.Identity.ILookupNormalizer">
  <TypeSignature Language="C#" Value="public interface ILookupNormalizer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ILookupNormalizer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Identity.ILookupNormalizer" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILookupNormalizer" />
  <TypeSignature Language="F#" Value="type ILookupNormalizer = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILookupNormalizer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="NormalizeEmail">
      <MemberSignature Language="C#" Value="public string? NormalizeEmail (string? email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string NormalizeEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.ILookupNormalizer.NormalizeEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormalizeEmail (email As String) As String" />
      <MemberSignature Language="F#" Value="abstract member NormalizeEmail : string -&gt; string" Usage="iLookupNormalizer.NormalizeEmail email" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ NormalizeEmail(System::String ^ email);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullIfNotNull("email")]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullIfNotNull("email")&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeName">
      <MemberSignature Language="C#" Value="public string? NormalizeName (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string NormalizeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.ILookupNormalizer.NormalizeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormalizeName (name As String) As String" />
      <MemberSignature Language="F#" Value="abstract member NormalizeName : string -&gt; string" Usage="iLookupNormalizer.NormalizeName name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ NormalizeName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullIfNotNull("name")]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullIfNotNull("name")&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

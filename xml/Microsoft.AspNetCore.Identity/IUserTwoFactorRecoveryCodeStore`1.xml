<Type Name="IUserTwoFactorRecoveryCodeStore&lt;TUser&gt;" FullName="Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore&lt;TUser&gt;">
  <TypeSignature Language="C#" Value="public interface IUserTwoFactorRecoveryCodeStore&lt;TUser&gt; : IDisposable, Microsoft.AspNetCore.Identity.IUserStore&lt;TUser&gt; where TUser : class" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IUserTwoFactorRecoveryCodeStore`1&lt;class TUser&gt; implements class Microsoft.AspNetCore.Identity.IUserStore`1&lt;!TUser&gt;, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IUserTwoFactorRecoveryCodeStore(Of TUser)&#xA;Implements IDisposable, IUserStore(Of TUser)" />
  <TypeSignature Language="F#" Value="type IUserTwoFactorRecoveryCodeStore&lt;'User (requires 'User : null)&gt; = interface&#xA;    interface IUserStore&lt;'User (requires 'User : null)&gt;&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TUser&gt;&#xA; where TUser : classpublic interface class IUserTwoFactorRecoveryCodeStore : IDisposable, Microsoft::AspNetCore::Identity::IUserStore&lt;TUser&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TUser">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IUserStore&lt;TUser&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TUser">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CountCodesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; CountCodesAsync (TUser user, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; CountCodesAsync(!TUser user, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore`1.CountCodesAsync(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CountCodesAsync (user As TUser, cancellationToken As CancellationToken) As Task(Of Integer)" />
      <MemberSignature Language="F#" Value="abstract member CountCodesAsync : 'User * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="iUserTwoFactorRecoveryCodeStore.CountCodesAsync (user, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ CountCodesAsync(TUser user, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedeemCodeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; RedeemCodeAsync (TUser user, string code, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; RedeemCodeAsync(!TUser user, string code, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore`1.RedeemCodeAsync(`0,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function RedeemCodeAsync (user As TUser, code As String, cancellationToken As CancellationToken) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member RedeemCodeAsync : 'User * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="iUserTwoFactorRecoveryCodeStore.RedeemCodeAsync (user, code, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ RedeemCodeAsync(TUser user, System::String ^ code, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="code" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">To be added.</param>
        <param name="code">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceCodesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ReplaceCodesAsync (TUser user, System.Collections.Generic.IEnumerable&lt;string&gt; recoveryCodes, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ReplaceCodesAsync(!TUser user, class System.Collections.Generic.IEnumerable`1&lt;string&gt; recoveryCodes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore`1.ReplaceCodesAsync(`0,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReplaceCodesAsync (user As TUser, recoveryCodes As IEnumerable(Of String), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member ReplaceCodesAsync : 'User * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iUserTwoFactorRecoveryCodeStore.ReplaceCodesAsync (user, recoveryCodes, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ReplaceCodesAsync(TUser user, System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ recoveryCodes, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="recoveryCodes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">To be added.</param>
        <param name="recoveryCodes">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

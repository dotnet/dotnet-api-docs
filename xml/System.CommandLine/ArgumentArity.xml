<Type Name="ArgumentArity" FullName="System.CommandLine.ArgumentArity">
  <TypeSignature Language="C#" Value="public readonly struct ArgumentArity : IEquatable&lt;System.CommandLine.ArgumentArity&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ArgumentArity extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.CommandLine.ArgumentArity&gt;" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.ArgumentArity" />
  <TypeSignature Language="VB.NET" Value="Public Structure ArgumentArity&#xA;Implements IEquatable(Of ArgumentArity)" />
  <TypeSignature Language="F#" Value="type ArgumentArity = struct" />
  <TypeSignature Language="C++ CLI" Value="public value class ArgumentArity : IEquatable&lt;System::CommandLine::ArgumentArity&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.CommandLine.ArgumentArity&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("\{{MinimumNumberOfValues},{MaximumNumberOfValues}\}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("\{{MinimumNumberOfValues},{MaximumNumberOfValues}\}")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Defines the arity of an option or argument.
            </summary>
    <remarks>The arity refers to the number of values that can be passed on the command line.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentArity (int minimumNumberOfValues, int maximumNumberOfValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minimumNumberOfValues, int32 maximumNumberOfValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.ArgumentArity.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minimumNumberOfValues As Integer, maximumNumberOfValues As Integer)" />
      <MemberSignature Language="F#" Value="new System.CommandLine.ArgumentArity : int * int -&gt; System.CommandLine.ArgumentArity" Usage="new System.CommandLine.ArgumentArity (minimumNumberOfValues, maximumNumberOfValues)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentArity(int minimumNumberOfValues, int maximumNumberOfValues);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minimumNumberOfValues" Type="System.Int32" />
        <Parameter Name="maximumNumberOfValues" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minimumNumberOfValues">The minimum number of values required for the argument.</param>
        <param name="maximumNumberOfValues">The maximum number of values allowed for the argument.</param>
        <summary>
            Initializes a new instance of the ArgumentArity class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown when <paramref name="minimumNumberOfValues" /> is negative.</exception>
        <exception cref="T:System.ArgumentException">Thrown when the maximum number is less than the minimum number or the maximum number is greater than MaximumArity.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.CommandLine.ArgumentArity other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.CommandLine.ArgumentArity other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.ArgumentArity.Equals(System.CommandLine.ArgumentArity)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ArgumentArity) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : System.CommandLine.ArgumentArity -&gt; bool" Usage="argumentArity.Equals other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::CommandLine::ArgumentArity other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.CommandLine.ArgumentArity" />
      </Parameters>
      <Docs>
        <param name="other">An object to compare with this object.</param>
        <summary>Indicates whether the current object is equal to another object of the same type.</summary>
        <returns>
          <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.ArgumentArity.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="argumentArity.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ExactlyOne">
      <MemberSignature Language="C#" Value="public static System.CommandLine.ArgumentArity ExactlyOne { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.CommandLine.ArgumentArity ExactlyOne" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.ArgumentArity.ExactlyOne" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExactlyOne As ArgumentArity" />
      <MemberSignature Language="F#" Value="static member ExactlyOne : System.CommandLine.ArgumentArity" Usage="System.CommandLine.ArgumentArity.ExactlyOne" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::CommandLine::ArgumentArity ExactlyOne { System::CommandLine::ArgumentArity get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.ArgumentArity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An arity that must have exactly one value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.ArgumentArity.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="argumentArity.GetHashCode " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="MaximumNumberOfValues">
      <MemberSignature Language="C#" Value="public int MaximumNumberOfValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumNumberOfValues" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.ArgumentArity.MaximumNumberOfValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumNumberOfValues As Integer" />
      <MemberSignature Language="F#" Value="member this.MaximumNumberOfValues : int" Usage="System.CommandLine.ArgumentArity.MaximumNumberOfValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumNumberOfValues { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the maximum number of values allowed for an <see cref="T:System.CommandLine.Argument">argument</see>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumNumberOfValues">
      <MemberSignature Language="C#" Value="public int MinimumNumberOfValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumNumberOfValues" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.ArgumentArity.MinimumNumberOfValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinimumNumberOfValues As Integer" />
      <MemberSignature Language="F#" Value="member this.MinimumNumberOfValues : int" Usage="System.CommandLine.ArgumentArity.MinimumNumberOfValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumNumberOfValues { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the minimum number of values required for an <see cref="T:System.CommandLine.Argument">argument</see>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OneOrMore">
      <MemberSignature Language="C#" Value="public static System.CommandLine.ArgumentArity OneOrMore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.CommandLine.ArgumentArity OneOrMore" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.ArgumentArity.OneOrMore" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OneOrMore As ArgumentArity" />
      <MemberSignature Language="F#" Value="static member OneOrMore : System.CommandLine.ArgumentArity" Usage="System.CommandLine.ArgumentArity.OneOrMore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::CommandLine::ArgumentArity OneOrMore { System::CommandLine::ArgumentArity get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.ArgumentArity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An arity that must have at least one value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static System.CommandLine.ArgumentArity Zero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.CommandLine.ArgumentArity Zero" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.ArgumentArity.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Zero As ArgumentArity" />
      <MemberSignature Language="F#" Value="static member Zero : System.CommandLine.ArgumentArity" Usage="System.CommandLine.ArgumentArity.Zero" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::CommandLine::ArgumentArity Zero { System::CommandLine::ArgumentArity get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.ArgumentArity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An arity that does not allow any values.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroOrMore">
      <MemberSignature Language="C#" Value="public static System.CommandLine.ArgumentArity ZeroOrMore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.CommandLine.ArgumentArity ZeroOrMore" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.ArgumentArity.ZeroOrMore" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ZeroOrMore As ArgumentArity" />
      <MemberSignature Language="F#" Value="static member ZeroOrMore : System.CommandLine.ArgumentArity" Usage="System.CommandLine.ArgumentArity.ZeroOrMore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::CommandLine::ArgumentArity ZeroOrMore { System::CommandLine::ArgumentArity get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.ArgumentArity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An arity that may have multiple values.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroOrOne">
      <MemberSignature Language="C#" Value="public static System.CommandLine.ArgumentArity ZeroOrOne { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.CommandLine.ArgumentArity ZeroOrOne" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.ArgumentArity.ZeroOrOne" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ZeroOrOne As ArgumentArity" />
      <MemberSignature Language="F#" Value="static member ZeroOrOne : System.CommandLine.ArgumentArity" Usage="System.CommandLine.ArgumentArity.ZeroOrOne" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::CommandLine::ArgumentArity ZeroOrOne { System::CommandLine::ArgumentArity get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.ArgumentArity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An arity that may have one value, but no more than one.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

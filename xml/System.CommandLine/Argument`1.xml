<Type Name="Argument&lt;T&gt;" FullName="System.CommandLine.Argument&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class Argument&lt;T&gt; : System.CommandLine.Argument, System.CommandLine.Binding.IValueDescriptor&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Argument`1&lt;T&gt; extends System.CommandLine.Argument implements class System.CommandLine.Binding.IValueDescriptor, class System.CommandLine.Binding.IValueDescriptor`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Argument`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Argument(Of T)&#xA;Inherits Argument&#xA;Implements IValueDescriptor(Of T)" />
  <TypeSignature Language="F#" Value="type Argument&lt;'T&gt; = class&#xA;    inherit Argument&#xA;    interface IValueDescriptor&lt;'T&gt;&#xA;    interface IValueDescriptor" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Argument : System::CommandLine::Argument, System::CommandLine::Binding::IValueDescriptor&lt;T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.CommandLine.Argument</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.CommandLine.Binding.IValueDescriptor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.CommandLine.Binding.IValueDescriptor&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
    <inheritdoc cref="T:System.CommandLine.Argument" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Argument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Argument`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Argument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the Argument class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Argument (Func&lt;T&gt; getDefaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!T&gt; getDefaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Argument`1.#ctor(System.Func{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (getDefaultValue As Func(Of T))" />
      <MemberSignature Language="F#" Value="new System.CommandLine.Argument&lt;'T&gt; : Func&lt;'T&gt; -&gt; System.CommandLine.Argument&lt;'T&gt;" Usage="new System.CommandLine.Argument&lt;'T&gt; getDefaultValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Argument(Func&lt;T&gt; ^ getDefaultValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="getDefaultValue" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="getDefaultValue">The delegate to invoke to return the default value.</param>
        <summary>
            Initializes a new instance of the Argument class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="getDefaultValue" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Argument (System.CommandLine.Parsing.ParseArgument&lt;T&gt; parse, bool isDefault = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CommandLine.Parsing.ParseArgument`1&lt;!T&gt; parse, bool isDefault) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Argument`1.#ctor(System.CommandLine.Parsing.ParseArgument{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parse As ParseArgument(Of T), Optional isDefault As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.CommandLine.Argument&lt;'T&gt; : System.CommandLine.Parsing.ParseArgument&lt;'T&gt; * bool -&gt; System.CommandLine.Argument&lt;'T&gt;" Usage="new System.CommandLine.Argument&lt;'T&gt; (parse, isDefault)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parse" Type="System.CommandLine.Parsing.ParseArgument&lt;T&gt;" />
        <Parameter Name="isDefault" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parse">A custom argument parser.</param>
        <param name="isDefault">
          <see langword="true" /> to use the <paramref name="parse" /> result as default value.</param>
        <summary>
            Initializes a new instance of the Argument class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Argument (string? name, string? description = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Argument`1.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, Optional description As String = Nothing)" />
      <MemberSignature Language="F#" Value="new System.CommandLine.Argument&lt;'T&gt; : string * string -&gt; System.CommandLine.Argument&lt;'T&gt;" Usage="new System.CommandLine.Argument&lt;'T&gt; (name, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="description">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Argument (string name, Func&lt;T&gt; getDefaultValue, string? description = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Func`1&lt;!T&gt; getDefaultValue, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Argument`1.#ctor(System.String,System.Func{`0},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, getDefaultValue As Func(Of T), Optional description As String = Nothing)" />
      <MemberSignature Language="F#" Value="new System.CommandLine.Argument&lt;'T&gt; : string * Func&lt;'T&gt; * string -&gt; System.CommandLine.Argument&lt;'T&gt;" Usage="new System.CommandLine.Argument&lt;'T&gt; (name, getDefaultValue, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getDefaultValue" Type="System.Func&lt;T&gt;" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the argument.</param>
        <param name="getDefaultValue">The delegate to invoke to return the default value.</param>
        <param name="description">The description of the argument, shown in help.</param>
        <summary>
            Initializes a new instance of the Argument class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="getDefaultValue" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Argument (string? name, System.CommandLine.Parsing.ParseArgument&lt;T&gt; parse, bool isDefault = false, string? description = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.CommandLine.Parsing.ParseArgument`1&lt;!T&gt; parse, bool isDefault, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Argument`1.#ctor(System.String,System.CommandLine.Parsing.ParseArgument{`0},System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, parse As ParseArgument(Of T), Optional isDefault As Boolean = false, Optional description As String = Nothing)" />
      <MemberSignature Language="F#" Value="new System.CommandLine.Argument&lt;'T&gt; : string * System.CommandLine.Parsing.ParseArgument&lt;'T&gt; * bool * string -&gt; System.CommandLine.Argument&lt;'T&gt;" Usage="new System.CommandLine.Argument&lt;'T&gt; (name, parse, isDefault, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parse" Type="System.CommandLine.Parsing.ParseArgument&lt;T&gt;" />
        <Parameter Name="isDefault" Type="System.Boolean" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the argument.</param>
        <param name="parse">A custom argument parser.</param>
        <param name="isDefault">
          <see langword="true" /> to use the <paramref name="parse" /> result as default value.</param>
        <param name="description">The description of the argument, shown in help.</param>
        <summary>
            Initializes a new instance of the Argument class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="parse" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public override Type ValueType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Argument`1.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ValueType As Type" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type with get, set" Usage="System.CommandLine.Argument&lt;'T&gt;.ValueType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ValueType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>

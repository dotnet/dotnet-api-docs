<Type Name="RootCommand" FullName="System.CommandLine.RootCommand">
  <TypeSignature Language="C#" Value="public class RootCommand : System.CommandLine.Command" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RootCommand extends System.CommandLine.Command" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.RootCommand" />
  <TypeSignature Language="VB.NET" Value="Public Class RootCommand&#xA;Inherits Command" />
  <TypeSignature Language="F#" Value="type RootCommand = class&#xA;    inherit Command" />
  <TypeSignature Language="C++ CLI" Value="public ref class RootCommand : System::CommandLine::Command" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CommandLine.Command</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Represents the main action that the application performs.
            </summary>
    <remarks>
            Use the RootCommand object without any subcommands for applications that perform one action. Add subcommands 
            to the root for applications that require actions identified by specific strings. For example, `dir` does not 
            use any subcommands. See <see cref="T:System.CommandLine.Command" /> for applications with multiple actions.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RootCommand (string description = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.RootCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional description As String = &quot;&quot;)" />
      <MemberSignature Language="F#" Value="new System.CommandLine.RootCommand : string -&gt; System.CommandLine.RootCommand" Usage="new System.CommandLine.RootCommand description" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="description">The description of the command, shown in help.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.CommandLine.Directive directive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.CommandLine.Directive directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.RootCommand.Add(System.CommandLine.Directive)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (directive As Directive)" />
      <MemberSignature Language="F#" Value="override this.Add : System.CommandLine.Directive -&gt; unit" Usage="rootCommand.Add directive" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::CommandLine::Directive ^ directive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.CommandLine.Directive" Index="0" FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp;netstandard-2.0-pp" />
      </Parameters>
      <Docs>
        <param name="directive">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Directives">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.CommandLine.Directive&gt; Directives { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.CommandLine.Directive&gt; Directives" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.RootCommand.Directives" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Directives As IList(Of Directive)" />
      <MemberSignature Language="F#" Value="member this.Directives : System.Collections.Generic.IList&lt;System.CommandLine.Directive&gt;" Usage="System.CommandLine.RootCommand.Directives" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::CommandLine::Directive ^&gt; ^ Directives { System::Collections::Generic::IList&lt;System::CommandLine::Directive ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.CommandLine.Directive&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutableName">
      <MemberSignature Language="C#" Value="public static string ExecutableName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ExecutableName" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.RootCommand.ExecutableName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExecutableName As String" />
      <MemberSignature Language="F#" Value="static member ExecutableName : string" Usage="System.CommandLine.RootCommand.ExecutableName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ExecutableName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the currently running executable.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutablePath">
      <MemberSignature Language="C#" Value="public static string ExecutablePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ExecutablePath" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.RootCommand.ExecutablePath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExecutablePath As String" />
      <MemberSignature Language="F#" Value="static member ExecutablePath : string" Usage="System.CommandLine.RootCommand.ExecutablePath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ExecutablePath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The path to the currently running executable.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="Option" FullName="System.CommandLine.Option">
  <TypeSignature Language="C#" Value="public class Option : System.CommandLine.IdentifierSymbol, System.CommandLine.Binding.IValueDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Option extends System.CommandLine.IdentifierSymbol implements class System.CommandLine.Binding.IValueDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Option" />
  <TypeSignature Language="VB.NET" Value="Public Class Option&#xA;Inherits IdentifierSymbol&#xA;Implements IValueDescriptor" />
  <TypeSignature Language="F#" Value="type Option = class&#xA;    inherit IdentifierSymbol&#xA;    interface IValueDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class Option : System::CommandLine::IdentifierSymbol, System::CommandLine::Binding::IValueDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CommandLine.IdentifierSymbol</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.CommandLine.Binding.IValueDescriptor</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A symbol defining a named parameter and a value for that parameter. 
            </summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.CommandLine.IdentifierSymbol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Option (string name, string? description = default, Type? argumentType = default, Func&lt;object?&gt;? getDefaultValue = default, System.CommandLine.ArgumentArity arity = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string description, class System.Type argumentType, class System.Func`1&lt;object&gt; getDefaultValue, valuetype System.CommandLine.ArgumentArity arity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Option.#ctor(System.String,System.String,System.Type,System.Func{System.Object},System.CommandLine.ArgumentArity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, Optional description As String = Nothing, Optional argumentType As Type = Nothing, Optional getDefaultValue As Func(Of Object) = Nothing, Optional arity As ArgumentArity = Nothing)" />
      <MemberSignature Language="F#" Value="new System.CommandLine.Option : string * string * Type * Func&lt;obj&gt; * System.CommandLine.ArgumentArity -&gt; System.CommandLine.Option" Usage="new System.CommandLine.Option (name, description, argumentType, getDefaultValue, arity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="argumentType" Type="System.Type" />
        <Parameter Name="getDefaultValue" Type="System.Func&lt;System.Object&gt;" />
        <Parameter Name="arity" Type="System.CommandLine.ArgumentArity" />
      </Parameters>
      <Docs>
        <param name="name">The name of the option, which can be used to specify it on the command line.</param>
        <param name="description">The description of the option shown in help.</param>
        <param name="argumentType">The type that the option's argument(s) can be parsed to.</param>
        <param name="getDefaultValue">A delegate used to get a default value for the option when it is not specified on the command line.</param>
        <param name="arity">The arity of the option.</param>
        <summary>
            Initializes a new instance of the <see cref="T:System.CommandLine.Option" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Option (string[] aliases, string? description = default, Type? argumentType = default, Func&lt;object?&gt;? getDefaultValue = default, System.CommandLine.ArgumentArity arity = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] aliases, string description, class System.Type argumentType, class System.Func`1&lt;object&gt; getDefaultValue, valuetype System.CommandLine.ArgumentArity arity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Option.#ctor(System.String[],System.String,System.Type,System.Func{System.Object},System.CommandLine.ArgumentArity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (aliases As String(), Optional description As String = Nothing, Optional argumentType As Type = Nothing, Optional getDefaultValue As Func(Of Object) = Nothing, Optional arity As ArgumentArity = Nothing)" />
      <MemberSignature Language="F#" Value="new System.CommandLine.Option : string[] * string * Type * Func&lt;obj&gt; * System.CommandLine.ArgumentArity -&gt; System.CommandLine.Option" Usage="new System.CommandLine.Option (aliases, description, argumentType, getDefaultValue, arity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="aliases" Type="System.String[]" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="argumentType" Type="System.Type" />
        <Parameter Name="getDefaultValue" Type="System.Func&lt;System.Object&gt;" />
        <Parameter Name="arity" Type="System.CommandLine.ArgumentArity" />
      </Parameters>
      <Docs>
        <param name="aliases">The set of strings that can be used on the command line to specify the option.</param>
        <param name="description">The description of the option shown in help.</param>
        <param name="argumentType">The type that the option's argument(s) can be parsed to.</param>
        <param name="getDefaultValue">A delegate used to get a default value for the option when it is not specified on the command line.</param>
        <param name="arity">The arity of the option.</param>
        <summary>
            Initializes a new instance of the <see cref="T:System.CommandLine.Option" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddValidator">
      <MemberSignature Language="C#" Value="public void AddValidator (System.CommandLine.Parsing.ValidateSymbolResult&lt;System.CommandLine.Parsing.OptionResult&gt; validate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValidator(class System.CommandLine.Parsing.ValidateSymbolResult`1&lt;class System.CommandLine.Parsing.OptionResult&gt; validate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Option.AddValidator(System.CommandLine.Parsing.ValidateSymbolResult{System.CommandLine.Parsing.OptionResult})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValidator (validate As ValidateSymbolResult(Of OptionResult))" />
      <MemberSignature Language="F#" Value="member this.AddValidator : System.CommandLine.Parsing.ValidateSymbolResult&lt;System.CommandLine.Parsing.OptionResult&gt; -&gt; unit" Usage="option.AddValidator validate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValidator(System::CommandLine::Parsing::ValidateSymbolResult&lt;System::CommandLine::Parsing::OptionResult ^&gt; ^ validate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validate" Type="System.CommandLine.Parsing.ValidateSymbolResult&lt;System.CommandLine.Parsing.OptionResult&gt;" />
      </Parameters>
      <Docs>
        <param name="validate">A <see cref="T:System.CommandLine.Parsing.ValidateSymbolResult`1" /> delegate used to validate the <see cref="T:System.CommandLine.Parsing.OptionResult" /> produced during parsing.</param>
        <summary>
            Adds a validator that will be called when the option is matched by the parser.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowMultipleArgumentsPerToken">
      <MemberSignature Language="C#" Value="public bool AllowMultipleArgumentsPerToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultipleArgumentsPerToken" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Option.AllowMultipleArgumentsPerToken" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowMultipleArgumentsPerToken As Boolean" />
      <MemberSignature Language="F#" Value="member this.AllowMultipleArgumentsPerToken : bool with get, set" Usage="System.CommandLine.Option.AllowMultipleArgumentsPerToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowMultipleArgumentsPerToken { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value that indicates whether multiple argument tokens are allowed for each option identifier token.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
            If set to <see langword="true" />, the following command line is valid for passing multiple arguments:
            <code>
            &gt; --opt 1 2 3
            </code>
            The following is equivalent and is always valid:
            <code>
            &gt; --opt 1 --opt 2 --opt 3
            </code></example>
      </Docs>
    </Member>
    <Member MemberName="ArgumentHelpName">
      <MemberSignature Language="C#" Value="public string? ArgumentHelpName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ArgumentHelpName" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Option.ArgumentHelpName" />
      <MemberSignature Language="VB.NET" Value="Public Property ArgumentHelpName As String" />
      <MemberSignature Language="F#" Value="member this.ArgumentHelpName : string with get, set" Usage="System.CommandLine.Option.ArgumentHelpName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ArgumentHelpName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the argument when displayed in help.
            </summary>
        <value>
            The name of the argument when displayed in help.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arity">
      <MemberSignature Language="C#" Value="public virtual System.CommandLine.ArgumentArity Arity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CommandLine.ArgumentArity Arity" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Option.Arity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Arity As ArgumentArity" />
      <MemberSignature Language="F#" Value="member this.Arity : System.CommandLine.ArgumentArity with get, set" Usage="System.CommandLine.Option.Arity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::CommandLine::ArgumentArity Arity { System::CommandLine::ArgumentArity get(); void set(System::CommandLine::ArgumentArity value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.ArgumentArity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the arity of the option.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompletions">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.CommandLine.Completions.CompletionItem&gt; GetCompletions (System.CommandLine.Completions.CompletionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.CommandLine.Completions.CompletionItem&gt; GetCompletions(class System.CommandLine.Completions.CompletionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Option.GetCompletions(System.CommandLine.Completions.CompletionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCompletions (context As CompletionContext) As IEnumerable(Of CompletionItem)" />
      <MemberSignature Language="F#" Value="override this.GetCompletions : System.CommandLine.Completions.CompletionContext -&gt; seq&lt;System.CommandLine.Completions.CompletionItem&gt;" Usage="option.GetCompletions context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;System::CommandLine::Completions::CompletionItem ^&gt; ^ GetCompletions(System::CommandLine::Completions::CompletionContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.CommandLine.Completions.CompletionItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.CommandLine.Completions.CompletionContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="HasAliasIgnoringPrefix">
      <MemberSignature Language="C#" Value="public bool HasAliasIgnoringPrefix (string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasAliasIgnoringPrefix(string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Option.HasAliasIgnoringPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasAliasIgnoringPrefix (alias As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasAliasIgnoringPrefix : string -&gt; bool" Usage="option.HasAliasIgnoringPrefix alias" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasAliasIgnoringPrefix(System::String ^ alias);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="alias">The alias, which can include a prefix.</param>
        <summary>
            Indicates whether a given alias exists on the option, regardless of its prefix.
            </summary>
        <returns>
          <see langword="true" /> if the alias exists; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequired">
      <MemberSignature Language="C#" Value="public bool IsRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequired" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Option.IsRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property IsRequired As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsRequired : bool with get, set" Usage="System.CommandLine.Option.IsRequired" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRequired { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates whether the option is required when its parent command is invoked.
            </summary>
        <value>To be added.</value>
        <remarks>When an option is required and its parent command is invoked without it, an error results.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Option.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.CommandLine.Option.Name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name {  void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SetDefaultValue">
      <MemberSignature Language="C#" Value="public void SetDefaultValue (object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDefaultValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Option.SetDefaultValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultValue (value As Object)" />
      <MemberSignature Language="F#" Value="member this.SetDefaultValue : obj -&gt; unit" Usage="option.SetDefaultValue value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultValue(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The default value for the option.</param>
        <summary>
            Sets the default value for the option.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultValueFactory">
      <MemberSignature Language="C#" Value="public void SetDefaultValueFactory (Func&lt;object?&gt; getDefaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDefaultValueFactory(class System.Func`1&lt;object&gt; getDefaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Option.SetDefaultValueFactory(System.Func{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultValueFactory (getDefaultValue As Func(Of Object))" />
      <MemberSignature Language="F#" Value="member this.SetDefaultValueFactory : Func&lt;obj&gt; -&gt; unit" Usage="option.SetDefaultValueFactory getDefaultValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultValueFactory(Func&lt;System::Object ^&gt; ^ getDefaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getDefaultValue" Type="System.Func&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="getDefaultValue">The delegate to invoke to return the default value.</param>
        <summary>
            Sets a delegate to invoke when the default value for the option is required.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="getDefaultValue" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.CommandLine.Binding.IValueDescriptor.GetDefaultValue">
      <MemberSignature Language="C#" Value="object? IValueDescriptor.GetDefaultValue ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.CommandLine.Binding.IValueDescriptor.GetDefaultValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Option.System#CommandLine#Binding#IValueDescriptor#GetDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Function GetDefaultValue () As Object Implements IValueDescriptor.GetDefaultValue" />
      <MemberSignature Language="F#" Value="abstract member System.CommandLine.Binding.IValueDescriptor.GetDefaultValue : unit -&gt; obj&#xA;override this.System.CommandLine.Binding.IValueDescriptor.GetDefaultValue : unit -&gt; obj" Usage="option.System.CommandLine.Binding.IValueDescriptor.GetDefaultValue " />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.CommandLine.Binding.IValueDescriptor.GetDefaultValue() = System::CommandLine::Binding::IValueDescriptor::GetDefaultValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CommandLine.Binding.IValueDescriptor.GetDefaultValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the default value, if any.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.CommandLine.Binding.IValueDescriptor.HasDefaultValue">
      <MemberSignature Language="C#" Value="bool System.CommandLine.Binding.IValueDescriptor.HasDefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.CommandLine.Binding.IValueDescriptor.HasDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Option.System#CommandLine#Binding#IValueDescriptor#HasDefaultValue" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasDefaultValue As Boolean Implements IValueDescriptor.HasDefaultValue" />
      <MemberSignature Language="F#" Value="member this.System.CommandLine.Binding.IValueDescriptor.HasDefaultValue : bool" Usage="System.CommandLine.Binding.IValueDescriptor.HasDefaultValue" />
      <MemberSignature Language="C++ CLI" Value="property bool System::CommandLine::Binding::IValueDescriptor::HasDefaultValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.CommandLine.Binding.IValueDescriptor.HasDefaultValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether there is a default value.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.CommandLine.Binding.IValueDescriptor.ValueName">
      <MemberSignature Language="C#" Value="string System.CommandLine.Binding.IValueDescriptor.ValueName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.CommandLine.Binding.IValueDescriptor.ValueName" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Option.System#CommandLine#Binding#IValueDescriptor#ValueName" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ValueName As String Implements IValueDescriptor.ValueName" />
      <MemberSignature Language="F#" Value="member this.System.CommandLine.Binding.IValueDescriptor.ValueName : string" Usage="System.CommandLine.Binding.IValueDescriptor.ValueName" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::CommandLine::Binding::IValueDescriptor::ValueName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.CommandLine.Binding.IValueDescriptor.ValueName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the value.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Option.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueType As Type" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type" Usage="System.CommandLine.Option.ValueType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ValueType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.CommandLine.Binding.IValueDescriptor.ValueType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="T:System.Type" /> that the option's arguments are expected to be parsed as.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

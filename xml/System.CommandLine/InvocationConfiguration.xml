<Type Name="InvocationConfiguration" FullName="System.CommandLine.InvocationConfiguration">
  <TypeSignature Language="C#" Value="public class InvocationConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InvocationConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.InvocationConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class InvocationConfiguration" />
  <TypeSignature Language="F#" Value="type InvocationConfiguration = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class InvocationConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvocationConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.InvocationConfiguration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvocationConfiguration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDefaultExceptionHandler">
      <MemberSignature Language="C#" Value="public bool EnableDefaultExceptionHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDefaultExceptionHandler" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.InvocationConfiguration.EnableDefaultExceptionHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDefaultExceptionHandler As Boolean" />
      <MemberSignature Language="F#" Value="member this.EnableDefaultExceptionHandler : bool with get, set" Usage="System.CommandLine.InvocationConfiguration.EnableDefaultExceptionHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDefaultExceptionHandler { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Enables a default exception handler to catch any unhandled exceptions thrown during invocation. Enabled by default.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Error { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Error" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.InvocationConfiguration.Error" />
      <MemberSignature Language="VB.NET" Value="Public Property Error As TextWriter" />
      <MemberSignature Language="F#" Value="member this.Error : System.IO.TextWriter with get, set" Usage="System.CommandLine.InvocationConfiguration.Error" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Error { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The standard error. Used for printing error information like parse errors.
            By default it's set to <see cref="P:System.Console.Error" />.
            For testing purposes, it can be set to a new instance of <see cref="T:System.IO.StringWriter" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Output">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Output { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Output" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.InvocationConfiguration.Output" />
      <MemberSignature Language="VB.NET" Value="Public Property Output As TextWriter" />
      <MemberSignature Language="F#" Value="member this.Output : System.IO.TextWriter with get, set" Usage="System.CommandLine.InvocationConfiguration.Output" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Output { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The standard output. Used by Help and other facilities that write non-error information.
            By default it's set to <see cref="P:System.Console.Out" />.
            For testing purposes, it can be set to a new instance of <see cref="T:System.IO.StringWriter" />.
            If you want to disable the output, please set it to <see cref="F:System.IO.TextWriter.Null" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTerminationTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan? ProcessTerminationTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; ProcessTerminationTimeout" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.InvocationConfiguration.ProcessTerminationTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ProcessTerminationTimeout As Nullable(Of TimeSpan)" />
      <MemberSignature Language="F#" Value="member this.ProcessTerminationTimeout : Nullable&lt;TimeSpan&gt; with get, set" Usage="System.CommandLine.InvocationConfiguration.ProcessTerminationTimeout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;TimeSpan&gt; ProcessTerminationTimeout { Nullable&lt;TimeSpan&gt; get(); void set(Nullable&lt;TimeSpan&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Enables signaling and handling of process termination (Ctrl+C, SIGINT, SIGTERM) via a <see cref="T:System.Threading.CancellationToken" /> 
            that can be passed to a <see cref="T:System.CommandLine.Invocation.CommandLineAction" /> during invocation.
            If not provided, a default timeout of 2 seconds is enforced.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

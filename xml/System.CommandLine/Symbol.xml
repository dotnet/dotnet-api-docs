<Type Name="Symbol" FullName="System.CommandLine.Symbol">
  <TypeSignature Language="C#" Value="public abstract class Symbol : System.CommandLine.Completions.ICompletionSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Symbol extends System.Object implements class System.CommandLine.Completions.ICompletionSource" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Symbol" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Symbol&#xA;Implements ICompletionSource" />
  <TypeSignature Language="F#" Value="type Symbol = class&#xA;    interface ICompletionSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class Symbol abstract : System::CommandLine::Completions::ICompletionSource" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.CommandLine.Completions.ICompletionSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Defines a named symbol that resides in a hierarchy with parent and child symbols.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string? Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Symbol.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Description As String" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.CommandLine.Symbol.Description" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the description of the symbol.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompletions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.CommandLine.Completions.CompletionItem&gt; GetCompletions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.CommandLine.Completions.CompletionItem&gt; GetCompletions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Symbol.GetCompletions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCompletions () As IEnumerable(Of CompletionItem)" />
      <MemberSignature Language="F#" Value="member this.GetCompletions : unit -&gt; seq&lt;System.CommandLine.Completions.CompletionItem&gt;" Usage="symbol.GetCompletions " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::CommandLine::Completions::CompletionItem ^&gt; ^ GetCompletions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.CommandLine.Completions.CompletionItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets completions for the symbol.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompletions">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.CommandLine.Completions.CompletionItem&gt; GetCompletions (System.CommandLine.Completions.CompletionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.CommandLine.Completions.CompletionItem&gt; GetCompletions(class System.CommandLine.Completions.CompletionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Symbol.GetCompletions(System.CommandLine.Completions.CompletionContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCompletions (context As CompletionContext) As IEnumerable(Of CompletionItem)" />
      <MemberSignature Language="F#" Value="abstract member GetCompletions : System.CommandLine.Completions.CompletionContext -&gt; seq&lt;System.CommandLine.Completions.CompletionItem&gt;" Usage="symbol.GetCompletions context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::CommandLine::Completions::CompletionItem ^&gt; ^ GetCompletions(System::CommandLine::Completions::CompletionContext ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CommandLine.Completions.ICompletionSource.GetCompletions(System.CommandLine.Completions.CompletionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.CommandLine.Completions.CompletionItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.CommandLine.Completions.CompletionContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Gets the suggested values for command line completion.</summary>
        <returns>A list of completion items.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsHidden">
      <MemberSignature Language="C#" Value="public bool IsHidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHidden" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Symbol.IsHidden" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHidden As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsHidden : bool with get, set" Usage="System.CommandLine.Symbol.IsHidden" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHidden { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the symbol is hidden.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Symbol.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.CommandLine.Symbol.Name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the symbol.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.CommandLine.Symbol&gt; Parents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.CommandLine.Symbol&gt; Parents" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Symbol.Parents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parents As IEnumerable(Of Symbol)" />
      <MemberSignature Language="F#" Value="member this.Parents : seq&lt;System.CommandLine.Symbol&gt;" Usage="System.CommandLine.Symbol.Parents" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::CommandLine::Symbol ^&gt; ^ Parents { System::Collections::Generic::IEnumerable&lt;System::CommandLine::Symbol ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.CommandLine.Symbol+&lt;get_Parents&gt;d__20))]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.CommandLine.Symbol+&lt;get_Parents&gt;d__20))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.CommandLine.Symbol&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the parent symbols.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Symbol.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="symbol.ToString " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>

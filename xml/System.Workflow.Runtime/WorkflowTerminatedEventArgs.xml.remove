<Type Name="WorkflowTerminatedEventArgs" FullName="System.Workflow.Runtime.WorkflowTerminatedEventArgs">
  <TypeSignature Language="C#" Value="public class WorkflowTerminatedEventArgs : System.Workflow.Runtime.WorkflowEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowTerminatedEventArgs extends System.Workflow.Runtime.WorkflowEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowTerminatedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowTerminatedEventArgs&#xA;Inherits WorkflowEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowTerminatedEventArgs : System::Workflow::Runtime::WorkflowEventArgs" />
  <TypeSignature Language="F#" Value="type WorkflowTerminatedEventArgs = class&#xA;    inherit WorkflowEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.WorkflowEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides data for the <see cref="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated" /> event.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 A workflow instance may be terminated in one of three ways: the host may call <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A?displayProperty=nameWithType>, a <xref:System.Workflow.ComponentModel.TerminateActivity> activity may be invoked from inside the workflow instance, or the workflow runtime engine may terminate the instance because of an unhandled exception. When the workflow instance is terminated, the workflow runtime engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated?displayProperty=nameWithType> event. The host may subscribe to this event by adding an event handler to <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated?displayProperty=nameWithType>.  
  
   
  
## Examples  
 The following code example demonstrates an event handler method that takes <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> as a parameter. The `OnWorkflowTerminated` method is called when the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> event is raised. The code uses the <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A> property get the message associated with the exception that caused the workflow to terminate.  
  
 This code example is part of the Sequential Workflow with Parameters SDK Sample from the Program.cs file. For more information, see [Workflow with Parameters Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741685(v=vs.90)).  
  
 [!code-csharp[WF_Samples#193](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#193)]
 [!code-vb[WF_Samples#193](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#193)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741685(v=vs.90)">Workflow with Parameters Sample</related>
  </Docs>
  <Members>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the exception that caused the workflow instance to be terminated.</summary>
        <value>The <see cref="T:System.Exception" /> that caused the workflow instance to be terminated.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the workflow instance is terminated because of an unhandled exception, <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A> contains the unhandled exception.  
  
 When the workflow instance is terminated by either a host call to <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A?displayProperty=nameWithType> or by a <xref:System.Workflow.ComponentModel.TerminateActivity> activity,    <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A> contains a <xref:System.Workflow.ComponentModel.WorkflowTerminatedException> that has its <xref:System.Exception.Message%2A> property set to a description of the reason for the termination. If the host terminates the workflow instance, it supplies this description in the `string` parameter to <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A?displayProperty=nameWithType>. If the workflow instance is terminated by a <xref:System.Workflow.ComponentModel.TerminateActivity>, the description is supplied by <xref:System.Workflow.ComponentModel.TerminateActivity.Error%2A?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Although in the case of a <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated?displayProperty=nameWithType> event that is not due to an unhandled exception, the workflow runtime engine encapsulates a description of the reason for the termination in the <xref:System.Exception.Message%2A> property of a <xref:System.Workflow.ComponentModel.WorkflowTerminatedException>, it does not necessarily throw this exception.  
  
   
  
## Examples  
 The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A> property to obtain information about an exception that caused a workflow to terminate. The `OnWorkflowTerminated` method takes a <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> as a parameter. This method is called when the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> event is raised. The code uses the <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A> property get the message associated with the exception that caused the workflow to terminate.  
  
 This code example is part of the Sequential Workflow with Parameters SDK Sample from the Program.cs file. For more information, see [Workflow with Parameters Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741685(v=vs.90)).  
  
 [!code-csharp[WF_Samples#193](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#193)]
 [!code-vb[WF_Samples#193](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#193)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741685(v=vs.90)">Workflow with Parameters Sample</related>
      </Docs>
    </Member>
  </Members>
</Type>

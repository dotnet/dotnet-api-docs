<Type Name="PriorityQueue&lt;TElement,TPriority&gt;+UnorderedItemsCollection+Enumerator" FullName="System.Collections.Generic.PriorityQueue&lt;TElement,TPriority&gt;+UnorderedItemsCollection+Enumerator">
  <TypeSignature Language="C#" Value="public struct PriorityQueue&lt;TElement,TPriority&gt;.UnorderedItemsCollection.Enumerator : System.Collections.Generic.IEnumerator&lt;(TElement,TPriority)&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit PriorityQueue`2/UnorderedItemsCollection/Enumerator&lt;TElement, TPriority&gt; extends System.ValueType implements class System.Collections.Generic.IEnumerator`1&lt;valuetype System.ValueTuple`2&lt;!TElement, !TPriority&gt;&gt;, class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.PriorityQueue`2.UnorderedItemsCollection.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure PriorityQueue(Of TElement, TPriority).UnorderedItemsCollection.Enumerator&#xA;Implements IEnumerator(Of ValueTuple(Of TElement, TPriority))" />
  <TypeSignature Language="F#" Value="type PriorityQueue&lt;'Element, 'Priority&gt;.UnorderedItemsCollection.Enumerator = struct&#xA;    interface IEnumerator&lt;ValueTuple&lt;'Element, 'Priority&gt;&gt;&#xA;    interface IEnumerator&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public: value class PriorityQueue&lt;TElement, TPriority&gt;::UnorderedItemsCollection::Enumerator : System::Collections::Generic::IEnumerator&lt;ValueTuple&lt;TElement, TPriority&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TElement" />
    <TypeParameter Name="TPriority" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;System.ValueTuple&lt;TElement,TPriority&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public (TElement,TPriority) Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ValueTuple`2&lt;!TElement, !TPriority&gt; Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.PriorityQueue`2.UnorderedItemsCollection.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As ValueTuple(Of TElement, TPriority)" />
      <MemberSignature Language="F#" Value="member this.Current : ValueTuple&lt;'Element, 'Priority&gt;" Usage="System.Collections.Generic.PriorityQueue&lt;'Element, 'Priority&gt;.UnorderedItemsCollection.Enumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ValueTuple&lt;TElement, TPriority&gt; Current { ValueTuple&lt;TElement, TPriority&gt; get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IEnumerator`1.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Element", "Priority" })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Element", "Priority" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;TElement,TPriority&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.PriorityQueue`2.UnorderedItemsCollection.Enumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="enumerator.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.PriorityQueue`2.UnorderedItemsCollection.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="enumerator.MoveNext " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerator&lt;System.ValueTuple&lt;TElement,TPriority&gt;&gt;.Current" ExplicitInterfaceMemberName="System.Collections.Generic.IEnumerator&lt;(TElementElement,TPriorityPriority)&gt;.Current">
      <MemberSignature Language="C#" Value="(TElement,TPriority) System.Collections.Generic.IEnumerator&lt;System.ValueTuple&lt;TElement,TPriority&gt;&gt;.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ValueTuple`2&lt;!TElement, !TPriority&gt; System.Collections.Generic.IEnumerator&lt;(TElementElement,TPriorityPriority)&gt;.Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.PriorityQueue`2.UnorderedItemsCollection.Enumerator.System#Collections#Generic#IEnumerator&lt;(TElementElement,TPriorityPriority)&gt;#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As ValueTuple(Of TElement, TPriority) Implements IEnumerator(Of ValueTuple(Of TElement, TPriority)).Current" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.IEnumerator&lt;System.ValueTuple&lt;TElement,TPriority&gt;&gt;.Current : ValueTuple&lt;'Element, 'Priority&gt;" Usage="System.Collections.Generic.IEnumerator&lt;System.ValueTuple&lt;TElement,TPriority&gt;&gt;.Current" />
      <MemberSignature Language="C++ CLI" Value="property ValueTuple&lt;TElement, TPriority&gt; System::Collections::Generic::IEnumerator&lt;System::ValueTuple&lt;TElement,TPriority&gt;&gt;::Current { ValueTuple&lt;TElement, TPriority&gt; get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IEnumerator`1.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Element", "Priority" })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Element", "Priority" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;TElement,TPriority&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.PriorityQueue`2.UnorderedItemsCollection.Enumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IEnumerator.Current : obj" Usage="System.Collections.IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IEnumerator::Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Reset">
      <MemberSignature Language="C#" Value="void IEnumerator.Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IEnumerator.Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.PriorityQueue`2.UnorderedItemsCollection.Enumerator.System#Collections#IEnumerator#Reset" />
      <MemberSignature Language="VB.NET" Value="Sub Reset () Implements IEnumerator.Reset" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerator.Reset : unit -&gt; unit&#xA;override this.System.Collections.IEnumerator.Reset : unit -&gt; unit" Usage="enumerator.System.Collections.IEnumerator.Reset " />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IEnumerator.Reset() = System::Collections::IEnumerator::Reset;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

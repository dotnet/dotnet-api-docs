<Type Name="ExitEventArgs" FullName="System.Windows.ExitEventArgs">
  <TypeSignature Language="C#" Value="public class ExitEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExitEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ExitEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ExitEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExitEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ExitEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Event arguments for the <see cref="E:System.Windows.Application.Exit" /> event.</summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Windows.ExitEventHandler" />
  </Docs>
  <Members>
    <Member MemberName="ApplicationExitCode">
      <MemberSignature Language="C#" Value="public int ApplicationExitCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ApplicationExitCode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ExitEventArgs.ApplicationExitCode" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationExitCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ApplicationExitCode { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationExitCode : int with get, set" Usage="System.Windows.ExitEventArgs.ApplicationExitCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the exit code that an application returns to the operating system when the application exits.</summary>
        <value>The exit code that an application returns to the operating system when the application exits.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 An application typically returns an exit code to the operating system to indicate whether an application exited successfully or not. An application exit code value of **0** (the default) is commonly used to indicate success. However, you are free to return exit code values that are appropriate to your application.  
  
 You can specify an exit code by handling the <xref:System.Windows.Application.Exit> event and setting <xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A> with an appropriate value.  
  
> [!NOTE]
>  You can also specify an exit code by calling <xref:System.Windows.Application.Shutdown%2A> method. If you do, the value of <xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A> is the value of the exit code that you pass to <xref:System.Windows.Application.Shutdown%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="MicrosoftExtensionsAIResponsesExtensions" FullName="OpenAI.Responses.MicrosoftExtensionsAIResponsesExtensions">
  <TypeSignature Language="C#" Value="public static class MicrosoftExtensionsAIResponsesExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MicrosoftExtensionsAIResponsesExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:OpenAI.Responses.MicrosoftExtensionsAIResponsesExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module MicrosoftExtensionsAIResponsesExtensions" />
  <TypeSignature Language="F#" Value="type MicrosoftExtensionsAIResponsesExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class MicrosoftExtensionsAIResponsesExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.OpenAI</AssemblyName>
    <AssemblyVersion>9.9.0.0</AssemblyVersion>
    <AssemblyVersion>9.10.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides extension methods for working with content associated with OpenAI.Responses.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static void Add (this System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.AITool&gt; tools, OpenAI.Responses.ResponseTool tool);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Add(class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.AITool&gt; tools, class OpenAI.Responses.ResponseTool tool) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenAI.Responses.MicrosoftExtensionsAIResponsesExtensions.Add(System.Collections.Generic.IList{Microsoft.Extensions.AI.AITool},OpenAI.Responses.ResponseTool)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Add (tools As IList(Of AITool), tool As ResponseTool)" />
      <MemberSignature Language="F#" Value="static member Add : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.AITool&gt; * OpenAI.Responses.ResponseTool -&gt; unit" Usage="OpenAI.Responses.MicrosoftExtensionsAIResponsesExtensions.Add (tools, tool)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Add(System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::AITool ^&gt; ^ tools, OpenAI::Responses::ResponseTool ^ tool);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.OpenAI</AssemblyName>
        <AssemblyVersion>9.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tools" Type="System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.AITool&gt;" RefType="this" />
        <Parameter Name="tool" Type="OpenAI.Responses.ResponseTool" />
      </Parameters>
      <Docs>
        <param name="tools">The list of <see cref="T:Microsoft.Extensions.AI.AITool" />s to which the provided tool should be added.</param>
        <param name="tool">The <see cref="T:OpenAI.Responses.ResponseTool" /> to add.</param>
        <summary>Adds the <see cref="T:OpenAI.Responses.ResponseTool" /> to the list of <see cref="T:Microsoft.Extensions.AI.AITool" />s.</summary>
        <remarks>
          <see cref="T:OpenAI.Responses.ResponseTool" /> does not derive from <see cref="T:Microsoft.Extensions.AI.AITool" />, so it cannot be added directly to a list of <see cref="T:Microsoft.Extensions.AI.AITool" />s.
            Instead, this method wraps the provided <see cref="T:OpenAI.Responses.ResponseTool" /> in an <see cref="T:Microsoft.Extensions.AI.AITool" /> and adds that to the list.
            The <see cref="T:Microsoft.Extensions.AI.IChatClient" /> returned by <see cref="M:Microsoft.Extensions.AI.OpenAIClientExtensions.AsIChatClient(OpenAI.Responses.OpenAIResponseClient)" /> will
            be able to unwrap the <see cref="T:OpenAI.Responses.ResponseTool" /> when it processes the list of tools and use the provided <paramref name="tool" /> as-is.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsAITool">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.AI.AITool AsAITool (this OpenAI.Responses.ResponseTool tool);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.AI.AITool AsAITool(class OpenAI.Responses.ResponseTool tool) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenAI.Responses.MicrosoftExtensionsAIResponsesExtensions.AsAITool(OpenAI.Responses.ResponseTool)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsAITool (tool As ResponseTool) As AITool" />
      <MemberSignature Language="F#" Value="static member AsAITool : OpenAI.Responses.ResponseTool -&gt; Microsoft.Extensions.AI.AITool" Usage="OpenAI.Responses.MicrosoftExtensionsAIResponsesExtensions.AsAITool tool" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::AI::AITool ^ AsAITool(OpenAI::Responses::ResponseTool ^ tool);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.OpenAI</AssemblyName>
        <AssemblyVersion>9.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.AITool</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tool" Type="OpenAI.Responses.ResponseTool" RefType="this" />
      </Parameters>
      <Docs>
        <param name="tool">The tool to wrap as an <see cref="T:Microsoft.Extensions.AI.AITool" />.</param>
        <summary>Creates an <see cref="T:Microsoft.Extensions.AI.AITool" /> to represent a raw <see cref="T:OpenAI.Responses.ResponseTool" />.</summary>
        <returns>The <paramref name="tool" /> wrapped as an <see cref="T:Microsoft.Extensions.AI.AITool" />.</returns>
        <remarks>
          <para>
            The returned tool is only suitable for use with the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> returned by
            <see cref="M:Microsoft.Extensions.AI.OpenAIClientExtensions.AsIChatClient(OpenAI.Responses.OpenAIResponseClient)" /> (or <see cref="T:Microsoft.Extensions.AI.IChatClient" />s that delegate
            to such an instance). It is likely to be ignored by any other <see cref="T:Microsoft.Extensions.AI.IChatClient" /> implementation.
            </para>
          <para>
            When a tool has a corresponding <see cref="T:Microsoft.Extensions.AI.AITool" />-derived type already defined in Microsoft.Extensions.AI,
            such as <see cref="T:Microsoft.Extensions.AI.AIFunction" />, <see cref="T:Microsoft.Extensions.AI.HostedWebSearchTool" />, <see cref="T:Microsoft.Extensions.AI.HostedMcpServerTool" />, or
            <see cref="T:Microsoft.Extensions.AI.HostedFileSearchTool" />, those types should be preferred instead of this method, as they are more portable,
            capable of being respected by any <see cref="T:Microsoft.Extensions.AI.IChatClient" /> implementation. This method does not attempt to
            map the supplied <see cref="T:OpenAI.Responses.ResponseTool" /> to any of those types, it simply wraps it as-is:
            the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> returned by <see cref="M:Microsoft.Extensions.AI.OpenAIClientExtensions.AsIChatClient(OpenAI.Responses.OpenAIResponseClient)" /> will
            be able to unwrap the <see cref="T:OpenAI.Responses.ResponseTool" /> when it processes the list of tools.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsChatMessages">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt; AsChatMessages (this System.Collections.Generic.IEnumerable&lt;OpenAI.Responses.ResponseItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; AsChatMessages(class System.Collections.Generic.IEnumerable`1&lt;class OpenAI.Responses.ResponseItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenAI.Responses.MicrosoftExtensionsAIResponsesExtensions.AsChatMessages(System.Collections.Generic.IEnumerable{OpenAI.Responses.ResponseItem})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsChatMessages (items As IEnumerable(Of ResponseItem)) As IEnumerable(Of ChatMessage)" />
      <MemberSignature Language="F#" Value="static member AsChatMessages : seq&lt;OpenAI.Responses.ResponseItem&gt; -&gt; seq&lt;Microsoft.Extensions.AI.ChatMessage&gt;" Usage="OpenAI.Responses.MicrosoftExtensionsAIResponsesExtensions.AsChatMessages items" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ AsChatMessages(System::Collections::Generic::IEnumerable&lt;OpenAI::Responses::ResponseItem ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.OpenAI</AssemblyName>
        <AssemblyVersion>9.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;OpenAI.Responses.ResponseItem&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="items">The input messages to convert.</param>
        <summary>Creates a sequence of <see cref="T:Microsoft.Extensions.AI.ChatMessage" /> instances from the specified input items.</summary>
        <returns>A sequence of <see cref="T:Microsoft.Extensions.AI.ChatMessage" /> instances.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="items" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsChatResponse">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.AI.ChatResponse AsChatResponse (this OpenAI.Responses.OpenAIResponse response, OpenAI.Responses.ResponseCreationOptions? options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.AI.ChatResponse AsChatResponse(class OpenAI.Responses.OpenAIResponse response, class OpenAI.Responses.ResponseCreationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenAI.Responses.MicrosoftExtensionsAIResponsesExtensions.AsChatResponse(OpenAI.Responses.OpenAIResponse,OpenAI.Responses.ResponseCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsChatResponse (response As OpenAIResponse, Optional options As ResponseCreationOptions = Nothing) As ChatResponse" />
      <MemberSignature Language="F#" Value="static member AsChatResponse : OpenAI.Responses.OpenAIResponse * OpenAI.Responses.ResponseCreationOptions -&gt; Microsoft.Extensions.AI.ChatResponse" Usage="OpenAI.Responses.MicrosoftExtensionsAIResponsesExtensions.AsChatResponse (response, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.OpenAI</AssemblyName>
        <AssemblyVersion>9.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.ChatResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="OpenAI.Responses.OpenAIResponse" RefType="this" />
        <Parameter Name="options" Type="OpenAI.Responses.ResponseCreationOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="response">The <see cref="T:OpenAI.Responses.OpenAIResponse" /> to convert to a <see cref="T:Microsoft.Extensions.AI.ChatResponse" />.</param>
        <param name="options">The options employed in the creation of the response.</param>
        <summary>Creates a Microsoft.Extensions.AI <see cref="T:Microsoft.Extensions.AI.ChatResponse" /> from an <see cref="T:OpenAI.Responses.OpenAIResponse" />.</summary>
        <returns>A converted <see cref="T:Microsoft.Extensions.AI.ChatResponse" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="response" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsChatResponseUpdatesAsync">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt; AsChatResponseUpdatesAsync (this System.Collections.Generic.IAsyncEnumerable&lt;OpenAI.Responses.StreamingResponseUpdate&gt; responseUpdates, OpenAI.Responses.ResponseCreationOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IAsyncEnumerable`1&lt;class Microsoft.Extensions.AI.ChatResponseUpdate&gt; AsChatResponseUpdatesAsync(class System.Collections.Generic.IAsyncEnumerable`1&lt;class OpenAI.Responses.StreamingResponseUpdate&gt; responseUpdates, class OpenAI.Responses.ResponseCreationOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenAI.Responses.MicrosoftExtensionsAIResponsesExtensions.AsChatResponseUpdatesAsync(System.Collections.Generic.IAsyncEnumerable{OpenAI.Responses.StreamingResponseUpdate},OpenAI.Responses.ResponseCreationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsChatResponseUpdatesAsync (responseUpdates As IAsyncEnumerable(Of StreamingResponseUpdate), Optional options As ResponseCreationOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of ChatResponseUpdate)" />
      <MemberSignature Language="F#" Value="static member AsChatResponseUpdatesAsync : System.Collections.Generic.IAsyncEnumerable&lt;OpenAI.Responses.StreamingResponseUpdate&gt; * OpenAI.Responses.ResponseCreationOptions * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt;" Usage="OpenAI.Responses.MicrosoftExtensionsAIResponsesExtensions.AsChatResponseUpdatesAsync (responseUpdates, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.OpenAI</AssemblyName>
        <AssemblyVersion>9.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseUpdates" Type="System.Collections.Generic.IAsyncEnumerable&lt;OpenAI.Responses.StreamingResponseUpdate&gt;" RefType="this" />
        <Parameter Name="options" Type="OpenAI.Responses.ResponseCreationOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="responseUpdates">The update instances.</param>
        <param name="options">The options employed in the creation of the response.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>
            Creates a sequence of Microsoft.Extensions.AI <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> instances from the specified
            sequence of OpenAI <see cref="T:OpenAI.Responses.StreamingResponseUpdate" /> instances.
            </summary>
        <returns>A sequence of converted <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> instances.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="responseUpdates" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsOpenAIResponse">
      <MemberSignature Language="C#" Value="public static OpenAI.Responses.OpenAIResponse AsOpenAIResponse (this Microsoft.Extensions.AI.ChatResponse response, Microsoft.Extensions.AI.ChatOptions? options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class OpenAI.Responses.OpenAIResponse AsOpenAIResponse(class Microsoft.Extensions.AI.ChatResponse response, class Microsoft.Extensions.AI.ChatOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenAI.Responses.MicrosoftExtensionsAIResponsesExtensions.AsOpenAIResponse(Microsoft.Extensions.AI.ChatResponse,Microsoft.Extensions.AI.ChatOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsOpenAIResponse (response As ChatResponse, Optional options As ChatOptions = Nothing) As OpenAIResponse" />
      <MemberSignature Language="F#" Value="static member AsOpenAIResponse : Microsoft.Extensions.AI.ChatResponse * Microsoft.Extensions.AI.ChatOptions -&gt; OpenAI.Responses.OpenAIResponse" Usage="OpenAI.Responses.MicrosoftExtensionsAIResponsesExtensions.AsOpenAIResponse (response, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.OpenAI</AssemblyName>
        <AssemblyVersion>9.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenAI.Responses.OpenAIResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="Microsoft.Extensions.AI.ChatResponse" RefType="this" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.ChatOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="response">The response to convert.</param>
        <param name="options">The options employed in the creation of the response.</param>
        <summary>Creates an OpenAI <see cref="T:OpenAI.Responses.OpenAIResponse" /> from a <see cref="T:Microsoft.Extensions.AI.ChatResponse" />.</summary>
        <returns>The created <see cref="T:OpenAI.Responses.OpenAIResponse" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsOpenAIResponseItems">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;OpenAI.Responses.ResponseItem&gt; AsOpenAIResponseItems (this System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt; messages, Microsoft.Extensions.AI.ChatOptions? options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class OpenAI.Responses.ResponseItem&gt; AsOpenAIResponseItems(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; messages, class Microsoft.Extensions.AI.ChatOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenAI.Responses.MicrosoftExtensionsAIResponsesExtensions.AsOpenAIResponseItems(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsOpenAIResponseItems (messages As IEnumerable(Of ChatMessage), Optional options As ChatOptions = Nothing) As IEnumerable(Of ResponseItem)" />
      <MemberSignature Language="F#" Value="static member AsOpenAIResponseItems : seq&lt;Microsoft.Extensions.AI.ChatMessage&gt; * Microsoft.Extensions.AI.ChatOptions -&gt; seq&lt;OpenAI.Responses.ResponseItem&gt;" Usage="OpenAI.Responses.MicrosoftExtensionsAIResponsesExtensions.AsOpenAIResponseItems (messages, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.OpenAI</AssemblyName>
        <AssemblyVersion>9.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;OpenAI.Responses.ResponseItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messages" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt;" RefType="this" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.ChatOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="messages">The input messages to convert.</param>
        <param name="options">The options employed while processing <paramref name="messages" />.</param>
        <summary>Creates a sequence of OpenAI <see cref="T:OpenAI.Responses.ResponseItem" /> instances from the specified input messages.</summary>
        <returns>A sequence of OpenAI response items.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messages" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsOpenAIResponseTextFormat">
      <MemberSignature Language="C#" Value="public static OpenAI.Responses.ResponseTextFormat? AsOpenAIResponseTextFormat (this Microsoft.Extensions.AI.ChatResponseFormat? format, Microsoft.Extensions.AI.ChatOptions? options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class OpenAI.Responses.ResponseTextFormat AsOpenAIResponseTextFormat(class Microsoft.Extensions.AI.ChatResponseFormat format, class Microsoft.Extensions.AI.ChatOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenAI.Responses.MicrosoftExtensionsAIResponsesExtensions.AsOpenAIResponseTextFormat(Microsoft.Extensions.AI.ChatResponseFormat,Microsoft.Extensions.AI.ChatOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsOpenAIResponseTextFormat (format As ChatResponseFormat, Optional options As ChatOptions = Nothing) As ResponseTextFormat" />
      <MemberSignature Language="F#" Value="static member AsOpenAIResponseTextFormat : Microsoft.Extensions.AI.ChatResponseFormat * Microsoft.Extensions.AI.ChatOptions -&gt; OpenAI.Responses.ResponseTextFormat" Usage="OpenAI.Responses.MicrosoftExtensionsAIResponsesExtensions.AsOpenAIResponseTextFormat (format, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.OpenAI</AssemblyName>
        <AssemblyVersion>9.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenAI.Responses.ResponseTextFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="Microsoft.Extensions.AI.ChatResponseFormat" RefType="this" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.ChatOptions" />
      </Parameters>
      <Docs>
        <param name="format">The format.</param>
        <param name="options">The options to use when interpreting the format.</param>
        <summary>
            Creates an OpenAI <see cref="T:OpenAI.Responses.ResponseTextFormat" /> from a <see cref="T:Microsoft.Extensions.AI.ChatResponseFormat" />.
            </summary>
        <returns>The converted OpenAI <see cref="T:OpenAI.Responses.ResponseTextFormat" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsOpenAIResponseTool">
      <MemberSignature Language="C#" Value="public static OpenAI.Responses.FunctionTool AsOpenAIResponseTool (this Microsoft.Extensions.AI.AIFunctionDeclaration function);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class OpenAI.Responses.FunctionTool AsOpenAIResponseTool(class Microsoft.Extensions.AI.AIFunctionDeclaration function) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenAI.Responses.MicrosoftExtensionsAIResponsesExtensions.AsOpenAIResponseTool(Microsoft.Extensions.AI.AIFunctionDeclaration)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsOpenAIResponseTool (function As AIFunctionDeclaration) As FunctionTool" />
      <MemberSignature Language="F#" Value="static member AsOpenAIResponseTool : Microsoft.Extensions.AI.AIFunctionDeclaration -&gt; OpenAI.Responses.FunctionTool" Usage="OpenAI.Responses.MicrosoftExtensionsAIResponsesExtensions.AsOpenAIResponseTool function" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static OpenAI::Responses::FunctionTool ^ AsOpenAIResponseTool(Microsoft::Extensions::AI::AIFunctionDeclaration ^ function);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.OpenAI</AssemblyName>
        <AssemblyVersion>9.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenAI.Responses.FunctionTool</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="Microsoft.Extensions.AI.AIFunctionDeclaration" RefType="this" />
      </Parameters>
      <Docs>
        <param name="function">The function to convert.</param>
        <summary>Creates an OpenAI <see cref="T:OpenAI.Responses.ResponseTool" /> from an <see cref="T:Microsoft.Extensions.AI.AIFunctionDeclaration" />.</summary>
        <returns>An OpenAI <see cref="T:OpenAI.Responses.ResponseTool" /> representing <paramref name="function" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="function" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="LogBufferingFilterRule" FullName="Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule">
  <TypeSignature Language="C#" Value="public class LogBufferingFilterRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LogBufferingFilterRule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule" />
  <TypeSignature Language="VB.NET" Value="Public Class LogBufferingFilterRule" />
  <TypeSignature Language="F#" Value="type LogBufferingFilterRule = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogBufferingFilterRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
    <AssemblyVersion>9.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0003", UrlFormat="https://aka.ms/dotnet-extensions-warnings/{0}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0003", UrlFormat="https://aka.ms/dotnet-extensions-warnings/{0}")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Defines a rule used to filter log messages for purposes of further buffering.
            </summary>
    <remarks>
            If a log entry matches a rule, it will be buffered. Consequently, it will later be emitted when the buffer is flushed.
            If a log entry does not match any rule, it will be emitted normally.
            If the buffer size limit is reached, the oldest buffered log entries will be dropped (not emitted!) to make room for new ones.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogBufferingFilterRule (string? categoryName = default, Microsoft.Extensions.Logging.LogLevel? logLevel = default, int? eventId = default, string? eventName = default, System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.KeyValuePair&lt;string,object?&gt;&gt;? attributes = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, valuetype System.Nullable`1&lt;valuetype Microsoft.Extensions.Logging.LogLevel&gt; logLevel, valuetype System.Nullable`1&lt;int32&gt; eventId, string eventName, class System.Collections.Generic.IReadOnlyList`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule.#ctor(System.String,System.Nullable{Microsoft.Extensions.Logging.LogLevel},System.Nullable{System.Int32},System.String,System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional categoryName As String = Nothing, Optional logLevel As Nullable(Of LogLevel) = Nothing, Optional eventId As Nullable(Of Integer) = Nothing, Optional eventName As String = Nothing, Optional attributes As IReadOnlyList(Of KeyValuePair(Of String, Object)) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule : string * Nullable&lt;Microsoft.Extensions.Logging.LogLevel&gt; * Nullable&lt;int&gt; * string * System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt; -&gt; Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule" Usage="new Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule (categoryName, logLevel, eventId, eventName, attributes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>9.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="logLevel" Type="System.Nullable&lt;Microsoft.Extensions.Logging.LogLevel&gt;" />
        <Parameter Name="eventId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="attributes" Type="System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 0, 1, 2 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 0, 1, 2 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="categoryName">The category name to use in this filter rule.</param>
        <param name="logLevel">The <see cref="P:Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule.LogLevel" /> to use in this filter rule.</param>
        <param name="eventId">The event ID to use in this filter rule.</param>
        <param name="eventName">The event name to use in this filter rule.</param>
        <param name="attributes">The log state attributes to use in this filter rule.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.KeyValuePair&lt;string,object?&gt;&gt;? Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; Attributes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As IReadOnlyList(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule.Attributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ Attributes { System::Collections::Generic::IReadOnlyList&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>9.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 0, 1, 2 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 0, 1, 2 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the log state attributes of messages where this rule applies to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public string? CategoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule.CategoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryName As String" />
      <MemberSignature Language="F#" Value="member this.CategoryName : string" Usage="Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule.CategoryName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>9.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the logger category name this rule applies to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventId">
      <MemberSignature Language="C#" Value="public int? EventId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; EventId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule.EventId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventId As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.EventId : Nullable&lt;int&gt;" Usage="Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule.EventId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; EventId { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>9.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the event ID of messages where this rule applies to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventName">
      <MemberSignature Language="C#" Value="public string? EventName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule.EventName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventName As String" />
      <MemberSignature Language="F#" Value="member this.EventName : string" Usage="Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule.EventName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EventName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>9.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the event this rule applies to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogLevel">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.LogLevel? LogLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Microsoft.Extensions.Logging.LogLevel&gt; LogLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule.LogLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogLevel As Nullable(Of LogLevel)" />
      <MemberSignature Language="F#" Value="member this.LogLevel : Nullable&lt;Microsoft.Extensions.Logging.LogLevel&gt;" Usage="Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule.LogLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;Microsoft::Extensions::Logging::LogLevel&gt; LogLevel { Nullable&lt;Microsoft::Extensions::Logging::LogLevel&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>9.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.Extensions.Logging.LogLevel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the maximum <see cref="P:Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule.LogLevel" /> of messages this rule applies to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

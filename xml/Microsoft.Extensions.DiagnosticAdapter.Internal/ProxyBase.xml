<Type Name="ProxyBase" FullName="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase">
  <TypeSignature Language="C#" Value="public abstract class ProxyBase : Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ProxyBase extends System.Object implements class Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxy" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ProxyBase&#xA;Implements IProxy" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProxyBase abstract : Microsoft::Extensions::DiagnosticAdapter::Infrastructure::IProxy" />
  <TypeSignature Language="F#" Value="type ProxyBase = class&#xA;    interface IProxy" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DiagnosticAdapter</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxy</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ProxyBase (Type wrappedType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Type wrappedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (wrappedType As Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ProxyBase(Type ^ wrappedType);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase : Type -&gt; Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase" Usage="new Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase wrappedType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DiagnosticAdapter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="wrappedType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="wrappedType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingInstanceAsObject">
      <MemberSignature Language="C#" Value="public abstract object UnderlyingInstanceAsObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UnderlyingInstanceAsObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase.UnderlyingInstanceAsObject" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UnderlyingInstanceAsObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ UnderlyingInstanceAsObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingInstanceAsObject : obj" Usage="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase.UnderlyingInstanceAsObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DiagnosticAdapter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Upwrap&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Upwrap&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T Upwrap&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase.Upwrap``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Upwrap(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; virtual T Upwrap();" />
      <MemberSignature Language="F#" Value="abstract member Upwrap : unit -&gt; 'T&#xA;override this.Upwrap : unit -&gt; 'T" Usage="proxyBase.Upwrap " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxy.Upwrap``1</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DiagnosticAdapter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrappedType">
      <MemberSignature Language="C#" Value="public readonly Type WrappedType;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly class System.Type WrappedType" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase.WrappedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly WrappedType As Type " />
      <MemberSignature Language="C++ CLI" Value="public: initonly Type ^ WrappedType;" />
      <MemberSignature Language="F#" Value="val mutable WrappedType : Type" Usage="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyBase.WrappedType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DiagnosticAdapter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

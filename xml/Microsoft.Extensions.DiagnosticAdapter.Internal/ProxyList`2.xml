<Type Name="ProxyList&lt;TSourceElement,TTargetElement&gt;" FullName="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList&lt;TSourceElement,TTargetElement&gt;">
  <TypeSignature Language="C#" Value="public class ProxyList&lt;TSourceElement,TTargetElement&gt; : System.Collections.Generic.IEnumerable&lt;TTargetElement&gt;, System.Collections.Generic.IReadOnlyCollection&lt;TTargetElement&gt;, System.Collections.Generic.IReadOnlyList&lt;TTargetElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProxyList`2&lt;TSourceElement, TTargetElement&gt; extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;!TTargetElement&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!TTargetElement&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;!TTargetElement&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList`2" />
  <TypeSignature Language="VB.NET" Value="Public Class ProxyList(Of TSourceElement, TTargetElement)&#xA;Implements IEnumerable(Of TTargetElement), IReadOnlyCollection(Of TTargetElement), IReadOnlyList(Of TTargetElement)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TSourceElement, typename TTargetElement&gt;&#xA;public ref class ProxyList : System::Collections::Generic::IEnumerable&lt;TTargetElement&gt;, System::Collections::Generic::IReadOnlyCollection&lt;TTargetElement&gt;, System::Collections::Generic::IReadOnlyList&lt;TTargetElement&gt;" />
  <TypeSignature Language="F#" Value="type ProxyList&lt;'SourceElement, 'argetElement&gt; = class&#xA;    interface IReadOnlyList&lt;'argetElement&gt;&#xA;    interface IReadOnlyCollection&lt;'argetElement&gt;&#xA;    interface seq&lt;'argetElement&gt;&#xA;    interface IEnumerable" FrameworkAlternate="dotnet-plat-ext-1.0;dotnet-plat-ext-1.1" />
  <TypeSignature Language="F#" Value="type ProxyList&lt;'SourceElement, 'argetElement&gt; = class&#xA;    interface IReadOnlyList&lt;'argetElement&gt;&#xA;    interface seq&lt;'argetElement&gt;&#xA;    interface IEnumerable&#xA;    interface IReadOnlyCollection&lt;'argetElement&gt;" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DiagnosticAdapter</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSourceElement" />
    <TypeParameter Name="TTargetElement" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TTargetElement&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;TTargetElement&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;TTargetElement&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TSourceElement">To be added.</typeparam>
    <typeparam name="TTargetElement">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProxyList (System.Collections.Generic.IList&lt;TSourceElement&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;!TSourceElement&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList`2.#ctor(System.Collections.Generic.IList{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As IList(Of TSourceElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProxyList(System::Collections::Generic::IList&lt;TSourceElement&gt; ^ source);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList&lt;'SourceElement, 'argetElement&gt; : System.Collections.Generic.IList&lt;'SourceElement&gt; -&gt; Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList&lt;'SourceElement, 'argetElement&gt;" Usage="new Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList&lt;'SourceElement, 'argetElement&gt; source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DiagnosticAdapter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IList&lt;TSourceElement&gt;" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ProxyList (System.Collections.Generic.IList&lt;TSourceElement&gt; source, Type proxyType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;!TSourceElement&gt; source, class System.Type proxyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList`2.#ctor(System.Collections.Generic.IList{`0},System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As IList(Of TSourceElement), proxyType As Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ProxyList(System::Collections::Generic::IList&lt;TSourceElement&gt; ^ source, Type ^ proxyType);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList&lt;'SourceElement, 'argetElement&gt; : System.Collections.Generic.IList&lt;'SourceElement&gt; * Type -&gt; Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList&lt;'SourceElement, 'argetElement&gt;" Usage="new Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList&lt;'SourceElement, 'argetElement&gt; (source, proxyType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DiagnosticAdapter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IList&lt;TSourceElement&gt;" />
        <Parameter Name="proxyType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="proxyType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList`2.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList&lt;'SourceElement, 'argetElement&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DiagnosticAdapter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;TTargetElement&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!TTargetElement&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList`2.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of TTargetElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;TTargetElement&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'argetElement&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'argetElement&gt;" Usage="proxyList.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DiagnosticAdapter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;TTargetElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TTargetElement this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TTargetElement Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList`2.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As TTargetElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TTargetElement default[int] { TTargetElement get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'argetElement" Usage="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList&lt;'SourceElement, 'argetElement&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DiagnosticAdapter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TTargetElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyList`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="proxyList.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DiagnosticAdapter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

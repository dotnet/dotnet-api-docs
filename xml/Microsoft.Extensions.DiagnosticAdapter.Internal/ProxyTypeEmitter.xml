<Type Name="ProxyTypeEmitter" FullName="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeEmitter">
  <TypeSignature Language="C#" Value="public static class ProxyTypeEmitter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ProxyTypeEmitter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeEmitter" />
  <TypeSignature Language="VB.NET" Value="Public Class ProxyTypeEmitter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProxyTypeEmitter abstract sealed" />
  <TypeSignature Language="F#" Value="type ProxyTypeEmitter = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DiagnosticAdapter</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetProxyType">
      <MemberSignature Language="C#" Value="public static Type GetProxyType (Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCache cache, Type targetType, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetProxyType(class Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCache cache, class System.Type targetType, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeEmitter.GetProxyType(Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCache,System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProxyType (cache As ProxyTypeCache, targetType As Type, sourceType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetProxyType(Microsoft::Extensions::DiagnosticAdapter::Internal::ProxyTypeCache ^ cache, Type ^ targetType, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="static member GetProxyType : Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCache * Type * Type -&gt; Type" Usage="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeEmitter.GetProxyType (cache, targetType, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DiagnosticAdapter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cache" Type="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCache" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="cache">To be added.</param>
        <param name="targetType">To be added.</param>
        <param name="sourceType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

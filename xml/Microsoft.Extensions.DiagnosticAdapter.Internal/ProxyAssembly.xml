<Type Name="ProxyAssembly" FullName="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyAssembly">
  <TypeSignature Language="C#" Value="public static class ProxyAssembly" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed ProxyAssembly extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyAssembly" />
  <TypeSignature Language="VB.NET" Value="Public Class ProxyAssembly" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProxyAssembly abstract sealed" />
  <TypeSignature Language="F#" Value="type ProxyAssembly = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DiagnosticAdapter</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attributes, Type baseType, Type[] interfaces);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attributes, class System.Type baseType, class System.Type[] interfaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyAssembly.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineType (name As String, attributes As TypeAttributes, baseType As Type, interfaces As Type()) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attributes, Type ^ baseType, cli::array &lt;Type ^&gt; ^ interfaces);" />
      <MemberSignature Language="F#" Value="static member DefineType : string * System.Reflection.TypeAttributes * Type * Type[] -&gt; System.Reflection.Emit.TypeBuilder" Usage="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyAssembly.DefineType (name, attributes, baseType, interfaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DiagnosticAdapter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="baseType" Type="System.Type" />
        <Parameter Name="interfaces" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="attributes">To be added.</param>
        <param name="baseType">To be added.</param>
        <param name="interfaces">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

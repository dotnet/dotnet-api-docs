<Type Name="JsonIgnoreAttribute" FullName="System.Text.Json.Serialization.JsonIgnoreAttribute">
  <TypeSignature Language="C#" Value="public sealed class JsonIgnoreAttribute : System.Text.Json.Serialization.JsonAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit JsonIgnoreAttribute extends System.Text.Json.Serialization.JsonAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.Serialization.JsonIgnoreAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JsonIgnoreAttribute&#xA;Inherits JsonAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonIgnoreAttribute sealed : System::Text::Json::Serialization::JsonAttribute" />
  <TypeSignature Language="F#" Value="type JsonIgnoreAttribute = class&#xA;    inherit JsonAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Json.Serialization.JsonAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Prevents a property from being serialized or deserialized.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

For more information, see [How to serialize and deserialize JSON](~/docs/standard/serialization/system-text-json-how-to.md#exclude-individual-properties).

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonIgnoreAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonIgnoreAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of <see cref="T:System.Text.Json.Serialization.JsonIgnoreAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public System.Text.Json.Serialization.JsonIgnoreCondition Condition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.Serialization.JsonIgnoreCondition Condition" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.JsonIgnoreAttribute.Condition" />
      <MemberSignature Language="VB.NET" Value="Public Property Condition As JsonIgnoreCondition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::Serialization::JsonIgnoreCondition Condition { System::Text::Json::Serialization::JsonIgnoreCondition get(); void set(System::Text::Json::Serialization::JsonIgnoreCondition value); };" />
      <MemberSignature Language="F#" Value="member this.Condition : System.Text.Json.Serialization.JsonIgnoreCondition with get, set" Usage="System.Text.Json.Serialization.JsonIgnoreAttribute.Condition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.JsonIgnoreCondition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

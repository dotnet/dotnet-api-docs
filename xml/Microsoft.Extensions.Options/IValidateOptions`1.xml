<Type Name="IValidateOptions&lt;TOptions&gt;" FullName="Microsoft.Extensions.Options.IValidateOptions&lt;TOptions&gt;">
  <TypeSignature Language="C#" Value="public interface IValidateOptions&lt;TOptions&gt; where TOptions : class" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IValidateOptions`1&lt;class TOptions&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Options.IValidateOptions`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IValidateOptions(Of TOptions)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TOptions&gt;&#xA; where TOptions : classpublic interface class IValidateOptions" />
  <TypeSignature Language="F#" Value="type IValidateOptions&lt;'Options (requires 'Options : null)&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TOptions">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TOptions">The options type to validate.</typeparam>
    <summary>Interface used to validate options.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Options.ValidateOptionsResult Validate (string name, TOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Options.ValidateOptionsResult Validate(string name, !TOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.IValidateOptions`1.Validate(System.String,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Validate (name As String, options As TOptions) As ValidateOptionsResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Options::ValidateOptionsResult ^ Validate(System::String ^ name, TOptions options);" />
      <MemberSignature Language="F#" Value="abstract member Validate : string * 'Options -&gt; Microsoft.Extensions.Options.ValidateOptionsResult" Usage="iValidateOptions.Validate (name, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Options.ValidateOptionsResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="options" Type="TOptions" />
      </Parameters>
      <Docs>
        <param name="name">The name of the options instance being validated.</param>
        <param name="options">The options instance.</param>
        <summary>Validates a specific named options instance (or all when name is null).</summary>
        <returns>The <see cref="T:Microsoft.Extensions.Options.ValidateOptionsResult" /> result.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="OptionsMonitor&lt;TOptions&gt;" FullName="Microsoft.Extensions.Options.OptionsMonitor&lt;TOptions&gt;">
  <TypeSignature Language="C#" Value="public class OptionsMonitor&lt;TOptions&gt; : IDisposable, Microsoft.Extensions.Options.IOptionsMonitor&lt;TOptions&gt; where TOptions : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OptionsMonitor`1&lt;class TOptions&gt; extends System.Object implements class Microsoft.Extensions.Options.IOptionsMonitor`1&lt;!TOptions&gt;, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Options.OptionsMonitor`1" />
  <TypeSignature Language="VB.NET" Value="Public Class OptionsMonitor(Of TOptions)&#xA;Implements IDisposable, IOptionsMonitor(Of TOptions)" />
  <TypeSignature Language="F#" Value="type OptionsMonitor&lt;'Options (requires 'Options : null)&gt; = class&#xA;    interface IOptionsMonitor&lt;'Options (requires 'Options : null)&gt;&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TOptions&gt;&#xA; where TOptions : classpublic ref class OptionsMonitor : IDisposable, Microsoft::Extensions::Options::IOptionsMonitor&lt;TOptions&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TOptions">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Options.IOptionsMonitor&lt;TOptions&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TOptions">Options type.</typeparam>
    <summary>
            Implementation of <see cref="T:Microsoft.Extensions.Options.IOptionsMonitor`1" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OptionsMonitor (Microsoft.Extensions.Options.IOptionsFactory&lt;TOptions&gt; factory, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.Options.IOptionsChangeTokenSource&lt;TOptions&gt;&gt; sources, Microsoft.Extensions.Options.IOptionsMonitorCache&lt;TOptions&gt; cache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Options.IOptionsFactory`1&lt;!TOptions&gt; factory, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.Options.IOptionsChangeTokenSource`1&lt;!TOptions&gt;&gt; sources, class Microsoft.Extensions.Options.IOptionsMonitorCache`1&lt;!TOptions&gt; cache) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.OptionsMonitor`1.#ctor(Microsoft.Extensions.Options.IOptionsFactory{`0},System.Collections.Generic.IEnumerable{Microsoft.Extensions.Options.IOptionsChangeTokenSource{`0}},Microsoft.Extensions.Options.IOptionsMonitorCache{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (factory As IOptionsFactory(Of TOptions), sources As IEnumerable(Of IOptionsChangeTokenSource(Of TOptions)), cache As IOptionsMonitorCache(Of TOptions))" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Options.OptionsMonitor&lt;'Options (requires 'Options : null)&gt; : Microsoft.Extensions.Options.IOptionsFactory&lt;'Options (requires 'Options : null)&gt; * seq&lt;Microsoft.Extensions.Options.IOptionsChangeTokenSource&lt;'Options&gt;&gt; * Microsoft.Extensions.Options.IOptionsMonitorCache&lt;'Options (requires 'Options : null)&gt; -&gt; Microsoft.Extensions.Options.OptionsMonitor&lt;'Options (requires 'Options : null)&gt;" Usage="new Microsoft.Extensions.Options.OptionsMonitor&lt;'Options (requires 'Options : null)&gt; (factory, sources, cache)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OptionsMonitor(Microsoft::Extensions::Options::IOptionsFactory&lt;TOptions&gt; ^ factory, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::Options::IOptionsChangeTokenSource&lt;TOptions&gt; ^&gt; ^ sources, Microsoft::Extensions::Options::IOptionsMonitorCache&lt;TOptions&gt; ^ cache);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="factory" Type="Microsoft.Extensions.Options.IOptionsFactory&lt;TOptions&gt;" />
        <Parameter Name="sources" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.Options.IOptionsChangeTokenSource&lt;TOptions&gt;&gt;" />
        <Parameter Name="cache" Type="Microsoft.Extensions.Options.IOptionsMonitorCache&lt;TOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="factory">The factory to use to create options.</param>
        <param name="sources">The sources used to listen for changes to the options instance.</param>
        <param name="cache">The cache used to store options.</param>
        <summary>
            Constructor.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentValue">
      <MemberSignature Language="C#" Value="public TOptions CurrentValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TOptions CurrentValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Options.OptionsMonitor`1.CurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentValue As TOptions" />
      <MemberSignature Language="F#" Value="member this.CurrentValue : 'Options" Usage="Microsoft.Extensions.Options.OptionsMonitor&lt;'Options (requires 'Options : null)&gt;.CurrentValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TOptions CurrentValue { TOptions get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Extensions.Options.IOptionsMonitor`1.CurrentValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The present value of the options, equivalent to <c>Get(Options.DefaultName)</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Extensions.Options.OptionsValidationException">One or more <see cref="T:Microsoft.Extensions.Options.IValidateOptions`1" /> return failed <see cref="T:Microsoft.Extensions.Options.ValidateOptionsResult" /> when validating the <typeparamref name="TOptions" /> instance been created.</exception>
        <exception cref="T:System.MissingMethodException">The <typeparamref name="TOptions" /> does not have a public parameterless constructor or <typeparamref name="TOptions" /> is <see langword="abstract" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.OptionsMonitor`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="optionsMonitor.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Removes all change registration subscriptions.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual TOptions Get (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TOptions Get(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.OptionsMonitor`1.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (name As String) As TOptions" />
      <MemberSignature Language="F#" Value="abstract member Get : string -&gt; 'Options&#xA;override this.Get : string -&gt; 'Options" Usage="optionsMonitor.Get name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TOptions Get(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Options.IOptionsMonitor`1.Get(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">The name of the <typeparamref name="TOptions" /> instance, if <see langword="null" /><see cref="F:Microsoft.Extensions.Options.Options.DefaultName" /> is used.</param>
        <summary>
            Returns a configured <typeparamref name="TOptions" /> instance with the given <paramref name="name" />.
            </summary>
        <returns>The <typeparamref name="TOptions" /> instance that matches the given <paramref name="name" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Extensions.Options.OptionsValidationException">One or more <see cref="T:Microsoft.Extensions.Options.IValidateOptions`1" /> return failed <see cref="T:Microsoft.Extensions.Options.ValidateOptionsResult" /> when validating the <typeparamref name="TOptions" /> instance been created.</exception>
        <exception cref="T:System.MissingMethodException">The <typeparamref name="TOptions" /> does not have a public parameterless constructor or <typeparamref name="TOptions" /> is <see langword="abstract" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnChange">
      <MemberSignature Language="C#" Value="public IDisposable OnChange (Action&lt;TOptions,string&gt; listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable OnChange(class System.Action`2&lt;!TOptions, string&gt; listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.OptionsMonitor`1.OnChange(System.Action{`0,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnChange (listener As Action(Of TOptions, String)) As IDisposable" />
      <MemberSignature Language="F#" Value="abstract member OnChange : Action&lt;'Options, string (requires 'Options : null)&gt; -&gt; IDisposable&#xA;override this.OnChange : Action&lt;'Options, string (requires 'Options : null)&gt; -&gt; IDisposable" Usage="optionsMonitor.OnChange listener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IDisposable ^ OnChange(Action&lt;TOptions, System::String ^&gt; ^ listener);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Options.IOptionsMonitor`1.OnChange(System.Action{`0,System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="System.Action&lt;TOptions,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="listener">The action to be invoked when <typeparamref name="TOptions" /> has changed.</param>
        <summary>
            Registers a listener to be called whenever <typeparamref name="TOptions" /> changes.
            </summary>
        <returns>An <see cref="T:System.IDisposable" /> which should be disposed to stop listening for changes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

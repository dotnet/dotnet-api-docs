<Type Name="OptionsMonitor&lt;TOptions&gt;" FullName="Microsoft.Extensions.Options.OptionsMonitor&lt;TOptions&gt;">
  <TypeSignature Language="C#" Value="public class OptionsMonitor&lt;TOptions&gt; : Microsoft.Extensions.Options.IOptionsMonitor&lt;TOptions&gt; where TOptions : class, new()" FrameworkAlternate="dotnet-plat-ext-1.1;dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OptionsMonitor`1&lt;class .ctor TOptions&gt; extends System.Object implements class Microsoft.Extensions.Options.IOptionsMonitor`1&lt;!TOptions&gt;" FrameworkAlternate="dotnet-plat-ext-1.1;dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Options.OptionsMonitor`1" />
  <TypeSignature Language="VB.NET" Value="Public Class OptionsMonitor(Of TOptions)&#xA;Implements IOptionsMonitor(Of TOptions)" FrameworkAlternate="dotnet-plat-ext-1.1;dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TOptions&gt;&#xA; where TOptions : class, gcnew()public ref class OptionsMonitor : Microsoft::Extensions::Options::IOptionsMonitor&lt;TOptions&gt;" FrameworkAlternate="dotnet-plat-ext-1.1;dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
  <TypeSignature Language="F#" Value="type OptionsMonitor&lt;'Options (requires 'Options : null and 'Options : (new : unit -&gt; 'Options))&gt; = class&#xA;    interface IOptionsMonitor&lt;'Options (requires 'Options : null and 'Options : (new : unit -&gt; 'Options))&gt;" FrameworkAlternate="dotnet-plat-ext-1.1;dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
  <TypeSignature Language="C#" Value="public class OptionsMonitor&lt;TOptions&gt; : IDisposable, Microsoft.Extensions.Options.IOptionsMonitor&lt;TOptions&gt; where TOptions : class, new()" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OptionsMonitor`1&lt;class .ctor TOptions&gt; extends System.Object implements class Microsoft.Extensions.Options.IOptionsMonitor`1&lt;!TOptions&gt;, class System.IDisposable" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
  <TypeSignature Language="VB.NET" Value="Public Class OptionsMonitor(Of TOptions)&#xA;Implements IDisposable, IOptionsMonitor(Of TOptions)" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TOptions&gt;&#xA; where TOptions : class, gcnew()public ref class OptionsMonitor : IDisposable, Microsoft::Extensions::Options::IOptionsMonitor&lt;TOptions&gt;" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
  <TypeSignature Language="F#" Value="type OptionsMonitor&lt;'Options (requires 'Options : null and 'Options : (new : unit -&gt; 'Options))&gt; = class&#xA;    interface IOptionsMonitor&lt;'Options (requires 'Options : null and 'Options : (new : unit -&gt; 'Options))&gt;&#xA;    interface IDisposable" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TOptions">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Options.IOptionsMonitor&lt;TOptions&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TOptions">Options type.</typeparam>
    <summary>Implementation of <see cref="T:Microsoft.Extensions.Options.IOptionsMonitor`1" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OptionsMonitor (System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.Options.IConfigureOptions&lt;TOptions&gt;&gt; setups, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.Options.IOptionsChangeTokenSource&lt;TOptions&gt;&gt; sources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.Options.IConfigureOptions`1&lt;!TOptions&gt;&gt; setups, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.Options.IOptionsChangeTokenSource`1&lt;!TOptions&gt;&gt; sources) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.OptionsMonitor`1.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Options.IConfigureOptions{`0}},System.Collections.Generic.IEnumerable{Microsoft.Extensions.Options.IOptionsChangeTokenSource{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (setups As IEnumerable(Of IConfigureOptions(Of TOptions)), sources As IEnumerable(Of IOptionsChangeTokenSource(Of TOptions)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OptionsMonitor(System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::Options::IConfigureOptions&lt;TOptions&gt; ^&gt; ^ setups, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::Options::IOptionsChangeTokenSource&lt;TOptions&gt; ^&gt; ^ sources);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Options.OptionsMonitor&lt;'Options (requires 'Options : null and 'Options : (new : unit -&gt; 'Options))&gt; : seq&lt;Microsoft.Extensions.Options.IConfigureOptions&lt;'Options&gt;&gt; * seq&lt;Microsoft.Extensions.Options.IOptionsChangeTokenSource&lt;'Options&gt;&gt; -&gt; Microsoft.Extensions.Options.OptionsMonitor&lt;'Options (requires 'Options : null and 'Options : (new : unit -&gt; 'Options))&gt;" Usage="new Microsoft.Extensions.Options.OptionsMonitor&lt;'Options (requires 'Options : null and 'Options : (new : unit -&gt; 'Options))&gt; (setups, sources)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="setups" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.Options.IConfigureOptions&lt;TOptions&gt;&gt;" Index="0" FrameworkAlternate="dotnet-plat-ext-1.1" />
        <Parameter Name="sources" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.Options.IOptionsChangeTokenSource&lt;TOptions&gt;&gt;" Index="1" FrameworkAlternate="dotnet-plat-ext-1.1" />
      </Parameters>
      <Docs>
        <param name="setups">The configuration actions to run on an options instance.</param>
        <param name="sources">The sources used to listen for changes to the options instance.</param>
        <summary>Constructor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OptionsMonitor (Microsoft.Extensions.Options.IOptionsFactory&lt;TOptions&gt; factory, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.Options.IOptionsChangeTokenSource&lt;TOptions&gt;&gt; sources, Microsoft.Extensions.Options.IOptionsMonitorCache&lt;TOptions&gt; cache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Options.IOptionsFactory`1&lt;!TOptions&gt; factory, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.Options.IOptionsChangeTokenSource`1&lt;!TOptions&gt;&gt; sources, class Microsoft.Extensions.Options.IOptionsMonitorCache`1&lt;!TOptions&gt; cache) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.OptionsMonitor`1.#ctor(Microsoft.Extensions.Options.IOptionsFactory{`0},System.Collections.Generic.IEnumerable{Microsoft.Extensions.Options.IOptionsChangeTokenSource{`0}},Microsoft.Extensions.Options.IOptionsMonitorCache{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (factory As IOptionsFactory(Of TOptions), sources As IEnumerable(Of IOptionsChangeTokenSource(Of TOptions)), cache As IOptionsMonitorCache(Of TOptions))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OptionsMonitor(Microsoft::Extensions::Options::IOptionsFactory&lt;TOptions&gt; ^ factory, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::Options::IOptionsChangeTokenSource&lt;TOptions&gt; ^&gt; ^ sources, Microsoft::Extensions::Options::IOptionsMonitorCache&lt;TOptions&gt; ^ cache);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Options.OptionsMonitor&lt;'Options (requires 'Options : null and 'Options : (new : unit -&gt; 'Options))&gt; : Microsoft.Extensions.Options.IOptionsFactory&lt;'Options (requires 'Options : null and 'Options : (new : unit -&gt; 'Options))&gt; * seq&lt;Microsoft.Extensions.Options.IOptionsChangeTokenSource&lt;'Options&gt;&gt; * Microsoft.Extensions.Options.IOptionsMonitorCache&lt;'Options (requires 'Options : null and 'Options : (new : unit -&gt; 'Options))&gt; -&gt; Microsoft.Extensions.Options.OptionsMonitor&lt;'Options (requires 'Options : null and 'Options : (new : unit -&gt; 'Options))&gt;" Usage="new Microsoft.Extensions.Options.OptionsMonitor&lt;'Options (requires 'Options : null and 'Options : (new : unit -&gt; 'Options))&gt; (factory, sources, cache)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="factory" Type="Microsoft.Extensions.Options.IOptionsFactory&lt;TOptions&gt;" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="sources" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.Options.IOptionsChangeTokenSource&lt;TOptions&gt;&gt;" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="cache" Type="Microsoft.Extensions.Options.IOptionsMonitorCache&lt;TOptions&gt;" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      </Parameters>
      <Docs>
        <param name="factory">The factory to use to create options.</param>
        <param name="sources">The sources used to listen for changes to the options instance.</param>
        <param name="cache">The cache used to store options.</param>
        <summary>Constructor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentValue">
      <MemberSignature Language="C#" Value="public TOptions CurrentValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TOptions CurrentValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Options.OptionsMonitor`1.CurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentValue As TOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TOptions CurrentValue { TOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentValue : 'Options" Usage="Microsoft.Extensions.Options.OptionsMonitor&lt;'Options (requires 'Options : null and 'Options : (new : unit -&gt; 'Options))&gt;.CurrentValue" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Extensions.Options.IOptionsMonitor`1.CurrentValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The present value of the options.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.OptionsMonitor`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="optionsMonitor.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all change registration subscriptions.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual TOptions Get (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TOptions Get(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.OptionsMonitor`1.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (name As String) As TOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TOptions Get(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member Get : string -&gt; 'Options&#xA;override this.Get : string -&gt; 'Options" Usage="optionsMonitor.Get name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Options.IOptionsMonitor`1.Get(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>Returns a configured <typeparamref name="TOptions" /> instance with the given <paramref name="name" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChange">
      <MemberSignature Language="C#" Value="public IDisposable OnChange (Action&lt;TOptions,string&gt; listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable OnChange(class System.Action`2&lt;!TOptions, string&gt; listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.OptionsMonitor`1.OnChange(System.Action{`0,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnChange (listener As Action(Of TOptions, String)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IDisposable ^ OnChange(Action&lt;TOptions, System::String ^&gt; ^ listener);" />
      <MemberSignature Language="F#" Value="abstract member OnChange : Action&lt;'Options, string (requires 'Options : null and 'Options : (new : unit -&gt; 'Options))&gt; -&gt; IDisposable&#xA;override this.OnChange : Action&lt;'Options, string (requires 'Options : null and 'Options : (new : unit -&gt; 'Options))&gt; -&gt; IDisposable" Usage="optionsMonitor.OnChange listener" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Options.IOptionsMonitor`1.OnChange(System.Action{`0,System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="System.Action&lt;TOptions,System.String&gt;" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      </Parameters>
      <Docs>
        <param name="listener">The action to be invoked when <typeparamref name="TOptions" /> has changed.</param>
        <summary>Registers a listener to be called whenever <typeparamref name="TOptions" /> changes.</summary>
        <returns>An <see cref="T:System.IDisposable" /> which should be disposed to stop listening for changes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChange">
      <MemberSignature Language="C#" Value="public IDisposable OnChange (Action&lt;TOptions&gt; listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable OnChange(class System.Action`1&lt;!TOptions&gt; listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.OptionsMonitor`1.OnChange(System.Action{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnChange (listener As Action(Of TOptions)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IDisposable ^ OnChange(Action&lt;TOptions&gt; ^ listener);" />
      <MemberSignature Language="F#" Value="abstract member OnChange : Action&lt;'Options (requires 'Options : null and 'Options : (new : unit -&gt; 'Options))&gt; -&gt; IDisposable&#xA;override this.OnChange : Action&lt;'Options (requires 'Options : null and 'Options : (new : unit -&gt; 'Options))&gt; -&gt; IDisposable" Usage="optionsMonitor.OnChange listener" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Options.IOptionsMonitor`1.OnChange(System.Action{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="System.Action&lt;TOptions&gt;" Index="0" FrameworkAlternate="dotnet-plat-ext-1.1" />
      </Parameters>
      <Docs>
        <param name="listener">The action to be invoked when TOptions has changed.</param>
        <summary>Registers a listener to be called whenever TOptions changes.</summary>
        <returns>An IDisposable which should be disposed to stop listening for changes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

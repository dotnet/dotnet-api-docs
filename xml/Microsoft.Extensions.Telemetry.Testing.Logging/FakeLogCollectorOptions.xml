<Type Name="FakeLogCollectorOptions" FullName="Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogCollectorOptions">
  <TypeSignature Language="C#" Value="public class FakeLogCollectorOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FakeLogCollectorOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogCollectorOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class FakeLogCollectorOptions" />
  <TypeSignature Language="F#" Value="type FakeLogCollectorOptions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class FakeLogCollectorOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Options for the fake logger.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FakeLogCollectorOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogCollectorOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FakeLogCollectorOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectRecordsForDisabledLogLevels">
      <MemberSignature Language="C#" Value="public bool CollectRecordsForDisabledLogLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CollectRecordsForDisabledLogLevels" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogCollectorOptions.CollectRecordsForDisabledLogLevels" />
      <MemberSignature Language="VB.NET" Value="Public Property CollectRecordsForDisabledLogLevels As Boolean" />
      <MemberSignature Language="F#" Value="member this.CollectRecordsForDisabledLogLevels : bool with get, set" Usage="Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogCollectorOptions.CollectRecordsForDisabledLogLevels" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CollectRecordsForDisabledLogLevels { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to collect records that are logged when the associated log level is currently disabled.
            </summary>
        <value>To be added.</value>
        <remarks>
            Defaults to <see langword="true" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilteredCategories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ISet&lt;string&gt; FilteredCategories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;string&gt; FilteredCategories" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogCollectorOptions.FilteredCategories" />
      <MemberSignature Language="VB.NET" Value="Public Property FilteredCategories As ISet(Of String)" />
      <MemberSignature Language="F#" Value="member this.FilteredCategories : System.Collections.Generic.ISet&lt;string&gt; with get, set" Usage="Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogCollectorOptions.FilteredCategories" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ISet&lt;System::String ^&gt; ^ FilteredCategories { System::Collections::Generic::ISet&lt;System::String ^&gt; ^ get(); void set(System::Collections::Generic::ISet&lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the logger categories for whom records are collected.
            </summary>
        <value>To be added.</value>
        <remarks>
            Defaults to an empty set, which doesn't filter any records.
            If not empty, only records coming from loggers in these categories will be collected by the fake logger.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilteredLevels">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ISet&lt;Microsoft.Extensions.Logging.LogLevel&gt; FilteredLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;valuetype Microsoft.Extensions.Logging.LogLevel&gt; FilteredLevels" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogCollectorOptions.FilteredLevels" />
      <MemberSignature Language="VB.NET" Value="Public Property FilteredLevels As ISet(Of LogLevel)" />
      <MemberSignature Language="F#" Value="member this.FilteredLevels : System.Collections.Generic.ISet&lt;Microsoft.Extensions.Logging.LogLevel&gt; with get, set" Usage="Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogCollectorOptions.FilteredLevels" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ISet&lt;Microsoft::Extensions::Logging::LogLevel&gt; ^ FilteredLevels { System::Collections::Generic::ISet&lt;Microsoft::Extensions::Logging::LogLevel&gt; ^ get(); void set(System::Collections::Generic::ISet&lt;Microsoft::Extensions::Logging::LogLevel&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;Microsoft.Extensions.Logging.LogLevel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the logging levels for whom records are collected.
            </summary>
        <value>To be added.</value>
        <remarks>
            Defaults to an empty set, which doesn't filter any records.
            If not empty, only records with the given level will be collected by the fake logger.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputFormatter">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogRecord,string&gt; OutputFormatter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogRecord, string&gt; OutputFormatter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogCollectorOptions.OutputFormatter" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputFormatter As Func(Of FakeLogRecord, String)" />
      <MemberSignature Language="F#" Value="member this.OutputFormatter : Func&lt;Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogRecord, string&gt; with get, set" Usage="Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogCollectorOptions.OutputFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;Microsoft::Extensions::Telemetry::Testing::Logging::FakeLogRecord ^, System::String ^&gt; ^ OutputFormatter { Func&lt;Microsoft::Extensions::Telemetry::Testing::Logging::FakeLogRecord ^, System::String ^&gt; ^ get(); void set(Func&lt;Microsoft::Extensions::Telemetry::Testing::Logging::FakeLogRecord ^, System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogRecord,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a delegate that is used to format log records in a specialized way before sending them to the registered output sink.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputSink">
      <MemberSignature Language="C#" Value="public Action&lt;string&gt;? OutputSink { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;string&gt; OutputSink" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogCollectorOptions.OutputSink" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputSink As Action(Of String)" />
      <MemberSignature Language="F#" Value="member this.OutputSink : Action&lt;string&gt; with get, set" Usage="Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogCollectorOptions.OutputSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::String ^&gt; ^ OutputSink { Action&lt;System::String ^&gt; ^ get(); void set(Action&lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an output sink where every record harvested by the collector is sent.
            </summary>
        <value>To be added.</value>
        <remarks>
            By setting this property, you can have all log records harvested by the collector be copied somewhere convenient.
            Defaults to <see langword="null" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeProvider">
      <MemberSignature Language="C#" Value="public TimeProvider TimeProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.TimeProvider TimeProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogCollectorOptions.TimeProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeProvider As TimeProvider" />
      <MemberSignature Language="F#" Value="member this.TimeProvider : TimeProvider with get, set" Usage="Microsoft.Extensions.Telemetry.Testing.Logging.FakeLogCollectorOptions.TimeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeProvider ^ TimeProvider { TimeProvider ^ get(); void set(TimeProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the time provider to use when time-stamping log records.
            </summary>
        <value>To be added.</value>
        <remarks>
            Defaults to <see cref="P:System.TimeProvider.System" />.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="InputMethod" FullName="System.Windows.Input.InputMethod">
  <TypeSignature Language="C#" Value="public class InputMethod : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputMethod extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.InputMethod" />
  <TypeSignature Language="VB.NET" Value="Public Class InputMethod&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class InputMethod : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type InputMethod = class&#xA;    inherit DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides facilities for managing and interacting with the Text Services Framework, which provides support for alternate text input methods such as speech and handwriting.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to use an <xref:System.Windows.Input.InputMethod> object.  
  
 [!code-csharp[languageManager#2](~/samples/snippets/csharp/VS_Snippets_Wpf/languageManager/CSharp/Window1.xaml.cs#2)]
 [!code-vb[languageManager#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/languageManager/visualbasic/window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.InputLanguageManager" />
    <altmember cref="T:System.Windows.Input.TextComposition" />
    <altmember cref="T:System.Windows.Input.InputMethodState" />
    <altmember cref="T:System.Windows.Input.InputMethodStateChangedEventArgs" />
    <altmember cref="T:System.Windows.Input.InputMethodStateChangedEventHandler" />
  </Docs>
  <Members>
    <Member MemberName="CanShowConfigurationUI">
      <MemberSignature Language="C#" Value="public bool CanShowConfigurationUI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShowConfigurationUI" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.CanShowConfigurationUI" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanShowConfigurationUI As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanShowConfigurationUI { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanShowConfigurationUI : bool" Usage="System.Windows.Input.InputMethod.CanShowConfigurationUI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether or not this input method can display configuration [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</summary>
        <value>
          <see langword="true" /> if configuration [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] can be displayed; otherwise, <see langword="false" />.  
  
 This property has no default value.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to use the <xref:System.Windows.Input.InputMethod.CanShowConfigurationUI%2A> property to determine if the configuration UI is viewable.  
  
 [!code-csharp[languageManager#2](~/samples/snippets/csharp/VS_Snippets_Wpf/languageManager/CSharp/Window1.xaml.cs#2)]
 [!code-vb[languageManager#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/languageManager/visualbasic/window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Input.InputMethod.ShowConfigureUI" />
        <altmember cref="P:System.Windows.Input.InputMethod.CanShowRegisterWordUI" />
      </Docs>
    </Member>
    <Member MemberName="CanShowRegisterWordUI">
      <MemberSignature Language="C#" Value="public bool CanShowRegisterWordUI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShowRegisterWordUI" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.CanShowRegisterWordUI" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanShowRegisterWordUI As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanShowRegisterWordUI { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanShowRegisterWordUI : bool" Usage="System.Windows.Input.InputMethod.CanShowRegisterWordUI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether this input method can display word registration [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</summary>
        <value>
          <see langword="true" /> if word registration [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] can be displayed; otherwise, <see langword="false" />.  
  
 This property has no default value.</value>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Windows.Input.InputMethod.ShowRegisterWordUI" />
        <altmember cref="P:System.Windows.Input.InputMethod.CanShowConfigurationUI" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.InputMethod Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.InputMethod Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As InputMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::InputMethod ^ Current { System::Windows::Input::InputMethod ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Windows.Input.InputMethod" Usage="System.Windows.Input.InputMethod.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to any currently active input method associated with the current context.</summary>
        <value>A reference to an <see cref="T:System.Windows.Input.InputMethod" /> object associated with the current context, or **null** if there is no active input method.  
  
 This property has no default value.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to use the <xref:System.Windows.Input.InputMethod.Current%2A> property.  
  
 [!code-csharp[languageManager#2](~/samples/snippets/csharp/VS_Snippets_Wpf/languageManager/CSharp/Window1.xaml.cs#2)]
 [!code-vb[languageManager#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/languageManager/visualbasic/window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInputScope">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.InputScope GetInputScope (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Input.InputScope GetInputScope(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.GetInputScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInputScope (target As DependencyObject) As InputScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::InputScope ^ GetInputScope(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member GetInputScope : System.Windows.DependencyObject -&gt; System.Windows.Input.InputScope" Usage="System.Windows.Input.InputMethod.GetInputScope target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">The dependency object for which to retrieve the input scope.</param>
        <summary>Returns the value of the <see cref="P:System.Windows.Input.InputMethod.InputScope" /> attached property for a specified dependency object.</summary>
        <returns>An <see cref="T:System.Windows.Input.InputScope" /> object representing the current input scope for the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="target" /> is **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.SetInputScope(System.Windows.DependencyObject,System.Windows.Input.InputScope)" />
      </Docs>
    </Member>
    <Member MemberName="GetIsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsInputMethodEnabled (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsInputMethodEnabled(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.GetIsInputMethodEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsInputMethodEnabled (target As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsInputMethodEnabled(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member GetIsInputMethodEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.InputMethod.GetIsInputMethodEnabled target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">The dependency object for which to retrieve the value of <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" />.</param>
        <summary>Returns the value of the <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> attached property for a specified dependency object.</summary>
        <returns>The current value of <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> for the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="target" /> is **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.SetIsInputMethodEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetIsInputMethodSuspended">
      <MemberSignature Language="C#" Value="public static bool GetIsInputMethodSuspended (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsInputMethodSuspended(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.GetIsInputMethodSuspended(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsInputMethodSuspended (target As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsInputMethodSuspended(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member GetIsInputMethodSuspended : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.InputMethod.GetIsInputMethodSuspended target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">The dependency object for which to retrieve the value of <see cref="P:System.Windows.Input.InputMethod.IsInputMethodSuspended" />.</param>
        <summary>Returns the value of the <see cref="P:System.Windows.Input.InputMethod.IsInputMethodSuspended" /> attached property for a specified dependency object.</summary>
        <returns>The current value of <see cref="P:System.Windows.Input.InputMethod.IsInputMethodSuspended" /> for the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="target" /> is **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.SetIsInputMethodSuspended(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredImeConversionMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ImeConversionModeValues GetPreferredImeConversionMode (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Input.ImeConversionModeValues GetPreferredImeConversionMode(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.GetPreferredImeConversionMode(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPreferredImeConversionMode (target As DependencyObject) As ImeConversionModeValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::ImeConversionModeValues GetPreferredImeConversionMode(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member GetPreferredImeConversionMode : System.Windows.DependencyObject -&gt; System.Windows.Input.ImeConversionModeValues" Usage="System.Windows.Input.InputMethod.GetPreferredImeConversionMode target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ImeConversionModeValues</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">The dependency object for which to retrieve the value of <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" />.</param>
        <summary>Returns the value of the <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> attached property for a specified dependency object.</summary>
        <returns>A member of the <see cref="T:System.Windows.Input.ImeConversionModeValues" /> enumeration specifying the current <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> for the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="target" /> is **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.SetPreferredImeConversionMode(System.Windows.DependencyObject,System.Windows.Input.ImeConversionModeValues)" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredImeSentenceMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ImeSentenceModeValues GetPreferredImeSentenceMode (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Input.ImeSentenceModeValues GetPreferredImeSentenceMode(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.GetPreferredImeSentenceMode(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPreferredImeSentenceMode (target As DependencyObject) As ImeSentenceModeValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::ImeSentenceModeValues GetPreferredImeSentenceMode(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member GetPreferredImeSentenceMode : System.Windows.DependencyObject -&gt; System.Windows.Input.ImeSentenceModeValues" Usage="System.Windows.Input.InputMethod.GetPreferredImeSentenceMode target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ImeSentenceModeValues</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">The dependency object for which to retrieve the value of <see cref="P:System.Windows.Input.InputMethod.PreferredImeSentenceMode" />.</param>
        <summary>Returns the value of the <see cref="P:System.Windows.Input.InputMethod.PreferredImeSentenceMode" /> attached property for a specified dependency object.</summary>
        <returns>A member of the <see cref="T:System.Windows.Input.ImeSentenceModeValues" /> enumeration specifying the current <see cref="P:System.Windows.Input.InputMethod.PreferredImeSentenceMode" /> for the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="target" /> is **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.SetPreferredImeSentenceMode(System.Windows.DependencyObject,System.Windows.Input.ImeSentenceModeValues)" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredImeState">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.InputMethodState GetPreferredImeState (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Input.InputMethodState GetPreferredImeState(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.GetPreferredImeState(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPreferredImeState (target As DependencyObject) As InputMethodState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::InputMethodState GetPreferredImeState(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member GetPreferredImeState : System.Windows.DependencyObject -&gt; System.Windows.Input.InputMethodState" Usage="System.Windows.Input.InputMethod.GetPreferredImeState target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputMethodState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">The dependency object for which to retrieve the value of <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" />.</param>
        <summary>Returns the value of the <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> attached property for a specified dependency object.</summary>
        <returns>A member of the <see cref="T:System.Windows.Input.InputMethodState" /> enumeration specifying the current <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> for the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="target" /> is **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.SetPreferredImeState(System.Windows.DependencyObject,System.Windows.Input.InputMethodState)" />
      </Docs>
    </Member>
    <Member MemberName="HandwritingState">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputMethodState HandwritingState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.InputMethodState HandwritingState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.HandwritingState" />
      <MemberSignature Language="VB.NET" Value="Public Property HandwritingState As InputMethodState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputMethodState HandwritingState { System::Windows::Input::InputMethodState get(); void set(System::Windows::Input::InputMethodState value); };" />
      <MemberSignature Language="F#" Value="member this.HandwritingState : System.Windows.Input.InputMethodState with get, set" Usage="System.Windows.Input.InputMethod.HandwritingState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputMethodState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the current state of handwriting input for this input method.</summary>
        <value>A member of the <see cref="T:System.Windows.Input.InputMethodState" /> enumeration specifying the current input method state for handwriting input.  
  
 The default value is <see cref="F:System.Windows.Input.InputMethodState.Off" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to use the <xref:System.Windows.Input.InputMethod.Current%2A> property.  
  
 [!code-csharp[languageManager#2](~/samples/snippets/csharp/VS_Snippets_Wpf/languageManager/CSharp/Window1.xaml.cs#2)]
 [!code-vb[languageManager#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/languageManager/visualbasic/window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.InputMethod.ImeState" />
        <altmember cref="P:System.Windows.Input.InputMethod.MicrophoneState" />
      </Docs>
    </Member>
    <Member MemberName="ImeConversionMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ImeConversionModeValues ImeConversionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ImeConversionModeValues ImeConversionMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.ImeConversionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ImeConversionMode As ImeConversionModeValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ImeConversionModeValues ImeConversionMode { System::Windows::Input::ImeConversionModeValues get(); void set(System::Windows::Input::ImeConversionModeValues value); };" />
      <MemberSignature Language="F#" Value="member this.ImeConversionMode : System.Windows.Input.ImeConversionModeValues with get, set" Usage="System.Windows.Input.InputMethod.ImeConversionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ImeConversionModeValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the current conversion mode for the input method editor associated with this input method.</summary>
        <value>A member of the <see cref="T:System.Windows.Input.ImeConversionModeValues" /> enumeration specifying the conversion mode.  
  
 The default value is <see cref="F:System.Windows.Input.ImeConversionModeValues.Alphanumeric" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Input.InputMethod.ImeSentenceMode" />
      </Docs>
    </Member>
    <Member MemberName="ImeSentenceMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ImeSentenceModeValues ImeSentenceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ImeSentenceModeValues ImeSentenceMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.ImeSentenceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ImeSentenceMode As ImeSentenceModeValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ImeSentenceModeValues ImeSentenceMode { System::Windows::Input::ImeSentenceModeValues get(); void set(System::Windows::Input::ImeSentenceModeValues value); };" />
      <MemberSignature Language="F#" Value="member this.ImeSentenceMode : System.Windows.Input.ImeSentenceModeValues with get, set" Usage="System.Windows.Input.InputMethod.ImeSentenceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ImeSentenceModeValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the current sentence mode for the input method editor associated with this input method.</summary>
        <value>A member of the <see cref="T:System.Windows.Input.ImeSentenceModeValues" /> enumerations specifying the sentence mode.  
  
 The default value is <see cref="F:System.Windows.Input.ImeSentenceModeValues.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to use the <xref:System.Windows.Input.InputMethod.ImeSentenceMode%2A> property.  
  
 [!code-csharp[languageManager#2](~/samples/snippets/csharp/VS_Snippets_Wpf/languageManager/CSharp/Window1.xaml.cs#2)]
 [!code-vb[languageManager#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/languageManager/visualbasic/window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.InputMethod.ImeConversionMode" />
      </Docs>
    </Member>
    <Member MemberName="ImeState">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputMethodState ImeState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.InputMethodState ImeState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.ImeState" />
      <MemberSignature Language="VB.NET" Value="Public Property ImeState As InputMethodState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputMethodState ImeState { System::Windows::Input::InputMethodState get(); void set(System::Windows::Input::InputMethodState value); };" />
      <MemberSignature Language="F#" Value="member this.ImeState : System.Windows.Input.InputMethodState with get, set" Usage="System.Windows.Input.InputMethod.ImeState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputMethodState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the current state of the input method editor associated with this input method.</summary>
        <value>A member of the <see cref="T:System.Windows.Input.InputMethodState" /> enumeration specifying the state of the input method editor associated with this input method.  
  
 The default value is <see cref="F:System.Windows.Input.InputMethodState.Off" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Input.InputMethod.HandwritingState" />
        <altmember cref="P:System.Windows.Input.InputMethod.MicrophoneState" />
      </Docs>
    </Member>
    <Member MemberName="InputScope">
      <MemberSignature Language="C#" Value="see GetInputScope, and SetInputScope" />
      <MemberSignature Language="ILAsm" Value="see GetInputScope, and SetInputScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.InputScope" />
      <MemberSignature Language="VB.NET" Value="see GetInputScope, and SetInputScope" />
      <MemberSignature Language="F#" Value="see GetInputScope, and SetInputScope" Usage="see GetInputScope, and SetInputScope" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets or sets the input scope for a specified dependency object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This is an attached property.  Use the <xref:System.Windows.Input.InputMethod.GetInputScope%2A> and <xref:System.Windows.Input.InputMethod.SetInputScope%2A> methods to set or read this attached property on a specified dependency object.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty InputScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty InputScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputMethod.InputScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InputScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ InputScopeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable InputScopeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputMethod.InputScopeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Input.InputMethod.InputScope" /> attached property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="see GetIsInputMethodEnabled, and SetIsInputMethodEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsInputMethodEnabled, and SetIsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsInputMethodEnabled, and SetIsInputMethodEnabled" />
      <MemberSignature Language="F#" Value="see GetIsInputMethodEnabled, and SetIsInputMethodEnabled" Usage="see GetIsInputMethodEnabled, and SetIsInputMethodEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets or sets a value that indicates whether this input method is enabled.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This is an attached property.  Use the <xref:System.Windows.Input.InputMethod.GetIsInputMethodEnabled%2A> and <xref:System.Windows.Input.InputMethod.SetIsInputMethodEnabled%2A> methods to set or read this attached property on a specified dependency object.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsInputMethodEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsInputMethodEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputMethod.IsInputMethodEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInputMethodEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsInputMethodEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsInputMethodEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputMethod.IsInputMethodEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> attached property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodSuspended">
      <MemberSignature Language="C#" Value="see GetIsInputMethodSuspended, and SetIsInputMethodSuspended" />
      <MemberSignature Language="ILAsm" Value="see GetIsInputMethodSuspended, and SetIsInputMethodSuspended" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.IsInputMethodSuspended" />
      <MemberSignature Language="VB.NET" Value="see GetIsInputMethodSuspended, and SetIsInputMethodSuspended" />
      <MemberSignature Language="F#" Value="see GetIsInputMethodSuspended, and SetIsInputMethodSuspended" Usage="see GetIsInputMethodSuspended, and SetIsInputMethodSuspended" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets or sets a value that indicates whether this input method is suspended.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This is an attached property.  Use the <xref:System.Windows.Input.InputMethod.GetIsInputMethodSuspended%2A> and <xref:System.Windows.Input.InputMethod.SetIsInputMethodSuspended%2A> methods to set or read this attached property on a specified dependency object.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodSuspendedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsInputMethodSuspendedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsInputMethodSuspendedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputMethod.IsInputMethodSuspendedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInputMethodSuspendedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsInputMethodSuspendedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsInputMethodSuspendedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputMethod.IsInputMethodSuspendedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Input.InputMethod.IsInputMethodSuspended" /> attached property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MicrophoneState">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputMethodState MicrophoneState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.InputMethodState MicrophoneState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.MicrophoneState" />
      <MemberSignature Language="VB.NET" Value="Public Property MicrophoneState As InputMethodState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputMethodState MicrophoneState { System::Windows::Input::InputMethodState get(); void set(System::Windows::Input::InputMethodState value); };" />
      <MemberSignature Language="F#" Value="member this.MicrophoneState : System.Windows.Input.InputMethodState with get, set" Usage="System.Windows.Input.InputMethod.MicrophoneState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputMethodState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the current state of microphone input for this input method.</summary>
        <value>A member of the <see cref="T:System.Windows.Input.InputMethodState" /> enumeration specifying the current input method state for microphone input.  
  
 The default value is <see cref="F:System.Windows.Input.InputMethodState.Off" />.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">for access to information about the microphone state.  Associated enumeration:  <see cref="T:System.Security.Permissions.PermissionState" />.**Unrestricted**.</permission>
        <altmember cref="P:System.Windows.Input.InputMethod.ImeState" />
        <altmember cref="P:System.Windows.Input.InputMethod.HandwritingState" />
      </Docs>
    </Member>
    <Member MemberName="PreferredImeConversionMode">
      <MemberSignature Language="C#" Value="see GetPreferredImeConversionMode, and SetPreferredImeConversionMode" />
      <MemberSignature Language="ILAsm" Value="see GetPreferredImeConversionMode, and SetPreferredImeConversionMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" />
      <MemberSignature Language="VB.NET" Value="see GetPreferredImeConversionMode, and SetPreferredImeConversionMode" />
      <MemberSignature Language="F#" Value="see GetPreferredImeConversionMode, and SetPreferredImeConversionMode" Usage="see GetPreferredImeConversionMode, and SetPreferredImeConversionMode" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets or sets a preferred <see cref="T:System.Windows.Input.ImeConversionModeValues" /> value for a specified dependency object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This is an attached property.  Use the <xref:System.Windows.Input.InputMethod.GetPreferredImeConversionMode%2A> and <xref:System.Windows.Input.InputMethod.SetPreferredImeConversionMode%2A> methods to set or read this attached property on a specified dependency object.  
  
 When this property is attached to a <xref:System.Windows.UIElement>, the input method automatically switches to the preferred conversion mode when that **UIElement** gets the focus.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.InputMethod.PreferredImeSentenceMode" />
        <altmember cref="P:System.Windows.Input.InputMethod.PreferredImeState" />
      </Docs>
    </Member>
    <Member MemberName="PreferredImeConversionModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PreferredImeConversionModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PreferredImeConversionModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputMethod.PreferredImeConversionModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreferredImeConversionModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PreferredImeConversionModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreferredImeConversionModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputMethod.PreferredImeConversionModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> attached property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredImeSentenceMode">
      <MemberSignature Language="C#" Value="see GetPreferredImeSentenceMode, and SetPreferredImeSentenceMode" />
      <MemberSignature Language="ILAsm" Value="see GetPreferredImeSentenceMode, and SetPreferredImeSentenceMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.PreferredImeSentenceMode" />
      <MemberSignature Language="VB.NET" Value="see GetPreferredImeSentenceMode, and SetPreferredImeSentenceMode" />
      <MemberSignature Language="F#" Value="see GetPreferredImeSentenceMode, and SetPreferredImeSentenceMode" Usage="see GetPreferredImeSentenceMode, and SetPreferredImeSentenceMode" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets or sets a preferred <see cref="T:System.Windows.Input.ImeSentenceModeValues" /> value for a specified dependency object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This is an attached property.  Use the <xref:System.Windows.Input.InputMethod.GetPreferredImeSentenceMode%2A> and <xref:System.Windows.Input.InputMethod.SetPreferredImeSentenceMode%2A> methods to set or read this attached property on a specified dependency object.  
  
 When this property is attached to a <xref:System.Windows.UIElement>, the input method automatically switches to the preferred sentence mode when that <xref:System.Windows.UIElement> gets the focus.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" />
        <altmember cref="P:System.Windows.Input.InputMethod.PreferredImeState" />
      </Docs>
    </Member>
    <Member MemberName="PreferredImeSentenceModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PreferredImeSentenceModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PreferredImeSentenceModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputMethod.PreferredImeSentenceModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreferredImeSentenceModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PreferredImeSentenceModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreferredImeSentenceModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputMethod.PreferredImeSentenceModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Input.InputMethod.PreferredImeSentenceMode" /> attached property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredImeState">
      <MemberSignature Language="C#" Value="see GetPreferredImeState, and SetPreferredImeState" />
      <MemberSignature Language="ILAsm" Value="see GetPreferredImeState, and SetPreferredImeState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.PreferredImeState" />
      <MemberSignature Language="VB.NET" Value="see GetPreferredImeState, and SetPreferredImeState" />
      <MemberSignature Language="F#" Value="see GetPreferredImeState, and SetPreferredImeState" Usage="see GetPreferredImeState, and SetPreferredImeState" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets or sets a preferred input method state for a specified dependency object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This is an attached property.  Use the <xref:System.Windows.Input.InputMethod.GetPreferredImeState%2A> and <xref:System.Windows.Input.InputMethod.SetPreferredImeState%2A> methods to set or read this attached property on a specified dependency object.  
  
 When this property is attached to a <xref:System.Windows.UIElement>, the input method automatically switches to the preferred state (usually **On** or **Off**) when that **UIElement** gets the focus.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" />
        <altmember cref="P:System.Windows.Input.InputMethod.PreferredImeSentenceMode" />
      </Docs>
    </Member>
    <Member MemberName="PreferredImeStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PreferredImeStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PreferredImeStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputMethod.PreferredImeStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreferredImeStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PreferredImeStateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreferredImeStateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputMethod.PreferredImeStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> attached property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInputScope">
      <MemberSignature Language="C#" Value="public static void SetInputScope (System.Windows.DependencyObject target, System.Windows.Input.InputScope value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetInputScope(class System.Windows.DependencyObject target, class System.Windows.Input.InputScope value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.SetInputScope(System.Windows.DependencyObject,System.Windows.Input.InputScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetInputScope (target As DependencyObject, value As InputScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetInputScope(System::Windows::DependencyObject ^ target, System::Windows::Input::InputScope ^ value);" />
      <MemberSignature Language="F#" Value="static member SetInputScope : System.Windows.DependencyObject * System.Windows.Input.InputScope -&gt; unit" Usage="System.Windows.Input.InputMethod.SetInputScope (target, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.Input.InputScope" />
      </Parameters>
      <Docs>
        <param name="target">The dependency object on which to set the <see cref="P:System.Windows.Input.InputMethod.InputScope" /> attached property.</param>
        <param name="value">An <see cref="T:System.Windows.Input.InputScope" /> object representing the new value for the <see cref="P:System.Windows.Input.InputMethod.InputScope" /> attached property.</param>
        <summary>Sets the value of the <see cref="P:System.Windows.Input.InputMethod.InputScope" /> attached property on the specified dependency object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to use the <xref:System.Windows.Input.InputMethod.SetInputScope%2A> method to determine the <xref:System.Windows.Input.InputScope> associated with a <xref:System.Windows.Controls.TextBox> object.  
  
 [!code-csharp[languageManager#2](~/samples/snippets/csharp/VS_Snippets_Wpf/languageManager/CSharp/Window1.xaml.cs#2)]
 [!code-vb[languageManager#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/languageManager/visualbasic/window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="target" /> is **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.GetInputScope(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetIsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsInputMethodEnabled (System.Windows.DependencyObject target, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsInputMethodEnabled(class System.Windows.DependencyObject target, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.SetIsInputMethodEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsInputMethodEnabled (target As DependencyObject, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsInputMethodEnabled(System::Windows::DependencyObject ^ target, bool value);" />
      <MemberSignature Language="F#" Value="static member SetIsInputMethodEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.InputMethod.SetIsInputMethodEnabled (target, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">The dependency object on which to set the <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> attached property.</param>
        <param name="value">The new value for the <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> attached property.</param>
        <summary>Sets the value of the <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> attached property on the specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="target" /> is **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.GetIsInputMethodEnabled(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetIsInputMethodSuspended">
      <MemberSignature Language="C#" Value="public static void SetIsInputMethodSuspended (System.Windows.DependencyObject target, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsInputMethodSuspended(class System.Windows.DependencyObject target, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.SetIsInputMethodSuspended(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsInputMethodSuspended (target As DependencyObject, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsInputMethodSuspended(System::Windows::DependencyObject ^ target, bool value);" />
      <MemberSignature Language="F#" Value="static member SetIsInputMethodSuspended : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.InputMethod.SetIsInputMethodSuspended (target, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">The dependency object on which to set the <see cref="P:System.Windows.Input.InputMethod.IsInputMethodSuspended" /> attached property.</param>
        <param name="value">The new value for the <see cref="P:System.Windows.Input.InputMethod.IsInputMethodSuspended" /> attached property.</param>
        <summary>Sets the value of the <see cref="P:System.Windows.Input.InputMethod.IsInputMethodSuspended" /> attached property on the specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="target" /> is **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.GetIsInputMethodSuspended(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetPreferredImeConversionMode">
      <MemberSignature Language="C#" Value="public static void SetPreferredImeConversionMode (System.Windows.DependencyObject target, System.Windows.Input.ImeConversionModeValues value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetPreferredImeConversionMode(class System.Windows.DependencyObject target, valuetype System.Windows.Input.ImeConversionModeValues value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.SetPreferredImeConversionMode(System.Windows.DependencyObject,System.Windows.Input.ImeConversionModeValues)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetPreferredImeConversionMode (target As DependencyObject, value As ImeConversionModeValues)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetPreferredImeConversionMode(System::Windows::DependencyObject ^ target, System::Windows::Input::ImeConversionModeValues value);" />
      <MemberSignature Language="F#" Value="static member SetPreferredImeConversionMode : System.Windows.DependencyObject * System.Windows.Input.ImeConversionModeValues -&gt; unit" Usage="System.Windows.Input.InputMethod.SetPreferredImeConversionMode (target, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.Input.ImeConversionModeValues" />
      </Parameters>
      <Docs>
        <param name="target">The dependency object on which to set the <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> attached property.</param>
        <param name="value">A member of the <see cref="T:System.Windows.Input.ImeConversionModeValues" /> enumeration representing the new value for the <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> attached property.</param>
        <summary>Sets the value of the <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> attached property on the specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="target" /> is **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.GetPreferredImeConversionMode(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetPreferredImeSentenceMode">
      <MemberSignature Language="C#" Value="public static void SetPreferredImeSentenceMode (System.Windows.DependencyObject target, System.Windows.Input.ImeSentenceModeValues value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetPreferredImeSentenceMode(class System.Windows.DependencyObject target, valuetype System.Windows.Input.ImeSentenceModeValues value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.SetPreferredImeSentenceMode(System.Windows.DependencyObject,System.Windows.Input.ImeSentenceModeValues)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetPreferredImeSentenceMode (target As DependencyObject, value As ImeSentenceModeValues)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetPreferredImeSentenceMode(System::Windows::DependencyObject ^ target, System::Windows::Input::ImeSentenceModeValues value);" />
      <MemberSignature Language="F#" Value="static member SetPreferredImeSentenceMode : System.Windows.DependencyObject * System.Windows.Input.ImeSentenceModeValues -&gt; unit" Usage="System.Windows.Input.InputMethod.SetPreferredImeSentenceMode (target, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.Input.ImeSentenceModeValues" />
      </Parameters>
      <Docs>
        <param name="target">The dependency object on which to set the <see cref="P:System.Windows.Input.InputMethod.PreferredImeSentenceMode" /> attached property.</param>
        <param name="value">A member of the <see cref="T:System.Windows.Input.ImeConversionModeValues" /> enumeration representing the new value for the <see cref="P:System.Windows.Input.InputMethod.PreferredImeSentenceMode" /> attached property.</param>
        <summary>Sets the value of the <see cref="P:System.Windows.Input.InputMethod.PreferredImeSentenceMode" /> attached property on the specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="target" /> is **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.GetPreferredImeSentenceMode(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetPreferredImeState">
      <MemberSignature Language="C#" Value="public static void SetPreferredImeState (System.Windows.DependencyObject target, System.Windows.Input.InputMethodState value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetPreferredImeState(class System.Windows.DependencyObject target, valuetype System.Windows.Input.InputMethodState value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.SetPreferredImeState(System.Windows.DependencyObject,System.Windows.Input.InputMethodState)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetPreferredImeState (target As DependencyObject, value As InputMethodState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetPreferredImeState(System::Windows::DependencyObject ^ target, System::Windows::Input::InputMethodState value);" />
      <MemberSignature Language="F#" Value="static member SetPreferredImeState : System.Windows.DependencyObject * System.Windows.Input.InputMethodState -&gt; unit" Usage="System.Windows.Input.InputMethod.SetPreferredImeState (target, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.Input.InputMethodState" />
      </Parameters>
      <Docs>
        <param name="target">The dependency object on which to set the <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> attached property.</param>
        <param name="value">A member of the <see cref="T:System.Windows.Input.ImeConversionModeValues" /> enumeration representing the new value for the <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> attached property.</param>
        <summary>Sets the value of the <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> attached property on the specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="target" /> is **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.GetPreferredImeState(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowConfigureUI">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Displays configuration user interface (UI) associated with the currently active keyboard text service.</summary>
        <altmember cref="P:System.Windows.Input.InputMethod.CanShowConfigurationUI" />
        <altmember cref="Overload:System.Windows.Input.InputMethod.ShowRegisterWordUI" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowConfigureUI">
      <MemberSignature Language="C#" Value="public void ShowConfigureUI ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowConfigureUI() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.ShowConfigureUI" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowConfigureUI ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowConfigureUI();" />
      <MemberSignature Language="F#" Value="member this.ShowConfigureUI : unit -&gt; unit" Usage="inputMethod.ShowConfigureUI " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Displays configuration [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] associated with the currently active keyboard text service.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Input.InputMethod.CanShowConfigurationUI" />
        <altmember cref="M:System.Windows.Input.InputMethod.ShowConfigureUI(System.Windows.UIElement)" />
        <altmember cref="Overload:System.Windows.Input.InputMethod.ShowRegisterWordUI" />
      </Docs>
    </Member>
    <Member MemberName="ShowConfigureUI">
      <MemberSignature Language="C#" Value="public void ShowConfigureUI (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowConfigureUI(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.ShowConfigureUI(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowConfigureUI (element As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowConfigureUI(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.ShowConfigureUI : System.Windows.UIElement -&gt; unit" Usage="inputMethod.ShowConfigureUI element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">A <see cref="T:System.Windows.UIElement" /> that will be used as the parent element for the configuration [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].  This parameter can be <see langword="null" />.</param>
        <summary>Displays configuration [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] associated with the currently active keyboard text service, using a specified <see cref="T:System.Windows.UIElement" /> as the parent element for the configuration [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Input.InputMethod.CanShowConfigurationUI" />
        <altmember cref="M:System.Windows.Input.InputMethod.ShowConfigureUI" />
        <altmember cref="Overload:System.Windows.Input.InputMethod.ShowRegisterWordUI" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowRegisterWordUI">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Displays word registration user interface (UI) associated with the currently active keyboard text service.</summary>
        <altmember cref="P:System.Windows.Input.InputMethod.CanShowRegisterWordUI" />
        <altmember cref="Overload:System.Windows.Input.InputMethod.ShowConfigureUI" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowRegisterWordUI">
      <MemberSignature Language="C#" Value="public void ShowRegisterWordUI ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowRegisterWordUI() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.ShowRegisterWordUI" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowRegisterWordUI ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowRegisterWordUI();" />
      <MemberSignature Language="F#" Value="member this.ShowRegisterWordUI : unit -&gt; unit" Usage="inputMethod.ShowRegisterWordUI " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Displays word registration [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] associated with the currently active keyboard text service.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Input.InputMethod.CanShowRegisterWordUI" />
        <altmember cref="M:System.Windows.Input.InputMethod.ShowRegisterWordUI(System.String)" />
        <altmember cref="M:System.Windows.Input.InputMethod.ShowRegisterWordUI(System.Windows.UIElement,System.String)" />
        <altmember cref="Overload:System.Windows.Input.InputMethod.ShowConfigureUI" />
      </Docs>
    </Member>
    <Member MemberName="ShowRegisterWordUI">
      <MemberSignature Language="C#" Value="public void ShowRegisterWordUI (string registeredText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowRegisterWordUI(string registeredText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.ShowRegisterWordUI(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowRegisterWordUI (registeredText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowRegisterWordUI(System::String ^ registeredText);" />
      <MemberSignature Language="F#" Value="member this.ShowRegisterWordUI : string -&gt; unit" Usage="inputMethod.ShowRegisterWordUI registeredText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registeredText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="registeredText">A string that specifies a value to register.</param>
        <summary>Displays word registration [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] associated with the currently active keyboard text service.  Accepts a specified string as the default value to register.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typically the value specified by *registeredText* is used to pre-populate the word registration [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.InputMethod.CanShowRegisterWordUI" />
        <altmember cref="M:System.Windows.Input.InputMethod.ShowRegisterWordUI" />
        <altmember cref="M:System.Windows.Input.InputMethod.ShowRegisterWordUI(System.Windows.UIElement,System.String)" />
        <altmember cref="Overload:System.Windows.Input.InputMethod.ShowConfigureUI" />
      </Docs>
    </Member>
    <Member MemberName="ShowRegisterWordUI">
      <MemberSignature Language="C#" Value="public void ShowRegisterWordUI (System.Windows.UIElement element, string registeredText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowRegisterWordUI(class System.Windows.UIElement element, string registeredText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.ShowRegisterWordUI(System.Windows.UIElement,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowRegisterWordUI (element As UIElement, registeredText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowRegisterWordUI(System::Windows::UIElement ^ element, System::String ^ registeredText);" />
      <MemberSignature Language="F#" Value="member this.ShowRegisterWordUI : System.Windows.UIElement * string -&gt; unit" Usage="inputMethod.ShowRegisterWordUI (element, registeredText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="registeredText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="element">A <see cref="T:System.Windows.UIElement" /> that will be used as the parent element for the word registration [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].  This parameter can be <see langword="null" />.</param>
        <param name="registeredText">A string that specifies a value to register.</param>
        <summary>Displays word registration [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] associated with the currently active keyboard text service.  Accepts a specified string as the default value to register, and a specified <see cref="T:System.Windows.UIElement" /> as the parent element for the configuration [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typically the value specified by *registeredText* is used to pre-populate the word registration [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.InputMethod.CanShowRegisterWordUI" />
        <altmember cref="M:System.Windows.Input.InputMethod.ShowRegisterWordUI" />
        <altmember cref="M:System.Windows.Input.InputMethod.ShowRegisterWordUI(System.Windows.UIElement,System.String)" />
        <altmember cref="Overload:System.Windows.Input.InputMethod.ShowConfigureUI" />
      </Docs>
    </Member>
    <Member MemberName="SpeechMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.SpeechMode SpeechMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.SpeechMode SpeechMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.SpeechMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeechMode As SpeechMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::SpeechMode SpeechMode { System::Windows::Input::SpeechMode get(); void set(System::Windows::Input::SpeechMode value); };" />
      <MemberSignature Language="F#" Value="member this.SpeechMode : System.Windows.Input.SpeechMode with get, set" Usage="System.Windows.Input.InputMethod.SpeechMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.SpeechMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the speech mode for this input method.</summary>
        <value>A member of the <see cref="T:System.Windows.Input.SpeechMode" /> enumeration specifying the current speech mode.  
  
 The default value is <see cref="F:System.Windows.Input.SpeechMode.Indeterminate" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to use the <xref:System.Windows.Input.InputMethod.SpeechMode%2A> property.  
  
 [!code-csharp[languageManager#2](~/samples/snippets/csharp/VS_Snippets_Wpf/languageManager/CSharp/Window1.xaml.cs#2)]
 [!code-vb[languageManager#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/languageManager/visualbasic/window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">for access to information about the speech mode settings.  Associated enumeration:  <see cref="T:System.Security.Permissions.PermissionState" />.**Unrestricted**.</permission>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.InputMethodStateChangedEventHandler StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.InputMethodStateChangedEventHandler StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputMethod.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As InputMethodStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::InputMethodStateChangedEventHandler ^ StateChanged;" />
      <MemberSignature Language="F#" Value="member this.StateChanged : System.Windows.Input.InputMethodStateChangedEventHandler " Usage="member this.StateChanged : System.Windows.Input.InputMethodStateChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputMethodStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the input method state (represented by the <see cref="P:System.Windows.Input.InputMethod.ImeState" /> property) changes.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.InputMethodStateChangedEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>

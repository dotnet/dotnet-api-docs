<Type Name="InputScopeName" FullName="System.Windows.Input.InputScopeName">
  <TypeSignature Language="C#" Value="public class InputScopeName : System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputScopeName extends System.Object implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.InputScopeName" />
  <TypeSignature Language="VB.NET" Value="Public Class InputScopeName&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class InputScopeName : System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type InputScopeName = class&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.InputScopeNameConverter, PresentationCore, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("NameValue")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.InputScopeNameConverter, PresentationCore, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines a name for text input patterns.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The names defined by this class are used by the <xref:System.Windows.Input.InputScopePhrase> class.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.InputScope" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.InputScopeName" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputScopeName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputScopeName.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InputScopeName();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.InputScopeName" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputScopeName (System.Windows.Input.InputScopeNameValue nameValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.InputScopeNameValue nameValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputScopeName.#ctor(System.Windows.Input.InputScopeNameValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nameValue As InputScopeNameValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InputScopeName(System::Windows::Input::InputScopeNameValue nameValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.InputScopeName : System.Windows.Input.InputScopeNameValue -&gt; System.Windows.Input.InputScopeName" Usage="new System.Windows.Input.InputScopeName nameValue" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="nameValue" Type="System.Windows.Input.InputScopeNameValue" />
      </Parameters>
      <Docs>
        <param name="nameValue">The input scope name which modifies how input from alternative input methods is interpreted.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.InputScopeName" /> class with the specified <see cref="P:System.Windows.Input.InputScopeName.NameValue" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputScopeName.AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddChild(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddChild : obj -&gt; unit&#xA;override this.AddChild : obj -&gt; unit" Usage="inputScopeName.AddChild value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The object to be added as the child of this <see cref="T:System.Windows.Input.InputScopeName" />.</param>
        <summary>Adds a child object to this <see cref="T:System.Windows.Input.InputScopeName" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddText">
      <MemberSignature Language="C#" Value="public void AddText (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddText(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputScopeName.AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddText (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddText(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member AddText : string -&gt; unit&#xA;override this.AddText : string -&gt; unit" Usage="inputScopeName.AddText name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The text added to the <see cref="T:System.Windows.Input.InputScopeName" />.</param>
        <summary>Adds a text string as a child of this <see cref="T:System.Windows.Input.InputScopeName" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameValue">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputScopeNameValue NameValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.InputScopeNameValue NameValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputScopeName.NameValue" />
      <MemberSignature Language="VB.NET" Value="Public Property NameValue As InputScopeNameValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputScopeNameValue NameValue { System::Windows::Input::InputScopeNameValue get(); void set(System::Windows::Input::InputScopeNameValue value); };" />
      <MemberSignature Language="F#" Value="member this.NameValue : System.Windows.Input.InputScopeNameValue with get, set" Usage="System.Windows.Input.InputScopeName.NameValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputScopeNameValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the input scope name value which modifies how input from alternative input methods is interpreted.</summary>
        <value>The input scope name value which modifies how input from alternative input methods is interpreted.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_InputScopeName"></a>   
## XAML Attribute Usage  
  
```  
<object NameValue="inputScopeNameValue"/>  
```  
  
<a name="xamlValues_InputScopeName"></a>   
## XAML Values  
 *inputScopeNameValue*  
 String representation of a <xref:System.Windows.Input.InputScopeNameValue> value.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="RegexParseException" FullName="System.Text.RegularExpressions.RegexParseException">
  <TypeSignature Language="C#" Value="public sealed class RegexParseException : ArgumentException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegexParseException extends System.ArgumentException" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.RegexParseException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegexParseException&#xA;Inherits ArgumentException" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegexParseException sealed : ArgumentException" />
  <TypeSignature Language="F#" Value="type RegexParseException = class&#xA;    inherit ArgumentException" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ArgumentException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>An exception as a result of a parse error in a regular expression, with detailed information in the <see cref="P:System.Text.RegularExpressions.RegexParseException.Error" /> and <see cref="P:System.Text.RegularExpressions.RegexParseException.Offset" /> properties.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.RegexParseError Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.RegularExpressions.RegexParseError Error" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexParseException.Error" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Error As RegexParseError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::RegexParseError Error { System::Text::RegularExpressions::RegexParseError get(); };" />
      <MemberSignature Language="F#" Value="member this.Error : System.Text.RegularExpressions.RegexParseError" Usage="System.Text.RegularExpressions.RegexParseException.Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the error that happened during parsing.</summary>
        <value>The error that occured during parsing.</value>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="regexParseException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">The object that holds the serialized object data.</param>
        <param name="context">The contextual information about the source or destination.</param>
        <summary>Sets the <paramref name="info" /> object with the parameter name and additional exception information.</summary>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="info" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexParseException.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int" Usage="System.Text.RegularExpressions.RegexParseException.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the zero-based character offset in the regular expression pattern where the parse error occurs.</summary>
        <value>The offset at which the parse error occurs.</value>
      </Docs>
    </Member>
  </Members>
</Type>

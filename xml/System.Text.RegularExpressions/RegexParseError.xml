<Type Name="RegexParseError" FullName="System.Text.RegularExpressions.RegexParseError">
  <TypeSignature Language="C#" Value="public enum RegexParseError" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RegexParseError extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.RegexParseError" />
  <TypeSignature Language="VB.NET" Value="Public Enum RegexParseError" />
  <TypeSignature Language="C++ CLI" Value="public enum class RegexParseError" />
  <TypeSignature Language="F#" Value="type RegexParseError = " />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifies the detailed underlying reason why a <see cref="T:System.Text.RegularExpressions.RegexParseException" /> is thrown when a regular expression contains a parsing error.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

This information is made available through <xref:System.Text.RegularExpressions.RegexParseException.Error>.

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AlternationHasComment">
      <MemberSignature Language="C#" Value="AlternationHasComment" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError AlternationHasComment = int32(17)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.AlternationHasComment" />
      <MemberSignature Language="VB.NET" Value="AlternationHasComment" />
      <MemberSignature Language="C++ CLI" Value="AlternationHasComment" />
      <MemberSignature Language="F#" Value="AlternationHasComment = 17" Usage="System.Text.RegularExpressions.RegexParseError.AlternationHasComment" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary>An alternation construct in a regular expression contains a comment.</summary>
      </Docs>
    </Member>
    <Member MemberName="AlternationHasMalformedCondition">
      <MemberSignature Language="C#" Value="AlternationHasMalformedCondition" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError AlternationHasMalformedCondition = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.AlternationHasMalformedCondition" />
      <MemberSignature Language="VB.NET" Value="AlternationHasMalformedCondition" />
      <MemberSignature Language="C++ CLI" Value="AlternationHasMalformedCondition" />
      <MemberSignature Language="F#" Value="AlternationHasMalformedCondition = 2" Usage="System.Text.RegularExpressions.RegexParseError.AlternationHasMalformedCondition" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>An alternation in a regular expression has a malformed condition.</summary>
      </Docs>
    </Member>
    <Member MemberName="AlternationHasMalformedReference">
      <MemberSignature Language="C#" Value="AlternationHasMalformedReference" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError AlternationHasMalformedReference = int32(18)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.AlternationHasMalformedReference" />
      <MemberSignature Language="VB.NET" Value="AlternationHasMalformedReference" />
      <MemberSignature Language="C++ CLI" Value="AlternationHasMalformedReference" />
      <MemberSignature Language="F#" Value="AlternationHasMalformedReference = 18" Usage="System.Text.RegularExpressions.RegexParseError.AlternationHasMalformedReference" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>18</MemberValue>
      <Docs>
        <summary>An alternation construct in a regular expression contains a malformed reference.</summary>
      </Docs>
    </Member>
    <Member MemberName="AlternationHasNamedCapture">
      <MemberSignature Language="C#" Value="AlternationHasNamedCapture" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError AlternationHasNamedCapture = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.AlternationHasNamedCapture" />
      <MemberSignature Language="VB.NET" Value="AlternationHasNamedCapture" />
      <MemberSignature Language="C++ CLI" Value="AlternationHasNamedCapture" />
      <MemberSignature Language="F#" Value="AlternationHasNamedCapture = 16" Usage="System.Text.RegularExpressions.RegexParseError.AlternationHasNamedCapture" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>An alternation construct in a regular expression uses a named capture.</summary>
      </Docs>
    </Member>
    <Member MemberName="AlternationHasTooManyConditions">
      <MemberSignature Language="C#" Value="AlternationHasTooManyConditions" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError AlternationHasTooManyConditions = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.AlternationHasTooManyConditions" />
      <MemberSignature Language="VB.NET" Value="AlternationHasTooManyConditions" />
      <MemberSignature Language="C++ CLI" Value="AlternationHasTooManyConditions" />
      <MemberSignature Language="F#" Value="AlternationHasTooManyConditions = 1" Usage="System.Text.RegularExpressions.RegexParseError.AlternationHasTooManyConditions" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>An alternation in a regular expression has too many conditions.</summary>
      </Docs>
    </Member>
    <Member MemberName="AlternationHasUndefinedReference">
      <MemberSignature Language="C#" Value="AlternationHasUndefinedReference" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError AlternationHasUndefinedReference = int32(19)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.AlternationHasUndefinedReference" />
      <MemberSignature Language="VB.NET" Value="AlternationHasUndefinedReference" />
      <MemberSignature Language="C++ CLI" Value="AlternationHasUndefinedReference" />
      <MemberSignature Language="F#" Value="AlternationHasUndefinedReference = 19" Usage="System.Text.RegularExpressions.RegexParseError.AlternationHasUndefinedReference" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>19</MemberValue>
      <Docs>
        <summary>An alternation construct in a regular expression contains an undefined reference.</summary>
      </Docs>
    </Member>
    <Member MemberName="CaptureGroupNameInvalid">
      <MemberSignature Language="C#" Value="CaptureGroupNameInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError CaptureGroupNameInvalid = int32(20)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.CaptureGroupNameInvalid" />
      <MemberSignature Language="VB.NET" Value="CaptureGroupNameInvalid" />
      <MemberSignature Language="C++ CLI" Value="CaptureGroupNameInvalid" />
      <MemberSignature Language="F#" Value="CaptureGroupNameInvalid = 20" Usage="System.Text.RegularExpressions.RegexParseError.CaptureGroupNameInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>The group name of a captured group in a regular expression is invalid.</summary>
      </Docs>
    </Member>
    <Member MemberName="CaptureGroupOfZero">
      <MemberSignature Language="C#" Value="CaptureGroupOfZero" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError CaptureGroupOfZero = int32(21)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.CaptureGroupOfZero" />
      <MemberSignature Language="VB.NET" Value="CaptureGroupOfZero" />
      <MemberSignature Language="C++ CLI" Value="CaptureGroupOfZero" />
      <MemberSignature Language="F#" Value="CaptureGroupOfZero = 21" Usage="System.Text.RegularExpressions.RegexParseError.CaptureGroupOfZero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>21</MemberValue>
      <Docs>
        <summary>A regular expression defines a numbered subexpression named zero.</summary>
      </Docs>
    </Member>
    <Member MemberName="ExclusionGroupNotLast">
      <MemberSignature Language="C#" Value="ExclusionGroupNotLast" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError ExclusionGroupNotLast = int32(23)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.ExclusionGroupNotLast" />
      <MemberSignature Language="VB.NET" Value="ExclusionGroupNotLast" />
      <MemberSignature Language="C++ CLI" Value="ExclusionGroupNotLast" />
      <MemberSignature Language="F#" Value="ExclusionGroupNotLast = 23" Usage="System.Text.RegularExpressions.RegexParseError.ExclusionGroupNotLast" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>23</MemberValue>
      <Docs>
        <summary>A character class in a regular expression with an exclusion group is not the last part of the character class.</summary>
      </Docs>
    </Member>
    <Member MemberName="InsufficientClosingParentheses">
      <MemberSignature Language="C#" Value="InsufficientClosingParentheses" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError InsufficientClosingParentheses = int32(26)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.InsufficientClosingParentheses" />
      <MemberSignature Language="VB.NET" Value="InsufficientClosingParentheses" />
      <MemberSignature Language="C++ CLI" Value="InsufficientClosingParentheses" />
      <MemberSignature Language="F#" Value="InsufficientClosingParentheses = 26" Usage="System.Text.RegularExpressions.RegexParseError.InsufficientClosingParentheses" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>26</MemberValue>
      <Docs>
        <summary>A regular expression has a non-escaped left parenthesis, or misses a closing right parenthesis.</summary>
      </Docs>
    </Member>
    <Member MemberName="InsufficientOpeningParentheses">
      <MemberSignature Language="C#" Value="InsufficientOpeningParentheses" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError InsufficientOpeningParentheses = int32(30)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.InsufficientOpeningParentheses" />
      <MemberSignature Language="VB.NET" Value="InsufficientOpeningParentheses" />
      <MemberSignature Language="C++ CLI" Value="InsufficientOpeningParentheses" />
      <MemberSignature Language="F#" Value="InsufficientOpeningParentheses = 30" Usage="System.Text.RegularExpressions.RegexParseError.InsufficientOpeningParentheses" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>30</MemberValue>
      <Docs>
        <summary>A regular expression has a non-escaped right parenthesis, or misses an opening left parenthesis.</summary>
      </Docs>
    </Member>
    <Member MemberName="InsufficientOrInvalidHexDigits">
      <MemberSignature Language="C#" Value="InsufficientOrInvalidHexDigits" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError InsufficientOrInvalidHexDigits = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.InsufficientOrInvalidHexDigits" />
      <MemberSignature Language="VB.NET" Value="InsufficientOrInvalidHexDigits" />
      <MemberSignature Language="C++ CLI" Value="InsufficientOrInvalidHexDigits" />
      <MemberSignature Language="F#" Value="InsufficientOrInvalidHexDigits = 8" Usage="System.Text.RegularExpressions.RegexParseError.InsufficientOrInvalidHexDigits" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>A hexadecimal escape sequence in a regular expression does not have enough digits, or contains invalid digits.</summary>
      </Docs>
    </Member>
    <Member MemberName="InvalidGroupingConstruct">
      <MemberSignature Language="C#" Value="InvalidGroupingConstruct" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError InvalidGroupingConstruct = int32(15)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.InvalidGroupingConstruct" />
      <MemberSignature Language="VB.NET" Value="InvalidGroupingConstruct" />
      <MemberSignature Language="C++ CLI" Value="InvalidGroupingConstruct" />
      <MemberSignature Language="F#" Value="InvalidGroupingConstruct = 15" Usage="System.Text.RegularExpressions.RegexParseError.InvalidGroupingConstruct" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary>A grouping construct in a regular expression is invalid or malformed.</summary>
      </Docs>
    </Member>
    <Member MemberName="InvalidUnicodePropertyEscape">
      <MemberSignature Language="C#" Value="InvalidUnicodePropertyEscape" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError InvalidUnicodePropertyEscape = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.InvalidUnicodePropertyEscape" />
      <MemberSignature Language="VB.NET" Value="InvalidUnicodePropertyEscape" />
      <MemberSignature Language="C++ CLI" Value="InvalidUnicodePropertyEscape" />
      <MemberSignature Language="F#" Value="InvalidUnicodePropertyEscape = 3" Usage="System.Text.RegularExpressions.RegexParseError.InvalidUnicodePropertyEscape" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>A Unicode property escape in a regular expression is invalid or unknown.</summary>
      </Docs>
    </Member>
    <Member MemberName="MalformedNamedReference">
      <MemberSignature Language="C#" Value="MalformedNamedReference" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError MalformedNamedReference = int32(12)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.MalformedNamedReference" />
      <MemberSignature Language="VB.NET" Value="MalformedNamedReference" />
      <MemberSignature Language="C++ CLI" Value="MalformedNamedReference" />
      <MemberSignature Language="F#" Value="MalformedNamedReference = 12" Usage="System.Text.RegularExpressions.RegexParseError.MalformedNamedReference" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary>A named reference in a regular expression is malformed.</summary>
      </Docs>
    </Member>
    <Member MemberName="MalformedUnicodePropertyEscape">
      <MemberSignature Language="C#" Value="MalformedUnicodePropertyEscape" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError MalformedUnicodePropertyEscape = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.MalformedUnicodePropertyEscape" />
      <MemberSignature Language="VB.NET" Value="MalformedUnicodePropertyEscape" />
      <MemberSignature Language="C++ CLI" Value="MalformedUnicodePropertyEscape" />
      <MemberSignature Language="F#" Value="MalformedUnicodePropertyEscape = 4" Usage="System.Text.RegularExpressions.RegexParseError.MalformedUnicodePropertyEscape" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>A Unicode property escape is malformed.</summary>
      </Docs>
    </Member>
    <Member MemberName="MissingControlCharacter">
      <MemberSignature Language="C#" Value="MissingControlCharacter" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError MissingControlCharacter = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.MissingControlCharacter" />
      <MemberSignature Language="VB.NET" Value="MissingControlCharacter" />
      <MemberSignature Language="C++ CLI" Value="MissingControlCharacter" />
      <MemberSignature Language="F#" Value="MissingControlCharacter = 7" Usage="System.Text.RegularExpressions.RegexParseError.MissingControlCharacter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>A control character in a regular expression is missing.</summary>
      </Docs>
    </Member>
    <Member MemberName="NestedQuantifiersNotParenthesized">
      <MemberSignature Language="C#" Value="NestedQuantifiersNotParenthesized" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError NestedQuantifiersNotParenthesized = int32(28)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.NestedQuantifiersNotParenthesized" />
      <MemberSignature Language="VB.NET" Value="NestedQuantifiersNotParenthesized" />
      <MemberSignature Language="C++ CLI" Value="NestedQuantifiersNotParenthesized" />
      <MemberSignature Language="F#" Value="NestedQuantifiersNotParenthesized = 28" Usage="System.Text.RegularExpressions.RegexParseError.NestedQuantifiersNotParenthesized" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>28</MemberValue>
      <Docs>
        <summary>Repeated quantifiers on another quantifier inside a regular expression are not grouped in parentheses.</summary>
      </Docs>
    </Member>
    <Member MemberName="QuantifierAfterNothing">
      <MemberSignature Language="C#" Value="QuantifierAfterNothing" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError QuantifierAfterNothing = int32(29)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.QuantifierAfterNothing" />
      <MemberSignature Language="VB.NET" Value="QuantifierAfterNothing" />
      <MemberSignature Language="C++ CLI" Value="QuantifierAfterNothing" />
      <MemberSignature Language="F#" Value="QuantifierAfterNothing = 29" Usage="System.Text.RegularExpressions.RegexParseError.QuantifierAfterNothing" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>29</MemberValue>
      <Docs>
        <summary>A quantifier in a regular expression is in a position where it cannot quantify anything, like at the beginning of a regular expression or in a group.</summary>
      </Docs>
    </Member>
    <Member MemberName="QuantifierOrCaptureGroupOutOfRange">
      <MemberSignature Language="C#" Value="QuantifierOrCaptureGroupOutOfRange" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError QuantifierOrCaptureGroupOutOfRange = int32(9)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.QuantifierOrCaptureGroupOutOfRange" />
      <MemberSignature Language="VB.NET" Value="QuantifierOrCaptureGroupOutOfRange" />
      <MemberSignature Language="C++ CLI" Value="QuantifierOrCaptureGroupOutOfRange" />
      <MemberSignature Language="F#" Value="QuantifierOrCaptureGroupOutOfRange = 9" Usage="System.Text.RegularExpressions.RegexParseError.QuantifierOrCaptureGroupOutOfRange" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>A captured group or a quantifier in a regular expression is not within range, that is, it is larger than <see cref="F:System.Int32.MaxValue" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="ReversedCharacterRange">
      <MemberSignature Language="C#" Value="ReversedCharacterRange" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError ReversedCharacterRange = int32(24)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.ReversedCharacterRange" />
      <MemberSignature Language="VB.NET" Value="ReversedCharacterRange" />
      <MemberSignature Language="C++ CLI" Value="ReversedCharacterRange" />
      <MemberSignature Language="F#" Value="ReversedCharacterRange = 24" Usage="System.Text.RegularExpressions.RegexParseError.ReversedCharacterRange" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>24</MemberValue>
      <Docs>
        <summary>A character class in a regular expression contains an inverse character range, like z-a instead of a-z.</summary>
      </Docs>
    </Member>
    <Member MemberName="ReversedQuantifierRange">
      <MemberSignature Language="C#" Value="ReversedQuantifierRange" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError ReversedQuantifierRange = int32(27)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.ReversedQuantifierRange" />
      <MemberSignature Language="VB.NET" Value="ReversedQuantifierRange" />
      <MemberSignature Language="C++ CLI" Value="ReversedQuantifierRange" />
      <MemberSignature Language="F#" Value="ReversedQuantifierRange = 27" Usage="System.Text.RegularExpressions.RegexParseError.ReversedQuantifierRange" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>27</MemberValue>
      <Docs>
        <summary>A quantifier range in a regular expression is inverse, like <code>{10,1}</code> instead of <code>(1,10}</code>.</summary>
      </Docs>
    </Member>
    <Member MemberName="ShorthandClassInCharacterRange">
      <MemberSignature Language="C#" Value="ShorthandClassInCharacterRange" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError ShorthandClassInCharacterRange = int32(25)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.ShorthandClassInCharacterRange" />
      <MemberSignature Language="VB.NET" Value="ShorthandClassInCharacterRange" />
      <MemberSignature Language="C++ CLI" Value="ShorthandClassInCharacterRange" />
      <MemberSignature Language="F#" Value="ShorthandClassInCharacterRange = 25" Usage="System.Text.RegularExpressions.RegexParseError.ShorthandClassInCharacterRange" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>25</MemberValue>
      <Docs>
        <summary>A character-class in a regular expression contains a short-hand class that is not allowed inside a character class.</summary>
      </Docs>
    </Member>
    <Member MemberName="UndefinedNamedReference">
      <MemberSignature Language="C#" Value="UndefinedNamedReference" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError UndefinedNamedReference = int32(10)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.UndefinedNamedReference" />
      <MemberSignature Language="VB.NET" Value="UndefinedNamedReference" />
      <MemberSignature Language="C++ CLI" Value="UndefinedNamedReference" />
      <MemberSignature Language="F#" Value="UndefinedNamedReference = 10" Usage="System.Text.RegularExpressions.RegexParseError.UndefinedNamedReference" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>A used named reference in a regular expression is not defined.</summary>
      </Docs>
    </Member>
    <Member MemberName="UndefinedNumberedReference">
      <MemberSignature Language="C#" Value="UndefinedNumberedReference" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError UndefinedNumberedReference = int32(11)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.UndefinedNumberedReference" />
      <MemberSignature Language="VB.NET" Value="UndefinedNumberedReference" />
      <MemberSignature Language="C++ CLI" Value="UndefinedNumberedReference" />
      <MemberSignature Language="F#" Value="UndefinedNumberedReference = 11" Usage="System.Text.RegularExpressions.RegexParseError.UndefinedNumberedReference" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>A used numbered reference in a regular expression is not defined.</summary>
      </Docs>
    </Member>
    <Member MemberName="UnescapedEndingBackslash">
      <MemberSignature Language="C#" Value="UnescapedEndingBackslash" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError UnescapedEndingBackslash = int32(13)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.UnescapedEndingBackslash" />
      <MemberSignature Language="VB.NET" Value="UnescapedEndingBackslash" />
      <MemberSignature Language="C++ CLI" Value="UnescapedEndingBackslash" />
      <MemberSignature Language="F#" Value="UnescapedEndingBackslash = 13" Usage="System.Text.RegularExpressions.RegexParseError.UnescapedEndingBackslash" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary>A regular expression ends with a non-escaped ending backslash.</summary>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = 0" Usage="System.Text.RegularExpressions.RegexParseError.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>An unknown regular expression parse error.</summary>
      </Docs>
    </Member>
    <Member MemberName="UnrecognizedControlCharacter">
      <MemberSignature Language="C#" Value="UnrecognizedControlCharacter" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError UnrecognizedControlCharacter = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.UnrecognizedControlCharacter" />
      <MemberSignature Language="VB.NET" Value="UnrecognizedControlCharacter" />
      <MemberSignature Language="C++ CLI" Value="UnrecognizedControlCharacter" />
      <MemberSignature Language="F#" Value="UnrecognizedControlCharacter = 6" Usage="System.Text.RegularExpressions.RegexParseError.UnrecognizedControlCharacter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>A control character in a regular expression is not recognized.</summary>
      </Docs>
    </Member>
    <Member MemberName="UnrecognizedEscape">
      <MemberSignature Language="C#" Value="UnrecognizedEscape" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError UnrecognizedEscape = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.UnrecognizedEscape" />
      <MemberSignature Language="VB.NET" Value="UnrecognizedEscape" />
      <MemberSignature Language="C++ CLI" Value="UnrecognizedEscape" />
      <MemberSignature Language="F#" Value="UnrecognizedEscape = 5" Usage="System.Text.RegularExpressions.RegexParseError.UnrecognizedEscape" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>An escape character or sequence in a regular expression is invalid.</summary>
      </Docs>
    </Member>
    <Member MemberName="UnrecognizedUnicodeProperty">
      <MemberSignature Language="C#" Value="UnrecognizedUnicodeProperty" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError UnrecognizedUnicodeProperty = int32(31)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.UnrecognizedUnicodeProperty" />
      <MemberSignature Language="VB.NET" Value="UnrecognizedUnicodeProperty" />
      <MemberSignature Language="C++ CLI" Value="UnrecognizedUnicodeProperty" />
      <MemberSignature Language="F#" Value="UnrecognizedUnicodeProperty = 31" Usage="System.Text.RegularExpressions.RegexParseError.UnrecognizedUnicodeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>31</MemberValue>
      <Docs>
        <summary>A unicode property in a regular expression is not recognized, or invalid.</summary>
      </Docs>
    </Member>
    <Member MemberName="UnterminatedBracket">
      <MemberSignature Language="C#" Value="UnterminatedBracket" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError UnterminatedBracket = int32(22)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.UnterminatedBracket" />
      <MemberSignature Language="VB.NET" Value="UnterminatedBracket" />
      <MemberSignature Language="C++ CLI" Value="UnterminatedBracket" />
      <MemberSignature Language="F#" Value="UnterminatedBracket = 22" Usage="System.Text.RegularExpressions.RegexParseError.UnterminatedBracket" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>22</MemberValue>
      <Docs>
        <summary>A regular expression has a non-escaped left square bracket, or misses a closing right square bracket.</summary>
      </Docs>
    </Member>
    <Member MemberName="UnterminatedComment">
      <MemberSignature Language="C#" Value="UnterminatedComment" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError UnterminatedComment = int32(14)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.UnterminatedComment" />
      <MemberSignature Language="VB.NET" Value="UnterminatedComment" />
      <MemberSignature Language="C++ CLI" Value="UnterminatedComment" />
      <MemberSignature Language="F#" Value="UnterminatedComment = 14" Usage="System.Text.RegularExpressions.RegexParseError.UnterminatedComment" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary>A comment in a regular expression is not terminated.</summary>
      </Docs>
    </Member>
  </Members>
</Type>

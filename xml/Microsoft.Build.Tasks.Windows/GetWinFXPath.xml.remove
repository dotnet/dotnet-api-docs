<Type Name="GetWinFXPath" FullName="Microsoft.Build.Tasks.Windows.GetWinFXPath">
  <TypeSignature Language="C#" Value="public sealed class GetWinFXPath : Microsoft.Build.Utilities.Task" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GetWinFXPath extends Microsoft.Build.Utilities.Task" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.Windows.GetWinFXPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GetWinFXPath&#xA;Inherits Task" />
  <TypeSignature Language="C++ CLI" Value="public ref class GetWinFXPath sealed : Microsoft::Build::Utilities::Task" />
  <TypeSignature Language="F#" Value="type GetWinFXPath = class&#xA;    inherit Task" />
  <AssemblyInfo>
    <AssemblyName>PresentationBuildTasks</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Utilities.Task</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implements the <c>GetWinFXPath</c> task. Use the <c>GetWinFXPath</c> element in your project file to create and execute this task. For usage and parameter information, see [GetWinFXPath](https://msdn.microsoft.com/library/b1dfb467-f3d3-47f3-83ef-af7b0e33a772).</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GetWinFXPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Windows.GetWinFXPath.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GetWinFXPath();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Windows.GetWinFXPath" /> class.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override bool Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Windows.GetWinFXPath.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Execute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Execute();" />
      <MemberSignature Language="F#" Value="override this.Execute : unit -&gt; bool" Usage="getWinFXPath.Execute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executes a task.</summary>
        <returns>
          <see langword="true" /> if the task executed successfully; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="WinFXNativePath">
      <MemberSignature Language="C#" Value="public string WinFXNativePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WinFXNativePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.GetWinFXPath.WinFXNativePath" />
      <MemberSignature Language="VB.NET" Value="Public Property WinFXNativePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WinFXNativePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WinFXNativePath : string with get, set" Usage="Microsoft.Build.Tasks.Windows.GetWinFXPath.WinFXNativePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>Microsoft.Build.Framework.Required</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the path for native WinFX runtime.</summary>
        <value>The path for native WinFX runtime.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="WinFXPath">
      <MemberSignature Language="C#" Value="public string WinFXPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WinFXPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.GetWinFXPath.WinFXPath" />
      <MemberSignature Language="VB.NET" Value="Public Property WinFXPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WinFXPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WinFXPath : string with get, set" Usage="Microsoft.Build.Tasks.Windows.GetWinFXPath.WinFXPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the path for the WinFX runtime.</summary>
        <value>The path for the WinFX runtime.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="WinFXWowPath">
      <MemberSignature Language="C#" Value="public string WinFXWowPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WinFXWowPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.GetWinFXPath.WinFXWowPath" />
      <MemberSignature Language="VB.NET" Value="Public Property WinFXWowPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WinFXWowPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WinFXWowPath : string with get, set" Usage="Microsoft.Build.Tasks.Windows.GetWinFXPath.WinFXWowPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>Microsoft.Build.Framework.Required</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the path for WoW WinFX run time.</summary>
        <value>The path for WoW WinFX run time.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>

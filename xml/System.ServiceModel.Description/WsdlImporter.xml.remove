<Type Name="WsdlImporter" FullName="System.ServiceModel.Description.WsdlImporter">
  <TypeSignature Language="C#" Value="public class WsdlImporter : System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WsdlImporter extends System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.WsdlImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class WsdlImporter&#xA;Inherits MetadataImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class WsdlImporter : System::ServiceModel::Description::MetadataImporter" />
  <TypeSignature Language="F#" Value="type WsdlImporter = class&#xA;    inherit MetadataImporter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Description.MetadataImporter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Imports Web Services Description Language (WSDL) 1.1 metadata with WS-Policy attachments.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.ServiceModel.Description.WsdlImporter> class to import metadata as well as convert that information into various classes that represent contract and endpoint information.  
  
 The base class for <xref:System.ServiceModel.Description.WsdlImporter>, the <xref:System.ServiceModel.Description.MetadataImporter> class, defines methods that selectively import contract and endpoint information and properties that expose any import errors and accept type information relevant to the import and conversion process. The <xref:System.ServiceModel.Description.WsdlImporter> type uses the custom policy importers (<xref:System.ServiceModel.Description.IPolicyImportExtension> implementations) from its parent type to handle custom policy statements and its own custom WSDL importers (<xref:System.ServiceModel.Description.IWsdlImportExtension> implementations) to handle custom WSDL elements. For details, see [Extending the Metadata System](~/docs/framework/wcf/extending/extending-the-metadata-system.md).  
  
 When importing policy from WSDL documents, the <xref:System.ServiceModel.Description.WsdlImporter> type will try up to 32 combinations of policy alternatives attached to the different WSDL policy subjects.  If no combination imports cleanly, the first combination is used to construct a partial custom binding.  
  
 In addition to these methods and properties, <xref:System.ServiceModel.Description.WsdlImporter> also implements methods that support importing binding information and properties that provide access to any policy documents, WSDL documents, WSDL extensions, and XML schema documents. For information about extending <xref:System.ServiceModel.Description.WsdlImporter> to support custom WSDL elements, see <xref:System.ServiceModel.Description.IWsdlImportExtension>.  
  
 Typically the <xref:System.ServiceModel.Description.WsdlImporter> class is used in a three-step process.  
  
1.  Create a <xref:System.ServiceModel.Description.WsdlImporter> object and pass a <xref:System.ServiceModel.Description.MetadataSet> object to the constructor.  
  
2.  Call the appropriate `Import` method to retrieve the results.  
  
3.  Check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property to determine whether there are any import errors.  
  
> [!NOTE]
>  When importing WSDL port types, if the QName of the port type matches an entry in the <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> dictionary then the port type is not imported and the known contract is used instead.  
  
 No values are returned from the <xref:System.ServiceModel.Description.WsdlImporter> properties until one of the import methods is called. Custom <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> objects can either be loaded into the <xref:System.ServiceModel.Description.WsdlImporter> programmatically or using the client configuration [&lt;wsdlImporters&gt;](~/docs/framework/configure-apps/file-schema/wcf/wsdlimporters.md) element.  
  
 Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information. To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> object using <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.  
  
   
  
## Examples  
 The following code example shows how to use the <xref:System.ServiceModel.Description.WsdlImporter> to add a custom <xref:System.Runtime.Serialization.IDataContractSurrogate?displayProperty=nameWithType>, import all contracts, and compile those contracts and save them to a file.  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.WsdlImporter" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.WsdlImporter : System.ServiceModel.Description.MetadataSet -&gt; System.ServiceModel.Description.WsdlImporter" Usage="new System.ServiceModel.Description.WsdlImporter metadata" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
      </Parameters>
      <Docs>
        <param name="metadata">A collection of metadata documents from which to extract contract, endpoint, and binding information.</param>
        <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.WsdlImporter" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.ServiceModel.Description.WsdlImporter.%23ctor%2A> constructor to create a <xref:System.ServiceModel.Description.WsdlImporter> object from a set of metadata documents.  
  
   
  
## Examples  
 The following code example shows the most common use of <xref:System.ServiceModel.Description.WsdlImporter> class with the <xref:System.ServiceModel.Description.MetadataResolver> class.  
  
 [!code-csharp[C_CustomWSDLExtensions#10](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet,System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IPolicyImportExtension},System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IWsdlImportExtension})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet, policyImportExtensions As IEnumerable(Of IPolicyImportExtension), wsdlImportExtensions As IEnumerable(Of IWsdlImportExtension))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ policyImportExtensions, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ wsdlImportExtensions);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.WsdlImporter : System.ServiceModel.Description.MetadataSet * seq&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; * seq&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; -&gt; System.ServiceModel.Description.WsdlImporter" Usage="new System.ServiceModel.Description.WsdlImporter (metadata, policyImportExtensions, wsdlImportExtensions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
        <Parameter Name="policyImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;" />
        <Parameter Name="wsdlImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" />
      </Parameters>
      <Docs>
        <param name="metadata">The downloaded metadata.</param>
        <param name="policyImportExtensions">The custom policy importers used to import custom policy statements.</param>
        <param name="wsdlImportExtensions">The custom WSDL importers used to import custom WSDL elements.</param>
        <summary>Creates a <see cref="T:System.ServiceModel.Description.WsdlImporter" /> object from the specified metadata, custom policy importers, and custom WSDL importers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this constructor to control the metadata to be imported and the policy and WSDL importers to be used.  
  
> [!NOTE]
>  If custom policy importers or custom WSDL importers are passed to this constructor any custom importers specified in application configuration files are not loaded. If you want to add a custom importer, you must reconstruct the importers collections prior to using this constructor. See the Example section.  
  
   
  
## Examples  
 The following code example shows how to add a new custom WSDL importer (the `WSDLDocumentationImporter`) to the default set of importers prior to using the <xref:System.ServiceModel.Description.WsdlImporter> object.  
  
 [!code-csharp[C_CustomWSDLExtensions#11](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="metadata" /> argument is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions, System.ServiceModel.Description.MetadataImporterQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions, class System.ServiceModel.Description.MetadataImporterQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet,System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IPolicyImportExtension},System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IWsdlImportExtension},System.ServiceModel.Description.MetadataImporterQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet, policyImportExtensions As IEnumerable(Of IPolicyImportExtension), wsdlImportExtensions As IEnumerable(Of IWsdlImportExtension), quotas As MetadataImporterQuotas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ policyImportExtensions, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ wsdlImportExtensions, System::ServiceModel::Description::MetadataImporterQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.WsdlImporter : System.ServiceModel.Description.MetadataSet * seq&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; * seq&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; * System.ServiceModel.Description.MetadataImporterQuotas -&gt; System.ServiceModel.Description.WsdlImporter" Usage="new System.ServiceModel.Description.WsdlImporter (metadata, policyImportExtensions, wsdlImportExtensions, quotas)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
        <Parameter Name="policyImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;" />
        <Parameter Name="wsdlImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" />
        <Parameter Name="quotas" Type="System.ServiceModel.Description.MetadataImporterQuotas" />
      </Parameters>
      <Docs>
        <param name="metadata">The downloaded metadata.</param>
        <param name="policyImportExtensions">The custom policy importers used to import custom policy statements.</param>
        <param name="wsdlImportExtensions">The custom WSDL importers used to import custom WSDL elements.</param>
        <param name="quotas">The amount of metadata to retrieve at a time</param>
        <summary>Creates a <see cref="T:System.ServiceModel.Description.WsdlImporter" /> object from the specified metadata, custom policy importers, and custom WSDL importers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this constructor to control the metadata to be imported and the policy and WSDL importers to be used.  
  
> [!NOTE]
>  If custom policy importers or custom WSDL importers are passed to this constructor any custom importers specified in application configuration files are not loaded. If you want to add a custom importer, you must reconstruct the importers collections prior to using this constructor. See the Example section.  
  
   
  
## Examples  
 The following code example shows how to add a new custom WSDL importer (the `WSDLDocumentationImporter`) to the default set of importers prior to using the <xref:System.ServiceModel.Description.WsdlImporter> object.  
  
 [!code-csharp[C_CustomWSDLExtensions#11](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="metadata" /> argument is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllBindings">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt; ImportAllBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Channels.Binding&gt; ImportAllBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportAllBindings () As Collection(Of Binding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Channels::Binding ^&gt; ^ ImportAllBindings();" />
      <MemberSignature Language="F#" Value="member this.ImportAllBindings : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt;" Usage="wsdlImporter.ImportAllBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a set of <see cref="T:System.ServiceModel.Channels.Binding" /> objects imported from the metadata documents.</summary>
        <returns>A set of <see cref="T:System.ServiceModel.Channels.Binding" /> objects imported from the metadata documents.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.ServiceModel.Description.WsdlImporter.ImportAllBindings%2A> method to import all binding information from the metadata documents and return them as <xref:System.ServiceModel.Channels.Binding> objects. Check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property to determine whether there are any import errors before using the returned objects.  
  
 To import a specific WSDL binding, see the <xref:System.ServiceModel.Description.WsdlImporter.ImportBinding%2A> method.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllContracts">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllContracts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ImportAllContracts () As Collection(Of ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ ImportAllContracts();" />
      <MemberSignature Language="F#" Value="override this.ImportAllContracts : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;" Usage="wsdlImporter.ImportAllContracts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a set of <see cref="T:System.ServiceModel.Description.ContractDescription" /> objects that represent port type information in the metadata documents.</summary>
        <returns>A set of <see cref="T:System.ServiceModel.Description.ContractDescription" /> objects that represent port type information in the metadata documents.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.ServiceModel.Description.WsdlImporter.ImportAllContracts%2A> method to import all WSDL port type information from the metadata documents and return them as <xref:System.ServiceModel.Description.ContractDescription> objects. It is recommended to check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property to determine whether there are any import errors before using the returned objects.  
  
 To import only one port type, see the <xref:System.ServiceModel.Description.WsdlImporter.ImportContract%2A> method.  
  
   
  
## Examples  
 The following code example shows how to use the <xref:System.ServiceModel.Description.WsdlImporter> to add a custom <xref:System.Runtime.Serialization.IDataContractSurrogate?displayProperty=nameWithType>, import all contracts, and compile those contracts and save them to a file.  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllEndpoints">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ImportAllEndpoints () As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Description::ServiceEndpointCollection ^ ImportAllEndpoints();" />
      <MemberSignature Language="F#" Value="override this.ImportAllEndpoints : unit -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportAllEndpoints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents the endpoints in WSDL documents.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents the endpoints in WSDL documents.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints%2A> method to import all endpoint information from the metadata documents and return them as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects. Check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property to determine whether there are any import errors before using the returned objects.  
  
 To import only a specific WSDL port, see the <xref:System.ServiceModel.Description.WsdlImporter.ImportEndpoint%2A> method.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding ImportBinding (System.Web.Services.Description.Binding wsdlBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Binding ImportBinding(class System.Web.Services.Description.Binding wsdlBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportBinding(System.Web.Services.Description.Binding)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportBinding (wsdlBinding As Binding) As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Binding ^ ImportBinding(System::Web::Services::Description::Binding ^ wsdlBinding);" />
      <MemberSignature Language="F#" Value="member this.ImportBinding : System.Web.Services.Description.Binding -&gt; System.ServiceModel.Channels.Binding" Usage="wsdlImporter.ImportBinding wsdlBinding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlBinding" Type="System.Web.Services.Description.Binding" />
      </Parameters>
      <Docs>
        <param name="wsdlBinding">A <see cref="T:System.Web.Services.Description.Binding" /> object that represents binding information in a metadata file.</param>
        <summary>Returns a <see cref="T:System.ServiceModel.Channels.Binding" /> object that represents binding information from a set of metadata documents.</summary>
        <returns>A <see cref="T:System.ServiceModel.Channels.Binding" /> object that represents binding information from a set of metadata documents.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.ServiceModel.Description.WsdlImporter.ImportBinding%2A> method to use a <xref:System.Web.Services.Description.Binding?displayProperty=nameWithType> object to locate binding information in the metadata and return that binding information as a <xref:System.ServiceModel.Channels.Binding?displayProperty=nameWithType> object. Check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property to determine whether there are any import errors before using the returned object.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="wsdlBinding" /> parameter is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportContract">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ContractDescription ImportContract (System.Web.Services.Description.PortType wsdlPortType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ContractDescription ImportContract(class System.Web.Services.Description.PortType wsdlPortType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportContract(System.Web.Services.Description.PortType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportContract (wsdlPortType As PortType) As ContractDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ContractDescription ^ ImportContract(System::Web::Services::Description::PortType ^ wsdlPortType);" />
      <MemberSignature Language="F#" Value="member this.ImportContract : System.Web.Services.Description.PortType -&gt; System.ServiceModel.Description.ContractDescription" Usage="wsdlImporter.ImportContract wsdlPortType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ContractDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPortType" Type="System.Web.Services.Description.PortType" />
      </Parameters>
      <Docs>
        <param name="wsdlPortType">A <see cref="T:System.Web.Services.Description.PortType" /> object that represents the desired port type.</param>
        <summary>Returns a <see cref="T:System.ServiceModel.Description.ContractDescription" /> object that represents metadata located by the specified port type information.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.ContractDescription" /> object that represents metadata located by the specified port type information.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.ServiceModel.Description.WsdlImporter.ImportContract%2A> method to use a <xref:System.Web.Services.Description.PortType?displayProperty=nameWithType> object to locate port type information in the metadata and return that information as a <xref:System.ServiceModel.Description.ContractDescription> object. Check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property to determine whether there are any import errors before using the returned object.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
        <exception cref="T:System.ArgumentNullException">The port type is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint ImportEndpoint (System.Web.Services.Description.Port wsdlPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint ImportEndpoint(class System.Web.Services.Description.Port wsdlPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoint(System.Web.Services.Description.Port)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoint (wsdlPort As Port) As ServiceEndpoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ ImportEndpoint(System::Web::Services::Description::Port ^ wsdlPort);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoint : System.Web.Services.Description.Port -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="wsdlImporter.ImportEndpoint wsdlPort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPort" Type="System.Web.Services.Description.Port" />
      </Parameters>
      <Docs>
        <param name="wsdlPort">A <see cref="T:System.Web.Services.Description.Port" /> object that represents the desired WSDL port information.</param>
        <summary>Returns a <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> from a set of metadata documents that uses information from the specified <see cref="T:System.Web.Services.Description.Port" /> object.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> object that represents specific WSDL port information in the metadata document.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.ServiceModel.Description.WsdlImporter.ImportEndpoint%2A> method to use a <xref:System.Web.Services.Description.Port?displayProperty=nameWithType> object to locate port type information in the metadata and return that information as a <xref:System.ServiceModel.Description.ServiceEndpoint> object. Check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property to determine whether there are any import errors before using the returned object.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="wsdlPort" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportEndpoints">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Returns a collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects that matches all WSDL ports using a specified binding, associated with a specified port type, or within a specified WSDL service.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.Binding wsdlBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.Binding wsdlBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.Binding)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlBinding As Binding) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::Binding ^ wsdlBinding);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoints : System.Web.Services.Description.Binding -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportEndpoints wsdlBinding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlBinding" Type="System.Web.Services.Description.Binding" />
      </Parameters>
      <Docs>
        <param name="wsdlBinding">A <see cref="T:System.Web.Services.Description.Binding" /> object used in a WSDL port.</param>
        <summary>Returns a <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents all WSDL port types using the specified <see cref="T:System.Web.Services.Description.Binding" />.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents all WSDL port types using the specified <see cref="T:System.Web.Services.Description.Binding" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property to determine whether there are any import errors before using the returned object.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="wsdlBinding" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.PortType wsdlPortType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.PortType wsdlPortType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.PortType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlPortType As PortType) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::PortType ^ wsdlPortType);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoints : System.Web.Services.Description.PortType -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportEndpoints wsdlPortType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPortType" Type="System.Web.Services.Description.PortType" />
      </Parameters>
      <Docs>
        <param name="wsdlPortType">The <see cref="T:System.Web.Services.Description.PortType" /> object that is used to find associated WSDL port information.</param>
        <summary>Returns a <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents all WSDL port types associated with the specified <see cref="T:System.Web.Services.Description.PortType" />.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents all WSDL port types associated with the specified <see cref="T:System.Web.Services.Description.PortType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property to determine whether there are any import errors before using the returned object.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="wsdlPortType" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.Service wsdlService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.Service wsdlService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.Service)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlService As Service) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::Service ^ wsdlService);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoints : System.Web.Services.Description.Service -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportEndpoints wsdlService" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlService" Type="System.Web.Services.Description.Service" />
      </Parameters>
      <Docs>
        <param name="wsdlService">The <see cref="T:System.Web.Services.Description.Service" /> object within which to search for WSDL port information.</param>
        <summary>Returns a <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents all WSDL port types within the specified <see cref="T:System.Web.Services.Description.Service" />.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents all WSDL port types within the specified <see cref="T:System.Web.Services.Description.Service" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property to determine whether there are any import errors before using the returned object.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="wsdlService" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WsdlDocuments">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ServiceDescriptionCollection WsdlDocuments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.ServiceDescriptionCollection WsdlDocuments" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.WsdlDocuments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WsdlDocuments As ServiceDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::ServiceDescriptionCollection ^ WsdlDocuments { System::Web::Services::Description::ServiceDescriptionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WsdlDocuments : System.Web.Services.Description.ServiceDescriptionCollection" Usage="System.ServiceModel.Description.WsdlImporter.WsdlDocuments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ServiceDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a set of <see cref="T:System.Web.Services.Description.ServiceDescription" /> objects that describe the contract information in the metadata documents.</summary>
        <value>A collection of <see cref="T:System.Web.Services.Description.ServiceDescription" /> objects that describe the contract information in the metadata documents.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.ServiceModel.Description.WsdlImporter.WsdlDocuments%2A> property is not populated until an import method is called.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WsdlImportExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; WsdlImportExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; WsdlImportExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WsdlImportExtensions As KeyedByTypeCollection(Of IWsdlImportExtension)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ WsdlImportExtensions { System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WsdlImportExtensions : System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" Usage="System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a set of <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" /> objects used to import custom WSDL information.</summary>
        <value>A set of <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" /> objects used to import custom WSDL information.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A> property to add or remove custom WSDL importers.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet XmlSchemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet XmlSchemas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.XmlSchemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlSchemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ XmlSchemas { System::Xml::Schema::XmlSchemaSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSchemas : System.Xml.Schema.XmlSchemaSet" Usage="System.ServiceModel.Description.WsdlImporter.XmlSchemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a set of <see cref="T:System.Xml.Schema.XmlSchema" /> objects that describe types in the metadata.</summary>
        <value>A set of <see cref="T:System.Xml.Schema.XmlSchema" /> objects that describe types in the metadata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is not populated until one of the import methods is called.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ServiceCredentials" FullName="System.ServiceModel.Description.ServiceCredentials">
  <TypeSignature Language="C#" Value="public class ServiceCredentials : System.ServiceModel.Security.SecurityCredentialsManager, System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceCredentials extends System.ServiceModel.Security.SecurityCredentialsManager implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceCredentials" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceCredentials&#xA;Inherits SecurityCredentialsManager&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceCredentials : System::ServiceModel::Security::SecurityCredentialsManager, System::ServiceModel::Description::IServiceBehavior" />
  <TypeSignature Language="F#" Value="type ServiceCredentials = class&#xA;    inherit SecurityCredentialsManager&#xA;    interface IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Security.SecurityCredentialsManager</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Configures a service credential. Use this class to specify the credential for the service such as an X.509 certificate. Also, use this class to specify the authentication model for various client credentials such as user name and password validation.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This class is used as a parameter in the <xref:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelListenerCore%2A> method, by methods of the <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager>, and is returned by the <xref:System.ServiceModel.ServiceHostBase.Credentials%2A?displayProperty=nameWithType> property.  
  
   
  
## Examples  
 The following code shows how to override this class to implement custom service credentials.  
  
 [!code-csharp[c_CustomCredentials#4](~/samples/snippets/csharp/VS_Snippets_CFX/c_customcredentials/cs/source.cs#4)]
 [!code-vb[c_CustomCredentials#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customcredentials/vb/service/service.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceCredentials ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceCredentials();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceCredentials (System.ServiceModel.Description.ServiceCredentials other);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.ServiceCredentials other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.#ctor(System.ServiceModel.Description.ServiceCredentials)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (other As ServiceCredentials)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ServiceCredentials(System::ServiceModel::Description::ServiceCredentials ^ other);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.ServiceCredentials : System.ServiceModel.Description.ServiceCredentials -&gt; System.ServiceModel.Description.ServiceCredentials" Usage="new System.ServiceModel.Description.ServiceCredentials other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.ServiceModel.Description.ServiceCredentials" />
      </Parameters>
      <Docs>
        <param name="other">The <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> instance used to initialize the new instance.</param>
        <summary>Initializes a new instance of <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> from the specified <see cref="T:System.ServiceModel.Description.ServiceCredentials" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509CertificateInitiatorServiceCredential ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509CertificateInitiatorServiceCredential ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.ClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificate As X509CertificateInitiatorServiceCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509CertificateInitiatorServiceCredential ^ ClientCertificate { System::ServiceModel::Security::X509CertificateInitiatorServiceCredential ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificate : System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" Usage="System.ServiceModel.Description.ServiceCredentials.ClientCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509CertificateInitiatorServiceCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current client certificate authentication and provisioning settings for this service.</summary>
        <value>An <see cref="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" /> instance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can specify a client certificate authentication model using the <xref:System.IdentityModel.Claims.ClaimTypes.Authentication%2A> property. In the mutual certificate duplex scenario, you can specify an X.509 certificate to use in a response or callback using the <xref:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate%2A> property.  
  
   
  
## Examples  
 The following code shows how to access this property and use it to set additional properties.  
  
 [!code-csharp[c_CustomCertificateValidator#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_customcertificatevalidator/cs/source.cs#1)]
 [!code-vb[c_CustomCertificateValidator#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customcertificatevalidator/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceCredentials Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceCredentials Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ServiceCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceCredentials ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.ServiceModel.Description.ServiceCredentials" Usage="serviceCredentials.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceCredentials</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a copy of the current instance.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code shows how to call this method.  
  
 [!code-csharp[S_UEWindowsServiceCredential#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uewindowsservicecredential/cs/source.cs#3)]
 [!code-vb[S_UEWindowsServiceCredential#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uewindowsservicecredential/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Description.ServiceCredentials CloneCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Description.ServiceCredentials CloneCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.CloneCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CloneCore () As ServiceCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ServiceModel::Description::ServiceCredentials ^ CloneCore();" />
      <MemberSignature Language="F#" Value="abstract member CloneCore : unit -&gt; System.ServiceModel.Description.ServiceCredentials&#xA;override this.CloneCore : unit -&gt; System.ServiceModel.Description.ServiceCredentials" Usage="serviceCredentials.CloneCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceCredentials</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Copies the essential members of the current instance.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.ServiceModel.Description.ServiceCredentials.CloneCore%2A> method calls the <xref:System.ServiceModel.Description.ServiceCredentials.%23ctor%2A> constructor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenManager">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenManager CreateSecurityTokenManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenManager CreateSecurityTokenManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.CreateSecurityTokenManager" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenManager () As SecurityTokenManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenManager ^ CreateSecurityTokenManager();" />
      <MemberSignature Language="F#" Value="override this.CreateSecurityTokenManager : unit -&gt; System.IdentityModel.Selectors.SecurityTokenManager" Usage="serviceCredentials.CreateSecurityTokenManager " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a token manager for this service.</summary>
        <returns>A <see cref="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionMapper">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ExceptionMapper ExceptionMapper { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ExceptionMapper ExceptionMapper" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.ExceptionMapper" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionMapper As ExceptionMapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ExceptionMapper ^ ExceptionMapper { System::ServiceModel::ExceptionMapper ^ get(); void set(System::ServiceModel::ExceptionMapper ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionMapper : System.ServiceModel.ExceptionMapper with get, set" Usage="System.ServiceModel.Description.ServiceCredentials.ExceptionMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ExceptionMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the exception mapper associated with the service credentials.</summary>
        <value>The exception mapper associated with the service credentials.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentityConfiguration">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Configuration.IdentityConfiguration IdentityConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Configuration.IdentityConfiguration IdentityConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.IdentityConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Property IdentityConfiguration As IdentityConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Configuration::IdentityConfiguration ^ IdentityConfiguration { System::IdentityModel::Configuration::IdentityConfiguration ^ get(); void set(System::IdentityModel::Configuration::IdentityConfiguration ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IdentityConfiguration : System.IdentityModel.Configuration.IdentityConfiguration with get, set" Usage="System.ServiceModel.Description.ServiceCredentials.IdentityConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Configuration.IdentityConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the identity configuration for the service.</summary>
        <value>The identity configuration for the service.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IssuedTokenAuthentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.IssuedTokenServiceCredential IssuedTokenAuthentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.IssuedTokenServiceCredential IssuedTokenAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.IssuedTokenAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssuedTokenAuthentication As IssuedTokenServiceCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::IssuedTokenServiceCredential ^ IssuedTokenAuthentication { System::ServiceModel::Security::IssuedTokenServiceCredential ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IssuedTokenAuthentication : System.ServiceModel.Security.IssuedTokenServiceCredential" Usage="System.ServiceModel.Description.ServiceCredentials.IssuedTokenAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.IssuedTokenServiceCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current issued token (for example, SAML) authentication settings for this service.</summary>
        <value>An <see cref="T:System.ServiceModel.Security.IssuedTokenServiceCredential" /> instance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code shows how to access this property and use it to set additional properties.  
  
 [!code-csharp[c_FederatedService#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_federatedservice/cs/source.cs#2)]
 [!code-vb[c_FederatedService#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_federatedservice/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Peer">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.PeerCredential Peer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.PeerCredential Peer" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.Peer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Peer As PeerCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::PeerCredential ^ Peer { System::ServiceModel::Security::PeerCredential ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Peer : System.ServiceModel.Security.PeerCredential" Usage="System.ServiceModel.Description.ServiceCredentials.Peer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.PeerCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current credential authentication and provisioning settings to be used by peer transport endpoints configured on the service.</summary>
        <value>A <see cref="T:System.ServiceModel.Security.PeerCredential" /> instance.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecureConversationAuthentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.SecureConversationServiceCredential SecureConversationAuthentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.SecureConversationServiceCredential SecureConversationAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.SecureConversationAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecureConversationAuthentication As SecureConversationServiceCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::SecureConversationServiceCredential ^ SecureConversationAuthentication { System::ServiceModel::Security::SecureConversationServiceCredential ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecureConversationAuthentication : System.ServiceModel.Security.SecureConversationServiceCredential" Usage="System.ServiceModel.Description.ServiceCredentials.SecureConversationAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecureConversationServiceCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current settings to be used by a secure conversation.</summary>
        <value>A <see cref="T:System.ServiceModel.Security.SecureConversationServiceCredential" /> instance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this class to specify a list of known claim types for the Security Context Token (SCT) cookies serialization and an encoder to encode and secure cookies information.  
  
   
  
## Examples  
 The following code shows how to use this property to get the instance of the credential used by the service.  
  
 [!code-csharp[S_UEWindowsServiceCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uewindowsservicecredential/cs/source.cs#2)]
 [!code-vb[S_UEWindowsServiceCredential#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uewindowsservicecredential/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceCertificate">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509CertificateRecipientServiceCredential ServiceCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509CertificateRecipientServiceCredential ServiceCertificate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.ServiceCertificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceCertificate As X509CertificateRecipientServiceCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509CertificateRecipientServiceCredential ^ ServiceCertificate { System::ServiceModel::Security::X509CertificateRecipientServiceCredential ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceCertificate : System.ServiceModel.Security.X509CertificateRecipientServiceCredential" Usage="System.ServiceModel.Description.ServiceCredentials.ServiceCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509CertificateRecipientServiceCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current certificate associated with this service.</summary>
        <value>An <see cref="T:System.ServiceModel.Security.X509CertificateRecipientServiceCredential" /> instance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can specify the certificate to use by calling members of the <xref:System.ServiceModel.Security.X509CertificateRecipientServiceCredential> object returned by this property.  
  
 You can also set this value using the [&lt;certificate&gt;](~/docs/framework/configure-apps/file-schema/wcf/certificate-for-identity.md) element in a client application configuration file.  
  
   
  
## Examples  
 This code shows how to specify the certificate that a service uses.  
  
 A <xref:System.ServiceModel.ServiceHost> class is created, followed by a single complex code statement that does the following:  
  
-   <xref:System.ServiceModel.ServiceHostBase.Credentials%2A> property is used to access an instance of <xref:System.ServiceModel.Description.ServiceCredentials>.  
  
-   The <xref:System.ServiceModel.Description.ServiceCredentials> instance then invokes <xref:System.ServiceModel.Description.ServiceCredentials.ServiceCertificate%2A>.  
  
-   The <xref:System.ServiceModel.Description.ServiceCredentials.ServiceCertificate%2A> property returns a <xref:System.ServiceModel.Security.X509CertificateRecipientServiceCredential> object, on which the <xref:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate%2A> method is then called.  
  
 [!code-csharp[S_UEServiceCredentials#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicecredentials/cs/program.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Sub AddBindingParameters (description As ServiceDescription, serviceHostBase As ServiceHostBase, endpoints As Collection(Of ServiceEndpoint), parameters As BindingParameterCollection) Implements IServiceBehavior.AddBindingParameters" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IServiceBehavior::AddBindingParameters;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IServiceBehavior.AddBindingParameters : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase * System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit&#xA;override this.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase * System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="serviceCredentials.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters (description, serviceHostBase, endpoints, parameters)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">A description of the service.</param>
        <param name="serviceHostBase">The service host base.</param>
        <param name="endpoints">A collection of service endpoints.</param>
        <param name="parameters">A collection of parameters.</param>
        <summary>Adds this instance to a binding parameter collection. This is an infrastructure method and not intended to be called directly.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Some binding elements can sometimes access extra information when building factories. This class is a collection of objects that contain this extra information.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parameters" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyDispatchBehavior (description As ServiceDescription, serviceHostBase As ServiceHostBase) Implements IServiceBehavior.ApplyDispatchBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::ApplyDispatchBehavior;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit" Usage="serviceCredentials.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior (description, serviceHostBase)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">The service description.</param>
        <param name="serviceHostBase">The service host base.</param>
        <summary>Apply the dispatch behavior. This is an infrastructure method and not intended to be called directly.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Not implemented.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Sub Validate (description As ServiceDescription, serviceHostBase As ServiceHostBase) Implements IServiceBehavior.Validate" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.Validate(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::Validate;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IServiceBehavior.Validate : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.System.ServiceModel.Description.IServiceBehavior.Validate : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit" Usage="serviceCredentials.System.ServiceModel.Description.IServiceBehavior.Validate (description, serviceHostBase)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">The service description.</param>
        <param name="serviceHostBase">The service host base.</param>
        <summary>Validates a service description. This is an infrastructure method and not intended to be called directly.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Not implemented.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseIdentityConfiguration">
      <MemberSignature Language="C#" Value="public bool UseIdentityConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseIdentityConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.UseIdentityConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Property UseIdentityConfiguration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseIdentityConfiguration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseIdentityConfiguration : bool with get, set" Usage="System.ServiceModel.Description.ServiceCredentials.UseIdentityConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether the service credential uses identity configuration.</summary>
        <value>
          <see langword="true" /> if the service credential uses identity configuration; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserNameAuthentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.UserNamePasswordServiceCredential UserNameAuthentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.UserNamePasswordServiceCredential UserNameAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.UserNameAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserNameAuthentication As UserNamePasswordServiceCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::UserNamePasswordServiceCredential ^ UserNameAuthentication { System::ServiceModel::Security::UserNamePasswordServiceCredential ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserNameAuthentication : System.ServiceModel.Security.UserNamePasswordServiceCredential" Usage="System.ServiceModel.Description.ServiceCredentials.UserNameAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.UserNamePasswordServiceCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current user name/password authentication settings for this service.</summary>
        <value>A <see cref="T:System.ServiceModel.Security.UserNamePasswordServiceCredential" /> instance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can specify the settings of the user name/password authentication by calling members of the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential> class on this instance, such as <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> and <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A>.  
  
   
  
## Examples  
 The following code shows how to use this property to get the instance of the credential used by the service.  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsAuthentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.WindowsServiceCredential WindowsAuthentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.WindowsServiceCredential WindowsAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.WindowsAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowsAuthentication As WindowsServiceCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::WindowsServiceCredential ^ WindowsAuthentication { System::ServiceModel::Security::WindowsServiceCredential ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowsAuthentication : System.ServiceModel.Security.WindowsServiceCredential" Usage="System.ServiceModel.Description.ServiceCredentials.WindowsAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.WindowsServiceCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current Windows authentication settings for this service.</summary>
        <value>A <see cref="T:System.ServiceModel.Security.WindowsServiceCredential" /> instance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this class to specify whether to allow anonymous Windows users access by setting the <xref:System.ServiceModel.Security.WindowsServiceCredential.AllowAnonymousLogons%2A> property. Also, use this class to specify whether to include a group information to which users belong in the <xref:System.IdentityModel.Policy.AuthorizationContext> by setting the <xref:System.ServiceModel.Security.WindowsServiceCredential.IncludeWindowsGroups%2A> property.  
  
   
  
## Examples  
 The following code shows how to use this property to get the instance of the credential used by the service.  
  
 [!code-csharp[S_UEWindowsServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uewindowsservicecredential/cs/source.cs#1)]
 [!code-vb[S_UEWindowsServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uewindowsservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

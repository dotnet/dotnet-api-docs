<Type Name="LoggerMessageAttribute" FullName="Microsoft.Extensions.Logging.LoggerMessageAttribute">
  <TypeSignature Language="C#" Value="public sealed class LoggerMessageAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LoggerMessageAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.LoggerMessageAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LoggerMessageAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="F#" Value="type LoggerMessageAttribute = class&#xA;    inherit Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoggerMessageAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Method)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Method)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides information to guide the production of a strongly-typed logging method.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

The method this attribute is applied to:

   - Must be a partial method.

   - Must return `void`.

   - Must not be generic.

   - Must have an <xref:Microsoft.Extensions.Logging.ILogger> as one of its parameters.

   - Must have a <xref:Microsoft.Extensions.Logging.LogLevel> as one of its parameters.

   - None of the parameters can be generic.



      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoggerMessageAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerMessageAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LoggerMessageAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.LoggerMessageAttribute" /> class which is used to guide the production of a strongly-typed logging method.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoggerMessageAttribute (int eventId, Microsoft.Extensions.Logging.LogLevel level, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 eventId, valuetype Microsoft.Extensions.Logging.LogLevel level, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerMessageAttribute.#ctor(System.Int32,Microsoft.Extensions.Logging.LogLevel,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventId As Integer, level As LogLevel, message As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Logging.LoggerMessageAttribute : int * Microsoft.Extensions.Logging.LogLevel * string -&gt; Microsoft.Extensions.Logging.LoggerMessageAttribute" Usage="new Microsoft.Extensions.Logging.LoggerMessageAttribute (eventId, level, message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LoggerMessageAttribute(int eventId, Microsoft::Extensions::Logging::LogLevel level, System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="level" Type="Microsoft.Extensions.Logging.LogLevel" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">The log event ID.</param>
        <param name="level">The log level.</param>
        <param name="message">The format string of the log message.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.LoggerMessageAttribute" /> class, which is used to guide the production of a strongly typed logging method.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventId">
      <MemberSignature Language="C#" Value="public int EventId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EventId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.LoggerMessageAttribute.EventId" />
      <MemberSignature Language="VB.NET" Value="Public Property EventId As Integer" />
      <MemberSignature Language="F#" Value="member this.EventId : int with get, set" Usage="Microsoft.Extensions.Logging.LoggerMessageAttribute.EventId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EventId { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the logging event id for the logging method.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventName">
      <MemberSignature Language="C#" Value="public string? EventName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.LoggerMessageAttribute.EventName" />
      <MemberSignature Language="VB.NET" Value="Public Property EventName As String" />
      <MemberSignature Language="F#" Value="member this.EventName : string with get, set" Usage="Microsoft.Extensions.Logging.LoggerMessageAttribute.EventName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EventName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the logging event name for the logging method.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This will equal the method name if not specified.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.LogLevel Level { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Logging.LogLevel Level" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.LoggerMessageAttribute.Level" />
      <MemberSignature Language="VB.NET" Value="Public Property Level As LogLevel" />
      <MemberSignature Language="F#" Value="member this.Level : Microsoft.Extensions.Logging.LogLevel with get, set" Usage="Microsoft.Extensions.Logging.LoggerMessageAttribute.Level" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Logging::LogLevel Level { Microsoft::Extensions::Logging::LogLevel get(); void set(Microsoft::Extensions::Logging::LogLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LogLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the logging level for the logging method.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.LoggerMessageAttribute.Message" />
      <MemberSignature Language="VB.NET" Value="Public Property Message As String" />
      <MemberSignature Language="F#" Value="member this.Message : string with get, set" Usage="Microsoft.Extensions.Logging.LoggerMessageAttribute.Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Message { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the message text for the logging method.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipEnabledCheck">
      <MemberSignature Language="C#" Value="public bool SkipEnabledCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipEnabledCheck" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.LoggerMessageAttribute.SkipEnabledCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipEnabledCheck As Boolean" />
      <MemberSignature Language="F#" Value="member this.SkipEnabledCheck : bool with get, set" Usage="Microsoft.Extensions.Logging.LoggerMessageAttribute.SkipEnabledCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipEnabledCheck { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the flag to skip the <see langword="IsEnabled" /> check for the logging method.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

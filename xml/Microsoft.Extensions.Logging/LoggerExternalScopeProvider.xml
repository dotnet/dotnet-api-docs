<Type Name="LoggerExternalScopeProvider" FullName="Microsoft.Extensions.Logging.LoggerExternalScopeProvider">
  <TypeSignature Language="C#" Value="public class LoggerExternalScopeProvider : Microsoft.Extensions.Logging.IExternalScopeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LoggerExternalScopeProvider extends System.Object implements class Microsoft.Extensions.Logging.IExternalScopeProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.LoggerExternalScopeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class LoggerExternalScopeProvider&#xA;Implements IExternalScopeProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoggerExternalScopeProvider : Microsoft::Extensions::Logging::IExternalScopeProvider" />
  <TypeSignature Language="F#" Value="type LoggerExternalScopeProvider = class&#xA;    interface IExternalScopeProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Logging.IExternalScopeProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Default implementation of <see cref="T:Microsoft.Extensions.Logging.IExternalScopeProvider" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoggerExternalScopeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExternalScopeProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LoggerExternalScopeProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new <see cref="T:Microsoft.Extensions.Logging.LoggerExternalScopeProvider" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachScope&lt;TState&gt;">
      <MemberSignature Language="C#" Value="public void ForEachScope&lt;TState&gt; (Action&lt;object,TState&gt; callback, TState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachScope&lt;TState&gt;(class System.Action`2&lt;object, !!TState&gt; callback, !!TState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExternalScopeProvider.ForEachScope``1(System.Action{System.Object,``0},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForEachScope(Of TState) (callback As Action(Of Object, TState), state As TState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TState&gt;&#xA; virtual void ForEachScope(Action&lt;System::Object ^, TState&gt; ^ callback, TState state);" />
      <MemberSignature Language="F#" Value="abstract member ForEachScope : Action&lt;obj, 'State&gt; * 'State -&gt; unit&#xA;override this.ForEachScope : Action&lt;obj, 'State&gt; * 'State -&gt; unit" Usage="loggerExternalScopeProvider.ForEachScope (callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Logging.IExternalScopeProvider.ForEachScope``1(System.Action{System.Object,``0},``0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TState" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Object,TState&gt;" />
        <Parameter Name="state" Type="TState" />
      </Parameters>
      <Docs>
        <typeparam name="TState">To be added.</typeparam>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>Executes callback for each currently active scope objects in order of creation.
 All callbacks are guaranteed to be called inline from this method.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public IDisposable Push (object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable Push(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExternalScopeProvider.Push(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Push (state As Object) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IDisposable ^ Push(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Push : obj -&gt; IDisposable&#xA;override this.Push : obj -&gt; IDisposable" Usage="loggerExternalScopeProvider.Push state" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Logging.IExternalScopeProvider.Push(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>Adds scope object to the list.</summary>
        <returns>The <see cref="T:System.IDisposable" /> token that removes scope on dispose.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>

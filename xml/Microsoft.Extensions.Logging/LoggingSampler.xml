<Type Name="LoggingSampler" FullName="Microsoft.Extensions.Logging.LoggingSampler">
  <TypeSignature Language="C#" Value="public abstract class LoggingSampler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LoggingSampler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.LoggingSampler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class LoggingSampler" />
  <TypeSignature Language="F#" Value="type LoggingSampler = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoggingSampler abstract" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
    <AssemblyVersion>9.5.0.0</AssemblyVersion>
    <AssemblyVersion>9.6.0.0</AssemblyVersion>
    <AssemblyVersion>9.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Controls the number of samples of log records collected and sent to the backend.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LoggingSampler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggingSampler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LoggingSampler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSample&lt;TState&gt;">
      <MemberSignature Language="C#" Value="public abstract bool ShouldSample&lt;TState&gt; (in Microsoft.Extensions.Logging.Abstractions.LogEntry&lt;TState&gt; logEntry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSample&lt;TState&gt;([in]valuetype Microsoft.Extensions.Logging.Abstractions.LogEntry`1&lt;!!TState&gt; logEntry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggingSampler.ShouldSample``1(Microsoft.Extensions.Logging.Abstractions.LogEntry{``0}@|System.Runtime.InteropServices.InAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ShouldSample(Of TState) (logEntry As LogEntry(Of TState)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldSample : LogEntry -&gt; bool" Usage="loggingSampler.ShouldSample logEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TState&gt;&#xA; abstract bool ShouldSample(Microsoft::Extensions::Logging::Abstractions::LogEntry&lt;TState&gt; ^ logEntry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TState" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="logEntry" Type="Microsoft.Extensions.Logging.Abstractions.LogEntry&lt;TState&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp;netframework-4.7.1-pp;netframework-4.7.2-pp;netframework-4.8.1-pp;netframework-4.8-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp;netframework-4.7.1-pp;netframework-4.7.2-pp;netframework-4.8.1-pp;netframework-4.8-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TState">The type of the log entry state.</typeparam>
        <param name="logEntry">The log entry used to make the sampling decision for.</param>
        <summary>
            Makes a sampling decision for the provided <paramref name="logEntry" />.
            </summary>
        <returns>
          <see langword="true" /> if the log record should be sampled; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

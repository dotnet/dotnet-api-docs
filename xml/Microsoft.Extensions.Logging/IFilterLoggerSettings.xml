<Type Name="IFilterLoggerSettings" FullName="Microsoft.Extensions.Logging.IFilterLoggerSettings">
  <TypeSignature Language="C#" Value="public interface IFilterLoggerSettings" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFilterLoggerSettings" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.IFilterLoggerSettings" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFilterLoggerSettings" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFilterLoggerSettings" />
  <TypeSignature Language="F#" Value="type IFilterLoggerSettings = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging.Filter</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Filter settings for messages logged by an <see cref="T:Microsoft.Extensions.Logging.ILogger" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ChangeToken">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.IChangeToken ChangeToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Primitives.IChangeToken ChangeToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.IFilterLoggerSettings.ChangeToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangeToken As IChangeToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Primitives::IChangeToken ^ ChangeToken { Microsoft::Extensions::Primitives::IChangeToken ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChangeToken : Microsoft.Extensions.Primitives.IChangeToken" Usage="Microsoft.Extensions.Logging.IFilterLoggerSettings.ChangeToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Filter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.IChangeToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.IFilterLoggerSettings Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Logging.IFilterLoggerSettings Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.IFilterLoggerSettings.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Function Reload () As IFilterLoggerSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Logging::IFilterLoggerSettings ^ Reload();" />
      <MemberSignature Language="F#" Value="abstract member Reload : unit -&gt; Microsoft.Extensions.Logging.IFilterLoggerSettings" Usage="iFilterLoggerSettings.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Filter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.IFilterLoggerSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetSwitch">
      <MemberSignature Language="C#" Value="public bool TryGetSwitch (string name, out Microsoft.Extensions.Logging.LogLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetSwitch(string name, [out] valuetype Microsoft.Extensions.Logging.LogLevel&amp; level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.IFilterLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetSwitch (name As String, ByRef level As LogLevel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetSwitch(System::String ^ name, [Runtime::InteropServices::Out] Microsoft::Extensions::Logging::LogLevel % level);" />
      <MemberSignature Language="F#" Value="abstract member TryGetSwitch : string * LogLevel -&gt; bool" Usage="iFilterLoggerSettings.TryGetSwitch (name, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Filter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="level" Type="Microsoft.Extensions.Logging.LogLevel" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="level">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

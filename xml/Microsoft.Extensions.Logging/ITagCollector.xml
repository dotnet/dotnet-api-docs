<Type Name="ITagCollector" FullName="Microsoft.Extensions.Logging.ITagCollector">
  <TypeSignature Language="C#" Value="public interface ITagCollector" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ITagCollector" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.ITagCollector" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITagCollector" />
  <TypeSignature Language="F#" Value="type ITagCollector = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITagCollector" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.4.0.0</AssemblyVersion>
    <AssemblyVersion>8.5.0.0</AssemblyVersion>
    <AssemblyVersion>8.6.0.0</AssemblyVersion>
    <AssemblyVersion>8.7.0.0</AssemblyVersion>
    <AssemblyVersion>8.8.0.0</AssemblyVersion>
    <AssemblyVersion>8.9.1.0</AssemblyVersion>
    <AssemblyVersion>8.10.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Interface given to custom tag providers, enabling them to emit tags.
            </summary>
    <remarks>
            See <see cref="T:Microsoft.Extensions.Logging.TagProviderAttribute" /> for details on how this interface is used.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string tagName, object? tagValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string tagName, object tagValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.ITagCollector.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (tagName As String, tagValue As Object)" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj -&gt; unit" Usage="iTagCollector.Add (tagName, tagValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ tagName, System::Object ^ tagValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="tagValue" Type="System.Object">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="tagName">The name of the tag to add.</param>
        <param name="tagValue">The value of the tag to add.</param>
        <summary>
            Adds a tag.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tagName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="tagName" /> is empty or contains exclusively whitespace,
            or when a tag of the same name has already been added.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string tagName, object? tagValue, Microsoft.Extensions.Compliance.Classification.DataClassificationSet classifications);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string tagName, object tagValue, class Microsoft.Extensions.Compliance.Classification.DataClassificationSet classifications) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.ITagCollector.Add(System.String,System.Object,Microsoft.Extensions.Compliance.Classification.DataClassificationSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (tagName As String, tagValue As Object, classifications As DataClassificationSet)" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj * Microsoft.Extensions.Compliance.Classification.DataClassificationSet -&gt; unit" Usage="iTagCollector.Add (tagName, tagValue, classifications)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ tagName, System::Object ^ tagValue, Microsoft::Extensions::Compliance::Classification::DataClassificationSet ^ classifications);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="tagValue" Type="System.Object">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="classifications" Type="Microsoft.Extensions.Compliance.Classification.DataClassificationSet" />
      </Parameters>
      <Docs>
        <param name="tagName">The name of the tag to add.</param>
        <param name="tagValue">The value of the tag to add.</param>
        <param name="classifications">The data classifications of the tag value.</param>
        <summary>
            Adds a tag.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tagName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="tagName" /> is empty or contains exclusively whitespace,
            or when a tag of the same name has already been added.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>

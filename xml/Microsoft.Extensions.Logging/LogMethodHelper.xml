<Type Name="LogMethodHelper" FullName="Microsoft.Extensions.Logging.LogMethodHelper">
  <TypeSignature Language="C#" Value="public sealed class LogMethodHelper : System.Collections.Generic.List&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;, Microsoft.Extensions.Diagnostics.Enrichment.IEnrichmentTagCollector, Microsoft.Extensions.Logging.ITagCollector, Microsoft.Extensions.ObjectPool.IResettable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LogMethodHelper extends System.Collections.Generic.List`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; implements class Microsoft.Extensions.Diagnostics.Enrichment.IEnrichmentTagCollector, class Microsoft.Extensions.Logging.ITagCollector, class Microsoft.Extensions.ObjectPool.IResettable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.LogMethodHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LogMethodHelper&#xA;Inherits List(Of KeyValuePair(Of String, Object))&#xA;Implements IEnrichmentTagCollector, IResettable, ITagCollector" />
  <TypeSignature Language="F#" Value="type LogMethodHelper = class&#xA;    inherit List&lt;KeyValuePair&lt;string, obj&gt;&gt;&#xA;    interface ITagCollector&#xA;    interface IEnrichmentTagCollector&#xA;    interface IResettable" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogMethodHelper sealed : System::Collections::Generic::List&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;, Microsoft::Extensions::Diagnostics::Enrichment::IEnrichmentTagCollector, Microsoft::Extensions::Logging::ITagCollector, Microsoft::Extensions::ObjectPool::IResettable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Generic.List&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Diagnostics.Enrichment.IEnrichmentTagCollector</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Logging.ITagCollector</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Extensions.ObjectPool.IResettable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 0, 1, 2 })]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 0, 1, 2 })&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogMethodHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LogMethodHelper.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogMethodHelper();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string tagName, object? tagValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string tagName, object tagValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LogMethodHelper.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (tagName As String, tagValue As Object)" />
      <MemberSignature Language="F#" Value="override this.Add : string * obj -&gt; unit" Usage="logMethodHelper.Add (tagName, tagValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ tagName, System::Object ^ tagValue);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Logging.ITagCollector.Add(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="tagValue" Type="System.Object">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="tagName">To be added.</param>
        <param name="tagValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string tagName, object? tagValue, Microsoft.Extensions.Compliance.Classification.DataClassification classification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string tagName, object tagValue, valuetype Microsoft.Extensions.Compliance.Classification.DataClassification classification) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LogMethodHelper.Add(System.String,System.Object,Microsoft.Extensions.Compliance.Classification.DataClassification)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (tagName As String, tagValue As Object, classification As DataClassification)" />
      <MemberSignature Language="F#" Value="override this.Add : string * obj * Microsoft.Extensions.Compliance.Classification.DataClassification -&gt; unit" Usage="logMethodHelper.Add (tagName, tagValue, classification)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ tagName, System::Object ^ tagValue, Microsoft::Extensions::Compliance::Classification::DataClassification classification);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Logging.ITagCollector.Add(System.String,System.Object,Microsoft.Extensions.Compliance.Classification.DataClassification)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0003", UrlFormat="https://aka.ms/dotnet-extensions-warnings/{0}")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0003", UrlFormat="https://aka.ms/dotnet-extensions-warnings/{0}")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="tagValue" Type="System.Object">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="classification" Type="Microsoft.Extensions.Compliance.Classification.DataClassification" />
      </Parameters>
      <Docs>
        <param name="tagName">To be added.</param>
        <param name="tagValue">To be added.</param>
        <param name="classification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHelper">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LogMethodHelper GetHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LogMethodHelper GetHelper() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LogMethodHelper.GetHelper" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHelper () As LogMethodHelper" />
      <MemberSignature Language="F#" Value="static member GetHelper : unit -&gt; Microsoft.Extensions.Logging.LogMethodHelper" Usage="Microsoft.Extensions.Logging.LogMethodHelper.GetHelper " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Extensions::Logging::LogMethodHelper ^ GetHelper();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LogMethodHelper</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Extensions.Diagnostics.Enrichment.IEnrichmentTagCollector.Add">
      <MemberSignature Language="C#" Value="void IEnrichmentTagCollector.Add (string tagName, object tagValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Extensions.Diagnostics.Enrichment.IEnrichmentTagCollector.Add(string tagName, object tagValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LogMethodHelper.Microsoft#Extensions#Diagnostics#Enrichment#IEnrichmentTagCollector#Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (tagName As String, tagValue As Object) Implements IEnrichmentTagCollector.Add" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Extensions.Diagnostics.Enrichment.IEnrichmentTagCollector.Add : string * obj -&gt; unit&#xA;override this.Microsoft.Extensions.Diagnostics.Enrichment.IEnrichmentTagCollector.Add : string * obj -&gt; unit" Usage="logMethodHelper.Microsoft.Extensions.Diagnostics.Enrichment.IEnrichmentTagCollector.Add (tagName, tagValue)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.Extensions.Diagnostics.Enrichment.IEnrichmentTagCollector.Add(System::String ^ tagName, System::Object ^ tagValue) = Microsoft::Extensions::Diagnostics::Enrichment::IEnrichmentTagCollector::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Diagnostics.Enrichment.IEnrichmentTagCollector.Add(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="tagValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="tagName">To be added.</param>
        <param name="tagValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.LogMethodHelper.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterName As String" />
      <MemberSignature Language="F#" Value="member this.ParameterName : string with get, set" Usage="Microsoft.Extensions.Logging.LogMethodHelper.ParameterName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnHelper">
      <MemberSignature Language="C#" Value="public static void ReturnHelper (Microsoft.Extensions.Logging.LogMethodHelper helper);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReturnHelper(class Microsoft.Extensions.Logging.LogMethodHelper helper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LogMethodHelper.ReturnHelper(Microsoft.Extensions.Logging.LogMethodHelper)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReturnHelper (helper As LogMethodHelper)" />
      <MemberSignature Language="F#" Value="static member ReturnHelper : Microsoft.Extensions.Logging.LogMethodHelper -&gt; unit" Usage="Microsoft.Extensions.Logging.LogMethodHelper.ReturnHelper helper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReturnHelper(Microsoft::Extensions::Logging::LogMethodHelper ^ helper);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="helper" Type="Microsoft.Extensions.Logging.LogMethodHelper" />
      </Parameters>
      <Docs>
        <param name="helper">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipEnabledCheckOptions">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LogDefineOptions SkipEnabledCheckOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.Extensions.Logging.LogDefineOptions SkipEnabledCheckOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.LogMethodHelper.SkipEnabledCheckOptions" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SkipEnabledCheckOptions As LogDefineOptions" />
      <MemberSignature Language="F#" Value="static member SkipEnabledCheckOptions : Microsoft.Extensions.Logging.LogDefineOptions" Usage="Microsoft.Extensions.Logging.LogMethodHelper.SkipEnabledCheckOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::Extensions::Logging::LogDefineOptions ^ SkipEnabledCheckOptions { Microsoft::Extensions::Logging::LogDefineOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LogDefineOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stringify">
      <MemberSignature Language="C#" Value="public static string Stringify (System.Collections.IEnumerable? enumerable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Stringify(class System.Collections.IEnumerable enumerable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LogMethodHelper.Stringify(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stringify (enumerable As IEnumerable) As String" />
      <MemberSignature Language="F#" Value="static member Stringify : System.Collections.IEnumerable -&gt; string" Usage="Microsoft.Extensions.Logging.LogMethodHelper.Stringify enumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Stringify(System::Collections::IEnumerable ^ enumerable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumerable" Type="System.Collections.IEnumerable">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="enumerable">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stringify&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static string Stringify&lt;TKey,TValue&gt; (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;? enumerable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Stringify&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; enumerable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LogMethodHelper.Stringify``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stringify(Of TKey, TValue) (enumerable As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As String" />
      <MemberSignature Language="F#" Value="static member Stringify : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; string" Usage="Microsoft.Extensions.Logging.LogMethodHelper.Stringify enumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::String ^ Stringify(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ enumerable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="enumerable" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 0, 1, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 0, 1, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TKey">To be added.</typeparam>
        <typeparam name="TValue">To be added.</typeparam>
        <param name="enumerable">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReset">
      <MemberSignature Language="C#" Value="public bool TryReset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LogMethodHelper.TryReset" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReset () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryReset : unit -&gt; bool&#xA;override this.TryReset : unit -&gt; bool" Usage="logMethodHelper.TryReset " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryReset();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.ObjectPool.IResettable.TryReset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="GlobalBufferLoggingBuilderExtensions" FullName="Microsoft.Extensions.Logging.GlobalBufferLoggingBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class GlobalBufferLoggingBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit GlobalBufferLoggingBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.GlobalBufferLoggingBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module GlobalBufferLoggingBuilderExtensions" />
  <TypeSignature Language="F#" Value="type GlobalBufferLoggingBuilderExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class GlobalBufferLoggingBuilderExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
    <AssemblyVersion>9.5.0.0</AssemblyVersion>
    <AssemblyVersion>9.6.0.0</AssemblyVersion>
    <AssemblyVersion>9.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Lets you register log buffering in a dependency injection container.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGlobalBuffer">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddGlobalBuffer (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Microsoft.Extensions.Configuration.IConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddGlobalBuffer(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class Microsoft.Extensions.Configuration.IConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.GlobalBufferLoggingBuilderExtensions.AddGlobalBuffer(Microsoft.Extensions.Logging.ILoggingBuilder,Microsoft.Extensions.Configuration.IConfiguration)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddGlobalBuffer (builder As ILoggingBuilder, configuration As IConfiguration) As ILoggingBuilder" />
      <MemberSignature Language="F#" Value="static member AddGlobalBuffer : Microsoft.Extensions.Logging.ILoggingBuilder * Microsoft.Extensions.Configuration.IConfiguration -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.GlobalBufferLoggingBuilderExtensions.AddGlobalBuffer (builder, configuration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddGlobalBuffer(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Microsoft::Extensions::Configuration::IConfiguration ^ configuration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="configuration" Type="Microsoft.Extensions.Configuration.IConfiguration" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />.</param>
        <param name="configuration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> to add.</param>
        <summary>
            Adds global log buffering to the logging infrastructure.
            </summary>
        <returns>The value of <paramref name="builder" />.</returns>
        <remarks>
            Matched logs will be buffered and can optionally be flushed and emitted.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="builder" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddGlobalBuffer">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddGlobalBuffer (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Action&lt;Microsoft.Extensions.Diagnostics.Buffering.GlobalLogBufferingOptions&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddGlobalBuffer(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class System.Action`1&lt;class Microsoft.Extensions.Diagnostics.Buffering.GlobalLogBufferingOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.GlobalBufferLoggingBuilderExtensions.AddGlobalBuffer(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Diagnostics.Buffering.GlobalLogBufferingOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddGlobalBuffer (builder As ILoggingBuilder, configure As Action(Of GlobalLogBufferingOptions)) As ILoggingBuilder" />
      <MemberSignature Language="F#" Value="static member AddGlobalBuffer : Microsoft.Extensions.Logging.ILoggingBuilder * Action&lt;Microsoft.Extensions.Diagnostics.Buffering.GlobalLogBufferingOptions&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.GlobalBufferLoggingBuilderExtensions.AddGlobalBuffer (builder, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddGlobalBuffer(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Action&lt;Microsoft::Extensions::Diagnostics::Buffering::GlobalLogBufferingOptions ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Diagnostics.Buffering.GlobalLogBufferingOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />.</param>
        <param name="configure">Configure buffer options.</param>
        <summary>
            Adds global log buffering to the logging infrastructure.
            </summary>
        <returns>The value of <paramref name="builder" />.</returns>
        <remarks>
            Matched logs will be buffered and can optionally be flushed and emitted.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="builder" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddGlobalBuffer">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddGlobalBuffer (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Microsoft.Extensions.Logging.LogLevel? logLevel = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddGlobalBuffer(class Microsoft.Extensions.Logging.ILoggingBuilder builder, valuetype System.Nullable`1&lt;valuetype Microsoft.Extensions.Logging.LogLevel&gt; logLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.GlobalBufferLoggingBuilderExtensions.AddGlobalBuffer(Microsoft.Extensions.Logging.ILoggingBuilder,System.Nullable{Microsoft.Extensions.Logging.LogLevel})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddGlobalBuffer (builder As ILoggingBuilder, Optional logLevel As Nullable(Of LogLevel) = Nothing) As ILoggingBuilder" />
      <MemberSignature Language="F#" Value="static member AddGlobalBuffer : Microsoft.Extensions.Logging.ILoggingBuilder * Nullable&lt;Microsoft.Extensions.Logging.LogLevel&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.GlobalBufferLoggingBuilderExtensions.AddGlobalBuffer (builder, logLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="logLevel" Type="System.Nullable&lt;Microsoft.Extensions.Logging.LogLevel&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />.</param>
        <param name="logLevel">The log level (and below) to apply the buffer to.</param>
        <summary>
            Adds global log buffering to the logging infrastructure.
            </summary>
        <returns>The value of <paramref name="builder" />.</returns>
        <remarks>
            Matched logs will be buffered and can optionally be flushed and emitted.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="builder" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

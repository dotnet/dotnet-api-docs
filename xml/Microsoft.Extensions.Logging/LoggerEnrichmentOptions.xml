<Type Name="LoggerEnrichmentOptions" FullName="Microsoft.Extensions.Logging.LoggerEnrichmentOptions">
  <TypeSignature Language="C#" Value="public class LoggerEnrichmentOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LoggerEnrichmentOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.LoggerEnrichmentOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class LoggerEnrichmentOptions" />
  <TypeSignature Language="F#" Value="type LoggerEnrichmentOptions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoggerEnrichmentOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.4.0.0</AssemblyVersion>
    <AssemblyVersion>8.5.0.0</AssemblyVersion>
    <AssemblyVersion>8.6.0.0</AssemblyVersion>
    <AssemblyVersion>8.7.0.0</AssemblyVersion>
    <AssemblyVersion>8.8.0.0</AssemblyVersion>
    <AssemblyVersion>8.9.1.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Options for logging enrichment features.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoggerEnrichmentOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerEnrichmentOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LoggerEnrichmentOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureStackTraces">
      <MemberSignature Language="C#" Value="public bool CaptureStackTraces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CaptureStackTraces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.LoggerEnrichmentOptions.CaptureStackTraces" />
      <MemberSignature Language="VB.NET" Value="Public Property CaptureStackTraces As Boolean" />
      <MemberSignature Language="F#" Value="member this.CaptureStackTraces : bool with get, set" Usage="Microsoft.Extensions.Logging.LoggerEnrichmentOptions.CaptureStackTraces" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CaptureStackTraces { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to include stack traces when an exception is logged.
            </summary>
        <value>
            The default value is <see langword="false" />.
            </value>
        <remarks>
            When set to <see langword="true" /> and exceptions are logged, the logger will add exception stack trace
            with inner exception as a separate key-value pair with key 'stackTrace'. The maximum length of the column
            defaults to 4096 characters and can be modified by setting the <see cref="P:Microsoft.Extensions.Logging.LoggerEnrichmentOptions.MaxStackTraceLength" /> property.
            The stack trace beyond the current limit will be truncated.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeExceptionMessage">
      <MemberSignature Language="C#" Value="public bool IncludeExceptionMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeExceptionMessage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.LoggerEnrichmentOptions.IncludeExceptionMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeExceptionMessage As Boolean" />
      <MemberSignature Language="F#" Value="member this.IncludeExceptionMessage : bool with get, set" Usage="Microsoft.Extensions.Logging.LoggerEnrichmentOptions.IncludeExceptionMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeExceptionMessage { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to include the exception message when an exception is logged.
            </summary>
        <value>
            This defaults to <see langword="false" />.
            </value>
        <remarks>
            When both <see cref="P:Microsoft.Extensions.Logging.LoggerEnrichmentOptions.IncludeExceptionMessage" /> and <see cref="P:Microsoft.Extensions.Logging.LoggerEnrichmentOptions.CaptureStackTraces" /> are set to
            <see langword="true" /> exception messages are also included in stack traces.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxStackTraceLength">
      <MemberSignature Language="C#" Value="public int MaxStackTraceLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxStackTraceLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.LoggerEnrichmentOptions.MaxStackTraceLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxStackTraceLength As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxStackTraceLength : int with get, set" Usage="Microsoft.Extensions.Logging.LoggerEnrichmentOptions.MaxStackTraceLength" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxStackTraceLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Range(2048, 32768)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Range(2048, 32768)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the maximum stack trace length to emit for a given log record.
             </summary>
        <value>
             The default value is 4096.
             </value>
        <remarks>
             When set to a value less than 2 KB or greater than 32 KB, an exception will be thrown.
            
             This property has no effect if <see cref="P:Microsoft.Extensions.Logging.LoggerEnrichmentOptions.CaptureStackTraces" /> is <see langword="false" />.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseFileInfoForStackTraces">
      <MemberSignature Language="C#" Value="public bool UseFileInfoForStackTraces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseFileInfoForStackTraces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.LoggerEnrichmentOptions.UseFileInfoForStackTraces" />
      <MemberSignature Language="VB.NET" Value="Public Property UseFileInfoForStackTraces As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseFileInfoForStackTraces : bool with get, set" Usage="Microsoft.Extensions.Logging.LoggerEnrichmentOptions.UseFileInfoForStackTraces" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseFileInfoForStackTraces { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets a value indicating whether to consult debugging files (PDB files) when producing stack traces.
             </summary>
        <value>
             The default value is <see langword="false" />.
             </value>
        <remarks>
             Reading available debugging files produces richer stack traces, but can cost a substantial amount of time
             to generate. As a result, this option should only be turned on in development scenarios, not for production use.
            
             This property has no effect if <see cref="P:Microsoft.Extensions.Logging.LoggerEnrichmentOptions.CaptureStackTraces" /> is <see langword="false" />.
             
             This defaults to <see langword="false" />.
             </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

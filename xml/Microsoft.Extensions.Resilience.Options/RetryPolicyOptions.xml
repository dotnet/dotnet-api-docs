<Type Name="RetryPolicyOptions" FullName="Microsoft.Extensions.Resilience.Options.RetryPolicyOptions">
  <TypeSignature Language="C#" Value="public class RetryPolicyOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RetryPolicyOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Resilience.Options.RetryPolicyOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class RetryPolicyOptions" />
  <TypeSignature Language="F#" Value="type RetryPolicyOptions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class RetryPolicyOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Retry policy options.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RetryPolicyOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.Options.RetryPolicyOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RetryPolicyOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackoffType">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Resilience.Options.BackoffType BackoffType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Resilience.Options.BackoffType BackoffType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Resilience.Options.RetryPolicyOptions.BackoffType" />
      <MemberSignature Language="VB.NET" Value="Public Property BackoffType As BackoffType" />
      <MemberSignature Language="F#" Value="member this.BackoffType : Microsoft.Extensions.Resilience.Options.BackoffType with get, set" Usage="Microsoft.Extensions.Resilience.Options.RetryPolicyOptions.BackoffType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Resilience::Options::BackoffType BackoffType { Microsoft::Extensions::Resilience::Options::BackoffType get(); void set(Microsoft::Extensions::Resilience::Options::BackoffType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.Options.BackoffType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the type of the back-off.
            </summary>
        <value>To be added.</value>
        <remarks>
            Default set to <see cref="F:Microsoft.Extensions.Resilience.Options.BackoffType.ExponentialWithJitter" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseDelay">
      <MemberSignature Language="C#" Value="public TimeSpan BaseDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan BaseDelay" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Resilience.Options.RetryPolicyOptions.BaseDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseDelay As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.BaseDelay : TimeSpan with get, set" Usage="Microsoft.Extensions.Resilience.Options.RetryPolicyOptions.BaseDelay" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan BaseDelay { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the delay between retries based on the backoff type, <see cref="T:Microsoft.Extensions.Resilience.Options.BackoffType" />.
            </summary>
        <value>To be added.</value>
        <remarks>
            Default set to 2 seconds.
            For <see cref="F:Microsoft.Extensions.Resilience.Options.BackoffType.ExponentialWithJitter" /> this represents the median delay to target before the first retry.
            For the <see cref="F:Microsoft.Extensions.Resilience.Options.BackoffType.Linear" /> it represents the initial delay, the following delays increasing linearly with this value.
            In case of <see cref="F:Microsoft.Extensions.Resilience.Options.BackoffType.Constant" /> it represents the constant delay between retries.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="InfiniteRetry">
      <MemberSignature Language="C#" Value="public const int InfiniteRetry = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 InfiniteRetry = (-1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Extensions.Resilience.Options.RetryPolicyOptions.InfiniteRetry" />
      <MemberSignature Language="VB.NET" Value="Public Const InfiniteRetry As Integer  = -1" />
      <MemberSignature Language="F#" Value="val mutable InfiniteRetry : int" Usage="Microsoft.Extensions.Resilience.Options.RetryPolicyOptions.InfiniteRetry" />
      <MemberSignature Language="C++ CLI" Value="public: int InfiniteRetry = -1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>
            Magic value representing infinite retries.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRetryAsync">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.Extensions.Resilience.Options.RetryActionArguments,System.Threading.Tasks.Task&gt; OnRetryAsync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;valuetype Microsoft.Extensions.Resilience.Options.RetryActionArguments, class System.Threading.Tasks.Task&gt; OnRetryAsync" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Resilience.Options.RetryPolicyOptions.OnRetryAsync" />
      <MemberSignature Language="VB.NET" Value="Public Property OnRetryAsync As Func(Of RetryActionArguments, Task)" />
      <MemberSignature Language="F#" Value="member this.OnRetryAsync : Func&lt;Microsoft.Extensions.Resilience.Options.RetryActionArguments, System.Threading.Tasks.Task&gt; with get, set" Usage="Microsoft.Extensions.Resilience.Options.RetryPolicyOptions.OnRetryAsync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;Microsoft::Extensions::Resilience::Options::RetryActionArguments, System::Threading::Tasks::Task ^&gt; ^ OnRetryAsync { Func&lt;Microsoft::Extensions::Resilience::Options::RetryActionArguments, System::Threading::Tasks::Task ^&gt; ^ get(); void set(Func&lt;Microsoft::Extensions::Resilience::Options::RetryActionArguments, System::Threading::Tasks::Task ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Required&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.Extensions.Resilience.Options.RetryActionArguments,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the action performed during the retry attempt of the retry policy.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetryCount">
      <MemberSignature Language="C#" Value="public int RetryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RetryCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Resilience.Options.RetryPolicyOptions.RetryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryCount As Integer" />
      <MemberSignature Language="F#" Value="member this.RetryCount : int with get, set" Usage="Microsoft.Extensions.Resilience.Options.RetryPolicyOptions.RetryCount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RetryCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Range(-1, 100)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Range(-1, 100)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the maximum number of retries to use, in addition to the original call.
            </summary>
        <value>To be added.</value>
        <remarks>
            For infinite retries use <c>InfiniteRetry</c> (-1).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldHandleException">
      <MemberSignature Language="C#" Value="public Predicate&lt;Exception&gt; ShouldHandleException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Predicate`1&lt;class System.Exception&gt; ShouldHandleException" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Resilience.Options.RetryPolicyOptions.ShouldHandleException" />
      <MemberSignature Language="VB.NET" Value="Public Property ShouldHandleException As Predicate(Of Exception)" />
      <MemberSignature Language="F#" Value="member this.ShouldHandleException : Predicate&lt;Exception&gt; with get, set" Usage="Microsoft.Extensions.Resilience.Options.RetryPolicyOptions.ShouldHandleException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Predicate&lt;Exception ^&gt; ^ ShouldHandleException { Predicate&lt;Exception ^&gt; ^ get(); void set(Predicate&lt;Exception ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Required&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Predicate&lt;System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the predicate which filters the type of exception the policy can handle.
            </summary>
        <value>To be added.</value>
        <remarks>
            By default any exception will be retried.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

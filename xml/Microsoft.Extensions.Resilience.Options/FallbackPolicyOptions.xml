<Type Name="FallbackPolicyOptions" FullName="Microsoft.Extensions.Resilience.Options.FallbackPolicyOptions">
  <TypeSignature Language="C#" Value="public class FallbackPolicyOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FallbackPolicyOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Resilience.Options.FallbackPolicyOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class FallbackPolicyOptions" />
  <TypeSignature Language="F#" Value="type FallbackPolicyOptions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class FallbackPolicyOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Options for the fallback policy.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FallbackPolicyOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.Options.FallbackPolicyOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FallbackPolicyOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFallbackAsync">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.Extensions.Resilience.Options.FallbackTaskArguments,System.Threading.Tasks.Task&gt; OnFallbackAsync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;valuetype Microsoft.Extensions.Resilience.Options.FallbackTaskArguments, class System.Threading.Tasks.Task&gt; OnFallbackAsync" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Resilience.Options.FallbackPolicyOptions.OnFallbackAsync" />
      <MemberSignature Language="VB.NET" Value="Public Property OnFallbackAsync As Func(Of FallbackTaskArguments, Task)" />
      <MemberSignature Language="F#" Value="member this.OnFallbackAsync : Func&lt;Microsoft.Extensions.Resilience.Options.FallbackTaskArguments, System.Threading.Tasks.Task&gt; with get, set" Usage="Microsoft.Extensions.Resilience.Options.FallbackPolicyOptions.OnFallbackAsync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;Microsoft::Extensions::Resilience::Options::FallbackTaskArguments, System::Threading::Tasks::Task ^&gt; ^ OnFallbackAsync { Func&lt;Microsoft::Extensions::Resilience::Options::FallbackTaskArguments, System::Threading::Tasks::Task ^&gt; ^ get(); void set(Func&lt;Microsoft::Extensions::Resilience::Options::FallbackTaskArguments, System::Threading::Tasks::Task ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Required&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.Extensions.Resilience.Options.FallbackTaskArguments,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the action to call asynchronously before invoking the task performed in the fallback scenario,
            after the initially executed action encounters a transient failure.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldHandleException">
      <MemberSignature Language="C#" Value="public Predicate&lt;Exception&gt; ShouldHandleException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Predicate`1&lt;class System.Exception&gt; ShouldHandleException" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Resilience.Options.FallbackPolicyOptions.ShouldHandleException" />
      <MemberSignature Language="VB.NET" Value="Public Property ShouldHandleException As Predicate(Of Exception)" />
      <MemberSignature Language="F#" Value="member this.ShouldHandleException : Predicate&lt;Exception&gt; with get, set" Usage="Microsoft.Extensions.Resilience.Options.FallbackPolicyOptions.ShouldHandleException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Predicate&lt;Exception ^&gt; ^ ShouldHandleException { Predicate&lt;Exception ^&gt; ^ get(); void set(Predicate&lt;Exception ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Required&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Predicate&lt;System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the exception predicate to filter the type of exception the policy can handle.
            </summary>
        <value>To be added.</value>
        <remarks>
            By default any exception will be retried.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="TextEncoder" FullName="System.Text.Encodings.Web.TextEncoder">
  <TypeSignature Language="C#" Value="public abstract class TextEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextEncoder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.Encodings.Web.TextEncoder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextEncoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextEncoder abstract" />
  <TypeSignature Language="F#" Value="type TextEncoder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encodings.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The base class of web encoders.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[ 

## Remarks  
 TextEncoder subclasses can be used to do HTML encoding, URI encoding, and JavaScript encoding. Instances of such subclasses can be accessed using the <xref:System.Text.Encodings.Web.HtmlEncoder.Default?displayProperty=nameWithType>, <xref:System.Text.Encodings.Web.UrlEncoder.Default?displayProperty=nameWithType>, and <xref:System.Text.Encodings.Web.JavaScriptEncoder.Default?displayProperty=nameWithType> properties.   

 The source code for this type is available in the [System.Text.Encodings.Web project](https://github.com/dotnet/corefx/tree/master/src/System.Text.Encodings.Web) on GitHub. Unit tests that can also serve as code examples are found in the [System.Text.Encodings.Web/tests](https://github.com/dotnet/corefx/tree/master/src/System.Text.Encodings.Web/tests) folder on GitHub.  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encodings.Web.TextEncoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextEncoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encodings.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Text.Encodings.Web.TextEncoder" /> class.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual string Encode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Encode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encodings.Web.TextEncoder.Encode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Encode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Encode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Encode : string -&gt; string&#xA;override this.Encode : string -&gt; string" Usage="textEncoder.Encode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encodings.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">The string to encode.</param>
        <summary>Encodes the supplied string and returns the encoded text as a new string.</summary>
        <returns>The encoded string.</returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value">value</paramref> is null.</exception>
        <exception cref="T:System.ArgumentException">The <see cref="System.Text.Encodings.Web.TextEncoder.TryEncodeUnicodeScalar(System.Int32,System.Char*,System.Int32,System.Int32@)"></see> method failed. The encoder does not implement <see cref="System.Text.Encodings.Web.TextEncoder.MaxOutputCharactersPerInputCharacter"></see> correctly.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public void Encode (System.IO.TextWriter output, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Encode(class System.IO.TextWriter output, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encodings.Web.TextEncoder.Encode(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Encode (output As TextWriter, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Encode(System::IO::TextWriter ^ output, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Encode : System.IO.TextWriter * string -&gt; unit" Usage="textEncoder.Encode (output, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encodings.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="output">The stream to which to write the encoded text.</param>
        <param name="value">The string to encode.</param>
        <summary>Encodes the specified string to a <see cref="T:System.IO.TextWriter" /> object.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (System.IO.TextWriter output, char[] value, int startIndex, int characterCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(class System.IO.TextWriter output, char[] value, int32 startIndex, int32 characterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encodings.Web.TextEncoder.Encode(System.IO.TextWriter,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Encode (output As TextWriter, value As Char(), startIndex As Integer, characterCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Encode(System::IO::TextWriter ^ output, cli::array &lt;char&gt; ^ value, int startIndex, int characterCount);" />
      <MemberSignature Language="F#" Value="abstract member Encode : System.IO.TextWriter * char[] * int * int -&gt; unit&#xA;override this.Encode : System.IO.TextWriter * char[] * int * int -&gt; unit" Usage="textEncoder.Encode (output, value, startIndex, characterCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encodings.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="value" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="characterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="output">The stream to which to write the encoded text.</param>
        <param name="value">The array of characters to encode.</param>
        <param name="startIndex">The array index of the first character to encode.</param>
        <param name="characterCount">The number of characters in the array to encode.</param>
        <summary>Encodes characters from an array and writes them to a <see cref="T:System.IO.TextWriter" /> object.</summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value">value</paramref> is null.</exception>
        <exception cref="T:System.ArgumentException">The <see cref="System.Text.Encodings.Web.TextEncoder.TryEncodeUnicodeScalar(System.Int32,System.Char*,System.Int32,System.Int32@)"></see> method failed. The encoder does not implement <see cref="System.Text.Encodings.Web.TextEncoder.MaxOutputCharactersPerInputCharacter"></see> correctly.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="characterCount">characterCount</paramref> is out of range.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="characterCount" /> is out of range.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (System.IO.TextWriter output, string value, int startIndex, int characterCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(class System.IO.TextWriter output, string value, int32 startIndex, int32 characterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encodings.Web.TextEncoder.Encode(System.IO.TextWriter,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Encode (output As TextWriter, value As String, startIndex As Integer, characterCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Encode(System::IO::TextWriter ^ output, System::String ^ value, int startIndex, int characterCount);" />
      <MemberSignature Language="F#" Value="abstract member Encode : System.IO.TextWriter * string * int * int -&gt; unit&#xA;override this.Encode : System.IO.TextWriter * string * int * int -&gt; unit" Usage="textEncoder.Encode (output, value, startIndex, characterCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encodings.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="characterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="output">The stream to which to write the encoded text.</param>
        <param name="value">The string whose substring is to be encoded.</param>
        <param name="startIndex">The index where the substring starts.</param>
        <param name="characterCount">The number of characters in the substring.</param>
        <summary>Encodes a substring and writes it to a <see cref="T:System.IO.TextWriter" /> object.</summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value">value</paramref> is null.</exception>
        <exception cref="T:System.ArgumentException">The <see cref="System.Text.Encodings.Web.TextEncoder.TryEncodeUnicodeScalar(System.Int32,System.Char*,System.Int32,System.Int32@)"></see> method failed. The encoder does not implement <see cref="System.Text.Encodings.Web.TextEncoder.MaxOutputCharactersPerInputCharacter"></see> correctly.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="characterCount">characterCount</paramref> is out of range.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="characterCount" /> is out of range.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindFirstCharacterToEncode">
      <MemberSignature Language="C#" Value="public abstract int FindFirstCharacterToEncode (char* text, int textLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 FindFirstCharacterToEncode(char* text, int32 textLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encodings.Web.TextEncoder.FindFirstCharacterToEncode(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int FindFirstCharacterToEncode(char* text, int textLength);" />
      <MemberSignature Language="F#" Value="abstract member FindFirstCharacterToEncode : nativeptr&lt;char&gt; * int -&gt; int" Usage="textEncoder.FindFirstCharacterToEncode (text, textLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encodings.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;dotnet-plat-ext-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;dotnet-plat-ext-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char*" />
        <Parameter Name="textLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">The text buffer to search.</param>
        <param name="textLength">The number of characters in <paramref name="text">text</paramref>.</param>
        <summary>Finds the index of the first character to encode.</summary>
        <returns>The index of the first character to encode.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks  
 This helper method is seldom called directly.
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxOutputCharactersPerInputCharacter">
      <MemberSignature Language="C#" Value="public abstract int MaxOutputCharactersPerInputCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxOutputCharactersPerInputCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encodings.Web.TextEncoder.MaxOutputCharactersPerInputCharacter" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MaxOutputCharactersPerInputCharacter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int MaxOutputCharactersPerInputCharacter { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxOutputCharactersPerInputCharacter : int" Usage="System.Text.Encodings.Web.TextEncoder.MaxOutputCharactersPerInputCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encodings.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;dotnet-plat-ext-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum number of characters that this encoder can generate for each input code point.</summary>
        <value>The maximum number of characters.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncodeUnicodeScalar">
      <MemberSignature Language="C#" Value="public abstract bool TryEncodeUnicodeScalar (int unicodeScalar, char* buffer, int bufferLength, out int numberOfCharactersWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryEncodeUnicodeScalar(int32 unicodeScalar, char* buffer, int32 bufferLength, [out] int32&amp; numberOfCharactersWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encodings.Web.TextEncoder.TryEncodeUnicodeScalar(System.Int32,System.Char*,System.Int32,System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryEncodeUnicodeScalar(int unicodeScalar, char* buffer, int bufferLength, [Runtime::InteropServices::Out] int % numberOfCharactersWritten);" />
      <MemberSignature Language="F#" Value="abstract member TryEncodeUnicodeScalar : int * nativeptr&lt;char&gt; * int *  -&gt; bool" Usage="textEncoder.TryEncodeUnicodeScalar (unicodeScalar, buffer, bufferLength, numberOfCharactersWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encodings.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;dotnet-plat-ext-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;dotnet-plat-ext-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicodeScalar" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Char*" />
        <Parameter Name="bufferLength" Type="System.Int32" />
        <Parameter Name="numberOfCharactersWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="unicodeScalar">A Unicode scalar value.</param>
        <param name="buffer">A pointer to the buffer to which to write the encoded text.</param>
        <param name="bufferLength">The length of the destination <paramref name="buffer">buffer</paramref> in characters.</param>
        <param name="numberOfCharactersWritten">When the method returns, indicates the number of characters written to the <paramref name="buffer">buffer</paramref>.</param>
        <summary>Encodes a Unicode scalar value and writes it to a buffer.</summary>
        <returns>false if <paramref name="bufferLength">bufferLength</paramref> is too small to fit the encoded text; otherwise, returns true.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks  
 This method is seldom called directly. One of the <xref:System.Text.Encodings.Web.TextEncoder.Encode%2A> overloads should be used instead. Implementations of the <xref:System.Text.Encodings.Web.TextEncoder> class must be thread-safe and stateless.  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WillEncode">
      <MemberSignature Language="C#" Value="public abstract bool WillEncode (int unicodeScalar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WillEncode(int32 unicodeScalar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encodings.Web.TextEncoder.WillEncode(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function WillEncode (unicodeScalar As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool WillEncode(int unicodeScalar);" />
      <MemberSignature Language="F#" Value="abstract member WillEncode : int -&gt; bool" Usage="textEncoder.WillEncode unicodeScalar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encodings.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;dotnet-plat-ext-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicodeScalar" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unicodeScalar">A Unicode scalar value.</param>
        <summary>Determines if a given Unicode scalar value will be encoded.</summary>
        <returns>true if the <paramref name="unicodeScalar">unicodeScalar</paramref> value will be encoded by this encoder; otherwise, returns false.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
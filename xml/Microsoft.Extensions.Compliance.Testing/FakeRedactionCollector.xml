<Type Name="FakeRedactionCollector" FullName="Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector">
  <TypeSignature Language="C#" Value="public class FakeRedactionCollector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FakeRedactionCollector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector" />
  <TypeSignature Language="VB.NET" Value="Public Class FakeRedactionCollector" />
  <TypeSignature Language="F#" Value="type FakeRedactionCollector = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class FakeRedactionCollector" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Compliance.Testing</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Usage history of fake redaction types.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FakeRedactionCollector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FakeRedactionCollector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Compliance.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllRedactedData">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.Compliance.Testing.RedactedData&gt; AllRedactedData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;valuetype Microsoft.Extensions.Compliance.Testing.RedactedData&gt; AllRedactedData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector.AllRedactedData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllRedactedData As IReadOnlyList(Of RedactedData)" />
      <MemberSignature Language="F#" Value="member this.AllRedactedData : System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.Compliance.Testing.RedactedData&gt;" Usage="Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector.AllRedactedData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::Extensions::Compliance::Testing::RedactedData&gt; ^ AllRedactedData { System::Collections::Generic::IReadOnlyList&lt;Microsoft::Extensions::Compliance::Testing::RedactedData&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Compliance.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.Compliance.Testing.RedactedData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the full log of all redaction events that happened.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllRedactorRequests">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.Compliance.Testing.RedactorRequested&gt; AllRedactorRequests { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;valuetype Microsoft.Extensions.Compliance.Testing.RedactorRequested&gt; AllRedactorRequests" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector.AllRedactorRequests" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllRedactorRequests As IReadOnlyList(Of RedactorRequested)" />
      <MemberSignature Language="F#" Value="member this.AllRedactorRequests : System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.Compliance.Testing.RedactorRequested&gt;" Usage="Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector.AllRedactorRequests" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::Extensions::Compliance::Testing::RedactorRequested&gt; ^ AllRedactorRequests { System::Collections::Generic::IReadOnlyList&lt;Microsoft::Extensions::Compliance::Testing::RedactorRequested&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Compliance.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.Compliance.Testing.RedactorRequested&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the full log of all redactor request events that happened.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastRedactedData">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Compliance.Testing.RedactedData LastRedactedData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Compliance.Testing.RedactedData LastRedactedData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector.LastRedactedData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastRedactedData As RedactedData" />
      <MemberSignature Language="F#" Value="member this.LastRedactedData : Microsoft.Extensions.Compliance.Testing.RedactedData" Usage="Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector.LastRedactedData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Compliance::Testing::RedactedData LastRedactedData { Microsoft::Extensions::Compliance::Testing::RedactedData get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Compliance.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Compliance.Testing.RedactedData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the last redaction "event".
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">When there has been no previous redaction event.</exception>
      </Docs>
    </Member>
    <Member MemberName="LastRedactorRequested">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Compliance.Testing.RedactorRequested LastRedactorRequested { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Compliance.Testing.RedactorRequested LastRedactorRequested" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector.LastRedactorRequested" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastRedactorRequested As RedactorRequested" />
      <MemberSignature Language="F#" Value="member this.LastRedactorRequested : Microsoft.Extensions.Compliance.Testing.RedactorRequested" Usage="Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector.LastRedactorRequested" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Compliance::Testing::RedactorRequested LastRedactorRequested { Microsoft::Extensions::Compliance::Testing::RedactorRequested get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Compliance.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Compliance.Testing.RedactorRequested</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the last redactor request "event".
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">When there has been no previous redactor request event.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

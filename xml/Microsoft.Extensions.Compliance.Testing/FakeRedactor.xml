<Type Name="FakeRedactor" FullName="Microsoft.Extensions.Compliance.Testing.FakeRedactor">
  <TypeSignature Language="C#" Value="public class FakeRedactor : Microsoft.Extensions.Compliance.Redaction.Redactor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FakeRedactor extends Microsoft.Extensions.Compliance.Redaction.Redactor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Compliance.Testing.FakeRedactor" />
  <TypeSignature Language="VB.NET" Value="Public Class FakeRedactor&#xA;Inherits Redactor" />
  <TypeSignature Language="F#" Value="type FakeRedactor = class&#xA;    inherit Redactor" />
  <TypeSignature Language="C++ CLI" Value="public ref class FakeRedactor : Microsoft::Extensions::Compliance::Redaction::Redactor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Compliance.Testing</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Extensions.Compliance.Redaction.Redactor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Redactor designed for use in tests.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FakeRedactor (Microsoft.Extensions.Options.IOptions&lt;Microsoft.Extensions.Compliance.Testing.FakeRedactorOptions&gt;? options = default, Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector? collector = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.Extensions.Compliance.Testing.FakeRedactorOptions&gt; options, class Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector collector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Compliance.Testing.FakeRedactor.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Compliance.Testing.FakeRedactorOptions},Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional options As IOptions(Of FakeRedactorOptions) = Nothing, Optional collector As FakeRedactionCollector = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Compliance.Testing.FakeRedactor : Microsoft.Extensions.Options.IOptions&lt;Microsoft.Extensions.Compliance.Testing.FakeRedactorOptions&gt; * Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector -&gt; Microsoft.Extensions.Compliance.Testing.FakeRedactor" Usage="new Microsoft.Extensions.Compliance.Testing.FakeRedactor (options, collector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Compliance.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.Extensions.Compliance.Testing.FakeRedactorOptions&gt;" />
        <Parameter Name="collector" Type="Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector" />
      </Parameters>
      <Docs>
        <param name="options">The options to control behavior of redactor.</param>
        <param name="collector">Collects info about redacted values.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Compliance.Testing.FakeRedactor" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Compliance.Testing.FakeRedactor Create (Microsoft.Extensions.Compliance.Testing.FakeRedactorOptions? options = default, Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector? collector = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Compliance.Testing.FakeRedactor Create(class Microsoft.Extensions.Compliance.Testing.FakeRedactorOptions options, class Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector collector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Compliance.Testing.FakeRedactor.Create(Microsoft.Extensions.Compliance.Testing.FakeRedactorOptions,Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (Optional options As FakeRedactorOptions = Nothing, Optional collector As FakeRedactionCollector = Nothing) As FakeRedactor" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.Extensions.Compliance.Testing.FakeRedactorOptions * Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector -&gt; Microsoft.Extensions.Compliance.Testing.FakeRedactor" Usage="Microsoft.Extensions.Compliance.Testing.FakeRedactor.Create (options, collector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Compliance.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Compliance.Testing.FakeRedactor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Compliance.Testing.FakeRedactorOptions" />
        <Parameter Name="collector" Type="Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector" />
      </Parameters>
      <Docs>
        <param name="options">The options to control behavior of redactor.</param>
        <param name="collector">Collects info about redacted values.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Compliance.Testing.FakeRedactor" /> class.
            </summary>
        <returns>New instance of <see cref="T:Microsoft.Extensions.Compliance.Testing.FakeRedactor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventCollector">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector EventCollector { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector EventCollector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Compliance.Testing.FakeRedactor.EventCollector" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventCollector As FakeRedactionCollector" />
      <MemberSignature Language="F#" Value="member this.EventCollector : Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector" Usage="Microsoft.Extensions.Compliance.Testing.FakeRedactor.EventCollector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Compliance::Testing::FakeRedactionCollector ^ EventCollector { Microsoft::Extensions::Compliance::Testing::FakeRedactionCollector ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Compliance.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Compliance.Testing.FakeRedactionCollector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the collector of redaction events.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRedactedLength">
      <MemberSignature Language="C#" Value="public override int GetRedactedLength (ReadOnlySpan&lt;char&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetRedactedLength(valuetype System.ReadOnlySpan`1&lt;char&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Compliance.Testing.FakeRedactor.GetRedactedLength(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRedactedLength (input As ReadOnlySpan(Of Char)) As Integer" />
      <MemberSignature Language="F#" Value="override this.GetRedactedLength : ReadOnlySpan&lt;char&gt; -&gt; int" Usage="fakeRedactor.GetRedactedLength input" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetRedactedLength(ReadOnlySpan&lt;char&gt; input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Compliance.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Redact">
      <MemberSignature Language="C#" Value="public override int Redact (ReadOnlySpan&lt;char&gt; source, Span&lt;char&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Redact(valuetype System.ReadOnlySpan`1&lt;char&gt; source, valuetype System.Span`1&lt;char&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Compliance.Testing.FakeRedactor.Redact(System.ReadOnlySpan{System.Char},System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Redact (source As ReadOnlySpan(Of Char), destination As Span(Of Char)) As Integer" />
      <MemberSignature Language="F#" Value="override this.Redact : ReadOnlySpan&lt;char&gt; * Span&lt;char&gt; -&gt; int" Usage="fakeRedactor.Redact (source, destination)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Redact(ReadOnlySpan&lt;char&gt; source, Span&lt;char&gt; destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Compliance.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="destination">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ISerializationCodeDomSurrogateProvider" FullName="System.Runtime.Serialization.ISerializationCodeDomSurrogateProvider">
  <TypeSignature Language="C#" Value="public interface ISerializationCodeDomSurrogateProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ISerializationCodeDomSurrogateProvider" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ISerializationCodeDomSurrogateProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISerializationCodeDomSurrogateProvider" />
  <TypeSignature Language="F#" Value="type ISerializationCodeDomSurrogateProvider = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISerializationCodeDomSurrogateProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Schema</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Represents a DataContract surrogate provider that is capable of modifying generated type code using <see cref="N:System.CodeDom" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ProcessImportedType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeDeclaration ProcessImportedType (System.CodeDom.CodeTypeDeclaration typeDeclaration, System.CodeDom.CodeCompileUnit compileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeTypeDeclaration ProcessImportedType(class System.CodeDom.CodeTypeDeclaration typeDeclaration, class System.CodeDom.CodeCompileUnit compileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ISerializationCodeDomSurrogateProvider.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessImportedType (typeDeclaration As CodeTypeDeclaration, compileUnit As CodeCompileUnit) As CodeTypeDeclaration" />
      <MemberSignature Language="F#" Value="abstract member ProcessImportedType : System.CodeDom.CodeTypeDeclaration * System.CodeDom.CodeCompileUnit -&gt; System.CodeDom.CodeTypeDeclaration" Usage="iSerializationCodeDomSurrogateProvider.ProcessImportedType (typeDeclaration, compileUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeTypeDeclaration ^ ProcessImportedType(System::CodeDom::CodeTypeDeclaration ^ typeDeclaration, System::CodeDom::CodeCompileUnit ^ compileUnit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Schema</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDeclaration" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="typeDeclaration">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> to process that represents the type declaration generated during schema import.</param>
        <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> that contains the other code generated during schema import.</param>
        <summary>
            Processes the type that has been generated from the imported schema.
            </summary>
        <returns>A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> that contains the processed type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

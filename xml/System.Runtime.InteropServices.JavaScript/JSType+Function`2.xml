<Type Name="JSType+Function&lt;T1,T2&gt;" FullName="System.Runtime.InteropServices.JavaScript.JSType+Function&lt;T1,T2&gt;">
  <TypeSignature Language="C#" Value="public sealed class JSType.Function&lt;T1,T2&gt; : System.Runtime.InteropServices.JavaScript.JSType where T1 : JSType where T2 : JSType" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit JSType/Function`2&lt;(class System.Runtime.InteropServices.JavaScript.JSType) T1, (class System.Runtime.InteropServices.JavaScript.JSType) T2&gt; extends System.Runtime.InteropServices.JavaScript.JSType" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.JavaScript.JSType.Function`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JSType.Function(Of T1, T2)&#xA;Inherits JSType" />
  <TypeSignature Language="F#" Value="type JSType.Function&lt;'T1, 'T2 (requires 'T1 :&gt; JSType and 'T2 :&gt; JSType)&gt; = class&#xA;    inherit JSType" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <BaseTypeName>System.Runtime.InteropServices.JavaScript.JSType</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <BaseTypeName>System.Runtime.InteropServices.JavaScript.JSType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.JavaScript.JSType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T1">The type of marshalled parameter or result.</typeparam>
    <typeparam name="T2">The type of marshalled parameter.</typeparam>
    <summary>Marshals as the JavaScript <see href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Function">Function</see> type.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members />
</Type>

<Type Name="JSFunctionBinding" FullName="System.Runtime.InteropServices.JavaScript.JSFunctionBinding">
  <TypeSignature Language="C#" Value="public sealed class JSFunctionBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit JSFunctionBinding extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.JavaScript.JSFunctionBinding" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JSFunctionBinding" />
  <TypeSignature Language="F#" Value="type JSFunctionBinding = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class JSFunctionBinding sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("browser")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("browser")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a bound imported or exported JavaScript function and contains information necessary to invoke it.
            This API supports JSImport infrastructure and is not intended to be used directly from your code.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JSFunctionBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.JavaScript.JSFunctionBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JSFunctionBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>This API supports JSImport infrastructure and is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindJSFunction">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.JavaScript.JSFunctionBinding BindJSFunction (string functionName, string moduleName, ReadOnlySpan&lt;System.Runtime.InteropServices.JavaScript.JSMarshalerType&gt; signatures);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.InteropServices.JavaScript.JSFunctionBinding BindJSFunction(string functionName, string moduleName, valuetype System.ReadOnlySpan`1&lt;class System.Runtime.InteropServices.JavaScript.JSMarshalerType&gt; signatures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.JavaScript.JSFunctionBinding.BindJSFunction(System.String,System.String,System.ReadOnlySpan{System.Runtime.InteropServices.JavaScript.JSMarshalerType})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BindJSFunction (functionName As String, moduleName As String, signatures As ReadOnlySpan(Of JSMarshalerType)) As JSFunctionBinding" />
      <MemberSignature Language="F#" Value="static member BindJSFunction : string * string * ReadOnlySpan&lt;System.Runtime.InteropServices.JavaScript.JSMarshalerType&gt; -&gt; System.Runtime.InteropServices.JavaScript.JSFunctionBinding" Usage="System.Runtime.InteropServices.JavaScript.JSFunctionBinding.BindJSFunction (functionName, moduleName, signatures)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::JavaScript::JSFunctionBinding ^ BindJSFunction(System::String ^ functionName, System::String ^ moduleName, ReadOnlySpan&lt;System::Runtime::InteropServices::JavaScript::JSMarshalerType ^&gt; signatures);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.JavaScript.JSFunctionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionName" Type="System.String" />
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="signatures" Type="System.ReadOnlySpan&lt;System.Runtime.InteropServices.JavaScript.JSMarshalerType&gt;" />
      </Parameters>
      <Docs>
        <param name="functionName">The name of the exported JavaScript function.</param>
        <param name="moduleName">The name of the ES6 module.</param>
        <param name="signatures">Metadata about the signature of the marshalled parameters.</param>
        <summary>Locates and binds a JavaScript function given name and module so that it can later be invoked by managed callers.
            This API supports JSImport infrastructure and is not intended to be used directly from your code.</summary>
        <returns>Method metadata.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">The method was executed on architecture other than WebAssembly.</exception>
      </Docs>
    </Member>
    <Member MemberName="BindManagedFunction">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.JavaScript.JSFunctionBinding BindManagedFunction (string fullyQualifiedName, int signatureHash, ReadOnlySpan&lt;System.Runtime.InteropServices.JavaScript.JSMarshalerType&gt; signatures);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.InteropServices.JavaScript.JSFunctionBinding BindManagedFunction(string fullyQualifiedName, int32 signatureHash, valuetype System.ReadOnlySpan`1&lt;class System.Runtime.InteropServices.JavaScript.JSMarshalerType&gt; signatures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.JavaScript.JSFunctionBinding.BindManagedFunction(System.String,System.Int32,System.ReadOnlySpan{System.Runtime.InteropServices.JavaScript.JSMarshalerType})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BindManagedFunction (fullyQualifiedName As String, signatureHash As Integer, signatures As ReadOnlySpan(Of JSMarshalerType)) As JSFunctionBinding" />
      <MemberSignature Language="F#" Value="static member BindManagedFunction : string * int * ReadOnlySpan&lt;System.Runtime.InteropServices.JavaScript.JSMarshalerType&gt; -&gt; System.Runtime.InteropServices.JavaScript.JSFunctionBinding" Usage="System.Runtime.InteropServices.JavaScript.JSFunctionBinding.BindManagedFunction (fullyQualifiedName, signatureHash, signatures)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::JavaScript::JSFunctionBinding ^ BindManagedFunction(System::String ^ fullyQualifiedName, int signatureHash, ReadOnlySpan&lt;System::Runtime::InteropServices::JavaScript::JSMarshalerType ^&gt; signatures);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.JavaScript.JSFunctionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fullyQualifiedName" Type="System.String" />
        <Parameter Name="signatureHash" Type="System.Int32" />
        <Parameter Name="signatures" Type="System.ReadOnlySpan&lt;System.Runtime.InteropServices.JavaScript.JSMarshalerType&gt;" />
      </Parameters>
      <Docs>
        <param name="fullyQualifiedName">The fully qualified name of the exported method.</param>
        <param name="signatureHash">The hash of the signature metadata.</param>
        <param name="signatures">Metadata about the signature of the marshalled parameters.</param>
        <summary>Binds a specific managed function wrapper so that it can later be invoked by JavaScript callers.
            This API supports JSImport infrastructure and is not intended to be used directly from your code.</summary>
        <returns>Method metadata.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">The method was executed on architecture other than WebAssembly.</exception>
      </Docs>
    </Member>
    <Member MemberName="InvokeJS">
      <MemberSignature Language="C#" Value="public static void InvokeJS (System.Runtime.InteropServices.JavaScript.JSFunctionBinding signature, Span&lt;System.Runtime.InteropServices.JavaScript.JSMarshalerArgument&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeJS(class System.Runtime.InteropServices.JavaScript.JSFunctionBinding signature, valuetype System.Span`1&lt;valuetype System.Runtime.InteropServices.JavaScript.JSMarshalerArgument&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.JavaScript.JSFunctionBinding.InvokeJS(System.Runtime.InteropServices.JavaScript.JSFunctionBinding,System.Span{System.Runtime.InteropServices.JavaScript.JSMarshalerArgument})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeJS (signature As JSFunctionBinding, arguments As Span(Of JSMarshalerArgument))" />
      <MemberSignature Language="F#" Value="static member InvokeJS : System.Runtime.InteropServices.JavaScript.JSFunctionBinding * Span&lt;System.Runtime.InteropServices.JavaScript.JSMarshalerArgument&gt; -&gt; unit" Usage="System.Runtime.InteropServices.JavaScript.JSFunctionBinding.InvokeJS (signature, arguments)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeJS(System::Runtime::InteropServices::JavaScript::JSFunctionBinding ^ signature, Span&lt;System::Runtime::InteropServices::JavaScript::JSMarshalerArgument&gt; arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signature" Type="System.Runtime.InteropServices.JavaScript.JSFunctionBinding" />
        <Parameter Name="arguments" Type="System.Span&lt;System.Runtime.InteropServices.JavaScript.JSMarshalerArgument&gt;" />
      </Parameters>
      <Docs>
        <param name="signature">Generated metadata about the method signature used for marshaling.</param>
        <param name="arguments">The intermediate buffer with marshalled arguments.</param>
        <summary>Invokes a previously bound JavaScript function using the provided span to transport argument and return values.
            This API supports JSImport infrastructure and is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

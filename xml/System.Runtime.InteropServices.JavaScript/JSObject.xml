<Type Name="JSObject" FullName="System.Runtime.InteropServices.JavaScript.JSObject">
  <TypeSignature Language="C#" Value="public class JSObject : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JSObject extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.JavaScript.JSObject" />
  <TypeSignature Language="VB.NET" Value="Public Class JSObject&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type JSObject = class&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class JSObject : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("browser")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("browser")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a reference to an object in the JavaScript host environment and enables interaction with it as a proxy.</summary>
    <remarks>JSObject instances are expensive, so use <see cref="M:System.Runtime.InteropServices.JavaScript.JSObject.Dispose" /> to release instances once you no longer need to retain a reference to the target object.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.JavaScript.JSObject.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="jSObject.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyAsBoolean">
      <MemberSignature Language="C#" Value="public bool GetPropertyAsBoolean (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPropertyAsBoolean(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.JavaScript.JSObject.GetPropertyAsBoolean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyAsBoolean (propertyName As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.GetPropertyAsBoolean : string -&gt; bool" Usage="jSObject.GetPropertyAsBoolean propertyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPropertyAsBoolean(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property.</param>
        <summary>Returns the value of the specified property as <see cref="T:System.Boolean" /> if the property exists, otherwise <see langword="false" />.</summary>
        <returns>The value of the property with the specified name.</returns>
        <remarks>This method throws a <see cref="T:System.Runtime.InteropServices.JavaScript.JSException" /> when the property value is not a Boolean.</remarks>
        <exception cref="T:System.Runtime.InteropServices.JavaScript.JSException">The property value is not a <see cref="T:System.Boolean" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyAsByteArray">
      <MemberSignature Language="C#" Value="public byte[]? GetPropertyAsByteArray (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetPropertyAsByteArray(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.JavaScript.JSObject.GetPropertyAsByteArray(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyAsByteArray (propertyName As String) As Byte()" />
      <MemberSignature Language="F#" Value="member this.GetPropertyAsByteArray : string -&gt; byte[]" Usage="jSObject.GetPropertyAsByteArray propertyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetPropertyAsByteArray(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property.</param>
        <summary>Returns the value of the specified property as a <see cref="T:System.Byte" /> array if the property exists, otherwise <see langword="null" />.</summary>
        <returns>The value of the property with the specified name.</returns>
        <remarks>This method throws a <see cref="T:System.Runtime.InteropServices.JavaScript.JSException" /> when the property value is not an array.</remarks>
        <exception cref="T:System.Runtime.InteropServices.JavaScript.JSException">The property value is not an array.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyAsDouble">
      <MemberSignature Language="C#" Value="public double GetPropertyAsDouble (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetPropertyAsDouble(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.JavaScript.JSObject.GetPropertyAsDouble(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyAsDouble (propertyName As String) As Double" />
      <MemberSignature Language="F#" Value="member this.GetPropertyAsDouble : string -&gt; double" Usage="jSObject.GetPropertyAsDouble propertyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetPropertyAsDouble(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property.</param>
        <summary>Returns the value of the property as <see cref="T:System.Double" /> if the property exists, otherwise 0.</summary>
        <returns>The value of the property with the specified name.</returns>
        <remarks>This method throws a <see cref="T:System.Runtime.InteropServices.JavaScript.JSException" /> when the property value is not a number.</remarks>
        <exception cref="T:System.Runtime.InteropServices.JavaScript.JSException">The property value is not a number.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyAsInt32">
      <MemberSignature Language="C#" Value="public int GetPropertyAsInt32 (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetPropertyAsInt32(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.JavaScript.JSObject.GetPropertyAsInt32(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyAsInt32 (propertyName As String) As Integer" />
      <MemberSignature Language="F#" Value="member this.GetPropertyAsInt32 : string -&gt; int" Usage="jSObject.GetPropertyAsInt32 propertyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetPropertyAsInt32(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property.</param>
        <summary>Returns the value of the property as <see cref="T:System.Int32" /> if the property exists, otherwise 0.</summary>
        <returns>The value of the property with the specified name.</returns>
        <remarks>This method throws a <see cref="T:System.Runtime.InteropServices.JavaScript.JSException" /> when the property value is not an integer.</remarks>
        <exception cref="T:System.Runtime.InteropServices.JavaScript.JSException">The property value is not an integer.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyAsJSObject">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.JavaScript.JSObject? GetPropertyAsJSObject (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.InteropServices.JavaScript.JSObject GetPropertyAsJSObject(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.JavaScript.JSObject.GetPropertyAsJSObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyAsJSObject (propertyName As String) As JSObject" />
      <MemberSignature Language="F#" Value="member this.GetPropertyAsJSObject : string -&gt; System.Runtime.InteropServices.JavaScript.JSObject" Usage="jSObject.GetPropertyAsJSObject propertyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::InteropServices::JavaScript::JSObject ^ GetPropertyAsJSObject(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.JavaScript.JSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property.</param>
        <summary>Returns the value of the property as <see cref="T:System.Runtime.InteropServices.JavaScript.JSObject" /> proxy if the property exists, otherwise <see langword="null" />.</summary>
        <returns>The value of the property with the specified name.</returns>
        <remarks>This method throws a <see cref="T:System.Runtime.InteropServices.JavaScript.JSException" /> when the property value is not an object.</remarks>
        <exception cref="T:System.Runtime.InteropServices.JavaScript.JSException">The property value is not a <see cref="T:System.Runtime.InteropServices.JavaScript.JSObject" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyAsString">
      <MemberSignature Language="C#" Value="public string? GetPropertyAsString (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyAsString(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.JavaScript.JSObject.GetPropertyAsString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyAsString (propertyName As String) As String" />
      <MemberSignature Language="F#" Value="member this.GetPropertyAsString : string -&gt; string" Usage="jSObject.GetPropertyAsString propertyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyAsString(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property.</param>
        <summary>Returns the value of the property as <see cref="T:System.String" /> if the property exists, otherwise <see langword="null" />.</summary>
        <returns>The value of the property with the specified name.</returns>
        <remarks>This method throws a <see cref="T:System.Runtime.InteropServices.JavaScript.JSException" /> when the property value is not a string.</remarks>
        <exception cref="T:System.Runtime.InteropServices.JavaScript.JSException">The property value is not a string.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeOfProperty">
      <MemberSignature Language="C#" Value="public string GetTypeOfProperty (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTypeOfProperty(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.JavaScript.JSObject.GetTypeOfProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeOfProperty (propertyName As String) As String" />
      <MemberSignature Language="F#" Value="member this.GetTypeOfProperty : string -&gt; string" Usage="jSObject.GetTypeOfProperty propertyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTypeOfProperty(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property.</param>
        <summary>Returns <code>typeof()</code> of the property.</summary>
        <returns>One of "undefined", "object", "boolean", "number", "bigint", "string", "symbol" or "function".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasProperty">
      <MemberSignature Language="C#" Value="public bool HasProperty (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasProperty(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.JavaScript.JSObject.HasProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasProperty (propertyName As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasProperty : string -&gt; bool" Usage="jSObject.HasProperty propertyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasProperty(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property.</param>
        <summary>Checks whether the target object or one of its prototypes has a property with the specified name.</summary>
        <returns>
          <see langword="true" /> when the object has the property with the specified name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.JavaScript.JSObject.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Runtime.InteropServices.JavaScript.JSObject.IsDisposed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the proxy was already disposed.</summary>
        <value>
          <see langword="true" /> if the proxy was already disposed; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (string propertyName, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProperty(string propertyName, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.JavaScript.JSObject.SetProperty(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProperty (propertyName As String, value As Boolean)" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * bool -&gt; unit" Usage="jSObject.SetProperty (propertyName, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProperty(System::String ^ propertyName, bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property.</param>
        <param name="value">The value of property to set.</param>
        <summary>Defines a new property on the target object, or modifies an existing property to have the specified value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (string propertyName, byte[]? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProperty(string propertyName, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.JavaScript.JSObject.SetProperty(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProperty (propertyName As String, value As Byte())" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * byte[] -&gt; unit" Usage="jSObject.SetProperty (propertyName, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProperty(System::String ^ propertyName, cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property.</param>
        <param name="value">The value of property to set.</param>
        <summary>Defines a new property on the target object, or modifies an existing property to have the specified value.</summary>
        <remarks>The method will copy the bytes.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (string propertyName, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProperty(string propertyName, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.JavaScript.JSObject.SetProperty(System.String,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProperty (propertyName As String, value As Double)" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * double -&gt; unit" Usage="jSObject.SetProperty (propertyName, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProperty(System::String ^ propertyName, double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property.</param>
        <param name="value">The value of property to set.</param>
        <summary>Defines a new property on the target object, or modifies an existing property to have the specified value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (string propertyName, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProperty(string propertyName, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.JavaScript.JSObject.SetProperty(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProperty (propertyName As String, value As Integer)" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * int -&gt; unit" Usage="jSObject.SetProperty (propertyName, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProperty(System::String ^ propertyName, int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property.</param>
        <param name="value">The value of property to set.</param>
        <summary>Defines a new property on the target object, or modifies an existing property to have the specified value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (string propertyName, System.Runtime.InteropServices.JavaScript.JSObject? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProperty(string propertyName, class System.Runtime.InteropServices.JavaScript.JSObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.JavaScript.JSObject.SetProperty(System.String,System.Runtime.InteropServices.JavaScript.JSObject)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProperty (propertyName As String, value As JSObject)" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * System.Runtime.InteropServices.JavaScript.JSObject -&gt; unit" Usage="jSObject.SetProperty (propertyName, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProperty(System::String ^ propertyName, System::Runtime::InteropServices::JavaScript::JSObject ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Runtime.InteropServices.JavaScript.JSObject" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property.</param>
        <param name="value">The value of property to set.</param>
        <summary>Defines a new property on the target object, or modifies an existing property to have the specified value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (string propertyName, string? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProperty(string propertyName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.JavaScript.JSObject.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProperty (propertyName As String, value As String)" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string -&gt; unit" Usage="jSObject.SetProperty (propertyName, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProperty(System::String ^ propertyName, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.JavaScript</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property.</param>
        <param name="value">The value of property to set.</param>
        <summary>Defines a new property on the target object, or modifies an existing property to have the specified value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

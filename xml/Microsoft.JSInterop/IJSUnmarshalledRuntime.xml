<Type Name="IJSUnmarshalledRuntime" FullName="Microsoft.JSInterop.IJSUnmarshalledRuntime">
  <TypeSignature Language="C#" Value="public interface IJSUnmarshalledRuntime" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IJSUnmarshalledRuntime" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JSInterop.IJSUnmarshalledRuntime" />
  <TypeSignature Language="VB.NET" Value="Public Interface IJSUnmarshalledRuntime" />
  <TypeSignature Language="F#" Value="type IJSUnmarshalledRuntime = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IJSUnmarshalledRuntime" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JSInterop</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="InvokeUnmarshalled&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult InvokeUnmarshalled&lt;TResult&gt; (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult InvokeUnmarshalled&lt;TResult&gt;(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.IJSUnmarshalledRuntime.InvokeUnmarshalled``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeUnmarshalled(Of TResult) (identifier As String) As TResult" />
      <MemberSignature Language="F#" Value="abstract member InvokeUnmarshalled : string -&gt; 'Result" Usage="iJSUnmarshalledRuntime.InvokeUnmarshalled identifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult InvokeUnmarshalled(System::String ^ identifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="identifier">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeUnmarshalled&lt;T0,TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult InvokeUnmarshalled&lt;T0,TResult&gt; (string identifier, T0 arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult InvokeUnmarshalled&lt;T0, TResult&gt;(string identifier, !!T0 arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.IJSUnmarshalledRuntime.InvokeUnmarshalled``2(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeUnmarshalled(Of T0, TResult) (identifier As String, arg0 As T0) As TResult" />
      <MemberSignature Language="F#" Value="abstract member InvokeUnmarshalled : string * 'T0 -&gt; 'Result" Usage="iJSUnmarshalledRuntime.InvokeUnmarshalled (identifier, arg0)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T0, typename TResult&gt;&#xA; TResult InvokeUnmarshalled(System::String ^ identifier, T0 arg0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T0" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="arg0" Type="T0" />
      </Parameters>
      <Docs>
        <typeparam name="T0">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="identifier">To be added.</param>
        <param name="arg0">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeUnmarshalled&lt;T0,T1,TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult InvokeUnmarshalled&lt;T0,T1,TResult&gt; (string identifier, T0 arg0, T1 arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult InvokeUnmarshalled&lt;T0, T1, TResult&gt;(string identifier, !!T0 arg0, !!T1 arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.IJSUnmarshalledRuntime.InvokeUnmarshalled``3(System.String,``0,``1)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeUnmarshalled(Of T0, T1, TResult) (identifier As String, arg0 As T0, arg1 As T1) As TResult" />
      <MemberSignature Language="F#" Value="abstract member InvokeUnmarshalled : string * 'T0 * 'T1 -&gt; 'Result" Usage="iJSUnmarshalledRuntime.InvokeUnmarshalled (identifier, arg0, arg1)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T0, typename T1, typename TResult&gt;&#xA; TResult InvokeUnmarshalled(System::String ^ identifier, T0 arg0, T1 arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T0" />
        <TypeParameter Name="T1" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="arg0" Type="T0" />
        <Parameter Name="arg1" Type="T1" />
      </Parameters>
      <Docs>
        <typeparam name="T0">To be added.</typeparam>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="identifier">To be added.</param>
        <param name="arg0">To be added.</param>
        <param name="arg1">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeUnmarshalled&lt;T0,T1,T2,TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult InvokeUnmarshalled&lt;T0,T1,T2,TResult&gt; (string identifier, T0 arg0, T1 arg1, T2 arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult InvokeUnmarshalled&lt;T0, T1, T2, TResult&gt;(string identifier, !!T0 arg0, !!T1 arg1, !!T2 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.IJSUnmarshalledRuntime.InvokeUnmarshalled``4(System.String,``0,``1,``2)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeUnmarshalled(Of T0, T1, T2, TResult) (identifier As String, arg0 As T0, arg1 As T1, arg2 As T2) As TResult" />
      <MemberSignature Language="F#" Value="abstract member InvokeUnmarshalled : string * 'T0 * 'T1 * 'T2 -&gt; 'Result" Usage="iJSUnmarshalledRuntime.InvokeUnmarshalled (identifier, arg0, arg1, arg2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T0, typename T1, typename T2, typename TResult&gt;&#xA; TResult InvokeUnmarshalled(System::String ^ identifier, T0 arg0, T1 arg1, T2 arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T0" />
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="arg0" Type="T0" />
        <Parameter Name="arg1" Type="T1" />
        <Parameter Name="arg2" Type="T2" />
      </Parameters>
      <Docs>
        <typeparam name="T0">To be added.</typeparam>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="identifier">To be added.</param>
        <param name="arg0">To be added.</param>
        <param name="arg1">To be added.</param>
        <param name="arg2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

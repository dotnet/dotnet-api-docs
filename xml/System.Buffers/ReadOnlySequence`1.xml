<Type Name="ReadOnlySequence&lt;T&gt;" FullName="System.Buffers.ReadOnlySequence&lt;T&gt;">
  <TypeSignature Language="C#" Value="public struct ReadOnlySequence&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ReadOnlySequence`1&lt;T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.ReadOnlySequence`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure ReadOnlySequence(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public value class ReadOnlySequence" />
  <TypeSignature Language="F#" Value="type ReadOnlySequence&lt;'T&gt; = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Memory" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1;netcore-3.1;net-5.0">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">The type of the elements in the read-only sequence.</typeparam>
    <summary>Represents a sequence that can read a sequential series of <typeparamref name="T" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReadOnlySequence (ReadOnlyMemory&lt;T&gt; memory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlyMemory`1&lt;!T&gt; memory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ReadOnlySequence`1.#ctor(System.ReadOnlyMemory{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memory As ReadOnlyMemory(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlySequence(ReadOnlyMemory&lt;T&gt; memory);" />
      <MemberSignature Language="F#" Value="new System.Buffers.ReadOnlySequence&lt;'T&gt; : ReadOnlyMemory&lt;'T&gt; -&gt; System.Buffers.ReadOnlySequence&lt;'T&gt;" Usage="new System.Buffers.ReadOnlySequence&lt;'T&gt; memory" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memory" Type="System.ReadOnlyMemory&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="memory">A read-only block of memory of elements of type <typeparamref name="T" />.</param>
        <summary>Creates an instance of <see cref="T:System.Buffers.ReadOnlySequence`1" /> from a <see cref="T:System.ReadOnlyMemory`1" />. </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
The consumer is expected to manage the lifetime of memory until <see cref="T:System.Buffers.ReadOnlySequence`1" /> is not used anymore.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReadOnlySequence (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ReadOnlySequence`1.#ctor(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlySequence(cli::array &lt;T&gt; ^ array);" />
      <MemberSignature Language="F#" Value="new System.Buffers.ReadOnlySequence&lt;'T&gt; : 'T[] -&gt; System.Buffers.ReadOnlySequence&lt;'T&gt;" Usage="new System.Buffers.ReadOnlySequence&lt;'T&gt; array" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="array">The array from which to create a read-only sequence.</param>
        <summary>Creates an instance of <see cref="T:System.Buffers.ReadOnlySequence`1" /> from the <paramref name="array" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReadOnlySequence (T[] array, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T[] array, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ReadOnlySequence`1.#ctor(`0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (array As T(), start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlySequence(cli::array &lt;T&gt; ^ array, int start, int length);" />
      <MemberSignature Language="F#" Value="new System.Buffers.ReadOnlySequence&lt;'T&gt; : 'T[] * int * int -&gt; System.Buffers.ReadOnlySequence&lt;'T&gt;" Usage="new System.Buffers.ReadOnlySequence&lt;'T&gt; (array, start, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The array from which to create the read-only sequence.</param>
        <param name="start">The zero-based index of the first element in the array to include in the read-only sequence.</param>
        <param name="length">The number of elements to include in the read-only sequence.</param>
        <summary>Creates an instance of a <see cref="T:System.Buffers.ReadOnlySequence`1" /> from a section of an array.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReadOnlySequence (System.Buffers.ReadOnlySequenceSegment&lt;T&gt; startSegment, int startIndex, System.Buffers.ReadOnlySequenceSegment&lt;T&gt; endSegment, int endIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Buffers.ReadOnlySequenceSegment`1&lt;!T&gt; startSegment, int32 startIndex, class System.Buffers.ReadOnlySequenceSegment`1&lt;!T&gt; endSegment, int32 endIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ReadOnlySequence`1.#ctor(System.Buffers.ReadOnlySequenceSegment{`0},System.Int32,System.Buffers.ReadOnlySequenceSegment{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (startSegment As ReadOnlySequenceSegment(Of T), startIndex As Integer, endSegment As ReadOnlySequenceSegment(Of T), endIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlySequence(System::Buffers::ReadOnlySequenceSegment&lt;T&gt; ^ startSegment, int startIndex, System::Buffers::ReadOnlySequenceSegment&lt;T&gt; ^ endSegment, int endIndex);" />
      <MemberSignature Language="F#" Value="new System.Buffers.ReadOnlySequence&lt;'T&gt; : System.Buffers.ReadOnlySequenceSegment&lt;'T&gt; * int * System.Buffers.ReadOnlySequenceSegment&lt;'T&gt; * int -&gt; System.Buffers.ReadOnlySequence&lt;'T&gt;" Usage="new System.Buffers.ReadOnlySequence&lt;'T&gt; (startSegment, startIndex, endSegment, endIndex)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="startSegment" Type="System.Buffers.ReadOnlySequenceSegment&lt;T&gt;" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="endSegment" Type="System.Buffers.ReadOnlySequenceSegment&lt;T&gt;" />
        <Parameter Name="endIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startSegment">The initial node of the linked memory list.</param>
        <param name="startIndex">The position to the start of the sequence inside <paramref name="startSegment" />.</param>
        <param name="endSegment">The final node of the linked memory list.</param>
        <param name="endIndex">The position to the end of the sequence inside <paramref name="endSegment" />.</param>
        <summary>Creates an instance of a <see cref="T:System.Buffers.ReadOnlySequence`1" /> from a linked memory list represented by start and end segments and the corresponding indexes in them.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="startSegment" /> or <paramref name="endSegment" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The running index of <paramref name="startSegment" /> is greater than the running index of <paramref name="endSegment" />, even though <paramref name="startSegment" /> is different to <paramref name="endSegment" />.

-or-

<paramref name="startSegment" /> is equal to <paramref name="endSegment" /> but <paramref name="endIndex" /> is smaller than <paramref name="startIndex" />.

-or-

<paramref name="startIndex" /> is greater than the length of the underlying memory block of <paramref name="startSegment" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Buffers.ReadOnlySequence&lt;T&gt; Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Buffers.ReadOnlySequence`1&lt;!T&gt; Empty" />
      <MemberSignature Language="DocId" Value="F:System.Buffers.ReadOnlySequence`1.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As ReadOnlySequence(Of T) " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Buffers::ReadOnlySequence&lt;T&gt; Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : System.Buffers.ReadOnlySequence&lt;'T&gt;" Usage="System.Buffers.ReadOnlySequence&lt;'T&gt;.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ReadOnlySequence&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an empty <see cref="T:System.Buffers.ReadOnlySequence`1" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public SequencePosition End { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.SequencePosition End" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ReadOnlySequence`1.End" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property End As SequencePosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property SequencePosition End { SequencePosition get(); };" />
      <MemberSignature Language="F#" Value="member this.End : SequencePosition" Usage="System.Buffers.ReadOnlySequence&lt;'T&gt;.End" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SequencePosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the position at the end of the <see cref="T:System.Buffers.ReadOnlySequence`1" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="First">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;T&gt; First { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlyMemory`1&lt;!T&gt; First" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ReadOnlySequence`1.First" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property First As ReadOnlyMemory(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlyMemory&lt;T&gt; First { ReadOnlyMemory&lt;T&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.First : ReadOnlyMemory&lt;'T&gt;" Usage="System.Buffers.ReadOnlySequence&lt;'T&gt;.First" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.ReadOnlyMemory`1" /> from the first segment.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstSpan">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;T&gt; FirstSpan { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;!T&gt; FirstSpan" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ReadOnlySequence`1.FirstSpan" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstSpan As ReadOnlySpan(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlySpan&lt;T&gt; FirstSpan { ReadOnlySpan&lt;T&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstSpan : ReadOnlySpan&lt;'T&gt;" Usage="System.Buffers.ReadOnlySequence&lt;'T&gt;.FirstSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.ReadOnlySpan`1" /> from the first segment.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Buffers.ReadOnlySequence&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Buffers.ReadOnlySequence`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ReadOnlySequence`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As ReadOnlySequence(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Buffers::ReadOnlySequence&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Buffers.ReadOnlySequence&lt;'T&gt;.Enumerator" Usage="readOnlySequence.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ReadOnlySequence&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator over the <see cref="T:System.Buffers.ReadOnlySequence`1" />.</summary>
        <returns>Returns an enumerator over the <see cref="T:System.Buffers.ReadOnlySequence`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public SequencePosition GetPosition (long offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.SequencePosition GetPosition(int64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ReadOnlySequence`1.GetPosition(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPosition (offset As Long) As SequencePosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SequencePosition GetPosition(long offset);" />
      <MemberSignature Language="F#" Value="member this.GetPosition : int64 -&gt; SequencePosition" Usage="readOnlySequence.GetPosition offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SequencePosition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="offset">The offset from the start of the sequence.</param>
        <summary>Returns a new <see cref="T:System.SequencePosition" /> at an <paramref name="offset" /> from the start of the sequence.</summary>
        <returns>An object representing the sequence position that starts at the specified <paramref name="offset" /> from the start of the sequence.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public SequencePosition GetPosition (long offset, SequencePosition origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.SequencePosition GetPosition(int64 offset, valuetype System.SequencePosition origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ReadOnlySequence`1.GetPosition(System.Int64,System.SequencePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPosition (offset As Long, origin As SequencePosition) As SequencePosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SequencePosition GetPosition(long offset, SequencePosition origin);" />
      <MemberSignature Language="F#" Value="member this.GetPosition : int64 * SequencePosition -&gt; SequencePosition" Usage="readOnlySequence.GetPosition (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SequencePosition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.SequencePosition" />
      </Parameters>
      <Docs>
        <param name="offset">The offset from the specified <paramref name="origin" /> sequence position.</param>
        <param name="origin">A sequence position representing the point from which to initiate the offset.</param>
        <summary>Returns a new <see cref="T:System.SequencePosition" /> starting at the specified offset from the <paramref name="origin" /> position.</summary>
        <returns>An object representing the sequence position that starts at the <paramref name="offset" /> position of the specified <paramref name="origin" /> position object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ReadOnlySequence`1.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Buffers.ReadOnlySequence&lt;'T&gt;.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the <see cref="T:System.Buffers.ReadOnlySequence`1" /> is empty.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSingleSegment">
      <MemberSignature Language="C#" Value="public bool IsSingleSegment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSingleSegment" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ReadOnlySequence`1.IsSingleSegment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSingleSegment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSingleSegment { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSingleSegment : bool" Usage="System.Buffers.ReadOnlySequence&lt;'T&gt;.IsSingleSegment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the <see cref="T:System.Buffers.ReadOnlySequence`1" /> contains a single <see cref="T:System.ReadOnlyMemory`1" /> segment.</summary>
        <value>
          <see langword="true" /> if the read-only sequence is empty; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ReadOnlySequence`1.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Buffers.ReadOnlySequence&lt;'T&gt;.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the length of the <see cref="T:System.Buffers.ReadOnlySequence`1" />.</summary>
        <value>The length of the read-only sequence.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Slice">
      <MemberSignature Language="C#" Value="public System.Buffers.ReadOnlySequence&lt;T&gt; Slice (long start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Buffers.ReadOnlySequence`1&lt;!T&gt; Slice(int64 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ReadOnlySequence`1.Slice(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Slice (start As Long) As ReadOnlySequence(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Buffers::ReadOnlySequence&lt;T&gt; Slice(long start);" />
      <MemberSignature Language="F#" Value="member this.Slice : int64 -&gt; System.Buffers.ReadOnlySequence&lt;'T&gt;" Usage="readOnlySequence.Slice start" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ReadOnlySequence&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="start">The start index at which to begin this slice.</param>
        <summary>Forms a slice out of the current <see cref="T:System.Buffers.ReadOnlySequence`1" />, beginning at a specified index and continuing to the end of the read-only sequence.</summary>
        <returns>A slice starting at index <paramref name="start" /> and continuing to the end of the current read-only sequence.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Slice">
      <MemberSignature Language="C#" Value="public System.Buffers.ReadOnlySequence&lt;T&gt; Slice (SequencePosition start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Buffers.ReadOnlySequence`1&lt;!T&gt; Slice(valuetype System.SequencePosition start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ReadOnlySequence`1.Slice(System.SequencePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Function Slice (start As SequencePosition) As ReadOnlySequence(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Buffers::ReadOnlySequence&lt;T&gt; Slice(SequencePosition start);" />
      <MemberSignature Language="F#" Value="member this.Slice : SequencePosition -&gt; System.Buffers.ReadOnlySequence&lt;'T&gt;" Usage="readOnlySequence.Slice start" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ReadOnlySequence&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.SequencePosition" />
      </Parameters>
      <Docs>
        <param name="start">The starting (inclusive) <see cref="T:System.SequencePosition" /> at which to begin this slice.</param>
        <summary>Forms a slice out of the current <see cref="T:System.Buffers.ReadOnlySequence`1" />, beginning at a specified sequence position and continuing to the end of the read-only sequence.</summary>
        <returns>A slice starting at sequence position <paramref name="start" /> and continuing to the end of the current read-only sequence.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Slice">
      <MemberSignature Language="C#" Value="public System.Buffers.ReadOnlySequence&lt;T&gt; Slice (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Buffers.ReadOnlySequence`1&lt;!T&gt; Slice(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ReadOnlySequence`1.Slice(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Slice (start As Integer, length As Integer) As ReadOnlySequence(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Buffers::ReadOnlySequence&lt;T&gt; Slice(int start, int length);" />
      <MemberSignature Language="F#" Value="member this.Slice : int * int -&gt; System.Buffers.ReadOnlySequence&lt;'T&gt;" Usage="readOnlySequence.Slice (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ReadOnlySequence&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">The index at which to begin this slice.</param>
        <param name="length">The length of the slice.</param>
        <summary>Forms a slice out of the current <see cref="T:System.Buffers.ReadOnlySequence`1" />, beginning at <paramref name="start" />, with <paramref name="length" /> items.</summary>
        <returns>A slice that consists of <paramref name="length" /> elements from the current instance starting at index <paramref name="start" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Slice">
      <MemberSignature Language="C#" Value="public System.Buffers.ReadOnlySequence&lt;T&gt; Slice (int start, SequencePosition end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Buffers.ReadOnlySequence`1&lt;!T&gt; Slice(int32 start, valuetype System.SequencePosition end) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ReadOnlySequence`1.Slice(System.Int32,System.SequencePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Function Slice (start As Integer, end As SequencePosition) As ReadOnlySequence(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Buffers::ReadOnlySequence&lt;T&gt; Slice(int start, SequencePosition end);" />
      <MemberSignature Language="F#" Value="member this.Slice : int * SequencePosition -&gt; System.Buffers.ReadOnlySequence&lt;'T&gt;" Usage="readOnlySequence.Slice (start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ReadOnlySequence&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.SequencePosition" />
      </Parameters>
      <Docs>
        <param name="start">The index at which to begin this slice.</param>
        <param name="end">The end (exclusive) <see cref="T:System.SequencePosition" /> of the slice.</param>
        <summary>Forms a slice out of the current <see cref="T:System.Buffers.ReadOnlySequence`1" />, beginning at <paramref name="start" /> and ending at <paramref name="end" /> (exclusive).</summary>
        <returns>A slice that consists of items from the <paramref name="start" /> index to, but not including, the <paramref name="end" /> sequence position in the current read-only sequence.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Slice">
      <MemberSignature Language="C#" Value="public System.Buffers.ReadOnlySequence&lt;T&gt; Slice (long start, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Buffers.ReadOnlySequence`1&lt;!T&gt; Slice(int64 start, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ReadOnlySequence`1.Slice(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Slice (start As Long, length As Long) As ReadOnlySequence(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Buffers::ReadOnlySequence&lt;T&gt; Slice(long start, long length);" />
      <MemberSignature Language="F#" Value="member this.Slice : int64 * int64 -&gt; System.Buffers.ReadOnlySequence&lt;'T&gt;" Usage="readOnlySequence.Slice (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ReadOnlySequence&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="start">The index at which to begin this slice.</param>
        <param name="length">The length of the slice.</param>
        <summary>Forms a slice out of the given <see cref="T:System.Buffers.ReadOnlySequence`1" />, beginning at <paramref name="start" />, with <paramref name="length" /> items.</summary>
        <returns>A slice that consists of <paramref name="length" /> elements from the current instance starting at index <paramref name="start" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Slice">
      <MemberSignature Language="C#" Value="public System.Buffers.ReadOnlySequence&lt;T&gt; Slice (long start, SequencePosition end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Buffers.ReadOnlySequence`1&lt;!T&gt; Slice(int64 start, valuetype System.SequencePosition end) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ReadOnlySequence`1.Slice(System.Int64,System.SequencePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Function Slice (start As Long, end As SequencePosition) As ReadOnlySequence(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Buffers::ReadOnlySequence&lt;T&gt; Slice(long start, SequencePosition end);" />
      <MemberSignature Language="F#" Value="member this.Slice : int64 * SequencePosition -&gt; System.Buffers.ReadOnlySequence&lt;'T&gt;" Usage="readOnlySequence.Slice (start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ReadOnlySequence&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int64" />
        <Parameter Name="end" Type="System.SequencePosition" />
      </Parameters>
      <Docs>
        <param name="start">The index at which to begin this slice.</param>
        <param name="end">The end (exclusive) of the slice.</param>
        <summary>Forms a slice out of the current <see cref="T:System.Buffers.ReadOnlySequence`1" />, beginning at <paramref name="start" /> and ending at <paramref name="end" /> (exclusive).</summary>
        <returns>A slice that consists of items from the <paramref name="start" /> index to, but not including, the <paramref name="end" /> sequence position in the current read-only sequence.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Slice">
      <MemberSignature Language="C#" Value="public System.Buffers.ReadOnlySequence&lt;T&gt; Slice (SequencePosition start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Buffers.ReadOnlySequence`1&lt;!T&gt; Slice(valuetype System.SequencePosition start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ReadOnlySequence`1.Slice(System.SequencePosition,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Slice (start As SequencePosition, length As Integer) As ReadOnlySequence(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Buffers::ReadOnlySequence&lt;T&gt; Slice(SequencePosition start, int length);" />
      <MemberSignature Language="F#" Value="member this.Slice : SequencePosition * int -&gt; System.Buffers.ReadOnlySequence&lt;'T&gt;" Usage="readOnlySequence.Slice (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ReadOnlySequence&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.SequencePosition" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">The starting (inclusive) <see cref="T:System.SequencePosition" /> at which to begin this slice.</param>
        <param name="length">The length of the slice.</param>
        <summary>Forms a slice out of the current <see cref="T:System.Buffers.ReadOnlySequence`1" />, beginning at <paramref name="start" />, with <paramref name="length" /> items.</summary>
        <returns>A slice that consists of <paramref name="length" /> elements from the current instance starting at sequence position <paramref name="start" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Slice">
      <MemberSignature Language="C#" Value="public System.Buffers.ReadOnlySequence&lt;T&gt; Slice (SequencePosition start, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Buffers.ReadOnlySequence`1&lt;!T&gt; Slice(valuetype System.SequencePosition start, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ReadOnlySequence`1.Slice(System.SequencePosition,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Slice (start As SequencePosition, length As Long) As ReadOnlySequence(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Buffers::ReadOnlySequence&lt;T&gt; Slice(SequencePosition start, long length);" />
      <MemberSignature Language="F#" Value="member this.Slice : SequencePosition * int64 -&gt; System.Buffers.ReadOnlySequence&lt;'T&gt;" Usage="readOnlySequence.Slice (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ReadOnlySequence&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.SequencePosition" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="start">The starting (inclusive) <see cref="T:System.SequencePosition" /> at which to begin this slice.</param>
        <param name="length">The length of the slice.</param>
        <summary>Forms a slice out of the current <see cref="T:System.Buffers.ReadOnlySequence`1" />, beginning at <paramref name="start" />, with <paramref name="length" /> items.</summary>
        <returns>A slice that consists of <paramref name="length" /> elements from the current instance starting at sequence position <paramref name="start" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Slice">
      <MemberSignature Language="C#" Value="public System.Buffers.ReadOnlySequence&lt;T&gt; Slice (SequencePosition start, SequencePosition end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Buffers.ReadOnlySequence`1&lt;!T&gt; Slice(valuetype System.SequencePosition start, valuetype System.SequencePosition end) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ReadOnlySequence`1.Slice(System.SequencePosition,System.SequencePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Function Slice (start As SequencePosition, end As SequencePosition) As ReadOnlySequence(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Buffers::ReadOnlySequence&lt;T&gt; Slice(SequencePosition start, SequencePosition end);" />
      <MemberSignature Language="F#" Value="member this.Slice : SequencePosition * SequencePosition -&gt; System.Buffers.ReadOnlySequence&lt;'T&gt;" Usage="readOnlySequence.Slice (start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ReadOnlySequence&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.SequencePosition" />
        <Parameter Name="end" Type="System.SequencePosition" />
      </Parameters>
      <Docs>
        <param name="start">The starting (inclusive) <see cref="T:System.SequencePosition" /> at which to begin this slice.</param>
        <param name="end">The ending (exclusive) <see cref="T:System.SequencePosition" /> of the slice.</param>
        <summary>Forms a slice out of the current <see cref="T:System.Buffers.ReadOnlySequence`1" />, beginning at <paramref name="start" /> and ending at <paramref name="end" /> (exclusive).</summary>
        <returns>A slice that consists of items from the <paramref name="start" /> sequence position to, but not including, the <paramref name="end" /> sequence position in the current read-only sequence.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public SequencePosition Start { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.SequencePosition Start" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ReadOnlySequence`1.Start" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Start As SequencePosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property SequencePosition Start { SequencePosition get(); };" />
      <MemberSignature Language="F#" Value="member this.Start : SequencePosition" Usage="System.Buffers.ReadOnlySequence&lt;'T&gt;.Start" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SequencePosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the position to the start of the <see cref="T:System.Buffers.ReadOnlySequence`1" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ReadOnlySequence`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="readOnlySequence.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string that represents the current sequence.</summary>
        <returns>A string that represents the current sequence.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="TryGet">
      <MemberSignature Language="C#" Value="public bool TryGet (ref SequencePosition position, out ReadOnlyMemory&lt;T&gt; memory, bool advance = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGet(valuetype System.SequencePosition&amp; position, [out] valuetype System.ReadOnlyMemory`1&lt;!T&gt;&amp; memory, bool advance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ReadOnlySequence`1.TryGet(System.SequencePosition@,System.ReadOnlyMemory{`0}@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGet (ByRef position As SequencePosition, ByRef memory As ReadOnlyMemory(Of T), Optional advance As Boolean = true) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryGet : SequencePosition * ReadOnlyMemory * bool -&gt; bool" Usage="readOnlySequence.TryGet (position, memory, advance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.SequencePosition" RefType="ref" />
        <Parameter Name="memory" Type="System.ReadOnlyMemory&lt;T&gt;" RefType="out" />
        <Parameter Name="advance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">The current sequence position.</param>
        <param name="memory">A read-only memory span that contains the next segment after <paramref name="position" />.</param>
        <param name="advance">
          <see langword="true" /> if <paramref name="position" /> should to the beginning of next segment; otherwise, <see langword="false" />.</param>
        <summary>Tries to retrieve the next segment after <paramref name="position" /> and returns a value that indicates whether the operation succeeded.</summary>
        <returns>Returns <see langword="true" /> if the method returned the next segment, or <see langword="false" /> if the end of the read-only sequence was reached.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

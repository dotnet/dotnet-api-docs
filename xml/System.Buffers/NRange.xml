<Type Name="NRange" FullName="System.Buffers.NRange">
  <TypeSignature Language="C#" Value="public readonly struct NRange : IEquatable&lt;System.Buffers.NRange&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit NRange extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Buffers.NRange&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.NRange" />
  <TypeSignature Language="VB.NET" Value="Public Structure NRange&#xA;Implements IEquatable(Of NRange)" />
  <TypeSignature Language="F#" Value="type NRange = struct" />
  <TypeSignature Language="C++ CLI" Value="public value class NRange : IEquatable&lt;System::Buffers::NRange&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Numerics.Tensors</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Buffers.NRange&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("SYSLIB5001", UrlFormat="https://aka.ms/dotnet-warnings/{0}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("SYSLIB5001", UrlFormat="https://aka.ms/dotnet-warnings/{0}")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represent a range that has start and end indices.</summary>
    <remarks>
      <code>
            int[] someArray = new int[5] { 1, 2, 3, 4, 5 };
            int[] subArray1 = someArray[0..2]; // { 1, 2 }
            int[] subArray2 = someArray[1..^0]; // { 2, 3, 4, 5 }
            </code>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NRange (Range range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Range range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.NRange.#ctor(System.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (range As Range)" />
      <MemberSignature Language="F#" Value="new System.Buffers.NRange : Range -&gt; System.Buffers.NRange" Usage="new System.Buffers.NRange range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NRange(Range range);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="range" Type="System.Range" />
      </Parameters>
      <Docs>
        <param name="range">The <see cref="T:System.Range" /> to use.</param>
        <summary>
            Constructs an <see cref="T:System.Buffers.NRange" /> object using a <see cref="T:System.Range" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NRange (System.Buffers.NIndex start, System.Buffers.NIndex end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Buffers.NIndex start, valuetype System.Buffers.NIndex end) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.NRange.#ctor(System.Buffers.NIndex,System.Buffers.NIndex)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (start As NIndex, end As NIndex)" />
      <MemberSignature Language="F#" Value="new System.Buffers.NRange : System.Buffers.NIndex * System.Buffers.NIndex -&gt; System.Buffers.NRange" Usage="new System.Buffers.NRange (start, end)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NRange(System::Buffers::NIndex start, System::Buffers::NIndex end);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="start" Type="System.Buffers.NIndex" />
        <Parameter Name="end" Type="System.Buffers.NIndex" />
      </Parameters>
      <Docs>
        <param name="start">Represent the inclusive start <see cref="T:System.Buffers.NIndex" /> of the <see cref="T:System.Buffers.NRange" />.</param>
        <param name="end">Represent the exclusive end <see cref="T:System.Buffers.NIndex" /> of the <see cref="T:System.Buffers.NRange" />.</param>
        <summary>Constructs an <see cref="T:System.Buffers.NRange" /> object using the start and end <see cref="T:System.Buffers.NIndex" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Buffers.NRange All { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Buffers.NRange All" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.NRange.All" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property All As NRange" />
      <MemberSignature Language="F#" Value="static member All : System.Buffers.NRange" Usage="System.Buffers.NRange.All" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Buffers::NRange All { System::Buffers::NRange get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.NRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Create an NRange object starting from first element to the end.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public System.Buffers.NIndex End { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Buffers.NIndex End" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.NRange.End" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property End As NIndex" />
      <MemberSignature Language="F#" Value="member this.End : System.Buffers.NIndex" Usage="System.Buffers.NRange.End" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Buffers::NIndex End { System::Buffers::NIndex get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.NIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the exclusive end NIndex of the NRange.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAt">
      <MemberSignature Language="C#" Value="public static System.Buffers.NRange EndAt (System.Buffers.NIndex end);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.NRange EndAt(valuetype System.Buffers.NIndex end) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.NRange.EndAt(System.Buffers.NIndex)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndAt (end As NIndex) As NRange" />
      <MemberSignature Language="F#" Value="static member EndAt : System.Buffers.NIndex -&gt; System.Buffers.NRange" Usage="System.Buffers.NRange.EndAt end" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::NRange EndAt(System::Buffers::NIndex end);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.NRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="end" Type="System.Buffers.NIndex" />
      </Parameters>
      <Docs>
        <param name="end">To be added.</param>
        <summary>Create an NRange object starting from first element in the collection to the end NIndex.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Buffers.NRange other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Buffers.NRange other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.NRange.Equals(System.Buffers.NRange)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As NRange) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Buffers.NRange -&gt; bool" Usage="nRange.Equals other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Buffers::NRange other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Buffers.NRange" />
      </Parameters>
      <Docs>
        <param name="other">An object to compare with this object</param>
        <summary>Indicates whether the current NRange object is equal to another NRange object.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.NRange.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="nRange.Equals value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">An object to compare with this object</param>
        <summary>Indicates whether the current <see cref="T:System.Buffers.NRange" /> object is equal to another object of the same type.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.NRange.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="nRange.GetHashCode " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code for this instance.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOffsetAndLength">
      <MemberSignature Language="C#" Value="public (IntPtr Offset, IntPtr Length) GetOffsetAndLength (IntPtr length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ValueTuple`2&lt;native int, native int&gt; GetOffsetAndLength(native int length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.NRange.GetOffsetAndLength(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOffsetAndLength (length As IntPtr) As ValueTuple(Of IntPtr, IntPtr)" />
      <MemberSignature Language="F#" Value="member this.GetOffsetAndLength : nativeint -&gt; ValueTuple&lt;nativeint, nativeint&gt;" Usage="nRange.GetOffsetAndLength length" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTuple&lt;IntPtr, IntPtr&gt; GetOffsetAndLength(IntPtr length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.IntPtr,System.IntPtr&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Offset", "Length" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Offset", "Length" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="length">The length of the collection that the NRange will be used with. length has to be a positive value.</param>
        <summary>Calculate the start offset and length of NRange object using a collection length.</summary>
        <returns>To be added.</returns>
        <remarks>
            For performance reason, we don't validate the input length parameter against negative values.
            It is expected NRange will be used with collections which always have non negative length/count.
            We validate the NRange is inside the length scope though.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_CheckedExplicit">
      <MemberSignature Language="C#" Value="public static Range op_CheckedExplicit (System.Buffers.NRange value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Range op_CheckedExplicit(valuetype System.Buffers.NRange value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.NRange.op_CheckedExplicit(System.Buffers.NRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_CheckedExplicit (value As NRange) As Range" />
      <MemberSignature Language="F#" Value="static member op_CheckedExplicit : System.Buffers.NRange -&gt; Range" Usage="System.Buffers.NRange.op_CheckedExplicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Range op_CheckedExplicit(System::Buffers::NRange value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Buffers.NRange" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Range (System.Buffers.NRange value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Range op_Explicit(valuetype System.Buffers.NRange value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.NRange.op_Explicit(System.Buffers.NRange)~System.Range" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As NRange) As Range" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Buffers.NRange -&gt; Range" Usage="System.Buffers.NRange.op_Explicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Range(System::Buffers::NRange value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Buffers.NRange" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Buffers.NRange" /> to convert.</param>
        <summary>
            Explicitly converts an <see cref="T:System.Buffers.NRange" /> to a <see cref="T:System.Range" /> without doing bounds checks.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Buffers.NRange (Range range);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Buffers.NRange op_Implicit(valuetype System.Range range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.NRange.op_Implicit(System.Range)~System.Buffers.NRange" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (range As Range) As NRange" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Range -&gt; System.Buffers.NRange" Usage="System.Buffers.NRange.op_Implicit range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Buffers::NRange(Range range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.NRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Range" />
      </Parameters>
      <Docs>
        <param name="range" />
        <summary>
            Implicitly converts a <see cref="T:System.Range" /> to an <see cref="T:System.Buffers.NRange" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public System.Buffers.NIndex Start { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Buffers.NIndex Start" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.NRange.Start" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Start As NIndex" />
      <MemberSignature Language="F#" Value="member this.Start : System.Buffers.NIndex" Usage="System.Buffers.NRange.Start" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Buffers::NIndex Start { System::Buffers::NIndex get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.NIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the inclusive start NIndex of the NRange.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAt">
      <MemberSignature Language="C#" Value="public static System.Buffers.NRange StartAt (System.Buffers.NIndex start);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.NRange StartAt(valuetype System.Buffers.NIndex start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.NRange.StartAt(System.Buffers.NIndex)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StartAt (start As NIndex) As NRange" />
      <MemberSignature Language="F#" Value="static member StartAt : System.Buffers.NIndex -&gt; System.Buffers.NRange" Usage="System.Buffers.NRange.StartAt start" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::NRange StartAt(System::Buffers::NIndex start);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.NRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Buffers.NIndex" />
      </Parameters>
      <Docs>
        <param name="start">To be added.</param>
        <summary>Create an NRange object starting from start NIndex to the end of the collection.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToRange">
      <MemberSignature Language="C#" Value="public Range ToRange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Range ToRange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.NRange.ToRange" />
      <MemberSignature Language="VB.NET" Value="Public Function ToRange () As Range" />
      <MemberSignature Language="F#" Value="member this.ToRange : unit -&gt; Range" Usage="nRange.ToRange " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Range ToRange();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Range</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Converts a <see cref="T:System.Buffers.NRange" /> to a <see cref="T:System.Range" />.
            </summary>
        <returns>The converted Range.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToRangeUnchecked">
      <MemberSignature Language="C#" Value="public Range ToRangeUnchecked ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Range ToRangeUnchecked() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.NRange.ToRangeUnchecked" />
      <MemberSignature Language="VB.NET" Value="Public Function ToRangeUnchecked () As Range" />
      <MemberSignature Language="F#" Value="member this.ToRangeUnchecked : unit -&gt; Range" Usage="nRange.ToRangeUnchecked " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Range ToRangeUnchecked();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Range</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Converts a <see cref="T:System.Buffers.NRange" /> to a <see cref="T:System.Range" /> wihout doing bounds checks.
            </summary>
        <returns>The converted Range.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.NRange.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="nRange.ToString " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts the value of the current NRange object to its equivalent string representation.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

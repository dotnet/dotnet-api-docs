<Type Name="TrustSection" FullName="System.Web.Configuration.TrustSection">
  <TypeSignature Language="C#" Value="public sealed class TrustSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TrustSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.TrustSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TrustSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrustSection sealed : System::Configuration::ConfigurationSection" />
  <TypeSignature Language="F#" Value="type TrustSection = class&#xA;    inherit ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Configures the code-access security level that is applied to an application. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.Configuration.TrustSection> class lets you programmatically access and modify the configuration file `<trust>` section. The `<trust>` section configures the code-access-security permissions set that is used to run a particular application. This section can be declared at the machine, site, and application levels.  
  
   
  
## Examples  
 This section provides two code examples. The first demonstrates how to declaratively specify values for several properties of the <xref:System.Web.Configuration.TrustSection> class. The second demonstrates how to use the <xref:System.Web.Configuration.TrustSection> type.  
  
 The following configuration file example shows how to declaratively specify values for several properties of the <xref:System.Web.Configuration.TrustSection> class.  
  
```  
<system.web>  
  <trust level="Full" originUrl=""/>  
</system.web>  
```  
  
 The following code example demonstrates how to use the <xref:System.Web.Configuration.TrustSection> type.  
  
 [!code-csharp[System.Web.Configuration.TrustSection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.TrustSection/CS/trustsection.cs#1)]
 [!code-vb[System.Web.Configuration.TrustSection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.TrustSection/VB/trustsection.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationSection" />
    <altmember cref="T:System.Web.Configuration.TrustLevel" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TrustSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.TrustSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TrustSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.TrustSection" /> class using default settings.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.Configuration.TrustSection.%23ctor%2A> constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.TrustSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.  
  
 The following table shows the default settings that are used for the <xref:System.Web.Configuration.TrustSection.%23ctor%2A> constructor.  
  
|Setting|Default value|  
|-------------|-------------------|  
|<xref:System.Web.Configuration.TrustSection.Level%2A>|`Full`|  
|<xref:System.Web.Configuration.TrustSection.OriginUrl%2A>|`""`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostSecurityPolicyResolverType">
      <MemberSignature Language="C#" Value="public string HostSecurityPolicyResolverType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostSecurityPolicyResolverType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType" />
      <MemberSignature Language="VB.NET" Value="Public Property HostSecurityPolicyResolverType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HostSecurityPolicyResolverType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostSecurityPolicyResolverType : string with get, set" Usage="System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("hostSecurityPolicyResolverType", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the custom security-policy resolution type.</summary>
        <value>The custom security-policy resolution type.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If <xref:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType%2A> is an empty string, the application uses ASP.NET default policy to determine an assembly's permissions. The default policy for evaluating permissions grants full trust to the Global Assembly Cache (GAC) assemblies and partial trust to the other assemblies.  
  
 This attribute cannot be set to a `null` value.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegacyCasModel">
      <MemberSignature Language="C#" Value="public bool LegacyCasModel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LegacyCasModel" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TrustSection.LegacyCasModel" />
      <MemberSignature Language="VB.NET" Value="Public Property LegacyCasModel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LegacyCasModel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LegacyCasModel : bool with get, set" Usage="System.Web.Configuration.TrustSection.LegacyCasModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("legacyCasModel", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or set a value that indicates whether the legacy code access security is enabled.</summary>
        <value>
          <see langword="true" /> if legacy code access security is enabled; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When legacy code access security is enabled, the following security rules apply:  
  
-   Code access security (CAS) policy is established from the combination of machine policy and the specified ASP.NET partial trust policy file.  
  
-   Partial trust application domains revert to being full trust at the application domain level.  
  
-   The legacy partial trust files located in the CONFIG directory in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] install directory are used instead of the new partial trust configuration files that are located in the same directory. The legacy files include the membership conditions that were found in the [!INCLUDE[net_v11_long](~/includes/net-v11-long-md.md)] or [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)] versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
-   Additional membership conditions to evaluate permissions are applied, as defined in ASP.NET partial trust files. The CONFIG directory that ships with the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] release contains legacy partial-trust policy files. The names of these files include the string "legacy" and contain the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)] sections. These sections contain non-empty membership conditions that are needed to evaluating CAS policy against assemblies.  
  
-   If the ASP.NET application is running in partial trust and the security policy file for the trust level maps to one of the default partial trust configuration files, ASP.NET automatically chooses the corresponding legacy configuration file. For example, if the security policy would ordinarily be loaded from Web_mediumtrust.config, then in legacy mode ASP.NET will instead load security policy from Legacy.web_mediumtrust.config.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public string Level { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Level" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TrustSection.Level" />
      <MemberSignature Language="VB.NET" Value="Public Property Level As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Level { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Level : string with get, set" Usage="System.Web.Configuration.TrustSection.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("level", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the security level under which the application will run.</summary>
        <value>The name of the trust level. The default is <see langword="&quot;Full&quot;" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.Configuration.TrustSection.Level%2A> property specifies the security level under which the application will be run. The default is `"Full"`.  
  
 There are five available trust levels:  
  
-   Full  
  
-   High  
  
-   Medium  
  
-   Low  
  
-   Minimal  
  
 The named levels correspond to the security levels that are defined in the `<trustLevel>` element for `<securityPolicy>`.  
  
   
  
## Examples  
 The following code example demonstrates how to use the <xref:System.Web.Configuration.TrustSection.Level%2A> property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.TrustSection> class.  
  
 [!code-csharp[System.Web.Configuration.TrustSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.TrustSection/CS/trustsection.cs#2)]
 [!code-vb[System.Web.Configuration.TrustSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.TrustSection/VB/trustsection.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.SecurityPolicySection.TrustLevels" />
        <related type="Article" href="https://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1">ASP.NET Trust Levels and Policy Files</related>
      </Docs>
    </Member>
    <Member MemberName="OriginUrl">
      <MemberSignature Language="C#" Value="public string OriginUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TrustSection.OriginUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property OriginUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OriginUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OriginUrl : string with get, set" Usage="System.Web.Configuration.TrustSection.OriginUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("originUrl", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies the URL of origin for an application.</summary>
        <value>A well-formed HTTP URL or an empty string (""). The default is an empty string.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.Configuration.TrustSection.OriginUrl%2A> property specifies the URL of origin for an application. If present, this can be used for some permissions, such as those associated with the <xref:System.Net.WebRequest> class. This enables you to specify a single URL that is used to create permission through a <xref:System.Net.WebPermission> instance. This permission then grants ASP.NET code that has partial trust the right to make HTTP calls (for example, a Web service call) to that URL. The value must be a well-formed HTTP URL.  
  
   
  
## Examples  
 The following code example demonstrates how to use the <xref:System.Web.Configuration.TrustSection.OriginUrl%2A> property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.TrustSection> class.  
  
 [!code-csharp[System.Web.Configuration.TrustSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.TrustSection/CS/trustsection.cs#3)]
 [!code-vb[System.Web.Configuration.TrustSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.TrustSection/VB/trustsection.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionSetName">
      <MemberSignature Language="C#" Value="public string PermissionSetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PermissionSetName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TrustSection.PermissionSetName" />
      <MemberSignature Language="VB.NET" Value="Public Property PermissionSetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PermissionSetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PermissionSetName : string with get, set" Usage="System.Web.Configuration.TrustSection.PermissionSetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("permissionSetName", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the permission set.</summary>
        <value>The name of the permission set.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.Configuration.TrustSection.PermissionSetName%2A> property enables you to define in a partial trust configuration file the named permission set that is used during the initialization of an application domain.  
  
 By default, the <xref:System.Web.Configuration.TrustSection.PermissionSetName%2A> property is "ASP.Net" This is the name of the permission set that is used to initialize the application domain.  
  
 This attribute cannot be set to an empty string or a `null` value.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequestInApplicationTrust">
      <MemberSignature Language="C#" Value="public bool ProcessRequestInApplicationTrust { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProcessRequestInApplicationTrust" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust" />
      <MemberSignature Language="VB.NET" Value="Public Property ProcessRequestInApplicationTrust As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProcessRequestInApplicationTrust { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProcessRequestInApplicationTrust : bool with get, set" Usage="System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("processRequestInApplicationTrust", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or set a value that indicates whether page requests are automatically restricted to the permissions that are configured in the trust policy file that is applied to the ASP.NET application.</summary>
        <value>
          <see langword="true" /> if requests are automatically restricted to the permissions that are configured in the trust policy file; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TrustSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.TrustSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

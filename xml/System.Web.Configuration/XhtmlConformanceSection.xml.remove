<Type Name="XhtmlConformanceSection" FullName="System.Web.Configuration.XhtmlConformanceSection">
  <TypeSignature Language="C#" Value="public sealed class XhtmlConformanceSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XhtmlConformanceSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.XhtmlConformanceSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XhtmlConformanceSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class XhtmlConformanceSection sealed : System::Configuration::ConfigurationSection" />
  <TypeSignature Language="F#" Value="type XhtmlConformanceSection = class&#xA;    inherit ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Configures the <see langword="xhtmlConformance" /> section. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.Configuration.XhtmlConformanceSection> class provides a way to programmatically access and modify the `xhtmlConformance` section of a configuration file.  
  
> [!NOTE]
>  ASP.NET allows you to create Web pages that are compliant with XHTML 1.1 standards. For more information about the XHTML 1.1 standard, see the W3C site. By default, when you are working with browsers that support HTML 4.0 or later, ASP.NET pages and controls render markup that is compatible with the XHTML 1.0 Transitional standard. However, under some circumstances, you might not want ASP.NET to render XHTML markup. This is typically true when you have existing pages that rely on tags or attributes that would ordinarily be prohibited by XHTML.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Only rendering changes that are likely to break existing applications are reverted to their old behavior. There is no mechanism to revert all changes made to comply with the XHTML specification.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XhtmlConformanceSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.XhtmlConformanceSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XhtmlConformanceSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.XhtmlConformanceSection" /> class using default parameters.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.Configuration.XhtmlConformanceSection.%23ctor%2A> constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.XhtmlConformanceSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.XhtmlConformanceMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.XhtmlConformanceMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.XhtmlConformanceSection.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As XhtmlConformanceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::XhtmlConformanceMode Mode { System::Web::Configuration::XhtmlConformanceMode get(); void set(System::Web::Configuration::XhtmlConformanceMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Web.Configuration.XhtmlConformanceMode with get, set" Usage="System.Web.Configuration.XhtmlConformanceSection.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("mode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.XhtmlConformanceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="P:System.Web.Configuration.XhtmlConformanceSection.Mode" /> property.</summary>
        <value>One of the <see cref="T:System.Web.Configuration.XhtmlConformanceMode" /> values. The default is <see cref="F:System.Web.Configuration.XhtmlConformanceMode.Transitional" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 By default, when you are working with browsers that support HTML 4.0 or later, ASP.NET pages and controls render markup that is compatible with the XHTML 1.0 Transitional standard. However, under some circumstances, you might not want ASP.NET to render XHTML markup. This is typically true when you have existing pages that rely on tags or attributes that would ordinarily be prohibited by XHTML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.XhtmlConformanceSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.XhtmlConformanceSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

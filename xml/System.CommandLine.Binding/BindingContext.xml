<Type Name="BindingContext" FullName="System.CommandLine.Binding.BindingContext">
  <TypeSignature Language="C#" Value="public sealed class BindingContext : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BindingContext extends System.Object implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Binding.BindingContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BindingContext&#xA;Implements IServiceProvider" />
  <TypeSignature Language="F#" Value="type BindingContext = class&#xA;    interface IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingContext sealed : IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Creates object instances based on command line parser results, injected services, and other value sources.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddService">
      <MemberSignature Language="C#" Value="public void AddService (Type serviceType, Func&lt;IServiceProvider,object&gt; factory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddService(class System.Type serviceType, class System.Func`2&lt;class System.IServiceProvider, object&gt; factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Binding.BindingContext.AddService(System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddService (serviceType As Type, factory As Func(Of IServiceProvider, Object))" />
      <MemberSignature Language="F#" Value="member this.AddService : Type * Func&lt;IServiceProvider, obj&gt; -&gt; unit" Usage="bindingContext.AddService (serviceType, factory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddService(Type ^ serviceType, Func&lt;IServiceProvider ^, System::Object ^&gt; ^ factory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="factory" Type="System.Func&lt;System.IServiceProvider,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="serviceType">The type for which this service factory will provide an instance.</param>
        <param name="factory">A delegate that provides an instance of the specified service type.</param>
        <summary>
            Adds the specified service factory to the binding context.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddService&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void AddService&lt;T&gt; (Func&lt;IServiceProvider,T&gt; factory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddService&lt;T&gt;(class System.Func`2&lt;class System.IServiceProvider, !!T&gt; factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Binding.BindingContext.AddService``1(System.Func{System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddService(Of T) (factory As Func(Of IServiceProvider, T))" />
      <MemberSignature Language="F#" Value="member this.AddService : Func&lt;IServiceProvider, 'T&gt; -&gt; unit" Usage="bindingContext.AddService factory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void AddService(Func&lt;IServiceProvider ^, T&gt; ^ factory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="factory" Type="System.Func&lt;System.IServiceProvider,T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type for which this service factory will provide an instance.</typeparam>
        <param name="factory">A delegate that provides an instance of the specified service type.</param>
        <summary>
            Adds the specified service factory to the binding context.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Console">
      <MemberSignature Language="C#" Value="public System.CommandLine.IConsole Console { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CommandLine.IConsole Console" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Binding.BindingContext.Console" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Console As IConsole" />
      <MemberSignature Language="F#" Value="member this.Console : System.CommandLine.IConsole" Usage="System.CommandLine.Binding.BindingContext.Console" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CommandLine::IConsole ^ Console { System::CommandLine::IConsole ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.IConsole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The console to which output should be written during the current invocation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object? GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Binding.BindingContext.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="bindingContext.GetService serviceType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">An object that specifies the type of service object to get.</param>
        <summary>Gets the service object of the specified type.</summary>
        <returns>A service object of type <paramref name="serviceType" />.

 -or-

 <see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ParseResult">
      <MemberSignature Language="C#" Value="public System.CommandLine.Parsing.ParseResult ParseResult { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CommandLine.Parsing.ParseResult ParseResult" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Binding.BindingContext.ParseResult" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParseResult As ParseResult" />
      <MemberSignature Language="F#" Value="member this.ParseResult : System.CommandLine.Parsing.ParseResult" Usage="System.CommandLine.Binding.BindingContext.ParseResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CommandLine::Parsing::ParseResult ^ ParseResult { System::CommandLine::Parsing::ParseResult ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Parsing.ParseResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The parse result for the current invocation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

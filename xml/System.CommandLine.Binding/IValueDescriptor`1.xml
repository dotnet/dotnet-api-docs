<Type Name="IValueDescriptor&lt;T&gt;" FullName="System.CommandLine.Binding.IValueDescriptor&lt;T&gt;">
  <TypeSignature Language="C#" Value="public interface IValueDescriptor&lt;out T&gt; : System.CommandLine.Binding.IValueDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IValueDescriptor`1&lt;+ T&gt; implements class System.CommandLine.Binding.IValueDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Binding.IValueDescriptor`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IValueDescriptor(Of Out T)&#xA;Implements IValueDescriptor" />
  <TypeSignature Language="F#" Value="type IValueDescriptor&lt;'T&gt; = interface&#xA;    interface IValueDescriptor" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IValueDescriptor : System::CommandLine::Binding::IValueDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.CommandLine.Binding.IValueDescriptor</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
    <inheritdoc />
  </Docs>
  <Members />
</Type>

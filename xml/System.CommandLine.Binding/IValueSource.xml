<Type Name="IValueSource" FullName="System.CommandLine.Binding.IValueSource">
  <TypeSignature Language="C#" Value="public interface IValueSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IValueSource" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Binding.IValueSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IValueSource" />
  <TypeSignature Language="F#" Value="type IValueSource = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IValueSource" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Binds a value from a <see cref="T:System.CommandLine.Binding.BindingContext" /> based on a <see cref="T:System.CommandLine.Binding.IValueDescriptor" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (System.CommandLine.Binding.IValueDescriptor valueDescriptor, System.CommandLine.Binding.BindingContext? bindingContext, out object? boundValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(class System.CommandLine.Binding.IValueDescriptor valueDescriptor, class System.CommandLine.Binding.BindingContext bindingContext, [out] object&amp; boundValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Binding.IValueSource.TryGetValue(System.CommandLine.Binding.IValueDescriptor,System.CommandLine.Binding.BindingContext,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (valueDescriptor As IValueDescriptor, bindingContext As BindingContext, ByRef boundValue As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : System.CommandLine.Binding.IValueDescriptor * System.CommandLine.Binding.BindingContext * obj -&gt; bool" Usage="iValueSource.TryGetValue (valueDescriptor, bindingContext, boundValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(System::CommandLine::Binding::IValueDescriptor ^ valueDescriptor, System::CommandLine::Binding::BindingContext ^ bindingContext, [Runtime::InteropServices::Out] System::Object ^ % boundValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueDescriptor" Type="System.CommandLine.Binding.IValueDescriptor" />
        <Parameter Name="bindingContext" Type="System.CommandLine.Binding.BindingContext" />
        <Parameter Name="boundValue" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="valueDescriptor">The descriptor for the value to be bound.</param>
        <param name="bindingContext">The binding context from which to bind the value.</param>
        <param name="boundValue">The bound value.</param>
        <summary>
            Gets a value from a binding context. A return value indicates whether a value matching the specified value descriptor was present.
            </summary>
        <returns>
          <see langword="true" /> if a matching value was found; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

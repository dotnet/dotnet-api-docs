<Type Name="IWorkflowDebuggerService" FullName="System.Workflow.Runtime.DebugEngine.IWorkflowDebuggerService">
  <TypeSignature Language="C#" Value="public interface IWorkflowDebuggerService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWorkflowDebuggerService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.DebugEngine.IWorkflowDebuggerService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWorkflowDebuggerService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWorkflowDebuggerService" />
  <TypeSignature Language="F#" Value="type IWorkflowDebuggerService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Notifies workflow debugger that code condition evaluation events have occurred.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 This interface is implemented by the workflow runtime engine.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="NotifyHandlerInvoked">
      <MemberSignature Language="C#" Value="public void NotifyHandlerInvoked ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyHandlerInvoked() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.DebugEngine.IWorkflowDebuggerService.NotifyHandlerInvoked" />
      <MemberSignature Language="VB.NET" Value="Public Sub NotifyHandlerInvoked ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyHandlerInvoked();" />
      <MemberSignature Language="F#" Value="abstract member NotifyHandlerInvoked : unit -&gt; unit" Usage="iWorkflowDebuggerService.NotifyHandlerInvoked " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called after a code condition handler is invoked.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyHandlerInvoking">
      <MemberSignature Language="C#" Value="public void NotifyHandlerInvoking (Delegate delegateHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyHandlerInvoking(class System.Delegate delegateHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.DebugEngine.IWorkflowDebuggerService.NotifyHandlerInvoking(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NotifyHandlerInvoking (delegateHandler As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyHandlerInvoking(Delegate ^ delegateHandler);" />
      <MemberSignature Language="F#" Value="abstract member NotifyHandlerInvoking : Delegate -&gt; unit" Usage="iWorkflowDebuggerService.NotifyHandlerInvoking delegateHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateHandler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="delegateHandler">The code condition handler that will be invoked.</param>
        <summary>Called before a code condition handler is invoked.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

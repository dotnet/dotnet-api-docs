<Type Name="AzureStorageResultStore" FullName="Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResultStore">
  <TypeSignature Language="C#" Value="public sealed class AzureStorageResultStore : Microsoft.Extensions.AI.Evaluation.Reporting.IResultStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AzureStorageResultStore extends System.Object implements class Microsoft.Extensions.AI.Evaluation.Reporting.IResultStore" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResultStore" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AzureStorageResultStore&#xA;Implements IResultStore" />
  <TypeSignature Language="F#" Value="type AzureStorageResultStore = class&#xA;    interface IResultStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class AzureStorageResultStore sealed : Microsoft::Extensions::AI::Evaluation::Reporting::IResultStore" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting.Azure</AssemblyName>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.AI.Evaluation.Reporting.IResultStore</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <param name="client">
            A <see cref="T:Azure.Storage.Files.DataLake.DataLakeDirectoryClient" /> with access to an Azure Storage container under which the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s should be stored.
            </param>
    <summary>
            An <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.IResultStore" /> implementation that stores <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s under an Azure Storage
            container.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AzureStorageResultStore (Azure.Storage.Files.DataLake.DataLakeDirectoryClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Storage.Files.DataLake.DataLakeDirectoryClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResultStore.#ctor(Azure.Storage.Files.DataLake.DataLakeDirectoryClient)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (client As DataLakeDirectoryClient)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResultStore : Azure.Storage.Files.DataLake.DataLakeDirectoryClient -&gt; Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResultStore" Usage="new Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResultStore client" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AzureStorageResultStore(Azure::Storage::Files::DataLake::DataLakeDirectoryClient ^ client);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting.Azure</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="client" Type="Azure.Storage.Files.DataLake.DataLakeDirectoryClient" />
      </Parameters>
      <Docs>
        <param name="client">
            A <see cref="T:Azure.Storage.Files.DataLake.DataLakeDirectoryClient" /> with access to an Azure Storage container under which the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s should be stored.
            </param>
        <summary>
            An <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.IResultStore" /> implementation that stores <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s under an Azure Storage
            container.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteResultsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask DeleteResultsAsync (string? executionName = default, string? scenarioName = default, string? iterationName = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DeleteResultsAsync(string executionName, string scenarioName, string iterationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResultStore.DeleteResultsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteResultsAsync (Optional executionName As String = Nothing, Optional scenarioName As String = Nothing, Optional iterationName As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member DeleteResultsAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DeleteResultsAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="azureStorageResultStore.DeleteResultsAsync (executionName, scenarioName, iterationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.AI.Evaluation.Reporting.IResultStore.DeleteResultsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting.Azure</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionName" Type="System.String" />
        <Parameter Name="scenarioName" Type="System.String" />
        <Parameter Name="iterationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="executionName">To be added.</param>
        <param name="scenarioName">To be added.</param>
        <param name="iterationName">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetIterationNamesAsync">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IAsyncEnumerable&lt;string&gt; GetIterationNamesAsync (string executionName, string scenarioName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;string&gt; GetIterationNamesAsync(string executionName, string scenarioName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResultStore.GetIterationNamesAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIterationNamesAsync (executionName As String, scenarioName As String, Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetIterationNamesAsync : string * string * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;string&gt;&#xA;override this.GetIterationNamesAsync : string * string * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;string&gt;" Usage="azureStorageResultStore.GetIterationNamesAsync (executionName, scenarioName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.AI.Evaluation.Reporting.IResultStore.GetIterationNamesAsync(System.String,System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting.Azure</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResultStore+&lt;GetIterationNamesAsync&gt;d__6))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResultStore+&lt;GetIterationNamesAsync&gt;d__6))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionName" Type="System.String" />
        <Parameter Name="scenarioName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.EnumeratorCancellation]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.EnumeratorCancellation&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="executionName">To be added.</param>
        <param name="scenarioName">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetLatestExecutionNamesAsync">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IAsyncEnumerable&lt;string&gt; GetLatestExecutionNamesAsync (int? count = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;string&gt; GetLatestExecutionNamesAsync(valuetype System.Nullable`1&lt;int32&gt; count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResultStore.GetLatestExecutionNamesAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLatestExecutionNamesAsync (Optional count As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetLatestExecutionNamesAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;string&gt;&#xA;override this.GetLatestExecutionNamesAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;string&gt;" Usage="azureStorageResultStore.GetLatestExecutionNamesAsync (count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.AI.Evaluation.Reporting.IResultStore.GetLatestExecutionNamesAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting.Azure</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResultStore+&lt;GetLatestExecutionNamesAsync&gt;d__4))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResultStore+&lt;GetLatestExecutionNamesAsync&gt;d__4))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.EnumeratorCancellation]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.EnumeratorCancellation&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="count">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetScenarioNamesAsync">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IAsyncEnumerable&lt;string&gt; GetScenarioNamesAsync (string executionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;string&gt; GetScenarioNamesAsync(string executionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResultStore.GetScenarioNamesAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetScenarioNamesAsync (executionName As String, Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetScenarioNamesAsync : string * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;string&gt;&#xA;override this.GetScenarioNamesAsync : string * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;string&gt;" Usage="azureStorageResultStore.GetScenarioNamesAsync (executionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.AI.Evaluation.Reporting.IResultStore.GetScenarioNamesAsync(System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting.Azure</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResultStore+&lt;GetScenarioNamesAsync&gt;d__5))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResultStore+&lt;GetScenarioNamesAsync&gt;d__5))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.EnumeratorCancellation]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.EnumeratorCancellation&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="executionName">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ReadResultsAsync">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult&gt; ReadResultsAsync (string? executionName = default, string? scenarioName = default, string? iterationName = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;class Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult&gt; ReadResultsAsync(string executionName, string scenarioName, string iterationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResultStore.ReadResultsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadResultsAsync (Optional executionName As String = Nothing, Optional scenarioName As String = Nothing, Optional iterationName As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of ScenarioRunResult)" />
      <MemberSignature Language="F#" Value="abstract member ReadResultsAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult&gt;&#xA;override this.ReadResultsAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult&gt;" Usage="azureStorageResultStore.ReadResultsAsync (executionName, scenarioName, iterationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.AI.Evaluation.Reporting.IResultStore.ReadResultsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting.Azure</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResultStore+&lt;ReadResultsAsync&gt;d__7))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResultStore+&lt;ReadResultsAsync&gt;d__7))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-10.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionName" Type="System.String" />
        <Parameter Name="scenarioName" Type="System.String" />
        <Parameter Name="iterationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.EnumeratorCancellation]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.EnumeratorCancellation&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="executionName">To be added.</param>
        <param name="scenarioName">To be added.</param>
        <param name="iterationName">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="WriteResultsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask WriteResultsAsync (System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult&gt; results, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask WriteResultsAsync(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult&gt; results, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResultStore.WriteResultsAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteResultsAsync (results As IEnumerable(Of ScenarioRunResult), Optional cancellationToken As CancellationToken = Nothing) As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member WriteResultsAsync : seq&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&#xA;override this.WriteResultsAsync : seq&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="azureStorageResultStore.WriteResultsAsync (results, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.AI.Evaluation.Reporting.IResultStore.WriteResultsAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting.Azure</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="results">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>

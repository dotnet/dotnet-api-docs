<Type Name="AzureStorageResponseCache" FullName="Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResponseCache">
  <TypeSignature Language="C#" Value="public sealed class AzureStorageResponseCache : Microsoft.Extensions.Caching.Distributed.IDistributedCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AzureStorageResponseCache extends System.Object implements class Microsoft.Extensions.Caching.Distributed.IDistributedCache" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResponseCache" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AzureStorageResponseCache&#xA;Implements IDistributedCache" />
  <TypeSignature Language="F#" Value="type AzureStorageResponseCache = class&#xA;    interface IDistributedCache" />
  <TypeSignature Language="C++ CLI" Value="public ref class AzureStorageResponseCache sealed : Microsoft::Extensions::Caching::Distributed::IDistributedCache" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting.Azure</AssemblyName>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Caching.Distributed.IDistributedCache</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <param name="client">
            A <see cref="T:Azure.Storage.Files.DataLake.DataLakeDirectoryClient" /> with access to an Azure Storage container under which the cached AI
            responses should be stored.
            </param>
    <param name="scenarioName">
            The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName" /> for the returned <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResponseCache" /> instance.
            </param>
    <param name="iterationName">
            The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName" /> for the returned <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResponseCache" /> instance.
            </param>
    <param name="timeToLiveForCacheEntries">
            An optional <see cref="T:System.TimeSpan" /> that specifies the maximum amount of time that cached AI responses should
            survive in the cache before they are considered expired and evicted.
            </param>
    <summary>
            An <see cref="T:Microsoft.Extensions.Caching.Distributed.IDistributedCache" /> implementation that stores cached AI responses for a particular
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> under an Azure Storage container.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AzureStorageResponseCache (Azure.Storage.Files.DataLake.DataLakeDirectoryClient client, string scenarioName, string iterationName, TimeSpan? timeToLiveForCacheEntries = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Storage.Files.DataLake.DataLakeDirectoryClient client, string scenarioName, string iterationName, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; timeToLiveForCacheEntries) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResponseCache.#ctor(Azure.Storage.Files.DataLake.DataLakeDirectoryClient,System.String,System.String,System.Nullable{System.TimeSpan})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (client As DataLakeDirectoryClient, scenarioName As String, iterationName As String, Optional timeToLiveForCacheEntries As Nullable(Of TimeSpan) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResponseCache : Azure.Storage.Files.DataLake.DataLakeDirectoryClient * string * string * Nullable&lt;TimeSpan&gt; -&gt; Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResponseCache" Usage="new Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResponseCache (client, scenarioName, iterationName, timeToLiveForCacheEntries)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting.Azure</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="client" Type="Azure.Storage.Files.DataLake.DataLakeDirectoryClient" />
        <Parameter Name="scenarioName" Type="System.String" />
        <Parameter Name="iterationName" Type="System.String" />
        <Parameter Name="timeToLiveForCacheEntries" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="client">
            A <see cref="T:Azure.Storage.Files.DataLake.DataLakeDirectoryClient" /> with access to an Azure Storage container under which the cached AI
            responses should be stored.
            </param>
        <param name="scenarioName">
            The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName" /> for the returned <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResponseCache" /> instance.
            </param>
        <param name="iterationName">
            The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName" /> for the returned <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResponseCache" /> instance.
            </param>
        <param name="timeToLiveForCacheEntries">
            An optional <see cref="T:System.TimeSpan" /> that specifies the maximum amount of time that cached AI responses should
            survive in the cache before they are considered expired and evicted.
            </param>
        <summary>
            An <see cref="T:Microsoft.Extensions.Caching.Distributed.IDistributedCache" /> implementation that stores cached AI responses for a particular
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> under an Azure Storage container.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public byte[]? Get (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] Get(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResponseCache.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (key As String) As Byte()" />
      <MemberSignature Language="F#" Value="abstract member Get : string -&gt; byte[]&#xA;override this.Get : string -&gt; byte[]" Usage="azureStorageResponseCache.Get key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ Get(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.Get(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting.Azure</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]?&gt; GetAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; GetAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResponseCache.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Byte())" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;&#xA;override this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="azureStorageResponseCache.GetAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.GetAsync(System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting.Azure</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResponseCache.Refresh(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (key As String)" />
      <MemberSignature Language="F#" Value="abstract member Refresh : string -&gt; unit&#xA;override this.Refresh : string -&gt; unit" Usage="azureStorageResponseCache.Refresh key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Refresh(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.Refresh(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting.Azure</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="RefreshAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RefreshAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RefreshAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResponseCache.RefreshAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function RefreshAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member RefreshAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.RefreshAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="azureStorageResponseCache.RefreshAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.RefreshAsync(System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting.Azure</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResponseCache.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (key As String)" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; unit&#xA;override this.Remove : string -&gt; unit" Usage="azureStorageResponseCache.Remove key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.Remove(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting.Azure</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="RemoveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResponseCache.RemoveAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member RemoveAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.RemoveAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="azureStorageResponseCache.RemoveAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.RemoveAsync(System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting.Azure</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (string key, byte[] value, Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, unsigned int8[] value, class Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResponseCache.Set(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (key As String, value As Byte(), options As DistributedCacheEntryOptions)" />
      <MemberSignature Language="F#" Value="abstract member Set : string * byte[] * Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions -&gt; unit&#xA;override this.Set : string * byte[] * Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions -&gt; unit" Usage="azureStorageResponseCache.Set (key, value, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Set(System::String ^ key, cli::array &lt;System::Byte&gt; ^ value, Microsoft::Extensions::Caching::Distributed::DistributedCacheEntryOptions ^ options);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.Set(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting.Azure</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="options" Type="Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetAsync (string key, byte[] value, Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetAsync(string key, unsigned int8[] value, class Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageResponseCache.SetAsync(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetAsync (key As String, value As Byte(), options As DistributedCacheEntryOptions, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetAsync : string * byte[] * Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SetAsync : string * byte[] * Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="azureStorageResponseCache.SetAsync (key, value, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.SetAsync(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting.Azure</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="options" Type="Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="AzureStorageReportingConfiguration" FullName="Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageReportingConfiguration">
  <TypeSignature Language="C#" Value="public static class AzureStorageReportingConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AzureStorageReportingConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageReportingConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class AzureStorageReportingConfiguration" />
  <TypeSignature Language="F#" Value="type AzureStorageReportingConfiguration = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class AzureStorageReportingConfiguration abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting.Azure</AssemblyName>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
    <AssemblyVersion>9.5.0.0</AssemblyVersion>
    <AssemblyVersion>9.6.0.0</AssemblyVersion>
    <AssemblyVersion>9.7.0.0</AssemblyVersion>
    <AssemblyVersion>9.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Contains factory method for creating a <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration" /> that persists
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s to Azure Storage and also uses the storage to cache AI responses. 
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration Create (Azure.Storage.Files.DataLake.DataLakeDirectoryClient client, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.IEvaluator&gt; evaluators, Microsoft.Extensions.AI.Evaluation.ChatConfiguration? chatConfiguration = default, bool enableResponseCaching = true, TimeSpan? timeToLiveForCacheEntries = default, System.Collections.Generic.IEnumerable&lt;string&gt;? cachingKeys = default, string executionName = &quot;Default&quot;, Func&lt;Microsoft.Extensions.AI.Evaluation.EvaluationMetric,Microsoft.Extensions.AI.Evaluation.EvaluationMetricInterpretation?&gt;? evaluationMetricInterpreter = default, System.Collections.Generic.IEnumerable&lt;string&gt;? tags = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration Create(class Azure.Storage.Files.DataLake.DataLakeDirectoryClient client, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.Evaluation.IEvaluator&gt; evaluators, class Microsoft.Extensions.AI.Evaluation.ChatConfiguration chatConfiguration, bool enableResponseCaching, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; timeToLiveForCacheEntries, class System.Collections.Generic.IEnumerable`1&lt;string&gt; cachingKeys, string executionName, class System.Func`2&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationMetric, class Microsoft.Extensions.AI.Evaluation.EvaluationMetricInterpretation&gt; evaluationMetricInterpreter, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageReportingConfiguration.Create(Azure.Storage.Files.DataLake.DataLakeDirectoryClient,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.IEvaluator},Microsoft.Extensions.AI.Evaluation.ChatConfiguration,System.Boolean,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{System.String},System.String,System.Func{Microsoft.Extensions.AI.Evaluation.EvaluationMetric,Microsoft.Extensions.AI.Evaluation.EvaluationMetricInterpretation},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (client As DataLakeDirectoryClient, evaluators As IEnumerable(Of IEvaluator), Optional chatConfiguration As ChatConfiguration = Nothing, Optional enableResponseCaching As Boolean = true, Optional timeToLiveForCacheEntries As Nullable(Of TimeSpan) = Nothing, Optional cachingKeys As IEnumerable(Of String) = Nothing, Optional executionName As String = &quot;Default&quot;, Optional evaluationMetricInterpreter As Func(Of EvaluationMetric, EvaluationMetricInterpretation) = Nothing, Optional tags As IEnumerable(Of String) = Nothing) As ReportingConfiguration" />
      <MemberSignature Language="F#" Value="static member Create : Azure.Storage.Files.DataLake.DataLakeDirectoryClient * seq&lt;Microsoft.Extensions.AI.Evaluation.IEvaluator&gt; * Microsoft.Extensions.AI.Evaluation.ChatConfiguration * bool * Nullable&lt;TimeSpan&gt; * seq&lt;string&gt; * string * Func&lt;Microsoft.Extensions.AI.Evaluation.EvaluationMetric, Microsoft.Extensions.AI.Evaluation.EvaluationMetricInterpretation&gt; * seq&lt;string&gt; -&gt; Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.Storage.AzureStorageReportingConfiguration.Create (client, evaluators, chatConfiguration, enableResponseCaching, timeToLiveForCacheEntries, cachingKeys, executionName, evaluationMetricInterpreter, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting.Azure</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.Storage.Files.DataLake.DataLakeDirectoryClient" />
        <Parameter Name="evaluators" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.IEvaluator&gt;" />
        <Parameter Name="chatConfiguration" Type="Microsoft.Extensions.AI.Evaluation.ChatConfiguration">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="enableResponseCaching" Type="System.Boolean" />
        <Parameter Name="timeToLiveForCacheEntries" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="cachingKeys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="executionName" Type="System.String" />
        <Parameter Name="evaluationMetricInterpreter" Type="System.Func&lt;Microsoft.Extensions.AI.Evaluation.EvaluationMetric,Microsoft.Extensions.AI.Evaluation.EvaluationMetricInterpretation&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 2 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 2 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="client">
            A <see cref="T:Azure.Storage.Files.DataLake.DataLakeDirectoryClient" /> with access to an Azure Storage container under which the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s and all cached AI responses should be stored.
            </param>
        <param name="evaluators">
            The set of <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />s that should be invoked to evaluate AI responses.
            </param>
        <param name="chatConfiguration">
            A <see cref="T:Microsoft.Extensions.AI.Evaluation.ChatConfiguration" /> that specifies the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> that is used by AI-based
            <paramref name="evaluators" /> included in the returned <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration" />. Can be omitted if
            none of the included <paramref name="evaluators" /> are AI-based.
            </param>
        <param name="enableResponseCaching">
          <see langword="true" /> to enable caching of AI responses; <see langword="false" /> otherwise.
            </param>
        <param name="timeToLiveForCacheEntries">
            An optional <see cref="T:System.TimeSpan" /> that specifies the maximum amount of time that cached AI responses should
            survive in the cache before they are considered expired and evicted.
            </param>
        <param name="cachingKeys">
            An optional collection of unique strings that should be hashed when generating the cache keys for cached AI
            responses. See <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration.CachingKeys" /> for more information about this concept.
            </param>
        <param name="executionName">
            The name of the current execution. See <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName" /> for more information about this
            concept. Uses a fixed default value <c>"Default"</c> if omitted.
            </param>
        <param name="evaluationMetricInterpreter">
            An optional function that can be used to override <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetricInterpretation" />s for
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s returned from evaluations that use the returned
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration" />. The supplied function can either return a new
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetricInterpretation" /> for any <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" /> that is supplied to it, or
            return <see langword="null" /> if the <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationMetric.Interpretation" /> should be left unchanged.
            </param>
        <param name="tags">
            A optional set of text tags applicable to all <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />s created using the returned
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration" />.
            </param>
        <summary>
            Creates a <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration" /> that persists <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s to Azure Storage
            and also uses the storage to cache AI responses.
            </summary>
        <returns>
            A <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration" /> that persists <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s to Azure Storage
            and also uses Azure Storage to cache AI responses.
            </returns>
        <remarks>
            Note that when <paramref name="enableResponseCaching" /> is set to <see langword="true" />, the cache keys used
            for the cached responses are not guaranteed to be stable across releases of the library. In other words, when
            you update your code to reference a newer version of the library, it is possible that old cached responses
            (persisted to the cache using older versions of the library) will no longer be used - instead new responses
            will be fetched from the LLM and added to the cache for use in subsequent executions.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

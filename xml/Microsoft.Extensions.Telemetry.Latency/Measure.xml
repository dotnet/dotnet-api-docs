<Type Name="Measure" FullName="Microsoft.Extensions.Telemetry.Latency.Measure">
  <TypeSignature Language="C#" Value="public readonly struct Measure : IEquatable&lt;Microsoft.Extensions.Telemetry.Latency.Measure&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Measure extends System.ValueType implements class System.IEquatable`1&lt;valuetype Microsoft.Extensions.Telemetry.Latency.Measure&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Telemetry.Latency.Measure" />
  <TypeSignature Language="VB.NET" Value="Public Structure Measure&#xA;Implements IEquatable(Of Measure)" />
  <TypeSignature Language="F#" Value="type Measure = struct" />
  <TypeSignature Language="C++ CLI" Value="public value class Measure : IEquatable&lt;Microsoft::Extensions::Telemetry::Latency::Measure&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.Extensions.Telemetry.Latency.Measure&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Represents a measure.
            </summary>
    <remarks>
            Measures are used to aggregate or record values. They are used to track
            statistics about recurring operations. Example: number of calls to
            a database, total latency of database calls etc.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Measure (string name, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Latency.Measure.#ctor(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Long)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Telemetry.Latency.Measure : string * int64 -&gt; Microsoft.Extensions.Telemetry.Latency.Measure" Usage="new Microsoft.Extensions.Telemetry.Latency.Measure (name, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Measure(System::String ^ name, long value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="name">Name of the counter.</param>
        <param name="value">Value of the counter.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Telemetry.Latency.Measure" /> struct.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.Extensions.Telemetry.Latency.Measure other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Microsoft.Extensions.Telemetry.Latency.Measure other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Latency.Measure.Equals(Microsoft.Extensions.Telemetry.Latency.Measure)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Measure) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.Extensions.Telemetry.Latency.Measure -&gt; bool" Usage="measure.Equals other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Microsoft::Extensions::Telemetry::Latency::Measure other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Extensions.Telemetry.Latency.Measure" />
      </Parameters>
      <Docs>
        <param name="other">The other measure.</param>
        <summary>
            Determines whether this and a specified measure are identical.
            </summary>
        <returns>
          <see langword="true" /> if identical;<see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Latency.Measure.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="measure.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare.</param>
        <summary>
            Determines whether this and a specified object are identical.
            </summary>
        <returns>
          <see langword="true" /> if identical;<see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Latency.Measure.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="measure.GetHashCode " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets a hash code for this object.
            </summary>
        <returns>A hash code for the current object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Telemetry.Latency.Measure.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.Extensions.Telemetry.Latency.Measure.Name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the measure.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.Extensions.Telemetry.Latency.Measure left, Microsoft.Extensions.Telemetry.Latency.Measure right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Microsoft.Extensions.Telemetry.Latency.Measure left, valuetype Microsoft.Extensions.Telemetry.Latency.Measure right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Latency.Measure.op_Equality(Microsoft.Extensions.Telemetry.Latency.Measure,Microsoft.Extensions.Telemetry.Latency.Measure)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Measure, right As Measure) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.Extensions.Telemetry.Latency.Measure * Microsoft.Extensions.Telemetry.Latency.Measure -&gt; bool" Usage="left = right" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::Extensions::Telemetry::Latency::Measure left, Microsoft::Extensions::Telemetry::Latency::Measure right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.Extensions.Telemetry.Latency.Measure" />
        <Parameter Name="right" Type="Microsoft.Extensions.Telemetry.Latency.Measure" />
      </Parameters>
      <Docs>
        <param name="left">First value.</param>
        <param name="right">Second value.</param>
        <summary>
            Equality operator.
            </summary>
        <returns>
          <see langword="true" /> if its operands are equal, <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.Extensions.Telemetry.Latency.Measure left, Microsoft.Extensions.Telemetry.Latency.Measure right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Microsoft.Extensions.Telemetry.Latency.Measure left, valuetype Microsoft.Extensions.Telemetry.Latency.Measure right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Latency.Measure.op_Inequality(Microsoft.Extensions.Telemetry.Latency.Measure,Microsoft.Extensions.Telemetry.Latency.Measure)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Measure, right As Measure) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.Extensions.Telemetry.Latency.Measure * Microsoft.Extensions.Telemetry.Latency.Measure -&gt; bool" Usage="Microsoft.Extensions.Telemetry.Latency.Measure.op_Inequality (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::Extensions::Telemetry::Latency::Measure left, Microsoft::Extensions::Telemetry::Latency::Measure right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.Extensions.Telemetry.Latency.Measure" />
        <Parameter Name="right" Type="Microsoft.Extensions.Telemetry.Latency.Measure" />
      </Parameters>
      <Docs>
        <param name="left">First value.</param>
        <param name="right">Second value.</param>
        <summary>
            Inequality operator.
            </summary>
        <returns>
          <see langword="true" /> if its operands are inequal, <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public long Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Telemetry.Latency.Measure.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Long" />
      <MemberSignature Language="F#" Value="member this.Value : int64" Usage="Microsoft.Extensions.Telemetry.Latency.Measure.Value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Value { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the value of the measure.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

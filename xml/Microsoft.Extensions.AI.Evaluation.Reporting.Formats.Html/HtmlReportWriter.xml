<Type Name="HtmlReportWriter" FullName="Microsoft.Extensions.AI.Evaluation.Reporting.Formats.Html.HtmlReportWriter">
  <TypeSignature Language="C#" Value="public sealed class HtmlReportWriter : Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationReportWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HtmlReportWriter extends System.Object implements class Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationReportWriter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.Evaluation.Reporting.Formats.Html.HtmlReportWriter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HtmlReportWriter&#xA;Implements IEvaluationReportWriter" />
  <TypeSignature Language="F#" Value="type HtmlReportWriter = class&#xA;    interface IEvaluationReportWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlReportWriter sealed : Microsoft::Extensions::AI::Evaluation::Reporting::IEvaluationReportWriter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationReportWriter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <param name="reportFilePath">
            The path to a file where the report will be written. If the file already exists, it will be overwritten.
            </param>
    <summary>
            An <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationReportWriter" /> that generates an HTML report containing all the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s present in the supplied <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s and writes it to the
            specified <paramref name="reportFilePath" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlReportWriter (string reportFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string reportFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.Formats.Html.HtmlReportWriter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reportFilePath As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.Evaluation.Reporting.Formats.Html.HtmlReportWriter : string -&gt; Microsoft.Extensions.AI.Evaluation.Reporting.Formats.Html.HtmlReportWriter" Usage="new Microsoft.Extensions.AI.Evaluation.Reporting.Formats.Html.HtmlReportWriter reportFilePath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlReportWriter(System::String ^ reportFilePath);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reportFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reportFilePath">
            The path to a file where the report will be written. If the file already exists, it will be overwritten.
            </param>
        <summary>
            An <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationReportWriter" /> that generates an HTML report containing all the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s present in the supplied <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s and writes it to the
            specified <paramref name="reportFilePath" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteReportAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask WriteReportAsync (System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult&gt; scenarioRunResults, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask WriteReportAsync(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult&gt; scenarioRunResults, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.Formats.Html.HtmlReportWriter.WriteReportAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteReportAsync (scenarioRunResults As IEnumerable(Of ScenarioRunResult), Optional cancellationToken As CancellationToken = Nothing) As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member WriteReportAsync : seq&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&#xA;override this.WriteReportAsync : seq&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="htmlReportWriter.WriteReportAsync (scenarioRunResults, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationReportWriter.WriteReportAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scenarioRunResults" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scenarioRunResults">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ServiceAcceptingFactoryService" FullName="Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService">
  <TypeSignature Language="C#" Value="public class ServiceAcceptingFactoryService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceAcceptingFactoryService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceAcceptingFactoryService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceAcceptingFactoryService" />
  <TypeSignature Language="F#" Value="type ServiceAcceptingFactoryService = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DependencyInjection.Specification.Tests</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceAcceptingFactoryService (Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService scopedService, Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService transientService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService scopedService, class Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService transientService) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scopedService As ScopedFactoryService, transientService As IFactoryService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceAcceptingFactoryService(Microsoft::Extensions::DependencyInjection::Specification::Fakes::ScopedFactoryService ^ scopedService, Microsoft::Extensions::DependencyInjection::Specification::Fakes::IFactoryService ^ transientService);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService : Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService * Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService -&gt; Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService" Usage="new Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService (scopedService, transientService)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scopedService" Type="Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService" />
        <Parameter Name="transientService" Type="Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService" />
      </Parameters>
      <Docs>
        <param name="scopedService">To be added.</param>
        <param name="transientService">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScopedService">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService ScopedService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService ScopedService" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.ScopedService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScopedService As ScopedFactoryService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::DependencyInjection::Specification::Fakes::ScopedFactoryService ^ ScopedService { Microsoft::Extensions::DependencyInjection::Specification::Fakes::ScopedFactoryService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ScopedService : Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService" Usage="Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.ScopedService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransientService">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService TransientService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService TransientService" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.TransientService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransientService As IFactoryService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::DependencyInjection::Specification::Fakes::IFactoryService ^ TransientService { Microsoft::Extensions::DependencyInjection::Specification::Fakes::IFactoryService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransientService : Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService" Usage="Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.TransientService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

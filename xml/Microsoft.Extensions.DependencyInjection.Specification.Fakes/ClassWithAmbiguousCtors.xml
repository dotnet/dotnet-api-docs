<Type Name="ClassWithAmbiguousCtors" FullName="Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors">
  <TypeSignature Language="C#" Value="public class ClassWithAmbiguousCtors" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClassWithAmbiguousCtors extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors" />
  <TypeSignature Language="VB.NET" Value="Public Class ClassWithAmbiguousCtors" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClassWithAmbiguousCtors" />
  <TypeSignature Language="F#" Value="type ClassWithAmbiguousCtors = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DependencyInjection.Specification.Tests</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClassWithAmbiguousCtors (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClassWithAmbiguousCtors(System::String ^ data);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors : string -&gt; Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors" Usage="new Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors data" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClassWithAmbiguousCtors (Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService service, int data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService service, int32 data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (service As IFakeService, data As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClassWithAmbiguousCtors(Microsoft::Extensions::DependencyInjection::Specification::Fakes::IFakeService ^ service, int data);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors : Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService * int -&gt; Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors" Usage="new Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors (service, data)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="service" Type="Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService" />
        <Parameter Name="data" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="service">To be added.</param>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClassWithAmbiguousCtors (Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService service, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService service, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (service As IFakeService, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClassWithAmbiguousCtors(Microsoft::Extensions::DependencyInjection::Specification::Fakes::IFakeService ^ service, System::String ^ data);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors : Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService * string -&gt; Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors" Usage="new Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors (service, data)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="service" Type="Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="service">To be added.</param>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClassWithAmbiguousCtors (Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService service, string data1, int data2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService service, string data1, int32 data2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (service As IFakeService, data1 As String, data2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClassWithAmbiguousCtors(Microsoft::Extensions::DependencyInjection::Specification::Fakes::IFakeService ^ service, System::String ^ data1, int data2);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors : Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService * string * int -&gt; Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors" Usage="new Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors (service, data1, data2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="service" Type="Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService" />
        <Parameter Name="data1" Type="System.String" />
        <Parameter Name="data2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="service">To be added.</param>
        <param name="data1">To be added.</param>
        <param name="data2">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CtorUsed">
      <MemberSignature Language="C#" Value="public string CtorUsed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CtorUsed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.CtorUsed" />
      <MemberSignature Language="VB.NET" Value="Public Property CtorUsed As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CtorUsed { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CtorUsed : string with get, set" Usage="Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.CtorUsed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data1">
      <MemberSignature Language="C#" Value="public string Data1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Data1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data1 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Data1 { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data1 : string" Usage="Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data2">
      <MemberSignature Language="C#" Value="public int Data2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Data2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data2 As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Data2 { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Data2 : int" Usage="Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FakeService">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService FakeService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService FakeService" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.FakeService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FakeService As IFakeService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::DependencyInjection::Specification::Fakes::IFakeService ^ FakeService { Microsoft::Extensions::DependencyInjection::Specification::Fakes::IFakeService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FakeService : Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService" Usage="Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.FakeService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

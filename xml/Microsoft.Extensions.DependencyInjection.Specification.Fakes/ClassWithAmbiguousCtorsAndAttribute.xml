<Type Name="ClassWithAmbiguousCtorsAndAttribute" FullName="Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtorsAndAttribute">
  <TypeSignature Language="C#" Value="public class ClassWithAmbiguousCtorsAndAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClassWithAmbiguousCtorsAndAttribute extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtorsAndAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ClassWithAmbiguousCtorsAndAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClassWithAmbiguousCtorsAndAttribute" />
  <TypeSignature Language="F#" Value="type ClassWithAmbiguousCtorsAndAttribute = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DependencyInjection.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClassWithAmbiguousCtorsAndAttribute (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtorsAndAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClassWithAmbiguousCtorsAndAttribute(System::String ^ data);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtorsAndAttribute : string -&gt; Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtorsAndAttribute" Usage="new Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtorsAndAttribute data" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClassWithAmbiguousCtorsAndAttribute (Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService service, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService service, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtorsAndAttribute.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (service As IFakeService, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClassWithAmbiguousCtorsAndAttribute(Microsoft::Extensions::DependencyInjection::Specification::Fakes::IFakeService ^ service, System::String ^ data);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtorsAndAttribute : Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService * string -&gt; Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtorsAndAttribute" Usage="new Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtorsAndAttribute (service, data)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Extensions.DependencyInjection.ActivatorUtilitiesConstructor</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="service" Type="Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="service">To be added.</param>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClassWithAmbiguousCtorsAndAttribute (Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService service, Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService service2, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService service, class Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService service2, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtorsAndAttribute.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (service As IFakeService, service2 As IFakeOuterService, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClassWithAmbiguousCtorsAndAttribute(Microsoft::Extensions::DependencyInjection::Specification::Fakes::IFakeService ^ service, Microsoft::Extensions::DependencyInjection::Specification::Fakes::IFakeOuterService ^ service2, System::String ^ data);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtorsAndAttribute : Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService * Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService * string -&gt; Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtorsAndAttribute" Usage="new Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtorsAndAttribute (service, service2, data)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="service" Type="Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService" />
        <Parameter Name="service2" Type="Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="service">To be added.</param>
        <param name="service2">To be added.</param>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CtorUsed">
      <MemberSignature Language="C#" Value="public string CtorUsed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CtorUsed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtorsAndAttribute.CtorUsed" />
      <MemberSignature Language="VB.NET" Value="Public Property CtorUsed As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CtorUsed { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CtorUsed : string with get, set" Usage="Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtorsAndAttribute.CtorUsed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="SymbolResult" FullName="System.CommandLine.Parsing.SymbolResult">
  <TypeSignature Language="C#" Value="public abstract class SymbolResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SymbolResult extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Parsing.SymbolResult" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SymbolResult" />
  <TypeSignature Language="F#" Value="type SymbolResult = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymbolResult abstract" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A result produced during parsing for a specific symbol.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;System.CommandLine.Parsing.SymbolResult&gt; Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class System.CommandLine.Parsing.SymbolResult&gt; Children" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Parsing.SymbolResult.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As IReadOnlyList(Of SymbolResult)" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.Generic.IReadOnlyList&lt;System.CommandLine.Parsing.SymbolResult&gt;" Usage="System.CommandLine.Parsing.SymbolResult.Children" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;System::CommandLine::Parsing::SymbolResult ^&gt; ^ Children { System::Collections::Generic::IReadOnlyList&lt;System::CommandLine::Parsing::SymbolResult ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.CommandLine.Parsing.SymbolResult&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Child symbol results in the parse tree.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMessage">
      <MemberSignature Language="C#" Value="public string? ErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Parsing.SymbolResult.ErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorMessage As String" />
      <MemberSignature Language="F#" Value="member this.ErrorMessage : string with get, set" Usage="System.CommandLine.Parsing.SymbolResult.ErrorMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An error message for this symbol result.
            </summary>
        <value>To be added.</value>
        <remarks>Setting this value to a non-<c>null</c> during parsing will cause the parser to indicate an error for the user and prevent invocation of the command line.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindResultFor">
      <MemberSignature Language="C#" Value="public virtual System.CommandLine.Parsing.ArgumentResult? FindResultFor (System.CommandLine.Argument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CommandLine.Parsing.ArgumentResult FindResultFor(class System.CommandLine.Argument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Parsing.SymbolResult.FindResultFor(System.CommandLine.Argument)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindResultFor (argument As Argument) As ArgumentResult" />
      <MemberSignature Language="F#" Value="abstract member FindResultFor : System.CommandLine.Argument -&gt; System.CommandLine.Parsing.ArgumentResult&#xA;override this.FindResultFor : System.CommandLine.Argument -&gt; System.CommandLine.Parsing.ArgumentResult" Usage="symbolResult.FindResultFor argument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CommandLine::Parsing::ArgumentResult ^ FindResultFor(System::CommandLine::Argument ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Parsing.ArgumentResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.CommandLine.Argument" />
      </Parameters>
      <Docs>
        <param name="argument">The argument for which to find a result.</param>
        <summary>
            Finds a result for the specific argument anywhere in the parse tree, including parent and child symbol results.
            </summary>
        <returns>An argument result if the argument was matched by the parser or has a default value; otherwise, <c>null</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindResultFor">
      <MemberSignature Language="C#" Value="public virtual System.CommandLine.Parsing.CommandResult? FindResultFor (System.CommandLine.Command command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CommandLine.Parsing.CommandResult FindResultFor(class System.CommandLine.Command command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Parsing.SymbolResult.FindResultFor(System.CommandLine.Command)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindResultFor (command As Command) As CommandResult" />
      <MemberSignature Language="F#" Value="abstract member FindResultFor : System.CommandLine.Command -&gt; System.CommandLine.Parsing.CommandResult&#xA;override this.FindResultFor : System.CommandLine.Command -&gt; System.CommandLine.Parsing.CommandResult" Usage="symbolResult.FindResultFor command" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CommandLine::Parsing::CommandResult ^ FindResultFor(System::CommandLine::Command ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Parsing.CommandResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.CommandLine.Command" />
      </Parameters>
      <Docs>
        <param name="command">The command for which to find a result.</param>
        <summary>
            Finds a result for the specific command anywhere in the parse tree, including parent and child symbol results.
            </summary>
        <returns>An command result if the command was matched by the parser; otherwise, <c>null</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindResultFor">
      <MemberSignature Language="C#" Value="public virtual System.CommandLine.Parsing.OptionResult? FindResultFor (System.CommandLine.Option option);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CommandLine.Parsing.OptionResult FindResultFor(class System.CommandLine.Option option) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Parsing.SymbolResult.FindResultFor(System.CommandLine.Option)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindResultFor (option As Option) As OptionResult" />
      <MemberSignature Language="F#" Value="abstract member FindResultFor : System.CommandLine.Option -&gt; System.CommandLine.Parsing.OptionResult&#xA;override this.FindResultFor : System.CommandLine.Option -&gt; System.CommandLine.Parsing.OptionResult" Usage="symbolResult.FindResultFor option" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CommandLine::Parsing::OptionResult ^ FindResultFor(System::CommandLine::Option ^ option);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Parsing.OptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="option" Type="System.CommandLine.Option" />
      </Parameters>
      <Docs>
        <param name="option">The option for which to find a result.</param>
        <summary>
            Finds a result for the specific option anywhere in the parse tree, including parent and child symbol results.
            </summary>
        <returns>An option result if the option was matched by the parser or has a default value; otherwise, <c>null</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueForArgument">
      <MemberSignature Language="C#" Value="public object? GetValueForArgument (System.CommandLine.Argument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValueForArgument(class System.CommandLine.Argument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Parsing.SymbolResult.GetValueForArgument(System.CommandLine.Argument)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueForArgument (argument As Argument) As Object" />
      <MemberSignature Language="F#" Value="member this.GetValueForArgument : System.CommandLine.Argument -&gt; obj" Usage="symbolResult.GetValueForArgument argument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValueForArgument(System::CommandLine::Argument ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.CommandLine.Argument" />
      </Parameters>
      <Docs>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc cref="M:System.CommandLine.Parsing.ParseResult.GetValueForArgument(System.CommandLine.Argument)" />
      </Docs>
    </Member>
    <Member MemberName="GetValueForArgument&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetValueForArgument&lt;T&gt; (System.CommandLine.Argument&lt;T&gt; argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetValueForArgument&lt;T&gt;(class System.CommandLine.Argument`1&lt;!!T&gt; argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Parsing.SymbolResult.GetValueForArgument``1(System.CommandLine.Argument{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueForArgument(Of T) (argument As Argument(Of T)) As T" />
      <MemberSignature Language="F#" Value="member this.GetValueForArgument : System.CommandLine.Argument&lt;'T&gt; -&gt; 'T" Usage="symbolResult.GetValueForArgument argument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetValueForArgument(System::CommandLine::Argument&lt;T&gt; ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="argument" Type="System.CommandLine.Argument&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc cref="M:System.CommandLine.Parsing.ParseResult.GetValueForArgument(System.CommandLine.Argument)" />
      </Docs>
    </Member>
    <Member MemberName="GetValueForOption">
      <MemberSignature Language="C#" Value="public object? GetValueForOption (System.CommandLine.Option option);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValueForOption(class System.CommandLine.Option option) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Parsing.SymbolResult.GetValueForOption(System.CommandLine.Option)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueForOption (option As Option) As Object" />
      <MemberSignature Language="F#" Value="member this.GetValueForOption : System.CommandLine.Option -&gt; obj" Usage="symbolResult.GetValueForOption option" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValueForOption(System::CommandLine::Option ^ option);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="option" Type="System.CommandLine.Option" />
      </Parameters>
      <Docs>
        <param name="option">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc cref="M:System.CommandLine.Parsing.ParseResult.GetValueForOption(System.CommandLine.Option)" />
      </Docs>
    </Member>
    <Member MemberName="GetValueForOption&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T? GetValueForOption&lt;T&gt; (System.CommandLine.Option&lt;T&gt; option);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetValueForOption&lt;T&gt;(class System.CommandLine.Option`1&lt;!!T&gt; option) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Parsing.SymbolResult.GetValueForOption``1(System.CommandLine.Option{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueForOption(Of T) (option As Option(Of T)) As T" />
      <MemberSignature Language="F#" Value="member this.GetValueForOption : System.CommandLine.Option&lt;'T&gt; -&gt; 'T" Usage="symbolResult.GetValueForOption option" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetValueForOption(System::CommandLine::Option&lt;T&gt; ^ option);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="option" Type="System.CommandLine.Option&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="option">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc cref="M:System.CommandLine.Parsing.ParseResult.GetValueForOption(System.CommandLine.Option)" />
      </Docs>
    </Member>
    <Member MemberName="LocalizationResources">
      <MemberSignature Language="C#" Value="public System.CommandLine.LocalizationResources LocalizationResources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CommandLine.LocalizationResources LocalizationResources" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Parsing.SymbolResult.LocalizationResources" />
      <MemberSignature Language="VB.NET" Value="Public Property LocalizationResources As LocalizationResources" />
      <MemberSignature Language="F#" Value="member this.LocalizationResources : System.CommandLine.LocalizationResources with get, set" Usage="System.CommandLine.Parsing.SymbolResult.LocalizationResources" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CommandLine::LocalizationResources ^ LocalizationResources { System::CommandLine::LocalizationResources ^ get(); void set(System::CommandLine::LocalizationResources ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.LocalizationResources</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Localization resources used to produce messages for this symbol result.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.CommandLine.Parsing.SymbolResult? Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CommandLine.Parsing.SymbolResult Parent" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Parsing.SymbolResult.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As SymbolResult" />
      <MemberSignature Language="F#" Value="member this.Parent : System.CommandLine.Parsing.SymbolResult" Usage="System.CommandLine.Parsing.SymbolResult.Parent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CommandLine::Parsing::SymbolResult ^ Parent { System::CommandLine::Parsing::SymbolResult ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Parsing.SymbolResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The parent symbol result in the parse tree.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Symbol">
      <MemberSignature Language="C#" Value="public System.CommandLine.Symbol Symbol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CommandLine.Symbol Symbol" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Parsing.SymbolResult.Symbol" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Symbol As Symbol" />
      <MemberSignature Language="F#" Value="member this.Symbol : System.CommandLine.Symbol" Usage="System.CommandLine.Parsing.SymbolResult.Symbol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CommandLine::Symbol ^ Symbol { System::CommandLine::Symbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Symbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The symbol to which the result applies.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tokens">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;System.CommandLine.Parsing.Token&gt; Tokens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;valuetype System.CommandLine.Parsing.Token&gt; Tokens" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Parsing.SymbolResult.Tokens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tokens As IReadOnlyList(Of Token)" />
      <MemberSignature Language="F#" Value="member this.Tokens : System.Collections.Generic.IReadOnlyList&lt;System.CommandLine.Parsing.Token&gt;" Usage="System.CommandLine.Parsing.SymbolResult.Tokens" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;System::CommandLine::Parsing::Token&gt; ^ Tokens { System::Collections::Generic::IReadOnlyList&lt;System::CommandLine::Parsing::Token&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.CommandLine.Parsing.Token&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The list of tokens associated with this symbol result during parsing.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Parsing.SymbolResult.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="symbolResult.ToString " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>

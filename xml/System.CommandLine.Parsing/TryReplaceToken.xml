<Type Name="TryReplaceToken" FullName="System.CommandLine.Parsing.TryReplaceToken">
  <TypeSignature Language="C#" Value="public delegate bool TryReplaceToken(string tokenToReplace, out IReadOnlyList&lt;string&gt;? replacementTokens, out string? errorMessage);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TryReplaceToken extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Parsing.TryReplaceToken" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function TryReplaceToken(tokenToReplace As String, ByRef replacementTokens As IReadOnlyList(Of String), ByRef errorMessage As String) As Boolean " />
  <TypeSignature Language="F#" Value="type TryReplaceToken = delegate of string * IReadOnlyList * string -&gt; bool" />
  <TypeSignature Language="C++ CLI" Value="public delegate bool TryReplaceToken(System::String ^ tokenToReplace, [Runtime::InteropServices::Out] IReadOnlyList&lt;System::String ^&gt; ^ % replacementTokens, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="tokenToReplace" Type="System.String" />
    <Parameter Name="replacementTokens" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" RefType="out" />
    <Parameter Name="errorMessage" Type="System.String" RefType="out" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="tokenToReplace">To be added.</param>
    <param name="replacementTokens">To be added.</param>
    <param name="errorMessage">To be added.</param>
    <summary>To be added.</summary>
    <returns>To be added.</returns>
    <remarks>To be added.</remarks>
  </Docs>
</Type>

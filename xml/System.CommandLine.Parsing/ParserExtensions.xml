<Type Name="ParserExtensions" FullName="System.CommandLine.Parsing.ParserExtensions">
  <TypeSignature Language="C#" Value="public static class ParserExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ParserExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Parsing.ParserExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ParserExtensions" />
  <TypeSignature Language="F#" Value="type ParserExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParserExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides extension methods for parsers.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static int Invoke (this System.CommandLine.Parsing.Parser parser, string commandLine, System.CommandLine.IConsole? console = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Invoke(class System.CommandLine.Parsing.Parser parser, string commandLine, class System.CommandLine.IConsole console) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Parsing.ParserExtensions.Invoke(System.CommandLine.Parsing.Parser,System.String,System.CommandLine.IConsole)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (parser As Parser, commandLine As String, Optional console As IConsole = Nothing) As Integer" />
      <MemberSignature Language="F#" Value="static member Invoke : System.CommandLine.Parsing.Parser * string * System.CommandLine.IConsole -&gt; int" Usage="System.CommandLine.Parsing.ParserExtensions.Invoke (parser, commandLine, console)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parser" Type="System.CommandLine.Parsing.Parser" RefType="this" />
        <Parameter Name="commandLine" Type="System.String" />
        <Parameter Name="console" Type="System.CommandLine.IConsole" />
      </Parameters>
      <Docs>
        <param name="parser">To be added.</param>
        <param name="commandLine">To be added.</param>
        <param name="console">To be added.</param>
        <summary>
            Parses a command line string value and invokes the handler for the indicated command.
            </summary>
        <returns>The exit code for the invocation.</returns>
        <remarks>The command line string input will be split into tokens as if it had been passed on the command line.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static int Invoke (this System.CommandLine.Parsing.Parser parser, string[] args, System.CommandLine.IConsole? console = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Invoke(class System.CommandLine.Parsing.Parser parser, string[] args, class System.CommandLine.IConsole console) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Parsing.ParserExtensions.Invoke(System.CommandLine.Parsing.Parser,System.String[],System.CommandLine.IConsole)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (parser As Parser, args As String(), Optional console As IConsole = Nothing) As Integer" />
      <MemberSignature Language="F#" Value="static member Invoke : System.CommandLine.Parsing.Parser * string[] * System.CommandLine.IConsole -&gt; int" Usage="System.CommandLine.Parsing.ParserExtensions.Invoke (parser, args, console)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parser" Type="System.CommandLine.Parsing.Parser" RefType="this" />
        <Parameter Name="args" Type="System.String[]" />
        <Parameter Name="console" Type="System.CommandLine.IConsole" />
      </Parameters>
      <Docs>
        <param name="parser">To be added.</param>
        <param name="args">To be added.</param>
        <param name="console">To be added.</param>
        <summary>
            Parses a command line string array and invokes the handler for the indicated command.
            </summary>
        <returns>The exit code for the invocation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; InvokeAsync (this System.CommandLine.Parsing.Parser parser, string commandLine, System.CommandLine.IConsole? console = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; InvokeAsync(class System.CommandLine.Parsing.Parser parser, string commandLine, class System.CommandLine.IConsole console) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Parsing.ParserExtensions.InvokeAsync(System.CommandLine.Parsing.Parser,System.String,System.CommandLine.IConsole)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InvokeAsync (parser As Parser, commandLine As String, Optional console As IConsole = Nothing) As Task(Of Integer)" />
      <MemberSignature Language="F#" Value="static member InvokeAsync : System.CommandLine.Parsing.Parser * string * System.CommandLine.IConsole -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="System.CommandLine.Parsing.ParserExtensions.InvokeAsync (parser, commandLine, console)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parser" Type="System.CommandLine.Parsing.Parser" RefType="this" />
        <Parameter Name="commandLine" Type="System.String" />
        <Parameter Name="console" Type="System.CommandLine.IConsole" />
      </Parameters>
      <Docs>
        <param name="parser">To be added.</param>
        <param name="commandLine">To be added.</param>
        <param name="console">To be added.</param>
        <summary>
            Parses a command line string value and invokes the handler for the indicated command.
            </summary>
        <returns>The exit code for the invocation.</returns>
        <remarks>The command line string input will be split into tokens as if it had been passed on the command line.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; InvokeAsync (this System.CommandLine.Parsing.Parser parser, string[] args, System.CommandLine.IConsole? console = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; InvokeAsync(class System.CommandLine.Parsing.Parser parser, string[] args, class System.CommandLine.IConsole console) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Parsing.ParserExtensions.InvokeAsync(System.CommandLine.Parsing.Parser,System.String[],System.CommandLine.IConsole)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InvokeAsync (parser As Parser, args As String(), Optional console As IConsole = Nothing) As Task(Of Integer)" />
      <MemberSignature Language="F#" Value="static member InvokeAsync : System.CommandLine.Parsing.Parser * string[] * System.CommandLine.IConsole -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="System.CommandLine.Parsing.ParserExtensions.InvokeAsync (parser, args, console)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parser" Type="System.CommandLine.Parsing.Parser" RefType="this" />
        <Parameter Name="args" Type="System.String[]" />
        <Parameter Name="console" Type="System.CommandLine.IConsole" />
      </Parameters>
      <Docs>
        <param name="parser">To be added.</param>
        <param name="args">To be added.</param>
        <param name="console">To be added.</param>
        <summary>
            Parses a command line string array and invokes the handler for the indicated command.
            </summary>
        <returns>The exit code for the invocation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Parsing.ParseResult Parse (this System.CommandLine.Parsing.Parser parser, string commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Parsing.ParseResult Parse(class System.CommandLine.Parsing.Parser parser, string commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Parsing.ParserExtensions.Parse(System.CommandLine.Parsing.Parser,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Parse (parser As Parser, commandLine As String) As ParseResult" />
      <MemberSignature Language="F#" Value="static member Parse : System.CommandLine.Parsing.Parser * string -&gt; System.CommandLine.Parsing.ParseResult" Usage="System.CommandLine.Parsing.ParserExtensions.Parse (parser, commandLine)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::CommandLine::Parsing::ParseResult ^ Parse(System::CommandLine::Parsing::Parser ^ parser, System::String ^ commandLine);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Parsing.ParseResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parser" Type="System.CommandLine.Parsing.Parser" RefType="this" />
        <Parameter Name="commandLine" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parser">To be added.</param>
        <param name="commandLine">To be added.</param>
        <summary>
            Parses a command line string.
            </summary>
        <returns>To be added.</returns>
        <remarks>The command line string input will be split into tokens as if it had been passed on the command line.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

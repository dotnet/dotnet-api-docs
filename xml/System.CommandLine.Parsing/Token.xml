<Type Name="Token" FullName="System.CommandLine.Parsing.Token">
  <TypeSignature Language="C#" Value="public readonly struct Token : IEquatable&lt;System.CommandLine.Parsing.Token&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Token extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.CommandLine.Parsing.Token&gt;" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Parsing.Token" />
  <TypeSignature Language="VB.NET" Value="Public Structure Token&#xA;Implements IEquatable(Of Token)" />
  <TypeSignature Language="F#" Value="type Token = struct" />
  <TypeSignature Language="C++ CLI" Value="public value class Token : IEquatable&lt;System::CommandLine::Parsing::Token&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.CommandLine.Parsing.Token&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A unit of significant text on the command line.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Token (string? value, System.CommandLine.Parsing.TokenType type, System.CommandLine.Symbol symbol);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value, valuetype System.CommandLine.Parsing.TokenType type, class System.CommandLine.Symbol symbol) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Parsing.Token.#ctor(System.String,System.CommandLine.Parsing.TokenType,System.CommandLine.Symbol)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String, type As TokenType, symbol As Symbol)" />
      <MemberSignature Language="F#" Value="new System.CommandLine.Parsing.Token : string * System.CommandLine.Parsing.TokenType * System.CommandLine.Symbol -&gt; System.CommandLine.Parsing.Token" Usage="new System.CommandLine.Parsing.Token (value, type, symbol)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Token(System::String ^ value, System::CommandLine::Parsing::TokenType type, System::CommandLine::Symbol ^ symbol);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="type" Type="System.CommandLine.Parsing.TokenType" />
        <Parameter Name="symbol" Type="System.CommandLine.Symbol" />
      </Parameters>
      <Docs>
        <param name="value">The string value of the token.</param>
        <param name="type">The type of the token.</param>
        <param name="symbol">The symbol represented by the token</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.CommandLine.Parsing.Token other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.CommandLine.Parsing.Token other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Parsing.Token.Equals(System.CommandLine.Parsing.Token)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Token) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : System.CommandLine.Parsing.Token -&gt; bool" Usage="token.Equals other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::CommandLine::Parsing::Token other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.CommandLine.Parsing.Token" />
      </Parameters>
      <Docs>
        <param name="other">An object to compare with this object.</param>
        <summary>Indicates whether the current object is equal to another object of the same type.</summary>
        <returns>
          <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Parsing.Token.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="token.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Parsing.Token.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="token.GetHashCode " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.CommandLine.Parsing.Token left, System.CommandLine.Parsing.Token right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.CommandLine.Parsing.Token left, valuetype System.CommandLine.Parsing.Token right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Parsing.Token.op_Equality(System.CommandLine.Parsing.Token,System.CommandLine.Parsing.Token)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Token, right As Token) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.CommandLine.Parsing.Token * System.CommandLine.Parsing.Token -&gt; bool" Usage="left = right" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::CommandLine::Parsing::Token left, System::CommandLine::Parsing::Token right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.CommandLine.Parsing.Token" />
        <Parameter Name="right" Type="System.CommandLine.Parsing.Token" />
      </Parameters>
      <Docs>
        <param name="left">The first <see cref="T:System.CommandLine.Parsing.Token" />.</param>
        <param name="right">The second <see cref="T:System.CommandLine.Parsing.Token" />.</param>
        <summary>
            Checks if two specified <see cref="T:System.CommandLine.Parsing.Token" /> instances have the same value.
            </summary>
        <returns>
          <see langword="true" /> if the objects are equal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.CommandLine.Parsing.Token left, System.CommandLine.Parsing.Token right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.CommandLine.Parsing.Token left, valuetype System.CommandLine.Parsing.Token right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Parsing.Token.op_Inequality(System.CommandLine.Parsing.Token,System.CommandLine.Parsing.Token)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Token, right As Token) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.CommandLine.Parsing.Token * System.CommandLine.Parsing.Token -&gt; bool" Usage="System.CommandLine.Parsing.Token.op_Inequality (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::CommandLine::Parsing::Token left, System::CommandLine::Parsing::Token right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.CommandLine.Parsing.Token" />
        <Parameter Name="right" Type="System.CommandLine.Parsing.Token" />
      </Parameters>
      <Docs>
        <param name="left">The first <see cref="T:System.CommandLine.Parsing.Token" />.</param>
        <param name="right">The second <see cref="T:System.CommandLine.Parsing.Token" />.</param>
        <summary>
            Checks if two specified <see cref="T:System.CommandLine.Parsing.Token" /> instances have different values.
            </summary>
        <returns>
          <see langword="true" /> if the objects are not equal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Parsing.Token.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="token.ToString " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.CommandLine.Parsing.TokenType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CommandLine.Parsing.TokenType Type" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Parsing.Token.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As TokenType" />
      <MemberSignature Language="F#" Value="member this.Type : System.CommandLine.Parsing.TokenType" Usage="System.CommandLine.Parsing.Token.Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CommandLine::Parsing::TokenType Type { System::CommandLine::Parsing::TokenType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Parsing.TokenType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The type of the token.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Parsing.Token.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.CommandLine.Parsing.Token.Value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The string value of the token.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

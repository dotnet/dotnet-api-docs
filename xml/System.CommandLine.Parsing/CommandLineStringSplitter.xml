<Type Name="CommandLineStringSplitter" FullName="System.CommandLine.Parsing.CommandLineStringSplitter">
  <TypeSignature Language="C#" Value="public class CommandLineStringSplitter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommandLineStringSplitter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Parsing.CommandLineStringSplitter" />
  <TypeSignature Language="VB.NET" Value="Public Class CommandLineStringSplitter" />
  <TypeSignature Language="F#" Value="type CommandLineStringSplitter = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandLineStringSplitter" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Splits a string based on whitespace and quotation marks
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static readonly System.CommandLine.Parsing.CommandLineStringSplitter Instance;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.CommandLine.Parsing.CommandLineStringSplitter Instance" />
      <MemberSignature Language="DocId" Value="F:System.CommandLine.Parsing.CommandLineStringSplitter.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Instance As CommandLineStringSplitter " />
      <MemberSignature Language="F#" Value=" staticval mutable Instance : System.CommandLine.Parsing.CommandLineStringSplitter" Usage="System.CommandLine.Parsing.CommandLineStringSplitter.Instance" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::CommandLine::Parsing::CommandLineStringSplitter ^ Instance;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Parsing.CommandLineStringSplitter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A single instance of <see cref="T:System.CommandLine.Parsing.CommandLineStringSplitter" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; Split (string commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; Split(string commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Parsing.CommandLineStringSplitter.Split(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function Split (commandLine As String) As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="member this.Split : string -&gt; seq&lt;string&gt;" Usage="commandLineStringSplitter.Split commandLine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ Split(System::String ^ commandLine);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.CommandLine.Parsing.CommandLineStringSplitter+&lt;Split&gt;d__3))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.CommandLine.Parsing.CommandLineStringSplitter+&lt;Split&gt;d__3))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandLine" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandLine">A command line input string.</param>
        <summary>
            Splits a string into a sequence of strings based on whitespace and quotation marks.
            </summary>
        <returns>A sequence of strings.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

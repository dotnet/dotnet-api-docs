<Type Name="ParseArgument&lt;T&gt;" FullName="System.CommandLine.Parsing.ParseArgument&lt;T&gt;">
  <TypeSignature Language="C#" Value="public delegate T ParseArgument&lt;out T&gt;(ArgumentResult result);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ParseArgument`1&lt;+ T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Parsing.ParseArgument`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ParseArgument(Of Out T)(result As ArgumentResult) As T " />
  <TypeSignature Language="F#" Value="type ParseArgument&lt;'T&gt; = delegate of ArgumentResult -&gt; 'T" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public delegate T ParseArgument(ArgumentResult ^ result);" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="result" Type="System.CommandLine.Parsing.ArgumentResult" />
  </Parameters>
  <ReturnValue>
    <ReturnType>T</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T">The type which the argument is to be parsed as.</typeparam>
    <param name="result">The argument result.</param>
    <summary>
            Performs custom parsing of an argument.
            </summary>
    <returns>The parsed value.</returns>
    <remarks>Validation errors can be returned by setting <see cref="P:System.CommandLine.Parsing.SymbolResult.ErrorMessage" />.</remarks>
  </Docs>
</Type>

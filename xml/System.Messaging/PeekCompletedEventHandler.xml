<Type Name="PeekCompletedEventHandler" FullName="System.Messaging.PeekCompletedEventHandler">
  <TypeSignature Language="C#" Value="public delegate void PeekCompletedEventHandler(object sender, PeekCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PeekCompletedEventHandler extends System.MulticastDelegate" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.PeekCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub PeekCompletedEventHandler(sender As Object, e As PeekCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void PeekCompletedEventHandler(System::Object ^ sender, PeekCompletedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type PeekCompletedEventHandler = delegate of obj * PeekCompletedEventArgs -&gt; unit" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed PeekCompletedEventHandler extends System.MulticastDelegate" FrameworkAlternate="xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Messaging.PeekCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">The source of the event, the <see cref="T:System.Messaging.MessageQueue" />.</param>
    <param name="e">A <see cref="T:System.Messaging.PeekCompletedEventArgs" /> that contains the event data.</param>
    <summary>Represents the method that will handle the <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event of a <see cref="T:System.Messaging.MessageQueue" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you create a <xref:System.Messaging.PeekCompletedEventHandler> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 The following example illustrates how to create an event delegate (<xref:System.Messaging.PeekCompletedEventHandler>) for the event handler (`MyPeekCompleted`) and associate it with the <xref:System.Messaging.MessageQueue.PeekCompleted?displayProperty=nameWithType> event. The event handler peeks a message and writes its label to the screen.  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.ReceiveCompletedEventHandler" />
    <altmember cref="T:System.Messaging.PeekCompletedEventArgs" />
  </Docs>
</Type>

<Type Name="MessageQueueErrorCode" FullName="System.Messaging.MessageQueueErrorCode">
  <TypeSignature Language="C#" Value="public enum MessageQueueErrorCode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed MessageQueueErrorCode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueErrorCode" />
  <TypeSignature Language="VB.NET" Value="Public Enum MessageQueueErrorCode" />
  <TypeSignature Language="C++ CLI" Value="public enum class MessageQueueErrorCode" />
  <TypeSignature Language="F#" Value="type MessageQueueErrorCode = " />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Identifies the source of an error that occurred within the Message Queuing application and generated a <see cref="T:System.Messaging.MessageQueueException" /> exception.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Messaging.MessageQueueErrorCode> enumeration gives detailed information about an error condition during a messaging operation.  
  
 The <xref:System.Messaging.MessageQueueException> uses the <xref:System.Messaging.MessageQueueException.MessageQueueErrorCode%2A> property to identify the nature of the Message Queuing error. The <xref:System.Messaging.MessageQueueErrorCode> value determines a text string to associate with the error.  
  
   
  
## Examples  
 The following code example verifies whether a Message Queuing queue exists, and then deletes it.  
  
 [!code-cpp[MessageQueue.ExistsDelete#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ExistsDelete/CPP/mqexistsdelete.cpp#1)]
 [!code-csharp[MessageQueue.ExistsDelete#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ExistsDelete/CS/mqexistsdelete.cs#1)]
 [!code-vb[MessageQueue.ExistsDelete#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ExistsDelete/VB/mqexistsdelete.vb#1)]  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Messaging.MessageQueueException" />
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.MessageEnumerator" />
    <altmember cref="T:System.Messaging.Message" />
  </Docs>
  <Members>
    <Member MemberName="AccessDenied">
      <MemberSignature Language="C#" Value="AccessDenied" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode AccessDenied = int32(-1072824283)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.AccessDenied" />
      <MemberSignature Language="VB.NET" Value="AccessDenied" />
      <MemberSignature Language="C++ CLI" Value="AccessDenied" />
      <MemberSignature Language="F#" Value="AccessDenied = -1072824283" Usage="System.Messaging.MessageQueueErrorCode.AccessDenied" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824283</MemberValue>
      <Docs>
        <summary>Message text: Access is denied.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if access to the specified queue or computer is denied. If this error is returned, verify that you have access rights for the operation, such as creating, deleting, or setting properties for a queue. For information about changing access rights for a queue, see the <xref:System.Messaging.MessageQueueAccessRights> and <xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=nameWithType> topics.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="BadSecurityContext">
      <MemberSignature Language="C#" Value="BadSecurityContext" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode BadSecurityContext = int32(-1072824267)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.BadSecurityContext" />
      <MemberSignature Language="VB.NET" Value="BadSecurityContext" />
      <MemberSignature Language="C++ CLI" Value="BadSecurityContext" />
      <MemberSignature Language="F#" Value="BadSecurityContext = -1072824267" Usage="System.Messaging.MessageQueueErrorCode.BadSecurityContext" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824267</MemberValue>
      <Docs>
        <summary>Message text: Bad security context.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if the security context has become corrupted.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Base">
      <MemberSignature Language="C#" Value="Base" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode Base = int32(-1072824320)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.Base" />
      <MemberSignature Language="VB.NET" Value="Base" />
      <MemberSignature Language="C++ CLI" Value="Base" />
      <MemberSignature Language="F#" Value="Base = -1072824320" Usage="System.Messaging.MessageQueueErrorCode.Base" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824320</MemberValue>
      <Docs>
        <summary>Message Queuing does not return this error code.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="BufferOverflow">
      <MemberSignature Language="C#" Value="BufferOverflow" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode BufferOverflow = int32(-1072824294)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.BufferOverflow" />
      <MemberSignature Language="VB.NET" Value="BufferOverflow" />
      <MemberSignature Language="C++ CLI" Value="BufferOverflow" />
      <MemberSignature Language="F#" Value="BufferOverflow = -1072824294" Usage="System.Messaging.MessageQueueErrorCode.BufferOverflow" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824294</MemberValue>
      <Docs>
        <summary>Message text: The buffer supplied to MQReceiveMessage for message body retrieval was too small. The message is not removed from the queue and part of the message body that fits in the buffer was copied.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CannotCreateCertificateStore">
      <MemberSignature Language="C#" Value="CannotCreateCertificateStore" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode CannotCreateCertificateStore = int32(-1072824209)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.CannotCreateCertificateStore" />
      <MemberSignature Language="VB.NET" Value="CannotCreateCertificateStore" />
      <MemberSignature Language="C++ CLI" Value="CannotCreateCertificateStore" />
      <MemberSignature Language="F#" Value="CannotCreateCertificateStore = -1072824209" Usage="System.Messaging.MessageQueueErrorCode.CannotCreateCertificateStore" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824209</MemberValue>
      <Docs>
        <summary>Message text: Unable to create a certificate store for the internal certificate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if you do not have permission to manipulate your own profile.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CannotCreateHashEx">
      <MemberSignature Language="C#" Value="CannotCreateHashEx" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode CannotCreateHashEx = int32(-1072824191)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.CannotCreateHashEx" />
      <MemberSignature Language="VB.NET" Value="CannotCreateHashEx" />
      <MemberSignature Language="C++ CLI" Value="CannotCreateHashEx" />
      <MemberSignature Language="F#" Value="CannotCreateHashEx = -1072824191" Usage="System.Messaging.MessageQueueErrorCode.CannotCreateHashEx" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824191</MemberValue>
      <Docs>
        <summary>Message text: Unable to create a hash object for an authenticated message.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 See the <xref:System.Messaging.Message> class's <xref:System.Messaging.Message.HashAlgorithm%2A> property for more information about hash algorithms.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CannotCreateOnGlobalCatalog">
      <MemberSignature Language="C#" Value="CannotCreateOnGlobalCatalog" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode CannotCreateOnGlobalCatalog = int32(-1072824201)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.CannotCreateOnGlobalCatalog" />
      <MemberSignature Language="VB.NET" Value="CannotCreateOnGlobalCatalog" />
      <MemberSignature Language="C++ CLI" Value="CannotCreateOnGlobalCatalog" />
      <MemberSignature Language="F#" Value="CannotCreateOnGlobalCatalog = -1072824201" Usage="System.Messaging.MessageQueueErrorCode.CannotCreateOnGlobalCatalog" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824201</MemberValue>
      <Docs>
        <summary>Message text: Failed to create an object on a specified global catalog server.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CannotGetDistinguishedName">
      <MemberSignature Language="C#" Value="CannotGetDistinguishedName" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode CannotGetDistinguishedName = int32(-1072824194)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.CannotGetDistinguishedName" />
      <MemberSignature Language="VB.NET" Value="CannotGetDistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="CannotGetDistinguishedName" />
      <MemberSignature Language="F#" Value="CannotGetDistinguishedName = -1072824194" Usage="System.Messaging.MessageQueueErrorCode.CannotGetDistinguishedName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824194</MemberValue>
      <Docs>
        <summary>Message text: Failed to retrieve the distinguished name of local computer.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CannotGrantAddGuid">
      <MemberSignature Language="C#" Value="CannotGrantAddGuid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode CannotGrantAddGuid = int32(-1072824206)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.CannotGrantAddGuid" />
      <MemberSignature Language="VB.NET" Value="CannotGrantAddGuid" />
      <MemberSignature Language="C++ CLI" Value="CannotGrantAddGuid" />
      <MemberSignature Language="F#" Value="CannotGrantAddGuid = -1072824206" Usage="System.Messaging.MessageQueueErrorCode.CannotGrantAddGuid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824206</MemberValue>
      <Docs>
        <summary>Message text: Failed to grant the "Add Guid" permission to current user.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CannotHashDataEx">
      <MemberSignature Language="C#" Value="CannotHashDataEx" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode CannotHashDataEx = int32(-1072824193)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.CannotHashDataEx" />
      <MemberSignature Language="VB.NET" Value="CannotHashDataEx" />
      <MemberSignature Language="C++ CLI" Value="CannotHashDataEx" />
      <MemberSignature Language="F#" Value="CannotHashDataEx = -1072824193" Usage="System.Messaging.MessageQueueErrorCode.CannotHashDataEx" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824193</MemberValue>
      <Docs>
        <summary>Message text: Unable to hash data for an authenticated message.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CannotImpersonateClient">
      <MemberSignature Language="C#" Value="CannotImpersonateClient" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode CannotImpersonateClient = int32(-1072824284)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.CannotImpersonateClient" />
      <MemberSignature Language="VB.NET" Value="CannotImpersonateClient" />
      <MemberSignature Language="C++ CLI" Value="CannotImpersonateClient" />
      <MemberSignature Language="F#" Value="CannotImpersonateClient = -1072824284" Usage="System.Messaging.MessageQueueErrorCode.CannotImpersonateClient" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824284</MemberValue>
      <Docs>
        <summary>Message text: The RPC server cannot impersonate the client application, hence security credentials could not be verified.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if the directory service server cannot impersonate the client application. This is necessary to verify the security credentials.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CannotJoinDomain">
      <MemberSignature Language="C#" Value="CannotJoinDomain" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode CannotJoinDomain = int32(-1072824202)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.CannotJoinDomain" />
      <MemberSignature Language="VB.NET" Value="CannotJoinDomain" />
      <MemberSignature Language="C++ CLI" Value="CannotJoinDomain" />
      <MemberSignature Language="F#" Value="CannotJoinDomain = -1072824202" Usage="System.Messaging.MessageQueueErrorCode.CannotJoinDomain" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824202</MemberValue>
      <Docs>
        <summary>Message text: Failed to join Message Queuing enterprise on Windows 2000 domain.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CannotLoadMsmqOcm">
      <MemberSignature Language="C#" Value="CannotLoadMsmqOcm" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode CannotLoadMsmqOcm = int32(-1072824205)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.CannotLoadMsmqOcm" />
      <MemberSignature Language="VB.NET" Value="CannotLoadMsmqOcm" />
      <MemberSignature Language="C++ CLI" Value="CannotLoadMsmqOcm" />
      <MemberSignature Language="F#" Value="CannotLoadMsmqOcm = -1072824205" Usage="System.Messaging.MessageQueueErrorCode.CannotLoadMsmqOcm" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824205</MemberValue>
      <Docs>
        <summary>Message text: Cannot load the MSMQOCM.DLL library.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CannotOpenCertificateStore">
      <MemberSignature Language="C#" Value="CannotOpenCertificateStore" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode CannotOpenCertificateStore = int32(-1072824208)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.CannotOpenCertificateStore" />
      <MemberSignature Language="VB.NET" Value="CannotOpenCertificateStore" />
      <MemberSignature Language="C++ CLI" Value="CannotOpenCertificateStore" />
      <MemberSignature Language="F#" Value="CannotOpenCertificateStore = -1072824208" Usage="System.Messaging.MessageQueueErrorCode.CannotOpenCertificateStore" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824208</MemberValue>
      <Docs>
        <summary>Message text: Unable to open the certificates store for the internal certificate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if you do not have permission to manipulate your own profile.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CannotSetCryptographicSecurityDescriptor">
      <MemberSignature Language="C#" Value="CannotSetCryptographicSecurityDescriptor" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode CannotSetCryptographicSecurityDescriptor = int32(-1072824212)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.CannotSetCryptographicSecurityDescriptor" />
      <MemberSignature Language="VB.NET" Value="CannotSetCryptographicSecurityDescriptor" />
      <MemberSignature Language="C++ CLI" Value="CannotSetCryptographicSecurityDescriptor" />
      <MemberSignature Language="F#" Value="CannotSetCryptographicSecurityDescriptor = -1072824212" Usage="System.Messaging.MessageQueueErrorCode.CannotSetCryptographicSecurityDescriptor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824212</MemberValue>
      <Docs>
        <summary>Message text: Unable to set the security descriptor for the cryptographic keys.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For information about cryptographic providers, see the <xref:System.Messaging.CryptographicProviderType> and <xref:System.Messaging.Message.AuthenticationProviderType%2A?displayProperty=nameWithType> topics.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CannotSignDataEx">
      <MemberSignature Language="C#" Value="CannotSignDataEx" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode CannotSignDataEx = int32(-1072824192)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.CannotSignDataEx" />
      <MemberSignature Language="VB.NET" Value="CannotSignDataEx" />
      <MemberSignature Language="C++ CLI" Value="CannotSignDataEx" />
      <MemberSignature Language="F#" Value="CannotSignDataEx = -1072824192" Usage="System.Messaging.MessageQueueErrorCode.CannotSignDataEx" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824192</MemberValue>
      <Docs>
        <summary>Message text: Unable to sign data before sending an authenticated message.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 See the <xref:System.Messaging.Message> class's <xref:System.Messaging.Message.DigitalSignature%2A> property for more information about signing data.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CertificateNotProvided">
      <MemberSignature Language="C#" Value="CertificateNotProvided" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode CertificateNotProvided = int32(-1072824211)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.CertificateNotProvided" />
      <MemberSignature Language="VB.NET" Value="CertificateNotProvided" />
      <MemberSignature Language="C++ CLI" Value="CertificateNotProvided" />
      <MemberSignature Language="F#" Value="CertificateNotProvided = -1072824211" Usage="System.Messaging.MessageQueueErrorCode.CertificateNotProvided" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824211</MemberValue>
      <Docs>
        <summary>Message text: A user attempted to send an authenticated message without a certificate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if the sending application attempts to use security context information to authenticate a message, and the security context does not include a certificate. For more information about certificates, see the <xref:System.Messaging.Message> class's <xref:System.Messaging.Message.SenderCertificate%2A> property.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ComputerDoesNotSupportEncryption">
      <MemberSignature Language="C#" Value="ComputerDoesNotSupportEncryption" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode ComputerDoesNotSupportEncryption = int32(-1072824269)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.ComputerDoesNotSupportEncryption" />
      <MemberSignature Language="VB.NET" Value="ComputerDoesNotSupportEncryption" />
      <MemberSignature Language="C++ CLI" Value="ComputerDoesNotSupportEncryption" />
      <MemberSignature Language="F#" Value="ComputerDoesNotSupportEncryption = -1072824269" Usage="System.Messaging.MessageQueueErrorCode.ComputerDoesNotSupportEncryption" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824269</MemberValue>
      <Docs>
        <summary>Message text: The computer does not support encryption operations.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error when the application requests encryption and the computer (source or destination) does not support encryption operations. When this error is returned, the encryption operation fails. For more information about using encryption, see the <xref:System.Messaging.MessageQueue.EncryptionRequired%2A?displayProperty=nameWithType> and <xref:System.Messaging.Message.EncryptionAlgorithm%2A?displayProperty=nameWithType> topics.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CorruptedInternalCertificate">
      <MemberSignature Language="C#" Value="CorruptedInternalCertificate" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode CorruptedInternalCertificate = int32(-1072824275)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.CorruptedInternalCertificate" />
      <MemberSignature Language="VB.NET" Value="CorruptedInternalCertificate" />
      <MemberSignature Language="C++ CLI" Value="CorruptedInternalCertificate" />
      <MemberSignature Language="F#" Value="CorruptedInternalCertificate = -1072824275" Usage="System.Messaging.MessageQueueErrorCode.CorruptedInternalCertificate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824275</MemberValue>
      <Docs>
        <summary>Message text: The internal Message Queuing certificate is corrupted.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This error applies only to Message Queuing 1.0.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CorruptedPersonalCertStore">
      <MemberSignature Language="C#" Value="CorruptedPersonalCertStore" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode CorruptedPersonalCertStore = int32(-1072824271)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.CorruptedPersonalCertStore" />
      <MemberSignature Language="VB.NET" Value="CorruptedPersonalCertStore" />
      <MemberSignature Language="C++ CLI" Value="CorruptedPersonalCertStore" />
      <MemberSignature Language="F#" Value="CorruptedPersonalCertStore = -1072824271" Usage="System.Messaging.MessageQueueErrorCode.CorruptedPersonalCertStore" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824271</MemberValue>
      <Docs>
        <summary>Message text: The personal certificate store is corrupted.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error when the Microsoft Internet Explorer personal certificate store is corrupted.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CorruptedQueueWasDeleted">
      <MemberSignature Language="C#" Value="CorruptedQueueWasDeleted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode CorruptedQueueWasDeleted = int32(-1072824216)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.CorruptedQueueWasDeleted" />
      <MemberSignature Language="VB.NET" Value="CorruptedQueueWasDeleted" />
      <MemberSignature Language="C++ CLI" Value="CorruptedQueueWasDeleted" />
      <MemberSignature Language="F#" Value="CorruptedQueueWasDeleted = -1072824216" Usage="System.Messaging.MessageQueueErrorCode.CorruptedQueueWasDeleted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824216</MemberValue>
      <Docs>
        <summary>Message text: The.ini file for the queue in LQS was deleted because it was corrupted.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CorruptedSecurityData">
      <MemberSignature Language="C#" Value="CorruptedSecurityData" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode CorruptedSecurityData = int32(-1072824272)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.CorruptedSecurityData" />
      <MemberSignature Language="VB.NET" Value="CorruptedSecurityData" />
      <MemberSignature Language="C++ CLI" Value="CorruptedSecurityData" />
      <MemberSignature Language="F#" Value="CorruptedSecurityData = -1072824272" Usage="System.Messaging.MessageQueueErrorCode.CorruptedSecurityData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824272</MemberValue>
      <Docs>
        <summary>Message text: A cryptographic function has failed.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CouldNotGetAccountInfo">
      <MemberSignature Language="C#" Value="CouldNotGetAccountInfo" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode CouldNotGetAccountInfo = int32(-1072824265)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.CouldNotGetAccountInfo" />
      <MemberSignature Language="VB.NET" Value="CouldNotGetAccountInfo" />
      <MemberSignature Language="C++ CLI" Value="CouldNotGetAccountInfo" />
      <MemberSignature Language="F#" Value="CouldNotGetAccountInfo = -1072824265" Usage="System.Messaging.MessageQueueErrorCode.CouldNotGetAccountInfo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824265</MemberValue>
      <Docs>
        <summary>Message text: Could not get the account information for the user.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CouldNotGetUserSid">
      <MemberSignature Language="C#" Value="CouldNotGetUserSid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode CouldNotGetUserSid = int32(-1072824266)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.CouldNotGetUserSid" />
      <MemberSignature Language="VB.NET" Value="CouldNotGetUserSid" />
      <MemberSignature Language="C++ CLI" Value="CouldNotGetUserSid" />
      <MemberSignature Language="F#" Value="CouldNotGetUserSid = -1072824266" Usage="System.Messaging.MessageQueueErrorCode.CouldNotGetUserSid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824266</MemberValue>
      <Docs>
        <summary>Message text: Could not get the SID information out of the thread token.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information about sender identifiers, see the <xref:System.Messaging.Message> class's <xref:System.Messaging.Message.SenderId%2A> property.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DeleteConnectedNetworkInUse">
      <MemberSignature Language="C#" Value="DeleteConnectedNetworkInUse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode DeleteConnectedNetworkInUse = int32(-1072824248)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.DeleteConnectedNetworkInUse" />
      <MemberSignature Language="VB.NET" Value="DeleteConnectedNetworkInUse" />
      <MemberSignature Language="C++ CLI" Value="DeleteConnectedNetworkInUse" />
      <MemberSignature Language="F#" Value="DeleteConnectedNetworkInUse = -1072824248" Usage="System.Messaging.MessageQueueErrorCode.DeleteConnectedNetworkInUse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824248</MemberValue>
      <Docs>
        <summary>Message text: The connected network cannot be deleted; it is in use.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if it cannot delete the specified connected network because the network is defined in at least one other computer. Remove the connected network from all connected network lists and try again to delete it.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DependentClientLicenseOverflow">
      <MemberSignature Language="C#" Value="DependentClientLicenseOverflow" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode DependentClientLicenseOverflow = int32(-1072824217)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.DependentClientLicenseOverflow" />
      <MemberSignature Language="VB.NET" Value="DependentClientLicenseOverflow" />
      <MemberSignature Language="C++ CLI" Value="DependentClientLicenseOverflow" />
      <MemberSignature Language="F#" Value="DependentClientLicenseOverflow = -1072824217" Usage="System.Messaging.MessageQueueErrorCode.DependentClientLicenseOverflow" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824217</MemberValue>
      <Docs>
        <summary>Message text: The number of dependent clients served by this Message Queuing server reached its upper limit.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DsError">
      <MemberSignature Language="C#" Value="DsError" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode DsError = int32(-1072824253)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.DsError" />
      <MemberSignature Language="VB.NET" Value="DsError" />
      <MemberSignature Language="C++ CLI" Value="DsError" />
      <MemberSignature Language="F#" Value="DsError = -1072824253" Usage="System.Messaging.MessageQueueErrorCode.DsError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824253</MemberValue>
      <Docs>
        <summary>Message text: Internal directory service error.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DsIsFull">
      <MemberSignature Language="C#" Value="DsIsFull" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode DsIsFull = int32(-1072824254)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.DsIsFull" />
      <MemberSignature Language="VB.NET" Value="DsIsFull" />
      <MemberSignature Language="C++ CLI" Value="DsIsFull" />
      <MemberSignature Language="F#" Value="DsIsFull = -1072824254" Usage="System.Messaging.MessageQueueErrorCode.DsIsFull" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824254</MemberValue>
      <Docs>
        <summary>Message text: Directory service is full.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if the information store is full. This error applies only to Message Queuing 1.0.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DtcConnect">
      <MemberSignature Language="C#" Value="DtcConnect" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode DtcConnect = int32(-1072824244)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.DtcConnect" />
      <MemberSignature Language="VB.NET" Value="DtcConnect" />
      <MemberSignature Language="C++ CLI" Value="DtcConnect" />
      <MemberSignature Language="F#" Value="DtcConnect = -1072824244" Usage="System.Messaging.MessageQueueErrorCode.DtcConnect" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824244</MemberValue>
      <Docs>
        <summary>Message text: Cannot connect to MS DTC.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if it is unable to connect to the Microsoft Distributed Transaction Coordinator.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="EncryptionProviderNotSupported">
      <MemberSignature Language="C#" Value="EncryptionProviderNotSupported" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode EncryptionProviderNotSupported = int32(-1072824213)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.EncryptionProviderNotSupported" />
      <MemberSignature Language="VB.NET" Value="EncryptionProviderNotSupported" />
      <MemberSignature Language="C++ CLI" Value="EncryptionProviderNotSupported" />
      <MemberSignature Language="F#" Value="EncryptionProviderNotSupported = -1072824213" Usage="System.Messaging.MessageQueueErrorCode.EncryptionProviderNotSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824213</MemberValue>
      <Docs>
        <summary>Message text: The Cryptographic Service Provider is not supported by Message Queuing.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FailVerifySignatureEx">
      <MemberSignature Language="C#" Value="FailVerifySignatureEx" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode FailVerifySignatureEx = int32(-1072824190)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.FailVerifySignatureEx" />
      <MemberSignature Language="VB.NET" Value="FailVerifySignatureEx" />
      <MemberSignature Language="C++ CLI" Value="FailVerifySignatureEx" />
      <MemberSignature Language="F#" Value="FailVerifySignatureEx = -1072824190" Usage="System.Messaging.MessageQueueErrorCode.FailVerifySignatureEx" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824190</MemberValue>
      <Docs>
        <summary>Message text: Signature of received message is not valid.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FormatNameBufferTooSmall">
      <MemberSignature Language="C#" Value="FormatNameBufferTooSmall" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode FormatNameBufferTooSmall = int32(-1072824289)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.FormatNameBufferTooSmall" />
      <MemberSignature Language="VB.NET" Value="FormatNameBufferTooSmall" />
      <MemberSignature Language="C++ CLI" Value="FormatNameBufferTooSmall" />
      <MemberSignature Language="F#" Value="FormatNameBufferTooSmall = -1072824289" Usage="System.Messaging.MessageQueueErrorCode.FormatNameBufferTooSmall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824289</MemberValue>
      <Docs>
        <summary>Message text: The format name buffer supplied to the API was too small to fit the format name.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Generic">
      <MemberSignature Language="C#" Value="Generic" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode Generic = int32(-1072824319)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.Generic" />
      <MemberSignature Language="VB.NET" Value="Generic" />
      <MemberSignature Language="C++ CLI" Value="Generic" />
      <MemberSignature Language="F#" Value="Generic = -1072824319" Usage="System.Messaging.MessageQueueErrorCode.Generic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824319</MemberValue>
      <Docs>
        <summary>Message text: Generic Error.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if it cannot identify a more specific source.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GuidNotMatching">
      <MemberSignature Language="C#" Value="GuidNotMatching" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode GuidNotMatching = int32(-1072824200)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.GuidNotMatching" />
      <MemberSignature Language="VB.NET" Value="GuidNotMatching" />
      <MemberSignature Language="C++ CLI" Value="GuidNotMatching" />
      <MemberSignature Language="F#" Value="GuidNotMatching = -1072824200" Usage="System.Messaging.MessageQueueErrorCode.GuidNotMatching" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824200</MemberValue>
      <Docs>
        <summary>Message text: Failed to create Message Queuing configuration object with a GUID that matches the computer installation. You must uninstall Message Queuing and then reinstall it.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IllegalContext">
      <MemberSignature Language="C#" Value="IllegalContext" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode IllegalContext = int32(-1072824229)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.IllegalContext" />
      <MemberSignature Language="VB.NET" Value="IllegalContext" />
      <MemberSignature Language="C++ CLI" Value="IllegalContext" />
      <MemberSignature Language="F#" Value="IllegalContext = -1072824229" Usage="System.Messaging.MessageQueueErrorCode.IllegalContext" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824229</MemberValue>
      <Docs>
        <summary>Message text: Invalid context parameter.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IllegalCriteriaColumns">
      <MemberSignature Language="C#" Value="IllegalCriteriaColumns" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode IllegalCriteriaColumns = int32(-1072824264)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.IllegalCriteriaColumns" />
      <MemberSignature Language="VB.NET" Value="IllegalCriteriaColumns" />
      <MemberSignature Language="C++ CLI" Value="IllegalCriteriaColumns" />
      <MemberSignature Language="F#" Value="IllegalCriteriaColumns = -1072824264" Usage="System.Messaging.MessageQueueErrorCode.IllegalCriteriaColumns" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824264</MemberValue>
      <Docs>
        <summary>Message text: Invalid MQCOLUMNS parameter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if you are using the `MessagePropertyFilter` class and have selected `false` for all Boolean values and zero (0) for all integer values.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IllegalCursorAction">
      <MemberSignature Language="C#" Value="IllegalCursorAction" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode IllegalCursorAction = int32(-1072824292)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.IllegalCursorAction" />
      <MemberSignature Language="VB.NET" Value="IllegalCursorAction" />
      <MemberSignature Language="C++ CLI" Value="IllegalCursorAction" />
      <MemberSignature Language="F#" Value="IllegalCursorAction = -1072824292" Usage="System.Messaging.MessageQueueErrorCode.IllegalCursorAction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824292</MemberValue>
      <Docs>
        <summary>Message text: MQ_ACTION_PEEK_NEXT specified to MQReceiveMessage can not be used with the current cursor position.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `System.Messaging.MessageEnumerator.MoveNext` cannot be used with the current cursor position.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IllegalEnterpriseOperation">
      <MemberSignature Language="C#" Value="IllegalEnterpriseOperation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode IllegalEnterpriseOperation = int32(-1072824207)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.IllegalEnterpriseOperation" />
      <MemberSignature Language="VB.NET" Value="IllegalEnterpriseOperation" />
      <MemberSignature Language="C++ CLI" Value="IllegalEnterpriseOperation" />
      <MemberSignature Language="F#" Value="IllegalEnterpriseOperation = -1072824207" Usage="System.Messaging.MessageQueueErrorCode.IllegalEnterpriseOperation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824207</MemberValue>
      <Docs>
        <summary>Message text: The operation is invalid for a Message Queuing services object.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IllegalFormatName">
      <MemberSignature Language="C#" Value="IllegalFormatName" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode IllegalFormatName = int32(-1072824290)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.IllegalFormatName" />
      <MemberSignature Language="VB.NET" Value="IllegalFormatName" />
      <MemberSignature Language="C++ CLI" Value="IllegalFormatName" />
      <MemberSignature Language="F#" Value="IllegalFormatName = -1072824290" Usage="System.Messaging.MessageQueueErrorCode.IllegalFormatName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824290</MemberValue>
      <Docs>
        <summary>Message text: The given format name is invalid.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For valid format name syntax options, see the <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.FormatName%2A> property.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IllegalMessageProperties">
      <MemberSignature Language="C#" Value="IllegalMessageProperties" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode IllegalMessageProperties = int32(-1072824255)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.IllegalMessageProperties" />
      <MemberSignature Language="VB.NET" Value="IllegalMessageProperties" />
      <MemberSignature Language="C++ CLI" Value="IllegalMessageProperties" />
      <MemberSignature Language="F#" Value="IllegalMessageProperties = -1072824255" Usage="System.Messaging.MessageQueueErrorCode.IllegalMessageProperties" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824255</MemberValue>
      <Docs>
        <summary>Message text: Illegal MQQMPROPS parameter, either null or with zero properties.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Illegal message properties, either `null` or with zero properties.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IllegalOperation">
      <MemberSignature Language="C#" Value="IllegalOperation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode IllegalOperation = int32(-1072824220)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.IllegalOperation" />
      <MemberSignature Language="VB.NET" Value="IllegalOperation" />
      <MemberSignature Language="C++ CLI" Value="IllegalOperation" />
      <MemberSignature Language="F#" Value="IllegalOperation = -1072824220" Usage="System.Messaging.MessageQueueErrorCode.IllegalOperation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824220</MemberValue>
      <Docs>
        <summary>Message text: The operation is invalid on foreign message queuing systems.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IllegalPrivateProperties">
      <MemberSignature Language="C#" Value="IllegalPrivateProperties" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode IllegalPrivateProperties = int32(-1072824197)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.IllegalPrivateProperties" />
      <MemberSignature Language="VB.NET" Value="IllegalPrivateProperties" />
      <MemberSignature Language="C++ CLI" Value="IllegalPrivateProperties" />
      <MemberSignature Language="F#" Value="IllegalPrivateProperties = -1072824197" Usage="System.Messaging.MessageQueueErrorCode.IllegalPrivateProperties" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824197</MemberValue>
      <Docs>
        <summary>The private properties parameter value is invalid. This may be because it has a null value or has zero properties specified.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IllegalPropertyId">
      <MemberSignature Language="C#" Value="IllegalPropertyId" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode IllegalPropertyId = int32(-1072824263)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.IllegalPropertyId" />
      <MemberSignature Language="VB.NET" Value="IllegalPropertyId" />
      <MemberSignature Language="C++ CLI" Value="IllegalPropertyId" />
      <MemberSignature Language="F#" Value="IllegalPropertyId = -1072824263" Usage="System.Messaging.MessageQueueErrorCode.IllegalPropertyId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824263</MemberValue>
      <Docs>
        <summary>Message text: Invalid property identifier value.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IllegalPropertySize">
      <MemberSignature Language="C#" Value="IllegalPropertySize" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode IllegalPropertySize = int32(-1072824261)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.IllegalPropertySize" />
      <MemberSignature Language="VB.NET" Value="IllegalPropertySize" />
      <MemberSignature Language="C++ CLI" Value="IllegalPropertySize" />
      <MemberSignature Language="F#" Value="IllegalPropertySize = -1072824261" Usage="System.Messaging.MessageQueueErrorCode.IllegalPropertySize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824261</MemberValue>
      <Docs>
        <summary>Message text: Illegal property buffer size.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if the specified buffer for the message identifier or correlation identifier is not the correct size. See the Message class's Message.Id and Message.CorrelationId properties for more information about message identifiers.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IllegalPropertyValue">
      <MemberSignature Language="C#" Value="IllegalPropertyValue" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode IllegalPropertyValue = int32(-1072824296)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.IllegalPropertyValue" />
      <MemberSignature Language="VB.NET" Value="IllegalPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="IllegalPropertyValue" />
      <MemberSignature Language="F#" Value="IllegalPropertyValue = -1072824296" Usage="System.Messaging.MessageQueueErrorCode.IllegalPropertyValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824296</MemberValue>
      <Docs>
        <summary>Message text: Invalid property value.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IllegalPropertyVt">
      <MemberSignature Language="C#" Value="IllegalPropertyVt" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode IllegalPropertyVt = int32(-1072824295)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.IllegalPropertyVt" />
      <MemberSignature Language="VB.NET" Value="IllegalPropertyVt" />
      <MemberSignature Language="C++ CLI" Value="IllegalPropertyVt" />
      <MemberSignature Language="F#" Value="IllegalPropertyVt = -1072824295" Usage="System.Messaging.MessageQueueErrorCode.IllegalPropertyVt" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824295</MemberValue>
      <Docs>
        <summary>Message text: Invalid VARTYPE value.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IllegalQueuePathName">
      <MemberSignature Language="C#" Value="IllegalQueuePathName" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode IllegalQueuePathName = int32(-1072824300)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.IllegalQueuePathName" />
      <MemberSignature Language="VB.NET" Value="IllegalQueuePathName" />
      <MemberSignature Language="C++ CLI" Value="IllegalQueuePathName" />
      <MemberSignature Language="F#" Value="IllegalQueuePathName = -1072824300" Usage="System.Messaging.MessageQueueErrorCode.IllegalQueuePathName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824300</MemberValue>
      <Docs>
        <summary>Message text: Invalid queue path name.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 See the <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.Path%2A> property for valid path syntax options.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IllegalQueueProperties">
      <MemberSignature Language="C#" Value="IllegalQueueProperties" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode IllegalQueueProperties = int32(-1072824259)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.IllegalQueueProperties" />
      <MemberSignature Language="VB.NET" Value="IllegalQueueProperties" />
      <MemberSignature Language="C++ CLI" Value="IllegalQueueProperties" />
      <MemberSignature Language="F#" Value="IllegalQueueProperties = -1072824259" Usage="System.Messaging.MessageQueueErrorCode.IllegalQueueProperties" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824259</MemberValue>
      <Docs>
        <summary>Message text: Illegal MQQUEUEPROPS parameter, either null or with zero properties.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Illegal Queue Properties, either `null` or with zero properties.  
  
 Message Queuing returns this error if you are using the <xref:System.Messaging.MessageQueueCriteria> class and have called <xref:System.Messaging.MessageQueueCriteria.ClearAll%2A> or have not specified any criteria to use when filtering queues. See the MessageQueueCriteria class or MessageQueue.GetPublicQueues for more information about filtering queue search criteria.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IllegalRelation">
      <MemberSignature Language="C#" Value="IllegalRelation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode IllegalRelation = int32(-1072824262)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.IllegalRelation" />
      <MemberSignature Language="VB.NET" Value="IllegalRelation" />
      <MemberSignature Language="C++ CLI" Value="IllegalRelation" />
      <MemberSignature Language="F#" Value="IllegalRelation = -1072824262" Usage="System.Messaging.MessageQueueErrorCode.IllegalRelation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824262</MemberValue>
      <Docs>
        <summary>Message text: Invalid relation value in restriction.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IllegalRestrictionPropertyId">
      <MemberSignature Language="C#" Value="IllegalRestrictionPropertyId" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode IllegalRestrictionPropertyId = int32(-1072824260)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.IllegalRestrictionPropertyId" />
      <MemberSignature Language="VB.NET" Value="IllegalRestrictionPropertyId" />
      <MemberSignature Language="C++ CLI" Value="IllegalRestrictionPropertyId" />
      <MemberSignature Language="F#" Value="IllegalRestrictionPropertyId = -1072824260" Usage="System.Messaging.MessageQueueErrorCode.IllegalRestrictionPropertyId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824260</MemberValue>
      <Docs>
        <summary>Message text: Invalid propid value in MQRESTRICTION parameter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Invalid property identifier value for restriction.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IllegalSecurityDescriptor">
      <MemberSignature Language="C#" Value="IllegalSecurityDescriptor" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode IllegalSecurityDescriptor = int32(-1072824287)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.IllegalSecurityDescriptor" />
      <MemberSignature Language="VB.NET" Value="IllegalSecurityDescriptor" />
      <MemberSignature Language="C++ CLI" Value="IllegalSecurityDescriptor" />
      <MemberSignature Language="F#" Value="IllegalSecurityDescriptor = -1072824287" Usage="System.Messaging.MessageQueueErrorCode.IllegalSecurityDescriptor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824287</MemberValue>
      <Docs>
        <summary>Message text: The specified security descriptor is not a valid security descriptor.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IllegalSort">
      <MemberSignature Language="C#" Value="IllegalSort" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode IllegalSort = int32(-1072824304)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.IllegalSort" />
      <MemberSignature Language="VB.NET" Value="IllegalSort" />
      <MemberSignature Language="C++ CLI" Value="IllegalSort" />
      <MemberSignature Language="F#" Value="IllegalSort = -1072824304" Usage="System.Messaging.MessageQueueErrorCode.IllegalSort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824304</MemberValue>
      <Docs>
        <summary>Message text: Illegal sort specified (for example, duplicate columns).</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IllegalSortPropertyId">
      <MemberSignature Language="C#" Value="IllegalSortPropertyId" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode IllegalSortPropertyId = int32(-1072824228)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.IllegalSortPropertyId" />
      <MemberSignature Language="VB.NET" Value="IllegalSortPropertyId" />
      <MemberSignature Language="C++ CLI" Value="IllegalSortPropertyId" />
      <MemberSignature Language="F#" Value="IllegalSortPropertyId = -1072824228" Usage="System.Messaging.MessageQueueErrorCode.IllegalSortPropertyId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824228</MemberValue>
      <Docs>
        <summary>Message text: Invalid propid value in MQSORTSET.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Invalid property identifier value in for sort.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IllegalUser">
      <MemberSignature Language="C#" Value="IllegalUser" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode IllegalUser = int32(-1072824303)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.IllegalUser" />
      <MemberSignature Language="VB.NET" Value="IllegalUser" />
      <MemberSignature Language="C++ CLI" Value="IllegalUser" />
      <MemberSignature Language="F#" Value="IllegalUser = -1072824303" Usage="System.Messaging.MessageQueueErrorCode.IllegalUser" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824303</MemberValue>
      <Docs>
        <summary>Message text: The user has an invalid user name.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if your application is connecting to it through an invalid user name.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InsufficientProperties">
      <MemberSignature Language="C#" Value="InsufficientProperties" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode InsufficientProperties = int32(-1072824257)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.InsufficientProperties" />
      <MemberSignature Language="VB.NET" Value="InsufficientProperties" />
      <MemberSignature Language="C++ CLI" Value="InsufficientProperties" />
      <MemberSignature Language="F#" Value="InsufficientProperties = -1072824257" Usage="System.Messaging.MessageQueueErrorCode.InsufficientProperties" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824257</MemberValue>
      <Docs>
        <summary>Message text: Not all the required properties for the operation were specified in the input parameters.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InsufficientResources">
      <MemberSignature Language="C#" Value="InsufficientResources" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode InsufficientResources = int32(-1072824281)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.InsufficientResources" />
      <MemberSignature Language="VB.NET" Value="InsufficientResources" />
      <MemberSignature Language="C++ CLI" Value="InsufficientResources" />
      <MemberSignature Language="F#" Value="InsufficientResources = -1072824281" Usage="System.Messaging.MessageQueueErrorCode.InsufficientResources" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824281</MemberValue>
      <Docs>
        <summary>Message text: Insufficient resources to perform operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error, for example, if there is not enough memory to complete the operation. When this error is returned, the operation fails.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InvalidCertificate">
      <MemberSignature Language="C#" Value="InvalidCertificate" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode InvalidCertificate = int32(-1072824276)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.InvalidCertificate" />
      <MemberSignature Language="VB.NET" Value="InvalidCertificate" />
      <MemberSignature Language="C++ CLI" Value="InvalidCertificate" />
      <MemberSignature Language="F#" Value="InvalidCertificate = -1072824276" Usage="System.Messaging.MessageQueueErrorCode.InvalidCertificate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824276</MemberValue>
      <Docs>
        <summary>Message text: The user certificate is not valid.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if the security certificate specified in the <xref:System.Messaging.Message> class's <xref:System.Messaging.Message.SenderCertificate%2A> property is invalid, or if the certificate is not correctly placed in the Microsoft Internet Explorer personal certificate store.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InvalidHandle">
      <MemberSignature Language="C#" Value="InvalidHandle" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode InvalidHandle = int32(-1072824313)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.InvalidHandle" />
      <MemberSignature Language="VB.NET" Value="InvalidHandle" />
      <MemberSignature Language="C++ CLI" Value="InvalidHandle" />
      <MemberSignature Language="F#" Value="InvalidHandle = -1072824313" Usage="System.Messaging.MessageQueueErrorCode.InvalidHandle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824313</MemberValue>
      <Docs>
        <summary>Message text: An invalid handle passed to a function.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if the specified queue handle is not valid.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InvalidOwner">
      <MemberSignature Language="C#" Value="InvalidOwner" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode InvalidOwner = int32(-1072824252)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.InvalidOwner" />
      <MemberSignature Language="VB.NET" Value="InvalidOwner" />
      <MemberSignature Language="C++ CLI" Value="InvalidOwner" />
      <MemberSignature Language="F#" Value="InvalidOwner = -1072824252" Usage="System.Messaging.MessageQueueErrorCode.InvalidOwner" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824252</MemberValue>
      <Docs>
        <summary>Message text: Invalid object owner. For example CreateQueue failed because the Queue Manager object is invalid.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error, for example, if your application attempts to create a queue on a computer on which Message Queuing is not installed.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InvalidParameter">
      <MemberSignature Language="C#" Value="InvalidParameter" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode InvalidParameter = int32(-1072824314)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.InvalidParameter" />
      <MemberSignature Language="VB.NET" Value="InvalidParameter" />
      <MemberSignature Language="C++ CLI" Value="InvalidParameter" />
      <MemberSignature Language="F#" Value="InvalidParameter = -1072824314" Usage="System.Messaging.MessageQueueErrorCode.InvalidParameter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824314</MemberValue>
      <Docs>
        <summary>Message text: An invalid parameter passed to a function.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if one of the parameters supplied by the operation is not valid.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IOTimeout">
      <MemberSignature Language="C#" Value="IOTimeout" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode IOTimeout = int32(-1072824293)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.IOTimeout" />
      <MemberSignature Language="VB.NET" Value="IOTimeout" />
      <MemberSignature Language="C++ CLI" Value="IOTimeout" />
      <MemberSignature Language="F#" Value="IOTimeout = -1072824293" Usage="System.Messaging.MessageQueueErrorCode.IOTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824293</MemberValue>
      <Docs>
        <summary>Message text: The receive or peek message time-out has expired.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if the time-out specified in a call to <xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=nameWithType> or <xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=nameWithType> expires before a new message arrives in the queue. This can only happen if there was no message already in the queue; both methods would return immediately if a message exists.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LabelBufferTooSmall">
      <MemberSignature Language="C#" Value="LabelBufferTooSmall" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode LabelBufferTooSmall = int32(-1072824226)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.LabelBufferTooSmall" />
      <MemberSignature Language="VB.NET" Value="LabelBufferTooSmall" />
      <MemberSignature Language="C++ CLI" Value="LabelBufferTooSmall" />
      <MemberSignature Language="F#" Value="LabelBufferTooSmall = -1072824226" Usage="System.Messaging.MessageQueueErrorCode.LabelBufferTooSmall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824226</MemberValue>
      <Docs>
        <summary>Message text: The label buffer supplied to the API was too small.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MachineExists">
      <MemberSignature Language="C#" Value="MachineExists" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode MachineExists = int32(-1072824256)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.MachineExists" />
      <MemberSignature Language="VB.NET" Value="MachineExists" />
      <MemberSignature Language="C++ CLI" Value="MachineExists" />
      <MemberSignature Language="F#" Value="MachineExists = -1072824256" Usage="System.Messaging.MessageQueueErrorCode.MachineExists" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824256</MemberValue>
      <Docs>
        <summary>Message text: Computer with the same name already exists in the site.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MachineNotFound">
      <MemberSignature Language="C#" Value="MachineNotFound" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode MachineNotFound = int32(-1072824307)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.MachineNotFound" />
      <MemberSignature Language="VB.NET" Value="MachineNotFound" />
      <MemberSignature Language="C++ CLI" Value="MachineNotFound" />
      <MemberSignature Language="F#" Value="MachineNotFound = -1072824307" Usage="System.Messaging.MessageQueueErrorCode.MachineNotFound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824307</MemberValue>
      <Docs>
        <summary>Message text: The specified computer could not be found.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if it cannot find the queue's computer in the directory service.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MessageAlreadyReceived">
      <MemberSignature Language="C#" Value="MessageAlreadyReceived" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode MessageAlreadyReceived = int32(-1072824291)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.MessageAlreadyReceived" />
      <MemberSignature Language="VB.NET" Value="MessageAlreadyReceived" />
      <MemberSignature Language="C++ CLI" Value="MessageAlreadyReceived" />
      <MemberSignature Language="F#" Value="MessageAlreadyReceived = -1072824291" Usage="System.Messaging.MessageQueueErrorCode.MessageAlreadyReceived" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824291</MemberValue>
      <Docs>
        <summary>Message text: A message that is currently pointed at by the cursor has been removed from the queue by another process or by another call to receive the message without the use of this cursor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error when some other cursor, application, or the system administrator has already removed the message from the queue. This error is most likely to occur when using the <xref:System.Messaging.MessageEnumerator> class, such as the instance returned through a call to <xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A?displayProperty=nameWithType> or <xref:System.Messaging.MessageQueue.GetEnumerator%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MessageNotFound">
      <MemberSignature Language="C#" Value="MessageNotFound" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode MessageNotFound = int32(-1072824184)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.MessageNotFound" />
      <MemberSignature Language="VB.NET" Value="MessageNotFound" />
      <MemberSignature Language="C++ CLI" Value="MessageNotFound" />
      <MemberSignature Language="F#" Value="MessageNotFound = -1072824184" Usage="System.Messaging.MessageQueueErrorCode.MessageNotFound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824184</MemberValue>
      <Docs>
        <summary>Message text: The specified message could not be found.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if it cannot find the specified message in the queue.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MessageStorageFailed">
      <MemberSignature Language="C#" Value="MessageStorageFailed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode MessageStorageFailed = int32(-1072824278)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.MessageStorageFailed" />
      <MemberSignature Language="VB.NET" Value="MessageStorageFailed" />
      <MemberSignature Language="C++ CLI" Value="MessageStorageFailed" />
      <MemberSignature Language="F#" Value="MessageStorageFailed = -1072824278" Usage="System.Messaging.MessageQueueErrorCode.MessageStorageFailed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824278</MemberValue>
      <Docs>
        <summary>Message text: Could not store a recoverable or journal message. Message was not sent.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if the local computer cannot store a recoverable message (one whose delivery is guaranteed in the case of a network problem) or a journal message. See the <xref:System.Messaging.Message> class's <xref:System.Messaging.Message.Recoverable%2A> and <xref:System.Messaging.Message.UseJournalQueue%2A> properties for more information about these message sending options.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MissingConnectorType">
      <MemberSignature Language="C#" Value="MissingConnectorType" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode MissingConnectorType = int32(-1072824235)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.MissingConnectorType" />
      <MemberSignature Language="VB.NET" Value="MissingConnectorType" />
      <MemberSignature Language="C++ CLI" Value="MissingConnectorType" />
      <MemberSignature Language="F#" Value="MissingConnectorType = -1072824235" Usage="System.Messaging.MessageQueueErrorCode.MissingConnectorType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824235</MemberValue>
      <Docs>
        <summary>Message text: Connector Type is mandatory when sending an Acknowledgment or secure message.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error when the application sets a property typically set by Message Queuing, but does not specify the connector to use. For more information about connector types, see the <xref:System.Messaging.Message> class's <xref:System.Messaging.Message.ConnectorType%2A> property.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MqisReadOnlyMode">
      <MemberSignature Language="C#" Value="MqisReadOnlyMode" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode MqisReadOnlyMode = int32(-1072824224)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.MqisReadOnlyMode" />
      <MemberSignature Language="VB.NET" Value="MqisReadOnlyMode" />
      <MemberSignature Language="C++ CLI" Value="MqisReadOnlyMode" />
      <MemberSignature Language="F#" Value="MqisReadOnlyMode = -1072824224" Usage="System.Messaging.MessageQueueErrorCode.MqisReadOnlyMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824224</MemberValue>
      <Docs>
        <summary>Message text: MQIS database is in read-only mode.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MqisServerEmpty">
      <MemberSignature Language="C#" Value="MqisServerEmpty" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode MqisServerEmpty = int32(-1072824225)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.MqisServerEmpty" />
      <MemberSignature Language="VB.NET" Value="MqisServerEmpty" />
      <MemberSignature Language="C++ CLI" Value="MqisServerEmpty" />
      <MemberSignature Language="F#" Value="MqisServerEmpty = -1072824225" Usage="System.Messaging.MessageQueueErrorCode.MqisServerEmpty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824225</MemberValue>
      <Docs>
        <summary>Message text: The list of MQIS servers (in registry) is empty.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This error applies only to Message Queuing 1.0.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NoDs">
      <MemberSignature Language="C#" Value="NoDs" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode NoDs = int32(-1072824301)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.NoDs" />
      <MemberSignature Language="VB.NET" Value="NoDs" />
      <MemberSignature Language="C++ CLI" Value="NoDs" />
      <MemberSignature Language="F#" Value="NoDs = -1072824301" Usage="System.Messaging.MessageQueueErrorCode.NoDs" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824301</MemberValue>
      <Docs>
        <summary>Message text: No connection with this site's controller(s).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if the application cannot access the directory service. If this error is returned, verify permissions for accessing the directory service.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NoEntryPointMsmqOcm">
      <MemberSignature Language="C#" Value="NoEntryPointMsmqOcm" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode NoEntryPointMsmqOcm = int32(-1072824204)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.NoEntryPointMsmqOcm" />
      <MemberSignature Language="VB.NET" Value="NoEntryPointMsmqOcm" />
      <MemberSignature Language="C++ CLI" Value="NoEntryPointMsmqOcm" />
      <MemberSignature Language="F#" Value="NoEntryPointMsmqOcm = -1072824204" Usage="System.Messaging.MessageQueueErrorCode.NoEntryPointMsmqOcm" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824204</MemberValue>
      <Docs>
        <summary>Message text: Cannot locate an entry point in the MSMQOCM.DLL library.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NoGlobalCatalogInDomain">
      <MemberSignature Language="C#" Value="NoGlobalCatalogInDomain" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode NoGlobalCatalogInDomain = int32(-1072824196)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.NoGlobalCatalogInDomain" />
      <MemberSignature Language="VB.NET" Value="NoGlobalCatalogInDomain" />
      <MemberSignature Language="C++ CLI" Value="NoGlobalCatalogInDomain" />
      <MemberSignature Language="F#" Value="NoGlobalCatalogInDomain = -1072824196" Usage="System.Messaging.MessageQueueErrorCode.NoGlobalCatalogInDomain" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824196</MemberValue>
      <Docs>
        <summary>Message text: Unable to find Global Catalog servers in the specified domain.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NoInternalUserCertificate">
      <MemberSignature Language="C#" Value="NoInternalUserCertificate" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode NoInternalUserCertificate = int32(-1072824273)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.NoInternalUserCertificate" />
      <MemberSignature Language="VB.NET" Value="NoInternalUserCertificate" />
      <MemberSignature Language="C++ CLI" Value="NoInternalUserCertificate" />
      <MemberSignature Language="F#" Value="NoInternalUserCertificate = -1072824273" Usage="System.Messaging.MessageQueueErrorCode.NoInternalUserCertificate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824273</MemberValue>
      <Docs>
        <summary>Message text: The internal Message Queuing certificate for the user does not exist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if no internal certificate is registered or the registered certificate is corrupted.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NoMsmqServersOnDc">
      <MemberSignature Language="C#" Value="NoMsmqServersOnDc" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode NoMsmqServersOnDc = int32(-1072824203)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.NoMsmqServersOnDc" />
      <MemberSignature Language="VB.NET" Value="NoMsmqServersOnDc" />
      <MemberSignature Language="C++ CLI" Value="NoMsmqServersOnDc" />
      <MemberSignature Language="F#" Value="NoMsmqServersOnDc = -1072824203" Usage="System.Messaging.MessageQueueErrorCode.NoMsmqServersOnDc" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824203</MemberValue>
      <Docs>
        <summary>Message text: Failed to find Message Queuing servers on domain controllers.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NoMsmqServersOnGlobalCatalog">
      <MemberSignature Language="C#" Value="NoMsmqServersOnGlobalCatalog" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode NoMsmqServersOnGlobalCatalog = int32(-1072824195)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.NoMsmqServersOnGlobalCatalog" />
      <MemberSignature Language="VB.NET" Value="NoMsmqServersOnGlobalCatalog" />
      <MemberSignature Language="C++ CLI" Value="NoMsmqServersOnGlobalCatalog" />
      <MemberSignature Language="F#" Value="NoMsmqServersOnGlobalCatalog = -1072824195" Usage="System.Messaging.MessageQueueErrorCode.NoMsmqServersOnGlobalCatalog" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824195</MemberValue>
      <Docs>
        <summary>Message text: Failed to find Message Queuing servers on Global Catalog domain controllers.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NoResponseFromObjectServer">
      <MemberSignature Language="C#" Value="NoResponseFromObjectServer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode NoResponseFromObjectServer = int32(-1072824247)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.NoResponseFromObjectServer" />
      <MemberSignature Language="VB.NET" Value="NoResponseFromObjectServer" />
      <MemberSignature Language="C++ CLI" Value="NoResponseFromObjectServer" />
      <MemberSignature Language="F#" Value="NoResponseFromObjectServer = -1072824247" Usage="System.Messaging.MessageQueueErrorCode.NoResponseFromObjectServer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824247</MemberValue>
      <Docs>
        <summary>Message text: No response from object owner.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if there is no response from the directory service server. When this error is returned, the status of the operation is unknown.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ObjectServerNotAvailable">
      <MemberSignature Language="C#" Value="ObjectServerNotAvailable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode ObjectServerNotAvailable = int32(-1072824246)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.ObjectServerNotAvailable" />
      <MemberSignature Language="VB.NET" Value="ObjectServerNotAvailable" />
      <MemberSignature Language="C++ CLI" Value="ObjectServerNotAvailable" />
      <MemberSignature Language="F#" Value="ObjectServerNotAvailable = -1072824246" Usage="System.Messaging.MessageQueueErrorCode.ObjectServerNotAvailable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824246</MemberValue>
      <Docs>
        <summary>Message text: Object owner is not reachable.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if the directory service server for the object is not available. When this error is returned, the operation fails.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OperationCanceled">
      <MemberSignature Language="C#" Value="OperationCanceled" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode OperationCanceled = int32(-1072824312)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.OperationCanceled" />
      <MemberSignature Language="VB.NET" Value="OperationCanceled" />
      <MemberSignature Language="C++ CLI" Value="OperationCanceled" />
      <MemberSignature Language="F#" Value="OperationCanceled = -1072824312" Usage="System.Messaging.MessageQueueErrorCode.OperationCanceled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824312</MemberValue>
      <Docs>
        <summary>Message text: The operation was canceled before it could be completed.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PrivilegeNotHeld">
      <MemberSignature Language="C#" Value="PrivilegeNotHeld" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode PrivilegeNotHeld = int32(-1072824282)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.PrivilegeNotHeld" />
      <MemberSignature Language="VB.NET" Value="PrivilegeNotHeld" />
      <MemberSignature Language="C++ CLI" Value="PrivilegeNotHeld" />
      <MemberSignature Language="F#" Value="PrivilegeNotHeld = -1072824282" Usage="System.Messaging.MessageQueueErrorCode.PrivilegeNotHeld" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824282</MemberValue>
      <Docs>
        <summary>Message text: Client does not have the required privileges to perform the operation.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="Property" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode Property = int32(-1072824318)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.Property" />
      <MemberSignature Language="VB.NET" Value="Property" />
      <MemberSignature Language="C++ CLI" Value="Property" />
      <MemberSignature Language="F#" Value="Property = -1072824318" Usage="System.Messaging.MessageQueueErrorCode.Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824318</MemberValue>
      <Docs>
        <summary>Message text: One or more of the passed properties are invalid.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PropertyNotAllowed">
      <MemberSignature Language="C#" Value="PropertyNotAllowed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode PropertyNotAllowed = int32(-1072824258)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.PropertyNotAllowed" />
      <MemberSignature Language="VB.NET" Value="PropertyNotAllowed" />
      <MemberSignature Language="C++ CLI" Value="PropertyNotAllowed" />
      <MemberSignature Language="F#" Value="PropertyNotAllowed = -1072824258" Usage="System.Messaging.MessageQueueErrorCode.PropertyNotAllowed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824258</MemberValue>
      <Docs>
        <summary>Message text: Invalid property for the requested operation</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ProviderNameBufferTooSmall">
      <MemberSignature Language="C#" Value="ProviderNameBufferTooSmall" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode ProviderNameBufferTooSmall = int32(-1072824221)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.ProviderNameBufferTooSmall" />
      <MemberSignature Language="VB.NET" Value="ProviderNameBufferTooSmall" />
      <MemberSignature Language="C++ CLI" Value="ProviderNameBufferTooSmall" />
      <MemberSignature Language="F#" Value="ProviderNameBufferTooSmall = -1072824221" Usage="System.Messaging.MessageQueueErrorCode.ProviderNameBufferTooSmall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824221</MemberValue>
      <Docs>
        <summary>Message text: The passed buffer for the Provider name property is too small.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 See the Message class's AuthenticationProviderName property for more information about provider names.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PublicKeyDoesNotExist">
      <MemberSignature Language="C#" Value="PublicKeyDoesNotExist" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode PublicKeyDoesNotExist = int32(-1072824198)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.PublicKeyDoesNotExist" />
      <MemberSignature Language="VB.NET" Value="PublicKeyDoesNotExist" />
      <MemberSignature Language="C++ CLI" Value="PublicKeyDoesNotExist" />
      <MemberSignature Language="F#" Value="PublicKeyDoesNotExist = -1072824198" Usage="System.Messaging.MessageQueueErrorCode.PublicKeyDoesNotExist" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824198</MemberValue>
      <Docs>
        <summary>Message text: The public key for the computer does not exist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if it was able to query the directory service, but the enhanced key was not found. This error applies only to Message Queuing 2.0.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PublicKeyNotFound">
      <MemberSignature Language="C#" Value="PublicKeyNotFound" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode PublicKeyNotFound = int32(-1072824199)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.PublicKeyNotFound" />
      <MemberSignature Language="VB.NET" Value="PublicKeyNotFound" />
      <MemberSignature Language="C++ CLI" Value="PublicKeyNotFound" />
      <MemberSignature Language="F#" Value="PublicKeyNotFound = -1072824199" Usage="System.Messaging.MessageQueueErrorCode.PublicKeyNotFound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824199</MemberValue>
      <Docs>
        <summary>Message text: Unable to find the public key for computer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error, for example, if you are trying to retrieve the computer properties of a computer running Message Queuing 1.0 or if you are trying to get remote computer properties while working offline. This error applies only to Message Queuing 2.0.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="QDnsPropertyNotSupported">
      <MemberSignature Language="C#" Value="QDnsPropertyNotSupported" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode QDnsPropertyNotSupported = int32(-1072824210)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.QDnsPropertyNotSupported" />
      <MemberSignature Language="VB.NET" Value="QDnsPropertyNotSupported" />
      <MemberSignature Language="C++ CLI" Value="QDnsPropertyNotSupported" />
      <MemberSignature Language="F#" Value="QDnsPropertyNotSupported = -1072824210" Usage="System.Messaging.MessageQueueErrorCode.QDnsPropertyNotSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824210</MemberValue>
      <Docs>
        <summary>DNS property is not supported as criteria to locate queues.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot retrieve the DNS path name of a queue.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="QueueDeleted">
      <MemberSignature Language="C#" Value="QueueDeleted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode QueueDeleted = int32(-1072824230)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.QueueDeleted" />
      <MemberSignature Language="VB.NET" Value="QueueDeleted" />
      <MemberSignature Language="C++ CLI" Value="QueueDeleted" />
      <MemberSignature Language="F#" Value="QueueDeleted = -1072824230" Usage="System.Messaging.MessageQueueErrorCode.QueueDeleted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824230</MemberValue>
      <Docs>
        <summary>Message text: The queue was deleted. Messages cannot be received anymore using this queue instance. The queue should be closed.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="QueueExists">
      <MemberSignature Language="C#" Value="QueueExists" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode QueueExists = int32(-1072824315)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.QueueExists" />
      <MemberSignature Language="VB.NET" Value="QueueExists" />
      <MemberSignature Language="C++ CLI" Value="QueueExists" />
      <MemberSignature Language="F#" Value="QueueExists = -1072824315" Usage="System.Messaging.MessageQueueErrorCode.QueueExists" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824315</MemberValue>
      <Docs>
        <summary>Message text: A queue with the same pathname is already registered.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing registers public queues in the directory service, and registers private queues on the local computer.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="QueueNotAvailable">
      <MemberSignature Language="C#" Value="QueueNotAvailable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode QueueNotAvailable = int32(-1072824245)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.QueueNotAvailable" />
      <MemberSignature Language="VB.NET" Value="QueueNotAvailable" />
      <MemberSignature Language="C++ CLI" Value="QueueNotAvailable" />
      <MemberSignature Language="F#" Value="QueueNotAvailable = -1072824245" Usage="System.Messaging.MessageQueueErrorCode.QueueNotAvailable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824245</MemberValue>
      <Docs>
        <summary>Message text: Error while reading from a queue residing on a remote computer.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="QueueNotFound">
      <MemberSignature Language="C#" Value="QueueNotFound" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode QueueNotFound = int32(-1072824317)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.QueueNotFound" />
      <MemberSignature Language="VB.NET" Value="QueueNotFound" />
      <MemberSignature Language="C++ CLI" Value="QueueNotFound" />
      <MemberSignature Language="F#" Value="QueueNotFound = -1072824317" Usage="System.Messaging.MessageQueueErrorCode.QueueNotFound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824317</MemberValue>
      <Docs>
        <summary>Message text: The queue is not registered in the directory service.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if it cannot find the queue. This includes public queues not registered in the directory service and Internet queues that do not exist in the Message Queuing namespace.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RemoteMachineNotAvailable">
      <MemberSignature Language="C#" Value="RemoteMachineNotAvailable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode RemoteMachineNotAvailable = int32(-1072824215)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.RemoteMachineNotAvailable" />
      <MemberSignature Language="VB.NET" Value="RemoteMachineNotAvailable" />
      <MemberSignature Language="C++ CLI" Value="RemoteMachineNotAvailable" />
      <MemberSignature Language="F#" Value="RemoteMachineNotAvailable = -1072824215" Usage="System.Messaging.MessageQueueErrorCode.RemoteMachineNotAvailable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824215</MemberValue>
      <Docs>
        <summary>Message text: The remote machine is not available.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ResultBufferTooSmall">
      <MemberSignature Language="C#" Value="ResultBufferTooSmall" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode ResultBufferTooSmall = int32(-1072824250)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.ResultBufferTooSmall" />
      <MemberSignature Language="VB.NET" Value="ResultBufferTooSmall" />
      <MemberSignature Language="C++ CLI" Value="ResultBufferTooSmall" />
      <MemberSignature Language="F#" Value="ResultBufferTooSmall = -1072824250" Usage="System.Messaging.MessageQueueErrorCode.ResultBufferTooSmall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824250</MemberValue>
      <Docs>
        <summary>Message text: The supplied result buffer is too small.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SecurityDescriptorBufferTooSmall">
      <MemberSignature Language="C#" Value="SecurityDescriptorBufferTooSmall" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode SecurityDescriptorBufferTooSmall = int32(-1072824285)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.SecurityDescriptorBufferTooSmall" />
      <MemberSignature Language="VB.NET" Value="SecurityDescriptorBufferTooSmall" />
      <MemberSignature Language="C++ CLI" Value="SecurityDescriptorBufferTooSmall" />
      <MemberSignature Language="F#" Value="SecurityDescriptorBufferTooSmall = -1072824285" Usage="System.Messaging.MessageQueueErrorCode.SecurityDescriptorBufferTooSmall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824285</MemberValue>
      <Docs>
        <summary>Message text: The size of the buffer passed to MQGetQueueSecurity is too small.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if the supplied security buffer is too small for the security descriptor.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SenderCertificateBufferTooSmall">
      <MemberSignature Language="C#" Value="SenderCertificateBufferTooSmall" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode SenderCertificateBufferTooSmall = int32(-1072824277)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.SenderCertificateBufferTooSmall" />
      <MemberSignature Language="VB.NET" Value="SenderCertificateBufferTooSmall" />
      <MemberSignature Language="C++ CLI" Value="SenderCertificateBufferTooSmall" />
      <MemberSignature Language="F#" Value="SenderCertificateBufferTooSmall = -1072824277" Usage="System.Messaging.MessageQueueErrorCode.SenderCertificateBufferTooSmall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824277</MemberValue>
      <Docs>
        <summary>Message text: The passed buffer for the user certificate property is too small.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 See the Message class's System.Messaging.Message.SenderCertificate property for more information about user certificates.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SenderIdBufferTooSmall">
      <MemberSignature Language="C#" Value="SenderIdBufferTooSmall" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode SenderIdBufferTooSmall = int32(-1072824286)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.SenderIdBufferTooSmall" />
      <MemberSignature Language="VB.NET" Value="SenderIdBufferTooSmall" />
      <MemberSignature Language="C++ CLI" Value="SenderIdBufferTooSmall" />
      <MemberSignature Language="F#" Value="SenderIdBufferTooSmall = -1072824286" Usage="System.Messaging.MessageQueueErrorCode.SenderIdBufferTooSmall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824286</MemberValue>
      <Docs>
        <summary>Message text: The passed buffer for the user identifier property is too small.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error when the supplied sender identification buffer is too small. See the Message class's System.Messaging.Message.SenderId property for more information about sender identifiers.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ServiceNotAvailable">
      <MemberSignature Language="C#" Value="ServiceNotAvailable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode ServiceNotAvailable = int32(-1072824309)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.ServiceNotAvailable" />
      <MemberSignature Language="VB.NET" Value="ServiceNotAvailable" />
      <MemberSignature Language="C++ CLI" Value="ServiceNotAvailable" />
      <MemberSignature Language="F#" Value="ServiceNotAvailable = -1072824309" Usage="System.Messaging.MessageQueueErrorCode.ServiceNotAvailable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824309</MemberValue>
      <Docs>
        <summary>Message text: The Message Queues service is not available.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if the application is unable to connect to the Queue Manager.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SharingViolation">
      <MemberSignature Language="C#" Value="SharingViolation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode SharingViolation = int32(-1072824311)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.SharingViolation" />
      <MemberSignature Language="VB.NET" Value="SharingViolation" />
      <MemberSignature Language="C++ CLI" Value="SharingViolation" />
      <MemberSignature Language="F#" Value="SharingViolation = -1072824311" Usage="System.Messaging.MessageQueueErrorCode.SharingViolation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824311</MemberValue>
      <Docs>
        <summary>Message text: Sharing violation. The queue is already opened for exclusive receive.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if an application is trying to open an already opened queue that has exclusive read rights. For more information about receiving messages exclusively from a queue, see the <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.DenySharedReceive%2A> property.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SignatureBufferTooSmall">
      <MemberSignature Language="C#" Value="SignatureBufferTooSmall" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode SignatureBufferTooSmall = int32(-1072824222)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.SignatureBufferTooSmall" />
      <MemberSignature Language="VB.NET" Value="SignatureBufferTooSmall" />
      <MemberSignature Language="C++ CLI" Value="SignatureBufferTooSmall" />
      <MemberSignature Language="F#" Value="SignatureBufferTooSmall = -1072824222" Usage="System.Messaging.MessageQueueErrorCode.SignatureBufferTooSmall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824222</MemberValue>
      <Docs>
        <summary>Message text: The passed buffer for the Signature property is too small.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 See the Message class's DigitalSignature property for more information about signatures.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StaleHandle">
      <MemberSignature Language="C#" Value="StaleHandle" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode StaleHandle = int32(-1072824234)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.StaleHandle" />
      <MemberSignature Language="VB.NET" Value="StaleHandle" />
      <MemberSignature Language="C++ CLI" Value="StaleHandle" />
      <MemberSignature Language="F#" Value="StaleHandle = -1072824234" Usage="System.Messaging.MessageQueueErrorCode.StaleHandle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824234</MemberValue>
      <Docs>
        <summary>Message text: The Queue Manager service has been restarted. The queue handle is stale and should be closed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if the specified handle was obtained in a previous session of the Queue Manager service.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SymmetricKeyBufferTooSmall">
      <MemberSignature Language="C#" Value="SymmetricKeyBufferTooSmall" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode SymmetricKeyBufferTooSmall = int32(-1072824223)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.SymmetricKeyBufferTooSmall" />
      <MemberSignature Language="VB.NET" Value="SymmetricKeyBufferTooSmall" />
      <MemberSignature Language="C++ CLI" Value="SymmetricKeyBufferTooSmall" />
      <MemberSignature Language="F#" Value="SymmetricKeyBufferTooSmall = -1072824223" Usage="System.Messaging.MessageQueueErrorCode.SymmetricKeyBufferTooSmall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824223</MemberValue>
      <Docs>
        <summary>Message text: The passed buffer for the Symmetric key property is too small.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 See the Message class's DestinationSymmetricKey property for more information about symmetric keys.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TransactionEnlist">
      <MemberSignature Language="C#" Value="TransactionEnlist" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode TransactionEnlist = int32(-1072824232)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.TransactionEnlist" />
      <MemberSignature Language="VB.NET" Value="TransactionEnlist" />
      <MemberSignature Language="C++ CLI" Value="TransactionEnlist" />
      <MemberSignature Language="F#" Value="TransactionEnlist = -1072824232" Usage="System.Messaging.MessageQueueErrorCode.TransactionEnlist" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824232</MemberValue>
      <Docs>
        <summary>Message text: Cannot enlist the transaction.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TransactionImport">
      <MemberSignature Language="C#" Value="TransactionImport" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode TransactionImport = int32(-1072824242)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.TransactionImport" />
      <MemberSignature Language="VB.NET" Value="TransactionImport" />
      <MemberSignature Language="C++ CLI" Value="TransactionImport" />
      <MemberSignature Language="F#" Value="TransactionImport = -1072824242" Usage="System.Messaging.MessageQueueErrorCode.TransactionImport" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824242</MemberValue>
      <Docs>
        <summary>Message text: Cannot import the transaction.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TransactionSequence">
      <MemberSignature Language="C#" Value="TransactionSequence" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode TransactionSequence = int32(-1072824239)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.TransactionSequence" />
      <MemberSignature Language="VB.NET" Value="TransactionSequence" />
      <MemberSignature Language="C++ CLI" Value="TransactionSequence" />
      <MemberSignature Language="F#" Value="TransactionSequence = -1072824239" Usage="System.Messaging.MessageQueueErrorCode.TransactionSequence" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824239</MemberValue>
      <Docs>
        <summary>Message text: Wrong transaction operations sequence.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TransactionUsage">
      <MemberSignature Language="C#" Value="TransactionUsage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode TransactionUsage = int32(-1072824240)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.TransactionUsage" />
      <MemberSignature Language="VB.NET" Value="TransactionUsage" />
      <MemberSignature Language="C++ CLI" Value="TransactionUsage" />
      <MemberSignature Language="F#" Value="TransactionUsage = -1072824240" Usage="System.Messaging.MessageQueueErrorCode.TransactionUsage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824240</MemberValue>
      <Docs>
        <summary>Message text: Wrong transaction usage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if an attempt was made to open a remote queue for read access from within a transaction, or an attempt was made to read a message from a non-transactional queue from within a transaction.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="UnsupportedAccessMode">
      <MemberSignature Language="C#" Value="UnsupportedAccessMode" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode UnsupportedAccessMode = int32(-1072824251)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.UnsupportedAccessMode" />
      <MemberSignature Language="VB.NET" Value="UnsupportedAccessMode" />
      <MemberSignature Language="C++ CLI" Value="UnsupportedAccessMode" />
      <MemberSignature Language="F#" Value="UnsupportedAccessMode = -1072824251" Usage="System.Messaging.MessageQueueErrorCode.UnsupportedAccessMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824251</MemberValue>
      <Docs>
        <summary>Message text: The specified access mode is not supported.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error if the access mode specified when opening the queue is set to an invalid value, or the access mode and the share mode specified are not compatible.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="UnsupportedFormatNameOperation">
      <MemberSignature Language="C#" Value="UnsupportedFormatNameOperation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode UnsupportedFormatNameOperation = int32(-1072824288)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.UnsupportedFormatNameOperation" />
      <MemberSignature Language="VB.NET" Value="UnsupportedFormatNameOperation" />
      <MemberSignature Language="C++ CLI" Value="UnsupportedFormatNameOperation" />
      <MemberSignature Language="F#" Value="UnsupportedFormatNameOperation = -1072824288" Usage="System.Messaging.MessageQueueErrorCode.UnsupportedFormatNameOperation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824288</MemberValue>
      <Docs>
        <summary>Message text: The requested operation for the specified format name is not supported.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Message Queuing returns this error when the requested operation is not supported for the specified format name. Operations include trying to open a queue to receive messages by specifying a direct format name.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="UnsupportedOperation">
      <MemberSignature Language="C#" Value="UnsupportedOperation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode UnsupportedOperation = int32(-1072824214)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.UnsupportedOperation" />
      <MemberSignature Language="VB.NET" Value="UnsupportedOperation" />
      <MemberSignature Language="C++ CLI" Value="UnsupportedOperation" />
      <MemberSignature Language="F#" Value="UnsupportedOperation = -1072824214" Usage="System.Messaging.MessageQueueErrorCode.UnsupportedOperation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824214</MemberValue>
      <Docs>
        <summary>Message text: The operation is not supported for a WORKGROUP installation computer.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="UserBufferTooSmall">
      <MemberSignature Language="C#" Value="UserBufferTooSmall" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode UserBufferTooSmall = int32(-1072824280)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.UserBufferTooSmall" />
      <MemberSignature Language="VB.NET" Value="UserBufferTooSmall" />
      <MemberSignature Language="C++ CLI" Value="UserBufferTooSmall" />
      <MemberSignature Language="F#" Value="UserBufferTooSmall = -1072824280" Usage="System.Messaging.MessageQueueErrorCode.UserBufferTooSmall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824280</MemberValue>
      <Docs>
        <summary>Message text: Request failed because user buffer is too small to hold the returned information.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="WksCantServeClient">
      <MemberSignature Language="C#" Value="WksCantServeClient" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode WksCantServeClient = int32(-1072824218)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.WksCantServeClient" />
      <MemberSignature Language="VB.NET" Value="WksCantServeClient" />
      <MemberSignature Language="C++ CLI" Value="WksCantServeClient" />
      <MemberSignature Language="F#" Value="WksCantServeClient = -1072824218" Usage="System.Messaging.MessageQueueErrorCode.WksCantServeClient" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824218</MemberValue>
      <Docs>
        <summary>Message text: Message Queuing-independent clients cannot serve Message Queuing-dependent clients.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="WriteNotAllowed">
      <MemberSignature Language="C#" Value="WriteNotAllowed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueErrorCode WriteNotAllowed = int32(-1072824219)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueErrorCode.WriteNotAllowed" />
      <MemberSignature Language="VB.NET" Value="WriteNotAllowed" />
      <MemberSignature Language="C++ CLI" Value="WriteNotAllowed" />
      <MemberSignature Language="F#" Value="WriteNotAllowed = -1072824219" Usage="System.Messaging.MessageQueueErrorCode.WriteNotAllowed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <MemberValue>-1072824219</MemberValue>
      <Docs>
        <summary>Message text: Another MQIS server is being installed; write operations to the database are not allowed at this time.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>

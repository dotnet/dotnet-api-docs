<Type Name="IResourceMonitorBuilder" FullName="Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceMonitorBuilder">
  <TypeSignature Language="C#" Value="public interface IResourceMonitorBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IResourceMonitorBuilder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceMonitorBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Interface IResourceMonitorBuilder" />
  <TypeSignature Language="F#" Value="type IResourceMonitorBuilder = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IResourceMonitorBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Diagnostics.ResourceMonitoring</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Helps building the resource monitoring infrastructure.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddPublisher&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceMonitorBuilder AddPublisher&lt;T&gt; () where T : class, Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceUtilizationPublisher;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceMonitorBuilder AddPublisher&lt;class (class Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceUtilizationPublisher) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceMonitorBuilder.AddPublisher``1" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPublisher(Of T As {Class, IResourceUtilizationPublisher}) () As IResourceMonitorBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddPublisher : unit -&gt; Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceMonitorBuilder (requires 'T : null and 'T :&gt; Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceUtilizationPublisher)" Usage="iResourceMonitorBuilder.AddPublisher " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class, Microsoft::Extensions::Diagnostics::ResourceMonitoring::IResourceUtilizationPublisher Microsoft::Extensions::Diagnostics::ResourceMonitoring::IResourceMonitorBuilder ^ AddPublisher();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.ResourceMonitoring</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceMonitorBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceUtilizationPublisher</InterfaceName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The publisher's implementation type.</typeparam>
        <summary>
            Adds a resource utilization publisher that gets invoked whenever resource utilization is computed.
            </summary>
        <returns>The value of the object instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Services">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.DependencyInjection.IServiceCollection Services { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.DependencyInjection.IServiceCollection Services" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceMonitorBuilder.Services" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Services As IServiceCollection" />
      <MemberSignature Language="F#" Value="member this.Services : Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceMonitorBuilder.Services" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::DependencyInjection::IServiceCollection ^ Services { Microsoft::Extensions::DependencyInjection::IServiceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.ResourceMonitoring</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the service collection being manipulated by the builder.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="MSBuildGlob" FullName="Microsoft.Build.Globbing.MSBuildGlob">
  <TypeSignature Language="C#" Value="public class MSBuildGlob : Microsoft.Build.Globbing.IMSBuildGlob" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MSBuildGlob extends System.Object implements class Microsoft.Build.Globbing.IMSBuildGlob" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Globbing.MSBuildGlob" />
  <TypeSignature Language="VB.NET" Value="Public Class MSBuildGlob&#xA;Implements IMSBuildGlob" />
  <TypeSignature Language="C++ CLI" Value="public ref class MSBuildGlob : Microsoft::Build::Globbing::IMSBuildGlob" />
  <TypeSignature Language="F#" Value="type MSBuildGlob = class&#xA;    interface IMSBuildGlob" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Globbing.IMSBuildGlob</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                Represents a parsed MSBuild glob.
                An MSBuild glob is composed of three parts:
                - fixed directory part: <c>a/b/</c> in <c>a/b/\*\*/*test\*/\*\*/\*.cs</c>
                - wildcard directory part: <c>\*\*/\*test\*/\*\*/</c> in <c>a/b/\*\*/\*test\*/\*\*/\*.cs</c>
                - file name part: <c>\*.cs</c> in <c>a/b/\*\*/\*test\*/\*\*/\*.cs</c>
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FilenamePart">
      <MemberSignature Language="C#" Value="public string FilenamePart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilenamePart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Globbing.MSBuildGlob.FilenamePart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilenamePart As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilenamePart { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilenamePart : string" Usage="Microsoft.Build.Globbing.MSBuildGlob.FilenamePart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The file name part
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedDirectoryPart">
      <MemberSignature Language="C#" Value="public string FixedDirectoryPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FixedDirectoryPart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Globbing.MSBuildGlob.FixedDirectoryPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FixedDirectoryPart As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FixedDirectoryPart { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FixedDirectoryPart : string" Usage="Microsoft.Build.Globbing.MSBuildGlob.FixedDirectoryPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The fixed directory part.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLegal">
      <MemberSignature Language="C#" Value="public bool IsLegal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLegal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Globbing.MSBuildGlob.IsLegal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLegal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLegal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLegal : bool" Usage="Microsoft.Build.Globbing.MSBuildGlob.IsLegal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Whether the glob was parsed sucsesfully from a string.
                Illegal glob strings contain:
                - invalid path characters (other than the wildcard characters themselves)
                - "..."
                - ":"
                In addition, the wildcard directory part:
                - cannot contain ".."
                - if ** is present it must appear alone between slashes
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMatch">
      <MemberSignature Language="C#" Value="public bool IsMatch (string stringToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsMatch(string stringToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Globbing.MSBuildGlob.IsMatch(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsMatch (stringToMatch As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsMatch(System::String ^ stringToMatch);" />
      <MemberSignature Language="F#" Value="abstract member IsMatch : string -&gt; bool&#xA;override this.IsMatch : string -&gt; bool" Usage="mSBuildGlob.IsMatch stringToMatch" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Globbing.IMSBuildGlob.IsMatch(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stringToMatch">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="MatchInfo">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Globbing.MSBuildGlob.MatchInfoResult MatchInfo (string stringToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Build.Globbing.MSBuildGlob/MatchInfoResult MatchInfo(string stringToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Globbing.MSBuildGlob.MatchInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MatchInfo (stringToMatch As String) As MSBuildGlob.MatchInfoResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Globbing::MSBuildGlob::MatchInfoResult MatchInfo(System::String ^ stringToMatch);" />
      <MemberSignature Language="F#" Value="member this.MatchInfo : string -&gt; Microsoft.Build.Globbing.MSBuildGlob.MatchInfoResult" Usage="mSBuildGlob.MatchInfo stringToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Globbing.MSBuildGlob+MatchInfoResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stringToMatch" />
        <summary>
                Similar to <see cref="M:Microsoft.Build.Globbing.MSBuildGlob.IsMatch(System.String)" /> but also provides the match groups for the glob parts
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Globbing.MSBuildGlob Parse (string fileSpec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Globbing.MSBuildGlob Parse(string fileSpec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Globbing.MSBuildGlob.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (fileSpec As String) As MSBuildGlob" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Globbing::MSBuildGlob ^ Parse(System::String ^ fileSpec);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; Microsoft.Build.Globbing.MSBuildGlob" Usage="Microsoft.Build.Globbing.MSBuildGlob.Parse fileSpec" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Globbing.MSBuildGlob</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileSpec" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileSpec" />
        <summary>
                See <see cref="M:Microsoft.Build.Globbing.MSBuildGlob.Parse(System.String,System.String)" />.
                The glob root, if the glob is not fully qualified, will be the current working directory.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Globbing.MSBuildGlob Parse (string globRoot, string fileSpec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Globbing.MSBuildGlob Parse(string globRoot, string fileSpec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Globbing.MSBuildGlob.Parse(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (globRoot As String, fileSpec As String) As MSBuildGlob" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Globbing::MSBuildGlob ^ Parse(System::String ^ globRoot, System::String ^ fileSpec);" />
      <MemberSignature Language="F#" Value="static member Parse : string * string -&gt; Microsoft.Build.Globbing.MSBuildGlob" Usage="Microsoft.Build.Globbing.MSBuildGlob.Parse (globRoot, fileSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Globbing.MSBuildGlob</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="globRoot" Type="System.String" />
        <Parameter Name="fileSpec" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="globRoot">
                The root of the glob.
                The fixed directory part of the glob and the match arguments (<see cref="M:Microsoft.Build.Globbing.MSBuildGlob.IsMatch(System.String)" /> and <see cref="M:Microsoft.Build.Globbing.MSBuildGlob.MatchInfo(System.String)" />)
                will get normalized against this root.
                If empty, the current working directory is used.
                Cannot be null, and cannot contain invalid path arguments.
            </param>
        <param name="fileSpec">The string to parse</param>
        <summary>
                Parse the given <paramref name="fileSpec" /> into a <see cref="T:Microsoft.Build.Globbing.MSBuildGlob" /> using a given
                <paramref name="globRoot" />.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WildcardDirectoryPart">
      <MemberSignature Language="C#" Value="public string WildcardDirectoryPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WildcardDirectoryPart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Globbing.MSBuildGlob.WildcardDirectoryPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WildcardDirectoryPart As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WildcardDirectoryPart { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WildcardDirectoryPart : string" Usage="Microsoft.Build.Globbing.MSBuildGlob.WildcardDirectoryPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The wildcard directory part
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

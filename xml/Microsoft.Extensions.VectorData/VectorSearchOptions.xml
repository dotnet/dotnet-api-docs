<Type Name="VectorSearchOptions" FullName="Microsoft.Extensions.VectorData.VectorSearchOptions">
  <TypeSignature Language="C#" Value="public class VectorSearchOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VectorSearchOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.VectorData.VectorSearchOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class VectorSearchOptions" />
  <TypeSignature Language="F#" Value="type VectorSearchOptions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class VectorSearchOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Options for vector search.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VectorSearchOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.VectorData.VectorSearchOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VectorSearchOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.VectorData.VectorSearchFilter? Filter { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.VectorData.VectorSearchFilter Filter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorSearchOptions.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As VectorSearchFilter" />
      <MemberSignature Language="F#" Value="member this.Filter : Microsoft.Extensions.VectorData.VectorSearchFilter with get, set" Usage="Microsoft.Extensions.VectorData.VectorSearchOptions.Filter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::VectorData::VectorSearchFilter ^ Filter { Microsoft::Extensions::VectorData::VectorSearchFilter ^ get(); void set(Microsoft::Extensions::VectorData::VectorSearchFilter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.VectorData.VectorSearchFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a search filter to use before doing the vector search.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeTotalCount">
      <MemberSignature Language="C#" Value="public bool IncludeTotalCount { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeTotalCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorSearchOptions.IncludeTotalCount" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeTotalCount As Boolean" />
      <MemberSignature Language="F#" Value="member this.IncludeTotalCount : bool with get, set" Usage="Microsoft.Extensions.VectorData.VectorSearchOptions.IncludeTotalCount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeTotalCount { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the total count should be included in the results.
            </summary>
        <value>To be added.</value>
        <remarks>
            Default value is false.
            Not all vector search implementations will support this option in which case the total
            count will be null even if requested via this option.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeVectors">
      <MemberSignature Language="C#" Value="public bool IncludeVectors { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeVectors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorSearchOptions.IncludeVectors" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeVectors As Boolean" />
      <MemberSignature Language="F#" Value="member this.IncludeVectors : bool with get, set" Usage="Microsoft.Extensions.VectorData.VectorSearchOptions.IncludeVectors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeVectors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to include vectors in the retrieval result.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public int Skip { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Skip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorSearchOptions.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Property Skip As Integer" />
      <MemberSignature Language="F#" Value="member this.Skip : int with get, set" Usage="Microsoft.Extensions.VectorData.VectorSearchOptions.Skip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Skip { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of results to skip before returning results, i.e. the index of the first result to return.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public int Top { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorSearchOptions.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Integer" />
      <MemberSignature Language="F#" Value="member this.Top : int with get, set" Usage="Microsoft.Extensions.VectorData.VectorSearchOptions.Top" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Top { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the maximum number of results to return.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorPropertyName">
      <MemberSignature Language="C#" Value="public string? VectorPropertyName { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VectorPropertyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorSearchOptions.VectorPropertyName" />
      <MemberSignature Language="VB.NET" Value="Public Property VectorPropertyName As String" />
      <MemberSignature Language="F#" Value="member this.VectorPropertyName : string with get, set" Usage="Microsoft.Extensions.VectorData.VectorSearchOptions.VectorPropertyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VectorPropertyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the vector property to search on.
            Use the name of the vector property from your data model or as provided in the record definition.
            If not provided will default to the first vector property in the schema.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="VectorStoreVectorProperty" FullName="Microsoft.Extensions.VectorData.VectorStoreVectorProperty">
  <TypeSignature Language="C#" Value="public class VectorStoreVectorProperty : Microsoft.Extensions.VectorData.VectorStoreProperty" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VectorStoreVectorProperty extends Microsoft.Extensions.VectorData.VectorStoreProperty" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.VectorData.VectorStoreVectorProperty" />
  <TypeSignature Language="VB.NET" Value="Public Class VectorStoreVectorProperty&#xA;Inherits VectorStoreProperty" />
  <TypeSignature Language="F#" Value="type VectorStoreVectorProperty = class&#xA;    inherit VectorStoreProperty" />
  <TypeSignature Language="C++ CLI" Value="public ref class VectorStoreVectorProperty : Microsoft::Extensions::VectorData::VectorStoreProperty" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Extensions.VectorData.VectorStoreProperty</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Defines a vector property on a vector store record.
            </summary>
    <remarks>
            The characteristics defined here influence how the property is treated by the vector store.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VectorStoreVectorProperty (string name, int dimensions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 dimensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.VectorData.VectorStoreVectorProperty.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, dimensions As Integer)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.VectorData.VectorStoreVectorProperty : string * int -&gt; Microsoft.Extensions.VectorData.VectorStoreVectorProperty" Usage="new Microsoft.Extensions.VectorData.VectorStoreVectorProperty (name, dimensions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VectorStoreVectorProperty(System::String ^ name, int dimensions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dimensions" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">The name of the property on the data model. If the record is mapped to a .NET type, this corresponds to the .NET property name on that type.</param>
        <param name="dimensions">The number of dimensions that the vector has.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.VectorData.VectorStoreVectorProperty" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VectorStoreVectorProperty (string name, Type type, int dimensions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type type, int32 dimensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.VectorData.VectorStoreVectorProperty.#ctor(System.String,System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As Type, dimensions As Integer)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.VectorData.VectorStoreVectorProperty : string * Type * int -&gt; Microsoft.Extensions.VectorData.VectorStoreVectorProperty" Usage="new Microsoft.Extensions.VectorData.VectorStoreVectorProperty (name, type, dimensions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VectorStoreVectorProperty(System::String ^ name, Type ^ type, int dimensions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="dimensions" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">The name of the property on the data model. If the record is mapped to a .NET type, this corresponds to the .NET property name on that type.</param>
        <param name="type">The type of the property.</param>
        <param name="dimensions">The number of dimensions that the vector has.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.VectorData.VectorStoreVectorProperty" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dimensions">
      <MemberSignature Language="C#" Value="public int Dimensions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Dimensions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorStoreVectorProperty.Dimensions" />
      <MemberSignature Language="VB.NET" Value="Public Property Dimensions As Integer" />
      <MemberSignature Language="F#" Value="member this.Dimensions : int with get, set" Usage="Microsoft.Extensions.VectorData.VectorStoreVectorProperty.Dimensions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Dimensions { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of dimensions that the vector has.
            </summary>
        <value>To be added.</value>
        <remarks>
            This property is required when creating collections, but can be omitted if not using that functionality.
            If not provided when trying to create a collection, create will fail.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DistanceFunction">
      <MemberSignature Language="C#" Value="public string? DistanceFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DistanceFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorStoreVectorProperty.DistanceFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property DistanceFunction As String" />
      <MemberSignature Language="F#" Value="member this.DistanceFunction : string with get, set" Usage="Microsoft.Extensions.VectorData.VectorStoreVectorProperty.DistanceFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DistanceFunction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the distance function to use when comparing vectors.
            </summary>
        <value>
            The default varies by database type. See the documentation of your chosen database connector for more information.
            </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:Microsoft.Extensions.VectorData.DistanceFunction" />
      </Docs>
    </Member>
    <Member MemberName="EmbeddingGenerator">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.IEmbeddingGenerator? EmbeddingGenerator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.IEmbeddingGenerator EmbeddingGenerator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorStoreVectorProperty.EmbeddingGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Property EmbeddingGenerator As IEmbeddingGenerator" />
      <MemberSignature Language="F#" Value="member this.EmbeddingGenerator : Microsoft.Extensions.AI.IEmbeddingGenerator with get, set" Usage="Microsoft.Extensions.VectorData.VectorStoreVectorProperty.EmbeddingGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::AI::IEmbeddingGenerator ^ EmbeddingGenerator { Microsoft::Extensions::AI::IEmbeddingGenerator ^ get(); void set(Microsoft::Extensions::AI::IEmbeddingGenerator ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.IEmbeddingGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the default embedding generator to use for this property.
            </summary>
        <value>To be added.</value>
        <remarks>
            If not set, embedding generation will be performed in the database, if supported by your connector.
            Otherwise, if your database does not support embedding generation, only pregenerated embeddings can be used (for example, <c>ReadOnlyMemory&lt;float&gt;</c>).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmbeddingType">
      <MemberSignature Language="C#" Value="public Type? EmbeddingType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EmbeddingType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorStoreVectorProperty.EmbeddingType" />
      <MemberSignature Language="VB.NET" Value="Public Property EmbeddingType As Type" />
      <MemberSignature Language="F#" Value="member this.EmbeddingType : Type with get, set" Usage="Microsoft.Extensions.VectorData.VectorStoreVectorProperty.EmbeddingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ EmbeddingType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the desired embedding type (for example, <c>Embedding&lt;Half&gt;</c>) for cases where the default (typically <c>Embedding&lt;float&gt;</c>) isn't suitable.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexKind">
      <MemberSignature Language="C#" Value="public string? IndexKind { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IndexKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorStoreVectorProperty.IndexKind" />
      <MemberSignature Language="VB.NET" Value="Public Property IndexKind As String" />
      <MemberSignature Language="F#" Value="member this.IndexKind : string with get, set" Usage="Microsoft.Extensions.VectorData.VectorStoreVectorProperty.IndexKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IndexKind { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the kind of index to use.
            </summary>
        <value>
            The default varies by database type. See the documentation of your chosen database connector for more information.
            </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:Microsoft.Extensions.VectorData.IndexKind" />
      </Docs>
    </Member>
  </Members>
</Type>

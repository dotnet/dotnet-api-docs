<Type Name="VectorStoreRecordVectorAttribute" FullName="Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute">
  <TypeSignature Language="C#" Value="public sealed class VectorStoreRecordVectorAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VectorStoreRecordVectorAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VectorStoreRecordVectorAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="F#" Value="type VectorStoreRecordVectorAttribute = class&#xA;    inherit Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class VectorStoreRecordVectorAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Property, AllowMultiple=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Property, AllowMultiple=false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-8.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Attribute to mark a property on a record class as a vector.
            </summary>
    <remarks>
            The characteristics defined here will influence how the property is treated by the vector store.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VectorStoreRecordVectorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VectorStoreRecordVectorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VectorStoreRecordVectorAttribute (int Dimensions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 Dimensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Dimensions As Integer)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute : int -&gt; Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute" Usage="new Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute Dimensions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VectorStoreRecordVectorAttribute(int Dimensions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Dimensions" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Dimensions">The number of dimensions that the vector has.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VectorStoreRecordVectorAttribute (int Dimensions, string? DistanceFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 Dimensions, string DistanceFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Dimensions As Integer, DistanceFunction As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute : int * string -&gt; Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute" Usage="new Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute (Dimensions, DistanceFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VectorStoreRecordVectorAttribute(int Dimensions, System::String ^ DistanceFunction);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Dimensions" Type="System.Int32" />
        <Parameter Name="DistanceFunction" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Dimensions">The number of dimensions that the vector has.</param>
        <param name="DistanceFunction">The distance function to use when comparing vectors.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VectorStoreRecordVectorAttribute (int Dimensions, string? DistanceFunction, string? IndexKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 Dimensions, string DistanceFunction, string IndexKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute.#ctor(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Dimensions As Integer, DistanceFunction As String, IndexKind As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute : int * string * string -&gt; Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute" Usage="new Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute (Dimensions, DistanceFunction, IndexKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VectorStoreRecordVectorAttribute(int Dimensions, System::String ^ DistanceFunction, System::String ^ IndexKind);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Dimensions" Type="System.Int32" />
        <Parameter Name="DistanceFunction" Type="System.String" />
        <Parameter Name="IndexKind" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Dimensions">The number of dimensions that the vector has.</param>
        <param name="DistanceFunction">The distance function to use when comparing vectors.</param>
        <param name="IndexKind">The kind of index to use.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dimensions">
      <MemberSignature Language="C#" Value="public int? Dimensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Dimensions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute.Dimensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dimensions As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Dimensions : Nullable&lt;int&gt;" Usage="Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute.Dimensions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; Dimensions { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of dimensions that the vector has.
            </summary>
        <value>To be added.</value>
        <remarks>
            This property is required when creating collections, but may be omitted if not using that functionality.
            If not provided when trying to create a collection, create will fail.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DistanceFunction">
      <MemberSignature Language="C#" Value="public string? DistanceFunction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DistanceFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute.DistanceFunction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DistanceFunction As String" />
      <MemberSignature Language="F#" Value="member this.DistanceFunction : string" Usage="Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute.DistanceFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DistanceFunction { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the distance function to use when comparing vectors.
            </summary>
        <value>To be added.</value>
        <remarks>
            Default varies by database type. See the documentation of your chosen database connector for more information.
            </remarks>
        <altmember cref="P:Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute.DistanceFunction" />
      </Docs>
    </Member>
    <Member MemberName="IndexKind">
      <MemberSignature Language="C#" Value="public string? IndexKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IndexKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute.IndexKind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IndexKind As String" />
      <MemberSignature Language="F#" Value="member this.IndexKind : string" Usage="Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute.IndexKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IndexKind { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the kind of index to use.
            </summary>
        <value>To be added.</value>
        <remarks>
            Default varies by database type. See the documentation of your chosen database connector for more information.
            </remarks>
        <altmember cref="P:Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute.IndexKind" />
      </Docs>
    </Member>
    <Member MemberName="StoragePropertyName">
      <MemberSignature Language="C#" Value="public string? StoragePropertyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StoragePropertyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute.StoragePropertyName" />
      <MemberSignature Language="VB.NET" Value="Public Property StoragePropertyName As String" />
      <MemberSignature Language="F#" Value="member this.StoragePropertyName : string with get, set" Usage="Microsoft.Extensions.VectorData.VectorStoreRecordVectorAttribute.StoragePropertyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StoragePropertyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an optional name to use for the property in storage, if different from the property name.
            E.g. the property name might be "MyProperty" but the storage name might be "my_property".
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

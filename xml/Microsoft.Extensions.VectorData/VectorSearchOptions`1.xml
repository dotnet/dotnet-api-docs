<Type Name="VectorSearchOptions&lt;TRecord&gt;" FullName="Microsoft.Extensions.VectorData.VectorSearchOptions&lt;TRecord&gt;">
  <TypeSignature Language="C#" Value="public class VectorSearchOptions&lt;TRecord&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VectorSearchOptions`1&lt;TRecord&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.VectorData.VectorSearchOptions`1" />
  <TypeSignature Language="VB.NET" Value="Public Class VectorSearchOptions(Of TRecord)" />
  <TypeSignature Language="F#" Value="type VectorSearchOptions&lt;'Record&gt; = class" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TRecord&gt;&#xA;public ref class VectorSearchOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TRecord" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TRecord">To be added.</typeparam>
    <summary>
            Defines options for vector search.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VectorSearchOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.VectorData.VectorSearchOptions`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VectorSearchOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression&lt;Func&lt;TRecord,bool&gt;&gt;? Filter { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TRecord, bool&gt;&gt; Filter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorSearchOptions`1.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As Expression(Of Func(Of TRecord, Boolean))" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Linq.Expressions.Expression&lt;Func&lt;'Record, bool&gt;&gt; with get, set" Usage="Microsoft.Extensions.VectorData.VectorSearchOptions&lt;'Record&gt;.Filter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::Expression&lt;Func&lt;TRecord, bool&gt; ^&gt; ^ Filter { System::Linq::Expressions::Expression&lt;Func&lt;TRecord, bool&gt; ^&gt; ^ get(); void set(System::Linq::Expressions::Expression&lt;Func&lt;TRecord, bool&gt; ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;TRecord,System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a search filter to use before doing the vector search.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeTotalCount">
      <MemberSignature Language="C#" Value="public bool IncludeTotalCount { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeTotalCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorSearchOptions`1.IncludeTotalCount" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeTotalCount As Boolean" />
      <MemberSignature Language="F#" Value="member this.IncludeTotalCount : bool with get, set" Usage="Microsoft.Extensions.VectorData.VectorSearchOptions&lt;'Record&gt;.IncludeTotalCount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeTotalCount { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Total count is no longer included in the results.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Total count is no longer included in the results.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the total count should be included in the results.
            </summary>
        <value>
            The default value is false.
            </value>
        <remarks>
            Not all vector search implementations support this option, in which case the total
            count will be null even if requested via this option.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeVectors">
      <MemberSignature Language="C#" Value="public bool IncludeVectors { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeVectors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorSearchOptions`1.IncludeVectors" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeVectors As Boolean" />
      <MemberSignature Language="F#" Value="member this.IncludeVectors : bool with get, set" Usage="Microsoft.Extensions.VectorData.VectorSearchOptions&lt;'Record&gt;.IncludeVectors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeVectors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to include vectors in the retrieval result.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OldFilter">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.VectorData.VectorSearchFilter? OldFilter { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.VectorData.VectorSearchFilter OldFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorSearchOptions`1.OldFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property OldFilter As VectorSearchFilter" />
      <MemberSignature Language="F#" Value="member this.OldFilter : Microsoft.Extensions.VectorData.VectorSearchFilter with get, set" Usage="Microsoft.Extensions.VectorData.VectorSearchOptions&lt;'Record&gt;.OldFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::VectorData::VectorSearchFilter ^ OldFilter { Microsoft::Extensions::VectorData::VectorSearchFilter ^ get(); void set(Microsoft::Extensions::VectorData::VectorSearchFilter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use Filter instead")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use Filter instead")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.VectorData.VectorSearchFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a search filter to use before doing the vector search.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public int Skip { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Skip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorSearchOptions`1.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Property Skip As Integer" />
      <MemberSignature Language="F#" Value="member this.Skip : int with get, set" Usage="Microsoft.Extensions.VectorData.VectorSearchOptions&lt;'Record&gt;.Skip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Skip { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of results to skip before returning results, that is, the index of the first result to return.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the value is less than 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="VectorProperty">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression&lt;Func&lt;TRecord,object?&gt;&gt;? VectorProperty { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TRecord, object&gt;&gt; VectorProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorSearchOptions`1.VectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Property VectorProperty As Expression(Of Func(Of TRecord, Object))" />
      <MemberSignature Language="F#" Value="member this.VectorProperty : System.Linq.Expressions.Expression&lt;Func&lt;'Record, obj&gt;&gt; with get, set" Usage="Microsoft.Extensions.VectorData.VectorSearchOptions&lt;'Record&gt;.VectorProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::Expression&lt;Func&lt;TRecord, System::Object ^&gt; ^&gt; ^ VectorProperty { System::Linq::Expressions::Expression&lt;Func&lt;TRecord, System::Object ^&gt; ^&gt; ^ get(); void set(System::Linq::Expressions::Expression&lt;Func&lt;TRecord, System::Object ^&gt; ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1, 2 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1, 2 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;TRecord,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the vector property to search on.
            Only needs to be set when the collection has multiple vector properties.
            </summary>
        <value>
            If not provided will check if there is a vector property to use by default, and
            will throw if either none or multiple exist.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorPropertyName">
      <MemberSignature Language="C#" Value="public string? VectorPropertyName { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VectorPropertyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorSearchOptions`1.VectorPropertyName" />
      <MemberSignature Language="VB.NET" Value="Public Property VectorPropertyName As String" />
      <MemberSignature Language="F#" Value="member this.VectorPropertyName : string with get, set" Usage="Microsoft.Extensions.VectorData.VectorSearchOptions&lt;'Record&gt;.VectorPropertyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VectorPropertyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use VectorProperty instead")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use VectorProperty instead")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the vector property to search on.
            Use the name of the vector property from your data model or as provided in the record definition.
            </summary>
        <value>
            If not provided will check if there is a vector property to use by default, and
            will throw if either none or multiple exist.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="VectorStoreRecordVectorProperty" FullName="Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty">
  <TypeSignature Language="C#" Value="public class VectorStoreRecordVectorProperty : Microsoft.Extensions.VectorData.VectorStoreRecordProperty" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VectorStoreRecordVectorProperty extends Microsoft.Extensions.VectorData.VectorStoreRecordProperty" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty" />
  <TypeSignature Language="VB.NET" Value="Public Class VectorStoreRecordVectorProperty&#xA;Inherits VectorStoreRecordProperty" />
  <TypeSignature Language="F#" Value="type VectorStoreRecordVectorProperty = class&#xA;    inherit VectorStoreRecordProperty" />
  <TypeSignature Language="C++ CLI" Value="public ref class VectorStoreRecordVectorProperty : Microsoft::Extensions::VectorData::VectorStoreRecordProperty" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Extensions.VectorData.VectorStoreRecordProperty</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Defines a vector property on a vector store record.
            </summary>
    <remarks>
            The characteristics defined here influence how the property is treated by the vector store.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VectorStoreRecordVectorProperty (Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty.#ctor(Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As VectorStoreRecordVectorProperty)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty : Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty -&gt; Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty" Usage="new Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VectorStoreRecordVectorProperty(Microsoft::Extensions::VectorData::VectorStoreRecordVectorProperty ^ source);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty" />
      </Parameters>
      <Docs>
        <param name="source">The source to clone.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty" /> class by cloning the given source.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VectorStoreRecordVectorProperty (string propertyName, Type propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, class System.Type propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, propertyType As Type)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty : string * Type -&gt; Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty" Usage="new Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty (propertyName, propertyType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VectorStoreRecordVectorProperty(System::String ^ propertyName, Type ^ propertyType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constructor is obsolete, since dimensions is now a required parameter.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constructor is obsolete, since dimensions is now a required parameter.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property.</param>
        <param name="propertyType">The type of the property.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VectorStoreRecordVectorProperty (string propertyName, Type propertyType, int dimensions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, class System.Type propertyType, int32 dimensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty.#ctor(System.String,System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, propertyType As Type, dimensions As Integer)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty : string * Type * int -&gt; Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty" Usage="new Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty (propertyName, propertyType, dimensions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VectorStoreRecordVectorProperty(System::String ^ propertyName, Type ^ propertyType, int dimensions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="dimensions" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property.</param>
        <param name="propertyType">The type of the property.</param>
        <param name="dimensions">The number of dimensions that the vector has.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dimensions">
      <MemberSignature Language="C#" Value="public int Dimensions { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Dimensions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty.Dimensions" />
      <MemberSignature Language="VB.NET" Value="Public Property Dimensions As Integer" />
      <MemberSignature Language="F#" Value="member this.Dimensions : int with get, set" Usage="Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty.Dimensions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Dimensions { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of dimensions that the vector has.
            </summary>
        <value>To be added.</value>
        <remarks>
            This property is required when creating collections, but can be omitted if not using that functionality.
            If not provided when trying to create a collection, create will fail.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DistanceFunction">
      <MemberSignature Language="C#" Value="public string? DistanceFunction { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DistanceFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty.DistanceFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property DistanceFunction As String" />
      <MemberSignature Language="F#" Value="member this.DistanceFunction : string with get, set" Usage="Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty.DistanceFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DistanceFunction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the distance function to use when comparing vectors.
            </summary>
        <value>
            The default varies by database type. See the documentation of your chosen database connector for more information.
            </value>
        <remarks>
            Default varies by database type. See the documentation of your chosen database connector for more information.
            </remarks>
        <altmember cref="T:Microsoft.Extensions.VectorData.DistanceFunction" />
      </Docs>
    </Member>
    <Member MemberName="EmbeddingGenerator">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.IEmbeddingGenerator? EmbeddingGenerator { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.IEmbeddingGenerator EmbeddingGenerator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty.EmbeddingGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Property EmbeddingGenerator As IEmbeddingGenerator" />
      <MemberSignature Language="F#" Value="member this.EmbeddingGenerator : Microsoft.Extensions.AI.IEmbeddingGenerator with get, set" Usage="Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty.EmbeddingGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::AI::IEmbeddingGenerator ^ EmbeddingGenerator { Microsoft::Extensions::AI::IEmbeddingGenerator ^ get(); void set(Microsoft::Extensions::AI::IEmbeddingGenerator ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.IEmbeddingGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the default embedding generator to use for this property.
            </summary>
        <value>To be added.</value>
        <remarks>
            If not set, embedding generation will be performed in the database, if supported by your connector.
            If not supported, only pre-generated embeddings can be used, e.g. via <see cref="M:Microsoft.Extensions.VectorData.IVectorSearch`1.SearchEmbeddingAsync``1(``0,System.Int32,Microsoft.Extensions.VectorData.VectorSearchOptions{`0},System.Threading.CancellationToken)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmbeddingType">
      <MemberSignature Language="C#" Value="public Type? EmbeddingType { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EmbeddingType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty.EmbeddingType" />
      <MemberSignature Language="VB.NET" Value="Public Property EmbeddingType As Type" />
      <MemberSignature Language="F#" Value="member this.EmbeddingType : Type with get, set" Usage="Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty.EmbeddingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ EmbeddingType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the desired embedding type (e.g. <c>Embedding&lt;Half&gt;</c>, for cases where the default (typically <c>Embedding&lt;float&gt;</c>) isn't suitable.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexKind">
      <MemberSignature Language="C#" Value="public string? IndexKind { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IndexKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty.IndexKind" />
      <MemberSignature Language="VB.NET" Value="Public Property IndexKind As String" />
      <MemberSignature Language="F#" Value="member this.IndexKind : string with get, set" Usage="Microsoft.Extensions.VectorData.VectorStoreRecordVectorProperty.IndexKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IndexKind { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the kind of index to use.
            </summary>
        <value>
            The default varies by database type. See the documentation of your chosen database connector for more information.
            </value>
        <remarks>
            Default varies by database type. See the documentation of your chosen database connector for more information.
            </remarks>
        <altmember cref="T:Microsoft.Extensions.VectorData.IndexKind" />
      </Docs>
    </Member>
  </Members>
</Type>

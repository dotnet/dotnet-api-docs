<Type Name="IVectorizedSearch&lt;TRecord&gt;" FullName="Microsoft.Extensions.VectorData.IVectorizedSearch&lt;TRecord&gt;">
  <TypeSignature Language="C#" Value="public interface IVectorizedSearch&lt;TRecord&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IVectorizedSearch`1&lt;TRecord&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.VectorData.IVectorizedSearch`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVectorizedSearch(Of TRecord)" />
  <TypeSignature Language="F#" Value="type IVectorizedSearch&lt;'Record&gt; = interface" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TRecord&gt;&#xA;public interface class IVectorizedSearch" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TRecord">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TRecord">The record data model to use for retrieving data from the store.</typeparam>
    <summary>
            Contains a method for doing a vector search using a vector.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="VectorizedSearchAsync&lt;TVector&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Extensions.VectorData.VectorSearchResults&lt;TRecord&gt;&gt; VectorizedSearchAsync&lt;TVector&gt; (TVector vector, Microsoft.Extensions.VectorData.VectorSearchOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Extensions.VectorData.VectorSearchResults`1&lt;!TRecord&gt;&gt; VectorizedSearchAsync&lt;TVector&gt;(!!TVector vector, class Microsoft.Extensions.VectorData.VectorSearchOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.VectorData.IVectorizedSearch`1.VectorizedSearchAsync``1(``0,Microsoft.Extensions.VectorData.VectorSearchOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function VectorizedSearchAsync(Of TVector) (vector As TVector, Optional options As VectorSearchOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of VectorSearchResults(Of TRecord))" />
      <MemberSignature Language="F#" Value="abstract member VectorizedSearchAsync : 'Vector * Microsoft.Extensions.VectorData.VectorSearchOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Extensions.VectorData.VectorSearchResults&lt;'Record&gt;&gt;" Usage="iVectorizedSearch.VectorizedSearchAsync (vector, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Extensions.VectorData.VectorSearchResults&lt;TRecord&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TVector">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="TVector" />
        <Parameter Name="options" Type="Microsoft.Extensions.VectorData.VectorSearchOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TVector">The type of the vector.</typeparam>
        <param name="vector">The vector to search the store with.</param>
        <param name="options">The options that control the behavior of the search.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>
            Search the vector store for records that match the given embedding and filter.
            </summary>
        <returns>The records found by the vector search, including their result scores.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

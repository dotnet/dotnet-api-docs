<Type Name="ComVariant" FullName="System.Runtime.InteropServices.Marshalling.ComVariant">
  <TypeSignature Language="C#" Value="public struct ComVariant : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ComVariant extends System.ValueType implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.Marshalling.ComVariant" />
  <TypeSignature Language="VB.NET" Value="Public Structure ComVariant&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type ComVariant = struct&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public value class ComVariant : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A type that represents an OLE VARIANT in managed code.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="As&lt;T&gt;">
      <MemberSignature Language="C#" Value="public readonly T? As&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T As&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.ComVariant.As``1" />
      <MemberSignature Language="VB.NET" Value="Public Function As(Of T) () As T" />
      <MemberSignature Language="F#" Value="member this.As : unit -&gt; 'T" Usage="comVariant.As " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T As();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The managed type to create an instance of.</typeparam>
        <summary>Create a managed value based on the value in the <see cref="T:System.Runtime.InteropServices.Marshalling.ComVariant" /> instance.</summary>
        <returns>The managed value contained in this variant.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">When <typeparamref name="T" /> does not match the <see cref="P:System.Runtime.InteropServices.Marshalling.ComVariant.VarType" /> of the <see cref="T:System.Runtime.InteropServices.Marshalling.ComVariant" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.Marshalling.ComVariant Create&lt;T&gt; (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.InteropServices.Marshalling.ComVariant Create&lt;T&gt;(!!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.ComVariant.Create``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T) (value As T) As ComVariant" />
      <MemberSignature Language="F#" Value="static member Create : 'T -&gt; System.Runtime.InteropServices.Marshalling.ComVariant" Usage="System.Runtime.InteropServices.Marshalling.ComVariant.Create value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::InteropServices::Marshalling::ComVariant Create(T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.Marshalling.ComVariant</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DisallowNull]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DisallowNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the specified value.</typeparam>
        <param name="value">The value to wrap in an <see cref="T:System.Runtime.InteropServices.Marshalling.ComVariant" />.</param>
        <summary>Create an <see cref="T:System.Runtime.InteropServices.Marshalling.ComVariant" /> instance from the specified value.</summary>
        <returns>An <see cref="T:System.Runtime.InteropServices.Marshalling.ComVariant" /> that contains the provided value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">When <typeparamref name="T" /> does not directly correspond to a <see cref="T:System.Runtime.InteropServices.VarEnum" /> variant type.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRaw&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.Marshalling.ComVariant CreateRaw&lt;T&gt; (System.Runtime.InteropServices.VarEnum vt, T rawValue) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.InteropServices.Marshalling.ComVariant CreateRaw&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.InteropServices.VarEnum vt, !!T rawValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.ComVariant.CreateRaw``1(System.Runtime.InteropServices.VarEnum,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateRaw(Of T As Structure) (vt As VarEnum, rawValue As T) As ComVariant" />
      <MemberSignature Language="F#" Value="static member CreateRaw : System.Runtime.InteropServices.VarEnum * 'T -&gt; System.Runtime.InteropServices.Marshalling.ComVariant (requires 'T : struct)" Usage="System.Runtime.InteropServices.Marshalling.ComVariant.CreateRaw (vt, rawValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::InteropServices::Marshalling::ComVariant CreateRaw(System::Runtime::InteropServices::VarEnum vt, T rawValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.Marshalling.ComVariant</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsUnmanaged]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsUnmanaged&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vt" Type="System.Runtime.InteropServices.VarEnum" />
        <Parameter Name="rawValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the value to store in the variant.</typeparam>
        <param name="vt">The type of the variant</param>
        <param name="rawValue">The raw value to store in the variant without any processing</param>
        <summary>Create a <see cref="T:System.Runtime.InteropServices.Marshalling.ComVariant" /> with the given type and provided value.</summary>
        <returns>A variant that contains the provided value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">When the provided <paramref name="vt" /> corresponds to a variant type that is not supported in VARIANTs or is <see cref="F:System.Runtime.InteropServices.VarEnum.VT_DECIMAL" /></exception>
        <exception cref="T:System.PlatformNotSupportedException">When the provided <paramref name="vt" /> specifies the <see cref="F:System.Runtime.InteropServices.VarEnum.VT_ARRAY" /> flag for SAFEARRAYs.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.ComVariant.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="comVariant.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Release resources owned by this <see cref="T:System.Runtime.InteropServices.Marshalling.ComVariant" /> instance.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRawDataRef&lt;T&gt;">
      <MemberSignature Language="C#" Value="public ref T GetRawDataRef&lt;T&gt; () where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetRawDataRef&lt;struct .ctor (class System.ValueType) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.ComVariant.GetRawDataRef``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRawDataRef(Of T As Structure) () As T" />
      <MemberSignature Language="F#" Value="member this.GetRawDataRef : unit -&gt; 'T (requires 'T : struct)" Usage="comVariant.GetRawDataRef " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class T % GetRawDataRef();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.UnscopedRef]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.UnscopedRef&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsUnmanaged]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsUnmanaged&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of reference to return.</typeparam>
        <summary>Get a reference to the storage location within this <see cref="T:System.Runtime.InteropServices.Marshalling.ComVariant" /> instance.</summary>
        <returns>A reference to the storage location within this <see cref="T:System.Runtime.InteropServices.Marshalling.ComVariant" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <typeparamref name="T" /> is <see cref="T:System.Decimal" /> or larger than the storage space in an <see cref="T:System.Runtime.InteropServices.Marshalling.ComVariant" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.Marshalling.ComVariant Null { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.InteropServices.Marshalling.ComVariant Null" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.Marshalling.ComVariant.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Null As ComVariant" />
      <MemberSignature Language="F#" Value="static member Null : System.Runtime.InteropServices.Marshalling.ComVariant" Usage="System.Runtime.InteropServices.Marshalling.ComVariant.Null" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::InteropServices::Marshalling::ComVariant Null { System::Runtime::InteropServices::Marshalling::ComVariant get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.Marshalling.ComVariant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.Runtime.InteropServices.Marshalling.ComVariant" /> instance that represents a <see langword="null" /> value with <see cref="F:System.Runtime.InteropServices.VarEnum.VT_NULL" /> type.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VarType">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.VarEnum VarType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.VarEnum VarType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.Marshalling.ComVariant.VarType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VarType As VarEnum" />
      <MemberSignature Language="F#" Value="member this.VarType : System.Runtime.InteropServices.VarEnum" Usage="System.Runtime.InteropServices.Marshalling.ComVariant.VarType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::VarEnum VarType { System::Runtime::InteropServices::VarEnum get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.VarEnum</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The type of the data stored in this <see cref="T:System.Runtime.InteropServices.Marshalling.ComVariant" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

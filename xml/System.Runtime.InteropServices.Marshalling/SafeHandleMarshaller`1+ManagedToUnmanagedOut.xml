<Type Name="SafeHandleMarshaller&lt;T&gt;+ManagedToUnmanagedOut" FullName="System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller&lt;T&gt;+ManagedToUnmanagedOut">
  <TypeSignature Language="C#" Value="public struct SafeHandleMarshaller&lt;T&gt;.ManagedToUnmanagedOut where T : SafeHandle" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit SafeHandleMarshaller`1/ManagedToUnmanagedOut&lt;(class System.Runtime.InteropServices.SafeHandle) T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller`1.ManagedToUnmanagedOut" />
  <TypeSignature Language="VB.NET" Value="Public Structure SafeHandleMarshaller(Of T).ManagedToUnmanagedOut" />
  <TypeSignature Language="F#" Value="type SafeHandleMarshaller&lt;'T (requires 'T :&gt; SafeHandle)&gt;.ManagedToUnmanagedOut = struct" />
  <TypeSignature Language="C++ CLI" Value="public:  where T : SafeHandlevalue class SafeHandleMarshaller&lt;T&gt;::ManagedToUnmanagedOut" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Constraints>
        <BaseTypeName>System.Runtime.InteropServices.SafeHandle</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Marshals a <see cref="T:System.Runtime.InteropServices.SafeHandle" /> as its underlying handle value as an <see langword="out" /> parameter in managed-to-unmanaged scenarios like P/Invokes.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagedToUnmanagedOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller`1.ManagedToUnmanagedOut.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagedToUnmanagedOut();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of <see cref="T:System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller`1.ManagedToUnmanagedOut" /> in a default state.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Free">
      <MemberSignature Language="C#" Value="public void Free ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Free() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller`1.ManagedToUnmanagedOut.Free" />
      <MemberSignature Language="VB.NET" Value="Public Sub Free ()" />
      <MemberSignature Language="F#" Value="member this.Free : unit -&gt; unit" Usage="managedToUnmanagedOut.Free " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Free();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Frees any resources and reference counts owned by the marshaller.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromUnmanaged">
      <MemberSignature Language="C#" Value="public void FromUnmanaged (IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromUnmanaged(native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller`1.ManagedToUnmanagedOut.FromUnmanaged(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromUnmanaged (value As IntPtr)" />
      <MemberSignature Language="F#" Value="member this.FromUnmanaged : nativeint -&gt; unit" Usage="managedToUnmanagedOut.FromUnmanaged value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FromUnmanaged(IntPtr value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="value">The unmanaged handle.</param>
        <summary>Initializes the marshaller from an unmanaged handle.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToManaged">
      <MemberSignature Language="C#" Value="public T ToManaged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T ToManaged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller`1.ManagedToUnmanagedOut.ToManaged" />
      <MemberSignature Language="VB.NET" Value="Public Function ToManaged () As T" />
      <MemberSignature Language="F#" Value="member this.ToManaged : unit -&gt; 'T" Usage="managedToUnmanagedOut.ToManaged " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T ToManaged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the managed handle from the marshaller.</summary>
        <returns>The managed handle.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="IIUnknownInterfaceType" FullName="System.Runtime.InteropServices.Marshalling.IIUnknownInterfaceType">
  <TypeSignature Language="C#" Value="public interface IIUnknownInterfaceType" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IIUnknownInterfaceType" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.Marshalling.IIUnknownInterfaceType" />
  <TypeSignature Language="VB.NET" Value="Public Interface IIUnknownInterfaceType" />
  <TypeSignature Language="F#" Value="type IIUnknownInterfaceType = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IIUnknownInterfaceType" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines type-level information for an IUnknown-derived interface.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Iid">
      <MemberSignature Language="C#" Value="public static abstract Guid Iid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid Iid" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.Marshalling.IIUnknownInterfaceType.Iid" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Iid As Guid" />
      <MemberSignature Language="F#" Value="static member Iid : Guid" Usage="System.Runtime.InteropServices.Marshalling.IIUnknownInterfaceType.Iid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid Iid { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the interface ID (IID) for the interface.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedVirtualMethodTable">
      <MemberSignature Language="C#" Value="public static abstract void** ManagedVirtualMethodTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property void** ManagedVirtualMethodTable" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.Marshalling.IIUnknownInterfaceType.ManagedVirtualMethodTable" />
      <MemberSignature Language="F#" Value="static member ManagedVirtualMethodTable : nativeptr&lt;nativeptr&lt;unit&gt;&gt;" Usage="System.Runtime.InteropServices.Marshalling.IIUnknownInterfaceType.ManagedVirtualMethodTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property void** ManagedVirtualMethodTable { void** get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void**</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a pointer to the virtual method table to enable unmanaged callers to call a managed implementation of the interface.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

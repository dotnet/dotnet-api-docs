<Type Name="ComVariantMarshaller+RefPropagate" FullName="System.Runtime.InteropServices.Marshalling.ComVariantMarshaller+RefPropagate">
  <TypeSignature Language="C#" Value="public struct ComVariantMarshaller.RefPropagate" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit ComVariantMarshaller/RefPropagate extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.Marshalling.ComVariantMarshaller.RefPropagate" />
  <TypeSignature Language="VB.NET" Value="Public Structure ComVariantMarshaller.RefPropagate" />
  <TypeSignature Language="F#" Value="type ComVariantMarshaller.RefPropagate = struct" />
  <TypeSignature Language="C++ CLI" Value="public: value class ComVariantMarshaller::RefPropagate" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Marshals a <see cref="T:System.Object" /> to an <see cref="T:System.Runtime.InteropServices.Marshalling.ComVariant" />, propagating the value of the <see cref="T:System.Object" /> back to the variant's existing data storage if the variant has <see cref="F:System.Runtime.InteropServices.VarEnum.VT_BYREF" /> type.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Free">
      <MemberSignature Language="C#" Value="public void Free ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Free() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.ComVariantMarshaller.RefPropagate.Free" />
      <MemberSignature Language="VB.NET" Value="Public Sub Free ()" />
      <MemberSignature Language="F#" Value="member this.Free : unit -&gt; unit" Usage="refPropagate.Free " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Free();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Free all resources owned by the marshaller.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromManaged">
      <MemberSignature Language="C#" Value="public void FromManaged (object managed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromManaged(object managed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.ComVariantMarshaller.RefPropagate.FromManaged(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromManaged (managed As Object)" />
      <MemberSignature Language="F#" Value="member this.FromManaged : obj -&gt; unit" Usage="refPropagate.FromManaged managed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FromManaged(System::Object ^ managed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managed" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="managed">The managed object.</param>
        <summary>Initializes the marshaller with a managed object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromUnmanaged">
      <MemberSignature Language="C#" Value="public void FromUnmanaged (System.Runtime.InteropServices.Marshalling.ComVariant unmanaged);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromUnmanaged(valuetype System.Runtime.InteropServices.Marshalling.ComVariant unmanaged) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.ComVariantMarshaller.RefPropagate.FromUnmanaged(System.Runtime.InteropServices.Marshalling.ComVariant)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromUnmanaged (unmanaged As ComVariant)" />
      <MemberSignature Language="F#" Value="member this.FromUnmanaged : System.Runtime.InteropServices.Marshalling.ComVariant -&gt; unit" Usage="refPropagate.FromUnmanaged unmanaged" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FromUnmanaged(System::Runtime::InteropServices::Marshalling::ComVariant unmanaged);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanaged" Type="System.Runtime.InteropServices.Marshalling.ComVariant" />
      </Parameters>
      <Docs>
        <param name="unmanaged">The unmanaged value</param>
        <summary>Initializes the marshaller with an unmanaged variant.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToManaged">
      <MemberSignature Language="C#" Value="public object ToManaged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ToManaged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.ComVariantMarshaller.RefPropagate.ToManaged" />
      <MemberSignature Language="VB.NET" Value="Public Function ToManaged () As Object" />
      <MemberSignature Language="F#" Value="member this.ToManaged : unit -&gt; obj" Usage="refPropagate.ToManaged " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ToManaged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Create the managed value based on the provided unmanaged value.</summary>
        <returns>The managed value corresponding to the VARIANT.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUnmanaged">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.Marshalling.ComVariant ToUnmanaged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.InteropServices.Marshalling.ComVariant ToUnmanaged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.ComVariantMarshaller.RefPropagate.ToUnmanaged" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUnmanaged () As ComVariant" />
      <MemberSignature Language="F#" Value="member this.ToUnmanaged : unit -&gt; System.Runtime.InteropServices.Marshalling.ComVariant" Usage="refPropagate.ToUnmanaged " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::InteropServices::Marshalling::ComVariant ToUnmanaged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.Marshalling.ComVariant</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Create an unmanaged <see cref="T:System.Runtime.InteropServices.Marshalling.ComVariant" /> based on the provided managed and unmanaged values.</summary>
        <returns>An <see cref="T:System.Runtime.InteropServices.Marshalling.ComVariant" /> instance representing the marshaller's current state.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">When the managed value must be propagated back to the unmanaged variant, but the managed value type cannot be converted to the variant's type.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

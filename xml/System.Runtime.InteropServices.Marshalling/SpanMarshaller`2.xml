<Type Name="SpanMarshaller&lt;T,TUnmanagedElement&gt;" FullName="System.Runtime.InteropServices.Marshalling.SpanMarshaller&lt;T,TUnmanagedElement&gt;">
  <TypeSignature Language="C#" Value="public static class SpanMarshaller&lt;T,TUnmanagedElement&gt; where TUnmanagedElement : struct" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SpanMarshaller`2&lt;T, struct .ctor (class System.ValueType) TUnmanagedElement&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2" />
  <TypeSignature Language="VB.NET" Value="Public Class SpanMarshaller(Of T, TUnmanagedElement)" />
  <TypeSignature Language="F#" Value="type SpanMarshaller&lt;'T, 'UnmanagedElement (requires 'UnmanagedElement : struct)&gt; = class" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T, typename TUnmanagedElement&gt;&#xA; where TUnmanagedElement : value classpublic ref class SpanMarshaller abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
    <TypeParameter Name="TUnmanagedElement">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Marshalling.ContiguousCollectionMarshaller]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Marshalling.ContiguousCollectionMarshaller&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Marshalling.CustomMarshaller(typeof(System.Span&lt;&gt;), System.Runtime.InteropServices.Marshalling.MarshalMode.Default, typeof(System.Runtime.InteropServices.Marshalling.SpanMarshaller&lt;,&gt;))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Marshalling.CustomMarshaller(typeof(System.Span&lt;&gt;), System.Runtime.InteropServices.Marshalling.MarshalMode.Default, typeof(System.Runtime.InteropServices.Marshalling.SpanMarshaller&lt;,&gt;))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Marshalling.CustomMarshaller(typeof(System.Span&lt;&gt;), System.Runtime.InteropServices.Marshalling.MarshalMode.ManagedToUnmanagedIn, typeof(System.Runtime.InteropServices.Marshalling.SpanMarshaller&lt;,&gt;+ManagedToUnmanagedIn))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Marshalling.CustomMarshaller(typeof(System.Span&lt;&gt;), System.Runtime.InteropServices.Marshalling.MarshalMode.ManagedToUnmanagedIn, typeof(System.Runtime.InteropServices.Marshalling.SpanMarshaller&lt;,&gt;+ManagedToUnmanagedIn))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">The managed element type of the span.</typeparam>
    <typeparam name="TUnmanagedElement">The unmanaged type for the elements of the span.</typeparam>
    <summary>Supports marshalling a <see cref="T:System.Span`1" /> from managed value to a contiguous native array of the unmanaged values of the elements.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

A <xref:System.Span%601> marshalled with this marshaller will match the semantics of <xref:System.Runtime.InteropServices.MemoryMarshal.GetReference%60%601(System.Span{%60%600})>.
            In particular, this marshaller will pass a non-`null` value for a zero-length span if the span was constructed with a non-`null` value.

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllocateContainerForManagedElements">
      <MemberSignature Language="C#" Value="public static Span&lt;T&gt; AllocateContainerForManagedElements (TUnmanagedElement* unmanaged, int numElements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Span`1&lt;!T&gt; AllocateContainerForManagedElements(!TUnmanagedElement* unmanaged, int32 numElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2.AllocateContainerForManagedElements(`1*,System.Int32)" />
      <MemberSignature Language="F#" Value="static member AllocateContainerForManagedElements : nativeptr&lt;'UnmanagedElement&gt; * int -&gt; Span&lt;'T&gt;" Usage="System.Runtime.InteropServices.Marshalling.SpanMarshaller&lt;'T, 'UnmanagedElement (requires 'UnmanagedElement : struct)&gt;.AllocateContainerForManagedElements (unmanaged, numElements)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Span&lt;T&gt; AllocateContainerForManagedElements(TUnmanagedElement* unmanaged, int numElements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Span&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanaged" Type="TUnmanagedElement*" />
        <Parameter Name="numElements" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unmanaged">The unmanaged value.</param>
        <param name="numElements">The number of elements in the unmanaged collection.</param>
        <summary>Allocates space to store the managed elements.</summary>
        <returns>A span over enough memory to contain <paramref name="numElements" /> elements.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateContainerForUnmanagedElements">
      <MemberSignature Language="C#" Value="public static TUnmanagedElement* AllocateContainerForUnmanagedElements (Span&lt;T&gt; managed, out int numElements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TUnmanagedElement* AllocateContainerForUnmanagedElements(valuetype System.Span`1&lt;!T&gt; managed, [out] int32&amp; numElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2.AllocateContainerForUnmanagedElements(System.Span{`0},System.Int32@)" />
      <MemberSignature Language="F#" Value="static member AllocateContainerForUnmanagedElements : Span&lt;'T&gt; * int -&gt; nativeptr&lt;'UnmanagedElement&gt;" Usage="System.Runtime.InteropServices.Marshalling.SpanMarshaller&lt;'T, 'UnmanagedElement (requires 'UnmanagedElement : struct)&gt;.AllocateContainerForUnmanagedElements (managed, numElements)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TUnmanagedElement* AllocateContainerForUnmanagedElements(Span&lt;T&gt; managed, [Runtime::InteropServices::Out] int % numElements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TUnmanagedElement*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managed" Type="System.Span&lt;T&gt;" />
        <Parameter Name="numElements" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="managed">The managed span.</param>
        <param name="numElements">The number of elements in the span.</param>
        <summary>Allocates the space to store the unmanaged elements.</summary>
        <returns>A pointer to the block of memory for the unmanaged elements.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Free">
      <MemberSignature Language="C#" Value="public static void Free (TUnmanagedElement* unmanaged);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Free(!TUnmanagedElement* unmanaged) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2.Free(`1*)" />
      <MemberSignature Language="F#" Value="static member Free : nativeptr&lt;'UnmanagedElement&gt; -&gt; unit" Usage="System.Runtime.InteropServices.Marshalling.SpanMarshaller&lt;'T, 'UnmanagedElement (requires 'UnmanagedElement : struct)&gt;.Free unmanaged" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Free(TUnmanagedElement* unmanaged);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanaged" Type="TUnmanagedElement*" />
      </Parameters>
      <Docs>
        <param name="unmanaged">A pointer to the allocated unmanaged memory.</param>
        <summary>Frees the allocated unmanaged memory.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedValuesDestination">
      <MemberSignature Language="C#" Value="public static Span&lt;T&gt; GetManagedValuesDestination (Span&lt;T&gt; managed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Span`1&lt;!T&gt; GetManagedValuesDestination(valuetype System.Span`1&lt;!T&gt; managed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2.GetManagedValuesDestination(System.Span{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManagedValuesDestination (managed As Span(Of T)) As Span(Of T)" />
      <MemberSignature Language="F#" Value="static member GetManagedValuesDestination : Span&lt;'T&gt; -&gt; Span&lt;'T&gt;" Usage="System.Runtime.InteropServices.Marshalling.SpanMarshaller&lt;'T, 'UnmanagedElement (requires 'UnmanagedElement : struct)&gt;.GetManagedValuesDestination managed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Span&lt;T&gt; GetManagedValuesDestination(Span&lt;T&gt; managed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Span&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managed" Type="System.Span&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="managed">A span over the space to store the managed elements.</param>
        <summary>Gets a span of the space where the managed collection elements should be stored.</summary>
        <returns>A span over the managed memory that can contain the specified number of elements.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedValuesSource">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;T&gt; GetManagedValuesSource (Span&lt;T&gt; managed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;!T&gt; GetManagedValuesSource(valuetype System.Span`1&lt;!T&gt; managed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2.GetManagedValuesSource(System.Span{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManagedValuesSource (managed As Span(Of T)) As ReadOnlySpan(Of T)" />
      <MemberSignature Language="F#" Value="static member GetManagedValuesSource : Span&lt;'T&gt; -&gt; ReadOnlySpan&lt;'T&gt;" Usage="System.Runtime.InteropServices.Marshalling.SpanMarshaller&lt;'T, 'UnmanagedElement (requires 'UnmanagedElement : struct)&gt;.GetManagedValuesSource managed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;T&gt; GetManagedValuesSource(Span&lt;T&gt; managed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managed" Type="System.Span&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="managed">The managed collection.</param>
        <summary>Gets a span of the managed collection elements.</summary>
        <returns>A span of the managed collection elements.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnmanagedValuesDestination">
      <MemberSignature Language="C#" Value="public static Span&lt;TUnmanagedElement&gt; GetUnmanagedValuesDestination (TUnmanagedElement* unmanaged, int numElements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Span`1&lt;!TUnmanagedElement&gt; GetUnmanagedValuesDestination(!TUnmanagedElement* unmanaged, int32 numElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2.GetUnmanagedValuesDestination(`1*,System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetUnmanagedValuesDestination : nativeptr&lt;'UnmanagedElement&gt; * int -&gt; Span&lt;'UnmanagedElement (requires 'UnmanagedElement : struct)&gt;" Usage="System.Runtime.InteropServices.Marshalling.SpanMarshaller&lt;'T, 'UnmanagedElement (requires 'UnmanagedElement : struct)&gt;.GetUnmanagedValuesDestination (unmanaged, numElements)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Span&lt;TUnmanagedElement&gt; GetUnmanagedValuesDestination(TUnmanagedElement* unmanaged, int numElements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Span&lt;TUnmanagedElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanaged" Type="TUnmanagedElement*" />
        <Parameter Name="numElements" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unmanaged">The pointer to the block of memory for the unmanaged elements.</param>
        <param name="numElements">The number of elements that will be copied into the memory block.</param>
        <summary>Gets a span of the space where the unmanaged collection elements should be stored.</summary>
        <returns>A span over the unmanaged memory that can contain the specified number of elements.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnmanagedValuesSource">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;TUnmanagedElement&gt; GetUnmanagedValuesSource (TUnmanagedElement* unmanaged, int numElements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;!TUnmanagedElement&gt; GetUnmanagedValuesSource(!TUnmanagedElement* unmanaged, int32 numElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2.GetUnmanagedValuesSource(`1*,System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetUnmanagedValuesSource : nativeptr&lt;'UnmanagedElement&gt; * int -&gt; ReadOnlySpan&lt;'UnmanagedElement (requires 'UnmanagedElement : struct)&gt;" Usage="System.Runtime.InteropServices.Marshalling.SpanMarshaller&lt;'T, 'UnmanagedElement (requires 'UnmanagedElement : struct)&gt;.GetUnmanagedValuesSource (unmanaged, numElements)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;TUnmanagedElement&gt; GetUnmanagedValuesSource(TUnmanagedElement* unmanaged, int numElements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;TUnmanagedElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanaged" Type="TUnmanagedElement*" />
        <Parameter Name="numElements" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unmanaged">The unmanaged value.</param>
        <param name="numElements">The number of elements in the unmanaged collection.</param>
        <summary>Gets a span of the native collection elements.</summary>
        <returns>A span over the native collection elements.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

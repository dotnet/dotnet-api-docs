<Type Name="ExceptionAsVoidMarshaller" FullName="System.Runtime.InteropServices.Marshalling.ExceptionAsVoidMarshaller">
  <TypeSignature Language="C#" Value="public static class ExceptionAsVoidMarshaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ExceptionAsVoidMarshaller extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.Marshalling.ExceptionAsVoidMarshaller" />
  <TypeSignature Language="VB.NET" Value="Public Class ExceptionAsVoidMarshaller" />
  <TypeSignature Language="F#" Value="type ExceptionAsVoidMarshaller = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExceptionAsVoidMarshaller abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Marshalling.CustomMarshaller(typeof(System.Exception), System.Runtime.InteropServices.Marshalling.MarshalMode.UnmanagedToManagedOut, typeof(System.Runtime.InteropServices.Marshalling.ExceptionAsVoidMarshaller))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Marshalling.CustomMarshaller(typeof(System.Exception), System.Runtime.InteropServices.Marshalling.MarshalMode.UnmanagedToManagedOut, typeof(System.Runtime.InteropServices.Marshalling.ExceptionAsVoidMarshaller))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a marshaller that swallows exceptions.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ConvertToUnmanaged">
      <MemberSignature Language="C#" Value="public static void ConvertToUnmanaged (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertToUnmanaged(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshalling.ExceptionAsVoidMarshaller.ConvertToUnmanaged(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertToUnmanaged (e As Exception)" />
      <MemberSignature Language="F#" Value="static member ConvertToUnmanaged : Exception -&gt; unit" Usage="System.Runtime.InteropServices.Marshalling.ExceptionAsVoidMarshaller.ConvertToUnmanaged e" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertToUnmanaged(Exception ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">The exception.</param>
        <summary>Swallows the specified exception and returns nothing.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="QuicListenerOptions" FullName="System.Net.Quic.QuicListenerOptions">
  <TypeSignature Language="C#" Value="public sealed class QuicListenerOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit QuicListenerOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Quic.QuicListenerOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class QuicListenerOptions" />
  <TypeSignature Language="F#" Value="type QuicListenerOptions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class QuicListenerOptions sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Quic</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Options to provide to a <see cref="T:System.Net.Quic.QuicListener" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuicListenerOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Quic.QuicListenerOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QuicListenerOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Quic</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new instance of the <see cref="T:System.Net.Quic.QuicListenerOptions" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationProtocols">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Net.Security.SslApplicationProtocol&gt; ApplicationProtocols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;valuetype System.Net.Security.SslApplicationProtocol&gt; ApplicationProtocols" />
      <MemberSignature Language="DocId" Value="P:System.Net.Quic.QuicListenerOptions.ApplicationProtocols" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationProtocols As List(Of SslApplicationProtocol)" />
      <MemberSignature Language="F#" Value="member this.ApplicationProtocols : System.Collections.Generic.List&lt;System.Net.Security.SslApplicationProtocol&gt; with get, set" Usage="System.Net.Quic.QuicListenerOptions.ApplicationProtocols" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::Net::Security::SslApplicationProtocol&gt; ^ ApplicationProtocols { System::Collections::Generic::List&lt;System::Net::Security::SslApplicationProtocol&gt; ^ get(); void set(System::Collections::Generic::List&lt;System::Net::Security::SslApplicationProtocol&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Quic</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Net.Security.SslApplicationProtocol&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the list of application protocols that the listener will accept. At least one must be specified.</summary>
        <value>To be added.</value>
        <remarks>This property is mandatory, and not setting it will result in validation errors when starting the listener.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionOptionsCallback">
      <MemberSignature Language="C#" Value="public Func&lt;System.Net.Quic.QuicConnection,System.Net.Security.SslClientHelloInfo,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask&lt;System.Net.Quic.QuicServerConnectionOptions&gt;&gt; ConnectionOptionsCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`4&lt;class System.Net.Quic.QuicConnection, valuetype System.Net.Security.SslClientHelloInfo, valuetype System.Threading.CancellationToken, valuetype System.Threading.Tasks.ValueTask`1&lt;class System.Net.Quic.QuicServerConnectionOptions&gt;&gt; ConnectionOptionsCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Quic.QuicListenerOptions.ConnectionOptionsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionOptionsCallback As Func(Of QuicConnection, SslClientHelloInfo, CancellationToken, ValueTask(Of QuicServerConnectionOptions))" />
      <MemberSignature Language="F#" Value="member this.ConnectionOptionsCallback : Func&lt;System.Net.Quic.QuicConnection, System.Net.Security.SslClientHelloInfo, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask&lt;System.Net.Quic.QuicServerConnectionOptions&gt;&gt; with get, set" Usage="System.Net.Quic.QuicListenerOptions.ConnectionOptionsCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Net::Quic::QuicConnection ^, System::Net::Security::SslClientHelloInfo, System::Threading::CancellationToken, System::Threading::Tasks::ValueTask&lt;System::Net::Quic::QuicServerConnectionOptions ^&gt;&gt; ^ ConnectionOptionsCallback { Func&lt;System::Net::Quic::QuicConnection ^, System::Net::Security::SslClientHelloInfo, System::Threading::CancellationToken, System::Threading::Tasks::ValueTask&lt;System::Net::Quic::QuicServerConnectionOptions ^&gt;&gt; ^ get(); void set(Func&lt;System::Net::Quic::QuicConnection ^, System::Net::Security::SslClientHelloInfo, System::Threading::CancellationToken, System::Threading::Tasks::ValueTask&lt;System::Net::Quic::QuicServerConnectionOptions ^&gt;&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Quic</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Net.Quic.QuicConnection,System.Net.Security.SslClientHelloInfo,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask&lt;System.Net.Quic.QuicServerConnectionOptions&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the selection callback to choose inbound connection options dynamically.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListenBacklog">
      <MemberSignature Language="C#" Value="public int ListenBacklog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ListenBacklog" />
      <MemberSignature Language="DocId" Value="P:System.Net.Quic.QuicListenerOptions.ListenBacklog" />
      <MemberSignature Language="VB.NET" Value="Public Property ListenBacklog As Integer" />
      <MemberSignature Language="F#" Value="member this.ListenBacklog : int with get, set" Usage="System.Net.Quic.QuicListenerOptions.ListenBacklog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ListenBacklog { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Quic</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the number of connections to be held without accepting any of them, that is, the maximum size of the pending connection queue.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListenEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint ListenEndPoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint ListenEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Quic.QuicListenerOptions.ListenEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public Property ListenEndPoint As IPEndPoint" />
      <MemberSignature Language="F#" Value="member this.ListenEndPoint : System.Net.IPEndPoint with get, set" Usage="System.Net.Quic.QuicListenerOptions.ListenEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ ListenEndPoint { System::Net::IPEndPoint ^ get(); void set(System::Net::IPEndPoint ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Quic</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the endpoint to listen on.</summary>
        <value>To be added.</value>
        <remarks>This property is mandatory, and not setting it will result in validation errors when starting the listener.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

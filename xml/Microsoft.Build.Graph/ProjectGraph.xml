<Type Name="ProjectGraph" FullName="Microsoft.Build.Graph.ProjectGraph">
  <TypeSignature Language="C#" Value="public sealed class ProjectGraph" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProjectGraph extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Graph.ProjectGraph" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProjectGraph" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectGraph sealed" />
  <TypeSignature Language="F#" Value="type ProjectGraph = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("#roots={GraphRoots.Count}, #nodes={ProjectNodes.Count}, #entryPoints={EntryPointNodes.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                Represents a graph of evaluated projects.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (Microsoft.Build.Graph.ProjectGraphEntryPoint entryPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.Build.Graph.ProjectGraphEntryPoint entryPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(Microsoft.Build.Graph.ProjectGraphEntryPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryPoint As ProjectGraphEntryPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(Microsoft::Build::Graph::ProjectGraphEntryPoint entryPoint);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : Microsoft.Build.Graph.ProjectGraphEntryPoint -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph entryPoint" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryPoint" Type="Microsoft.Build.Graph.ProjectGraphEntryPoint" />
      </Parameters>
      <Docs>
        <param name="entryPoint">The entry point to use in constructing the graph</param>
        <summary>
                Constructs a graph starting from the given graph entry point, evaluating with the global project collection.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException">
                If the evaluation of any project in the graph fails
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; entryPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; entryPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Build.Graph.ProjectGraphEntryPoint})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryPoints As IEnumerable(Of ProjectGraphEntryPoint))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Graph::ProjectGraphEntryPoint&gt; ^ entryPoints);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : seq&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph entryPoints" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryPoints" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt;" />
      </Parameters>
      <Docs>
        <param name="entryPoints">The entry points to use in constructing the graph</param>
        <summary>
                Constructs a graph starting from the given graph entry points, evaluating with the global project collection.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException">
                If the evaluation of any project in the graph fails
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (System.Collections.Generic.IEnumerable&lt;string&gt; entryProjectFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; entryProjectFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryProjectFiles As IEnumerable(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ entryProjectFiles);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : seq&lt;string&gt; -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph entryProjectFiles" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryProjectFiles" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="entryProjectFiles">The project files to use as the entry points in constructing the graph</param>
        <summary>
                Constructs a graph starting from the given project files, evaluating with the global project collection and no
                global properties.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException">
                If the evaluation of any project in the graph fails
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (string entryProjectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string entryProjectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryProjectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::String ^ entryProjectFile);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : string -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph entryProjectFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryProjectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entryProjectFile">The project file to use as the entry point in constructing the graph</param>
        <summary>
                Constructs a graph starting from the given project file, evaluating with the global project collection and no
                global properties.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException">
                If the evaluation of any project in the graph fails
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (Microsoft.Build.Graph.ProjectGraphEntryPoint entryPoint, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.Build.Graph.ProjectGraphEntryPoint entryPoint, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(Microsoft.Build.Graph.ProjectGraphEntryPoint,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryPoint As ProjectGraphEntryPoint, projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(Microsoft::Build::Graph::ProjectGraphEntryPoint entryPoint, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : Microsoft.Build.Graph.ProjectGraphEntryPoint * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryPoint, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryPoint" Type="Microsoft.Build.Graph.ProjectGraphEntryPoint" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="entryPoint">The entry point to use in constructing the graph</param>
        <param name="projectCollection">
                The collection with which all projects in the graph should be associated. May not be
                null.
            </param>
        <summary>
                Constructs a graph starting from the given graph entry point, evaluating with the provided project collection.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException">
                If the evaluation of any project in the graph fails
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (System.Collections.Generic.IEnumerable&lt;string&gt; entryProjectFiles, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; entryProjectFiles, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.Collections.Generic.IEnumerable{System.String},Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryProjectFiles As IEnumerable(Of String), projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ entryProjectFiles, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : seq&lt;string&gt; * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryProjectFiles, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryProjectFiles" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="entryProjectFiles">The project files to use as the entry points in constructing the graph</param>
        <param name="projectCollection">
                The collection with which all projects in the graph should be associated. May not be
                null.
            </param>
        <summary>
                Constructs a graph starting from the given project files, evaluating with the provided project collection and no
                global properties.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException">
                If the evaluation of any project in the graph fails
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (System.Collections.Generic.IEnumerable&lt;string&gt; entryProjectFiles, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; entryProjectFiles, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryProjectFiles As IEnumerable(Of String), globalProperties As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ entryProjectFiles, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : seq&lt;string&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryProjectFiles, globalProperties)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryProjectFiles" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="entryProjectFiles">The project files to use as the entry points in constructing the graph</param>
        <param name="globalProperties">
                The global properties to use for all projects. May be null, in which case no global
                properties will be set.
            </param>
        <summary>
                Constructs a graph starting from the given project files, evaluating with the provided global properties and the
                global project collection.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException">
                If the evaluation of any project in the graph fails
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (string entryProjectFile, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string entryProjectFile, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryProjectFile As String, projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::String ^ entryProjectFile, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryProjectFile, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryProjectFile" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="entryProjectFile">The project file to use as the entry point in constructing the graph</param>
        <param name="projectCollection">
                The collection with which all projects in the graph should be associated. May not be
                null.
            </param>
        <summary>
                Constructs a graph starting from the given project file, evaluating with the provided project collection and no
                global properties.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException">
                If the evaluation of any project in the graph fails
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (string entryProjectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string entryProjectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryProjectFile As String, globalProperties As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::String ^ entryProjectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryProjectFile, globalProperties)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryProjectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="entryProjectFile">The project file to use as the entry point in constructing the graph</param>
        <param name="globalProperties">
                The global properties to use for all projects. May be null, in which case no global
                properties will be set.
            </param>
        <summary>
                Constructs a graph starting from the given project file, evaluating with the provided global properties and the
                global project collection.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException">
                If the evaluation of any project in the graph fails
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; entryPoints, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc projectInstanceFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; entryPoints, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, class Microsoft.Build.Graph.ProjectGraph/ProjectInstanceFactoryFunc projectInstanceFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Build.Graph.ProjectGraphEntryPoint},Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryPoints As IEnumerable(Of ProjectGraphEntryPoint), projectCollection As ProjectCollection, projectInstanceFactory As ProjectGraph.ProjectInstanceFactoryFunc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Graph::ProjectGraphEntryPoint&gt; ^ entryPoints, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Graph::ProjectGraph::ProjectInstanceFactoryFunc ^ projectInstanceFactory);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : seq&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryPoints, projectCollection, projectInstanceFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryPoints" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt;" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="projectInstanceFactory" Type="Microsoft.Build.Graph.ProjectGraph+ProjectInstanceFactoryFunc" />
      </Parameters>
      <Docs>
        <param name="entryPoints">The entry points to use in constructing the graph</param>
        <param name="projectCollection">
                The collection with which all projects in the graph should be associated. May not be
                null.
            </param>
        <param name="projectInstanceFactory">
                A delegate used for constructing a <see cref="T:Microsoft.Build.Execution.ProjectInstance" />, called for each
                project created during graph creation. This value can be null, which uses
                a default implementation that calls the ProjectInstance constructor. See the remarks
                on <see cref="T:Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc" /> for other scenarios.
            </param>
        <summary>
                Constructs a graph starting from the given graph entry points, evaluating with the provided project collection.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException">
                If the evaluation of any project in the graph fails
            </exception>
        <exception cref="T:System.InvalidOperationException">
                If a null reference is returned from <paramref name="projectInstanceFactory" /></exception>
        <exception cref="T:Microsoft.Build.BackEnd.CircularDependencyException">
                If the evaluation is successful but the project graph contains a circular
                dependency
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (System.Collections.Generic.IEnumerable&lt;string&gt; entryProjectFiles, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; entryProjectFiles, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryProjectFiles As IEnumerable(Of String), globalProperties As IDictionary(Of String, String), projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ entryProjectFiles, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : seq&lt;string&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryProjectFiles, globalProperties, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryProjectFiles" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="entryProjectFiles">The project files to use as the entry points in constructing the graph</param>
        <param name="globalProperties">
                The global properties to use for all projects. May be null, in which case no global
                properties will be set.
            </param>
        <param name="projectCollection">
                The collection with which all projects in the graph should be associated. May not be
                null.
            </param>
        <summary>
                Constructs a graph starting from the given project files, evaluating with the provided global properties and the
                provided project collection.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException">
                If the evaluation of any project in the graph fails
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (string entryProjectFile, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc projectInstanceFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string entryProjectFile, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, class Microsoft.Build.Graph.ProjectGraph/ProjectInstanceFactoryFunc projectInstanceFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryProjectFile As String, projectCollection As ProjectCollection, projectInstanceFactory As ProjectGraph.ProjectInstanceFactoryFunc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::String ^ entryProjectFile, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Graph::ProjectGraph::ProjectInstanceFactoryFunc ^ projectInstanceFactory);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryProjectFile, projectCollection, projectInstanceFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryProjectFile" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="projectInstanceFactory" Type="Microsoft.Build.Graph.ProjectGraph+ProjectInstanceFactoryFunc" />
      </Parameters>
      <Docs>
        <param name="entryProjectFile">To be added.</param>
        <param name="projectCollection">To be added.</param>
        <param name="projectInstanceFactory">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (string entryProjectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string entryProjectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryProjectFile As String, globalProperties As IDictionary(Of String, String), projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::String ^ entryProjectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryProjectFile, globalProperties, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryProjectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="entryProjectFile">The project file to use as the entry point in constructing the graph</param>
        <param name="globalProperties">
                The global properties to use for all projects. May be null, in which case no global
                properties will be set.
            </param>
        <param name="projectCollection">
                The collection with which all projects in the graph should be associated. May not be
                null.
            </param>
        <summary>
                Constructs a graph starting from the given project file, evaluating with the provided global properties and the
                provided project collection.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException">
                If the evaluation of any project in the graph fails
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; entryPoints, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc projectInstanceFactory, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; entryPoints, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, class Microsoft.Build.Graph.ProjectGraph/ProjectInstanceFactoryFunc projectInstanceFactory, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Build.Graph.ProjectGraphEntryPoint},Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryPoints As IEnumerable(Of ProjectGraphEntryPoint), projectCollection As ProjectCollection, projectInstanceFactory As ProjectGraph.ProjectInstanceFactoryFunc, cancellationToken As CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Graph::ProjectGraphEntryPoint&gt; ^ entryPoints, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Graph::ProjectGraph::ProjectInstanceFactoryFunc ^ projectInstanceFactory, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : seq&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc * System.Threading.CancellationToken -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryPoints, projectCollection, projectInstanceFactory, cancellationToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryPoints" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt;" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="projectInstanceFactory" Type="Microsoft.Build.Graph.ProjectGraph+ProjectInstanceFactoryFunc" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="entryPoints">The entry points to use in constructing the graph</param>
        <param name="projectCollection">
                The collection with which all projects in the graph should be associated. May not be
                null.
            </param>
        <param name="projectInstanceFactory">
                A delegate used for constructing a <see cref="T:Microsoft.Build.Execution.ProjectInstance" />, called for each
                project created during graph creation. This value can be null, which uses
                a default implementation that calls the ProjectInstance constructor. See the remarks
                on <see cref="T:Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc" /> for other scenarios.
            </param>
        <param name="cancellationToken">
                The <see cref="T:System.Threading.CancellationToken" /> token to observe.
            </param>
        <summary>
                Constructs a graph starting from the given graph entry points, evaluating with the provided project collection.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException">
                If the evaluation of any project in the graph fails
            </exception>
        <exception cref="T:System.InvalidOperationException">
                If a null reference is returned from <paramref name="projectInstanceFactory" /></exception>
        <exception cref="T:Microsoft.Build.BackEnd.CircularDependencyException">
                If the evaluation is successful but the project graph contains a circular
                dependency
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; entryPoints, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc projectInstanceFactory, int degreeOfParallelism, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; entryPoints, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, class Microsoft.Build.Graph.ProjectGraph/ProjectInstanceFactoryFunc projectInstanceFactory, int32 degreeOfParallelism, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Build.Graph.ProjectGraphEntryPoint},Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryPoints As IEnumerable(Of ProjectGraphEntryPoint), projectCollection As ProjectCollection, projectInstanceFactory As ProjectGraph.ProjectInstanceFactoryFunc, degreeOfParallelism As Integer, cancellationToken As CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Graph::ProjectGraphEntryPoint&gt; ^ entryPoints, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Graph::ProjectGraph::ProjectInstanceFactoryFunc ^ projectInstanceFactory, int degreeOfParallelism, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : seq&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc * int * System.Threading.CancellationToken -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryPoints, projectCollection, projectInstanceFactory, degreeOfParallelism, cancellationToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryPoints" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt;" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="projectInstanceFactory" Type="Microsoft.Build.Graph.ProjectGraph+ProjectInstanceFactoryFunc" />
        <Parameter Name="degreeOfParallelism" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="entryPoints">The entry points to use in constructing the graph</param>
        <param name="projectCollection">
                The collection with which all projects in the graph should be associated. May not be
                null.
            </param>
        <param name="projectInstanceFactory">
                A delegate used for constructing a <see cref="T:Microsoft.Build.Execution.ProjectInstance" />, called for each
                project created during graph creation. This value can be null, which uses
                a default implementation that calls the ProjectInstance constructor. See the remarks
                on <see cref="T:Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc" /> for other scenarios.
            </param>
        <param name="degreeOfParallelism">
                Number of threads to participate in building the project graph.
            </param>
        <param name="cancellationToken">
                The <see cref="T:System.Threading.CancellationToken" /> token to observe.
            </param>
        <summary>
                Constructs a graph starting from the given graph entry points, evaluating with the provided project collection.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException">
                If the evaluation of any project in the graph fails
            </exception>
        <exception cref="T:System.InvalidOperationException">
                If a null reference is returned from <paramref name="projectInstanceFactory" /></exception>
        <exception cref="T:Microsoft.Build.BackEnd.CircularDependencyException">
                If the evaluation is successful but the project graph contains a circular
                dependency
            </exception>
      </Docs>
    </Member>
    <Member MemberName="EntryPointNodes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt; EntryPointNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;class Microsoft.Build.Graph.ProjectGraphNode&gt; EntryPointNodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Graph.ProjectGraph.EntryPointNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntryPointNodes As IReadOnlyCollection(Of ProjectGraphNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyCollection&lt;Microsoft::Build::Graph::ProjectGraphNode ^&gt; ^ EntryPointNodes { System::Collections::Generic::IReadOnlyCollection&lt;Microsoft::Build::Graph::ProjectGraphNode ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryPointNodes : System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt;" Usage="Microsoft.Build.Graph.ProjectGraph.EntryPointNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the project nodes representing the entry points.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTargetLists">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.Build.Graph.ProjectGraphNode,System.Collections.Immutable.ImmutableList&lt;string&gt;&gt; GetTargetLists (System.Collections.Generic.ICollection&lt;string&gt; entryProjectTargets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;class Microsoft.Build.Graph.ProjectGraphNode, class System.Collections.Immutable.ImmutableList`1&lt;string&gt;&gt; GetTargetLists(class System.Collections.Generic.ICollection`1&lt;string&gt; entryProjectTargets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.GetTargetLists(System.Collections.Generic.ICollection{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTargetLists (entryProjectTargets As ICollection(Of String)) As IReadOnlyDictionary(Of ProjectGraphNode, ImmutableList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IReadOnlyDictionary&lt;Microsoft::Build::Graph::ProjectGraphNode ^, System::Collections::Immutable::ImmutableList&lt;System::String ^&gt; ^&gt; ^ GetTargetLists(System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ entryProjectTargets);" />
      <MemberSignature Language="F#" Value="member this.GetTargetLists : System.Collections.Generic.ICollection&lt;string&gt; -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.Build.Graph.ProjectGraphNode, System.Collections.Immutable.ImmutableList&lt;string&gt;&gt;" Usage="projectGraph.GetTargetLists entryProjectTargets" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.Build.Graph.ProjectGraphNode,System.Collections.Immutable.ImmutableList&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryProjectTargets" Type="System.Collections.Generic.ICollection&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="entryProjectTargets">
                The target list for the <see cref="P:Microsoft.Build.Graph.ProjectGraph.GraphRoots" />. May be null or empty, in which case the entry projects' default
                targets will be used.
            </param>
        <summary>
                Gets the target list to be executed for every project in the graph, given a particular target list for the entry
                project.
            </summary>
        <returns>
                A dictionary containing the target list for each node. If a node's target list is empty, then no targets were
                inferred for that node and it should get skipped during a graph based build.
            </returns>
        <remarks>
                This method uses the ProjectReferenceTargets items to determine the targets to run per node. The results can then
                be used to start building each project individually, assuming a given project is built after its references.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GraphRoots">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt; GraphRoots { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;class Microsoft.Build.Graph.ProjectGraphNode&gt; GraphRoots" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Graph.ProjectGraph.GraphRoots" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GraphRoots As IReadOnlyCollection(Of ProjectGraphNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyCollection&lt;Microsoft::Build::Graph::ProjectGraphNode ^&gt; ^ GraphRoots { System::Collections::Generic::IReadOnlyCollection&lt;Microsoft::Build::Graph::ProjectGraphNode ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GraphRoots : System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt;" Usage="Microsoft.Build.Graph.ProjectGraph.GraphRoots" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectNodes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt; ProjectNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;class Microsoft.Build.Graph.ProjectGraphNode&gt; ProjectNodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Graph.ProjectGraph.ProjectNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectNodes As IReadOnlyCollection(Of ProjectGraphNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyCollection&lt;Microsoft::Build::Graph::ProjectGraphNode ^&gt; ^ ProjectNodes { System::Collections::Generic::IReadOnlyCollection&lt;Microsoft::Build::Graph::ProjectGraphNode ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectNodes : System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt;" Usage="Microsoft.Build.Graph.ProjectGraph.ProjectNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Get an unordered collection of all project nodes in the graph.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectNodesTopologicallySorted">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt; ProjectNodesTopologicallySorted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;class Microsoft.Build.Graph.ProjectGraphNode&gt; ProjectNodesTopologicallySorted" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Graph.ProjectGraph.ProjectNodesTopologicallySorted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectNodesTopologicallySorted As IReadOnlyCollection(Of ProjectGraphNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyCollection&lt;Microsoft::Build::Graph::ProjectGraphNode ^&gt; ^ ProjectNodesTopologicallySorted { System::Collections::Generic::IReadOnlyCollection&lt;Microsoft::Build::Graph::ProjectGraphNode ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectNodesTopologicallySorted : System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt;" Usage="Microsoft.Build.Graph.ProjectGraph.ProjectNodesTopologicallySorted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Get a topologically sorted collection of all project nodes in the graph.
                Referenced projects appear before the referencing projects.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="GraphBuildSubmission" FullName="Microsoft.Build.Graph.GraphBuildSubmission">
  <TypeSignature Language="C#" Value="public class GraphBuildSubmission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GraphBuildSubmission extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Graph.GraphBuildSubmission" />
  <TypeSignature Language="VB.NET" Value="Public Class GraphBuildSubmission" />
  <TypeSignature Language="C++ CLI" Value="public ref class GraphBuildSubmission" />
  <TypeSignature Language="F#" Value="type GraphBuildSubmission = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A GraphBuildSubmission represents a graph build request which has been submitted to the BuildManager for processing.  It may be used to
            execute synchronous or asynchronous graph build requests and provides access to the results upon completion.
            </summary>
    <remarks>
            This class is thread-safe.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsyncContext">
      <MemberSignature Language="C#" Value="public object AsyncContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Graph.GraphBuildSubmission.AsyncContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncContext { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncContext : obj" Usage="Microsoft.Build.Graph.GraphBuildSubmission.AsyncContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The asynchronous context provided to <see cref="M:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)" />, if any.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildManager">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.BuildManager BuildManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Execution.BuildManager BuildManager" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Graph.GraphBuildSubmission.BuildManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuildManager As BuildManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Execution::BuildManager ^ BuildManager { Microsoft::Build::Execution::BuildManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BuildManager : Microsoft.Build.Execution.BuildManager" Usage="Microsoft.Build.Graph.GraphBuildSubmission.BuildManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The BuildManager with which this submission is associated.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildResult">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Graph.GraphBuildResult BuildResult { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Graph.GraphBuildResult BuildResult" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Graph.GraphBuildSubmission.BuildResult" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuildResult As GraphBuildResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Graph::GraphBuildResult ^ BuildResult { Microsoft::Build::Graph::GraphBuildResult ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BuildResult : Microsoft.Build.Graph.GraphBuildResult" Usage="Microsoft.Build.Graph.GraphBuildSubmission.BuildResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Graph.GraphBuildResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The results of the build per graph node.  Valid only after WaitHandle has become signalled.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Graph.GraphBuildResult Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Graph.GraphBuildResult Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.GraphBuildSubmission.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute () As GraphBuildResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Graph::GraphBuildResult ^ Execute();" />
      <MemberSignature Language="F#" Value="member this.Execute : unit -&gt; Microsoft.Build.Graph.GraphBuildResult" Usage="graphBuildSubmission.Execute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Graph.GraphBuildResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Starts the request and blocks until results are available.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The request has already been started or is already complete.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAsync">
      <MemberSignature Language="C#" Value="public void ExecuteAsync (Microsoft.Build.Graph.GraphBuildSubmissionCompleteCallback callback, object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecuteAsync(class Microsoft.Build.Graph.GraphBuildSubmissionCompleteCallback callback, object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.GraphBuildSubmission.ExecuteAsync(Microsoft.Build.Graph.GraphBuildSubmissionCompleteCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteAsync (callback As GraphBuildSubmissionCompleteCallback, context As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteAsync(Microsoft::Build::Graph::GraphBuildSubmissionCompleteCallback ^ callback, System::Object ^ context);" />
      <MemberSignature Language="F#" Value="member this.ExecuteAsync : Microsoft.Build.Graph.GraphBuildSubmissionCompleteCallback * obj -&gt; unit" Usage="graphBuildSubmission.ExecuteAsync (callback, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Microsoft.Build.Graph.GraphBuildSubmissionCompleteCallback" />
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="context">To be added.</param>
        <summary>
            Starts the request asynchronously and immediately returns control to the caller.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The request has already been started or is already complete.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Graph.GraphBuildSubmission.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="Microsoft.Build.Graph.GraphBuildSubmission.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if this submission is complete.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmissionId">
      <MemberSignature Language="C#" Value="public int SubmissionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubmissionId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Graph.GraphBuildSubmission.SubmissionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubmissionId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SubmissionId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SubmissionId : int" Usage="Microsoft.Build.Graph.GraphBuildSubmission.SubmissionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An ID uniquely identifying this request from among other submissions within the same build.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle WaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle WaitHandle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Graph.GraphBuildSubmission.WaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ WaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WaitHandle : System.Threading.WaitHandle" Usage="Microsoft.Build.Graph.GraphBuildSubmission.WaitHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A <see cref="T:System.Threading.WaitHandle" /> which will be signalled when the build is complete.  Valid after <see cref="M:Microsoft.Build.Execution.BuildSubmission.Execute" /> or <see cref="M:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)" /> returns, otherwise null.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="HostApplicationBuilderSettings" FullName="Microsoft.Extensions.Hosting.HostApplicationBuilderSettings">
  <TypeSignature Language="C#" Value="public sealed class HostApplicationBuilderSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HostApplicationBuilderSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HostApplicationBuilderSettings" />
  <TypeSignature Language="F#" Value="type HostApplicationBuilderSettings = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostApplicationBuilderSettings sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Hosting</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Settings for constructing an <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostApplicationBuilderSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostApplicationBuilderSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes an instance of the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public string? ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationName As String" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.ApplicationName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the application name.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Args">
      <MemberSignature Language="C#" Value="public string[]? Args { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Args" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.Args" />
      <MemberSignature Language="VB.NET" Value="Public Property Args As String()" />
      <MemberSignature Language="F#" Value="member this.Args : string[] with get, set" Usage="Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.Args" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Args { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the command-line arguments to add to the <see cref="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Configuration" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Configuration">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Configuration.ConfigurationManager? Configuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Configuration.ConfigurationManager Configuration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.Configuration" />
      <MemberSignature Language="VB.NET" Value="Public Property Configuration As ConfigurationManager" />
      <MemberSignature Language="F#" Value="member this.Configuration : Microsoft.Extensions.Configuration.ConfigurationManager with get, set" Usage="Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Configuration::ConfigurationManager ^ Configuration { Microsoft::Extensions::Configuration::ConfigurationManager ^ get(); void set(Microsoft::Extensions::Configuration::ConfigurationManager ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Configuration.ConfigurationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the initial configuration sources to be added to the <see cref="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Configuration" />. These sources can influence
            the <see cref="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Environment" /> through the use of <see cref="T:Microsoft.Extensions.Hosting.HostDefaults" /> keys. Disposing the built
            <see cref="T:Microsoft.Extensions.Hosting.IHost" /> disposes the <see cref="T:Microsoft.Extensions.Configuration.ConfigurationManager" />.
            </summary>
        <value>To be added.</value>
        <remarks>These sources can influence the <see cref="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Environment" /> through the use of <see cref="T:Microsoft.Extensions.Hosting.HostDefaults" /> keys. Disposing the built <see cref="T:Microsoft.Extensions.Hosting.IHost" /> disposes the <see cref="T:Microsoft.Extensions.Configuration.ConfigurationManager" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentRootPath">
      <MemberSignature Language="C#" Value="public string? ContentRootPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentRootPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.ContentRootPath" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentRootPath As String" />
      <MemberSignature Language="F#" Value="member this.ContentRootPath : string with get, set" Usage="Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.ContentRootPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentRootPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the content root path.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableDefaults">
      <MemberSignature Language="C#" Value="public bool DisableDefaults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableDefaults" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.DisableDefaults" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableDefaults As Boolean" />
      <MemberSignature Language="F#" Value="member this.DisableDefaults : bool with get, set" Usage="Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.DisableDefaults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableDefaults { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that indicates whether the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" /> instance is configured with pre-configured defaults.
            </summary>
        <value>
          <see langword="false" /> if the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" /> instance is configured with pre-configured defaults.
            This has a similar effect to calling <see cref="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureDefaults(Microsoft.Extensions.Hosting.IHostBuilder,System.String[])" />.
            </value>
        <remarks>
              The following defaults are applied to the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" />:
                * set the <see cref="P:Microsoft.Extensions.Hosting.IHostEnvironment.ContentRootPath" /> to the result of <see cref="M:System.IO.Directory.GetCurrentDirectory" />
                * load <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> from "DOTNET_" prefixed environment variables
                * load <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> from 'appsettings.json' and 'appsettings.[<see cref="P:Microsoft.Extensions.Hosting.IHostEnvironment.EnvironmentName" />].json'
                * load <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> from User Secrets when <see cref="P:Microsoft.Extensions.Hosting.IHostEnvironment.EnvironmentName" /> is 'Development' using the entry assembly
                * load <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> from environment variables
                * load <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> from supplied command line args
                * configure the <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> to log to the console, debug, and event source output
                * enables scope validation on the dependency injection container when <see cref="P:Microsoft.Extensions.Hosting.IHostEnvironment.EnvironmentName" /> is 'Development'
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentName">
      <MemberSignature Language="C#" Value="public string? EnvironmentName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EnvironmentName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.EnvironmentName" />
      <MemberSignature Language="VB.NET" Value="Public Property EnvironmentName As String" />
      <MemberSignature Language="F#" Value="member this.EnvironmentName : string with get, set" Usage="Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.EnvironmentName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EnvironmentName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the environment name.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

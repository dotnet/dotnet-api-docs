<Type Name="CompilationLibrary" FullName="Microsoft.Extensions.DependencyModel.CompilationLibrary">
  <TypeSignature Language="C#" Value="public class CompilationLibrary : Microsoft.Extensions.DependencyModel.Library" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompilationLibrary extends Microsoft.Extensions.DependencyModel.Library" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyModel.CompilationLibrary" />
  <TypeSignature Language="VB.NET" Value="Public Class CompilationLibrary&#xA;Inherits Library" />
  <TypeSignature Language="F#" Value="type CompilationLibrary = class&#xA;    inherit Library" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompilationLibrary : Microsoft::Extensions::DependencyModel::Library" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DependencyModel</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.1</AssemblyVersion>
    <AssemblyVersion>8.0.0.2</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Extensions.DependencyModel.Library</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a compile time library dependency in a dependency manifest.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

## Remarks

A compile time library dependency is a library used to compile an application. It can be a [reference assembly](/dotnet/standard/assembly/reference-assemblies) or an implementation assembly. You can use the <xref:Microsoft.Extensions.DependencyModel.DependencyContext.CompileLibraries> property to get the list of compile time library dependencies for a dependency context. This is useful when you need to dynamically compile code (for example, using Roslyn Emit API) referencing the same dependencies as your main application.

## Examples

The following example shows how to display the list of libraries used to compile the current application. Include `<PreserveCompilationContext>true</PreserveCompilationContext>` in your project file to run this example.

:::code language="csharp" source="~/snippets/csharp/Microsoft.Extensions.DependencyModel/CompilationLibrary/Overview/CompilationLibrarySnippets.cs" id="SnippetPrintLibraries":::

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompilationLibrary (string type, string name, string version, string? hash, System.Collections.Generic.IEnumerable&lt;string&gt; assemblies, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.DependencyModel.Dependency&gt; dependencies, bool serviceable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string type, string name, string version, string hash, class System.Collections.Generic.IEnumerable`1&lt;string&gt; assemblies, class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.Extensions.DependencyModel.Dependency&gt; dependencies, bool serviceable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyModel.CompilationLibrary.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyModel.Dependency},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As String, name As String, version As String, hash As String, assemblies As IEnumerable(Of String), dependencies As IEnumerable(Of Dependency), serviceable As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.DependencyModel.CompilationLibrary : string * string * string * string * seq&lt;string&gt; * seq&lt;Microsoft.Extensions.DependencyModel.Dependency&gt; * bool -&gt; Microsoft.Extensions.DependencyModel.CompilationLibrary" Usage="new Microsoft.Extensions.DependencyModel.CompilationLibrary (type, name, version, hash, assemblies, dependencies, serviceable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompilationLibrary(System::String ^ type, System::String ^ name, System::String ^ version, System::String ^ hash, System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ assemblies, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::DependencyModel::Dependency&gt; ^ dependencies, bool serviceable);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyModel</AssemblyName>
        <AssemblyVersion>8.0.0.2</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="hash" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="assemblies" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="dependencies" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.DependencyModel.Dependency&gt;" />
        <Parameter Name="serviceable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">The library's type.</param>
        <param name="name">The library's name.</param>
        <param name="version">The library's version.</param>
        <param name="hash">The library package's hash.</param>
        <param name="assemblies">The library's assemblies.</param>
        <param name="dependencies">The library's dependencies.</param>
        <param name="serviceable">Whether the library is serviceable.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.DependencyModel.CompilationLibrary" /> class using the specified library properties.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" />, or <paramref name="name" />, or <paramref name="version" /> is <see langword="null" /> or an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dependencies" /> or <paramref name="assemblies" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompilationLibrary (string type, string name, string version, string? hash, System.Collections.Generic.IEnumerable&lt;string&gt; assemblies, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.DependencyModel.Dependency&gt; dependencies, bool serviceable, string? path, string? hashPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string type, string name, string version, string hash, class System.Collections.Generic.IEnumerable`1&lt;string&gt; assemblies, class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.Extensions.DependencyModel.Dependency&gt; dependencies, bool serviceable, string path, string hashPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyModel.CompilationLibrary.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyModel.Dependency},System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As String, name As String, version As String, hash As String, assemblies As IEnumerable(Of String), dependencies As IEnumerable(Of Dependency), serviceable As Boolean, path As String, hashPath As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.DependencyModel.CompilationLibrary : string * string * string * string * seq&lt;string&gt; * seq&lt;Microsoft.Extensions.DependencyModel.Dependency&gt; * bool * string * string -&gt; Microsoft.Extensions.DependencyModel.CompilationLibrary" Usage="new Microsoft.Extensions.DependencyModel.CompilationLibrary (type, name, version, hash, assemblies, dependencies, serviceable, path, hashPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompilationLibrary(System::String ^ type, System::String ^ name, System::String ^ version, System::String ^ hash, System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ assemblies, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::DependencyModel::Dependency&gt; ^ dependencies, bool serviceable, System::String ^ path, System::String ^ hashPath);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyModel</AssemblyName>
        <AssemblyVersion>8.0.0.2</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="hash" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="assemblies" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="dependencies" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.DependencyModel.Dependency&gt;" />
        <Parameter Name="serviceable" Type="System.Boolean" />
        <Parameter Name="path" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="hashPath" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">The library's type.</param>
        <param name="name">The library's name.</param>
        <param name="version">The library's version.</param>
        <param name="hash">The library package's hash.</param>
        <param name="assemblies">The library's assemblies.</param>
        <param name="dependencies">The library's dependencies.</param>
        <param name="serviceable">Whether the library is serviceable.</param>
        <param name="path">The library package's path.</param>
        <param name="hashPath">The library package's hash path.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.DependencyModel.CompilationLibrary" /> class using the specified library properties and path.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" />, or <paramref name="name" />, or <paramref name="version" /> is <see langword="null" /> or an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dependencies" /> or <paramref name="assemblies" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Assemblies">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;string&gt; Assemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; Assemblies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.DependencyModel.CompilationLibrary.Assemblies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assemblies As IReadOnlyList(Of String)" />
      <MemberSignature Language="F#" Value="member this.Assemblies : System.Collections.Generic.IReadOnlyList&lt;string&gt;" Usage="Microsoft.Extensions.DependencyModel.CompilationLibrary.Assemblies" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;System::String ^&gt; ^ Assemblies { System::Collections::Generic::IReadOnlyList&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyModel</AssemblyName>
        <AssemblyVersion>8.0.0.2</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the list of assemblies for this library.</summary>
        <value>The list of assemblies for this library.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveReferencePaths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; ResolveReferencePaths ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; ResolveReferencePaths() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveReferencePaths () As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="member this.ResolveReferencePaths : unit -&gt; seq&lt;string&gt;" Usage="compilationLibrary.ResolveReferencePaths " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ ResolveReferencePaths();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyModel</AssemblyName>
        <AssemblyVersion>8.0.0.2</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the collection of absolute reference paths for this library.</summary>
        <returns>The collection of absolute reference paths for this library.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          Library location is not found.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveReferencePaths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; ResolveReferencePaths (params Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver[] customResolvers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; ResolveReferencePaths(class Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver[] customResolvers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths(Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveReferencePaths (ParamArray customResolvers As ICompilationAssemblyResolver()) As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="member this.ResolveReferencePaths : Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver[] -&gt; seq&lt;string&gt;" Usage="compilationLibrary.ResolveReferencePaths customResolvers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ ResolveReferencePaths(... cli::array &lt;Microsoft::Extensions::DependencyModel::Resolution::ICompilationAssemblyResolver ^&gt; ^ customResolvers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyModel</AssemblyName>
        <AssemblyVersion>8.0.0.2</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customResolvers" Type="Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="customResolvers">The array of custom assembly resolvers.</param>
        <summary>Gets the collection of absolute reference paths for this library using specified custom resolvers.</summary>
        <returns>The collection of absolute reference paths for this library.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          Library location is not found.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

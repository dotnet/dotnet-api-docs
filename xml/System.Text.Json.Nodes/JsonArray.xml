<Type Name="JsonArray" FullName="System.Text.Json.Nodes.JsonArray">
  <TypeSignature Language="C#" Value="public sealed class JsonArray : System.Text.Json.Nodes.JsonNode, System.Collections.Generic.ICollection&lt;System.Text.Json.Nodes.JsonNode&gt;, System.Collections.Generic.IEnumerable&lt;System.Text.Json.Nodes.JsonNode&gt;, System.Collections.Generic.IList&lt;System.Text.Json.Nodes.JsonNode&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit JsonArray extends System.Text.Json.Nodes.JsonNode implements class System.Collections.Generic.ICollection`1&lt;class System.Text.Json.Nodes.JsonNode&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Text.Json.Nodes.JsonNode&gt;, class System.Collections.Generic.IList`1&lt;class System.Text.Json.Nodes.JsonNode&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.Nodes.JsonArray" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JsonArray&#xA;Inherits JsonNode&#xA;Implements ICollection(Of JsonNode), IEnumerable(Of JsonNode), IList(Of JsonNode)" />
  <TypeSignature Language="F#" Value="type JsonArray = class&#xA;    inherit JsonNode&#xA;    interface ICollection&lt;JsonNode&gt;&#xA;    interface seq&lt;JsonNode&gt;&#xA;    interface IEnumerable&#xA;    interface IList&lt;JsonNode&gt;" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonArray sealed : System::Text::Json::Nodes::JsonNode, System::Collections::Generic::ICollection&lt;System::Text::Json::Nodes::JsonNode ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Text::Json::Nodes::JsonNode ^&gt;, System::Collections::Generic::IList&lt;System::Text::Json::Nodes::JsonNode ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Json.Nodes.JsonNode</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Text.Json.Nodes.JsonNode&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Text.Json.Nodes.JsonNode&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;System.Text.Json.Nodes.JsonNode&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonArray (System.Text.Json.Nodes.JsonNodeOptions? options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.Text.Json.Nodes.JsonNodeOptions&gt; options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Nodes.JsonArray.#ctor(System.Nullable{System.Text.Json.Nodes.JsonNodeOptions})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional options As Nullable(Of JsonNodeOptions) = Nothing)" />
      <MemberSignature Language="F#" Value="new System.Text.Json.Nodes.JsonArray : Nullable&lt;System.Text.Json.Nodes.JsonNodeOptions&gt; -&gt; System.Text.Json.Nodes.JsonArray" Usage="new System.Text.Json.Nodes.JsonArray options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="System.Nullable&lt;System.Text.Json.Nodes.JsonNodeOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonArray (params System.Text.Json.Nodes.JsonNode?[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.Json.Nodes.JsonNode[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Nodes.JsonArray.#ctor(System.Text.Json.Nodes.JsonNode[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray items As JsonNode())" />
      <MemberSignature Language="F#" Value="new System.Text.Json.Nodes.JsonArray : System.Text.Json.Nodes.JsonNode[] -&gt; System.Text.Json.Nodes.JsonArray" Usage="new System.Text.Json.Nodes.JsonArray items" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonArray(... cli::array &lt;System::Text::Json::Nodes::JsonNode ^&gt; ^ items);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.Text.Json.Nodes.JsonNode[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonArray (System.Text.Json.Nodes.JsonNodeOptions options, params System.Text.Json.Nodes.JsonNode?[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Text.Json.Nodes.JsonNodeOptions options, class System.Text.Json.Nodes.JsonNode[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Nodes.JsonArray.#ctor(System.Text.Json.Nodes.JsonNodeOptions,System.Text.Json.Nodes.JsonNode[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As JsonNodeOptions, ParamArray items As JsonNode())" />
      <MemberSignature Language="F#" Value="new System.Text.Json.Nodes.JsonArray : System.Text.Json.Nodes.JsonNodeOptions * System.Text.Json.Nodes.JsonNode[] -&gt; System.Text.Json.Nodes.JsonArray" Usage="new System.Text.Json.Nodes.JsonArray (options, items)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonArray(System::Text::Json::Nodes::JsonNodeOptions options, ... cli::array &lt;System::Text::Json::Nodes::JsonNode ^&gt; ^ items);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="System.Text.Json.Nodes.JsonNodeOptions" />
        <Parameter Name="items" Type="System.Text.Json.Nodes.JsonNode[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <param name="items">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Text.Json.Nodes.JsonNode? item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Text.Json.Nodes.JsonNode item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Nodes.JsonArray.Add(System.Text.Json.Nodes.JsonNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As JsonNode)" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Text.Json.Nodes.JsonNode -&gt; unit&#xA;override this.Add : System.Text.Json.Nodes.JsonNode -&gt; unit" Usage="jsonArray.Add item" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Text::Json::Nodes::JsonNode ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Text.Json.Nodes.JsonNode" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Add&lt;T&gt; (T? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add&lt;T&gt;(!!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Nodes.JsonArray.Add``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add(Of T) (value As T)" />
      <MemberSignature Language="F#" Value="member this.Add : 'T -&gt; unit" Usage="jsonArray.Add value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Add(T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Creating JsonValue instances with non-primitive types is not compatible with trimming. It can result in non-primitive types being serialized, which may have their members trimmed.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Creating JsonValue instances with non-primitive types is not compatible with trimming. It can result in non-primitive types being serialized, which may have their members trimmed.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Nodes.JsonArray.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="jsonArray.Clear " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Text.Json.Nodes.JsonNode? item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Text.Json.Nodes.JsonNode item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Nodes.JsonArray.Contains(System.Text.Json.Nodes.JsonNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As JsonNode) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Text.Json.Nodes.JsonNode -&gt; bool&#xA;override this.Contains : System.Text.Json.Nodes.JsonNode -&gt; bool" Usage="jsonArray.Contains item" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Text::Json::Nodes::JsonNode ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Text.Json.Nodes.JsonNode" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Nodes.JsonArray.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Text.Json.Nodes.JsonArray.Count" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Text.Json.Nodes.JsonArray? Create (System.Text.Json.JsonElement element, System.Text.Json.Nodes.JsonNodeOptions? options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.Nodes.JsonArray Create(valuetype System.Text.Json.JsonElement element, valuetype System.Nullable`1&lt;valuetype System.Text.Json.Nodes.JsonNodeOptions&gt; options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Nodes.JsonArray.Create(System.Text.Json.JsonElement,System.Nullable{System.Text.Json.Nodes.JsonNodeOptions})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (element As JsonElement, Optional options As Nullable(Of JsonNodeOptions) = Nothing) As JsonArray" />
      <MemberSignature Language="F#" Value="static member Create : System.Text.Json.JsonElement * Nullable&lt;System.Text.Json.Nodes.JsonNodeOptions&gt; -&gt; System.Text.Json.Nodes.JsonArray" Usage="System.Text.Json.Nodes.JsonArray.Create (element, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.Nodes.JsonArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Text.Json.JsonElement" />
        <Parameter Name="options" Type="System.Nullable&lt;System.Text.Json.Nodes.JsonNodeOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Text.Json.Nodes.JsonNode?&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Text.Json.Nodes.JsonNode&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Nodes.JsonArray.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of JsonNode)" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Text.Json.Nodes.JsonNode&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Text.Json.Nodes.JsonNode&gt;" Usage="jsonArray.GetEnumerator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Text::Json::Nodes::JsonNode ^&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Text.Json.Nodes.JsonNode&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Text.Json.Nodes.JsonNode? item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(class System.Text.Json.Nodes.JsonNode item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Nodes.JsonArray.IndexOf(System.Text.Json.Nodes.JsonNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As JsonNode) As Integer" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : System.Text.Json.Nodes.JsonNode -&gt; int&#xA;override this.IndexOf : System.Text.Json.Nodes.JsonNode -&gt; int" Usage="jsonArray.IndexOf item" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Text::Json::Nodes::JsonNode ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Text.Json.Nodes.JsonNode" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Text.Json.Nodes.JsonNode? item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class System.Text.Json.Nodes.JsonNode item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Nodes.JsonArray.Insert(System.Int32,System.Text.Json.Nodes.JsonNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As JsonNode)" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * System.Text.Json.Nodes.JsonNode -&gt; unit&#xA;override this.Insert : int * System.Text.Json.Nodes.JsonNode -&gt; unit" Usage="jsonArray.Insert (index, item)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Text::Json::Nodes::JsonNode ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Text.Json.Nodes.JsonNode" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Text.Json.Nodes.JsonNode? item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Text.Json.Nodes.JsonNode item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Nodes.JsonArray.Remove(System.Text.Json.Nodes.JsonNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As JsonNode) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Text.Json.Nodes.JsonNode -&gt; bool&#xA;override this.Remove : System.Text.Json.Nodes.JsonNode -&gt; bool" Usage="jsonArray.Remove item" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Text::Json::Nodes::JsonNode ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Text.Json.Nodes.JsonNode" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Nodes.JsonArray.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="jsonArray.RemoveAt index" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Text.Json.Nodes.JsonNode&gt;.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection&lt;JsonNode&gt;.CopyTo (System.Text.Json.Nodes.JsonNode?[]? array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Text.Json.Nodes.JsonNode&gt;.CopyTo(class System.Text.Json.Nodes.JsonNode[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Nodes.JsonArray.System#Collections#Generic#ICollection&lt;System#Text#Json#Nodes#JsonNode&gt;#CopyTo(System.Text.Json.Nodes.JsonNode[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As JsonNode(), index As Integer) Implements ICollection(Of JsonNode).CopyTo" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;System.Text.Json.Nodes.JsonNode&gt;.CopyTo : System.Text.Json.Nodes.JsonNode[] * int -&gt; unit&#xA;override this.System.Collections.Generic.ICollection&lt;System.Text.Json.Nodes.JsonNode&gt;.CopyTo : System.Text.Json.Nodes.JsonNode[] * int -&gt; unit" Usage="jsonArray.System.Collections.Generic.ICollection&lt;System.Text.Json.Nodes.JsonNode&gt;.CopyTo (array, index)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Text.Json.Nodes.JsonNode&gt;.CopyTo(cli::array &lt;System::Text::Json::Nodes::JsonNode ^&gt; ^ array, int index) = System::Collections::Generic::ICollection&lt;System::Text::Json::Nodes::JsonNode ^&gt;::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Text.Json.Nodes.JsonNode[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Text.Json.Nodes.JsonNode&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Text.Json.Nodes.JsonNode&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Text.Json.Nodes.JsonNode&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Nodes.JsonArray.System#Collections#Generic#ICollection&lt;System#Text#Json#Nodes#JsonNode&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of JsonNode).IsReadOnly" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.ICollection&lt;System.Text.Json.Nodes.JsonNode&gt;.IsReadOnly : bool" Usage="System.Collections.Generic.ICollection&lt;System.Text.Json.Nodes.JsonNode&gt;.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;System::Text::Json::Nodes::JsonNode&gt;::IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator? IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Nodes.JsonArray.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="jsonArray.System.Collections.IEnumerable.GetEnumerator " />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Text.Json.Utf8JsonWriter writer, System.Text.Json.JsonSerializerOptions? options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Text.Json.Utf8JsonWriter writer, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Nodes.JsonArray.WriteTo(System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (writer As Utf8JsonWriter, Optional options As JsonSerializerOptions = Nothing)" />
      <MemberSignature Language="F#" Value="override this.WriteTo : System.Text.Json.Utf8JsonWriter * System.Text.Json.JsonSerializerOptions -&gt; unit" Usage="jsonArray.WriteTo (writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

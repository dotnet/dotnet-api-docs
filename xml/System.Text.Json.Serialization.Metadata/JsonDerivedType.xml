<Type Name="JsonDerivedType" FullName="System.Text.Json.Serialization.Metadata.JsonDerivedType">
  <TypeSignature Language="C#" Value="public readonly struct JsonDerivedType" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit JsonDerivedType extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.Serialization.Metadata.JsonDerivedType" />
  <TypeSignature Language="VB.NET" Value="Public Structure JsonDerivedType" />
  <TypeSignature Language="F#" Value="type JsonDerivedType = struct" />
  <TypeSignature Language="C++ CLI" Value="public value class JsonDerivedType" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a supported derived type defined in the metadata of a polymorphic type.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonDerivedType (Type derivedType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type derivedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.Metadata.JsonDerivedType.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (derivedType As Type)" />
      <MemberSignature Language="F#" Value="new System.Text.Json.Serialization.Metadata.JsonDerivedType : Type -&gt; System.Text.Json.Serialization.Metadata.JsonDerivedType" Usage="new System.Text.Json.Serialization.Metadata.JsonDerivedType derivedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonDerivedType(Type ^ derivedType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="derivedType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="derivedType">The derived type to be supported by the polymorphic type metadata.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Text.Json.Serialization.Metadata.JsonDerivedType" /> class that represents a supported derived type without a type discriminator.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonDerivedType (Type derivedType, int typeDiscriminator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type derivedType, int32 typeDiscriminator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.Metadata.JsonDerivedType.#ctor(System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (derivedType As Type, typeDiscriminator As Integer)" />
      <MemberSignature Language="F#" Value="new System.Text.Json.Serialization.Metadata.JsonDerivedType : Type * int -&gt; System.Text.Json.Serialization.Metadata.JsonDerivedType" Usage="new System.Text.Json.Serialization.Metadata.JsonDerivedType (derivedType, typeDiscriminator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonDerivedType(Type ^ derivedType, int typeDiscriminator);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="derivedType" Type="System.Type" />
        <Parameter Name="typeDiscriminator" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="derivedType">The derived type to be supported by the polymorphic type metadata.</param>
        <param name="typeDiscriminator">The type discriminator to be associated with the derived type.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Text.Json.Serialization.Metadata.JsonDerivedType" /> class that represents a supported derived type with an integer type discriminator.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonDerivedType (Type derivedType, string typeDiscriminator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type derivedType, string typeDiscriminator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.Metadata.JsonDerivedType.#ctor(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (derivedType As Type, typeDiscriminator As String)" />
      <MemberSignature Language="F#" Value="new System.Text.Json.Serialization.Metadata.JsonDerivedType : Type * string -&gt; System.Text.Json.Serialization.Metadata.JsonDerivedType" Usage="new System.Text.Json.Serialization.Metadata.JsonDerivedType (derivedType, typeDiscriminator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonDerivedType(Type ^ derivedType, System::String ^ typeDiscriminator);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="derivedType" Type="System.Type" />
        <Parameter Name="typeDiscriminator" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="derivedType">The derived type to be supported by the polymorphic type metadata.</param>
        <param name="typeDiscriminator">The type discriminator to be associated with the derived type.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Text.Json.Serialization.Metadata.JsonDerivedType" /> class that represents a supported derived type with a string type discriminator.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DerivedType">
      <MemberSignature Language="C#" Value="public Type DerivedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DerivedType" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonDerivedType.DerivedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DerivedType As Type" />
      <MemberSignature Language="F#" Value="member this.DerivedType : Type" Usage="System.Text.Json.Serialization.Metadata.JsonDerivedType.DerivedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DerivedType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a derived type that should be supported in polymorphic serialization of the declared base type.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeDiscriminator">
      <MemberSignature Language="C#" Value="public object? TypeDiscriminator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeDiscriminator" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonDerivedType.TypeDiscriminator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeDiscriminator As Object" />
      <MemberSignature Language="F#" Value="member this.TypeDiscriminator : obj" Usage="System.Text.Json.Serialization.Metadata.JsonDerivedType.TypeDiscriminator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TypeDiscriminator { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type discriminator identifier to be used for the serialization of the subtype.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

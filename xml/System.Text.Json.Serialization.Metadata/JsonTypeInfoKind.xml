<Type Name="JsonTypeInfoKind" FullName="System.Text.Json.Serialization.Metadata.JsonTypeInfoKind">
  <TypeSignature Language="C#" Value="public enum JsonTypeInfoKind" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed JsonTypeInfoKind extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.Serialization.Metadata.JsonTypeInfoKind" />
  <TypeSignature Language="VB.NET" Value="Public Enum JsonTypeInfoKind" />
  <TypeSignature Language="F#" Value="type JsonTypeInfoKind = " />
  <TypeSignature Language="C++ CLI" Value="public enum class JsonTypeInfoKind" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Describes the kind of contract metadata a <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> specifies.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Dictionary">
      <MemberSignature Language="C#" Value="Dictionary" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.Json.Serialization.Metadata.JsonTypeInfoKind Dictionary = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.Dictionary" />
      <MemberSignature Language="VB.NET" Value="Dictionary" />
      <MemberSignature Language="F#" Value="Dictionary = 3" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.Dictionary" />
      <MemberSignature Language="C++ CLI" Value="Dictionary" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.Metadata.JsonTypeInfoKind</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Type is serialized as a dictionary with key/value pair entries.</summary>
      </Docs>
    </Member>
    <Member MemberName="Enumerable">
      <MemberSignature Language="C#" Value="Enumerable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.Json.Serialization.Metadata.JsonTypeInfoKind Enumerable = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.Enumerable" />
      <MemberSignature Language="VB.NET" Value="Enumerable" />
      <MemberSignature Language="F#" Value="Enumerable = 2" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.Enumerable" />
      <MemberSignature Language="C++ CLI" Value="Enumerable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.Metadata.JsonTypeInfoKind</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Type is serialized as a collection with elements.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.Json.Serialization.Metadata.JsonTypeInfoKind None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.Metadata.JsonTypeInfoKind</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Type is either a simple value or uses a custom converter.</summary>
      </Docs>
    </Member>
    <Member MemberName="Object">
      <MemberSignature Language="C#" Value="Object" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.Json.Serialization.Metadata.JsonTypeInfoKind Object = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.Object" />
      <MemberSignature Language="VB.NET" Value="Object" />
      <MemberSignature Language="F#" Value="Object = 1" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.Object" />
      <MemberSignature Language="C++ CLI" Value="Object" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.Metadata.JsonTypeInfoKind</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Type is serialized as an object with properties.</summary>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="JsonTypeInfo" FullName="System.Text.Json.Serialization.Metadata.JsonTypeInfo">
  <TypeSignature Language="C#" Value="public abstract class JsonTypeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JsonTypeInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JsonTypeInfo" />
  <TypeSignature Language="F#" Value="type JsonTypeInfo = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonTypeInfo abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{DebuggerDisplay,nq}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{DebuggerDisplay,nq}")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides JSON serialization-related metadata about a type.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ConstructorAttributeProvider">
      <MemberSignature Language="C#" Value="public System.Reflection.ICustomAttributeProvider? ConstructorAttributeProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ICustomAttributeProvider ConstructorAttributeProvider" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.ConstructorAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructorAttributeProvider As ICustomAttributeProvider" />
      <MemberSignature Language="F#" Value="member this.ConstructorAttributeProvider : System.Reflection.ICustomAttributeProvider" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.ConstructorAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ICustomAttributeProvider ^ ConstructorAttributeProvider { System::Reflection::ICustomAttributeProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets an attribute provider corresponding to the deserialization constructor.</summary>
        <value>To be added.</value>
        <remarks>
          <para>When resolving metadata via the built-in resolvers this will be populated with</para>
          <para>the underlying <see cref="T:System.Reflection.ConstructorInfo" /> of the serialized property or field.</para>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonPropertyInfo" /> instance has been locked for further modification.</exception>
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public System.Text.Json.Serialization.JsonConverter Converter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Json.Serialization.JsonConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Converter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Converter As JsonConverter" />
      <MemberSignature Language="F#" Value="member this.Converter : System.Text.Json.Serialization.JsonConverter" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.Converter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::Serialization::JsonConverter ^ Converter { System::Text::Json::Serialization::JsonConverter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.JsonConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Text.Json.Serialization.JsonConverter" /> associated with the current type.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

The <xref:System.Text.Json.Serialization.JsonConverter> associated with the type determines the value of <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Kind>,
            and by extension the types of metadata that are configurable in the current JSON contract.
            As such, the value of the converter cannot be changed once a <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo> instance has been created.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonPropertyInfo">
      <MemberSignature Language="C#" Value="public System.Text.Json.Serialization.Metadata.JsonPropertyInfo CreateJsonPropertyInfo (Type propertyType, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.Json.Serialization.Metadata.JsonPropertyInfo CreateJsonPropertyInfo(class System.Type propertyType, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.Metadata.JsonTypeInfo.CreateJsonPropertyInfo(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateJsonPropertyInfo (propertyType As Type, name As String) As JsonPropertyInfo" />
      <MemberSignature Language="F#" Value="member this.CreateJsonPropertyInfo : Type * string -&gt; System.Text.Json.Serialization.Metadata.JsonPropertyInfo" Usage="jsonTypeInfo.CreateJsonPropertyInfo (propertyType, name)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::Json::Serialization::Metadata::JsonPropertyInfo ^ CreateJsonPropertyInfo(Type ^ propertyType, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-6.0;net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresDynamicCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresDynamicCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.Metadata.JsonPropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyType">The declared type for the property.</param>
        <param name="name">The property name used in JSON serialization and deserialization.</param>
        <summary>Creates a blank <see cref="T:System.Text.Json.Serialization.Metadata.JsonPropertyInfo" /> instance for the current <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" />.</summary>
        <returns>A blank <see cref="T:System.Text.Json.Serialization.Metadata.JsonPropertyInfo" /> instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="propertyType" /> or <paramref name="name" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="propertyType" /> cannot be used for serialization.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance has been locked for further modification.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonTypeInfo">
      <MemberSignature Language="C#" Value="public static System.Text.Json.Serialization.Metadata.JsonTypeInfo CreateJsonTypeInfo (Type type, System.Text.Json.JsonSerializerOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.Serialization.Metadata.JsonTypeInfo CreateJsonTypeInfo(class System.Type type, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.Metadata.JsonTypeInfo.CreateJsonTypeInfo(System.Type,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonTypeInfo (type As Type, options As JsonSerializerOptions) As JsonTypeInfo" />
      <MemberSignature Language="F#" Value="static member CreateJsonTypeInfo : Type * System.Text.Json.JsonSerializerOptions -&gt; System.Text.Json.Serialization.Metadata.JsonTypeInfo" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.CreateJsonTypeInfo (type, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Json::Serialization::Metadata::JsonTypeInfo ^ CreateJsonTypeInfo(Type ^ type, System::Text::Json::JsonSerializerOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-6.0;net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresDynamicCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresDynamicCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.Metadata.JsonTypeInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="type">The type for which contract metadata is specified.</param>
        <param name="options">The <see cref="T:System.Text.Json.JsonSerializerOptions" /> instance the metadata is associated with.</param>
        <summary>Creates a blank <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance.</summary>
        <returns>A blank <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

The returned <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo> will be blank, with the exception of the
             <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Converter> property which will be resolved either from
             <xref:System.Text.Json.JsonSerializerOptions.Converters> or the built-in converters for the type.
             Any converters specified via <xref:System.Text.Json.Serialization.JsonConverterAttribute> on the type declaration
             will not be resolved by this method.
            
Which converter gets resolved influences the value of <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Kind>,
             which constrains the type of metadata that can be modified in the <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo> instance.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> or <paramref name="options" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> cannot be used for serialization.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonTypeInfo&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;T&gt; CreateJsonTypeInfo&lt;T&gt; (System.Text.Json.JsonSerializerOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.Serialization.Metadata.JsonTypeInfo`1&lt;!!T&gt; CreateJsonTypeInfo&lt;T&gt;(class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.Metadata.JsonTypeInfo.CreateJsonTypeInfo``1(System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonTypeInfo(Of T) (options As JsonSerializerOptions) As JsonTypeInfo(Of T)" />
      <MemberSignature Language="F#" Value="static member CreateJsonTypeInfo : System.Text.Json.JsonSerializerOptions -&gt; System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;'T&gt;" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.CreateJsonTypeInfo options" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Text::Json::Serialization::Metadata::JsonTypeInfo&lt;T&gt; ^ CreateJsonTypeInfo(System::Text::Json::JsonSerializerOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-6.0;net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresDynamicCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresDynamicCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type for which contract metadata is specified.</typeparam>
        <param name="options">The <see cref="T:System.Text.Json.JsonSerializerOptions" /> instance the metadata is associated with.</param>
        <summary>Creates a blank <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo`1" /> instance.</summary>
        <returns>A blank <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo`1" /> instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

The returned <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo`1> will be blank, with the exception of the
             <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Converter> property, which will be resolved either from
             <xref:System.Text.Json.JsonSerializerOptions.Converters> or the built-in converters for the type.
             Any converters specified via <xref:System.Text.Json.Serialization.JsonConverterAttribute> on the type declaration
             will not be resolved by this method.
            
Which converter gets resolved influences the value of <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Kind>,
             which constrains the type of metadata that can be modified in the <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo> instance.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public Func&lt;object&gt;? CreateObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`1&lt;object&gt; CreateObject" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.CreateObject" />
      <MemberSignature Language="VB.NET" Value="Public Property CreateObject As Func(Of Object)" />
      <MemberSignature Language="F#" Value="member this.CreateObject : Func&lt;obj&gt; with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.CreateObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Object ^&gt; ^ CreateObject { Func&lt;System::Object ^&gt; ^ get(); void set(Func&lt;System::Object ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a parameterless factory to be used on deserialization.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

If set to `null`, any attempt to deserialize instances of the given type will result in an exception.
            
For contracts originating from <xref:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver> or <xref:System.Text.Json.Serialization.JsonSerializerContext>,
             types with a single default constructor or default constructors annotated with <xref:System.Text.Json.Serialization.JsonConstructorAttribute>
             will be mapped to this delegate.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance has been locked for further modification.

-or-

A parameterless factory is not supported for the current metadata <see cref="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Kind" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ElementType">
      <MemberSignature Language="C#" Value="public Type? ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ElementType" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.ElementType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementType As Type" />
      <MemberSignature Language="F#" Value="member this.ElementType : Type" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.ElementType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ElementType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the element type corresponding to an enumerable, dictionary or optional type.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the element type for enumerable types, the value type for dictionary types,</para>
          <para>and the underlying type for <see cref="T:System.Nullable`1" /> or F# optional types.</para>
          <para>Returns <see langword="null" /> for all other types or types using custom converters.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the current instance has been locked for modification.</summary>
        <value>To be added.</value>
        <remarks>A <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance can be locked if it has been passed to one of the <see cref="T:System.Text.Json.JsonSerializer" /> methods, has been associated with a <see cref="T:System.Text.Json.Serialization.JsonSerializerContext" /> instance, or a user explicitly called the <see cref="M:System.Text.Json.Serialization.Metadata.JsonTypeInfo.MakeReadOnly" /> method on the instance.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyType">
      <MemberSignature Language="C#" Value="public Type? KeyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type KeyType" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.KeyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyType As Type" />
      <MemberSignature Language="F#" Value="member this.KeyType : Type" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.KeyType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ KeyType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the key type corresponding to a dictionary type.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the key type for dictionary types.</para>
          <para>Returns <see langword="null" /> for all other types or types using custom converters.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Kind">
      <MemberSignature Language="C#" Value="public System.Text.Json.Serialization.Metadata.JsonTypeInfoKind Kind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.Serialization.Metadata.JsonTypeInfoKind Kind" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Kind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Kind As JsonTypeInfoKind" />
      <MemberSignature Language="F#" Value="member this.Kind : System.Text.Json.Serialization.Metadata.JsonTypeInfoKind" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.Kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::Serialization::Metadata::JsonTypeInfoKind Kind { System::Text::Json::Serialization::Metadata::JsonTypeInfoKind get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.Metadata.JsonTypeInfoKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that describes the kind of contract metadata that the current instance specifies.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

The value of <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Kind> determines what aspects of the JSON contract are configurable.
             For example, it is only possible to configure the <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Properties> list for metadata
             of kind <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.Object>.
            
The value of <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Kind> is determined exclusively by the <xref:System.Text.Json.Serialization.JsonConverter>
             resolved for the current type, and cannot be changed once resolution has happened.
             User-defined custom converters (specified either via <xref:System.Text.Json.Serialization.JsonConverterAttribute> or <xref:System.Text.Json.JsonSerializerOptions.Converters>)
             are metadata-agnostic and thus always resolve to <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.None>.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeReadOnly">
      <MemberSignature Language="C#" Value="public void MakeReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.Metadata.JsonTypeInfo.MakeReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeReadOnly ()" />
      <MemberSignature Language="F#" Value="member this.MakeReadOnly : unit -&gt; unit" Usage="jsonTypeInfo.MakeReadOnly " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeReadOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Locks the current instance for further modification.</summary>
        <remarks>This method is idempotent.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberHandling">
      <MemberSignature Language="C#" Value="public System.Text.Json.Serialization.JsonNumberHandling? NumberHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Text.Json.Serialization.JsonNumberHandling&gt; NumberHandling" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.NumberHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberHandling As Nullable(Of JsonNumberHandling)" />
      <MemberSignature Language="F#" Value="member this.NumberHandling : Nullable&lt;System.Text.Json.Serialization.JsonNumberHandling&gt; with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.NumberHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::Text::Json::Serialization::JsonNumberHandling&gt; NumberHandling { Nullable&lt;System::Text::Json::Serialization::JsonNumberHandling&gt; get(); void set(Nullable&lt;System::Text::Json::Serialization::JsonNumberHandling&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Text.Json.Serialization.JsonNumberHandling&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type-level <see cref="P:System.Text.Json.JsonSerializerOptions.NumberHandling" /> override.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

For contracts originating from <xref:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver> or <xref:System.Text.Json.Serialization.JsonSerializerContext>,
            the value of this callback will be mapped from any <xref:System.Text.Json.Serialization.JsonNumberHandling> annotations.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance has been locked for further modification.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">An invalid <see cref="T:System.Text.Json.Serialization.JsonNumberHandling" /> value was specified.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialized">
      <MemberSignature Language="C#" Value="public Action&lt;object&gt;? OnDeserialized { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;object&gt; OnDeserialized" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.OnDeserialized" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDeserialized As Action(Of Object)" />
      <MemberSignature Language="F#" Value="member this.OnDeserialized : Action&lt;obj&gt; with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.OnDeserialized" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Object ^&gt; ^ OnDeserialized { Action&lt;System::Object ^&gt; ^ get(); void set(Action&lt;System::Object ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a callback to be invoked after deserialization occurs.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

For contracts originating from <xref:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver> or <xref:System.Text.Json.Serialization.JsonSerializerContext>,
             the value of this callback will be mapped from any <xref:System.Text.Json.Serialization.IJsonOnDeserialized> implementation on the type.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance has been locked for further modification.

-or-

Serialization callbacks are only supported for <see cref="F:System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.Object" /> metadata.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnDeserializing">
      <MemberSignature Language="C#" Value="public Action&lt;object&gt;? OnDeserializing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;object&gt; OnDeserializing" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.OnDeserializing" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDeserializing As Action(Of Object)" />
      <MemberSignature Language="F#" Value="member this.OnDeserializing : Action&lt;obj&gt; with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.OnDeserializing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Object ^&gt; ^ OnDeserializing { Action&lt;System::Object ^&gt; ^ get(); void set(Action&lt;System::Object ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a callback to be invoked before deserialization occurs.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

For contracts originating from <xref:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver> or <xref:System.Text.Json.Serialization.JsonSerializerContext>,
             the value of this callback will be mapped from any <xref:System.Text.Json.Serialization.IJsonOnDeserializing> implementation on the type.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance has been locked for further modification.

-or-

Serialization callbacks are only supported for <see cref="F:System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.Object" /> metadata.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnSerialized">
      <MemberSignature Language="C#" Value="public Action&lt;object&gt;? OnSerialized { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;object&gt; OnSerialized" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.OnSerialized" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSerialized As Action(Of Object)" />
      <MemberSignature Language="F#" Value="member this.OnSerialized : Action&lt;obj&gt; with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.OnSerialized" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Object ^&gt; ^ OnSerialized { Action&lt;System::Object ^&gt; ^ get(); void set(Action&lt;System::Object ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a callback to be invoked after serialization occurs.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

For contracts originating from <xref:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver> or <xref:System.Text.Json.Serialization.JsonSerializerContext>,
             the value of this callback will be mapped from any <xref:System.Text.Json.Serialization.IJsonOnSerialized> implementation on the type.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance has been locked for further modification.

-or-

Serialization callbacks are only supported for <see cref="F:System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.Object" /> metadata.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnSerializing">
      <MemberSignature Language="C#" Value="public Action&lt;object&gt;? OnSerializing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;object&gt; OnSerializing" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.OnSerializing" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSerializing As Action(Of Object)" />
      <MemberSignature Language="F#" Value="member this.OnSerializing : Action&lt;obj&gt; with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.OnSerializing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Object ^&gt; ^ OnSerializing { Action&lt;System::Object ^&gt; ^ get(); void set(Action&lt;System::Object ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a callback to be invoked before serialization occurs.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

For contracts originating from <xref:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver> or <xref:System.Text.Json.Serialization.JsonSerializerContext>,
             the value of this callback will be mapped from any <xref:System.Text.Json.Serialization.IJsonOnSerializing> implementation on the type.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance has been locked for further modification.

-or-

Serialization callbacks are only supported for <see cref="F:System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.Object" /> metadata.</exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonSerializerOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Json.JsonSerializerOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As JsonSerializerOptions" />
      <MemberSignature Language="F#" Value="member this.Options : System.Text.Json.JsonSerializerOptions" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.Options" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonSerializerOptions ^ Options { System::Text::Json::JsonSerializerOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonSerializerOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Text.Json.JsonSerializerOptions" /> value associated with the current <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginatingResolver">
      <MemberSignature Language="C#" Value="public System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver? OriginatingResolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver OriginatingResolver" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.OriginatingResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property OriginatingResolver As IJsonTypeInfoResolver" />
      <MemberSignature Language="F#" Value="member this.OriginatingResolver : System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.OriginatingResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::Serialization::Metadata::IJsonTypeInfoResolver ^ OriginatingResolver { System::Text::Json::Serialization::Metadata::IJsonTypeInfoResolver ^ get(); void set(System::Text::Json::Serialization::Metadata::IJsonTypeInfoResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver" /> from which this metadata instance originated.</summary>
        <value>To be added.</value>
        <remarks>This metadata is used to determine the <see cref="P:System.Text.Json.Serialization.JsonSerializerContext.GeneratedSerializerOptions" /> configuration for the current metadata instance.</remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance has been locked for further modification.</exception>
      </Docs>
    </Member>
    <Member MemberName="PolymorphismOptions">
      <MemberSignature Language="C#" Value="public System.Text.Json.Serialization.Metadata.JsonPolymorphismOptions? PolymorphismOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Json.Serialization.Metadata.JsonPolymorphismOptions PolymorphismOptions" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.PolymorphismOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property PolymorphismOptions As JsonPolymorphismOptions" />
      <MemberSignature Language="F#" Value="member this.PolymorphismOptions : System.Text.Json.Serialization.Metadata.JsonPolymorphismOptions with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.PolymorphismOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::Serialization::Metadata::JsonPolymorphismOptions ^ PolymorphismOptions { System::Text::Json::Serialization::Metadata::JsonPolymorphismOptions ^ get(); void set(System::Text::Json::Serialization::Metadata::JsonPolymorphismOptions ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.Metadata.JsonPolymorphismOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a configuration object specifying polymorphism metadata.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

For contracts originating from <xref:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver> or <xref:System.Text.Json.Serialization.JsonSerializerContext>,
             the configuration of this setting will be mapped from any <xref:System.Text.Json.Serialization.JsonDerivedTypeAttribute> or <xref:System.Text.Json.Serialization.JsonPolymorphicAttribute> annotations.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> has been associated with a different <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance has been locked for further modification.

-or-

Polymorphic serialization is not supported for the current metadata <see cref="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Kind" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="PreferredPropertyObjectCreationHandling">
      <MemberSignature Language="C#" Value="public System.Text.Json.Serialization.JsonObjectCreationHandling? PreferredPropertyObjectCreationHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Text.Json.Serialization.JsonObjectCreationHandling&gt; PreferredPropertyObjectCreationHandling" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.PreferredPropertyObjectCreationHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property PreferredPropertyObjectCreationHandling As Nullable(Of JsonObjectCreationHandling)" />
      <MemberSignature Language="F#" Value="member this.PreferredPropertyObjectCreationHandling : Nullable&lt;System.Text.Json.Serialization.JsonObjectCreationHandling&gt; with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.PreferredPropertyObjectCreationHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::Text::Json::Serialization::JsonObjectCreationHandling&gt; PreferredPropertyObjectCreationHandling { Nullable&lt;System::Text::Json::Serialization::JsonObjectCreationHandling&gt; get(); void set(Nullable&lt;System::Text::Json::Serialization::JsonObjectCreationHandling&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Text.Json.Serialization.JsonObjectCreationHandling&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the preferred <see cref="T:System.Text.Json.Serialization.JsonObjectCreationHandling" /> value for properties contained in the type.</summary>
        <value>To be added.</value>
        <remarks>For contracts originating from <see cref="T:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver" /> or <see cref="T:System.Text.Json.Serialization.JsonSerializerContext" />, the value of this callback will be mapped from <see cref="T:System.Text.Json.Serialization.JsonObjectCreationHandlingAttribute" /> annotations on types.</remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance has been locked for further modification.

-or-

Unmapped member handling is only supported for <see cref="F:System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.Object">JsonTypeInfoKind.Object</see>.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Specified an invalid <see cref="T:System.Text.Json.Serialization.JsonObjectCreationHandling" /> value.</exception>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Text.Json.Serialization.Metadata.JsonPropertyInfo&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Text.Json.Serialization.Metadata.JsonPropertyInfo&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IList(Of JsonPropertyInfo)" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.IList&lt;System.Text.Json.Serialization.Metadata.JsonPropertyInfo&gt;" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.Properties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Text::Json::Serialization::Metadata::JsonPropertyInfo ^&gt; ^ Properties { System::Collections::Generic::IList&lt;System::Text::Json::Serialization::Metadata::JsonPropertyInfo ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Text.Json.Serialization.Metadata.JsonPropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the list of <see cref="T:System.Text.Json.Serialization.Metadata.JsonPropertyInfo" /> metadata corresponding to the current type.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This property is only applicable to metadata of kind <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.Object>.
             For other kinds, an empty, read-only list will be returned.
            
The order of <xref:System.Text.Json.Serialization.Metadata.JsonPropertyInfo> entries in the list determines the serialization order,
             unless either of the entries specifies a non-zero <xref:System.Text.Json.Serialization.Metadata.JsonPropertyInfo.Order> value,
             in which case the properties will be stable sorted by <xref:System.Text.Json.Serialization.Metadata.JsonPropertyInfo.Order>.
            
It's required that added <xref:System.Text.Json.Serialization.Metadata.JsonPropertyInfo> entries are unique up to <xref:System.Text.Json.Serialization.Metadata.JsonPropertyInfo.Name>,
             however this will only be validated on serialization, once the metadata instance gets locked for further modification.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Type" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Type" /> for which the JSON serialization contract is being defined.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnmappedMemberHandling">
      <MemberSignature Language="C#" Value="public System.Text.Json.Serialization.JsonUnmappedMemberHandling? UnmappedMemberHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Text.Json.Serialization.JsonUnmappedMemberHandling&gt; UnmappedMemberHandling" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.UnmappedMemberHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property UnmappedMemberHandling As Nullable(Of JsonUnmappedMemberHandling)" />
      <MemberSignature Language="F#" Value="member this.UnmappedMemberHandling : Nullable&lt;System.Text.Json.Serialization.JsonUnmappedMemberHandling&gt; with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.UnmappedMemberHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::Text::Json::Serialization::JsonUnmappedMemberHandling&gt; UnmappedMemberHandling { Nullable&lt;System::Text::Json::Serialization::JsonUnmappedMemberHandling&gt; get(); void set(Nullable&lt;System::Text::Json::Serialization::JsonUnmappedMemberHandling&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Text.Json.Serialization.JsonUnmappedMemberHandling&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type-level <see cref="T:System.Text.Json.Serialization.JsonUnmappedMemberHandling" /> override.</summary>
        <value>To be added.</value>
        <remarks>For contracts originating from <see cref="T:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver" /> or <see cref="T:System.Text.Json.Serialization.JsonSerializerContext" />, the value of this callback will be mapped from any <see cref="T:System.Text.Json.Serialization.JsonUnmappedMemberHandlingAttribute" /> annotations.</remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance has been locked for further modification.

-or-

Unmapped member handling is only supported for <see cref="F:System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.Object" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">An invalid <see cref="T:System.Text.Json.Serialization.JsonUnmappedMemberHandling" /> value was specified.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

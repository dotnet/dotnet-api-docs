<Type Name="JsonTypeInfo" FullName="System.Text.Json.Serialization.Metadata.JsonTypeInfo">
  <TypeSignature Language="C#" Value="public class JsonTypeInfo" FrameworkAlternate="net-6.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JsonTypeInfo extends System.Object" FrameworkAlternate="net-6.0" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonTypeInfo" FrameworkAlternate="net-6.0" />
  <TypeSignature Language="F#" Value="type JsonTypeInfo = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonTypeInfo" FrameworkAlternate="net-6.0" />
  <TypeSignature Language="C#" Value="public abstract class JsonTypeInfo" FrameworkAlternate="net-7.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JsonTypeInfo extends System.Object" FrameworkAlternate="net-7.0" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JsonTypeInfo" FrameworkAlternate="net-7.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonTypeInfo abstract" FrameworkAlternate="net-7.0" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides JSON serialization-related metadata about a type.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public System.Text.Json.Serialization.JsonConverter Converter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Json.Serialization.JsonConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Converter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Converter As JsonConverter" />
      <MemberSignature Language="F#" Value="member this.Converter : System.Text.Json.Serialization.JsonConverter" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.Converter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::Serialization::JsonConverter ^ Converter { System::Text::Json::Serialization::JsonConverter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.JsonConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Text.Json.Serialization.JsonConverter" /> associated with the current type.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

The <xref:System.Text.Json.Serialization.JsonConverter> associated with the type determines the value of <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Kind>,
            and by extension the types of metadata that are configurable in the current JSON contract.
            As such, the value of the converter cannot be changed once a <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo> instance has been created.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonPropertyInfo">
      <MemberSignature Language="C#" Value="public System.Text.Json.Serialization.Metadata.JsonPropertyInfo CreateJsonPropertyInfo (Type propertyType, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.Json.Serialization.Metadata.JsonPropertyInfo CreateJsonPropertyInfo(class System.Type propertyType, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.Metadata.JsonTypeInfo.CreateJsonPropertyInfo(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateJsonPropertyInfo (propertyType As Type, name As String) As JsonPropertyInfo" />
      <MemberSignature Language="F#" Value="member this.CreateJsonPropertyInfo : Type * string -&gt; System.Text.Json.Serialization.Metadata.JsonPropertyInfo" Usage="jsonTypeInfo.CreateJsonPropertyInfo (propertyType, name)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::Json::Serialization::Metadata::JsonPropertyInfo ^ CreateJsonPropertyInfo(Type ^ propertyType, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresDynamicCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresDynamicCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-7.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.Metadata.JsonPropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyType" Type="System.Type" Index="0" FrameworkAlternate="net-7.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="propertyType">The declared type for the property.</param>
        <param name="name">The property name used in JSON serialization and deserialization.</param>
        <summary>Creates a blank <see cref="T:System.Text.Json.Serialization.Metadata.JsonPropertyInfo" /> instance for the current <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" />.</summary>
        <returns>A blank <see cref="T:System.Text.Json.Serialization.Metadata.JsonPropertyInfo" /> instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="propertyType" /> or <paramref name="name" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="propertyType" /> cannot be used for serialization.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonTypeInfo">
      <MemberSignature Language="C#" Value="public static System.Text.Json.Serialization.Metadata.JsonTypeInfo CreateJsonTypeInfo (Type type, System.Text.Json.JsonSerializerOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.Serialization.Metadata.JsonTypeInfo CreateJsonTypeInfo(class System.Type type, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.Metadata.JsonTypeInfo.CreateJsonTypeInfo(System.Type,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonTypeInfo (type As Type, options As JsonSerializerOptions) As JsonTypeInfo" />
      <MemberSignature Language="F#" Value="static member CreateJsonTypeInfo : Type * System.Text.Json.JsonSerializerOptions -&gt; System.Text.Json.Serialization.Metadata.JsonTypeInfo" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.CreateJsonTypeInfo (type, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Json::Serialization::Metadata::JsonTypeInfo ^ CreateJsonTypeInfo(Type ^ type, System::Text::Json::JsonSerializerOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresDynamicCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresDynamicCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-7.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.Metadata.JsonTypeInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="net-7.0" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" Index="1" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="type">The type for which contract metadata is specified.</param>
        <param name="options">The <see cref="T:System.Text.Json.JsonSerializerOptions" /> instance the metadata is associated with.</param>
        <summary>Creates a blank <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance.</summary>
        <returns>A blank <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

The returned <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo> will be blank, with the exception of the
             <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Converter> property which will be resolved either from
             <xref:System.Text.Json.JsonSerializerOptions.Converters> or the built-in converters for the type.
             Any converters specified via <xref:System.Text.Json.Serialization.JsonConverterAttribute> on the type declaration
             will not be resolved by this method.
            
Which converter gets resolved influences the value of <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Kind>,
             which constrains the type of metadata that can be modified in the <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo> instance.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> or <paramref name="options" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> cannot be used for serialization.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonTypeInfo&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;T&gt; CreateJsonTypeInfo&lt;T&gt; (System.Text.Json.JsonSerializerOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.Serialization.Metadata.JsonTypeInfo`1&lt;!!T&gt; CreateJsonTypeInfo&lt;T&gt;(class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.Metadata.JsonTypeInfo.CreateJsonTypeInfo``1(System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonTypeInfo(Of T) (options As JsonSerializerOptions) As JsonTypeInfo(Of T)" />
      <MemberSignature Language="F#" Value="static member CreateJsonTypeInfo : System.Text.Json.JsonSerializerOptions -&gt; System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;'T&gt;" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.CreateJsonTypeInfo options" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Text::Json::Serialization::Metadata::JsonTypeInfo&lt;T&gt; ^ CreateJsonTypeInfo(System::Text::Json::JsonSerializerOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresDynamicCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresDynamicCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-7.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type for which contract metadata is specified.</typeparam>
        <param name="options">The <see cref="T:System.Text.Json.JsonSerializerOptions" /> instance the metadata is associated with.</param>
        <summary>Creates a blank <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo`1" /> instance.</summary>
        <returns>A blank <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo`1" /> instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

The returned <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo`1> will be blank, with the exception of the
             <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Converter> property, which will be resolved either from
             <xref:System.Text.Json.JsonSerializerOptions.Converters> or the built-in converters for the type.
             Any converters specified via <xref:System.Text.Json.Serialization.JsonConverterAttribute> on the type declaration
             will not be resolved by this method.
            
Which converter gets resolved influences the value of <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Kind>,
             which constrains the type of metadata that can be modified in the <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo> instance.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public Func&lt;object&gt;? CreateObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`1&lt;object&gt; CreateObject" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.CreateObject" />
      <MemberSignature Language="VB.NET" Value="Public Property CreateObject As Func(Of Object)" />
      <MemberSignature Language="F#" Value="member this.CreateObject : Func&lt;obj&gt; with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.CreateObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Object ^&gt; ^ CreateObject { Func&lt;System::Object ^&gt; ^ get(); void set(Func&lt;System::Object ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a parameterless factory to be used on deserialization.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

If set to `null`, any attempt to deserialize instances of the given type will result in an exception.
            
For contracts originating from <xref:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver> or <xref:System.Text.Json.Serialization.JsonSerializerContext>,
             types with a single default constructor or default constructors annotated with <xref:System.Text.Json.Serialization.JsonConstructorAttribute>
             will be mapped to this delegate.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance has been locked for further modification.

-or-

A parameterless factory is not supported for the current metadata <see cref="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Kind" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Kind">
      <MemberSignature Language="C#" Value="public System.Text.Json.Serialization.Metadata.JsonTypeInfoKind Kind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.Serialization.Metadata.JsonTypeInfoKind Kind" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Kind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Kind As JsonTypeInfoKind" />
      <MemberSignature Language="F#" Value="member this.Kind : System.Text.Json.Serialization.Metadata.JsonTypeInfoKind" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.Kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::Serialization::Metadata::JsonTypeInfoKind Kind { System::Text::Json::Serialization::Metadata::JsonTypeInfoKind get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.Metadata.JsonTypeInfoKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that describes the kind of contract metadata that the current instance specifies.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

The value of <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Kind> determines what aspects of the JSON contract are configurable.
             For example, it is only possible to configure the <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Properties> list for metadata
             of kind <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.Object>.
            
The value of <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Kind> is determined exclusively by the <xref:System.Text.Json.Serialization.JsonConverter>
             resolved for the current type, and cannot be changed once resolution has happened.
             User-defined custom converters (specified either via <xref:System.Text.Json.Serialization.JsonConverterAttribute> or <xref:System.Text.Json.JsonSerializerOptions.Converters>)
             are metadata-agnostic and thus always resolve to <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.None>.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberHandling">
      <MemberSignature Language="C#" Value="public System.Text.Json.Serialization.JsonNumberHandling? NumberHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Text.Json.Serialization.JsonNumberHandling&gt; NumberHandling" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.NumberHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberHandling As Nullable(Of JsonNumberHandling)" />
      <MemberSignature Language="F#" Value="member this.NumberHandling : Nullable&lt;System.Text.Json.Serialization.JsonNumberHandling&gt; with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.NumberHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::Text::Json::Serialization::JsonNumberHandling&gt; NumberHandling { Nullable&lt;System::Text::Json::Serialization::JsonNumberHandling&gt; get(); void set(Nullable&lt;System::Text::Json::Serialization::JsonNumberHandling&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Text.Json.Serialization.JsonNumberHandling&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type-level <see cref="P:System.Text.Json.JsonSerializerOptions.NumberHandling" /> override.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

For contracts originating from <xref:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver> or <xref:System.Text.Json.Serialization.JsonSerializerContext>,
            the value of this callback will be mapped from any <xref:System.Text.Json.Serialization.JsonNumberHandling> annotations.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance has been locked for further modification.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialized">
      <MemberSignature Language="C#" Value="public Action&lt;object&gt;? OnDeserialized { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;object&gt; OnDeserialized" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.OnDeserialized" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDeserialized As Action(Of Object)" />
      <MemberSignature Language="F#" Value="member this.OnDeserialized : Action&lt;obj&gt; with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.OnDeserialized" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Object ^&gt; ^ OnDeserialized { Action&lt;System::Object ^&gt; ^ get(); void set(Action&lt;System::Object ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a callback to be invoked after deserialization occurs.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

For contracts originating from <xref:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver> or <xref:System.Text.Json.Serialization.JsonSerializerContext>,
             the value of this callback will be mapped from any <xref:System.Text.Json.Serialization.IJsonOnDeserialized> implementation on the type.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance has been locked for further modification.

-or-

Serialization callbacks are only supported for <see cref="F:System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.Object" /> metadata.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnDeserializing">
      <MemberSignature Language="C#" Value="public Action&lt;object&gt;? OnDeserializing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;object&gt; OnDeserializing" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.OnDeserializing" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDeserializing As Action(Of Object)" />
      <MemberSignature Language="F#" Value="member this.OnDeserializing : Action&lt;obj&gt; with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.OnDeserializing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Object ^&gt; ^ OnDeserializing { Action&lt;System::Object ^&gt; ^ get(); void set(Action&lt;System::Object ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a callback to be invoked before deserialization occurs.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

For contracts originating from <xref:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver> or <xref:System.Text.Json.Serialization.JsonSerializerContext>,
             the value of this callback will be mapped from any <xref:System.Text.Json.Serialization.IJsonOnDeserializing> implementation on the type.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance has been locked for further modification.

-or-

Serialization callbacks are only supported for <see cref="F:System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.Object" /> metadata.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnSerialized">
      <MemberSignature Language="C#" Value="public Action&lt;object&gt;? OnSerialized { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;object&gt; OnSerialized" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.OnSerialized" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSerialized As Action(Of Object)" />
      <MemberSignature Language="F#" Value="member this.OnSerialized : Action&lt;obj&gt; with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.OnSerialized" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Object ^&gt; ^ OnSerialized { Action&lt;System::Object ^&gt; ^ get(); void set(Action&lt;System::Object ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a callback to be invoked after serialization occurs.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

For contracts originating from <xref:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver> or <xref:System.Text.Json.Serialization.JsonSerializerContext>,
             the value of this callback will be mapped from any <xref:System.Text.Json.Serialization.IJsonOnSerialized> implementation on the type.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance has been locked for further modification.

-or-

Serialization callbacks are only supported for <see cref="F:System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.Object" /> metadata.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnSerializing">
      <MemberSignature Language="C#" Value="public Action&lt;object&gt;? OnSerializing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;object&gt; OnSerializing" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.OnSerializing" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSerializing As Action(Of Object)" />
      <MemberSignature Language="F#" Value="member this.OnSerializing : Action&lt;obj&gt; with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.OnSerializing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Object ^&gt; ^ OnSerializing { Action&lt;System::Object ^&gt; ^ get(); void set(Action&lt;System::Object ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a callback to be invoked before serialization occurs.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

For contracts originating from <xref:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver> or <xref:System.Text.Json.Serialization.JsonSerializerContext>,
             the value of this callback will be mapped from any <xref:System.Text.Json.Serialization.IJsonOnSerializing> implementation on the type.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance has been locked for further modification.

-or-

Serialization callbacks are only supported for <see cref="F:System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.Object" /> metadata.</exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonSerializerOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Json.JsonSerializerOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As JsonSerializerOptions" />
      <MemberSignature Language="F#" Value="member this.Options : System.Text.Json.JsonSerializerOptions" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.Options" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonSerializerOptions ^ Options { System::Text::Json::JsonSerializerOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonSerializerOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Text.Json.JsonSerializerOptions" /> value associated with the current <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PolymorphismOptions">
      <MemberSignature Language="C#" Value="public System.Text.Json.Serialization.Metadata.JsonPolymorphismOptions? PolymorphismOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Json.Serialization.Metadata.JsonPolymorphismOptions PolymorphismOptions" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.PolymorphismOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property PolymorphismOptions As JsonPolymorphismOptions" />
      <MemberSignature Language="F#" Value="member this.PolymorphismOptions : System.Text.Json.Serialization.Metadata.JsonPolymorphismOptions with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.PolymorphismOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::Serialization::Metadata::JsonPolymorphismOptions ^ PolymorphismOptions { System::Text::Json::Serialization::Metadata::JsonPolymorphismOptions ^ get(); void set(System::Text::Json::Serialization::Metadata::JsonPolymorphismOptions ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.Metadata.JsonPolymorphismOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a configuration object specifying polymorphism metadata.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

For contracts originating from <xref:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver> or <xref:System.Text.Json.Serialization.JsonSerializerContext>,
             the configuration of this setting will be mapped from any <xref:System.Text.Json.Serialization.JsonDerivedTypeAttribute> or <xref:System.Text.Json.Serialization.JsonPolymorphicAttribute> annotations.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> has been associated with a different <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> instance has been locked for further modification.

-or-

Polymorphic serialization is not supported for the current metadata <see cref="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Kind" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Text.Json.Serialization.Metadata.JsonPropertyInfo&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Text.Json.Serialization.Metadata.JsonPropertyInfo&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IList(Of JsonPropertyInfo)" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.IList&lt;System.Text.Json.Serialization.Metadata.JsonPropertyInfo&gt;" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.Properties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Text::Json::Serialization::Metadata::JsonPropertyInfo ^&gt; ^ Properties { System::Collections::Generic::IList&lt;System::Text::Json::Serialization::Metadata::JsonPropertyInfo ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Text.Json.Serialization.Metadata.JsonPropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the list of <see cref="T:System.Text.Json.Serialization.Metadata.JsonPropertyInfo" /> metadata corresponding to the current type.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This property is only applicable to metadata of kind <xref:System.Text.Json.Serialization.Metadata.JsonTypeInfoKind.Object>.
             For other kinds, an empty, read-only list will be returned.
            
The order of <xref:System.Text.Json.Serialization.Metadata.JsonPropertyInfo> entries in the list determines the serialization order,
             unless either of the entries specifies a non-zero <xref:System.Text.Json.Serialization.Metadata.JsonPropertyInfo.Order> value,
             in which case the properties will be stable sorted by <xref:System.Text.Json.Serialization.Metadata.JsonPropertyInfo.Order>.
            
It's required that added <xref:System.Text.Json.Serialization.Metadata.JsonPropertyInfo> entries are unique up to <xref:System.Text.Json.Serialization.Metadata.JsonPropertyInfo.Name>,
             however this will only be validated on serialization, once the metadata instance gets locked for further modification.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Type" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfo.Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="P:System.Text.Json.Serialization.Metadata.JsonTypeInfo.Type" /> for which the JSON serialization contract is being defined.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="JsonTypeInfoResolver" FullName="System.Text.Json.Serialization.Metadata.JsonTypeInfoResolver">
  <TypeSignature Language="C#" Value="public static class JsonTypeInfoResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit JsonTypeInfoResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.Serialization.Metadata.JsonTypeInfoResolver" />
  <TypeSignature Language="VB.NET" Value="Public Module JsonTypeInfoResolver" />
  <TypeSignature Language="F#" Value="type JsonTypeInfoResolver = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonTypeInfoResolver abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contains utilities and combinators acting on <see cref="T:System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver Combine (scoped ReadOnlySpan&lt;System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver?&gt; resolvers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver Combine(valuetype System.ReadOnlySpan`1&lt;class System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver&gt; resolvers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.Metadata.JsonTypeInfoResolver.Combine(System.ReadOnlySpan{System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver})" />
      <MemberSignature Language="VB.NET" Value="Public Function Combine (resolvers As ReadOnlySpan(Of IJsonTypeInfoResolver)) As IJsonTypeInfoResolver" />
      <MemberSignature Language="F#" Value="static member Combine : ReadOnlySpan&lt;System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver&gt; -&gt; System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfoResolver.Combine resolvers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Json::Serialization::Metadata::IJsonTypeInfoResolver ^ Combine(ReadOnlySpan&lt;System::Text::Json::Serialization::Metadata::IJsonTypeInfoResolver ^&gt; resolvers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolvers" Type="System.ReadOnlySpan&lt;System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver&gt;" Index="0" FrameworkAlternate="net-8.0;net-9.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-4.8.1;netstandard-2.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 2 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 2 })&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.ScopedRef]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.ScopedRef&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.ParamCollection]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.ParamCollection&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="resolvers">Sequence of contract resolvers to be queried for metadata.</param>
        <summary>Combines multiple <see cref="T:System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver" /> sources into one.</summary>
        <returns>A <see cref="T:System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver" /> combining results from <paramref name="resolvers" />.</returns>
        <remarks>
          <para>The combined resolver will query each of <paramref name="resolvers" /> in the specified order,</para>
          <para>returning the first result that is non-null. If all <paramref name="resolvers" /> return <see langword="null" />,</para>
          <para>then the combined resolver will also return <see langword="null" />.</para>
          <para>Can be used to combine multiple <see cref="T:System.Text.Json.Serialization.JsonSerializerContext" /> sources,</para>
          <para>which typically define contract metadata for small subsets of types.</para>
          <para>It can also be used to fall back to <see cref="T:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver" /> wherever necessary.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver Combine (params System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver?[] resolvers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver Combine(class System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver[] resolvers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.Metadata.JsonTypeInfoResolver.Combine(System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Combine (ParamArray resolvers As IJsonTypeInfoResolver()) As IJsonTypeInfoResolver" />
      <MemberSignature Language="F#" Value="static member Combine : System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver[] -&gt; System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfoResolver.Combine resolvers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Json::Serialization::Metadata::IJsonTypeInfoResolver ^ Combine(... cli::array &lt;System::Text::Json::Serialization::Metadata::IJsonTypeInfoResolver ^&gt; ^ resolvers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolvers" Type="System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="resolvers">Sequence of contract resolvers to be queried for metadata.</param>
        <summary>Combines multiple <see cref="T:System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver" /> sources into one.</summary>
        <returns>A <see cref="T:System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver" /> combining results from <paramref name="resolvers" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

The combined resolver will query each of `resolvers` in the specified order,
             returning the first result that is non-null. If all `resolvers` return `null`,
             then the combined resolver will also return `null`.
            
Can be used to combine multiple <xref:System.Text.Json.Serialization.JsonSerializerContext> sources,
             which typically define contract metadata for small subsets of types.
             It can also be used to fall back to <xref:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver> wherever necessary.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resolvers" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WithAddedModifier">
      <MemberSignature Language="C#" Value="public static System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver WithAddedModifier (this System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver resolver, Action&lt;System.Text.Json.Serialization.Metadata.JsonTypeInfo&gt; modifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver WithAddedModifier(class System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver resolver, class System.Action`1&lt;class System.Text.Json.Serialization.Metadata.JsonTypeInfo&gt; modifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.Metadata.JsonTypeInfoResolver.WithAddedModifier(System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver,System.Action{System.Text.Json.Serialization.Metadata.JsonTypeInfo})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithAddedModifier (resolver As IJsonTypeInfoResolver, modifier As Action(Of JsonTypeInfo)) As IJsonTypeInfoResolver" />
      <MemberSignature Language="F#" Value="static member WithAddedModifier : System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver * Action&lt;System.Text.Json.Serialization.Metadata.JsonTypeInfo&gt; -&gt; System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver" Usage="System.Text.Json.Serialization.Metadata.JsonTypeInfoResolver.WithAddedModifier (resolver, modifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Text::Json::Serialization::Metadata::IJsonTypeInfoResolver ^ WithAddedModifier(System::Text::Json::Serialization::Metadata::IJsonTypeInfoResolver ^ resolver, Action&lt;System::Text::Json::Serialization::Metadata::JsonTypeInfo ^&gt; ^ modifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver" RefType="this" />
        <Parameter Name="modifier" Type="System.Action&lt;System.Text.Json.Serialization.Metadata.JsonTypeInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="resolver">The source resolver generating <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> metadata.</param>
        <param name="modifier">The delegate that modifies non-<see langword="null" /><see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> results.</param>
        <summary>Creates a resolver and applies modifications to the metadata generated by the source <paramref name="resolver" />.</summary>
        <returns>A new <see cref="T:System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver" /> instance with modifications applied.</returns>
        <remarks>This method is closely related to the <see cref="P:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver.Modifiers" /> property extended to arbitrary <see cref="T:System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver" /> instances.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

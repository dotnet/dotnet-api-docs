<Type Name="DefaultJsonTypeInfoResolver" FullName="System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver">
  <TypeSignature Language="C#" Value="public class DefaultJsonTypeInfoResolver : System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultJsonTypeInfoResolver extends System.Object implements class System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultJsonTypeInfoResolver&#xA;Implements IJsonTypeInfoResolver" />
  <TypeSignature Language="F#" Value="type DefaultJsonTypeInfoResolver = class&#xA;    interface IJsonTypeInfoResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultJsonTypeInfoResolver : System::Text::Json::Serialization::Metadata::IJsonTypeInfoResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Defines the default, reflection-based JSON contract resolver used by System.Text.Json.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

The contract resolver used by <xref:System.Text.Json.JsonSerializerOptions.Default>.

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultJsonTypeInfoResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultJsonTypeInfoResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresDynamicCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresDynamicCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a mutable <see cref="T:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver" /> instance.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public virtual System.Text.Json.Serialization.Metadata.JsonTypeInfo GetTypeInfo (Type type, System.Text.Json.JsonSerializerOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Json.Serialization.Metadata.JsonTypeInfo GetTypeInfo(class System.Type type, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver.GetTypeInfo(System.Type,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeInfo (type As Type, options As JsonSerializerOptions) As JsonTypeInfo" />
      <MemberSignature Language="F#" Value="abstract member GetTypeInfo : Type * System.Text.Json.JsonSerializerOptions -&gt; System.Text.Json.Serialization.Metadata.JsonTypeInfo&#xA;override this.GetTypeInfo : Type * System.Text.Json.JsonSerializerOptions -&gt; System.Text.Json.Serialization.Metadata.JsonTypeInfo" Usage="defaultJsonTypeInfoResolver.GetTypeInfo (type, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Json::Serialization::Metadata::JsonTypeInfo ^ GetTypeInfo(Type ^ type, System::Text::Json::JsonSerializerOptions ^ options);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver.GetTypeInfo(System.Type,System.Text.Json.JsonSerializerOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.Metadata.JsonTypeInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="type">The type for which to resolve a JSON contract.</param>
        <param name="options">A <see cref="T:System.Text.Json.JsonSerializerOptions" /> instance used to determine contract configuration.</param>
        <summary>Resolves a JSON contract for a given <paramref name="type" /> and <paramref name="options" /> configuration.</summary>
        <returns>A <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> defining a reflection-derived JSON contract for <paramref name="type" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

The base implementation of this method will produce a reflection-derived contract
            and apply any callbacks from the <xref:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver.Modifiers> list.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> or <paramref name="options" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Action&lt;System.Text.Json.Serialization.Metadata.JsonTypeInfo&gt;&gt; Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Action`1&lt;class System.Text.Json.Serialization.Metadata.JsonTypeInfo&gt;&gt; Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As IList(Of Action(Of JsonTypeInfo))" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Collections.Generic.IList&lt;Action&lt;System.Text.Json.Serialization.Metadata.JsonTypeInfo&gt;&gt;" Usage="System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver.Modifiers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Action&lt;System::Text::Json::Serialization::Metadata::JsonTypeInfo ^&gt; ^&gt; ^ Modifiers { System::Collections::Generic::IList&lt;Action&lt;System::Text::Json::Serialization::Metadata::JsonTypeInfo ^&gt; ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Action&lt;System.Text.Json.Serialization.Metadata.JsonTypeInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a list of user-defined callbacks that can be used to modify the initial contract.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

The modifier list will be rendered immutable after the first <xref:System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver.GetTypeInfo(System.Type,System.Text.Json.JsonSerializerOptions)> invocation.
            
Modifier callbacks are called consecutively in the order in which they're specified in the list.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

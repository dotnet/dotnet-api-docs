<Type Name="JsonObjectInfoValues&lt;T&gt;" FullName="System.Text.Json.Serialization.Metadata.JsonObjectInfoValues&lt;T&gt;">
  <TypeSignature Language="C#" Value="public sealed class JsonObjectInfoValues&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit JsonObjectInfoValues`1&lt;T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.Serialization.Metadata.JsonObjectInfoValues`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JsonObjectInfoValues(Of T)" />
  <TypeSignature Language="F#" Value="type JsonObjectInfoValues&lt;'T&gt; = class" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class JsonObjectInfoValues sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-7.0">
      <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">The object type to serialize or deserialize.</typeparam>
    <summary>Provides serialization metadata about an object type with constructors, properties, and fields.</summary>
    <remarks>This API is intended for use by the output of the System.Text.Json source generator and should not be called directly.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonObjectInfoValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.Metadata.JsonObjectInfoValues`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonObjectInfoValues();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructorParameterMetadataInitializer">
      <MemberSignature Language="C#" Value="public Func&lt;System.Text.Json.Serialization.Metadata.JsonParameterInfoValues[]&gt;? ConstructorParameterMetadataInitializer { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`1&lt;class System.Text.Json.Serialization.Metadata.JsonParameterInfoValues[]&gt; ConstructorParameterMetadataInitializer" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonObjectInfoValues`1.ConstructorParameterMetadataInitializer" />
      <MemberSignature Language="VB.NET" Value="Public Property ConstructorParameterMetadataInitializer As Func(Of JsonParameterInfoValues())" />
      <MemberSignature Language="F#" Value="member this.ConstructorParameterMetadataInitializer : Func&lt;System.Text.Json.Serialization.Metadata.JsonParameterInfoValues[]&gt; with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonObjectInfoValues&lt;'T&gt;.ConstructorParameterMetadataInitializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;cli::array &lt;System::Text::Json::Serialization::Metadata::JsonParameterInfoValues ^&gt; ^&gt; ^ ConstructorParameterMetadataInitializer { Func&lt;cli::array &lt;System::Text::Json::Serialization::Metadata::JsonParameterInfoValues ^&gt; ^&gt; ^ get(); void set(Func&lt;cli::array &lt;System::Text::Json::Serialization::Metadata::JsonParameterInfoValues ^&gt; ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Text.Json.Serialization.Metadata.JsonParameterInfoValues[]&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Provides a mechanism to initialize metadata for a parameterized constructor of the class or struct to be used when deserializing.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This API is for use by the output of the System.Text.Json source generator and should not be called directly.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberHandling">
      <MemberSignature Language="C#" Value="public System.Text.Json.Serialization.JsonNumberHandling NumberHandling { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.Serialization.JsonNumberHandling NumberHandling" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonObjectInfoValues`1.NumberHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberHandling As JsonNumberHandling" />
      <MemberSignature Language="F#" Value="member this.NumberHandling : System.Text.Json.Serialization.JsonNumberHandling with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonObjectInfoValues&lt;'T&gt;.NumberHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::Serialization::JsonNumberHandling NumberHandling { System::Text::Json::Serialization::JsonNumberHandling get(); void set(System::Text::Json::Serialization::JsonNumberHandling value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.JsonNumberHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets an object that specifies how number properties and fields should be processed when serializing and deserializing.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This API is for use by the output of the System.Text.Json source generator and should not be called directly.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectCreator">
      <MemberSignature Language="C#" Value="public Func&lt;T&gt;? ObjectCreator { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`1&lt;!T&gt; ObjectCreator" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonObjectInfoValues`1.ObjectCreator" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectCreator As Func(Of T)" />
      <MemberSignature Language="F#" Value="member this.ObjectCreator : Func&lt;'T&gt; with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonObjectInfoValues&lt;'T&gt;.ObjectCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;T&gt; ^ ObjectCreator { Func&lt;T&gt; ^ get(); void set(Func&lt;T&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a mechanism to create an instance of the class or struct using a parameterless constructor during deserialization.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This API is for use by the output of the System.Text.Json source generator and should not be called directly.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectWithParameterizedConstructorCreator">
      <MemberSignature Language="C#" Value="public Func&lt;object[],T&gt;? ObjectWithParameterizedConstructorCreator { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;object[], !T&gt; ObjectWithParameterizedConstructorCreator" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonObjectInfoValues`1.ObjectWithParameterizedConstructorCreator" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectWithParameterizedConstructorCreator As Func(Of Object(), T)" />
      <MemberSignature Language="F#" Value="member this.ObjectWithParameterizedConstructorCreator : Func&lt;obj[], 'T&gt; with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonObjectInfoValues&lt;'T&gt;.ObjectWithParameterizedConstructorCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;cli::array &lt;System::Object ^&gt; ^, T&gt; ^ ObjectWithParameterizedConstructorCreator { Func&lt;cli::array &lt;System::Object ^&gt; ^, T&gt; ^ get(); void set(Func&lt;cli::array &lt;System::Object ^&gt; ^, T&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Object[],T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a mechanism to create an instance of the class or struct using a parameterized constructor during deserialization.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This API is for use by the output of the System.Text.Json source generator and should not be called directly.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyMetadataInitializer">
      <MemberSignature Language="C#" Value="public Func&lt;System.Text.Json.Serialization.JsonSerializerContext,System.Text.Json.Serialization.Metadata.JsonPropertyInfo[]&gt;? PropertyMetadataInitializer { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Text.Json.Serialization.JsonSerializerContext, class System.Text.Json.Serialization.Metadata.JsonPropertyInfo[]&gt; PropertyMetadataInitializer" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonObjectInfoValues`1.PropertyMetadataInitializer" />
      <MemberSignature Language="VB.NET" Value="Public Property PropertyMetadataInitializer As Func(Of JsonSerializerContext, JsonPropertyInfo())" />
      <MemberSignature Language="F#" Value="member this.PropertyMetadataInitializer : Func&lt;System.Text.Json.Serialization.JsonSerializerContext, System.Text.Json.Serialization.Metadata.JsonPropertyInfo[]&gt; with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonObjectInfoValues&lt;'T&gt;.PropertyMetadataInitializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Text::Json::Serialization::JsonSerializerContext ^, cli::array &lt;System::Text::Json::Serialization::Metadata::JsonPropertyInfo ^&gt; ^&gt; ^ PropertyMetadataInitializer { Func&lt;System::Text::Json::Serialization::JsonSerializerContext ^, cli::array &lt;System::Text::Json::Serialization::Metadata::JsonPropertyInfo ^&gt; ^&gt; ^ get(); void set(Func&lt;System::Text::Json::Serialization::JsonSerializerContext ^, cli::array &lt;System::Text::Json::Serialization::Metadata::JsonPropertyInfo ^&gt; ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Text.Json.Serialization.JsonSerializerContext,System.Text.Json.Serialization.Metadata.JsonPropertyInfo[]&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a mechanism to initialize metadata for properties and fields of the class or struct.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This API is for use by the output of the System.Text.Json source generator and should not be called directly.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeHandler">
      <MemberSignature Language="C#" Value="public Action&lt;System.Text.Json.Utf8JsonWriter,T&gt;? SerializeHandler { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`2&lt;class System.Text.Json.Utf8JsonWriter, !T&gt; SerializeHandler" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.Metadata.JsonObjectInfoValues`1.SerializeHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializeHandler As Action(Of Utf8JsonWriter, T)" />
      <MemberSignature Language="F#" Value="member this.SerializeHandler : Action&lt;System.Text.Json.Utf8JsonWriter, 'T&gt; with get, set" Usage="System.Text.Json.Serialization.Metadata.JsonObjectInfoValues&lt;'T&gt;.SerializeHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Text::Json::Utf8JsonWriter ^, T&gt; ^ SerializeHandler { Action&lt;System::Text::Json::Utf8JsonWriter ^, T&gt; ^ get(); void set(Action&lt;System::Text::Json::Utf8JsonWriter ^, T&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Text.Json.Utf8JsonWriter,T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a serialization implementation for instances of the class or struct that assumes options specified by <see cref="T:System.Text.Json.Serialization.JsonSourceGenerationOptionsAttribute" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This API is for use by the output of the System.Text.Json source generator and should not be called directly.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

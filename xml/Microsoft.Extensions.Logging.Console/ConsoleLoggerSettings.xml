<Type Name="ConsoleLoggerSettings" FullName="Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings">
  <TypeSignature Language="C#" Value="public class ConsoleLoggerSettings : Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConsoleLoggerSettings extends System.Object implements class Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class ConsoleLoggerSettings&#xA;Implements IConsoleLoggerSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConsoleLoggerSettings : Microsoft::Extensions::Logging::Console::IConsoleLoggerSettings" />
  <TypeSignature Language="F#" Value="type ConsoleLoggerSettings = class&#xA;    interface IConsoleLoggerSettings" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-plat-ext-2.2">
      <AttributeName>System.Obsolete("This type is obsolete and will be removed in a future version. The recommended alternative is ConsoleLoggerOptions.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleLoggerSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleLoggerSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeToken">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.IChangeToken ChangeToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Primitives.IChangeToken ChangeToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.ChangeToken" />
      <MemberSignature Language="VB.NET" Value="Public Property ChangeToken As IChangeToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Primitives::IChangeToken ^ ChangeToken { Microsoft::Extensions::Primitives::IChangeToken ^ get(); void set(Microsoft::Extensions::Primitives::IChangeToken ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ChangeToken : Microsoft.Extensions.Primitives.IChangeToken with get, set" Usage="Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.ChangeToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.IChangeToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableColors">
      <MemberSignature Language="C#" Value="public bool DisableColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableColors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.DisableColors" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableColors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableColors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisableColors : bool with get, set" Usage="Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.DisableColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeScopes">
      <MemberSignature Language="C#" Value="public bool IncludeScopes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeScopes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.IncludeScopes" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeScopes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeScopes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeScopes : bool with get, set" Usage="Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.IncludeScopes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Function Reload () As IConsoleLoggerSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::Logging::Console::IConsoleLoggerSettings ^ Reload();" />
      <MemberSignature Language="F#" Value="abstract member Reload : unit -&gt; Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings&#xA;override this.Reload : unit -&gt; Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings" Usage="consoleLoggerSettings.Reload " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.Reload</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Switches">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Extensions.Logging.LogLevel&gt; Switches { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, valuetype Microsoft.Extensions.Logging.LogLevel&gt; Switches" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.Switches" />
      <MemberSignature Language="VB.NET" Value="Public Property Switches As IDictionary(Of String, LogLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::Logging::LogLevel&gt; ^ Switches { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::Logging::LogLevel&gt; ^ get(); void set(System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::Logging::LogLevel&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Switches : System.Collections.Generic.IDictionary&lt;string, Microsoft.Extensions.Logging.LogLevel&gt; with get, set" Usage="Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.Switches" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Extensions.Logging.LogLevel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetSwitch">
      <MemberSignature Language="C#" Value="public bool TryGetSwitch (string name, out Microsoft.Extensions.Logging.LogLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetSwitch(string name, [out] valuetype Microsoft.Extensions.Logging.LogLevel&amp; level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetSwitch (name As String, ByRef level As LogLevel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetSwitch(System::String ^ name, [Runtime::InteropServices::Out] Microsoft::Extensions::Logging::LogLevel % level);" />
      <MemberSignature Language="F#" Value="abstract member TryGetSwitch : string * LogLevel -&gt; bool&#xA;override this.TryGetSwitch : string * LogLevel -&gt; bool" Usage="consoleLoggerSettings.TryGetSwitch (name, level)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="level" Type="Microsoft.Extensions.Logging.LogLevel" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="level">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ConfigurationConsoleLoggerSettings" FullName="Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings">
  <TypeSignature Language="C#" Value="public class ConfigurationConsoleLoggerSettings : Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConfigurationConsoleLoggerSettings extends System.Object implements class Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationConsoleLoggerSettings&#xA;Implements IConsoleLoggerSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationConsoleLoggerSettings : Microsoft::Extensions::Logging::Console::IConsoleLoggerSettings" />
  <TypeSignature Language="F#" Value="type ConfigurationConsoleLoggerSettings = class&#xA;    interface IConsoleLoggerSettings" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-plat-ext-2.2">
      <AttributeName Language="C#">[System.Obsolete("This type is obsolete and will be removed in a future version. The recommended alternative is ConsoleLoggerOptions.")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("This type is obsolete and will be removed in a future version. The recommended alternative is ConsoleLoggerOptions.")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationConsoleLoggerSettings (Microsoft.Extensions.Configuration.IConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Configuration.IConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.#ctor(Microsoft.Extensions.Configuration.IConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configuration As IConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConfigurationConsoleLoggerSettings(Microsoft::Extensions::Configuration::IConfiguration ^ configuration);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings : Microsoft.Extensions.Configuration.IConfiguration -&gt; Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings" Usage="new Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings configuration" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configuration" Type="Microsoft.Extensions.Configuration.IConfiguration" />
      </Parameters>
      <Docs>
        <param name="configuration">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeToken">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.IChangeToken ChangeToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Primitives.IChangeToken ChangeToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.ChangeToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangeToken As IChangeToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Primitives::IChangeToken ^ ChangeToken { Microsoft::Extensions::Primitives::IChangeToken ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChangeToken : Microsoft.Extensions.Primitives.IChangeToken" Usage="Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.ChangeToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.IChangeToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeScopes">
      <MemberSignature Language="C#" Value="public bool IncludeScopes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeScopes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.IncludeScopes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeScopes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeScopes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IncludeScopes : bool" Usage="Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.IncludeScopes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.IncludeScopes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Function Reload () As IConsoleLoggerSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::Logging::Console::IConsoleLoggerSettings ^ Reload();" />
      <MemberSignature Language="F#" Value="abstract member Reload : unit -&gt; Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings&#xA;override this.Reload : unit -&gt; Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings" Usage="configurationConsoleLoggerSettings.Reload " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.Reload</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetSwitch">
      <MemberSignature Language="C#" Value="public bool TryGetSwitch (string name, out Microsoft.Extensions.Logging.LogLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetSwitch(string name, [out] valuetype Microsoft.Extensions.Logging.LogLevel&amp; level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetSwitch (name As String, ByRef level As LogLevel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetSwitch(System::String ^ name, [Runtime::InteropServices::Out] Microsoft::Extensions::Logging::LogLevel % level);" />
      <MemberSignature Language="F#" Value="abstract member TryGetSwitch : string * LogLevel -&gt; bool&#xA;override this.TryGetSwitch : string * LogLevel -&gt; bool" Usage="configurationConsoleLoggerSettings.TryGetSwitch (name, level)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="level" Type="Microsoft.Extensions.Logging.LogLevel" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="level">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="SimpleConsoleFormatterOptions" FullName="Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions">
  <TypeSignature Language="C#" Value="public class SimpleConsoleFormatterOptions : Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SimpleConsoleFormatterOptions extends Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class SimpleConsoleFormatterOptions&#xA;Inherits ConsoleFormatterOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class SimpleConsoleFormatterOptions : Microsoft::Extensions::Logging::Console::ConsoleFormatterOptions" />
  <TypeSignature Language="F#" Value="type SimpleConsoleFormatterOptions = class&#xA;    inherit ConsoleFormatterOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Options for the built-in default console log formatter.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleConsoleFormatterOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SimpleConsoleFormatterOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorBehavior">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.Console.LoggerColorBehavior ColorBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Logging.Console.LoggerColorBehavior ColorBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions.ColorBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property ColorBehavior As LoggerColorBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Logging::Console::LoggerColorBehavior ColorBehavior { Microsoft::Extensions::Logging::Console::LoggerColorBehavior get(); void set(Microsoft::Extensions::Logging::Console::LoggerColorBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.ColorBehavior : Microsoft.Extensions.Logging.Console.LoggerColorBehavior with get, set" Usage="Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions.ColorBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.Console.LoggerColorBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determines when to use color when logging messages.</summary>
        <value>An object that determines the logger color behavior.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleLine">
      <MemberSignature Language="C#" Value="public bool SingleLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SingleLine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions.SingleLine" />
      <MemberSignature Language="VB.NET" Value="Public Property SingleLine As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SingleLine { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SingleLine : bool with get, set" Usage="Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions.SingleLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether the entire message gets logged in a single line or not.</summary>
        <value><see langword="true" /> to log the entire message in a single line; <see langword="false" /> otherwise..</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ConsoleLoggerOptions" FullName="Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions">
  <TypeSignature Language="C#" Value="public class ConsoleLoggerOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConsoleLoggerOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ConsoleLoggerOptions" />
  <TypeSignature Language="F#" Value="type ConsoleLoggerOptions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConsoleLoggerOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Options for a <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleLoggerOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleLoggerOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableColors">
      <MemberSignature Language="C#" Value="public bool DisableColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableColors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.DisableColors" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableColors As Boolean" />
      <MemberSignature Language="F#" Value="member this.DisableColors : bool with get, set" Usage="Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.DisableColors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableColors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("ConsoleLoggerOptions.DisableColors has been deprecated. Use SimpleConsoleFormatterOptions.ColorBehavior instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("ConsoleLoggerOptions.DisableColors has been deprecated. Use SimpleConsoleFormatterOptions.ColorBehavior instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that indicates whether colors are disabled.
            </summary>
        <value>
          <see langword="true" /> if colors are disabled.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.Console.ConsoleLoggerFormat Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Logging.Console.ConsoleLoggerFormat Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As ConsoleLoggerFormat" />
      <MemberSignature Language="F#" Value="member this.Format : Microsoft.Extensions.Logging.Console.ConsoleLoggerFormat with get, set" Usage="Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.Format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Logging::Console::ConsoleLoggerFormat Format { Microsoft::Extensions::Logging::Console::ConsoleLoggerFormat get(); void set(Microsoft::Extensions::Logging::Console::ConsoleLoggerFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("ConsoleLoggerOptions.Format has been deprecated. Use ConsoleLoggerOptions.FormatterName instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("ConsoleLoggerOptions.Format has been deprecated. Use ConsoleLoggerOptions.FormatterName instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.Console.ConsoleLoggerFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the log message format.
            </summary>
        <value>
            The default value is <see cref="F:Microsoft.Extensions.Logging.Console.ConsoleLoggerFormat.Default" />.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatterName">
      <MemberSignature Language="C#" Value="public string? FormatterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormatterName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.FormatterName" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatterName As String" />
      <MemberSignature Language="F#" Value="member this.FormatterName : string with get, set" Usage="Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.FormatterName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormatterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the log message formatter to use.
            </summary>
        <value>
            The default value is <see langword="simple" />.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeScopes">
      <MemberSignature Language="C#" Value="public bool IncludeScopes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeScopes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.IncludeScopes" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeScopes As Boolean" />
      <MemberSignature Language="F#" Value="member this.IncludeScopes : bool with get, set" Usage="Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.IncludeScopes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeScopes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("ConsoleLoggerOptions.IncludeScopes has been deprecated. Use ConsoleFormatterOptions.IncludeScopes instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("ConsoleLoggerOptions.IncludeScopes has been deprecated. Use ConsoleFormatterOptions.IncludeScopes instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that indicates whether scopes are included.
            </summary>
        <value>
          <see langword="true" /> if scopes are included.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogToStandardErrorThreshold">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.LogLevel LogToStandardErrorThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Logging.LogLevel LogToStandardErrorThreshold" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.LogToStandardErrorThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property LogToStandardErrorThreshold As LogLevel" />
      <MemberSignature Language="F#" Value="member this.LogToStandardErrorThreshold : Microsoft.Extensions.Logging.LogLevel with get, set" Usage="Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.LogToStandardErrorThreshold" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Logging::LogLevel LogToStandardErrorThreshold { Microsoft::Extensions::Logging::LogLevel get(); void set(Microsoft::Extensions::Logging::LogLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LogLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets value indicating the minimum level of messages that get written to <c>Console.Error</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxQueueLength">
      <MemberSignature Language="C#" Value="public int MaxQueueLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxQueueLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.MaxQueueLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxQueueLength As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxQueueLength : int with get, set" Usage="Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.MaxQueueLength" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxQueueLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the maximum number of enqueued messages.
            </summary>
        <value>
            The default value is 2500.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueFullMode">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.Console.ConsoleLoggerQueueFullMode QueueFullMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Logging.Console.ConsoleLoggerQueueFullMode QueueFullMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.QueueFullMode" />
      <MemberSignature Language="VB.NET" Value="Public Property QueueFullMode As ConsoleLoggerQueueFullMode" />
      <MemberSignature Language="F#" Value="member this.QueueFullMode : Microsoft.Extensions.Logging.Console.ConsoleLoggerQueueFullMode with get, set" Usage="Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.QueueFullMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Logging::Console::ConsoleLoggerQueueFullMode QueueFullMode { Microsoft::Extensions::Logging::Console::ConsoleLoggerQueueFullMode get(); void set(Microsoft::Extensions::Logging::Console::ConsoleLoggerQueueFullMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.Console.ConsoleLoggerQueueFullMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the desired console logger behavior when the queue becomes full.
            </summary>
        <value>
            The default value is <see langword="wait" />.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimestampFormat">
      <MemberSignature Language="C#" Value="public string? TimestampFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimestampFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.TimestampFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TimestampFormat As String" />
      <MemberSignature Language="F#" Value="member this.TimestampFormat : string with get, set" Usage="Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.TimestampFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TimestampFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("ConsoleLoggerOptions.TimestampFormat has been deprecated. Use ConsoleFormatterOptions.TimestampFormat instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("ConsoleLoggerOptions.TimestampFormat has been deprecated. Use ConsoleFormatterOptions.TimestampFormat instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the format string used to format timestamp in logging messages.
            </summary>
        <value>
            The default value is <see langword="null" />.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseUtcTimestamp">
      <MemberSignature Language="C#" Value="public bool UseUtcTimestamp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseUtcTimestamp" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.UseUtcTimestamp" />
      <MemberSignature Language="VB.NET" Value="Public Property UseUtcTimestamp As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseUtcTimestamp : bool with get, set" Usage="Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.UseUtcTimestamp" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseUtcTimestamp { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("ConsoleLoggerOptions.UseUtcTimestamp has been deprecated. Use ConsoleFormatterOptions.UseUtcTimestamp instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("ConsoleLoggerOptions.UseUtcTimestamp has been deprecated. Use ConsoleFormatterOptions.UseUtcTimestamp instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that indicates whether UTC timezone should be used to format timestamps in logging messages.
            </summary>
        <value>
          <see langword="true" /> if the UTC timezone should be used to format timestamps. The default value is <see langword="false" />.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="UngroundedAttributesEvaluatorContext" FullName="Microsoft.Extensions.AI.Evaluation.Safety.UngroundedAttributesEvaluatorContext">
  <TypeSignature Language="C#" Value="public sealed class UngroundedAttributesEvaluatorContext : Microsoft.Extensions.AI.Evaluation.EvaluationContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UngroundedAttributesEvaluatorContext extends Microsoft.Extensions.AI.Evaluation.EvaluationContext" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.Evaluation.Safety.UngroundedAttributesEvaluatorContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UngroundedAttributesEvaluatorContext&#xA;Inherits EvaluationContext" />
  <TypeSignature Language="F#" Value="type UngroundedAttributesEvaluatorContext = class&#xA;    inherit EvaluationContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class UngroundedAttributesEvaluatorContext sealed : Microsoft::Extensions::AI::Evaluation::EvaluationContext" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Evaluation.Safety</AssemblyName>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
    <AssemblyVersion>9.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Extensions.AI.Evaluation.EvaluationContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <param name="groundingContext">
            Contextual information against which the groundedness (or ungroundedness) of a response is evaluated.
            </param>
    <summary>
            Contextual information that the <see cref="T:Microsoft.Extensions.AI.Evaluation.Safety.UngroundedAttributesEvaluator" /> uses to evaluate whether a response is
            ungrounded.
            </summary>
    <remarks>
      <see cref="T:Microsoft.Extensions.AI.Evaluation.Safety.UngroundedAttributesEvaluator" /> measures whether the response being evaluated is first, ungrounded
            based on the information present in the supplied <paramref name="groundingContext" />. It then checks whether the
            response contains information about the protected class or emotional state of a person.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UngroundedAttributesEvaluatorContext (string groundingContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string groundingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Safety.UngroundedAttributesEvaluatorContext.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (groundingContext As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.Evaluation.Safety.UngroundedAttributesEvaluatorContext : string -&gt; Microsoft.Extensions.AI.Evaluation.Safety.UngroundedAttributesEvaluatorContext" Usage="new Microsoft.Extensions.AI.Evaluation.Safety.UngroundedAttributesEvaluatorContext groundingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UngroundedAttributesEvaluatorContext(System::String ^ groundingContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Safety</AssemblyName>
        <AssemblyVersion>9.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="groundingContext" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groundingContext">
            Contextual information against which the groundedness (or ungroundedness) of a response is evaluated.
            </param>
        <summary>
            Contextual information that the <see cref="T:Microsoft.Extensions.AI.Evaluation.Safety.UngroundedAttributesEvaluator" /> uses to evaluate whether a response is
            ungrounded.
            </summary>
        <remarks>
          <see cref="T:Microsoft.Extensions.AI.Evaluation.Safety.UngroundedAttributesEvaluator" /> measures whether the response being evaluated is first, ungrounded
            based on the information present in the supplied <paramref name="groundingContext" />. It then checks whether the
            response contains information about the protected class or emotional state of a person.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroundingContext">
      <MemberSignature Language="C#" Value="public string GroundingContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroundingContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Safety.UngroundedAttributesEvaluatorContext.GroundingContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GroundingContext As String" />
      <MemberSignature Language="F#" Value="member this.GroundingContext : string" Usage="Microsoft.Extensions.AI.Evaluation.Safety.UngroundedAttributesEvaluatorContext.GroundingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GroundingContext { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Safety</AssemblyName>
        <AssemblyVersion>9.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the contextual information against which the groundedness (or ungroundedness) of a response is evaluated.
            </summary>
        <value>To be added.</value>
        <remarks>
            The <see cref="T:Microsoft.Extensions.AI.Evaluation.Safety.UngroundedAttributesEvaluator" /> measures whether the response being evaluated is first,
            ungrounded based on the information present in the supplied <see cref="P:Microsoft.Extensions.AI.Evaluation.Safety.UngroundedAttributesEvaluatorContext.GroundingContext" />. It then checks
            whether the response contains information about the protected class or emotional state of a person.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroundingContextName">
      <MemberSignature Language="C#" Value="public static string GroundingContextName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string GroundingContextName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Safety.UngroundedAttributesEvaluatorContext.GroundingContextName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GroundingContextName As String" />
      <MemberSignature Language="F#" Value="static member GroundingContextName : string" Usage="Microsoft.Extensions.AI.Evaluation.Safety.UngroundedAttributesEvaluatorContext.GroundingContextName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ GroundingContextName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Safety</AssemblyName>
        <AssemblyVersion>9.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the unique <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationContext.Name" /> that is used for
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Safety.UngroundedAttributesEvaluatorContext" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

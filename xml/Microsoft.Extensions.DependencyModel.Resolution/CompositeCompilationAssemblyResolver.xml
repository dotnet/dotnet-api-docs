<Type Name="CompositeCompilationAssemblyResolver" FullName="Microsoft.Extensions.DependencyModel.Resolution.CompositeCompilationAssemblyResolver">
  <TypeSignature Language="C#" Value="public class CompositeCompilationAssemblyResolver : Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompositeCompilationAssemblyResolver extends System.Object implements class Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyModel.Resolution.CompositeCompilationAssemblyResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class CompositeCompilationAssemblyResolver&#xA;Implements ICompilationAssemblyResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositeCompilationAssemblyResolver : Microsoft::Extensions::DependencyModel::Resolution::ICompilationAssemblyResolver" />
  <TypeSignature Language="F#" Value="type CompositeCompilationAssemblyResolver = class&#xA;    interface ICompilationAssemblyResolver" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DependencyModel</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeCompilationAssemblyResolver (Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver[] resolvers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver[] resolvers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyModel.Resolution.CompositeCompilationAssemblyResolver.#ctor(Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolvers As ICompilationAssemblyResolver())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositeCompilationAssemblyResolver(cli::array &lt;Microsoft::Extensions::DependencyModel::Resolution::ICompilationAssemblyResolver ^&gt; ^ resolvers);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.DependencyModel.Resolution.CompositeCompilationAssemblyResolver : Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver[] -&gt; Microsoft.Extensions.DependencyModel.Resolution.CompositeCompilationAssemblyResolver" Usage="new Microsoft.Extensions.DependencyModel.Resolution.CompositeCompilationAssemblyResolver resolvers" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyModel</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolvers" Type="Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver[]" />
      </Parameters>
      <Docs>
        <param name="resolvers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveAssemblyPaths">
      <MemberSignature Language="C#" Value="public bool TryResolveAssemblyPaths (Microsoft.Extensions.DependencyModel.CompilationLibrary library, System.Collections.Generic.List&lt;string&gt; assemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryResolveAssemblyPaths(class Microsoft.Extensions.DependencyModel.CompilationLibrary library, class System.Collections.Generic.List`1&lt;string&gt; assemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyModel.Resolution.CompositeCompilationAssemblyResolver.TryResolveAssemblyPaths(Microsoft.Extensions.DependencyModel.CompilationLibrary,System.Collections.Generic.List{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveAssemblyPaths (library As CompilationLibrary, assemblies As List(Of String)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryResolveAssemblyPaths(Microsoft::Extensions::DependencyModel::CompilationLibrary ^ library, System::Collections::Generic::List&lt;System::String ^&gt; ^ assemblies);" />
      <MemberSignature Language="F#" Value="abstract member TryResolveAssemblyPaths : Microsoft.Extensions.DependencyModel.CompilationLibrary * System.Collections.Generic.List&lt;string&gt; -&gt; bool&#xA;override this.TryResolveAssemblyPaths : Microsoft.Extensions.DependencyModel.CompilationLibrary * System.Collections.Generic.List&lt;string&gt; -&gt; bool" Usage="compositeCompilationAssemblyResolver.TryResolveAssemblyPaths (library, assemblies)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver.TryResolveAssemblyPaths(Microsoft.Extensions.DependencyModel.CompilationLibrary,System.Collections.Generic.List{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyModel</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="library" Type="Microsoft.Extensions.DependencyModel.CompilationLibrary" />
        <Parameter Name="assemblies" Type="System.Collections.Generic.List&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="library">To be added.</param>
        <param name="assemblies">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

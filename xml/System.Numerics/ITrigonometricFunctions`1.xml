<Type Name="ITrigonometricFunctions&lt;TSelf&gt;" FullName="System.Numerics.ITrigonometricFunctions&lt;TSelf&gt;">
  <TypeSignature Language="C#" Value="public interface ITrigonometricFunctions&lt;TSelf&gt; where TSelf : ITrigonometricFunctions&lt;TSelf&gt;, INumberBase&lt;TSelf&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITrigonometricFunctions`1&lt;(class System.Numerics.ITrigonometricFunctions`1&lt;!TSelf&gt;, class System.Numerics.INumberBase`1&lt;!TSelf&gt;) TSelf&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Numerics.ITrigonometricFunctions`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITrigonometricFunctions(Of TSelf)" />
  <TypeSignature Language="F#" Value="type ITrigonometricFunctions&lt;'Self (requires 'Self :&gt; ITrigonometricFunctions&lt;'Self&gt; and 'Self :&gt; INumberBase&lt;'Self&gt;)&gt; = interface" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TSelf&gt;&#xA; where TSelf : ITrigonometricFunctions&lt;TSelf&gt;, INumberBase&lt;TSelf&gt;public interface class ITrigonometricFunctions" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSelf">
      <Constraints>
        <InterfaceName>System.Numerics.ITrigonometricFunctions&lt;TSelf&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TSelf">The type that implements this interface.</typeparam>
    <summary>Defines support for trigonometric functions.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public static TSelf Acos (TSelf x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf Acos(!TSelf x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.ITrigonometricFunctions`1.Acos(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acos (x As TSelf) As TSelf" />
      <MemberSignature Language="F#" Value="static member Acos : 'Self -&gt; 'Self" Usage="System.Numerics.ITrigonometricFunctions&lt;'Self (requires 'Self :&gt; System.Numerics.ITrigonometricFunctions&lt;'Self&gt; and 'Self :&gt; System.Numerics.INumberBase&lt;'Self&gt;)&gt;.Acos x" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf Acos(TSelf x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="x">The value, in radians, whose arc-cosine is to be computed.</param>
        <summary>Computes the arc-cosine of a value.</summary>
        <returns>The arc-cosine of <paramref name="x" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This computes `arccos(x)` in the interval `[+0, +π]` radians.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcosPi">
      <MemberSignature Language="C#" Value="public static TSelf AcosPi (TSelf x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf AcosPi(!TSelf x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.ITrigonometricFunctions`1.AcosPi(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AcosPi (x As TSelf) As TSelf" />
      <MemberSignature Language="F#" Value="static member AcosPi : 'Self -&gt; 'Self" Usage="System.Numerics.ITrigonometricFunctions&lt;'Self (requires 'Self :&gt; System.Numerics.ITrigonometricFunctions&lt;'Self&gt; and 'Self :&gt; System.Numerics.INumberBase&lt;'Self&gt;)&gt;.AcosPi x" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf AcosPi(TSelf x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="x">The value whose arc-cosine is to be computed.</param>
        <summary>Computes the arc-cosine of a value and divides the result by <c>pi</c>.</summary>
        <returns>The arc-cosine of <paramref name="x" />, divided by <c>pi</c>.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This computes `arccos(x) / π` in the interval `[-0.5, +0.5]`.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public static TSelf Asin (TSelf x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf Asin(!TSelf x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.ITrigonometricFunctions`1.Asin(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asin (x As TSelf) As TSelf" />
      <MemberSignature Language="F#" Value="static member Asin : 'Self -&gt; 'Self" Usage="System.Numerics.ITrigonometricFunctions&lt;'Self (requires 'Self :&gt; System.Numerics.ITrigonometricFunctions&lt;'Self&gt; and 'Self :&gt; System.Numerics.INumberBase&lt;'Self&gt;)&gt;.Asin x" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf Asin(TSelf x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="x">The value, in radians, whose arc-sine is to be computed.</param>
        <summary>Computes the arc-sine of a value.</summary>
        <returns>The arc-sine of <paramref name="x" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This computes `arcsin(x)` in the interval `[-π / 2, +π / 2]` radians.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsinPi">
      <MemberSignature Language="C#" Value="public static TSelf AsinPi (TSelf x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf AsinPi(!TSelf x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.ITrigonometricFunctions`1.AsinPi(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AsinPi (x As TSelf) As TSelf" />
      <MemberSignature Language="F#" Value="static member AsinPi : 'Self -&gt; 'Self" Usage="System.Numerics.ITrigonometricFunctions&lt;'Self (requires 'Self :&gt; System.Numerics.ITrigonometricFunctions&lt;'Self&gt; and 'Self :&gt; System.Numerics.INumberBase&lt;'Self&gt;)&gt;.AsinPi x" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf AsinPi(TSelf x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="x">The value whose arc-sine is to be computed.</param>
        <summary>Computes the arc-sine of a value and divides the result by <c>pi</c>.</summary>
        <returns>The arc-sine of <paramref name="x" />, divided by <c>pi</c>.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This computes `arcsin(x) / π` in the interval `[-0.5, +0.5]`.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan">
      <MemberSignature Language="C#" Value="public static TSelf Atan (TSelf x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf Atan(!TSelf x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.ITrigonometricFunctions`1.Atan(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan (x As TSelf) As TSelf" />
      <MemberSignature Language="F#" Value="static member Atan : 'Self -&gt; 'Self" Usage="System.Numerics.ITrigonometricFunctions&lt;'Self (requires 'Self :&gt; System.Numerics.ITrigonometricFunctions&lt;'Self&gt; and 'Self :&gt; System.Numerics.INumberBase&lt;'Self&gt;)&gt;.Atan x" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf Atan(TSelf x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="x">The value, in radians, whose arc-tangent is to be computed.</param>
        <summary>Computes the arc-tangent of a value.</summary>
        <returns>The arc-tangent of <paramref name="x" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This computes `arctan(x)` in the interval `[-π / 2, +π / 2]` radians.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public static TSelf Atan2 (TSelf y, TSelf x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf Atan2(!TSelf y, !TSelf x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.ITrigonometricFunctions`1.Atan2(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan2 (y As TSelf, x As TSelf) As TSelf" />
      <MemberSignature Language="F#" Value="static member Atan2 : 'Self * 'Self -&gt; 'Self" Usage="System.Numerics.ITrigonometricFunctions&lt;'Self (requires 'Self :&gt; System.Numerics.ITrigonometricFunctions&lt;'Self&gt; and 'Self :&gt; System.Numerics.INumberBase&lt;'Self&gt;)&gt;.Atan2 (y, x)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf Atan2(TSelf y, TSelf x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="TSelf" />
        <Parameter Name="x" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="y">The y-coordinate of a point.</param>
        <param name="x">The x-coordinate of a point.</param>
        <summary>Computes the arc-tangent of the quotient of two values.</summary>
        <returns>The arc-tangent of <paramref name="y" /> divided by <paramref name="x" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan2Pi">
      <MemberSignature Language="C#" Value="public static TSelf Atan2Pi (TSelf y, TSelf x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf Atan2Pi(!TSelf y, !TSelf x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.ITrigonometricFunctions`1.Atan2Pi(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan2Pi (y As TSelf, x As TSelf) As TSelf" />
      <MemberSignature Language="F#" Value="static member Atan2Pi : 'Self * 'Self -&gt; 'Self" Usage="System.Numerics.ITrigonometricFunctions&lt;'Self (requires 'Self :&gt; System.Numerics.ITrigonometricFunctions&lt;'Self&gt; and 'Self :&gt; System.Numerics.INumberBase&lt;'Self&gt;)&gt;.Atan2Pi (y, x)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf Atan2Pi(TSelf y, TSelf x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="TSelf" />
        <Parameter Name="x" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="y">To be added.</param>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AtanPi">
      <MemberSignature Language="C#" Value="public static TSelf AtanPi (TSelf x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf AtanPi(!TSelf x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.ITrigonometricFunctions`1.AtanPi(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AtanPi (x As TSelf) As TSelf" />
      <MemberSignature Language="F#" Value="static member AtanPi : 'Self -&gt; 'Self" Usage="System.Numerics.ITrigonometricFunctions&lt;'Self (requires 'Self :&gt; System.Numerics.ITrigonometricFunctions&lt;'Self&gt; and 'Self :&gt; System.Numerics.INumberBase&lt;'Self&gt;)&gt;.AtanPi x" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf AtanPi(TSelf x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="x">The value whose arc-tangent is to be computed.</param>
        <summary>Computes the arc-tangent of a value and divides the result by pi.</summary>
        <returns>The arc-tangent of <paramref name="x" />, divided by <c>pi</c>.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This computes `arctan(x) / π` in the interval `[-0.5, +0.5]`.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static TSelf Cos (TSelf x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf Cos(!TSelf x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.ITrigonometricFunctions`1.Cos(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cos (x As TSelf) As TSelf" />
      <MemberSignature Language="F#" Value="static member Cos : 'Self -&gt; 'Self" Usage="System.Numerics.ITrigonometricFunctions&lt;'Self (requires 'Self :&gt; System.Numerics.ITrigonometricFunctions&lt;'Self&gt; and 'Self :&gt; System.Numerics.INumberBase&lt;'Self&gt;)&gt;.Cos x" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf Cos(TSelf x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="x">The value, in radians, whose cosine is to be computed.</param>
        <summary>Computes the cosine of a value.</summary>
        <returns>The cosine of <paramref name="x" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This computes `cos(x)`.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CosPi">
      <MemberSignature Language="C#" Value="public static TSelf CosPi (TSelf x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf CosPi(!TSelf x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.ITrigonometricFunctions`1.CosPi(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CosPi (x As TSelf) As TSelf" />
      <MemberSignature Language="F#" Value="static member CosPi : 'Self -&gt; 'Self" Usage="System.Numerics.ITrigonometricFunctions&lt;'Self (requires 'Self :&gt; System.Numerics.ITrigonometricFunctions&lt;'Self&gt; and 'Self :&gt; System.Numerics.INumberBase&lt;'Self&gt;)&gt;.CosPi x" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf CosPi(TSelf x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="x">The value, in half-revolutions, whose cosine is to be computed.</param>
        <summary>Computes the cosine of a value that has been multipled by <c>pi</c>.</summary>
        <returns>The cosine of <paramref name="x" /> multiplied-by <c>pi</c>.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This computes `cos(x * π)`.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static TSelf Sin (TSelf x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf Sin(!TSelf x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.ITrigonometricFunctions`1.Sin(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sin (x As TSelf) As TSelf" />
      <MemberSignature Language="F#" Value="static member Sin : 'Self -&gt; 'Self" Usage="System.Numerics.ITrigonometricFunctions&lt;'Self (requires 'Self :&gt; System.Numerics.ITrigonometricFunctions&lt;'Self&gt; and 'Self :&gt; System.Numerics.INumberBase&lt;'Self&gt;)&gt;.Sin x" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf Sin(TSelf x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="x">The value, in radians, whose sine is to be computed.</param>
        <summary>Computes the sine of a value.</summary>
        <returns>The sine of <paramref name="x" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This computes `sin(x)`.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SinCos">
      <MemberSignature Language="C#" Value="public static (TSelf Sin, TSelf Cos) SinCos (TSelf x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual valuetype System.ValueTuple`2&lt;!TSelf, !TSelf&gt; SinCos(!TSelf x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.ITrigonometricFunctions`1.SinCos(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SinCos (x As TSelf) As ValueTuple(Of TSelf, TSelf)" />
      <MemberSignature Language="F#" Value="static member SinCos : 'Self -&gt; ValueTuple&lt;'Self, 'Self (requires 'Self :&gt; System.Numerics.ITrigonometricFunctions&lt;'Self&gt; and 'Self :&gt; System.Numerics.INumberBase&lt;'Self&gt; and 'Self :&gt; System.Numerics.ITrigonometricFunctions&lt;'Self&gt; and 'Self :&gt; System.Numerics.INumberBase&lt;'Self&gt;)&gt;" Usage="System.Numerics.ITrigonometricFunctions&lt;'Self (requires 'Self :&gt; System.Numerics.ITrigonometricFunctions&lt;'Self&gt; and 'Self :&gt; System.Numerics.INumberBase&lt;'Self&gt;)&gt;.SinCos x" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;TSelf, TSelf&gt; SinCos(TSelf x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;TSelf,TSelf&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Sin", "Cos" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Sin", "Cos" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="x">The value, in radians, whose sine and cosine are to be computed.</param>
        <summary>Computes the sine and cosine of a value.</summary>
        <returns>The sine and cosine of <paramref name="x" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This computes `(sin(x), cos(x))`.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SinPi">
      <MemberSignature Language="C#" Value="public static TSelf SinPi (TSelf x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf SinPi(!TSelf x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.ITrigonometricFunctions`1.SinPi(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SinPi (x As TSelf) As TSelf" />
      <MemberSignature Language="F#" Value="static member SinPi : 'Self -&gt; 'Self" Usage="System.Numerics.ITrigonometricFunctions&lt;'Self (requires 'Self :&gt; System.Numerics.ITrigonometricFunctions&lt;'Self&gt; and 'Self :&gt; System.Numerics.INumberBase&lt;'Self&gt;)&gt;.SinPi x" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf SinPi(TSelf x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="x">The value, in half-revolutions, that is multipled by <c>pi</c> before computing its sine.</param>
        <summary>Computes the sine of a value that has been multiplied by <c>pi</c>.</summary>
        <returns>The sine of <paramref name="x" /> multiplied-by <c>pi</c>.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This computes `sin(x * π)`.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tan">
      <MemberSignature Language="C#" Value="public static TSelf Tan (TSelf x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf Tan(!TSelf x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.ITrigonometricFunctions`1.Tan(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tan (x As TSelf) As TSelf" />
      <MemberSignature Language="F#" Value="static member Tan : 'Self -&gt; 'Self" Usage="System.Numerics.ITrigonometricFunctions&lt;'Self (requires 'Self :&gt; System.Numerics.ITrigonometricFunctions&lt;'Self&gt; and 'Self :&gt; System.Numerics.INumberBase&lt;'Self&gt;)&gt;.Tan x" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf Tan(TSelf x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="x">The value, in radians, whose tangent is to be computed.</param>
        <summary>Computes the tangent of a value.</summary>
        <returns>The tangent of <paramref name="x" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This computes `tan(x)`.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TanPi">
      <MemberSignature Language="C#" Value="public static TSelf TanPi (TSelf x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf TanPi(!TSelf x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.ITrigonometricFunctions`1.TanPi(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TanPi (x As TSelf) As TSelf" />
      <MemberSignature Language="F#" Value="static member TanPi : 'Self -&gt; 'Self" Usage="System.Numerics.ITrigonometricFunctions&lt;'Self (requires 'Self :&gt; System.Numerics.ITrigonometricFunctions&lt;'Self&gt; and 'Self :&gt; System.Numerics.INumberBase&lt;'Self&gt;)&gt;.TanPi x" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf TanPi(TSelf x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="x">The value, in half-revolutions, that is multipled by <c>pi</c> before computing its tangent.</param>
        <summary>Computes the tangent of a value that has been multipled by <c>pi</c>.</summary>
        <returns>The tangent of <paramref name="x" /> multiplied-by <c>pi</c>.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This computes `tan(x * π)`.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="IShiftOperators&lt;TSelf,TOther,TResult&gt;" FullName="System.Numerics.IShiftOperators&lt;TSelf,TOther,TResult&gt;">
  <TypeSignature Language="C#" Value="public interface IShiftOperators&lt;TSelf,TOther,TResult&gt; where TSelf : IShiftOperators&lt;TSelf,TOther,TResult&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IShiftOperators`3&lt;(class System.Numerics.IShiftOperators`3&lt;!TSelf, !TOther, !TResult&gt;) TSelf, TOther, TResult&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Numerics.IShiftOperators`3" />
  <TypeSignature Language="VB.NET" Value="Public Interface IShiftOperators(Of TSelf, TOther, TResult)" />
  <TypeSignature Language="F#" Value="type IShiftOperators&lt;'Self, 'Other, 'Result (requires 'Self :&gt; IShiftOperators&lt;'Self, 'Other, 'Result&gt;)&gt; = interface" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TSelf, typename TOther, typename TResult&gt;&#xA; where TSelf : IShiftOperators&lt;TSelf, TOther, TResult&gt;public interface class IShiftOperators" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSelf">
      <Constraints>
        <InterfaceName>System.Numerics.IShiftOperators&lt;TSelf,TOther,TResult&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TOther" />
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TSelf">The type that implements this interface.</typeparam>
    <typeparam name="TOther">The type used to specify the amount by which <typeparamref name="TSelf" /> should be shifted.</typeparam>
    <typeparam name="TResult">The type that contains the result of shifting <typeparamref name="TSelf" /> by <typeparamref name="TResult" />.</typeparam>
    <summary>Defines a mechanism for shifting a value by another value.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="op_LeftShift">
      <MemberSignature Language="C#" Value="public static TResult operator &lt;&lt; (TSelf value, TOther shiftAmount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname virtual !TResult op_LeftShift(!TSelf value, !TOther shiftAmount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.IShiftOperators`3.op_LeftShift(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;&lt; (value As TSelf, shiftAmount As TOther) As TResult" />
      <MemberSignature Language="F#" Value="static member ( &lt;&lt;&lt; ) : 'Self * 'Other -&gt; 'Result" Usage="value &lt;&lt;&lt; shiftAmount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TResult operator &lt;&lt;(TSelf value, TOther shiftAmount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TSelf" />
        <Parameter Name="shiftAmount" Type="TOther" />
      </Parameters>
      <Docs>
        <param name="value">The value that is shifted left by <paramref name="shiftAmount" />.</param>
        <param name="shiftAmount">The amount by which <paramref name="value" /> is shifted left.</param>
        <summary>Shifts a value left by a given amount.</summary>
        <returns>The result of shifting <paramref name="value" /> left by <paramref name="shiftAmount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_RightShift">
      <MemberSignature Language="C#" Value="public static TResult operator &gt;&gt; (TSelf value, TOther shiftAmount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname virtual !TResult op_RightShift(!TSelf value, !TOther shiftAmount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.IShiftOperators`3.op_RightShift(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;&gt; (value As TSelf, shiftAmount As TOther) As TResult" />
      <MemberSignature Language="F#" Value="static member ( &gt;&gt;&gt; ) : 'Self * 'Other -&gt; 'Result" Usage="value &gt;&gt;&gt; shiftAmount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TResult operator &gt;&gt;(TSelf value, TOther shiftAmount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TSelf" />
        <Parameter Name="shiftAmount" Type="TOther" />
      </Parameters>
      <Docs>
        <param name="value">The value that is shifted right by <paramref name="shiftAmount" />.</param>
        <param name="shiftAmount">The amount by which <paramref name="value" /> is shifted right.</param>
        <summary>Shifts a value right by a given amount.</summary>
        <returns>The result of shifting <paramref name="value" /> right by <paramref name="shiftAmount" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This operation is meant to perform a signed (otherwise known as an arithmetic) right shift on signed types.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnsignedRightShift">
      <MemberSignature Language="C#" Value="public static TResult op_UnsignedRightShift (TSelf value, TOther shiftAmount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname virtual !TResult op_UnsignedRightShift(!TSelf value, !TOther shiftAmount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.IShiftOperators`3.op_UnsignedRightShift(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_UnsignedRightShift (value As TSelf, shiftAmount As TOther) As TResult" />
      <MemberSignature Language="F#" Value="static member op_UnsignedRightShift : 'Self * 'Other -&gt; 'Result" Usage="System.Numerics.IShiftOperators&lt;'Self, 'Other, 'Result (requires 'Self :&gt; System.Numerics.IShiftOperators&lt;'Self, 'Other, 'Result&gt;)&gt;.op_UnsignedRightShift (value, shiftAmount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TResult op_UnsignedRightShift(TSelf value, TOther shiftAmount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TSelf" />
        <Parameter Name="shiftAmount" Type="TOther" />
      </Parameters>
      <Docs>
        <param name="value">The value that is shifted right by <paramref name="shiftAmount" />.</param>
        <param name="shiftAmount">The amount by which <paramref name="value" /> is shifted right.</param>
        <summary>Shifts a value right by a given amount.</summary>
        <returns>The result of shifting <paramref name="value" /> right by <paramref name="shiftAmount" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This operation is meant to perform an unsigned (otherwise known as a logical) right shift on all types.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

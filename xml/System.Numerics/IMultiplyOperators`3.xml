<Type Name="IMultiplyOperators&lt;TSelf,TOther,TResult&gt;" FullName="System.Numerics.IMultiplyOperators&lt;TSelf,TOther,TResult&gt;">
  <TypeSignature Language="C#" Value="public interface IMultiplyOperators&lt;TSelf,TOther,TResult&gt; where TSelf : IMultiplyOperators&lt;TSelf,TOther,TResult&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMultiplyOperators`3&lt;(class System.Numerics.IMultiplyOperators`3&lt;!TSelf, !TOther, !TResult&gt;) TSelf, TOther, TResult&gt;" FrameworkAlternate="net-7.0" />
  <TypeSignature Language="DocId" Value="T:System.Numerics.IMultiplyOperators`3" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMultiplyOperators(Of TSelf, TOther, TResult)" />
  <TypeSignature Language="F#" Value="type IMultiplyOperators&lt;'Self, 'Other, 'Result (requires 'Self :&gt; IMultiplyOperators&lt;'Self, 'Other, 'Result&gt;)&gt; = interface" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TSelf, typename TOther, typename TResult&gt;&#xA; where TSelf : IMultiplyOperators&lt;TSelf, TOther, TResult&gt;public interface class IMultiplyOperators" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IMultiplyOperators`3&lt;(class System.Numerics.IMultiplyOperators`3&lt;!TSelf, !TOther, !TResult&gt;) TSelf, TOther, TResult&gt;" FrameworkAlternate="net-8.0;net-9.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSelf">
      <Constraints>
        <InterfaceName>System.Numerics.IMultiplyOperators&lt;TSelf,TOther,TResult&gt;</InterfaceName>
      </Constraints>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
    <TypeParameter Name="TOther">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
    <TypeParameter Name="TResult">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TSelf">The type that implements this interface.</typeparam>
    <typeparam name="TOther">The type that will multiply <typeparamref name="TSelf" />.</typeparam>
    <typeparam name="TResult">The type that contains the product of <typeparamref name="TSelf" /> and <typeparamref name="TOther" />.</typeparam>
    <summary>Defines a mechanism for computing the product of two values.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="op_CheckedMultiply">
      <MemberSignature Language="C#" Value="public static virtual TResult op_CheckedMultiply (TSelf left, TOther right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname virtual !TResult op_CheckedMultiply(!TSelf left, !TOther right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.IMultiplyOperators`3.op_CheckedMultiply(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Overrides op_CheckedMultiply (left As TSelf, right As TOther) As TResult" />
      <MemberSignature Language="F#" Value="static member op_CheckedMultiply : 'Self * 'Other -&gt; 'Result" Usage="System.Numerics.IMultiplyOperators&lt;'Self, 'Other, 'Result (requires 'Self :&gt; System.Numerics.IMultiplyOperators&lt;'Self, 'Other, 'Result&gt;)&gt;.op_CheckedMultiply (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static override TResult op_CheckedMultiply(TSelf left, TOther right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="TSelf" />
        <Parameter Name="right" Type="TOther" />
      </Parameters>
      <Docs>
        <param name="left">The value which <paramref name="right" /> multiplies.</param>
        <param name="right">The value which multiplies <paramref name="left" />.</param>
        <summary>Multiplies two values together to compute their product.</summary>
        <returns>The product of <paramref name="left" /> multiplied by <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OverflowException">The product of <paramref name="left" /> multiplied by <paramref name="right" /> is not representable by <typeparamref name="TResult" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static abstract TResult operator * (TSelf left, TOther right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname virtual !TResult op_Multiply(!TSelf left, !TOther right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.IMultiplyOperators`3.op_Multiply(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As TSelf, right As TOther) As TResult" />
      <MemberSignature Language="F#" Value="static member ( * ) : 'Self * 'Other -&gt; 'Result" Usage="left * right" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TResult operator *(TSelf left, TOther right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="TSelf" />
        <Parameter Name="right" Type="TOther" />
      </Parameters>
      <Docs>
        <param name="left">The value which <paramref name="right" /> multiplies.</param>
        <param name="right">The value which multiplies <paramref name="left" />.</param>
        <summary>Multiplies two values together to compute their product.</summary>
        <returns>The product of <paramref name="left" /> multiplied by <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="IFloatingPointIeee754&lt;TSelf&gt;" FullName="System.Numerics.IFloatingPointIeee754&lt;TSelf&gt;">
  <TypeSignature Language="C#" Value="public interface IFloatingPointIeee754&lt;TSelf&gt; : IComparable&lt;TSelf&gt;, IEquatable&lt;TSelf&gt;, IParsable&lt;TSelf&gt;, ISpanParsable&lt;TSelf&gt;, System.Numerics.IAdditionOperators&lt;TSelf,TSelf,TSelf&gt;, System.Numerics.IAdditiveIdentity&lt;TSelf,TSelf&gt;, System.Numerics.IComparisonOperators&lt;TSelf,TSelf&gt;, System.Numerics.IDecrementOperators&lt;TSelf&gt;, System.Numerics.IDivisionOperators&lt;TSelf,TSelf,TSelf&gt;, System.Numerics.IEqualityOperators&lt;TSelf,TSelf&gt;, System.Numerics.IExponentialFunctions&lt;TSelf&gt;, System.Numerics.IFloatingPoint&lt;TSelf&gt;, System.Numerics.IHyperbolicFunctions&lt;TSelf&gt;, System.Numerics.IIncrementOperators&lt;TSelf&gt;, System.Numerics.ILogarithmicFunctions&lt;TSelf&gt;, System.Numerics.IModulusOperators&lt;TSelf,TSelf,TSelf&gt;, System.Numerics.IMultiplicativeIdentity&lt;TSelf,TSelf&gt;, System.Numerics.IMultiplyOperators&lt;TSelf,TSelf,TSelf&gt;, System.Numerics.INumber&lt;TSelf&gt;, System.Numerics.INumberBase&lt;TSelf&gt;, System.Numerics.IPowerFunctions&lt;TSelf&gt;, System.Numerics.IRootFunctions&lt;TSelf&gt;, System.Numerics.ISignedNumber&lt;TSelf&gt;, System.Numerics.ISubtractionOperators&lt;TSelf,TSelf,TSelf&gt;, System.Numerics.ITrigonometricFunctions&lt;TSelf&gt;, System.Numerics.IUnaryNegationOperators&lt;TSelf,TSelf&gt;, System.Numerics.IUnaryPlusOperators&lt;TSelf,TSelf&gt; where TSelf : IFloatingPointIeee754&lt;TSelf&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFloatingPointIeee754`1&lt;(class System.Numerics.IFloatingPointIeee754`1&lt;!TSelf&gt;) TSelf&gt; implements class System.IComparable, class System.IComparable`1&lt;!TSelf&gt;, class System.IEquatable`1&lt;!TSelf&gt;, class System.IFormattable, class System.IParsable`1&lt;!TSelf&gt;, class System.ISpanFormattable, class System.ISpanParsable`1&lt;!TSelf&gt;, class System.Numerics.IAdditionOperators`3&lt;!TSelf, !TSelf, !TSelf&gt;, class System.Numerics.IAdditiveIdentity`2&lt;!TSelf, !TSelf&gt;, class System.Numerics.IComparisonOperators`2&lt;!TSelf, !TSelf&gt;, class System.Numerics.IDecrementOperators`1&lt;!TSelf&gt;, class System.Numerics.IDivisionOperators`3&lt;!TSelf, !TSelf, !TSelf&gt;, class System.Numerics.IEqualityOperators`2&lt;!TSelf, !TSelf&gt;, class System.Numerics.IExponentialFunctions`1&lt;!TSelf&gt;, class System.Numerics.IFloatingPoint`1&lt;!TSelf&gt;, class System.Numerics.IHyperbolicFunctions`1&lt;!TSelf&gt;, class System.Numerics.IIncrementOperators`1&lt;!TSelf&gt;, class System.Numerics.ILogarithmicFunctions`1&lt;!TSelf&gt;, class System.Numerics.IModulusOperators`3&lt;!TSelf, !TSelf, !TSelf&gt;, class System.Numerics.IMultiplicativeIdentity`2&lt;!TSelf, !TSelf&gt;, class System.Numerics.IMultiplyOperators`3&lt;!TSelf, !TSelf, !TSelf&gt;, class System.Numerics.INumber`1&lt;!TSelf&gt;, class System.Numerics.INumberBase`1&lt;!TSelf&gt;, class System.Numerics.IPowerFunctions`1&lt;!TSelf&gt;, class System.Numerics.IRootFunctions`1&lt;!TSelf&gt;, class System.Numerics.ISignedNumber`1&lt;!TSelf&gt;, class System.Numerics.ISubtractionOperators`3&lt;!TSelf, !TSelf, !TSelf&gt;, class System.Numerics.ITrigonometricFunctions`1&lt;!TSelf&gt;, class System.Numerics.IUnaryNegationOperators`2&lt;!TSelf, !TSelf&gt;, class System.Numerics.IUnaryPlusOperators`2&lt;!TSelf, !TSelf&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Numerics.IFloatingPointIeee754`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFloatingPointIeee754(Of TSelf)&#xA;Implements IAdditionOperators(Of TSelf, TSelf, TSelf), IAdditiveIdentity(Of TSelf, TSelf), IComparable(Of TSelf), IComparisonOperators(Of TSelf, TSelf), IDecrementOperators(Of TSelf), IDivisionOperators(Of TSelf, TSelf, TSelf), IEqualityOperators(Of TSelf, TSelf), IEquatable(Of TSelf), IExponentialFunctions(Of TSelf), IFloatingPoint(Of TSelf), IHyperbolicFunctions(Of TSelf), IIncrementOperators(Of TSelf), ILogarithmicFunctions(Of TSelf), IModulusOperators(Of TSelf, TSelf, TSelf), IMultiplicativeIdentity(Of TSelf, TSelf), IMultiplyOperators(Of TSelf, TSelf, TSelf), INumber(Of TSelf), INumberBase(Of TSelf), IParsable(Of TSelf), IPowerFunctions(Of TSelf), IRootFunctions(Of TSelf), ISignedNumber(Of TSelf), ISpanParsable(Of TSelf), ISubtractionOperators(Of TSelf, TSelf, TSelf), ITrigonometricFunctions(Of TSelf), IUnaryNegationOperators(Of TSelf, TSelf), IUnaryPlusOperators(Of TSelf, TSelf)" />
  <TypeSignature Language="F#" Value="type IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt; = interface&#xA;    interface IComparable&#xA;    interface IComparable&lt;'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface IEquatable&lt;'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface IFormattable&#xA;    interface IParsable&lt;'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface ISpanFormattable&#xA;    interface ISpanParsable&lt;'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface IAdditionOperators&lt;'Self, 'Self, 'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt; and 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt; and 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface IAdditiveIdentity&lt;'Self, 'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt; and 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface IComparisonOperators&lt;'Self, 'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt; and 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface IEqualityOperators&lt;'Self, 'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt; and 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface IDecrementOperators&lt;'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface IDivisionOperators&lt;'Self, 'Self, 'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt; and 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt; and 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface IExponentialFunctions&lt;'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface IFloatingPoint&lt;'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface IIncrementOperators&lt;'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface IModulusOperators&lt;'Self, 'Self, 'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt; and 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt; and 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface IMultiplicativeIdentity&lt;'Self, 'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt; and 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface IMultiplyOperators&lt;'Self, 'Self, 'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt; and 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt; and 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface INumber&lt;'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface INumberBase&lt;'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface ISubtractionOperators&lt;'Self, 'Self, 'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt; and 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt; and 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface IUnaryNegationOperators&lt;'Self, 'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt; and 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface IUnaryPlusOperators&lt;'Self, 'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt; and 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface ISignedNumber&lt;'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface IHyperbolicFunctions&lt;'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface ILogarithmicFunctions&lt;'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface IPowerFunctions&lt;'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface IRootFunctions&lt;'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;&#xA;    interface ITrigonometricFunctions&lt;'Self (requires 'Self :&gt; IFloatingPointIeee754&lt;'Self&gt;)&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TSelf&gt;&#xA; where TSelf : IFloatingPointIeee754&lt;TSelf&gt;public interface class IFloatingPointIeee754 : IComparable&lt;TSelf&gt;, IEquatable&lt;TSelf&gt;, IParsable&lt;TSelf&gt;, ISpanParsable&lt;TSelf&gt;, System::Numerics::IAdditionOperators&lt;TSelf, TSelf, TSelf&gt;, System::Numerics::IAdditiveIdentity&lt;TSelf, TSelf&gt;, System::Numerics::IComparisonOperators&lt;TSelf, TSelf&gt;, System::Numerics::IDecrementOperators&lt;TSelf&gt;, System::Numerics::IDivisionOperators&lt;TSelf, TSelf, TSelf&gt;, System::Numerics::IEqualityOperators&lt;TSelf, TSelf&gt;, System::Numerics::IExponentialFunctions&lt;TSelf&gt;, System::Numerics::IFloatingPoint&lt;TSelf&gt;, System::Numerics::IHyperbolicFunctions&lt;TSelf&gt;, System::Numerics::IIncrementOperators&lt;TSelf&gt;, System::Numerics::ILogarithmicFunctions&lt;TSelf&gt;, System::Numerics::IModulusOperators&lt;TSelf, TSelf, TSelf&gt;, System::Numerics::IMultiplicativeIdentity&lt;TSelf, TSelf&gt;, System::Numerics::IMultiplyOperators&lt;TSelf, TSelf, TSelf&gt;, System::Numerics::INumber&lt;TSelf&gt;, System::Numerics::INumberBase&lt;TSelf&gt;, System::Numerics::IPowerFunctions&lt;TSelf&gt;, System::Numerics::IRootFunctions&lt;TSelf&gt;, System::Numerics::ISignedNumber&lt;TSelf&gt;, System::Numerics::ISubtractionOperators&lt;TSelf, TSelf, TSelf&gt;, System::Numerics::ITrigonometricFunctions&lt;TSelf&gt;, System::Numerics::IUnaryNegationOperators&lt;TSelf, TSelf&gt;, System::Numerics::IUnaryPlusOperators&lt;TSelf, TSelf&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSelf">
      <Constraints>
        <InterfaceName>System.Numerics.IFloatingPointIeee754&lt;TSelf&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;TOther&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;TOther&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IParsable&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ISpanFormattable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ISpanParsable&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.IAdditionOperators&lt;TSelf,TSelf,TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.IAdditiveIdentity&lt;TSelf,TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.IComparisonOperators&lt;TSelf,TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.IDecrementOperators&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.IDivisionOperators&lt;TSelf,TSelf,TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.IEqualityOperators&lt;TSelf,TOther&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.IEqualityOperators&lt;TSelf,TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.IExponentialFunctions&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.IFloatingPoint&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.IHyperbolicFunctions&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.IIncrementOperators&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.ILogarithmicFunctions&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.IModulusOperators&lt;TSelf,TSelf,TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.IMultiplicativeIdentity&lt;TSelf,TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.IMultiplyOperators&lt;TSelf,TSelf,TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.INumber&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.INumberBase&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.IPowerFunctions&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.IRootFunctions&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.ISignedNumber&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.ISubtractionOperators&lt;TSelf,TSelf,TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.ITrigonometricFunctions&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.IUnaryNegationOperators&lt;TSelf,TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Numerics.IUnaryPlusOperators&lt;TSelf,TSelf&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TSelf">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BitDecrement">
      <MemberSignature Language="C#" Value="public static TSelf BitDecrement (TSelf x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf BitDecrement(!TSelf x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.IFloatingPointIeee754`1.BitDecrement(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitDecrement (x As TSelf) As TSelf" />
      <MemberSignature Language="F#" Value="static member BitDecrement : 'Self -&gt; 'Self" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.BitDecrement x" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf BitDecrement(TSelf x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitIncrement">
      <MemberSignature Language="C#" Value="public static TSelf BitIncrement (TSelf x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf BitIncrement(!TSelf x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.IFloatingPointIeee754`1.BitIncrement(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitIncrement (x As TSelf) As TSelf" />
      <MemberSignature Language="F#" Value="static member BitIncrement : 'Self -&gt; 'Self" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.BitIncrement x" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf BitIncrement(TSelf x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="E">
      <MemberSignature Language="C#" Value="public static TSelf E { get; }" />
      <MemberSignature Language="ILAsm" Value=".property !TSelf E" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.IFloatingPointIeee754`1.E" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property E As TSelf" />
      <MemberSignature Language="F#" Value="member this.E : 'Self" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.E" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TSelf E { TSelf get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Epsilon">
      <MemberSignature Language="C#" Value="public static TSelf Epsilon { get; }" />
      <MemberSignature Language="ILAsm" Value=".property !TSelf Epsilon" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.IFloatingPointIeee754`1.Epsilon" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Epsilon As TSelf" />
      <MemberSignature Language="F#" Value="member this.Epsilon : 'Self" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.Epsilon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TSelf Epsilon { TSelf get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FusedMultiplyAdd">
      <MemberSignature Language="C#" Value="public static TSelf FusedMultiplyAdd (TSelf left, TSelf right, TSelf addend);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf FusedMultiplyAdd(!TSelf left, !TSelf right, !TSelf addend) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.IFloatingPointIeee754`1.FusedMultiplyAdd(`0,`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FusedMultiplyAdd (left As TSelf, right As TSelf, addend As TSelf) As TSelf" />
      <MemberSignature Language="F#" Value="static member FusedMultiplyAdd : 'Self * 'Self * 'Self -&gt; 'Self" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.FusedMultiplyAdd (left, right, addend)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf FusedMultiplyAdd(TSelf left, TSelf right, TSelf addend);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="TSelf" />
        <Parameter Name="right" Type="TSelf" />
        <Parameter Name="addend" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="addend">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ieee754Remainder">
      <MemberSignature Language="C#" Value="public static TSelf Ieee754Remainder (TSelf left, TSelf right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf Ieee754Remainder(!TSelf left, !TSelf right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.IFloatingPointIeee754`1.Ieee754Remainder(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ieee754Remainder (left As TSelf, right As TSelf) As TSelf" />
      <MemberSignature Language="F#" Value="static member Ieee754Remainder : 'Self * 'Self -&gt; 'Self" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.Ieee754Remainder (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf Ieee754Remainder(TSelf left, TSelf right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="TSelf" />
        <Parameter Name="right" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ILogB">
      <MemberSignature Language="C#" Value="public static int ILogB (TSelf x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual int32 ILogB(!TSelf x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.IFloatingPointIeee754`1.ILogB(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ILogB (x As TSelf) As Integer" />
      <MemberSignature Language="F#" Value="static member ILogB : 'Self -&gt; int" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.ILogB x" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ILogB(TSelf x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFinite">
      <MemberSignature Language="C#" Value="public static bool IsFinite (TSelf value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual bool IsFinite(!TSelf value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.IFloatingPointIeee754`1.IsFinite(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsFinite (value As TSelf) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsFinite : 'Self -&gt; bool" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.IsFinite value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsFinite(TSelf value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInfinity">
      <MemberSignature Language="C#" Value="public static bool IsInfinity (TSelf value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual bool IsInfinity(!TSelf value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.IFloatingPointIeee754`1.IsInfinity(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsInfinity (value As TSelf) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsInfinity : 'Self -&gt; bool" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.IsInfinity value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsInfinity(TSelf value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNaN">
      <MemberSignature Language="C#" Value="public static bool IsNaN (TSelf value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual bool IsNaN(!TSelf value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.IFloatingPointIeee754`1.IsNaN(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNaN (value As TSelf) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsNaN : 'Self -&gt; bool" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.IsNaN value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNaN(TSelf value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNegativeInfinity">
      <MemberSignature Language="C#" Value="public static bool IsNegativeInfinity (TSelf value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual bool IsNegativeInfinity(!TSelf value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.IFloatingPointIeee754`1.IsNegativeInfinity(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNegativeInfinity (value As TSelf) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsNegativeInfinity : 'Self -&gt; bool" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.IsNegativeInfinity value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNegativeInfinity(TSelf value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNormal">
      <MemberSignature Language="C#" Value="public static bool IsNormal (TSelf value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual bool IsNormal(!TSelf value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.IFloatingPointIeee754`1.IsNormal(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNormal (value As TSelf) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsNormal : 'Self -&gt; bool" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.IsNormal value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNormal(TSelf value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPositiveInfinity">
      <MemberSignature Language="C#" Value="public static bool IsPositiveInfinity (TSelf value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual bool IsPositiveInfinity(!TSelf value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.IFloatingPointIeee754`1.IsPositiveInfinity(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPositiveInfinity (value As TSelf) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsPositiveInfinity : 'Self -&gt; bool" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.IsPositiveInfinity value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPositiveInfinity(TSelf value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubnormal">
      <MemberSignature Language="C#" Value="public static bool IsSubnormal (TSelf value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual bool IsSubnormal(!TSelf value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.IFloatingPointIeee754`1.IsSubnormal(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSubnormal (value As TSelf) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsSubnormal : 'Self -&gt; bool" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.IsSubnormal value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSubnormal(TSelf value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NaN">
      <MemberSignature Language="C#" Value="public static TSelf NaN { get; }" />
      <MemberSignature Language="ILAsm" Value=".property !TSelf NaN" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.IFloatingPointIeee754`1.NaN" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NaN As TSelf" />
      <MemberSignature Language="F#" Value="member this.NaN : 'Self" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.NaN" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TSelf NaN { TSelf get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NegativeInfinity">
      <MemberSignature Language="C#" Value="public static TSelf NegativeInfinity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property !TSelf NegativeInfinity" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.IFloatingPointIeee754`1.NegativeInfinity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NegativeInfinity As TSelf" />
      <MemberSignature Language="F#" Value="member this.NegativeInfinity : 'Self" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.NegativeInfinity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TSelf NegativeInfinity { TSelf get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NegativeZero">
      <MemberSignature Language="C#" Value="public static TSelf NegativeZero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property !TSelf NegativeZero" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.IFloatingPointIeee754`1.NegativeZero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NegativeZero As TSelf" />
      <MemberSignature Language="F#" Value="member this.NegativeZero : 'Self" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.NegativeZero" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TSelf NegativeZero { TSelf get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pi">
      <MemberSignature Language="C#" Value="public static TSelf Pi { get; }" />
      <MemberSignature Language="ILAsm" Value=".property !TSelf Pi" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.IFloatingPointIeee754`1.Pi" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Pi As TSelf" />
      <MemberSignature Language="F#" Value="member this.Pi : 'Self" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.Pi" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TSelf Pi { TSelf get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PositiveInfinity">
      <MemberSignature Language="C#" Value="public static TSelf PositiveInfinity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property !TSelf PositiveInfinity" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.IFloatingPointIeee754`1.PositiveInfinity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PositiveInfinity As TSelf" />
      <MemberSignature Language="F#" Value="member this.PositiveInfinity : 'Self" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.PositiveInfinity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TSelf PositiveInfinity { TSelf get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReciprocalEstimate">
      <MemberSignature Language="C#" Value="public static TSelf ReciprocalEstimate (TSelf x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf ReciprocalEstimate(!TSelf x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.IFloatingPointIeee754`1.ReciprocalEstimate(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReciprocalEstimate (x As TSelf) As TSelf" />
      <MemberSignature Language="F#" Value="static member ReciprocalEstimate : 'Self -&gt; 'Self" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.ReciprocalEstimate x" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf ReciprocalEstimate(TSelf x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReciprocalSqrtEstimate">
      <MemberSignature Language="C#" Value="public static TSelf ReciprocalSqrtEstimate (TSelf x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf ReciprocalSqrtEstimate(!TSelf x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.IFloatingPointIeee754`1.ReciprocalSqrtEstimate(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReciprocalSqrtEstimate (x As TSelf) As TSelf" />
      <MemberSignature Language="F#" Value="static member ReciprocalSqrtEstimate : 'Self -&gt; 'Self" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.ReciprocalSqrtEstimate x" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf ReciprocalSqrtEstimate(TSelf x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleB">
      <MemberSignature Language="C#" Value="public static TSelf ScaleB (TSelf x, int n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf ScaleB(!TSelf x, int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.IFloatingPointIeee754`1.ScaleB(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScaleB (x As TSelf, n As Integer) As TSelf" />
      <MemberSignature Language="F#" Value="static member ScaleB : 'Self * int -&gt; 'Self" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.ScaleB (x, n)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf ScaleB(TSelf x, int n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TSelf" />
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="n">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tau">
      <MemberSignature Language="C#" Value="public static TSelf Tau { get; }" />
      <MemberSignature Language="ILAsm" Value=".property !TSelf Tau" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.IFloatingPointIeee754`1.Tau" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Tau As TSelf" />
      <MemberSignature Language="F#" Value="member this.Tau : 'Self" Usage="System.Numerics.IFloatingPointIeee754&lt;'Self (requires 'Self :&gt; System.Numerics.IFloatingPointIeee754&lt;'Self&gt;)&gt;.Tau" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TSelf Tau { TSelf get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

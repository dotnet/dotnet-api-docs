<Type Name="Vector64" FullName="System.Runtime.Intrinsics.Vector64">
  <TypeSignature Language="C#" Value="public static class Vector64" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Vector64 extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Intrinsics.Vector64" />
  <TypeSignature Language="VB.NET" Value="Public Module Vector64" />
  <TypeSignature Language="F#" Value="type Vector64 = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class Vector64 abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a collection of static methods for creating, manipulating, and otherwise operating on 64-bit vectors.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abs&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Abs&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Abs&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Abs``1(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Abs(Of T As Structure) (vector As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member Abs : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.Abs vector" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; Abs(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Abs&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Abs&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Abs(Of T) (vector As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member Abs : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.Abs vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; Abs(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="vector">The vector that will have its absolute value computed.</param>
        <summary>Computes the absolute value of each element in a vector.</summary>
        <returns>A vector whose elements are the absolute value of the elements in <paramref name="vector" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Add&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Add&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Add``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Add(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member Add : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.Add (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; Add(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Add&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Add&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Add(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member Add : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.Add (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; Add(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to add with <paramref name="right" />.</param>
        <param name="right">The vector to add with <paramref name="left" />.</param>
        <summary>Adds two vectors to compute their sum.</summary>
        <returns>The sum of <paramref name="left" /> and <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="AndNot&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; AndNot&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; AndNot&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.AndNot``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function AndNot(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member AndNot : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.AndNot (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; AndNot(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; AndNot&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; AndNot&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AndNot(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member AndNot : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.AndNot (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; AndNot(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to bitwise-and with <paramref name="right" />.</param>
        <param name="right">The vector to that is ones-complemented before being bitwise-and with <paramref name="left" />.</param>
        <summary>Computes the bitwise-and of a given vector and the ones complement of another vector.</summary>
        <returns>The bitwise-and of <paramref name="left" /> and the ones-complement of <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="As&lt;T,U&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;U&gt; As&lt;T,U&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct where U : struct;" FrameworkAlternate="net-5.0;net-6.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!U&gt; As&lt;struct .ctor (class System.ValueType) T, struct .ctor (class System.ValueType) U&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-5.0;net-6.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.As``2(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As(Of T As Structure, U As Structure) (vector As Vector64(Of T)) As Vector64(Of U)" FrameworkAlternate="net-5.0;net-6.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="static member As : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'U (requires 'U : struct)&gt; (requires 'T : struct and 'U : struct)" Usage="System.Runtime.Intrinsics.Vector64.As vector" FrameworkAlternate="net-5.0;net-6.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename U&gt;&#xA; where T : value class where U : value class[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;U&gt; As(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-5.0;net-6.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;TTo&gt; As&lt;TFrom,TTo&gt; (this System.Runtime.Intrinsics.Vector64&lt;TFrom&gt; vector) where TFrom : struct where TTo : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!TTo&gt; As&lt;struct .ctor (class System.ValueType) TFrom, struct .ctor (class System.ValueType) TTo&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!TFrom&gt; vector) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As(Of TFrom As Structure, TTo As Structure) (vector As Vector64(Of TFrom)) As Vector64(Of TTo)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member As : System.Runtime.Intrinsics.Vector64&lt;'From (requires 'From : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'o (requires 'o : struct)&gt; (requires 'From : struct and 'o : struct)" Usage="System.Runtime.Intrinsics.Vector64.As vector" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFrom, typename TTo&gt;&#xA; where TFrom : value class where TTo : value class[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;TTo&gt; As(System::Runtime::Intrinsics::Vector64&lt;TFrom&gt; vector);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;TTo&gt; As&lt;TFrom,TTo&gt; (this System.Runtime.Intrinsics.Vector64&lt;TFrom&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!TTo&gt; As&lt;TFrom, TTo&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!TFrom&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As(Of TFrom, TTo) (vector As Vector64(Of TFrom)) As Vector64(Of TTo)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member As : System.Runtime.Intrinsics.Vector64&lt;'From&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'o&gt;" Usage="System.Runtime.Intrinsics.Vector64.As vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFrom, typename TTo&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;TTo&gt; As(System::Runtime::Intrinsics::Vector64&lt;TFrom&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType FrameworkAlternate="net-5.0;net-6.0;netcore-3.0;netcore-3.1">System.Runtime.Intrinsics.Vector64&lt;U&gt;</ReturnType>
        <ReturnType FrameworkAlternate="net-7.0;net-8.0;net-9.0">System.Runtime.Intrinsics.Vector64&lt;TTo&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" Index="0" FrameworkAlternate="net-5.0;net-6.0;netcore-3.0;netcore-3.1">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TFrom" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="U" Index="1" FrameworkAlternate="net-5.0;net-6.0;netcore-3.0;netcore-3.1">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TTo" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the input vector.</typeparam>
        <typeparam name="TFrom">The type of the input vector.</typeparam>
        <typeparam name="U">The type that the vector <paramref name="vector" /> should be reinterpreted as.</typeparam>
        <typeparam name="TTo">The type that the vector <paramref name="vector" /> should be reinterpreted as.</typeparam>
        <param name="vector">The vector to reinterpret.</param>
        <summary>Reinterprets a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> of type <typeparamref name="TFrom" /> as a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> of type <typeparamref name="TTo" />.</summary>
        <returns>
          <paramref name="vector" /> reinterpreted as a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> of type <typeparamref name="TTo" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="TFrom" />) or the type of the target (<typeparamref name="TTo" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsByte&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;byte&gt; AsByte&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct;" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int8&gt; AsByte&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.AsByte``1(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsByte(Of T As Structure) (vector As Vector64(Of T)) As Vector64(Of Byte)" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="static member AsByte : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;byte&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.AsByte vector" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::Byte&gt; AsByte(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;byte&gt; AsByte&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int8&gt; AsByte&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsByte(Of T) (vector As Vector64(Of T)) As Vector64(Of Byte)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member AsByte : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Vector64.AsByte vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::Byte&gt; AsByte(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the input vector.</typeparam>
        <param name="vector">The vector to reinterpret.</param>
        <summary>Reinterprets a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> as a new <see cref="T:System.Runtime.Intrinsics.Vector64" /> of type <see cref="T:System.Byte" />.</summary>
        <returns>
          <paramref name="vector" /> reinterpreted as a new <see cref="T:System.Runtime.Intrinsics.Vector64" /> of type <see cref="T:System.Byte" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsDouble&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;double&gt; AsDouble&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct;" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; AsDouble&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.AsDouble``1(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsDouble(Of T As Structure) (vector As Vector64(Of T)) As Vector64(Of Double)" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="static member AsDouble : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;double&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.AsDouble vector" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;double&gt; AsDouble(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;double&gt; AsDouble&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; AsDouble&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsDouble(Of T) (vector As Vector64(Of T)) As Vector64(Of Double)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member AsDouble : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;double&gt;" Usage="System.Runtime.Intrinsics.Vector64.AsDouble vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;double&gt; AsDouble(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the input vector.</typeparam>
        <param name="vector">The vector to reinterpret.</param>
        <summary>Reinterprets a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> as a new <see cref="T:System.Runtime.Intrinsics.Vector64" /> of type <see cref="T:System.Double" />.</summary>
        <returns>
          <paramref name="vector" /> reinterpreted as a new <see cref="T:System.Runtime.Intrinsics.Vector64" /> of type <see cref="T:System.Double" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsInt16&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;short&gt; AsInt16&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct;" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; AsInt16&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.AsInt16``1(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsInt16(Of T As Structure) (vector As Vector64(Of T)) As Vector64(Of Short)" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="static member AsInt16 : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;int16&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.AsInt16 vector" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;short&gt; AsInt16(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;short&gt; AsInt16&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; AsInt16&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsInt16(Of T) (vector As Vector64(Of T)) As Vector64(Of Short)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member AsInt16 : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Vector64.AsInt16 vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;short&gt; AsInt16(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the input vector.</typeparam>
        <param name="vector">The vector to reinterpret.</param>
        <summary>Reinterprets a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> as a new <see cref="T:System.Runtime.Intrinsics.Vector64" /> of type <see cref="T:System.Int16" />.</summary>
        <returns>
          <paramref name="vector" /> reinterpreted as a new <see cref="T:System.Runtime.Intrinsics.Vector64" /> of type <see cref="T:System.Int16" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsInt32&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;int&gt; AsInt32&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct;" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; AsInt32&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.AsInt32``1(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsInt32(Of T As Structure) (vector As Vector64(Of T)) As Vector64(Of Integer)" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="static member AsInt32 : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;int&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.AsInt32 vector" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;int&gt; AsInt32(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;int&gt; AsInt32&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; AsInt32&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsInt32(Of T) (vector As Vector64(Of T)) As Vector64(Of Integer)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member AsInt32 : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;int&gt;" Usage="System.Runtime.Intrinsics.Vector64.AsInt32 vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;int&gt; AsInt32(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the input vector.</typeparam>
        <param name="vector">The vector to reinterpret.</param>
        <summary>Reinterprets a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> as a new <see cref="T:System.Runtime.Intrinsics.Vector64" /> of type <see cref="T:System.Int32" />.</summary>
        <returns>
          <paramref name="vector" /> reinterpreted as a new <see cref="T:System.Runtime.Intrinsics.Vector64" /> of type <see cref="T:System.Int32" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsInt64&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;long&gt; AsInt64&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct;" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int64&gt; AsInt64&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.AsInt64``1(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsInt64(Of T As Structure) (vector As Vector64(Of T)) As Vector64(Of Long)" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="static member AsInt64 : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;int64&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.AsInt64 vector" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;long&gt; AsInt64(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;long&gt; AsInt64&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int64&gt; AsInt64&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsInt64(Of T) (vector As Vector64(Of T)) As Vector64(Of Long)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member AsInt64 : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Vector64.AsInt64 vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;long&gt; AsInt64(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the input vector.</typeparam>
        <param name="vector">The vector to reinterpret.</param>
        <summary>Reinterprets a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> as a new <see cref="T:System.Runtime.Intrinsics.Vector64" /> of type <see cref="T:System.Int64" />.</summary>
        <returns>
          <paramref name="vector" /> reinterpreted as a new <see cref="T:System.Runtime.Intrinsics.Vector64" /> of type <see cref="T:System.Int64" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsNInt&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;IntPtr&gt; AsNInt&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;native int&gt; AsNInt&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.AsNInt``1(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsNInt(Of T As Structure) (vector As Vector64(Of T)) As Vector64(Of IntPtr)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member AsNInt : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;nativeint&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.AsNInt vector" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;IntPtr&gt; AsNInt(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;IntPtr&gt; AsNInt&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;native int&gt; AsNInt&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsNInt(Of T) (vector As Vector64(Of T)) As Vector64(Of IntPtr)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member AsNInt : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;nativeint&gt;" Usage="System.Runtime.Intrinsics.Vector64.AsNInt vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;IntPtr&gt; AsNInt(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.IntPtr&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the input vector.</typeparam>
        <param name="vector">The vector to reinterpret.</param>
        <summary>Reinterprets a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> as a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>
          <paramref name="vector" /> reinterpreted as a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsNUInt&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;UIntPtr&gt; AsNUInt&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;native unsigned int&gt; AsNUInt&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.AsNUInt``1(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsNUInt(Of T As Structure) (vector As Vector64(Of T)) As Vector64(Of UIntPtr)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member AsNUInt : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;unativeint&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.AsNUInt vector" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;UIntPtr&gt; AsNUInt(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;UIntPtr&gt; AsNUInt&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;native unsigned int&gt; AsNUInt&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsNUInt(Of T) (vector As Vector64(Of T)) As Vector64(Of UIntPtr)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member AsNUInt : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;unativeint&gt;" Usage="System.Runtime.Intrinsics.Vector64.AsNUInt vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;UIntPtr&gt; AsNUInt(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UIntPtr&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the input vector.</typeparam>
        <param name="vector">The vector to reinterpret.</param>
        <summary>Reinterprets a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> as a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>
          <paramref name="vector" /> reinterpreted as a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsSByte&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; AsSByte&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct;" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int8&gt; AsSByte&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.AsSByte``1(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsSByte(Of T As Structure) (vector As Vector64(Of T)) As Vector64(Of SByte)" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="static member AsSByte : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.AsSByte vector" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::SByte&gt; AsSByte(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; AsSByte&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int8&gt; AsSByte&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsSByte(Of T) (vector As Vector64(Of T)) As Vector64(Of SByte)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member AsSByte : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Vector64.AsSByte vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::SByte&gt; AsSByte(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the input vector.</typeparam>
        <param name="vector">The vector to reinterpret.</param>
        <summary>Reinterprets a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> as a new <see cref="T:System.Runtime.Intrinsics.Vector64" /> of type <see cref="T:System.SByte" />.</summary>
        <returns>
          <paramref name="vector" /> reinterpreted as a new <see cref="T:System.Runtime.Intrinsics.Vector64" /> of type <see cref="T:System.SByte" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsSingle&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;float&gt; AsSingle&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct;" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; AsSingle&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.AsSingle``1(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsSingle(Of T As Structure) (vector As Vector64(Of T)) As Vector64(Of Single)" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="static member AsSingle : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;single&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.AsSingle vector" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;float&gt; AsSingle(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;float&gt; AsSingle&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; AsSingle&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsSingle(Of T) (vector As Vector64(Of T)) As Vector64(Of Single)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member AsSingle : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;single&gt;" Usage="System.Runtime.Intrinsics.Vector64.AsSingle vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;float&gt; AsSingle(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the input vector.</typeparam>
        <param name="vector">The vector to reinterpret.</param>
        <summary>Reinterprets a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> as a new <see cref="T:System.Runtime.Intrinsics.Vector64" /> of type <see cref="T:System.Single" />.</summary>
        <returns>
          <paramref name="vector" /> reinterpreted as a new <see cref="T:System.Runtime.Intrinsics.Vector64" /> of type <see cref="T:System.Single" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsUInt16&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ushort&gt; AsUInt16&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct;" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt; AsUInt16&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.AsUInt16``1(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsUInt16(Of T As Structure) (vector As Vector64(Of T)) As Vector64(Of UShort)" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="static member AsUInt16 : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;uint16&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.AsUInt16 vector" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt; AsUInt16(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ushort&gt; AsUInt16&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt; AsUInt16&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsUInt16(Of T) (vector As Vector64(Of T)) As Vector64(Of UShort)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member AsUInt16 : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Vector64.AsUInt16 vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt; AsUInt16(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the input vector.</typeparam>
        <param name="vector">The vector to reinterpret.</param>
        <summary>Reinterprets a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> as a new <see cref="T:System.Runtime.Intrinsics.Vector64" /> of type <see cref="T:System.UInt16" />.</summary>
        <returns>
          <paramref name="vector" /> reinterpreted as a new <see cref="T:System.Runtime.Intrinsics.Vector64" /> of type <see cref="T:System.UInt16" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsUInt32&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;uint&gt; AsUInt32&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct;" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; AsUInt32&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.AsUInt32``1(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsUInt32(Of T As Structure) (vector As Vector64(Of T)) As Vector64(Of UInteger)" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="static member AsUInt32 : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;uint32&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.AsUInt32 vector" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; AsUInt32(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;uint&gt; AsUInt32&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; AsUInt32&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsUInt32(Of T) (vector As Vector64(Of T)) As Vector64(Of UInteger)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member AsUInt32 : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Vector64.AsUInt32 vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; AsUInt32(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the input vector.</typeparam>
        <param name="vector">The vector to reinterpret.</param>
        <summary>Reinterprets a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> as a new <see cref="T:System.Runtime.Intrinsics.Vector64" /> of type <see cref="T:System.UInt32" />.</summary>
        <returns>
          <paramref name="vector" /> reinterpreted as a new <see cref="T:System.Runtime.Intrinsics.Vector64" /> of type <see cref="T:System.UInt32" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsUInt64&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ulong&gt; AsUInt64&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct;" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int64&gt; AsUInt64&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.AsUInt64``1(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsUInt64(Of T As Structure) (vector As Vector64(Of T)) As Vector64(Of ULong)" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="static member AsUInt64 : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;uint64&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.AsUInt64 vector" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt64&gt; AsUInt64(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ulong&gt; AsUInt64&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int64&gt; AsUInt64&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsUInt64(Of T) (vector As Vector64(Of T)) As Vector64(Of ULong)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member AsUInt64 : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Vector64.AsUInt64 vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt64&gt; AsUInt64(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the input vector.</typeparam>
        <param name="vector">The vector to reinterpret.</param>
        <summary>Reinterprets a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> as a new <see cref="T:System.Runtime.Intrinsics.Vector64" /> of type <see cref="T:System.UInt64" />.</summary>
        <returns>
          <paramref name="vector" /> reinterpreted as a new <see cref="T:System.Runtime.Intrinsics.Vector64" /> of type <see cref="T:System.UInt64" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseAnd&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; BitwiseAnd&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; BitwiseAnd&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.BitwiseAnd``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function BitwiseAnd(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member BitwiseAnd : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.BitwiseAnd (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; BitwiseAnd(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; BitwiseAnd&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; BitwiseAnd&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BitwiseAnd(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member BitwiseAnd : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.BitwiseAnd (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; BitwiseAnd(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to bitwise-and with <paramref name="right" />.</param>
        <param name="right">The vector to bitwise-and with <paramref name="left" />.</param>
        <summary>Computes the bitwise-and of two vectors.</summary>
        <returns>The bitwise-and of <paramref name="left" /> and <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseOr&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; BitwiseOr&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; BitwiseOr&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.BitwiseOr``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function BitwiseOr(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member BitwiseOr : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.BitwiseOr (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; BitwiseOr(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; BitwiseOr&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; BitwiseOr&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BitwiseOr(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member BitwiseOr : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.BitwiseOr (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; BitwiseOr(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to bitwise-or with <paramref name="right" />.</param>
        <param name="right">The vector to bitwise-or with <paramref name="left" />.</param>
        <summary>Computes the bitwise-or of two vectors.</summary>
        <returns>The bitwise-or of <paramref name="left" /> and <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;double&gt; Ceiling (System.Runtime.Intrinsics.Vector64&lt;double&gt; vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; Ceiling(valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Ceiling(System.Runtime.Intrinsics.Vector64{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Function Ceiling (vector As Vector64(Of Double)) As Vector64(Of Double)" />
      <MemberSignature Language="F#" Value="static member Ceiling : System.Runtime.Intrinsics.Vector64&lt;double&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;double&gt;" Usage="System.Runtime.Intrinsics.Vector64.Ceiling vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;double&gt; Ceiling(System::Runtime::Intrinsics::Vector64&lt;double&gt; vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector that will have its ceiling computed.</param>
        <summary>Computes the ceiling of each element in a vector.</summary>
        <returns>A vector whose elements are the ceiling of the elements in <paramref name="vector" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;float&gt; Ceiling (System.Runtime.Intrinsics.Vector64&lt;float&gt; vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; Ceiling(valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Ceiling(System.Runtime.Intrinsics.Vector64{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Function Ceiling (vector As Vector64(Of Single)) As Vector64(Of Single)" />
      <MemberSignature Language="F#" Value="static member Ceiling : System.Runtime.Intrinsics.Vector64&lt;single&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;single&gt;" Usage="System.Runtime.Intrinsics.Vector64.Ceiling vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;float&gt; Ceiling(System::Runtime::Intrinsics::Vector64&lt;float&gt; vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector that will have its ceiling computed.</param>
        <summary>Computes the ceiling of each element in a vector.</summary>
        <returns>A vector whose elements are the ceiling of the elements in <paramref name="vector" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalSelect&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; ConditionalSelect&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; condition, System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; ConditionalSelect&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; condition, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ConditionalSelect``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConditionalSelect(Of T As Structure) (condition As Vector64(Of T), left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member ConditionalSelect : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.ConditionalSelect (condition, left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; ConditionalSelect(System::Runtime::Intrinsics::Vector64&lt;T&gt; condition, System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; ConditionalSelect&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; condition, System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; ConditionalSelect&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; condition, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function ConditionalSelect(Of T) (condition As Vector64(Of T), left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member ConditionalSelect : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.ConditionalSelect (condition, left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; ConditionalSelect(System::Runtime::Intrinsics::Vector64&lt;T&gt; condition, System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="condition" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="2" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="condition">The mask that is used to select a value from <paramref name="left" /> or <paramref name="right" />.</param>
        <param name="left">The vector that is selected when the corresponding bit in <paramref name="condition" /> is one.</param>
        <param name="right">The vector that is selected when the corresponding bit in <paramref name="condition" /> is zero.</param>
        <summary>Conditionally selects a value from two vectors on a bitwise basis.</summary>
        <returns>A vector whose bits come from <paramref name="left" /> or <paramref name="right" /> based on the value of <paramref name="condition" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="condition" />, <paramref name="left" />, and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToDouble">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;double&gt; ConvertToDouble (System.Runtime.Intrinsics.Vector64&lt;long&gt; vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; ConvertToDouble(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int64&gt; vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ConvertToDouble(System.Runtime.Intrinsics.Vector64{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToDouble (vector As Vector64(Of Long)) As Vector64(Of Double)" />
      <MemberSignature Language="F#" Value="static member ConvertToDouble : System.Runtime.Intrinsics.Vector64&lt;int64&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;double&gt;" Usage="System.Runtime.Intrinsics.Vector64.ConvertToDouble vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;double&gt; ConvertToDouble(System::Runtime::Intrinsics::Vector64&lt;long&gt; vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int64&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector to convert.</param>
        <summary>Converts a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> to a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>The converted vector.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToDouble">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;double&gt; ConvertToDouble (System.Runtime.Intrinsics.Vector64&lt;ulong&gt; vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; ConvertToDouble(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int64&gt; vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ConvertToDouble(System.Runtime.Intrinsics.Vector64{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToDouble (vector As Vector64(Of ULong)) As Vector64(Of Double)" />
      <MemberSignature Language="F#" Value="static member ConvertToDouble : System.Runtime.Intrinsics.Vector64&lt;uint64&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;double&gt;" Usage="System.Runtime.Intrinsics.Vector64.ConvertToDouble vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;double&gt; ConvertToDouble(System::Runtime::Intrinsics::Vector64&lt;System::UInt64&gt; vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt64&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector to convert.</param>
        <summary>Converts a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> to a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>The converted vector.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToInt32">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;int&gt; ConvertToInt32 (System.Runtime.Intrinsics.Vector64&lt;float&gt; vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; ConvertToInt32(valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ConvertToInt32(System.Runtime.Intrinsics.Vector64{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInt32 (vector As Vector64(Of Single)) As Vector64(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ConvertToInt32 : System.Runtime.Intrinsics.Vector64&lt;single&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;int&gt;" Usage="System.Runtime.Intrinsics.Vector64.ConvertToInt32 vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;int&gt; ConvertToInt32(System::Runtime::Intrinsics::Vector64&lt;float&gt; vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector to convert.</param>
        <summary>Converts a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> to a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>The converted vector.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToInt64">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;long&gt; ConvertToInt64 (System.Runtime.Intrinsics.Vector64&lt;double&gt; vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int64&gt; ConvertToInt64(valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ConvertToInt64(System.Runtime.Intrinsics.Vector64{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInt64 (vector As Vector64(Of Double)) As Vector64(Of Long)" />
      <MemberSignature Language="F#" Value="static member ConvertToInt64 : System.Runtime.Intrinsics.Vector64&lt;double&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Vector64.ConvertToInt64 vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;long&gt; ConvertToInt64(System::Runtime::Intrinsics::Vector64&lt;double&gt; vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector to convert.</param>
        <summary>Converts a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> to a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>The converted vector.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToSingle">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;float&gt; ConvertToSingle (System.Runtime.Intrinsics.Vector64&lt;int&gt; vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; ConvertToSingle(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ConvertToSingle(System.Runtime.Intrinsics.Vector64{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToSingle (vector As Vector64(Of Integer)) As Vector64(Of Single)" />
      <MemberSignature Language="F#" Value="static member ConvertToSingle : System.Runtime.Intrinsics.Vector64&lt;int&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;single&gt;" Usage="System.Runtime.Intrinsics.Vector64.ConvertToSingle vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;float&gt; ConvertToSingle(System::Runtime::Intrinsics::Vector64&lt;int&gt; vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector to convert.</param>
        <summary>Converts a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> to a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>The converted vector.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToSingle">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;float&gt; ConvertToSingle (System.Runtime.Intrinsics.Vector64&lt;uint&gt; vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; ConvertToSingle(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ConvertToSingle(System.Runtime.Intrinsics.Vector64{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToSingle (vector As Vector64(Of UInteger)) As Vector64(Of Single)" />
      <MemberSignature Language="F#" Value="static member ConvertToSingle : System.Runtime.Intrinsics.Vector64&lt;uint32&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;single&gt;" Usage="System.Runtime.Intrinsics.Vector64.ConvertToSingle vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;float&gt; ConvertToSingle(System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector to convert.</param>
        <summary>Converts a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> to a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>The converted vector.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToUInt32">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;uint&gt; ConvertToUInt32 (System.Runtime.Intrinsics.Vector64&lt;float&gt; vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; ConvertToUInt32(valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ConvertToUInt32(System.Runtime.Intrinsics.Vector64{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToUInt32 (vector As Vector64(Of Single)) As Vector64(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ConvertToUInt32 : System.Runtime.Intrinsics.Vector64&lt;single&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Vector64.ConvertToUInt32 vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; ConvertToUInt32(System::Runtime::Intrinsics::Vector64&lt;float&gt; vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector to convert.</param>
        <summary>Converts a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> to a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>The converted vector.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToUInt64">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ulong&gt; ConvertToUInt64 (System.Runtime.Intrinsics.Vector64&lt;double&gt; vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int64&gt; ConvertToUInt64(valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ConvertToUInt64(System.Runtime.Intrinsics.Vector64{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToUInt64 (vector As Vector64(Of Double)) As Vector64(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ConvertToUInt64 : System.Runtime.Intrinsics.Vector64&lt;double&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Vector64.ConvertToUInt64 vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt64&gt; ConvertToUInt64(System::Runtime::Intrinsics::Vector64&lt;double&gt; vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector to convert.</param>
        <summary>Converts a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> to a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>The converted vector.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CopyTo&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector, Span&lt;T&gt; destination) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyTo&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector, valuetype System.Span`1&lt;!!T&gt; destination) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CopyTo``1(System.Runtime.Intrinsics.Vector64{``0},System.Span{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyTo(Of T As Structure) (vector As Vector64(Of T), destination As Span(Of T))" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member CopyTo : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * Span&lt;'T (requires 'T : struct)&gt; -&gt; unit (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.CopyTo (vector, destination)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static void CopyTo(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector, Span&lt;T&gt; destination);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static void CopyTo&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector, Span&lt;T&gt; destination);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyTo&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector, valuetype System.Span`1&lt;!!T&gt; destination) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyTo(Of T) (vector As Vector64(Of T), destination As Span(Of T))" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member CopyTo : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * Span&lt;'T&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Vector64.CopyTo (vector, destination)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CopyTo(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector, Span&lt;T&gt; destination);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="destination" Type="System.Span&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="vector">The vector to be copied.</param>
        <param name="destination">The span to which <paramref name="vector" /> is copied.</param>
        <summary>Copies a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> to a given span.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The length of <paramref name="destination" /> is less than <see cref="P:System.Runtime.Intrinsics.Vector64`1.Count" />.</exception>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> and <paramref name="destination" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CopyTo&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector, T[] destination) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyTo&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector, !!T[] destination) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CopyTo``1(System.Runtime.Intrinsics.Vector64{``0},``0[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyTo(Of T As Structure) (vector As Vector64(Of T), destination As T())" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member CopyTo : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * 'T[] -&gt; unit (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.CopyTo (vector, destination)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static void CopyTo(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector, cli::array &lt;T&gt; ^ destination);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static void CopyTo&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector, T[] destination);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyTo&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector, !!T[] destination) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyTo(Of T) (vector As Vector64(Of T), destination As T())" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member CopyTo : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * 'T[] -&gt; unit" Usage="System.Runtime.Intrinsics.Vector64.CopyTo (vector, destination)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CopyTo(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector, cli::array &lt;T&gt; ^ destination);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="destination" Type="T[]" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="vector">The vector to be copied.</param>
        <param name="destination">The array to which <paramref name="vector" /> is copied.</param>
        <summary>Copies a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> to a given array.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <paramref name="destination" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The length of <paramref name="destination" /> is less than <see cref="P:System.Runtime.Intrinsics.Vector64`1.Count" />.</exception>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> and <paramref name="destination" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CopyTo&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector, T[] destination, int startIndex) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyTo&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector, !!T[] destination, int32 startIndex) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CopyTo``1(System.Runtime.Intrinsics.Vector64{``0},``0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyTo(Of T As Structure) (vector As Vector64(Of T), destination As T(), startIndex As Integer)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member CopyTo : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * 'T[] * int -&gt; unit (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.CopyTo (vector, destination, startIndex)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static void CopyTo(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector, cli::array &lt;T&gt; ^ destination, int startIndex);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static void CopyTo&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector, T[] destination, int startIndex);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyTo&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector, !!T[] destination, int32 startIndex) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyTo(Of T) (vector As Vector64(Of T), destination As T(), startIndex As Integer)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member CopyTo : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * 'T[] * int -&gt; unit" Usage="System.Runtime.Intrinsics.Vector64.CopyTo (vector, destination, startIndex)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CopyTo(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector, cli::array &lt;T&gt; ^ destination, int startIndex);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="destination" Type="T[]" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="vector">The vector to be copied.</param>
        <param name="destination">The array to which <paramref name="vector" /> is copied.</param>
        <param name="startIndex">The starting index of <paramref name="destination" /> which <paramref name="vector" /> will be copied to.</param>
        <summary>Copies a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> to a given array starting at the specified index.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The length of <paramref name="destination" /> is less than <see cref="P:System.Runtime.Intrinsics.Vector64`1.Count" />.</exception>
        <exception cref="T:System.NullReferenceException">
          <paramref name="destination" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> is negative or greater than the length of <paramref name="destination" />.</exception>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> and <paramref name="destination" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;byte&gt; Create (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int8&gt; Create(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (value As Byte) As Vector64(Of Byte)" />
      <MemberSignature Language="F#" Value="static member Create : byte -&gt; System.Runtime.Intrinsics.Vector64&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::Byte&gt; Create(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">The value that all elements will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with all elements initialized to the specified value.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with all elements initialized to <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

On x86, this method corresponds to __m64 _mm_set1_pi8

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;double&gt; Create (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; Create(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (value As Double) As Vector64(Of Double)" />
      <MemberSignature Language="F#" Value="static member Create : double -&gt; System.Runtime.Intrinsics.Vector64&lt;double&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;double&gt; Create(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">The value that all elements will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with all elements initialized to the specified value.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with all elements initialized to <paramref name="value" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;short&gt; Create (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; Create(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (value As Short) As Vector64(Of Short)" />
      <MemberSignature Language="F#" Value="static member Create : int16 -&gt; System.Runtime.Intrinsics.Vector64&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;short&gt; Create(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">The value that all elements will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with all elements initialized to the specified value.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with all elements initialized to <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

On x86, this method corresponds to __m64 _mm_set1_pi16

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;int&gt; Create (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; Create(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (value As Integer) As Vector64(Of Integer)" />
      <MemberSignature Language="F#" Value="static member Create : int -&gt; System.Runtime.Intrinsics.Vector64&lt;int&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;int&gt; Create(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">The value that all elements will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with all elements initialized to the specified value.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with all elements initialized to <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

On x86, this method corresponds to __m64 _mm_set1_pi32

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;long&gt; Create (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int64&gt; Create(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (value As Long) As Vector64(Of Long)" />
      <MemberSignature Language="F#" Value="static member Create : int64 -&gt; System.Runtime.Intrinsics.Vector64&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;long&gt; Create(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">The value that all elements will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with all elements initialized to the specified value.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with all elements initialized to <paramref name="value" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;IntPtr&gt; Create (IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;native int&gt; Create(native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (value As IntPtr) As Vector64(Of IntPtr)" />
      <MemberSignature Language="F#" Value="static member Create : nativeint -&gt; System.Runtime.Intrinsics.Vector64&lt;nativeint&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;IntPtr&gt; Create(IntPtr value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.IntPtr&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.IntPtr" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="value">The value that all elements will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with all elements initialized to the specified value.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with all elements initialized to <paramref name="value" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; Create (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int8&gt; Create(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (value As SByte) As Vector64(Of SByte)" />
      <MemberSignature Language="F#" Value="static member Create : sbyte -&gt; System.Runtime.Intrinsics.Vector64&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::SByte&gt; Create(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">The value that all elements will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with all elements initialized to the specified value.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with all elements initialized to <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

On x86, this method corresponds to __m64 _mm_set1_pi8

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;float&gt; Create (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; Create(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (value As Single) As Vector64(Of Single)" />
      <MemberSignature Language="F#" Value="static member Create : single -&gt; System.Runtime.Intrinsics.Vector64&lt;single&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;float&gt; Create(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value that all elements will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with all elements initialized to the specified value.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with all elements initialized to <paramref name="value" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ushort&gt; Create (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt; Create(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (value As UShort) As Vector64(Of UShort)" />
      <MemberSignature Language="F#" Value="static member Create : uint16 -&gt; System.Runtime.Intrinsics.Vector64&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt; Create(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">The value that all elements will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with all elements initialized to the specified value.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with all elements initialized to <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

On x86, this method corresponds to __m64 _mm_set1_pi16

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;uint&gt; Create (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; Create(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (value As UInteger) As Vector64(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Create : uint32 -&gt; System.Runtime.Intrinsics.Vector64&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; Create(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">The value that all elements will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with all elements initialized to the specified value.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with all elements initialized to <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

On x86, this method corresponds to __m64 _mm_set1_pi32

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ulong&gt; Create (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int64&gt; Create(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (value As ULong) As Vector64(Of ULong)" />
      <MemberSignature Language="F#" Value="static member Create : uint64 -&gt; System.Runtime.Intrinsics.Vector64&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt64&gt; Create(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">The value that all elements will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with all elements initialized to the specified value.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with all elements initialized to <paramref name="value" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;UIntPtr&gt; Create (UIntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;native unsigned int&gt; Create(native unsigned int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create(System.UIntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (value As UIntPtr) As Vector64(Of UIntPtr)" />
      <MemberSignature Language="F#" Value="static member Create : unativeint -&gt; System.Runtime.Intrinsics.Vector64&lt;unativeint&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;UIntPtr&gt; Create(UIntPtr value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UIntPtr&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UIntPtr" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="value">The value that all elements will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with all elements initialized to the specified value.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with all elements initialized to <paramref name="value" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;int&gt; Create (int e0, int e1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; Create(int32 e0, int32 e1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (e0 As Integer, e1 As Integer) As Vector64(Of Integer)" />
      <MemberSignature Language="F#" Value="static member Create : int * int -&gt; System.Runtime.Intrinsics.Vector64&lt;int&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create (e0, e1)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;int&gt; Create(int e0, int e1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e0" Type="System.Int32" />
        <Parameter Name="e1" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e0">The value that element 0 will be initialized to.</param>
        <param name="e1">The value that element 1 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with each element initialized to the corresponding specified value.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with each element initialized to corresponding specified value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

On x86, this method corresponds to __m64 _mm_setr_pi32

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;float&gt; Create (float e0, float e1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; Create(float32 e0, float32 e1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (e0 As Single, e1 As Single) As Vector64(Of Single)" />
      <MemberSignature Language="F#" Value="static member Create : single * single -&gt; System.Runtime.Intrinsics.Vector64&lt;single&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create (e0, e1)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;float&gt; Create(float e0, float e1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e0" Type="System.Single" />
        <Parameter Name="e1" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="e0">The value that element 0 will be initialized to.</param>
        <param name="e1">The value that element 1 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with each element initialized to the corresponding specified value.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with each element initialized to corresponding specified value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;uint&gt; Create (uint e0, uint e1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; Create(unsigned int32 e0, unsigned int32 e1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (e0 As UInteger, e1 As UInteger) As Vector64(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Create : uint32 * uint32 -&gt; System.Runtime.Intrinsics.Vector64&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create (e0, e1)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; Create(System::UInt32 e0, System::UInt32 e1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e0" Type="System.UInt32" />
        <Parameter Name="e1" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="e0">The value that element 0 will be initialized to.</param>
        <param name="e1">The value that element 1 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with each element initialized to the corresponding specified value.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with each element initialized to corresponding specified value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

On x86, this method corresponds to __m64 _mm_setr_pi32

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;short&gt; Create (short e0, short e1, short e2, short e3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; Create(int16 e0, int16 e1, int16 e2, int16 e3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create(System.Int16,System.Int16,System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (e0 As Short, e1 As Short, e2 As Short, e3 As Short) As Vector64(Of Short)" />
      <MemberSignature Language="F#" Value="static member Create : int16 * int16 * int16 * int16 -&gt; System.Runtime.Intrinsics.Vector64&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create (e0, e1, e2, e3)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;short&gt; Create(short e0, short e1, short e2, short e3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e0" Type="System.Int16" />
        <Parameter Name="e1" Type="System.Int16" />
        <Parameter Name="e2" Type="System.Int16" />
        <Parameter Name="e3" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="e0">The value that element 0 will be initialized to.</param>
        <param name="e1">The value that element 1 will be initialized to.</param>
        <param name="e2">The value that element 2 will be initialized to.</param>
        <param name="e3">The value that element 3 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with each element initialized to the corresponding specified value.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with each element initialized to corresponding specified value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

On x86, this method corresponds to __m64 _mm_setr_pi16

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ushort&gt; Create (ushort e0, ushort e1, ushort e2, ushort e3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt; Create(unsigned int16 e0, unsigned int16 e1, unsigned int16 e2, unsigned int16 e3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create(System.UInt16,System.UInt16,System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (e0 As UShort, e1 As UShort, e2 As UShort, e3 As UShort) As Vector64(Of UShort)" />
      <MemberSignature Language="F#" Value="static member Create : uint16 * uint16 * uint16 * uint16 -&gt; System.Runtime.Intrinsics.Vector64&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create (e0, e1, e2, e3)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt; Create(System::UInt16 e0, System::UInt16 e1, System::UInt16 e2, System::UInt16 e3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e0" Type="System.UInt16" />
        <Parameter Name="e1" Type="System.UInt16" />
        <Parameter Name="e2" Type="System.UInt16" />
        <Parameter Name="e3" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="e0">The value that element 0 will be initialized to.</param>
        <param name="e1">The value that element 1 will be initialized to.</param>
        <param name="e2">The value that element 2 will be initialized to.</param>
        <param name="e3">The value that element 3 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with each element initialized to the corresponding specified value.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with each element initialized to corresponding specified value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

On x86, this method corresponds to __m64 _mm_setr_pi16

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;byte&gt; Create (byte e0, byte e1, byte e2, byte e3, byte e4, byte e5, byte e6, byte e7);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int8&gt; Create(unsigned int8 e0, unsigned int8 e1, unsigned int8 e2, unsigned int8 e3, unsigned int8 e4, unsigned int8 e5, unsigned int8 e6, unsigned int8 e7) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create(System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (e0 As Byte, e1 As Byte, e2 As Byte, e3 As Byte, e4 As Byte, e5 As Byte, e6 As Byte, e7 As Byte) As Vector64(Of Byte)" />
      <MemberSignature Language="F#" Value="static member Create : byte * byte * byte * byte * byte * byte * byte * byte -&gt; System.Runtime.Intrinsics.Vector64&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create (e0, e1, e2, e3, e4, e5, e6, e7)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::Byte&gt; Create(System::Byte e0, System::Byte e1, System::Byte e2, System::Byte e3, System::Byte e4, System::Byte e5, System::Byte e6, System::Byte e7);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e0" Type="System.Byte" />
        <Parameter Name="e1" Type="System.Byte" />
        <Parameter Name="e2" Type="System.Byte" />
        <Parameter Name="e3" Type="System.Byte" />
        <Parameter Name="e4" Type="System.Byte" />
        <Parameter Name="e5" Type="System.Byte" />
        <Parameter Name="e6" Type="System.Byte" />
        <Parameter Name="e7" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="e0">The value that element 0 will be initialized to.</param>
        <param name="e1">The value that element 1 will be initialized to.</param>
        <param name="e2">The value that element 2 will be initialized to.</param>
        <param name="e3">The value that element 3 will be initialized to.</param>
        <param name="e4">The value that element 4 will be initialized to.</param>
        <param name="e5">The value that element 5 will be initialized to.</param>
        <param name="e6">The value that element 6 will be initialized to.</param>
        <param name="e7">The value that element 7 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with each element initialized to the corresponding specified value.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with each element initialized to corresponding specified value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

On x86, this method corresponds to __m64 _mm_setr_pi8

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; Create (sbyte e0, sbyte e1, sbyte e2, sbyte e3, sbyte e4, sbyte e5, sbyte e6, sbyte e7);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int8&gt; Create(int8 e0, int8 e1, int8 e2, int8 e3, int8 e4, int8 e5, int8 e6, int8 e7) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create(System.SByte,System.SByte,System.SByte,System.SByte,System.SByte,System.SByte,System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (e0 As SByte, e1 As SByte, e2 As SByte, e3 As SByte, e4 As SByte, e5 As SByte, e6 As SByte, e7 As SByte) As Vector64(Of SByte)" />
      <MemberSignature Language="F#" Value="static member Create : sbyte * sbyte * sbyte * sbyte * sbyte * sbyte * sbyte * sbyte -&gt; System.Runtime.Intrinsics.Vector64&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create (e0, e1, e2, e3, e4, e5, e6, e7)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::SByte&gt; Create(System::SByte e0, System::SByte e1, System::SByte e2, System::SByte e3, System::SByte e4, System::SByte e5, System::SByte e6, System::SByte e7);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e0" Type="System.SByte" />
        <Parameter Name="e1" Type="System.SByte" />
        <Parameter Name="e2" Type="System.SByte" />
        <Parameter Name="e3" Type="System.SByte" />
        <Parameter Name="e4" Type="System.SByte" />
        <Parameter Name="e5" Type="System.SByte" />
        <Parameter Name="e6" Type="System.SByte" />
        <Parameter Name="e7" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="e0">The value that element 0 will be initialized to.</param>
        <param name="e1">The value that element 1 will be initialized to.</param>
        <param name="e2">The value that element 2 will be initialized to.</param>
        <param name="e3">The value that element 3 will be initialized to.</param>
        <param name="e4">The value that element 4 will be initialized to.</param>
        <param name="e5">The value that element 5 will be initialized to.</param>
        <param name="e6">The value that element 6 will be initialized to.</param>
        <param name="e7">The value that element 7 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with each element initialized to the corresponding specified value.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with each element initialized to corresponding specified value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

On x86, this method corresponds to __m64 _mm_setr_pi8

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Create&lt;T&gt; (ReadOnlySpan&lt;T&gt; values) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Create&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.ReadOnlySpan`1&lt;!!T&gt; values) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create``1(System.ReadOnlySpan{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T As Structure) (values As ReadOnlySpan(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member Create : ReadOnlySpan&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.Create values" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; Create(ReadOnlySpan&lt;T&gt; values);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Create&lt;T&gt; (ReadOnlySpan&lt;T&gt; values);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Create&lt;T&gt;(valuetype System.ReadOnlySpan`1&lt;!!T&gt; values) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (values As ReadOnlySpan(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member Create : ReadOnlySpan&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create values" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; Create(ReadOnlySpan&lt;T&gt; values);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="values" Type="System.ReadOnlySpan&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="values">The readonly span from which the vector is created.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> from a given readonly span.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with its elements set to the first <see cref="P:System.Runtime.Intrinsics.Vector64`1.Count" /> elements from <paramref name="values" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="values" /> is less than <see cref="P:System.Runtime.Intrinsics.Vector64`1.Count" />.</exception>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="values" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Create&lt;T&gt; (T value) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Create&lt;struct .ctor (class System.ValueType) T&gt;(!!T value) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T As Structure) (value As T) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member Create : 'T -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.Create value" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; Create(T value);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Create&lt;T&gt; (T value);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Create&lt;T&gt;(!!T value) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (value As T) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member Create : 'T -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create value" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; Create(T value);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="value">The value that all elements will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with all elements initialized to the specified value.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with all elements initialized to <paramref name="value" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Create&lt;T&gt; (T[] values) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Create&lt;struct .ctor (class System.ValueType) T&gt;(!!T[] values) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T As Structure) (values As T()) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.Create values" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; Create(cli::array &lt;T&gt; ^ values);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Create&lt;T&gt; (T[] values);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] values) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (values As T()) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create values" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; Create(cli::array &lt;T&gt; ^ values);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="values" Type="T[]" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="values">The array from which the vector is created.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> from a given array.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with its elements set to the first <see cref="P:System.Runtime.Intrinsics.Vector64`1.Count" /> elements from <paramref name="values" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <paramref name="values" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="values" /> is less than <see cref="P:System.Runtime.Intrinsics.Vector64`1.Count" />.</exception>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="values" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Create&lt;T&gt; (T[] values, int index) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Create&lt;struct .ctor (class System.ValueType) T&gt;(!!T[] values, int32 index) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Create``1(``0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T As Structure) (values As T(), index As Integer) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] * int -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.Create (values, index)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; Create(cli::array &lt;T&gt; ^ values, int index);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Create&lt;T&gt; (T[] values, int index);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] values, int32 index) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (values As T(), index As Integer) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] * int -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.Create (values, index)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; Create(cli::array &lt;T&gt; ^ values, int index);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="values" Type="T[]" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="values">The array from which the vector is created.</param>
        <param name="index">The index in <paramref name="values" /> at which to being reading elements.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> from a given array.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with its elements set to the first <see cref="P:System.Runtime.Intrinsics.Vector128`1.Count" /> elements from <paramref name="values" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <paramref name="values" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="values" />, starting from <paramref name="index" />, is less than <see cref="P:System.Runtime.Intrinsics.Vector64`1.Count" />.</exception>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="values" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateScalar">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;byte&gt; CreateScalar (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int8&gt; CreateScalar(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalar(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalar (value As Byte) As Vector64(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CreateScalar : byte -&gt; System.Runtime.Intrinsics.Vector64&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalar value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::Byte&gt; CreateScalar(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements initialized to zero.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements initialized to zero.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalar">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;double&gt; CreateScalar (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; CreateScalar(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalar(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalar (value As Double) As Vector64(Of Double)" />
      <MemberSignature Language="F#" Value="static member CreateScalar : double -&gt; System.Runtime.Intrinsics.Vector64&lt;double&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalar value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;double&gt; CreateScalar(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" Index="0" FrameworkAlternate="net-5.0;net-6.0;net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements initialized to zero.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements initialized to zero.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalar">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;short&gt; CreateScalar (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; CreateScalar(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalar(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalar (value As Short) As Vector64(Of Short)" />
      <MemberSignature Language="F#" Value="static member CreateScalar : int16 -&gt; System.Runtime.Intrinsics.Vector64&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalar value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;short&gt; CreateScalar(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements initialized to zero.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements initialized to zero.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalar">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;int&gt; CreateScalar (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; CreateScalar(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalar (value As Integer) As Vector64(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CreateScalar : int -&gt; System.Runtime.Intrinsics.Vector64&lt;int&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalar value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;int&gt; CreateScalar(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements initialized to zero.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements initialized to zero.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalar">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;long&gt; CreateScalar (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int64&gt; CreateScalar(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalar(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalar (value As Long) As Vector64(Of Long)" />
      <MemberSignature Language="F#" Value="static member CreateScalar : int64 -&gt; System.Runtime.Intrinsics.Vector64&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalar value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;long&gt; CreateScalar(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" Index="0" FrameworkAlternate="net-5.0;net-6.0;net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements initialized to zero.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements initialized to zero.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalar">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;IntPtr&gt; CreateScalar (IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;native int&gt; CreateScalar(native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalar(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalar (value As IntPtr) As Vector64(Of IntPtr)" />
      <MemberSignature Language="F#" Value="static member CreateScalar : nativeint -&gt; System.Runtime.Intrinsics.Vector64&lt;nativeint&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalar value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;IntPtr&gt; CreateScalar(IntPtr value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.IntPtr&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.IntPtr" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements initialized to zero.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements initialized to zero.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalar">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; CreateScalar (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int8&gt; CreateScalar(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalar(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalar (value As SByte) As Vector64(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CreateScalar : sbyte -&gt; System.Runtime.Intrinsics.Vector64&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalar value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::SByte&gt; CreateScalar(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements initialized to zero.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements initialized to zero.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalar">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;float&gt; CreateScalar (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; CreateScalar(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalar(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalar (value As Single) As Vector64(Of Single)" />
      <MemberSignature Language="F#" Value="static member CreateScalar : single -&gt; System.Runtime.Intrinsics.Vector64&lt;single&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalar value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;float&gt; CreateScalar(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements initialized to zero.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements initialized to zero.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalar">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ushort&gt; CreateScalar (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt; CreateScalar(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalar(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalar (value As UShort) As Vector64(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CreateScalar : uint16 -&gt; System.Runtime.Intrinsics.Vector64&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalar value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt; CreateScalar(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements initialized to zero.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements initialized to zero.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalar">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;uint&gt; CreateScalar (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; CreateScalar(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalar(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalar (value As UInteger) As Vector64(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CreateScalar : uint32 -&gt; System.Runtime.Intrinsics.Vector64&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalar value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; CreateScalar(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements initialized to zero.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements initialized to zero.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalar">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ulong&gt; CreateScalar (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int64&gt; CreateScalar(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalar(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalar (value As ULong) As Vector64(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CreateScalar : uint64 -&gt; System.Runtime.Intrinsics.Vector64&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalar value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt64&gt; CreateScalar(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;net-6.0;net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" Index="0" FrameworkAlternate="net-5.0;net-6.0;net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements initialized to zero.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements initialized to zero.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalar">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;UIntPtr&gt; CreateScalar (UIntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;native unsigned int&gt; CreateScalar(native unsigned int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalar(System.UIntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalar (value As UIntPtr) As Vector64(Of UIntPtr)" />
      <MemberSignature Language="F#" Value="static member CreateScalar : unativeint -&gt; System.Runtime.Intrinsics.Vector64&lt;unativeint&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalar value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;UIntPtr&gt; CreateScalar(UIntPtr value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UIntPtr&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UIntPtr" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements initialized to zero.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements initialized to zero.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalar&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; CreateScalar&lt;T&gt; (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; CreateScalar&lt;T&gt;(!!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalar``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalar(Of T) (value As T) As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member CreateScalar : 'T -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalar value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; CreateScalar(T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements initialized to zero.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements initialized to zero.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="value" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateScalarUnsafe">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;byte&gt; CreateScalarUnsafe (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int8&gt; CreateScalarUnsafe(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalarUnsafe (value As Byte) As Vector64(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CreateScalarUnsafe : byte -&gt; System.Runtime.Intrinsics.Vector64&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::Byte&gt; CreateScalarUnsafe(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements left uninitialized.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements left uninitialized.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalarUnsafe">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;double&gt; CreateScalarUnsafe (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; CreateScalarUnsafe(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalarUnsafe (value As Double) As Vector64(Of Double)" />
      <MemberSignature Language="F#" Value="static member CreateScalarUnsafe : double -&gt; System.Runtime.Intrinsics.Vector64&lt;double&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;double&gt; CreateScalarUnsafe(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements left uninitialized.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements left uninitialized.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalarUnsafe">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;short&gt; CreateScalarUnsafe (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; CreateScalarUnsafe(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalarUnsafe (value As Short) As Vector64(Of Short)" />
      <MemberSignature Language="F#" Value="static member CreateScalarUnsafe : int16 -&gt; System.Runtime.Intrinsics.Vector64&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;short&gt; CreateScalarUnsafe(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements left uninitialized.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements left uninitialized.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalarUnsafe">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;int&gt; CreateScalarUnsafe (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; CreateScalarUnsafe(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalarUnsafe (value As Integer) As Vector64(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CreateScalarUnsafe : int -&gt; System.Runtime.Intrinsics.Vector64&lt;int&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;int&gt; CreateScalarUnsafe(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements left uninitialized.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements left uninitialized.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalarUnsafe">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;long&gt; CreateScalarUnsafe (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int64&gt; CreateScalarUnsafe(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalarUnsafe (value As Long) As Vector64(Of Long)" />
      <MemberSignature Language="F#" Value="static member CreateScalarUnsafe : int64 -&gt; System.Runtime.Intrinsics.Vector64&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;long&gt; CreateScalarUnsafe(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements left uninitialized.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements left uninitialized.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalarUnsafe">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;IntPtr&gt; CreateScalarUnsafe (IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;native int&gt; CreateScalarUnsafe(native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalarUnsafe (value As IntPtr) As Vector64(Of IntPtr)" />
      <MemberSignature Language="F#" Value="static member CreateScalarUnsafe : nativeint -&gt; System.Runtime.Intrinsics.Vector64&lt;nativeint&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;IntPtr&gt; CreateScalarUnsafe(IntPtr value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.IntPtr&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.IntPtr" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements left uninitialized.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements left uninitialized.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalarUnsafe">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; CreateScalarUnsafe (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int8&gt; CreateScalarUnsafe(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalarUnsafe (value As SByte) As Vector64(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CreateScalarUnsafe : sbyte -&gt; System.Runtime.Intrinsics.Vector64&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::SByte&gt; CreateScalarUnsafe(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements left uninitialized.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements left uninitialized.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalarUnsafe">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;float&gt; CreateScalarUnsafe (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; CreateScalarUnsafe(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalarUnsafe (value As Single) As Vector64(Of Single)" />
      <MemberSignature Language="F#" Value="static member CreateScalarUnsafe : single -&gt; System.Runtime.Intrinsics.Vector64&lt;single&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;float&gt; CreateScalarUnsafe(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements left uninitialized.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements left uninitialized.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalarUnsafe">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ushort&gt; CreateScalarUnsafe (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt; CreateScalarUnsafe(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalarUnsafe (value As UShort) As Vector64(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CreateScalarUnsafe : uint16 -&gt; System.Runtime.Intrinsics.Vector64&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt; CreateScalarUnsafe(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements left uninitialized.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements left uninitialized.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalarUnsafe">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;uint&gt; CreateScalarUnsafe (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; CreateScalarUnsafe(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalarUnsafe (value As UInteger) As Vector64(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CreateScalarUnsafe : uint32 -&gt; System.Runtime.Intrinsics.Vector64&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; CreateScalarUnsafe(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements left uninitialized.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements left uninitialized.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalarUnsafe">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ulong&gt; CreateScalarUnsafe (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int64&gt; CreateScalarUnsafe(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalarUnsafe (value As ULong) As Vector64(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CreateScalarUnsafe : uint64 -&gt; System.Runtime.Intrinsics.Vector64&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt64&gt; CreateScalarUnsafe(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements left uninitialized.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements left uninitialized.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalarUnsafe">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;UIntPtr&gt; CreateScalarUnsafe (UIntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;native unsigned int&gt; CreateScalarUnsafe(native unsigned int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe(System.UIntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalarUnsafe (value As UIntPtr) As Vector64(Of UIntPtr)" />
      <MemberSignature Language="F#" Value="static member CreateScalarUnsafe : unativeint -&gt; System.Runtime.Intrinsics.Vector64&lt;unativeint&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;UIntPtr&gt; CreateScalarUnsafe(UIntPtr value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UIntPtr&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UIntPtr" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements left uninitialized.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements left uninitialized.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScalarUnsafe&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; CreateScalarUnsafe&lt;T&gt; (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; CreateScalarUnsafe&lt;T&gt;(!!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateScalarUnsafe(Of T) (value As T) As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member CreateScalarUnsafe : 'T -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateScalarUnsafe value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; CreateScalarUnsafe(T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="value">The value that element 0 will be initialized to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to the specified value and the remaining elements left uninitialized.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instance with the first element initialized to <paramref name="value" /> and the remaining elements left uninitialized.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="value" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSequence&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; CreateSequence&lt;T&gt; (T start, T step);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; CreateSequence&lt;T&gt;(!!T start, !!T step) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.CreateSequence``1(``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSequence(Of T) (start As T, step As T) As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member CreateSequence : 'T * 'T -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.CreateSequence (start, step)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; CreateSequence(T start, T step);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="start" Type="T" Index="0" FrameworkAlternate="net-9.0" />
        <Parameter Name="step" Type="T" Index="1" FrameworkAlternate="net-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="start">To be added.</param>
        <param name="step">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Divide&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Divide&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Divide``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Divide(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member Divide : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.Divide (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; Divide(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Divide&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Divide&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Divide(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member Divide : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.Divide (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; Divide(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector that will be divided by <paramref name="right" />.</param>
        <param name="right">The vector that will divide <paramref name="left" />.</param>
        <summary>Divides two vectors to compute their quotient.</summary>
        <returns>The quotient of <paramref name="left" /> divided by <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Divide&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Divide&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, T right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Divide&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, !!T right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Divide``1(System.Runtime.Intrinsics.Vector64{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Divide(Of T) (left As Vector64(Of T), right As T) As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member Divide : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * 'T -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.Divide (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; Divide(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, T right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-8.0;net-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="T" Index="1" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector that will be divided by <paramref name="right" />.</param>
        <param name="right">The scalar that will divide <paramref name="left" />.</param>
        <summary>Divides a vector by a scalar to compute the per-element quotient.</summary>
        <returns>The quotient of <paramref name="left" /> divided by <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dot&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Dot&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Dot&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Dot``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Dot(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As T" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member Dot : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; 'T (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.Dot (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static T Dot(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static T Dot&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Dot&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Dot(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As T" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member Dot : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; 'T" Usage="System.Runtime.Intrinsics.Vector64.Dot (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T Dot(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector that will be dotted with <paramref name="right" />.</param>
        <param name="right">The vector that will be dotted with <paramref name="left" />.</param>
        <summary>Computes the dot product of two vectors.</summary>
        <returns>The dot product of <paramref name="left" /> and <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Equals&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Equals&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Equals``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member Equals : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.Equals (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; Equals(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Equals&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Equals&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member Equals : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.Equals (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; Equals(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to compare with <paramref name="right" />.</param>
        <param name="right">The vector to compare with <paramref name="left" />.</param>
        <summary>Compares two vectors to determine if they are equal on a per-element basis.</summary>
        <returns>A vector whose elements are all-bits-set or zero, depending on if the corresponding elements in <paramref name="left" /> and <paramref name="right" /> were equal.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="EqualsAll&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool EqualsAll&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool EqualsAll&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.EqualsAll``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function EqualsAll(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member EqualsAll : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; bool (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.EqualsAll (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static bool EqualsAll(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static bool EqualsAll&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool EqualsAll&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EqualsAll(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member EqualsAll : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Vector64.EqualsAll (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool EqualsAll(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to compare with <paramref name="right" />.</param>
        <param name="right">The vector to compare with <paramref name="left" />.</param>
        <summary>Compares two vectors to determine if all elements are equal.</summary>
        <returns>
          <see langword="true" /> if all elements in <paramref name="left" /> were equal to the corresponding element in <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="EqualsAny&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool EqualsAny&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool EqualsAny&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.EqualsAny``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function EqualsAny(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member EqualsAny : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; bool (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.EqualsAny (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static bool EqualsAny(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static bool EqualsAny&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool EqualsAny&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EqualsAny(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member EqualsAny : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Vector64.EqualsAny (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool EqualsAny(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to compare with <paramref name="right" />.</param>
        <param name="right">The vector to compare with <paramref name="left" />.</param>
        <summary>Compares two vectors to determine if any elements are equal.</summary>
        <returns>
          <see langword="true" /> if any elements in <paramref name="left" /> was equal to the corresponding element in <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;double&gt; Exp (System.Runtime.Intrinsics.Vector64&lt;double&gt; vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; Exp(valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Exp(System.Runtime.Intrinsics.Vector64{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Function Exp (vector As Vector64(Of Double)) As Vector64(Of Double)" />
      <MemberSignature Language="F#" Value="static member Exp : System.Runtime.Intrinsics.Vector64&lt;double&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;double&gt;" Usage="System.Runtime.Intrinsics.Vector64.Exp vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;double&gt; Exp(System::Runtime::Intrinsics::Vector64&lt;double&gt; vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;" Index="0" FrameworkAlternate="net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;float&gt; Exp (System.Runtime.Intrinsics.Vector64&lt;float&gt; vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; Exp(valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Exp(System.Runtime.Intrinsics.Vector64{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Function Exp (vector As Vector64(Of Single)) As Vector64(Of Single)" />
      <MemberSignature Language="F#" Value="static member Exp : System.Runtime.Intrinsics.Vector64&lt;single&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;single&gt;" Usage="System.Runtime.Intrinsics.Vector64.Exp vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;float&gt; Exp(System::Runtime::Intrinsics::Vector64&lt;float&gt; vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;" Index="0" FrameworkAlternate="net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractMostSignificantBits&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static uint ExtractMostSignificantBits&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ExtractMostSignificantBits&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ExtractMostSignificantBits``1(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExtractMostSignificantBits(Of T As Structure) (vector As Vector64(Of T)) As UInteger" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member ExtractMostSignificantBits : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; uint32 (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.ExtractMostSignificantBits vector" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static System::UInt32 ExtractMostSignificantBits(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static uint ExtractMostSignificantBits&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ExtractMostSignificantBits&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExtractMostSignificantBits(Of T) (vector As Vector64(Of T)) As UInteger" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member ExtractMostSignificantBits : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; uint32" Usage="System.Runtime.Intrinsics.Vector64.ExtractMostSignificantBits vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::UInt32 ExtractMostSignificantBits(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="vector">The vector whose elements should have their most significant bit extracted.</param>
        <summary>Extracts the most significant bit from each element in a vector.</summary>
        <returns>The packed most significant bits extracted from the elements in <paramref name="vector" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;double&gt; Floor (System.Runtime.Intrinsics.Vector64&lt;double&gt; vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; Floor(valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Floor(System.Runtime.Intrinsics.Vector64{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Function Floor (vector As Vector64(Of Double)) As Vector64(Of Double)" />
      <MemberSignature Language="F#" Value="static member Floor : System.Runtime.Intrinsics.Vector64&lt;double&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;double&gt;" Usage="System.Runtime.Intrinsics.Vector64.Floor vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;double&gt; Floor(System::Runtime::Intrinsics::Vector64&lt;double&gt; vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector that will have its floor computed.</param>
        <summary>Computes the floor of each element in a vector.</summary>
        <returns>A vector whose elements are the floor of the elements in <paramref name="vector" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;float&gt; Floor (System.Runtime.Intrinsics.Vector64&lt;float&gt; vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; Floor(valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Floor(System.Runtime.Intrinsics.Vector64{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Function Floor (vector As Vector64(Of Single)) As Vector64(Of Single)" />
      <MemberSignature Language="F#" Value="static member Floor : System.Runtime.Intrinsics.Vector64&lt;single&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;single&gt;" Usage="System.Runtime.Intrinsics.Vector64.Floor vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;float&gt; Floor(System::Runtime::Intrinsics::Vector64&lt;float&gt; vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector that will have its floor computed.</param>
        <summary>Computes the floor of each element in a vector.</summary>
        <returns>A vector whose elements are the floor of the elements in <paramref name="vector" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElement&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetElement&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector, int index) where T : struct;" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetElement&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector, int32 index) cil managed" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.GetElement``1(System.Runtime.Intrinsics.Vector64{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetElement(Of T As Structure) (vector As Vector64(Of T), index As Integer) As T" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="static member GetElement : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * int -&gt; 'T (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.GetElement (vector, index)" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static T GetElement(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector, int index);" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public static T GetElement&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector, int index);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetElement&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector, int32 index) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetElement(Of T) (vector As Vector64(Of T), index As Integer) As T" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member GetElement : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * int -&gt; 'T" Usage="System.Runtime.Intrinsics.Vector64.GetElement (vector, index)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T GetElement(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector, int index);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the input vector.</typeparam>
        <param name="vector">The vector to get the element from.</param>
        <param name="index">The index of the element to get.</param>
        <summary>Gets the element at the specified index.</summary>
        <returns>The value of the element at <paramref name="index" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> was less than zero or greater than the number of elements.</exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; GreaterThan&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; GreaterThan&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.GreaterThan``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GreaterThan(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member GreaterThan : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.GreaterThan (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; GreaterThan(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; GreaterThan&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; GreaterThan&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GreaterThan(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member GreaterThan : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.GreaterThan (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; GreaterThan(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to compare with <paramref name="left" />.</param>
        <param name="right">The vector to compare with <paramref name="right" />.</param>
        <summary>Compares two vectors to determine which is greater on a per-element basis.</summary>
        <returns>A vector whose elements are all-bits-set or zero, depending on if which of the corresponding elements in <paramref name="left" /> and <paramref name="right" /> were greater.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanAll&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool GreaterThanAll&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GreaterThanAll&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.GreaterThanAll``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GreaterThanAll(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member GreaterThanAll : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; bool (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.GreaterThanAll (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static bool GreaterThanAll(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static bool GreaterThanAll&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GreaterThanAll&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GreaterThanAll(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member GreaterThanAll : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Vector64.GreaterThanAll (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool GreaterThanAll(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to compare with <paramref name="right" />.</param>
        <param name="right">The vector to compare with <paramref name="left" />.</param>
        <summary>Compares two vectors to determine if all elements are greater.</summary>
        <returns>
          <see langword="true" /> if all elements in <paramref name="left" /> were greater than the corresponding element in <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanAny&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool GreaterThanAny&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GreaterThanAny&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.GreaterThanAny``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GreaterThanAny(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member GreaterThanAny : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; bool (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.GreaterThanAny (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static bool GreaterThanAny(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static bool GreaterThanAny&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GreaterThanAny&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GreaterThanAny(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member GreaterThanAny : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Vector64.GreaterThanAny (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool GreaterThanAny(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to compare with <paramref name="right" />.</param>
        <param name="right">The vector to compare with <paramref name="left" />.</param>
        <summary>Compares two vectors to determine if any elements are greater.</summary>
        <returns>
          <see langword="true" /> if any elements in <paramref name="left" /> was greater than the corresponding element in <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; GreaterThanOrEqual&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; GreaterThanOrEqual&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.GreaterThanOrEqual``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GreaterThanOrEqual(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member GreaterThanOrEqual : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.GreaterThanOrEqual (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; GreaterThanOrEqual(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; GreaterThanOrEqual&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; GreaterThanOrEqual&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GreaterThanOrEqual(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member GreaterThanOrEqual : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.GreaterThanOrEqual (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; GreaterThanOrEqual(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to compare with <paramref name="left" />.</param>
        <param name="right">The vector to compare with <paramref name="right" />.</param>
        <summary>Compares two vectors to determine which is greater or equal on a per-element basis.</summary>
        <returns>A vector whose elements are all-bits-set or zero, depending on if which of the corresponding elements in <paramref name="left" /> and <paramref name="right" /> were greater or equal.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqualAll&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool GreaterThanOrEqualAll&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GreaterThanOrEqualAll&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.GreaterThanOrEqualAll``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GreaterThanOrEqualAll(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member GreaterThanOrEqualAll : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; bool (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.GreaterThanOrEqualAll (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static bool GreaterThanOrEqualAll(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static bool GreaterThanOrEqualAll&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GreaterThanOrEqualAll&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GreaterThanOrEqualAll(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member GreaterThanOrEqualAll : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Vector64.GreaterThanOrEqualAll (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool GreaterThanOrEqualAll(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to compare with <paramref name="right" />.</param>
        <param name="right">The vector to compare with <paramref name="left" />.</param>
        <summary>Compares two vectors to determine if all elements are greater or equal.</summary>
        <returns>
          <see langword="true" /> if all elements in <paramref name="left" /> were greater than or equal to the corresponding element in <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqualAny&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool GreaterThanOrEqualAny&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GreaterThanOrEqualAny&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.GreaterThanOrEqualAny``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GreaterThanOrEqualAny(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member GreaterThanOrEqualAny : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; bool (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.GreaterThanOrEqualAny (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static bool GreaterThanOrEqualAny(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static bool GreaterThanOrEqualAny&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GreaterThanOrEqualAny&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GreaterThanOrEqualAny(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member GreaterThanOrEqualAny : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Vector64.GreaterThanOrEqualAny (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool GreaterThanOrEqualAny(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to compare with <paramref name="right" />.</param>
        <param name="right">The vector to compare with <paramref name="left" />.</param>
        <summary>Compares two vectors to determine if any elements are greater or equal.</summary>
        <returns>
          <see langword="true" /> if any elements in <paramref name="left" /> was greater than or equal to the corresponding element in <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsHardwareAccelerated">
      <MemberSignature Language="C#" Value="public static bool IsHardwareAccelerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsHardwareAccelerated" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Intrinsics.Vector64.IsHardwareAccelerated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHardwareAccelerated As Boolean" />
      <MemberSignature Language="F#" Value="static member IsHardwareAccelerated : bool" Usage="System.Runtime.Intrinsics.Vector64.IsHardwareAccelerated" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsHardwareAccelerated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether 64-bit vector operations are subject to hardware acceleration through JIT intrinsic support.</summary>
        <value>
          <see langword="true" /> if 64-bit vector operations are subject to hardware acceleration; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

64-bit vector operations are subject to hardware acceleration on systems that support Single Instruction, Multiple Data (SIMD) instructions for 64-bit vectors and the RyuJIT just-in-time compiler is used to compile managed code.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LessThan&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; LessThan&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; LessThan&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.LessThan``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function LessThan(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member LessThan : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.LessThan (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; LessThan(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; LessThan&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; LessThan&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function LessThan(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member LessThan : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.LessThan (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; LessThan(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to compare with <paramref name="left" />.</param>
        <param name="right">The vector to compare with <paramref name="right" />.</param>
        <summary>Compares two vectors to determine which is less on a per-element basis.</summary>
        <returns>A vector whose elements are all-bits-set or zero, depending on if which of the corresponding elements in <paramref name="left" /> and <paramref name="right" /> were less.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="LessThanAll&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool LessThanAll&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool LessThanAll&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.LessThanAll``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function LessThanAll(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member LessThanAll : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; bool (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.LessThanAll (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static bool LessThanAll(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static bool LessThanAll&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool LessThanAll&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function LessThanAll(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member LessThanAll : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Vector64.LessThanAll (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool LessThanAll(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to compare with <paramref name="right" />.</param>
        <param name="right">The vector to compare with <paramref name="left" />.</param>
        <summary>Compares two vectors to determine if all elements are less.</summary>
        <returns>
          <see langword="true" /> if all elements in <paramref name="left" /> were less than the corresponding element in <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="LessThanAny&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool LessThanAny&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool LessThanAny&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.LessThanAny``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function LessThanAny(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member LessThanAny : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; bool (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.LessThanAny (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static bool LessThanAny(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static bool LessThanAny&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool LessThanAny&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function LessThanAny(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member LessThanAny : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Vector64.LessThanAny (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool LessThanAny(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to compare with <paramref name="right" />.</param>
        <param name="right">The vector to compare with <paramref name="left" />.</param>
        <summary>Compares two vectors to determine if any elements are less.</summary>
        <returns>
          <see langword="true" /> if any elements in <paramref name="left" /> was less than the corresponding element in <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; LessThanOrEqual&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; LessThanOrEqual&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.LessThanOrEqual``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function LessThanOrEqual(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member LessThanOrEqual : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.LessThanOrEqual (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; LessThanOrEqual(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; LessThanOrEqual&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; LessThanOrEqual&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function LessThanOrEqual(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member LessThanOrEqual : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.LessThanOrEqual (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; LessThanOrEqual(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to compare with <paramref name="left" />.</param>
        <param name="right">The vector to compare with <paramref name="right" />.</param>
        <summary>Compares two vectors to determine which is less or equal on a per-element basis.</summary>
        <returns>A vector whose elements are all-bits-set or zero, depending on if which of the corresponding elements in <paramref name="left" /> and <paramref name="right" /> were less or equal.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqualAll&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool LessThanOrEqualAll&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool LessThanOrEqualAll&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.LessThanOrEqualAll``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function LessThanOrEqualAll(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member LessThanOrEqualAll : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; bool (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.LessThanOrEqualAll (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static bool LessThanOrEqualAll(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static bool LessThanOrEqualAll&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool LessThanOrEqualAll&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function LessThanOrEqualAll(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member LessThanOrEqualAll : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Vector64.LessThanOrEqualAll (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool LessThanOrEqualAll(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to compare with <paramref name="right" />.</param>
        <param name="right">The vector to compare with <paramref name="left" />.</param>
        <summary>Compares two vectors to determine if all elements are less or equal.</summary>
        <returns>
          <see langword="true" /> if all elements in <paramref name="left" /> were less than or equal to the corresponding element in <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqualAny&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool LessThanOrEqualAny&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool LessThanOrEqualAny&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.LessThanOrEqualAny``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function LessThanOrEqualAny(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member LessThanOrEqualAny : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; bool (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.LessThanOrEqualAny (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static bool LessThanOrEqualAny(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static bool LessThanOrEqualAny&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool LessThanOrEqualAny&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function LessThanOrEqualAny(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member LessThanOrEqualAny : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Vector64.LessThanOrEqualAny (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool LessThanOrEqualAny(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to compare with <paramref name="right" />.</param>
        <param name="right">The vector to compare with <paramref name="left" />.</param>
        <summary>Compares two vectors to determine if any elements are less or equal.</summary>
        <returns>
          <see langword="true" /> if any elements in <paramref name="left" /> was less than or equal to the corresponding element in <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Load&lt;T&gt; (T* source) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Load&lt;struct .ctor (class System.ValueType) T&gt;(!!T* source) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Load``1(``0*)" />
      <MemberSignature Language="F#" Value="static member Load : nativeptr&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.Load source" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; Load(T* source);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Load&lt;T&gt; (T* source);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Load&lt;T&gt;(!!T* source) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member Load : nativeptr&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.Load source" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; Load(T* source);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T*" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="source">The source from which the vector will be loaded.</param>
        <summary>Loads a vector from the given source.</summary>
        <returns>The vector loaded from <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="source" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadAligned&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; LoadAligned&lt;T&gt; (T* source) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; LoadAligned&lt;struct .ctor (class System.ValueType) T&gt;(!!T* source) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.LoadAligned``1(``0*)" />
      <MemberSignature Language="F#" Value="static member LoadAligned : nativeptr&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.LoadAligned source" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; LoadAligned(T* source);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; LoadAligned&lt;T&gt; (T* source);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; LoadAligned&lt;T&gt;(!!T* source) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member LoadAligned : nativeptr&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.LoadAligned source" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; LoadAligned(T* source);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T*" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="source">The aligned source from which the vector will be loaded.</param>
        <summary>Loads a vector from the given aligned source.</summary>
        <returns>The vector loaded from <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="source" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadAlignedNonTemporal&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; LoadAlignedNonTemporal&lt;T&gt; (T* source) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; LoadAlignedNonTemporal&lt;struct .ctor (class System.ValueType) T&gt;(!!T* source) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.LoadAlignedNonTemporal``1(``0*)" />
      <MemberSignature Language="F#" Value="static member LoadAlignedNonTemporal : nativeptr&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.LoadAlignedNonTemporal source" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; LoadAlignedNonTemporal(T* source);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; LoadAlignedNonTemporal&lt;T&gt; (T* source);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; LoadAlignedNonTemporal&lt;T&gt;(!!T* source) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member LoadAlignedNonTemporal : nativeptr&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.LoadAlignedNonTemporal source" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; LoadAlignedNonTemporal(T* source);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T*" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="source">The aligned source from which the vector will be loaded.</param>
        <summary>Loads a vector from the given aligned source.</summary>
        <returns>The vector loaded from <paramref name="source" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This method may bypass the cache on certain platforms.

          ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="source" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadUnsafe&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; LoadUnsafe&lt;T&gt; (ref T source) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; LoadUnsafe&lt;struct .ctor (class System.ValueType) T&gt;(!!T&amp; source) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.LoadUnsafe``1(``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadUnsafe(Of T As Structure) (ByRef source As T) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member LoadUnsafe : 'T -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.LoadUnsafe source" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; LoadUnsafe(T % source);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; LoadUnsafe&lt;T&gt; (ref T source);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; LoadUnsafe&lt;T&gt;([in]!!T&amp; source) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadUnsafe(Of T) (ByRef source As T) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member LoadUnsafe : 'T -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.LoadUnsafe source" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; LoadUnsafe(T % source);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T" RefType="ref" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.RequiresLocation]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.RequiresLocation&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="source">The source from which the vector will be loaded.</param>
        <summary>Loads a vector from the given source.</summary>
        <returns>The vector loaded from <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="source" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadUnsafe&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; LoadUnsafe&lt;T&gt; (ref T source, UIntPtr elementOffset) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; LoadUnsafe&lt;struct .ctor (class System.ValueType) T&gt;(!!T&amp; source, native unsigned int elementOffset) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.LoadUnsafe``1(``0@,System.UIntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadUnsafe(Of T As Structure) (ByRef source As T, elementOffset As UIntPtr) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member LoadUnsafe : 'T * unativeint -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.LoadUnsafe (source, elementOffset)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; LoadUnsafe(T % source, UIntPtr elementOffset);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; LoadUnsafe&lt;T&gt; (ref T source, UIntPtr elementOffset);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; LoadUnsafe&lt;T&gt;([in]!!T&amp; source, native unsigned int elementOffset) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadUnsafe(Of T) (ByRef source As T, elementOffset As UIntPtr) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member LoadUnsafe : 'T * unativeint -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.LoadUnsafe (source, elementOffset)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; LoadUnsafe(T % source, UIntPtr elementOffset);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T" RefType="ref" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.RequiresLocation]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.RequiresLocation&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="elementOffset" Type="System.UIntPtr" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="source">The source to which <paramref name="elementOffset" /> will be added before loading the vector.</param>
        <param name="elementOffset">The element offset from <paramref name="source" /> from which the vector will be loaded.</param>
        <summary>Loads a vector from the given source and element offset.</summary>
        <returns>The vector loaded from <paramref name="source" /> plus <paramref name="elementOffset" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="source" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;double&gt; Log (System.Runtime.Intrinsics.Vector64&lt;double&gt; vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; Log(valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Log(System.Runtime.Intrinsics.Vector64{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Function Log (vector As Vector64(Of Double)) As Vector64(Of Double)" />
      <MemberSignature Language="F#" Value="static member Log : System.Runtime.Intrinsics.Vector64&lt;double&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;double&gt;" Usage="System.Runtime.Intrinsics.Vector64.Log vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;double&gt; Log(System::Runtime::Intrinsics::Vector64&lt;double&gt; vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;" Index="0" FrameworkAlternate="net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;float&gt; Log (System.Runtime.Intrinsics.Vector64&lt;float&gt; vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; Log(valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Log(System.Runtime.Intrinsics.Vector64{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Function Log (vector As Vector64(Of Single)) As Vector64(Of Single)" />
      <MemberSignature Language="F#" Value="static member Log : System.Runtime.Intrinsics.Vector64&lt;single&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;single&gt;" Usage="System.Runtime.Intrinsics.Vector64.Log vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;float&gt; Log(System::Runtime::Intrinsics::Vector64&lt;float&gt; vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;" Index="0" FrameworkAlternate="net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log2">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;double&gt; Log2 (System.Runtime.Intrinsics.Vector64&lt;double&gt; vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; Log2(valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Log2(System.Runtime.Intrinsics.Vector64{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Function Log2 (vector As Vector64(Of Double)) As Vector64(Of Double)" />
      <MemberSignature Language="F#" Value="static member Log2 : System.Runtime.Intrinsics.Vector64&lt;double&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;double&gt;" Usage="System.Runtime.Intrinsics.Vector64.Log2 vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;double&gt; Log2(System::Runtime::Intrinsics::Vector64&lt;double&gt; vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;" Index="0" FrameworkAlternate="net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log2">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;float&gt; Log2 (System.Runtime.Intrinsics.Vector64&lt;float&gt; vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; Log2(valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Log2(System.Runtime.Intrinsics.Vector64{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Function Log2 (vector As Vector64(Of Single)) As Vector64(Of Single)" />
      <MemberSignature Language="F#" Value="static member Log2 : System.Runtime.Intrinsics.Vector64&lt;single&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;single&gt;" Usage="System.Runtime.Intrinsics.Vector64.Log2 vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;float&gt; Log2(System::Runtime::Intrinsics::Vector64&lt;float&gt; vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;" Index="0" FrameworkAlternate="net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Max&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Max&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Max``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Max(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member Max : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.Max (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; Max(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Max&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Max&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Max(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member Max : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.Max (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; Max(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to compare with <paramref name="right" />.</param>
        <param name="right">The vector to compare with <paramref name="left" />.</param>
        <summary>Computes the maximum of two vectors on a per-element basis.</summary>
        <returns>A vector whose elements are the maximum of the corresponding elements in <paramref name="left" /> and <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Min&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Min&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Min``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Min(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member Min : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.Min (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; Min(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Min&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Min&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Min(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member Min : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.Min (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; Min(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to compare with <paramref name="right" />.</param>
        <param name="right">The vector to compare with <paramref name="left" />.</param>
        <summary>Computes the minimum of two vectors on a per-element basis.</summary>
        <returns>A vector whose elements are the minimum of the corresponding elements in <paramref name="left" /> and <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Multiply&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Multiply&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Multiply&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Multiply``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Multiply(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.Multiply (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; Multiply(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Multiply&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Multiply&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Multiply(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.Multiply (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; Multiply(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to multiply with <paramref name="right" />.</param>
        <param name="right">The vector to multiply with <paramref name="left" />.</param>
        <summary>Multiplies two vectors to compute their element-wise product.</summary>
        <returns>The element-wise product of <paramref name="left" /> and <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Multiply&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Multiply&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, T right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Multiply&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, !!T right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Multiply``1(System.Runtime.Intrinsics.Vector64{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Multiply(Of T As Structure) (left As Vector64(Of T), right As T) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * 'T -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.Multiply (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; Multiply(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, T right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Multiply&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, T right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Multiply&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, !!T right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Multiply(Of T) (left As Vector64(Of T), right As T) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * 'T -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.Multiply (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; Multiply(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, T right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="T" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to multiply with <paramref name="right" />.</param>
        <param name="right">The scalar to multiply with <paramref name="left" />.</param>
        <summary>Multiplies a vector by a scalar to compute their product.</summary>
        <returns>The product of <paramref name="left" /> and <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Multiply&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Multiply&lt;T&gt; (T left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Multiply&lt;struct .ctor (class System.ValueType) T&gt;(!!T left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Multiply``1(``0,System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Multiply(Of T As Structure) (left As T, right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member Multiply : 'T * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.Multiply (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; Multiply(T left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Multiply&lt;T&gt; (T left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Multiply&lt;T&gt;(!!T left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Multiply(Of T) (left As T, right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member Multiply : 'T * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.Multiply (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; Multiply(T left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="T" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The scalar to multiply with <paramref name="right" />.</param>
        <param name="right">The vector to multiply with <paramref name="left" />.</param>
        <summary>Multiplies a vector by a scalar to compute their product.</summary>
        <returns>The product of <paramref name="left" /> and <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Narrow">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;float&gt; Narrow (System.Runtime.Intrinsics.Vector64&lt;double&gt; lower, System.Runtime.Intrinsics.Vector64&lt;double&gt; upper);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; Narrow(valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; lower, valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; upper) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Narrow(System.Runtime.Intrinsics.Vector64{System.Double},System.Runtime.Intrinsics.Vector64{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Function Narrow (lower As Vector64(Of Double), upper As Vector64(Of Double)) As Vector64(Of Single)" />
      <MemberSignature Language="F#" Value="static member Narrow : System.Runtime.Intrinsics.Vector64&lt;double&gt; * System.Runtime.Intrinsics.Vector64&lt;double&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;single&gt;" Usage="System.Runtime.Intrinsics.Vector64.Narrow (lower, upper)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;float&gt; Narrow(System::Runtime::Intrinsics::Vector64&lt;double&gt; lower, System::Runtime::Intrinsics::Vector64&lt;double&gt; upper);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lower" Type="System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="upper" Type="System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="lower">The vector that will be narrowed to the lower half of the result vector.</param>
        <param name="upper">The vector that will be narrowed to the upper half of the result vector.</param>
        <summary>Narrows two <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instances into one <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> containing elements narrowed from <paramref name="lower" /> and <paramref name="upper" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Narrow">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; Narrow (System.Runtime.Intrinsics.Vector64&lt;short&gt; lower, System.Runtime.Intrinsics.Vector64&lt;short&gt; upper);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int8&gt; Narrow(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; lower, valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; upper) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Narrow(System.Runtime.Intrinsics.Vector64{System.Int16},System.Runtime.Intrinsics.Vector64{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Function Narrow (lower As Vector64(Of Short), upper As Vector64(Of Short)) As Vector64(Of SByte)" />
      <MemberSignature Language="F#" Value="static member Narrow : System.Runtime.Intrinsics.Vector64&lt;int16&gt; * System.Runtime.Intrinsics.Vector64&lt;int16&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Vector64.Narrow (lower, upper)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::SByte&gt; Narrow(System::Runtime::Intrinsics::Vector64&lt;short&gt; lower, System::Runtime::Intrinsics::Vector64&lt;short&gt; upper);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lower" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="upper" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="lower">The vector that will be narrowed to the lower half of the result vector.</param>
        <param name="upper">The vector that will be narrowed to the upper half of the result vector.</param>
        <summary>Narrows two <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instances into one <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> containing elements narrowed from <paramref name="lower" /> and <paramref name="upper" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Narrow">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;short&gt; Narrow (System.Runtime.Intrinsics.Vector64&lt;int&gt; lower, System.Runtime.Intrinsics.Vector64&lt;int&gt; upper);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; Narrow(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; lower, valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; upper) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Narrow(System.Runtime.Intrinsics.Vector64{System.Int32},System.Runtime.Intrinsics.Vector64{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Function Narrow (lower As Vector64(Of Integer), upper As Vector64(Of Integer)) As Vector64(Of Short)" />
      <MemberSignature Language="F#" Value="static member Narrow : System.Runtime.Intrinsics.Vector64&lt;int&gt; * System.Runtime.Intrinsics.Vector64&lt;int&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Vector64.Narrow (lower, upper)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;short&gt; Narrow(System::Runtime::Intrinsics::Vector64&lt;int&gt; lower, System::Runtime::Intrinsics::Vector64&lt;int&gt; upper);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lower" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="upper" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="lower">The vector that will be narrowed to the lower half of the result vector.</param>
        <param name="upper">The vector that will be narrowed to the upper half of the result vector.</param>
        <summary>Narrows two <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instances into one <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> containing elements narrowed from <paramref name="lower" /> and <paramref name="upper" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Narrow">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;int&gt; Narrow (System.Runtime.Intrinsics.Vector64&lt;long&gt; lower, System.Runtime.Intrinsics.Vector64&lt;long&gt; upper);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; Narrow(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int64&gt; lower, valuetype System.Runtime.Intrinsics.Vector64`1&lt;int64&gt; upper) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Narrow(System.Runtime.Intrinsics.Vector64{System.Int64},System.Runtime.Intrinsics.Vector64{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Function Narrow (lower As Vector64(Of Long), upper As Vector64(Of Long)) As Vector64(Of Integer)" />
      <MemberSignature Language="F#" Value="static member Narrow : System.Runtime.Intrinsics.Vector64&lt;int64&gt; * System.Runtime.Intrinsics.Vector64&lt;int64&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;int&gt;" Usage="System.Runtime.Intrinsics.Vector64.Narrow (lower, upper)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;int&gt; Narrow(System::Runtime::Intrinsics::Vector64&lt;long&gt; lower, System::Runtime::Intrinsics::Vector64&lt;long&gt; upper);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lower" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int64&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="upper" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int64&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="lower">The vector that will be narrowed to the lower half of the result vector.</param>
        <param name="upper">The vector that will be narrowed to the upper half of the result vector.</param>
        <summary>Narrows two <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instances into one <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> containing elements narrowed from <paramref name="lower" /> and <paramref name="upper" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Narrow">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;byte&gt; Narrow (System.Runtime.Intrinsics.Vector64&lt;ushort&gt; lower, System.Runtime.Intrinsics.Vector64&lt;ushort&gt; upper);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int8&gt; Narrow(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt; lower, valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt; upper) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Narrow(System.Runtime.Intrinsics.Vector64{System.UInt16},System.Runtime.Intrinsics.Vector64{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Function Narrow (lower As Vector64(Of UShort), upper As Vector64(Of UShort)) As Vector64(Of Byte)" />
      <MemberSignature Language="F#" Value="static member Narrow : System.Runtime.Intrinsics.Vector64&lt;uint16&gt; * System.Runtime.Intrinsics.Vector64&lt;uint16&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Vector64.Narrow (lower, upper)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::Byte&gt; Narrow(System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt; lower, System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt; upper);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lower" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="upper" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="lower">The vector that will be narrowed to the lower half of the result vector.</param>
        <param name="upper">The vector that will be narrowed to the upper half of the result vector.</param>
        <summary>Narrows two <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instances into one <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> containing elements narrowed from <paramref name="lower" /> and <paramref name="upper" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Narrow">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ushort&gt; Narrow (System.Runtime.Intrinsics.Vector64&lt;uint&gt; lower, System.Runtime.Intrinsics.Vector64&lt;uint&gt; upper);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt; Narrow(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; lower, valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; upper) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Narrow(System.Runtime.Intrinsics.Vector64{System.UInt32},System.Runtime.Intrinsics.Vector64{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Function Narrow (lower As Vector64(Of UInteger), upper As Vector64(Of UInteger)) As Vector64(Of UShort)" />
      <MemberSignature Language="F#" Value="static member Narrow : System.Runtime.Intrinsics.Vector64&lt;uint32&gt; * System.Runtime.Intrinsics.Vector64&lt;uint32&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Vector64.Narrow (lower, upper)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt; Narrow(System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; lower, System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; upper);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lower" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="upper" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="lower">The vector that will be narrowed to the lower half of the result vector.</param>
        <param name="upper">The vector that will be narrowed to the upper half of the result vector.</param>
        <summary>Narrows two <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instances into one <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> containing elements narrowed from <paramref name="lower" /> and <paramref name="upper" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Narrow">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;uint&gt; Narrow (System.Runtime.Intrinsics.Vector64&lt;ulong&gt; lower, System.Runtime.Intrinsics.Vector64&lt;ulong&gt; upper);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; Narrow(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int64&gt; lower, valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int64&gt; upper) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Narrow(System.Runtime.Intrinsics.Vector64{System.UInt64},System.Runtime.Intrinsics.Vector64{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Function Narrow (lower As Vector64(Of ULong), upper As Vector64(Of ULong)) As Vector64(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Narrow : System.Runtime.Intrinsics.Vector64&lt;uint64&gt; * System.Runtime.Intrinsics.Vector64&lt;uint64&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Vector64.Narrow (lower, upper)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; Narrow(System::Runtime::Intrinsics::Vector64&lt;System::UInt64&gt; lower, System::Runtime::Intrinsics::Vector64&lt;System::UInt64&gt; upper);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lower" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt64&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="upper" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt64&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="lower">The vector that will be narrowed to the lower half of the result vector.</param>
        <param name="upper">The vector that will be narrowed to the upper half of the result vector.</param>
        <summary>Narrows two <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> instances into one <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> containing elements narrowed from <paramref name="lower" /> and <paramref name="upper" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Negate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Negate&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Negate&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Negate``1(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Negate(Of T As Structure) (vector As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member Negate : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.Negate vector" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; Negate(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Negate&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Negate&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Negate(Of T) (vector As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member Negate : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.Negate vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; Negate(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="vector">The vector to negate.</param>
        <summary>Negates a vector.</summary>
        <returns>A vector whose elements are the negation of the corresponding elements in <paramref name="vector" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnesComplement&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; OnesComplement&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; OnesComplement&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.OnesComplement``1(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnesComplement(Of T As Structure) (vector As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member OnesComplement : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.OnesComplement vector" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; OnesComplement(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; OnesComplement&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; OnesComplement&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function OnesComplement(Of T) (vector As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member OnesComplement : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.OnesComplement vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; OnesComplement(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="vector">The vector whose ones-complement is to be computed.</param>
        <summary>Computes the ones-complement of a vector.</summary>
        <returns>A vector whose elements are the ones-complement of the corresponding elements in <paramref name="vector" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeft">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;byte&gt; ShiftLeft (System.Runtime.Intrinsics.Vector64&lt;byte&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int8&gt; ShiftLeft(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int8&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftLeft(System.Runtime.Intrinsics.Vector64{System.Byte},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftLeft (vector As Vector64(Of Byte), shiftCount As Integer) As Vector64(Of Byte)" />
      <MemberSignature Language="F#" Value="static member ShiftLeft : System.Runtime.Intrinsics.Vector64&lt;byte&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftLeft (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::Byte&gt; ShiftLeft(System::Runtime::Intrinsics::Vector64&lt;System::Byte&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts each element of a vector left by the specified amount.</summary>
        <returns>A vector whose elements where shifted left by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeft">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;short&gt; ShiftLeft (System.Runtime.Intrinsics.Vector64&lt;short&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; ShiftLeft(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftLeft(System.Runtime.Intrinsics.Vector64{System.Int16},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftLeft (vector As Vector64(Of Short), shiftCount As Integer) As Vector64(Of Short)" />
      <MemberSignature Language="F#" Value="static member ShiftLeft : System.Runtime.Intrinsics.Vector64&lt;int16&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftLeft (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;short&gt; ShiftLeft(System::Runtime::Intrinsics::Vector64&lt;short&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts each element of a vector left by the specified amount.</summary>
        <returns>A vector whose elements where shifted left by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeft">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;int&gt; ShiftLeft (System.Runtime.Intrinsics.Vector64&lt;int&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; ShiftLeft(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftLeft(System.Runtime.Intrinsics.Vector64{System.Int32},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftLeft (vector As Vector64(Of Integer), shiftCount As Integer) As Vector64(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ShiftLeft : System.Runtime.Intrinsics.Vector64&lt;int&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;int&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftLeft (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;int&gt; ShiftLeft(System::Runtime::Intrinsics::Vector64&lt;int&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts each element of a vector left by the specified amount.</summary>
        <returns>A vector whose elements where shifted left by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeft">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;long&gt; ShiftLeft (System.Runtime.Intrinsics.Vector64&lt;long&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int64&gt; ShiftLeft(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int64&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftLeft(System.Runtime.Intrinsics.Vector64{System.Int64},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftLeft (vector As Vector64(Of Long), shiftCount As Integer) As Vector64(Of Long)" />
      <MemberSignature Language="F#" Value="static member ShiftLeft : System.Runtime.Intrinsics.Vector64&lt;int64&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftLeft (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;long&gt; ShiftLeft(System::Runtime::Intrinsics::Vector64&lt;long&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int64&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts each element of a vector left by the specified amount.</summary>
        <returns>A vector whose elements where shifted left by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeft">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;IntPtr&gt; ShiftLeft (System.Runtime.Intrinsics.Vector64&lt;IntPtr&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;native int&gt; ShiftLeft(valuetype System.Runtime.Intrinsics.Vector64`1&lt;native int&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftLeft(System.Runtime.Intrinsics.Vector64{System.IntPtr},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftLeft (vector As Vector64(Of IntPtr), shiftCount As Integer) As Vector64(Of IntPtr)" />
      <MemberSignature Language="F#" Value="static member ShiftLeft : System.Runtime.Intrinsics.Vector64&lt;nativeint&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;nativeint&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftLeft (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;IntPtr&gt; ShiftLeft(System::Runtime::Intrinsics::Vector64&lt;IntPtr&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.IntPtr&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.IntPtr&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts each element of a vector left by the specified amount.</summary>
        <returns>A vector whose elements where shifted left by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeft">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; ShiftLeft (System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int8&gt; ShiftLeft(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int8&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftLeft(System.Runtime.Intrinsics.Vector64{System.SByte},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftLeft (vector As Vector64(Of SByte), shiftCount As Integer) As Vector64(Of SByte)" />
      <MemberSignature Language="F#" Value="static member ShiftLeft : System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftLeft (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::SByte&gt; ShiftLeft(System::Runtime::Intrinsics::Vector64&lt;System::SByte&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.SByte&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts each element of a vector left by the specified amount.</summary>
        <returns>A vector whose elements where shifted left by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeft">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ushort&gt; ShiftLeft (System.Runtime.Intrinsics.Vector64&lt;ushort&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt; ShiftLeft(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftLeft(System.Runtime.Intrinsics.Vector64{System.UInt16},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftLeft (vector As Vector64(Of UShort), shiftCount As Integer) As Vector64(Of UShort)" />
      <MemberSignature Language="F#" Value="static member ShiftLeft : System.Runtime.Intrinsics.Vector64&lt;uint16&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftLeft (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt; ShiftLeft(System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts each element of a vector left by the specified amount.</summary>
        <returns>A vector whose elements where shifted left by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeft">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;uint&gt; ShiftLeft (System.Runtime.Intrinsics.Vector64&lt;uint&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; ShiftLeft(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftLeft(System.Runtime.Intrinsics.Vector64{System.UInt32},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftLeft (vector As Vector64(Of UInteger), shiftCount As Integer) As Vector64(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ShiftLeft : System.Runtime.Intrinsics.Vector64&lt;uint32&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftLeft (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; ShiftLeft(System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts each element of a vector left by the specified amount.</summary>
        <returns>A vector whose elements where shifted left by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeft">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ulong&gt; ShiftLeft (System.Runtime.Intrinsics.Vector64&lt;ulong&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int64&gt; ShiftLeft(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int64&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftLeft(System.Runtime.Intrinsics.Vector64{System.UInt64},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftLeft (vector As Vector64(Of ULong), shiftCount As Integer) As Vector64(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ShiftLeft : System.Runtime.Intrinsics.Vector64&lt;uint64&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftLeft (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt64&gt; ShiftLeft(System::Runtime::Intrinsics::Vector64&lt;System::UInt64&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt64&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts each element of a vector left by the specified amount.</summary>
        <returns>A vector whose elements where shifted left by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeft">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;UIntPtr&gt; ShiftLeft (System.Runtime.Intrinsics.Vector64&lt;UIntPtr&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;native unsigned int&gt; ShiftLeft(valuetype System.Runtime.Intrinsics.Vector64`1&lt;native unsigned int&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftLeft(System.Runtime.Intrinsics.Vector64{System.UIntPtr},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftLeft (vector As Vector64(Of UIntPtr), shiftCount As Integer) As Vector64(Of UIntPtr)" />
      <MemberSignature Language="F#" Value="static member ShiftLeft : System.Runtime.Intrinsics.Vector64&lt;unativeint&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;unativeint&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftLeft (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;UIntPtr&gt; ShiftLeft(System::Runtime::Intrinsics::Vector64&lt;UIntPtr&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UIntPtr&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.UIntPtr&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts each element of a vector left by the specified amount.</summary>
        <returns>A vector whose elements where shifted left by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightArithmetic">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;short&gt; ShiftRightArithmetic (System.Runtime.Intrinsics.Vector64&lt;short&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; ShiftRightArithmetic(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftRightArithmetic(System.Runtime.Intrinsics.Vector64{System.Int16},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftRightArithmetic (vector As Vector64(Of Short), shiftCount As Integer) As Vector64(Of Short)" />
      <MemberSignature Language="F#" Value="static member ShiftRightArithmetic : System.Runtime.Intrinsics.Vector64&lt;int16&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftRightArithmetic (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;short&gt; ShiftRightArithmetic(System::Runtime::Intrinsics::Vector64&lt;short&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts (signed) each element of a vector right by the specified amount.</summary>
        <returns>A vector whose elements where shifted right by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightArithmetic">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;int&gt; ShiftRightArithmetic (System.Runtime.Intrinsics.Vector64&lt;int&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; ShiftRightArithmetic(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftRightArithmetic(System.Runtime.Intrinsics.Vector64{System.Int32},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftRightArithmetic (vector As Vector64(Of Integer), shiftCount As Integer) As Vector64(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ShiftRightArithmetic : System.Runtime.Intrinsics.Vector64&lt;int&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;int&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftRightArithmetic (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;int&gt; ShiftRightArithmetic(System::Runtime::Intrinsics::Vector64&lt;int&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts (signed) each element of a vector right by the specified amount.</summary>
        <returns>A vector whose elements where shifted right by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightArithmetic">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;long&gt; ShiftRightArithmetic (System.Runtime.Intrinsics.Vector64&lt;long&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int64&gt; ShiftRightArithmetic(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int64&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftRightArithmetic(System.Runtime.Intrinsics.Vector64{System.Int64},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftRightArithmetic (vector As Vector64(Of Long), shiftCount As Integer) As Vector64(Of Long)" />
      <MemberSignature Language="F#" Value="static member ShiftRightArithmetic : System.Runtime.Intrinsics.Vector64&lt;int64&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftRightArithmetic (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;long&gt; ShiftRightArithmetic(System::Runtime::Intrinsics::Vector64&lt;long&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int64&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts (signed) each element of a vector right by the specified amount.</summary>
        <returns>A vector whose elements where shifted right by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightArithmetic">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;IntPtr&gt; ShiftRightArithmetic (System.Runtime.Intrinsics.Vector64&lt;IntPtr&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;native int&gt; ShiftRightArithmetic(valuetype System.Runtime.Intrinsics.Vector64`1&lt;native int&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftRightArithmetic(System.Runtime.Intrinsics.Vector64{System.IntPtr},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftRightArithmetic (vector As Vector64(Of IntPtr), shiftCount As Integer) As Vector64(Of IntPtr)" />
      <MemberSignature Language="F#" Value="static member ShiftRightArithmetic : System.Runtime.Intrinsics.Vector64&lt;nativeint&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;nativeint&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftRightArithmetic (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;IntPtr&gt; ShiftRightArithmetic(System::Runtime::Intrinsics::Vector64&lt;IntPtr&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.IntPtr&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.IntPtr&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts (signed) each element of a vector right by the specified amount.</summary>
        <returns>A vector whose elements where shifted right by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightArithmetic">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; ShiftRightArithmetic (System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int8&gt; ShiftRightArithmetic(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int8&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftRightArithmetic(System.Runtime.Intrinsics.Vector64{System.SByte},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftRightArithmetic (vector As Vector64(Of SByte), shiftCount As Integer) As Vector64(Of SByte)" />
      <MemberSignature Language="F#" Value="static member ShiftRightArithmetic : System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftRightArithmetic (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::SByte&gt; ShiftRightArithmetic(System::Runtime::Intrinsics::Vector64&lt;System::SByte&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.SByte&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts (signed) each element of a vector right by the specified amount.</summary>
        <returns>A vector whose elements where shifted right by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightLogical">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;byte&gt; ShiftRightLogical (System.Runtime.Intrinsics.Vector64&lt;byte&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int8&gt; ShiftRightLogical(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int8&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftRightLogical(System.Runtime.Intrinsics.Vector64{System.Byte},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftRightLogical (vector As Vector64(Of Byte), shiftCount As Integer) As Vector64(Of Byte)" />
      <MemberSignature Language="F#" Value="static member ShiftRightLogical : System.Runtime.Intrinsics.Vector64&lt;byte&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftRightLogical (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::Byte&gt; ShiftRightLogical(System::Runtime::Intrinsics::Vector64&lt;System::Byte&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts (unsigned) each element of a vector right by the specified amount.</summary>
        <returns>A vector whose elements where shifted right by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightLogical">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;short&gt; ShiftRightLogical (System.Runtime.Intrinsics.Vector64&lt;short&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; ShiftRightLogical(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftRightLogical(System.Runtime.Intrinsics.Vector64{System.Int16},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftRightLogical (vector As Vector64(Of Short), shiftCount As Integer) As Vector64(Of Short)" />
      <MemberSignature Language="F#" Value="static member ShiftRightLogical : System.Runtime.Intrinsics.Vector64&lt;int16&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftRightLogical (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;short&gt; ShiftRightLogical(System::Runtime::Intrinsics::Vector64&lt;short&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts (unsigned) each element of a vector right by the specified amount.</summary>
        <returns>A vector whose elements where shifted right by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightLogical">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;int&gt; ShiftRightLogical (System.Runtime.Intrinsics.Vector64&lt;int&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; ShiftRightLogical(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftRightLogical(System.Runtime.Intrinsics.Vector64{System.Int32},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftRightLogical (vector As Vector64(Of Integer), shiftCount As Integer) As Vector64(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ShiftRightLogical : System.Runtime.Intrinsics.Vector64&lt;int&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;int&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftRightLogical (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;int&gt; ShiftRightLogical(System::Runtime::Intrinsics::Vector64&lt;int&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts (unsigned) each element of a vector right by the specified amount.</summary>
        <returns>A vector whose elements where shifted right by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightLogical">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;long&gt; ShiftRightLogical (System.Runtime.Intrinsics.Vector64&lt;long&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int64&gt; ShiftRightLogical(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int64&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftRightLogical(System.Runtime.Intrinsics.Vector64{System.Int64},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftRightLogical (vector As Vector64(Of Long), shiftCount As Integer) As Vector64(Of Long)" />
      <MemberSignature Language="F#" Value="static member ShiftRightLogical : System.Runtime.Intrinsics.Vector64&lt;int64&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftRightLogical (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;long&gt; ShiftRightLogical(System::Runtime::Intrinsics::Vector64&lt;long&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int64&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts (unsigned) each element of a vector right by the specified amount.</summary>
        <returns>A vector whose elements where shifted right by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightLogical">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;IntPtr&gt; ShiftRightLogical (System.Runtime.Intrinsics.Vector64&lt;IntPtr&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;native int&gt; ShiftRightLogical(valuetype System.Runtime.Intrinsics.Vector64`1&lt;native int&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftRightLogical(System.Runtime.Intrinsics.Vector64{System.IntPtr},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftRightLogical (vector As Vector64(Of IntPtr), shiftCount As Integer) As Vector64(Of IntPtr)" />
      <MemberSignature Language="F#" Value="static member ShiftRightLogical : System.Runtime.Intrinsics.Vector64&lt;nativeint&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;nativeint&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftRightLogical (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;IntPtr&gt; ShiftRightLogical(System::Runtime::Intrinsics::Vector64&lt;IntPtr&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.IntPtr&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.IntPtr&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts (unsigned) each element of a vector right by the specified amount.</summary>
        <returns>A vector whose elements where shifted right by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightLogical">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; ShiftRightLogical (System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int8&gt; ShiftRightLogical(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int8&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftRightLogical(System.Runtime.Intrinsics.Vector64{System.SByte},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftRightLogical (vector As Vector64(Of SByte), shiftCount As Integer) As Vector64(Of SByte)" />
      <MemberSignature Language="F#" Value="static member ShiftRightLogical : System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftRightLogical (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::SByte&gt; ShiftRightLogical(System::Runtime::Intrinsics::Vector64&lt;System::SByte&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.SByte&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts (unsigned) each element of a vector right by the specified amount.</summary>
        <returns>A vector whose elements where shifted right by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightLogical">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ushort&gt; ShiftRightLogical (System.Runtime.Intrinsics.Vector64&lt;ushort&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt; ShiftRightLogical(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftRightLogical(System.Runtime.Intrinsics.Vector64{System.UInt16},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftRightLogical (vector As Vector64(Of UShort), shiftCount As Integer) As Vector64(Of UShort)" />
      <MemberSignature Language="F#" Value="static member ShiftRightLogical : System.Runtime.Intrinsics.Vector64&lt;uint16&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftRightLogical (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt; ShiftRightLogical(System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts (unsigned) each element of a vector right by the specified amount.</summary>
        <returns>A vector whose elements where shifted right by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightLogical">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;uint&gt; ShiftRightLogical (System.Runtime.Intrinsics.Vector64&lt;uint&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; ShiftRightLogical(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftRightLogical(System.Runtime.Intrinsics.Vector64{System.UInt32},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftRightLogical (vector As Vector64(Of UInteger), shiftCount As Integer) As Vector64(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ShiftRightLogical : System.Runtime.Intrinsics.Vector64&lt;uint32&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftRightLogical (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; ShiftRightLogical(System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts (unsigned) each element of a vector right by the specified amount.</summary>
        <returns>A vector whose elements where shifted right by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightLogical">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ulong&gt; ShiftRightLogical (System.Runtime.Intrinsics.Vector64&lt;ulong&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int64&gt; ShiftRightLogical(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int64&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftRightLogical(System.Runtime.Intrinsics.Vector64{System.UInt64},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftRightLogical (vector As Vector64(Of ULong), shiftCount As Integer) As Vector64(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ShiftRightLogical : System.Runtime.Intrinsics.Vector64&lt;uint64&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftRightLogical (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt64&gt; ShiftRightLogical(System::Runtime::Intrinsics::Vector64&lt;System::UInt64&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt64&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts (unsigned) each element of a vector right by the specified amount.</summary>
        <returns>A vector whose elements where shifted right by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightLogical">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;UIntPtr&gt; ShiftRightLogical (System.Runtime.Intrinsics.Vector64&lt;UIntPtr&gt; vector, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;native unsigned int&gt; ShiftRightLogical(valuetype System.Runtime.Intrinsics.Vector64`1&lt;native unsigned int&gt; vector, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ShiftRightLogical(System.Runtime.Intrinsics.Vector64{System.UIntPtr},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShiftRightLogical (vector As Vector64(Of UIntPtr), shiftCount As Integer) As Vector64(Of UIntPtr)" />
      <MemberSignature Language="F#" Value="static member ShiftRightLogical : System.Runtime.Intrinsics.Vector64&lt;unativeint&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;unativeint&gt;" Usage="System.Runtime.Intrinsics.Vector64.ShiftRightLogical (vector, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;UIntPtr&gt; ShiftRightLogical(System::Runtime::Intrinsics::Vector64&lt;UIntPtr&gt; vector, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UIntPtr&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.UIntPtr&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts (unsigned) each element of a vector right by the specified amount.</summary>
        <returns>A vector whose elements where shifted right by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shuffle">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;byte&gt; Shuffle (System.Runtime.Intrinsics.Vector64&lt;byte&gt; vector, System.Runtime.Intrinsics.Vector64&lt;byte&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int8&gt; Shuffle(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int8&gt; vector, valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int8&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Shuffle(System.Runtime.Intrinsics.Vector64{System.Byte},System.Runtime.Intrinsics.Vector64{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function Shuffle (vector As Vector64(Of Byte), indices As Vector64(Of Byte)) As Vector64(Of Byte)" />
      <MemberSignature Language="F#" Value="static member Shuffle : System.Runtime.Intrinsics.Vector64&lt;byte&gt; * System.Runtime.Intrinsics.Vector64&lt;byte&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Vector64.Shuffle (vector, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::Byte&gt; Shuffle(System::Runtime::Intrinsics::Vector64&lt;System::Byte&gt; vector, System::Runtime::Intrinsics::Vector64&lt;System::Byte&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="indices" Type="System.Runtime.Intrinsics.Vector64&lt;System.Byte&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The input vector from which values are selected.</param>
        <param name="indices">The per-element indices used to select a value from <paramref name="vector" />.</param>
        <summary>Creates a new vector by selecting values from an input vector using a set of indices.</summary>
        <returns>A new vector containing the values from <paramref name="vector" /> selected by the given <paramref name="indices" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shuffle">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;short&gt; Shuffle (System.Runtime.Intrinsics.Vector64&lt;short&gt; vector, System.Runtime.Intrinsics.Vector64&lt;short&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; Shuffle(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; vector, valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Shuffle(System.Runtime.Intrinsics.Vector64{System.Int16},System.Runtime.Intrinsics.Vector64{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Function Shuffle (vector As Vector64(Of Short), indices As Vector64(Of Short)) As Vector64(Of Short)" />
      <MemberSignature Language="F#" Value="static member Shuffle : System.Runtime.Intrinsics.Vector64&lt;int16&gt; * System.Runtime.Intrinsics.Vector64&lt;int16&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Vector64.Shuffle (vector, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;short&gt; Shuffle(System::Runtime::Intrinsics::Vector64&lt;short&gt; vector, System::Runtime::Intrinsics::Vector64&lt;short&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="indices" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The input vector from which values are selected.</param>
        <param name="indices">The per-element indices used to select a value from <paramref name="vector" />.</param>
        <summary>Creates a new vector by selecting values from an input vector using a set of indices.</summary>
        <returns>A new vector containing the values from <paramref name="vector" /> selected by the given <paramref name="indices" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shuffle">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;int&gt; Shuffle (System.Runtime.Intrinsics.Vector64&lt;int&gt; vector, System.Runtime.Intrinsics.Vector64&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; Shuffle(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; vector, valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Shuffle(System.Runtime.Intrinsics.Vector64{System.Int32},System.Runtime.Intrinsics.Vector64{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Function Shuffle (vector As Vector64(Of Integer), indices As Vector64(Of Integer)) As Vector64(Of Integer)" />
      <MemberSignature Language="F#" Value="static member Shuffle : System.Runtime.Intrinsics.Vector64&lt;int&gt; * System.Runtime.Intrinsics.Vector64&lt;int&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;int&gt;" Usage="System.Runtime.Intrinsics.Vector64.Shuffle (vector, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;int&gt; Shuffle(System::Runtime::Intrinsics::Vector64&lt;int&gt; vector, System::Runtime::Intrinsics::Vector64&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="indices" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The input vector from which values are selected.</param>
        <param name="indices">The per-element indices used to select a value from <paramref name="vector" />.</param>
        <summary>Creates a new vector by selecting values from an input vector using a set of indices.</summary>
        <returns>A new vector containing the values from <paramref name="vector" /> selected by the given <paramref name="indices" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shuffle">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; Shuffle (System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; vector, System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int8&gt; Shuffle(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int8&gt; vector, valuetype System.Runtime.Intrinsics.Vector64`1&lt;int8&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Shuffle(System.Runtime.Intrinsics.Vector64{System.SByte},System.Runtime.Intrinsics.Vector64{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Function Shuffle (vector As Vector64(Of SByte), indices As Vector64(Of SByte)) As Vector64(Of SByte)" />
      <MemberSignature Language="F#" Value="static member Shuffle : System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; * System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Vector64.Shuffle (vector, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::SByte&gt; Shuffle(System::Runtime::Intrinsics::Vector64&lt;System::SByte&gt; vector, System::Runtime::Intrinsics::Vector64&lt;System::SByte&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.SByte&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="indices" Type="System.Runtime.Intrinsics.Vector64&lt;System.SByte&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The input vector from which values are selected.</param>
        <param name="indices">The per-element indices used to select a value from <paramref name="vector" />.</param>
        <summary>Creates a new vector by selecting values from an input vector using a set of indices.</summary>
        <returns>A new vector containing the values from <paramref name="vector" /> selected by the given <paramref name="indices" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shuffle">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;float&gt; Shuffle (System.Runtime.Intrinsics.Vector64&lt;float&gt; vector, System.Runtime.Intrinsics.Vector64&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; Shuffle(valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; vector, valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Shuffle(System.Runtime.Intrinsics.Vector64{System.Single},System.Runtime.Intrinsics.Vector64{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Function Shuffle (vector As Vector64(Of Single), indices As Vector64(Of Integer)) As Vector64(Of Single)" />
      <MemberSignature Language="F#" Value="static member Shuffle : System.Runtime.Intrinsics.Vector64&lt;single&gt; * System.Runtime.Intrinsics.Vector64&lt;int&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;single&gt;" Usage="System.Runtime.Intrinsics.Vector64.Shuffle (vector, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;float&gt; Shuffle(System::Runtime::Intrinsics::Vector64&lt;float&gt; vector, System::Runtime::Intrinsics::Vector64&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="indices" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The input vector from which values are selected.</param>
        <param name="indices">The per-element indices used to select a value from <paramref name="vector" />.</param>
        <summary>Creates a new vector by selecting values from an input vector using a set of indices.</summary>
        <returns>A new vector containing the values from <paramref name="vector" /> selected by the given <paramref name="indices" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shuffle">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ushort&gt; Shuffle (System.Runtime.Intrinsics.Vector64&lt;ushort&gt; vector, System.Runtime.Intrinsics.Vector64&lt;ushort&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt; Shuffle(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt; vector, valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Shuffle(System.Runtime.Intrinsics.Vector64{System.UInt16},System.Runtime.Intrinsics.Vector64{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Function Shuffle (vector As Vector64(Of UShort), indices As Vector64(Of UShort)) As Vector64(Of UShort)" />
      <MemberSignature Language="F#" Value="static member Shuffle : System.Runtime.Intrinsics.Vector64&lt;uint16&gt; * System.Runtime.Intrinsics.Vector64&lt;uint16&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Vector64.Shuffle (vector, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt; Shuffle(System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt; vector, System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="indices" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The input vector from which values are selected.</param>
        <param name="indices">The per-element indices used to select a value from <paramref name="vector" />.</param>
        <summary>Creates a new vector by selecting values from an input vector using a set of indices.</summary>
        <returns>A new vector containing the values from <paramref name="vector" /> selected by the given <paramref name="indices" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shuffle">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;uint&gt; Shuffle (System.Runtime.Intrinsics.Vector64&lt;uint&gt; vector, System.Runtime.Intrinsics.Vector64&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; Shuffle(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; vector, valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Shuffle(System.Runtime.Intrinsics.Vector64{System.UInt32},System.Runtime.Intrinsics.Vector64{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Function Shuffle (vector As Vector64(Of UInteger), indices As Vector64(Of UInteger)) As Vector64(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Shuffle : System.Runtime.Intrinsics.Vector64&lt;uint32&gt; * System.Runtime.Intrinsics.Vector64&lt;uint32&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Vector64.Shuffle (vector, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; Shuffle(System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; vector, System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="indices" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="vector">The input vector from which values are selected.</param>
        <param name="indices">The per-element indices used to select a value from <paramref name="vector" />.</param>
        <summary>Creates a new vector by selecting values from an input vector using a set of indices.</summary>
        <returns>A new vector containing the values from <paramref name="vector" /> selected by the given <paramref name="indices" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sqrt&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Sqrt&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Sqrt&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Sqrt``1(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sqrt(Of T As Structure) (vector As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member Sqrt : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.Sqrt vector" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; Sqrt(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Sqrt&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Sqrt&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Sqrt(Of T) (vector As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member Sqrt : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.Sqrt vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; Sqrt(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="vector">The vector whose square root is to be computed.</param>
        <summary>Computes the square root of a vector on a per-element basis.</summary>
        <returns>A vector whose elements are the square root of the corresponding elements in <paramref name="vector" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Store&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Store&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; source, T* destination) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Store&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; source, !!T* destination) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Store``1(System.Runtime.Intrinsics.Vector64{``0},``0*)" />
      <MemberSignature Language="F#" Value="static member Store : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * nativeptr&lt;'T&gt; -&gt; unit (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.Store (source, destination)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static void Store(System::Runtime::Intrinsics::Vector64&lt;T&gt; source, T* destination);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static void Store&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; source, T* destination);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Store&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; source, !!T* destination) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member Store : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * nativeptr&lt;'T&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Vector64.Store (source, destination)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Store(System::Runtime::Intrinsics::Vector64&lt;T&gt; source, T* destination);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="destination" Type="T*" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="source">The vector that will be stored.</param>
        <param name="destination">The destination at which <paramref name="source" /> will be stored.</param>
        <summary>Stores a vector at the given destination.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="source" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="StoreAligned&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void StoreAligned&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; source, T* destination) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAligned&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; source, !!T* destination) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.StoreAligned``1(System.Runtime.Intrinsics.Vector64{``0},``0*)" />
      <MemberSignature Language="F#" Value="static member StoreAligned : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * nativeptr&lt;'T&gt; -&gt; unit (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.StoreAligned (source, destination)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static void StoreAligned(System::Runtime::Intrinsics::Vector64&lt;T&gt; source, T* destination);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static void StoreAligned&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; source, T* destination);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAligned&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; source, !!T* destination) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member StoreAligned : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * nativeptr&lt;'T&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Vector64.StoreAligned (source, destination)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void StoreAligned(System::Runtime::Intrinsics::Vector64&lt;T&gt; source, T* destination);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="destination" Type="T*" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="source">The vector that will be stored.</param>
        <param name="destination">The aligned destination at which <paramref name="source" /> will be stored.</param>
        <summary>Stores a vector at the given aligned destination.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="source" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="StoreAlignedNonTemporal&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void StoreAlignedNonTemporal&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; source, T* destination) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAlignedNonTemporal&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; source, !!T* destination) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.StoreAlignedNonTemporal``1(System.Runtime.Intrinsics.Vector64{``0},``0*)" />
      <MemberSignature Language="F#" Value="static member StoreAlignedNonTemporal : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * nativeptr&lt;'T&gt; -&gt; unit (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.StoreAlignedNonTemporal (source, destination)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static void StoreAlignedNonTemporal(System::Runtime::Intrinsics::Vector64&lt;T&gt; source, T* destination);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static void StoreAlignedNonTemporal&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; source, T* destination);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAlignedNonTemporal&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; source, !!T* destination) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member StoreAlignedNonTemporal : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * nativeptr&lt;'T&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Vector64.StoreAlignedNonTemporal (source, destination)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void StoreAlignedNonTemporal(System::Runtime::Intrinsics::Vector64&lt;T&gt; source, T* destination);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="destination" Type="T*" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="source">The vector that will be stored.</param>
        <param name="destination">The aligned destination at which <paramref name="source" /> will be stored.</param>
        <summary>Stores a vector at the given aligned destination.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This method may bypass the cache on certain platforms.

          ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="source" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="StoreUnsafe&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void StoreUnsafe&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; source, ref T destination) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreUnsafe&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; source, !!T&amp; destination) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.StoreUnsafe``1(System.Runtime.Intrinsics.Vector64{``0},``0@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub StoreUnsafe(Of T As Structure) (source As Vector64(Of T), ByRef destination As T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member StoreUnsafe : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * 'T -&gt; unit (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.StoreUnsafe (source, destination)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static void StoreUnsafe(System::Runtime::Intrinsics::Vector64&lt;T&gt; source, T % destination);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static void StoreUnsafe&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; source, ref T destination);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreUnsafe&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; source, !!T&amp; destination) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub StoreUnsafe(Of T) (source As Vector64(Of T), ByRef destination As T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member StoreUnsafe : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * 'T -&gt; unit" Usage="System.Runtime.Intrinsics.Vector64.StoreUnsafe (source, destination)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void StoreUnsafe(System::Runtime::Intrinsics::Vector64&lt;T&gt; source, T % destination);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="destination" Type="T" RefType="ref" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="source">The vector that will be stored.</param>
        <param name="destination">The destination at which <paramref name="source" /> will be stored.</param>
        <summary>Stores a vector at the given destination.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="source" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="StoreUnsafe&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void StoreUnsafe&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; source, ref T destination, UIntPtr elementOffset) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreUnsafe&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; source, !!T&amp; destination, native unsigned int elementOffset) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.StoreUnsafe``1(System.Runtime.Intrinsics.Vector64{``0},``0@,System.UIntPtr)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub StoreUnsafe(Of T As Structure) (source As Vector64(Of T), ByRef destination As T, elementOffset As UIntPtr)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member StoreUnsafe : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * 'T * unativeint -&gt; unit (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.StoreUnsafe (source, destination, elementOffset)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static void StoreUnsafe(System::Runtime::Intrinsics::Vector64&lt;T&gt; source, T % destination, UIntPtr elementOffset);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static void StoreUnsafe&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; source, ref T destination, UIntPtr elementOffset);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreUnsafe&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; source, !!T&amp; destination, native unsigned int elementOffset) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub StoreUnsafe(Of T) (source As Vector64(Of T), ByRef destination As T, elementOffset As UIntPtr)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member StoreUnsafe : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * 'T * unativeint -&gt; unit" Usage="System.Runtime.Intrinsics.Vector64.StoreUnsafe (source, destination, elementOffset)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void StoreUnsafe(System::Runtime::Intrinsics::Vector64&lt;T&gt; source, T % destination, UIntPtr elementOffset);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="destination" Type="T" RefType="ref" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="elementOffset" Type="System.UIntPtr" Index="2" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="source">The vector that will be stored.</param>
        <param name="destination">The destination to which <paramref name="elementOffset" /> will be added before the vector will be stored.</param>
        <param name="elementOffset">The element offset from <paramref name="destination" /> from which the vector will be stored.</param>
        <summary>Stores a vector at the given destination.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="source" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Subtract&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Subtract&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Subtract&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Subtract``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.Subtract (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; Subtract(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Subtract&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Subtract&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.Subtract (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; Subtract(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector from which <paramref name="right" /> will be subtracted.</param>
        <param name="right">The vector to subtract from <paramref name="left" />.</param>
        <summary>Subtracts two vectors to compute their difference.</summary>
        <returns>The difference of <paramref name="left" /> and <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Sum&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Sum&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Sum``1(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sum(Of T As Structure) (vector As Vector64(Of T)) As T" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member Sum : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; 'T (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.Sum vector" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static T Sum(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static T Sum&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Sum&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Sum(Of T) (vector As Vector64(Of T)) As T" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member Sum : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; 'T" Usage="System.Runtime.Intrinsics.Vector64.Sum vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T Sum(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="vector">The vector whose elements will be summed.</param>
        <summary>Computes the sum of all elements in a vector.</summary>
        <returns>The sum of all elements in <paramref name="vector" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToScalar&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ToScalar&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct;" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ToScalar&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ToScalar``1(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToScalar(Of T As Structure) (vector As Vector64(Of T)) As T" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="static member ToScalar : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; 'T (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.ToScalar vector" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static T ToScalar(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public static T ToScalar&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ToScalar&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToScalar(Of T) (vector As Vector64(Of T)) As T" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member ToScalar : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; 'T" Usage="System.Runtime.Intrinsics.Vector64.ToScalar vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T ToScalar(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the input vector.</typeparam>
        <param name="vector">The vector to get the first element from.</param>
        <summary>Converts the given vector to a scalar containing the value of the first element.</summary>
        <returns>A scalar <typeparamref name="T" /> containing the value of the first element.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToVector128&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector128&lt;T&gt; ToVector128&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct;" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector128`1&lt;!!T&gt; ToVector128&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ToVector128``1(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToVector128(Of T As Structure) (vector As Vector64(Of T)) As Vector128(Of T)" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="static member ToVector128 : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector128&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.ToVector128 vector" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector128&lt;T&gt; ToVector128(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector128&lt;T&gt; ToVector128&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector128`1&lt;!!T&gt; ToVector128&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToVector128(Of T) (vector As Vector64(Of T)) As Vector128(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member ToVector128 : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector128&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.ToVector128 vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector128&lt;T&gt; ToVector128(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector128&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the input vector.</typeparam>
        <param name="vector">The vector to extend.</param>
        <summary>Converts the given vector to a new <see cref="T:System.Runtime.Intrinsics.Vector128`1" /> with the lower 64-bits set to the value of the given vector and the upper 64-bits initialized to zero.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector128`1" /> with the lower 64-bits set to the value of <paramref name="vector" /> and the upper 64-bits initialized to zero.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToVector128Unsafe&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector128&lt;T&gt; ToVector128Unsafe&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector) where T : struct;" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector128`1&lt;!!T&gt; ToVector128Unsafe&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.ToVector128Unsafe``1(System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToVector128Unsafe(Of T As Structure) (vector As Vector64(Of T)) As Vector128(Of T)" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="static member ToVector128Unsafe : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector128&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.ToVector128Unsafe vector" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector128&lt;T&gt; ToVector128Unsafe(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector128&lt;T&gt; ToVector128Unsafe&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector128`1&lt;!!T&gt; ToVector128Unsafe&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToVector128Unsafe(Of T) (vector As Vector64(Of T)) As Vector128(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member ToVector128Unsafe : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector128&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.ToVector128Unsafe vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector128&lt;T&gt; ToVector128Unsafe(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector128&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the input vector.</typeparam>
        <param name="vector">The vector to extend.</param>
        <summary>Converts the given vector to a new <see cref="T:System.Runtime.Intrinsics.Vector128`1" /> with the lower 64-bits set to the value of the given vector and the upper 64-bits left uninitialized.</summary>
        <returns>A new <see cref="T:System.Runtime.Intrinsics.Vector128`1" /> with the lower 64-bits set to the value of <paramref name="vector" /> and the upper 64-bits left uninitialized.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryCopyTo&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TryCopyTo&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector, Span&lt;T&gt; destination) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCopyTo&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector, valuetype System.Span`1&lt;!!T&gt; destination) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.TryCopyTo``1(System.Runtime.Intrinsics.Vector64{``0},System.Span{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryCopyTo(Of T As Structure) (vector As Vector64(Of T), destination As Span(Of T)) As Boolean" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member TryCopyTo : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * Span&lt;'T (requires 'T : struct)&gt; -&gt; bool (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.TryCopyTo (vector, destination)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static bool TryCopyTo(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector, Span&lt;T&gt; destination);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static bool TryCopyTo&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector, Span&lt;T&gt; destination);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCopyTo&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector, valuetype System.Span`1&lt;!!T&gt; destination) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryCopyTo(Of T) (vector As Vector64(Of T), destination As Span(Of T)) As Boolean" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member TryCopyTo : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * Span&lt;'T&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Vector64.TryCopyTo (vector, destination)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryCopyTo(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector, Span&lt;T&gt; destination);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="destination" Type="System.Span&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the input vector.</typeparam>
        <param name="vector">The vector to copy.</param>
        <param name="destination">The span to which <paramref name="destination" /> is copied.</param>
        <summary>Tries to copy a <see cref="T:System.Numerics.Vector`1" /> to a given span.</summary>
        <returns>
          <see langword="true" /> if <paramref name="vector" /> was succesfully copied to <paramref name="destination" />; otherwise, <see langword="false" /> if the length of <paramref name="destination" /> is less than <see cref="P:System.Runtime.Intrinsics.Vector64`1.Count" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> and <paramref name="destination" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public static (System.Runtime.Intrinsics.Vector64&lt;ushort&gt; Lower, System.Runtime.Intrinsics.Vector64&lt;ushort&gt; Upper) Widen (System.Runtime.Intrinsics.Vector64&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt;, valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt;&gt; Widen(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Widen(System.Runtime.Intrinsics.Vector64{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function Widen (source As Vector64(Of Byte)) As ValueTuple(Of Vector64(Of UShort), Vector64(Of UShort))" />
      <MemberSignature Language="F#" Value="static member Widen : System.Runtime.Intrinsics.Vector64&lt;byte&gt; -&gt; ValueTuple&lt;System.Runtime.Intrinsics.Vector64&lt;uint16&gt;, System.Runtime.Intrinsics.Vector64&lt;uint16&gt;&gt;" Usage="System.Runtime.Intrinsics.Vector64.Widen source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt;, System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt;&gt; Widen(System::Runtime::Intrinsics::Vector64&lt;System::Byte&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;,System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-7.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Lower", "Upper" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Lower", "Upper" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="source">The vector whose elements are to be widened.</param>
        <summary>Widens a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> into two <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A pair of vectors that contain the widened lower and upper halves of <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public static (System.Runtime.Intrinsics.Vector64&lt;int&gt; Lower, System.Runtime.Intrinsics.Vector64&lt;int&gt; Upper) Widen (System.Runtime.Intrinsics.Vector64&lt;short&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt;, valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt;&gt; Widen(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Widen(System.Runtime.Intrinsics.Vector64{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Function Widen (source As Vector64(Of Short)) As ValueTuple(Of Vector64(Of Integer), Vector64(Of Integer))" />
      <MemberSignature Language="F#" Value="static member Widen : System.Runtime.Intrinsics.Vector64&lt;int16&gt; -&gt; ValueTuple&lt;System.Runtime.Intrinsics.Vector64&lt;int&gt;, System.Runtime.Intrinsics.Vector64&lt;int&gt;&gt;" Usage="System.Runtime.Intrinsics.Vector64.Widen source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Runtime::Intrinsics::Vector64&lt;int&gt;, System::Runtime::Intrinsics::Vector64&lt;int&gt;&gt; Widen(System::Runtime::Intrinsics::Vector64&lt;short&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;,System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-7.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Lower", "Upper" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Lower", "Upper" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="source">The vector whose elements are to be widened.</param>
        <summary>Widens a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> into two <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A pair of vectors that contain the widened lower and upper halves of <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public static (System.Runtime.Intrinsics.Vector64&lt;long&gt; Lower, System.Runtime.Intrinsics.Vector64&lt;long&gt; Upper) Widen (System.Runtime.Intrinsics.Vector64&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;valuetype System.Runtime.Intrinsics.Vector64`1&lt;int64&gt;, valuetype System.Runtime.Intrinsics.Vector64`1&lt;int64&gt;&gt; Widen(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Widen(System.Runtime.Intrinsics.Vector64{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Function Widen (source As Vector64(Of Integer)) As ValueTuple(Of Vector64(Of Long), Vector64(Of Long))" />
      <MemberSignature Language="F#" Value="static member Widen : System.Runtime.Intrinsics.Vector64&lt;int&gt; -&gt; ValueTuple&lt;System.Runtime.Intrinsics.Vector64&lt;int64&gt;, System.Runtime.Intrinsics.Vector64&lt;int64&gt;&gt;" Usage="System.Runtime.Intrinsics.Vector64.Widen source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Runtime::Intrinsics::Vector64&lt;long&gt;, System::Runtime::Intrinsics::Vector64&lt;long&gt;&gt; Widen(System::Runtime::Intrinsics::Vector64&lt;int&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Runtime.Intrinsics.Vector64&lt;System.Int64&gt;,System.Runtime.Intrinsics.Vector64&lt;System.Int64&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-7.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Lower", "Upper" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Lower", "Upper" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="source">The vector whose elements are to be widened.</param>
        <summary>Widens a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> into two <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A pair of vectors that contain the widened lower and upper halves of <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public static (System.Runtime.Intrinsics.Vector64&lt;short&gt; Lower, System.Runtime.Intrinsics.Vector64&lt;short&gt; Upper) Widen (System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt;, valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt;&gt; Widen(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Widen(System.Runtime.Intrinsics.Vector64{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Function Widen (source As Vector64(Of SByte)) As ValueTuple(Of Vector64(Of Short), Vector64(Of Short))" />
      <MemberSignature Language="F#" Value="static member Widen : System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; -&gt; ValueTuple&lt;System.Runtime.Intrinsics.Vector64&lt;int16&gt;, System.Runtime.Intrinsics.Vector64&lt;int16&gt;&gt;" Usage="System.Runtime.Intrinsics.Vector64.Widen source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Runtime::Intrinsics::Vector64&lt;short&gt;, System::Runtime::Intrinsics::Vector64&lt;short&gt;&gt; Widen(System::Runtime::Intrinsics::Vector64&lt;System::SByte&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;,System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-7.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Lower", "Upper" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Lower", "Upper" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;System.SByte&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="source">The vector whose elements are to be widened.</param>
        <summary>Widens a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> into two <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A pair of vectors that contain the widened lower and upper halves of <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public static (System.Runtime.Intrinsics.Vector64&lt;double&gt; Lower, System.Runtime.Intrinsics.Vector64&lt;double&gt; Upper) Widen (System.Runtime.Intrinsics.Vector64&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt;, valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt;&gt; Widen(valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Widen(System.Runtime.Intrinsics.Vector64{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Function Widen (source As Vector64(Of Single)) As ValueTuple(Of Vector64(Of Double), Vector64(Of Double))" />
      <MemberSignature Language="F#" Value="static member Widen : System.Runtime.Intrinsics.Vector64&lt;single&gt; -&gt; ValueTuple&lt;System.Runtime.Intrinsics.Vector64&lt;double&gt;, System.Runtime.Intrinsics.Vector64&lt;double&gt;&gt;" Usage="System.Runtime.Intrinsics.Vector64.Widen source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Runtime::Intrinsics::Vector64&lt;double&gt;, System::Runtime::Intrinsics::Vector64&lt;double&gt;&gt; Widen(System::Runtime::Intrinsics::Vector64&lt;float&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;,System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-7.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Lower", "Upper" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Lower", "Upper" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="source">The vector whose elements are to be widened.</param>
        <summary>Widens a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> into two <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A pair of vectors that contain the widened lower and upper halves of <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public static (System.Runtime.Intrinsics.Vector64&lt;uint&gt; Lower, System.Runtime.Intrinsics.Vector64&lt;uint&gt; Upper) Widen (System.Runtime.Intrinsics.Vector64&lt;ushort&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt;, valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt;&gt; Widen(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Widen(System.Runtime.Intrinsics.Vector64{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Function Widen (source As Vector64(Of UShort)) As ValueTuple(Of Vector64(Of UInteger), Vector64(Of UInteger))" />
      <MemberSignature Language="F#" Value="static member Widen : System.Runtime.Intrinsics.Vector64&lt;uint16&gt; -&gt; ValueTuple&lt;System.Runtime.Intrinsics.Vector64&lt;uint32&gt;, System.Runtime.Intrinsics.Vector64&lt;uint32&gt;&gt;" Usage="System.Runtime.Intrinsics.Vector64.Widen source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt;, System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt;&gt; Widen(System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;,System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-7.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Lower", "Upper" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Lower", "Upper" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="source">The vector whose elements are to be widened.</param>
        <summary>Widens a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> into two <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A pair of vectors that contain the widened lower and upper halves of <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public static (System.Runtime.Intrinsics.Vector64&lt;ulong&gt; Lower, System.Runtime.Intrinsics.Vector64&lt;ulong&gt; Upper) Widen (System.Runtime.Intrinsics.Vector64&lt;uint&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int64&gt;, valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int64&gt;&gt; Widen(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Widen(System.Runtime.Intrinsics.Vector64{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Function Widen (source As Vector64(Of UInteger)) As ValueTuple(Of Vector64(Of ULong), Vector64(Of ULong))" />
      <MemberSignature Language="F#" Value="static member Widen : System.Runtime.Intrinsics.Vector64&lt;uint32&gt; -&gt; ValueTuple&lt;System.Runtime.Intrinsics.Vector64&lt;uint64&gt;, System.Runtime.Intrinsics.Vector64&lt;uint64&gt;&gt;" Usage="System.Runtime.Intrinsics.Vector64.Widen source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Runtime::Intrinsics::Vector64&lt;System::UInt64&gt;, System::Runtime::Intrinsics::Vector64&lt;System::UInt64&gt;&gt; Widen(System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Runtime.Intrinsics.Vector64&lt;System.UInt64&gt;,System.Runtime.Intrinsics.Vector64&lt;System.UInt64&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-7.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Lower", "Upper" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Lower", "Upper" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="source">The vector whose elements are to be widened.</param>
        <summary>Widens a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> into two <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A pair of vectors that contain the widened lower and upper halves of <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WidenLower">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ushort&gt; WidenLower (System.Runtime.Intrinsics.Vector64&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt; WidenLower(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.WidenLower(System.Runtime.Intrinsics.Vector64{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function WidenLower (source As Vector64(Of Byte)) As Vector64(Of UShort)" />
      <MemberSignature Language="F#" Value="static member WidenLower : System.Runtime.Intrinsics.Vector64&lt;byte&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Vector64.WidenLower source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt; WidenLower(System::Runtime::Intrinsics::Vector64&lt;System::Byte&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="source">The vector whose elements are to be widened.</param>
        <summary>Widens the lower half of a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> into a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A vector that contains the widened lower half of <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WidenLower">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;int&gt; WidenLower (System.Runtime.Intrinsics.Vector64&lt;short&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; WidenLower(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.WidenLower(System.Runtime.Intrinsics.Vector64{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Function WidenLower (source As Vector64(Of Short)) As Vector64(Of Integer)" />
      <MemberSignature Language="F#" Value="static member WidenLower : System.Runtime.Intrinsics.Vector64&lt;int16&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;int&gt;" Usage="System.Runtime.Intrinsics.Vector64.WidenLower source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;int&gt; WidenLower(System::Runtime::Intrinsics::Vector64&lt;short&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="source">The vector whose elements are to be widened.</param>
        <summary>Widens the lower half of a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> into a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A vector that contains the widened lower half of <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WidenLower">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;long&gt; WidenLower (System.Runtime.Intrinsics.Vector64&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int64&gt; WidenLower(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.WidenLower(System.Runtime.Intrinsics.Vector64{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Function WidenLower (source As Vector64(Of Integer)) As Vector64(Of Long)" />
      <MemberSignature Language="F#" Value="static member WidenLower : System.Runtime.Intrinsics.Vector64&lt;int&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Vector64.WidenLower source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;long&gt; WidenLower(System::Runtime::Intrinsics::Vector64&lt;int&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="source">The vector whose elements are to be widened.</param>
        <summary>Widens the lower half of a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> into a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A vector that contains the widened lower half of <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WidenLower">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;short&gt; WidenLower (System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; WidenLower(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.WidenLower(System.Runtime.Intrinsics.Vector64{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Function WidenLower (source As Vector64(Of SByte)) As Vector64(Of Short)" />
      <MemberSignature Language="F#" Value="static member WidenLower : System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Vector64.WidenLower source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;short&gt; WidenLower(System::Runtime::Intrinsics::Vector64&lt;System::SByte&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;System.SByte&gt;" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="source">The vector whose elements are to be widened.</param>
        <summary>Widens the lower half of a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> into a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A vector that contains the widened lower half of <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WidenLower">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;double&gt; WidenLower (System.Runtime.Intrinsics.Vector64&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; WidenLower(valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.WidenLower(System.Runtime.Intrinsics.Vector64{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Function WidenLower (source As Vector64(Of Single)) As Vector64(Of Double)" />
      <MemberSignature Language="F#" Value="static member WidenLower : System.Runtime.Intrinsics.Vector64&lt;single&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;double&gt;" Usage="System.Runtime.Intrinsics.Vector64.WidenLower source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;double&gt; WidenLower(System::Runtime::Intrinsics::Vector64&lt;float&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="source">The vector whose elements are to be widened.</param>
        <summary>Widens the lower half of a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> into a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A vector that contains the widened lower half of <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WidenLower">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;uint&gt; WidenLower (System.Runtime.Intrinsics.Vector64&lt;ushort&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; WidenLower(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.WidenLower(System.Runtime.Intrinsics.Vector64{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Function WidenLower (source As Vector64(Of UShort)) As Vector64(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member WidenLower : System.Runtime.Intrinsics.Vector64&lt;uint16&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Vector64.WidenLower source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; WidenLower(System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="source">The vector whose elements are to be widened.</param>
        <summary>Widens the lower half of a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> into a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A vector that contains the widened lower half of <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WidenLower">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ulong&gt; WidenLower (System.Runtime.Intrinsics.Vector64&lt;uint&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int64&gt; WidenLower(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.WidenLower(System.Runtime.Intrinsics.Vector64{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Function WidenLower (source As Vector64(Of UInteger)) As Vector64(Of ULong)" />
      <MemberSignature Language="F#" Value="static member WidenLower : System.Runtime.Intrinsics.Vector64&lt;uint32&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Vector64.WidenLower source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt64&gt; WidenLower(System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="source">The vector whose elements are to be widened.</param>
        <summary>Widens the lower half of a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> into a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A vector that contains the widened lower half of <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WidenUpper">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ushort&gt; WidenUpper (System.Runtime.Intrinsics.Vector64&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt; WidenUpper(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.WidenUpper(System.Runtime.Intrinsics.Vector64{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function WidenUpper (source As Vector64(Of Byte)) As Vector64(Of UShort)" />
      <MemberSignature Language="F#" Value="static member WidenUpper : System.Runtime.Intrinsics.Vector64&lt;byte&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Vector64.WidenUpper source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt; WidenUpper(System::Runtime::Intrinsics::Vector64&lt;System::Byte&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="source">The vector whose elements are to be widened.</param>
        <summary>Widens the upper half of a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> into a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A vector that contains the widened upper half of <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WidenUpper">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;int&gt; WidenUpper (System.Runtime.Intrinsics.Vector64&lt;short&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; WidenUpper(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.WidenUpper(System.Runtime.Intrinsics.Vector64{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Function WidenUpper (source As Vector64(Of Short)) As Vector64(Of Integer)" />
      <MemberSignature Language="F#" Value="static member WidenUpper : System.Runtime.Intrinsics.Vector64&lt;int16&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;int&gt;" Usage="System.Runtime.Intrinsics.Vector64.WidenUpper source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;int&gt; WidenUpper(System::Runtime::Intrinsics::Vector64&lt;short&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="source">The vector whose elements are to be widened.</param>
        <summary>Widens the upper half of a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> into a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A vector that contains the widened upper half of <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WidenUpper">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;long&gt; WidenUpper (System.Runtime.Intrinsics.Vector64&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int64&gt; WidenUpper(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.WidenUpper(System.Runtime.Intrinsics.Vector64{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Function WidenUpper (source As Vector64(Of Integer)) As Vector64(Of Long)" />
      <MemberSignature Language="F#" Value="static member WidenUpper : System.Runtime.Intrinsics.Vector64&lt;int&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Vector64.WidenUpper source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;long&gt; WidenUpper(System::Runtime::Intrinsics::Vector64&lt;int&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;System.Int32&gt;" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="source">The vector whose elements are to be widened.</param>
        <summary>Widens the upper half of a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> into a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A vector that contains the widened upper half of <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WidenUpper">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;short&gt; WidenUpper (System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;int16&gt; WidenUpper(valuetype System.Runtime.Intrinsics.Vector64`1&lt;int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.WidenUpper(System.Runtime.Intrinsics.Vector64{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Function WidenUpper (source As Vector64(Of SByte)) As Vector64(Of Short)" />
      <MemberSignature Language="F#" Value="static member WidenUpper : System.Runtime.Intrinsics.Vector64&lt;sbyte&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Vector64.WidenUpper source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;short&gt; WidenUpper(System::Runtime::Intrinsics::Vector64&lt;System::SByte&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;System.SByte&gt;" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="source">The vector whose elements are to be widened.</param>
        <summary>Widens the upper half of a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> into a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A vector that contains the widened upper half of <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WidenUpper">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;double&gt; WidenUpper (System.Runtime.Intrinsics.Vector64&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;float64&gt; WidenUpper(valuetype System.Runtime.Intrinsics.Vector64`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.WidenUpper(System.Runtime.Intrinsics.Vector64{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Function WidenUpper (source As Vector64(Of Single)) As Vector64(Of Double)" />
      <MemberSignature Language="F#" Value="static member WidenUpper : System.Runtime.Intrinsics.Vector64&lt;single&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;double&gt;" Usage="System.Runtime.Intrinsics.Vector64.WidenUpper source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;double&gt; WidenUpper(System::Runtime::Intrinsics::Vector64&lt;float&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;System.Single&gt;" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="source">The vector whose elements are to be widened.</param>
        <summary>Widens the upper half of a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> into a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A vector that contains the widened upper half of <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WidenUpper">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;uint&gt; WidenUpper (System.Runtime.Intrinsics.Vector64&lt;ushort&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; WidenUpper(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int16&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.WidenUpper(System.Runtime.Intrinsics.Vector64{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Function WidenUpper (source As Vector64(Of UShort)) As Vector64(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member WidenUpper : System.Runtime.Intrinsics.Vector64&lt;uint16&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Vector64.WidenUpper source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; WidenUpper(System::Runtime::Intrinsics::Vector64&lt;System::UInt16&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt16&gt;" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="source">The vector whose elements are to be widened.</param>
        <summary>Widens the upper half of a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> into a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A vector that contains the widened upper half of <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WidenUpper">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;ulong&gt; WidenUpper (System.Runtime.Intrinsics.Vector64&lt;uint&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int64&gt; WidenUpper(valuetype System.Runtime.Intrinsics.Vector64`1&lt;unsigned int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.WidenUpper(System.Runtime.Intrinsics.Vector64{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Function WidenUpper (source As Vector64(Of UInteger)) As Vector64(Of ULong)" />
      <MemberSignature Language="F#" Value="static member WidenUpper : System.Runtime.Intrinsics.Vector64&lt;uint32&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Vector64.WidenUpper source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;System::UInt64&gt; WidenUpper(System::Runtime::Intrinsics::Vector64&lt;System::UInt32&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Runtime.Intrinsics.Vector64&lt;System.UInt32&gt;" Index="0" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="source">The vector whose elements are to be widened.</param>
        <summary>Widens the upper half of a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> into a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <returns>A vector that contains the widened upper half of <paramref name="source" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithElement&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; WithElement&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector, int index, T value) where T : struct;" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; WithElement&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector, int32 index, !!T value) cil managed" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.WithElement``1(System.Runtime.Intrinsics.Vector64{``0},System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithElement(Of T As Structure) (vector As Vector64(Of T), index As Integer, value As T) As Vector64(Of T)" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="static member WithElement : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * int * 'T -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.WithElement (vector, index, value)" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; WithElement(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector, int index, T value);" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; WithElement&lt;T&gt; (this System.Runtime.Intrinsics.Vector64&lt;T&gt; vector, int index, T value);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; WithElement&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; vector, int32 index, !!T value) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithElement(Of T) (vector As Vector64(Of T), index As Integer, value As T) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member WithElement : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * int * 'T -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.WithElement (vector, index, value)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; WithElement(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector, int index, T value);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" RefType="this">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the input vector.</typeparam>
        <param name="vector">The vector to get the remaining elements from.</param>
        <param name="index">The index of the element to set.</param>
        <param name="value">The value to set the element to.</param>
        <summary>Creates a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with the element at the specified index set to the specified value and the remaining elements set to the same value as that in the given vector.</summary>
        <returns>A <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with the value of the element at <paramref name="index" /> set to <paramref name="value" /> and the remaining elements set to the same value as that in <paramref name="vector" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="vector" /> (<typeparamref name="T" />) is not supported.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> was less than zero or greater than the number of elements.</exception>
      </Docs>
    </Member>
    <Member MemberName="Xor&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Xor&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right) where T : struct;" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Xor&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64.Xor``1(System.Runtime.Intrinsics.Vector64{``0},System.Runtime.Intrinsics.Vector64{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Xor(Of T As Structure) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="static member Xor : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="System.Runtime.Intrinsics.Vector64.Xor (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static System::Runtime::Intrinsics::Vector64&lt;T&gt; Xor(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Xor&lt;T&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; Xor&lt;T&gt;(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!!T&gt; right) cil managed" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Xor(Of T) (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="F#" Value="static member Xor : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64.Xor (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; Xor(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the elements in the vector.</typeparam>
        <param name="left">The vector to exclusive-or with <paramref name="right" />.</param>
        <param name="right">The vector to exclusive-or with <paramref name="left" />.</param>
        <summary>Computes the exclusive-or of two vectors.</summary>
        <returns>The exclusive-or of <paramref name="left" /> and <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of <paramref name="left" /> and <paramref name="right" /> (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

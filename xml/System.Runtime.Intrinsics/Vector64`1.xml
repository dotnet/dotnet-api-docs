<Type Name="Vector64&lt;T&gt;" FullName="System.Runtime.Intrinsics.Vector64&lt;T&gt;">
  <TypeSignature Language="C#" Value="public readonly struct Vector64&lt;T&gt; : IEquatable&lt;System.Runtime.Intrinsics.Vector64&lt;T&gt;&gt; where T : struct" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Vector64`1&lt;struct .ctor (class System.ValueType) T&gt; extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt;&gt;" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Intrinsics.Vector64`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure Vector64(Of T)&#xA;Implements IEquatable(Of Vector64(Of T))" />
  <TypeSignature Language="F#" Value="type Vector64&lt;'T (requires 'T : struct)&gt; = struct" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : value classpublic value class Vector64 : IEquatable&lt;System::Runtime::Intrinsics::Vector64&lt;T&gt;&gt;" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="C#" Value="public readonly struct Vector64&lt;T&gt; : IEquatable&lt;System.Runtime.Intrinsics.Vector64&lt;T&gt;&gt;" FrameworkAlternate="net-8.0;net-9.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Vector64`1&lt;T&gt; extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt;&gt;" FrameworkAlternate="net-8.0;net-9.0" />
  <TypeSignature Language="F#" Value="type Vector64&lt;'T&gt; = struct" FrameworkAlternate="net-8.0;net-9.0" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public value class Vector64 : IEquatable&lt;System::Runtime::Intrinsics::Vector64&lt;T&gt;&gt;" FrameworkAlternate="net-8.0;net-9.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Runtime.Intrinsics.Vector64&lt;T&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">The type of the elements in the vector.</typeparam>
    <summary>Represents a 64-bit vector of a specified numeric type that is suitable for low-level optimization of parallel algorithms.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AllBitsSet">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; AllBitsSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; AllBitsSet" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Intrinsics.Vector64`1.AllBitsSet" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AllBitsSet As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member AllBitsSet : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt;" Usage="System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt;.AllBitsSet" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::Intrinsics::Vector64&lt;T&gt; AllBitsSet { System::Runtime::Intrinsics::Vector64&lt;T&gt; get(); };" />
      <MemberSignature Language="F#" Value="static member AllBitsSet : System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64&lt;'T&gt;.AllBitsSet" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with all bits set to 1.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the current instance (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public static int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Intrinsics.Vector64`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="static member Count : int" Usage="System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt;.Count" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="static member Count : int" Usage="System.Runtime.Intrinsics.Vector64&lt;'T&gt;.Count" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of <typeparamref name="T" /> that are in a <see cref="T:System.Runtime.Intrinsics.Vector64`1" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the current instance (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="vector64.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object">
          <Attributes>
            <Attribute FrameworkAlternate="net-6.0;net-7.0;net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="obj">The object to compare with the current instance.</param>
        <summary>Determines whether the specified object is equal to the current instance.</summary>
        <returns>
          <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> and is equal to the current instance; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the current instance (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Runtime.Intrinsics.Vector64&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.Equals(System.Runtime.Intrinsics.Vector64{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Vector64(Of T)) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; bool" Usage="vector64.Equals other" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Runtime::Intrinsics::Vector64&lt;T&gt; other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; bool" Usage="vector64.Equals other" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="other">The <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> to compare with the current instance.</param>
        <summary>Determines whether the specified <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> is equal to the current instance.</summary>
        <returns>
          <see langword="true" /> if <paramref name="other" /> is equal to the current instance; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the current instance (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="vector64.GetHashCode " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the hash code for the instance.</summary>
        <returns>The hash code for the instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the current instance (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Indices">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Indices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; Indices" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Intrinsics.Vector64`1.Indices" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Indices As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member Indices : System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64&lt;'T&gt;.Indices" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::Intrinsics::Vector64&lt;T&gt; Indices { System::Runtime::Intrinsics::Vector64&lt;T&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public static bool IsSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSupported" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Intrinsics.Vector64`1.IsSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSupported As Boolean" />
      <MemberSignature Language="F#" Value="static member IsSupported : bool" Usage="System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt;.IsSupported" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="static member IsSupported : bool" Usage="System.Runtime.Intrinsics.Vector64&lt;'T&gt;.IsSupported" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether <typeparamref name="T" /> is supported.</summary>
        <value>
          <see langword="true" /> if <typeparamref name="T" /> is supported; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Intrinsics.Vector64`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As T" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T" Usage="System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt;.Item" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T" Usage="System.Runtime.Intrinsics.Vector64&lt;'T&gt;.Item" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="index">The index of the element to get.</param>
        <summary>Gets the element at the specified index.</summary>
        <value>The value of the element at <paramref name="index" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> was less than zero or greater than the number of elements.</exception>
        <exception cref="T:System.NotSupportedException">The type of the vector (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; One { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; One" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Intrinsics.Vector64`1.One" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property One As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member One : System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64&lt;'T&gt;.One" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::Intrinsics::Vector64&lt;T&gt; One { System::Runtime::Intrinsics::Vector64&lt;T&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with all elements initialized to one.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the current instance (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; operator + (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; op_Addition(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.op_Addition(System.Runtime.Intrinsics.Vector64{`0},System.Runtime.Intrinsics.Vector64{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt;" Usage="left + right" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; operator +(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="left + right" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="left">The vector to add with <paramref name="right" />.</param>
        <param name="right">The vector to add with <paramref name="left" />.</param>
        <summary>Adds two vectors to compute their sum.</summary>
        <returns>The sum of <paramref name="left" /> and <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the vector (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; operator &amp; (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; op_BitwiseAnd(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.op_BitwiseAnd(System.Runtime.Intrinsics.Vector64{`0},System.Runtime.Intrinsics.Vector64{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator And (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member ( &amp;&amp;&amp; ) : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt;" Usage="left &amp;&amp;&amp; right" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; operator &amp;(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( &amp;&amp;&amp; ) : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="left &amp;&amp;&amp; right" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="left">The vector to bitwise-and with <paramref name="right" />.</param>
        <param name="right">The vector to bitwise-and with <paramref name="left" />.</param>
        <summary>Computes the bitwise-and of two vectors.</summary>
        <returns>The bitwise-and of <paramref name="left" /> and <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the vector (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; operator | (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; op_BitwiseOr(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.op_BitwiseOr(System.Runtime.Intrinsics.Vector64{`0},System.Runtime.Intrinsics.Vector64{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Or (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member ( ||| ) : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt;" Usage="left ||| right" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; operator |(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( ||| ) : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="left ||| right" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="left">The vector to bitwise-or with <paramref name="right" />.</param>
        <param name="right">The vector to bitwise-or with <paramref name="left" />.</param>
        <summary>Computes the bitwise-or of two vectors.</summary>
        <returns>The bitwise-or of <paramref name="left" /> and <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the vector (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; operator / (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; op_Division(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.op_Division(System.Runtime.Intrinsics.Vector64{`0},System.Runtime.Intrinsics.Vector64{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member ( / ) : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt;" Usage="left / right" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; operator /(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( / ) : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="left / right" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="left">The vector that will be divided by <paramref name="right" />.</param>
        <param name="right">The vector that will divide <paramref name="left" />.</param>
        <summary>Divides two vectors to compute their quotient.</summary>
        <returns>The quotient of <paramref name="left" /> divided by <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the vector (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; operator / (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, T right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; op_Division(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; left, !T right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.op_Division(System.Runtime.Intrinsics.Vector64{`0},`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (left As Vector64(Of T), right As T) As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member ( / ) : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * 'T -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="left / right" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; operator /(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, T right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-8.0;net-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="T" Index="1" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="left">The vector that will be divided by <paramref name="right" />.</param>
        <param name="right">The scalar that will divide <paramref name="left" />.</param>
        <summary>Divides a vector by a scalar to compute the per-element quotient.</summary>
        <returns>The quotient of <paramref name="left" /> divided by <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.op_Equality(System.Runtime.Intrinsics.Vector64{`0},System.Runtime.Intrinsics.Vector64{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; bool" Usage="left = right" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; bool" Usage="left = right" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="left">The vector to compare with <paramref name="right" />.</param>
        <param name="right">The vector to compare with <paramref name="left" />.</param>
        <summary>Compares two vectors to determine if all elements are equal.</summary>
        <returns>
          <see langword="true" /> if all elements in <paramref name="left" /> were equal to the corresponding element in <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the vector (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_ExclusiveOr">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; operator ^ (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; op_ExclusiveOr(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.op_ExclusiveOr(System.Runtime.Intrinsics.Vector64{`0},System.Runtime.Intrinsics.Vector64{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Xor (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member ( ^^^ ) : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt;" Usage="left ^^^ right" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; operator ^(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( ^^^ ) : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="left ^^^ right" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="left">The vector to exclusive-or with <paramref name="right" />.</param>
        <param name="right">The vector to exclusive-or with <paramref name="left" />.</param>
        <summary>Computes the exclusive-or of two vectors.</summary>
        <returns>The exclusive-or of <paramref name="left" /> and <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the vector (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.op_Inequality(System.Runtime.Intrinsics.Vector64{`0},System.Runtime.Intrinsics.Vector64{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Vector64(Of T), right As Vector64(Of T)) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt;.op_Inequality (left, right)" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Vector64&lt;'T&gt;.op_Inequality (left, right)" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="left">The vector to compare with <paramref name="right" />.</param>
        <param name="right">The vector to compare with <paramref name="left" />.</param>
        <summary>Compares two vectors to determine if any elements are not equal.</summary>
        <returns>
          <see langword="true" /> if any elements in <paramref name="left" /> was not equal to the corresponding element in <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the vector (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_LeftShift">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; operator &lt;&lt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; value, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; op_LeftShift(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; value, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.op_LeftShift(System.Runtime.Intrinsics.Vector64{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;&lt; (value As Vector64(Of T), shiftCount As Integer) As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member ( &lt;&lt;&lt; ) : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="value &lt;&lt;&lt; shiftCount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; operator &lt;&lt;(System::Runtime::Intrinsics::Vector64&lt;T&gt; value, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-8.0;net-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="value">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts each element of a vector left by the specified amount.</summary>
        <returns>A vector whose elements where shifted left by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; operator * (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; op_Multiply(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.op_Multiply(System.Runtime.Intrinsics.Vector64{`0},System.Runtime.Intrinsics.Vector64{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt;" Usage="left * right" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; operator *(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="left * right" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="left">The vector to multiply with <paramref name="right" />.</param>
        <param name="right">The vector to multiply with <paramref name="left" />.</param>
        <summary>Multiplies two vectors to compute their element-wise product.</summary>
        <returns>The element-wise product of <paramref name="left" /> and <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the vector (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; operator * (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, T right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; op_Multiply(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; left, !T right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.op_Multiply(System.Runtime.Intrinsics.Vector64{`0},`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As Vector64(Of T), right As T) As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * 'T -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt;" Usage="left * right" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; operator *(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, T right);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * 'T -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="left * right" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="T" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="left">The vector to multiply with <paramref name="right" />.</param>
        <param name="right">The scalar to multiply with <paramref name="left" />.</param>
        <summary>Multiplies a vector by a scalar to compute their product.</summary>
        <returns>The product of <paramref name="left" /> and <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the vector (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; operator * (T left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; op_Multiply(!T left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.op_Multiply(`0,System.Runtime.Intrinsics.Vector64{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As T, right As Vector64(Of T)) As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member ( * ) : 'T * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt;" Usage="left * right" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; operator *(T left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( * ) : 'T * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="left * right" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="T" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0" />
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="left">The scalar to multiply with <paramref name="right" />.</param>
        <param name="right">The vector to multiply with <paramref name="left" />.</param>
        <summary>Multiplies a vector by a scalar to compute their product.</summary>
        <returns>The product of <paramref name="left" /> and <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the vector (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_OnesComplement">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; operator ~ (System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; op_OnesComplement(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.op_OnesComplement(System.Runtime.Intrinsics.Vector64{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Not (vector As Vector64(Of T)) As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member op_OnesComplement : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt;" Usage="System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt;.op_OnesComplement vector" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; operator ~(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" />
      <MemberSignature Language="F#" Value="static member op_OnesComplement : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64&lt;'T&gt;.op_OnesComplement vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="vector">The vector whose ones-complement is to be computed.</param>
        <summary>Computes the ones-complement of a vector.</summary>
        <returns>A vector whose elements are the ones-complement of the corresponding elements in <paramref name="vector" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the vector (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_RightShift">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; operator &gt;&gt; (System.Runtime.Intrinsics.Vector64&lt;T&gt; value, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; op_RightShift(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; value, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.op_RightShift(System.Runtime.Intrinsics.Vector64{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;&gt; (value As Vector64(Of T), shiftCount As Integer) As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member ( &gt;&gt;&gt; ) : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="value &gt;&gt;&gt; shiftCount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; operator &gt;&gt;(System::Runtime::Intrinsics::Vector64&lt;T&gt; value, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-8.0;net-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="value">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts (signed) each element of a vector right by the specified amount.</summary>
        <returns>A vector whose elements where shifted right by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; operator - (System.Runtime.Intrinsics.Vector64&lt;T&gt; left, System.Runtime.Intrinsics.Vector64&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; op_Subtraction(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; left, valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.op_Subtraction(System.Runtime.Intrinsics.Vector64{`0},System.Runtime.Intrinsics.Vector64{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (left As Vector64(Of T), right As Vector64(Of T)) As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; * System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt;" Usage="left - right" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; operator -(System::Runtime::Intrinsics::Vector64&lt;T&gt; left, System::Runtime::Intrinsics::Vector64&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="left - right" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="right" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="1" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="left">The vector from which <paramref name="right" /> will be subtracted.</param>
        <param name="right">The vector to subtract from <paramref name="left" />.</param>
        <summary>Subtracts two vectors to compute their difference.</summary>
        <returns>The difference of <paramref name="left" /> and <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the vector (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; operator - (System.Runtime.Intrinsics.Vector64&lt;T&gt; vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; op_UnaryNegation(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.op_UnaryNegation(System.Runtime.Intrinsics.Vector64{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (vector As Vector64(Of T)) As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt;" Usage="- vector" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; operator -(System::Runtime::Intrinsics::Vector64&lt;T&gt; vector);" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="- vector" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="vector">The vector to negate.</param>
        <summary>Computes the unary negation of a vector.</summary>
        <returns>A vector whose elements are the unary negation of the corresponding elements in <paramref name="vector" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the vector (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; operator + (System.Runtime.Intrinsics.Vector64&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; op_UnaryPlus(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.op_UnaryPlus(System.Runtime.Intrinsics.Vector64{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (value As Vector64(Of T)) As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member ( ~+ ) : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt;" Usage="+ value" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; operator +(System::Runtime::Intrinsics::Vector64&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member ( ~+ ) : System.Runtime.Intrinsics.Vector64&lt;'T&gt; -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="+ value" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-7.0;net-8.0;net-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">The vector.</param>
        <summary>Returns a given vector unchanged.</summary>
        <returns>
          <paramref name="value" />
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the vector (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_UnsignedRightShift">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; op_UnsignedRightShift (System.Runtime.Intrinsics.Vector64&lt;T&gt; value, int shiftCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; op_UnsignedRightShift(valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; value, int32 shiftCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.op_UnsignedRightShift(System.Runtime.Intrinsics.Vector64{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_UnsignedRightShift (value As Vector64(Of T), shiftCount As Integer) As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member op_UnsignedRightShift : System.Runtime.Intrinsics.Vector64&lt;'T&gt; * int -&gt; System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64&lt;'T&gt;.op_UnsignedRightShift (value, shiftCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Intrinsics::Vector64&lt;T&gt; op_UnsignedRightShift(System::Runtime::Intrinsics::Vector64&lt;T&gt; value, int shiftCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.Intrinsics.Vector64&lt;T&gt;" Index="0" FrameworkAlternate="net-8.0;net-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="shiftCount" Type="System.Int32" Index="1" FrameworkAlternate="net-8.0;net-9.0" />
      </Parameters>
      <Docs>
        <param name="value">The vector whose elements are to be shifted.</param>
        <param name="shiftCount">The number of bits by which to shift each element.</param>
        <summary>Shifts (unsigned) each element of a vector right by the specified amount.</summary>
        <returns>A vector whose elements where shifted right by <paramref name="shiftCount" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector64`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="vector64.ToString " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts the current instance to an equivalent string representation.</summary>
        <returns>An equivalent string representation of the current instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the current instance (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector64&lt;T&gt; Zero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.Intrinsics.Vector64`1&lt;!T&gt; Zero" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Intrinsics.Vector64`1.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Zero As Vector64(Of T)" />
      <MemberSignature Language="F#" Value="static member Zero : System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt;" Usage="System.Runtime.Intrinsics.Vector64&lt;'T (requires 'T : struct)&gt;.Zero" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::Intrinsics::Vector64&lt;T&gt; Zero { System::Runtime::Intrinsics::Vector64&lt;T&gt; get(); };" />
      <MemberSignature Language="F#" Value="static member Zero : System.Runtime.Intrinsics.Vector64&lt;'T&gt;" Usage="System.Runtime.Intrinsics.Vector64&lt;'T&gt;.Zero" FrameworkAlternate="net-8.0;net-9.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector64&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a new <see cref="T:System.Runtime.Intrinsics.Vector64`1" /> with all elements initialized to zero.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The type of the current instance (<typeparamref name="T" />) is not supported.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

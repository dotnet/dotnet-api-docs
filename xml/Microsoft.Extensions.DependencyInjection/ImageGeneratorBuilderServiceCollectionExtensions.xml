<Type Name="ImageGeneratorBuilderServiceCollectionExtensions" FullName="Microsoft.Extensions.DependencyInjection.ImageGeneratorBuilderServiceCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class ImageGeneratorBuilderServiceCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImageGeneratorBuilderServiceCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.ImageGeneratorBuilderServiceCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ImageGeneratorBuilderServiceCollectionExtensions" />
  <TypeSignature Language="F#" Value="type ImageGeneratorBuilderServiceCollectionExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageGeneratorBuilderServiceCollectionExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("MEAI001")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("MEAI001")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides extension methods for registering <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> with a <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddImageGenerator">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.AI.ImageGeneratorBuilder AddImageGenerator (this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, Microsoft.Extensions.AI.IImageGenerator innerGenerator, Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime = Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.AI.ImageGeneratorBuilder AddImageGenerator(class Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, class Microsoft.Extensions.AI.IImageGenerator innerGenerator, valuetype Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ImageGeneratorBuilderServiceCollectionExtensions.AddImageGenerator(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.AI.IImageGenerator,Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddImageGenerator (serviceCollection As IServiceCollection, innerGenerator As IImageGenerator, Optional lifetime As ServiceLifetime = Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton) As ImageGeneratorBuilder" />
      <MemberSignature Language="F#" Value="static member AddImageGenerator : Microsoft.Extensions.DependencyInjection.IServiceCollection * Microsoft.Extensions.AI.IImageGenerator * Microsoft.Extensions.DependencyInjection.ServiceLifetime -&gt; Microsoft.Extensions.AI.ImageGeneratorBuilder" Usage="Microsoft.Extensions.DependencyInjection.ImageGeneratorBuilderServiceCollectionExtensions.AddImageGenerator (serviceCollection, innerGenerator, lifetime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.ImageGeneratorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceCollection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="innerGenerator" Type="Microsoft.Extensions.AI.IImageGenerator" />
        <Parameter Name="lifetime" Type="Microsoft.Extensions.DependencyInjection.ServiceLifetime" />
      </Parameters>
      <Docs>
        <param name="serviceCollection">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to which the generator should be added.</param>
        <param name="innerGenerator">The inner <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> that represents the underlying backend.</param>
        <param name="lifetime">The service lifetime for the generator. Defaults to <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />.</param>
        <summary>Registers a singleton <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> in the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</summary>
        <returns>A <see cref="T:Microsoft.Extensions.AI.ImageGeneratorBuilder" /> that can be used to build a pipeline around the inner generator.</returns>
        <remarks>The generator is registered as a singleton service.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serviceCollection" /> or <paramref name="innerGenerator" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddImageGenerator">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.AI.ImageGeneratorBuilder AddImageGenerator (this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, Func&lt;IServiceProvider,Microsoft.Extensions.AI.IImageGenerator&gt; innerGeneratorFactory, Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime = Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.AI.ImageGeneratorBuilder AddImageGenerator(class Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, class System.Func`2&lt;class System.IServiceProvider, class Microsoft.Extensions.AI.IImageGenerator&gt; innerGeneratorFactory, valuetype Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ImageGeneratorBuilderServiceCollectionExtensions.AddImageGenerator(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,Microsoft.Extensions.AI.IImageGenerator},Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddImageGenerator (serviceCollection As IServiceCollection, innerGeneratorFactory As Func(Of IServiceProvider, IImageGenerator), Optional lifetime As ServiceLifetime = Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton) As ImageGeneratorBuilder" />
      <MemberSignature Language="F#" Value="static member AddImageGenerator : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;IServiceProvider, Microsoft.Extensions.AI.IImageGenerator&gt; * Microsoft.Extensions.DependencyInjection.ServiceLifetime -&gt; Microsoft.Extensions.AI.ImageGeneratorBuilder" Usage="Microsoft.Extensions.DependencyInjection.ImageGeneratorBuilderServiceCollectionExtensions.AddImageGenerator (serviceCollection, innerGeneratorFactory, lifetime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.ImageGeneratorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceCollection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="innerGeneratorFactory" Type="System.Func&lt;System.IServiceProvider,Microsoft.Extensions.AI.IImageGenerator&gt;" />
        <Parameter Name="lifetime" Type="Microsoft.Extensions.DependencyInjection.ServiceLifetime" />
      </Parameters>
      <Docs>
        <param name="serviceCollection">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to which the generator should be added.</param>
        <param name="innerGeneratorFactory">A callback that produces the inner <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> that represents the underlying backend.</param>
        <param name="lifetime">The service lifetime for the generator. Defaults to <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />.</param>
        <summary>Registers a singleton <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> in the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</summary>
        <returns>A <see cref="T:Microsoft.Extensions.AI.ImageGeneratorBuilder" /> that can be used to build a pipeline around the inner generator.</returns>
        <remarks>The generator is registered as a singleton service.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serviceCollection" /> or <paramref name="innerGeneratorFactory" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddKeyedImageGenerator">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.AI.ImageGeneratorBuilder AddKeyedImageGenerator (this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, object serviceKey, Microsoft.Extensions.AI.IImageGenerator innerGenerator, Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime = Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.AI.ImageGeneratorBuilder AddKeyedImageGenerator(class Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, object serviceKey, class Microsoft.Extensions.AI.IImageGenerator innerGenerator, valuetype Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ImageGeneratorBuilderServiceCollectionExtensions.AddKeyedImageGenerator(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,Microsoft.Extensions.AI.IImageGenerator,Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddKeyedImageGenerator (serviceCollection As IServiceCollection, serviceKey As Object, innerGenerator As IImageGenerator, Optional lifetime As ServiceLifetime = Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton) As ImageGeneratorBuilder" />
      <MemberSignature Language="F#" Value="static member AddKeyedImageGenerator : Microsoft.Extensions.DependencyInjection.IServiceCollection * obj * Microsoft.Extensions.AI.IImageGenerator * Microsoft.Extensions.DependencyInjection.ServiceLifetime -&gt; Microsoft.Extensions.AI.ImageGeneratorBuilder" Usage="Microsoft.Extensions.DependencyInjection.ImageGeneratorBuilderServiceCollectionExtensions.AddKeyedImageGenerator (serviceCollection, serviceKey, innerGenerator, lifetime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.ImageGeneratorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceCollection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="serviceKey" Type="System.Object" />
        <Parameter Name="innerGenerator" Type="Microsoft.Extensions.AI.IImageGenerator" />
        <Parameter Name="lifetime" Type="Microsoft.Extensions.DependencyInjection.ServiceLifetime" />
      </Parameters>
      <Docs>
        <param name="serviceCollection">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to which the generator should be added.</param>
        <param name="serviceKey">The key with which to associate the generator.</param>
        <param name="innerGenerator">The inner <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> that represents the underlying backend.</param>
        <param name="lifetime">The service lifetime for the generator. Defaults to <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />.</param>
        <summary>Registers a keyed singleton <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> in the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</summary>
        <returns>A <see cref="T:Microsoft.Extensions.AI.ImageGeneratorBuilder" /> that can be used to build a pipeline around the inner generator.</returns>
        <remarks>The generator is registered as a scoped service.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serviceCollection" />, <paramref name="serviceKey" />, or <paramref name="innerGenerator" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddKeyedImageGenerator">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.AI.ImageGeneratorBuilder AddKeyedImageGenerator (this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, object serviceKey, Func&lt;IServiceProvider,Microsoft.Extensions.AI.IImageGenerator&gt; innerGeneratorFactory, Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime = Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.AI.ImageGeneratorBuilder AddKeyedImageGenerator(class Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, object serviceKey, class System.Func`2&lt;class System.IServiceProvider, class Microsoft.Extensions.AI.IImageGenerator&gt; innerGeneratorFactory, valuetype Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ImageGeneratorBuilderServiceCollectionExtensions.AddKeyedImageGenerator(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,Microsoft.Extensions.AI.IImageGenerator},Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddKeyedImageGenerator (serviceCollection As IServiceCollection, serviceKey As Object, innerGeneratorFactory As Func(Of IServiceProvider, IImageGenerator), Optional lifetime As ServiceLifetime = Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton) As ImageGeneratorBuilder" />
      <MemberSignature Language="F#" Value="static member AddKeyedImageGenerator : Microsoft.Extensions.DependencyInjection.IServiceCollection * obj * Func&lt;IServiceProvider, Microsoft.Extensions.AI.IImageGenerator&gt; * Microsoft.Extensions.DependencyInjection.ServiceLifetime -&gt; Microsoft.Extensions.AI.ImageGeneratorBuilder" Usage="Microsoft.Extensions.DependencyInjection.ImageGeneratorBuilderServiceCollectionExtensions.AddKeyedImageGenerator (serviceCollection, serviceKey, innerGeneratorFactory, lifetime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.ImageGeneratorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceCollection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="serviceKey" Type="System.Object" />
        <Parameter Name="innerGeneratorFactory" Type="System.Func&lt;System.IServiceProvider,Microsoft.Extensions.AI.IImageGenerator&gt;" />
        <Parameter Name="lifetime" Type="Microsoft.Extensions.DependencyInjection.ServiceLifetime" />
      </Parameters>
      <Docs>
        <param name="serviceCollection">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to which the generator should be added.</param>
        <param name="serviceKey">The key with which to associate the generator.</param>
        <param name="innerGeneratorFactory">A callback that produces the inner <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> that represents the underlying backend.</param>
        <param name="lifetime">The service lifetime for the generator. Defaults to <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />.</param>
        <summary>Registers a keyed singleton <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> in the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</summary>
        <returns>A <see cref="T:Microsoft.Extensions.AI.ImageGeneratorBuilder" /> that can be used to build a pipeline around the inner generator.</returns>
        <remarks>The generator is registered as a scoped service.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serviceCollection" />, <paramref name="serviceKey" />, or <paramref name="innerGeneratorFactory" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

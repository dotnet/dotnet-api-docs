<Type Name="ServiceProviderServiceExtensions" FullName="Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions">
  <TypeSignature Language="C#" Value="public static class ServiceProviderServiceExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ServiceProviderServiceExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ServiceProviderServiceExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceProviderServiceExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type ServiceProviderServiceExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Extension methods for getting services from an <see cref="T:System.IServiceProvider" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateScope">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceScope CreateScope (this IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceScope CreateScope(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.CreateScope(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateScope (provider As IServiceProvider) As IServiceScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceScope ^ CreateScope(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member CreateScope : IServiceProvider -&gt; Microsoft.Extensions.DependencyInjection.IServiceScope" Usage="Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.CreateScope provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-1.1;dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="provider">The <see cref="T:System.IServiceProvider" /> to create the scope from.</param>
        <summary>Creates a new <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceScope" /> that can be used to resolve scoped services.</summary>
        <returns>A <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceScope" /> that can be used to resolve scoped services.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredService">
      <MemberSignature Language="C#" Value="public static object GetRequiredService (this IServiceProvider provider, Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetRequiredService(class System.IServiceProvider provider, class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(System.IServiceProvider,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRequiredService (provider As IServiceProvider, serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Object ^ GetRequiredService(IServiceProvider ^ provider, Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="static member GetRequiredService : IServiceProvider * Type -&gt; obj" Usage="Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService (provider, serviceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" RefType="this" />
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="provider">The <see cref="T:System.IServiceProvider" /> to retrieve the service object from.</param>
        <param name="serviceType">An object that specifies the type of service object to get.</param>
        <summary>Get service of type <paramref name="serviceType" /> from the <see cref="T:System.IServiceProvider" />.</summary>
        <returns>A service object of type <paramref name="serviceType" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">There is no service of type <paramref name="serviceType" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredService&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetRequiredService&lt;T&gt; (this IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetRequiredService&lt;T&gt;(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService``1(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRequiredService(Of T) (provider As IServiceProvider) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T GetRequiredService(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member GetRequiredService : IServiceProvider -&gt; 'T" Usage="Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of service object to get.</typeparam>
        <param name="provider">The <see cref="T:System.IServiceProvider" /> to retrieve the service object from.</param>
        <summary>Get service of type <typeparamref name="T" /> from the <see cref="T:System.IServiceProvider" />.</summary>
        <returns>A service object of type <typeparamref name="T" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">There is no service of type <typeparamref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetService&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetService&lt;T&gt; (this IServiceProvider provider);" FrameworkAlternate="dotnet-plat-ext-1.0;dotnet-plat-ext-1.1;dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetService&lt;T&gt;(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService``1(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetService(Of T) (provider As IServiceProvider) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T GetService(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member GetService : IServiceProvider -&gt; 'T" Usage="Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService provider" />
      <MemberSignature Language="C#" Value="public static T GetService&lt;T&gt; (this IServiceProvider? provider);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of service object to get.</typeparam>
        <param name="provider">The <see cref="T:System.IServiceProvider" /> to retrieve the service object from.</param>
        <summary>Get service of type <typeparamref name="T" /> from the <see cref="T:System.IServiceProvider" />.</summary>
        <returns>A service object of type <typeparamref name="T" /> or null if there is no such service.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServices">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;object&gt; GetServices (this IServiceProvider provider, Type serviceType);" FrameworkAlternate="dotnet-plat-ext-1.0;dotnet-plat-ext-1.1;dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetServices(class System.IServiceProvider provider, class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetServices(System.IServiceProvider,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServices (provider As IServiceProvider, serviceType As Type) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetServices(IServiceProvider ^ provider, Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="static member GetServices : IServiceProvider * Type -&gt; seq&lt;obj&gt;" Usage="Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetServices (provider, serviceType)" />
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;object&gt;? GetServices (this IServiceProvider provider, Type serviceType);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" RefType="this" />
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="provider">The <see cref="T:System.IServiceProvider" /> to retrieve the services from.</param>
        <param name="serviceType">An object that specifies the type of service object to get.</param>
        <summary>Get an enumeration of services of type <paramref name="serviceType" /> from the <see cref="T:System.IServiceProvider" />.</summary>
        <returns>An enumeration of services of type <paramref name="serviceType" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServices&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetServices&lt;T&gt; (this IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetServices&lt;T&gt;(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetServices``1(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServices(Of T) (provider As IServiceProvider) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetServices(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member GetServices : IServiceProvider -&gt; seq&lt;'T&gt;" Usage="Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetServices provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of service object to get.</typeparam>
        <param name="provider">The <see cref="T:System.IServiceProvider" /> to retrieve the services from.</param>
        <summary>Get an enumeration of services of type <typeparamref name="T" /> from the <see cref="T:System.IServiceProvider" />.</summary>
        <returns>An enumeration of services of type <typeparamref name="T" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="NamedServiceProviderExtensions" FullName="Microsoft.Extensions.DependencyInjection.NamedServiceProviderExtensions">
  <TypeSignature Language="C#" Value="public static class NamedServiceProviderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NamedServiceProviderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.NamedServiceProviderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module NamedServiceProviderExtensions" />
  <TypeSignature Language="F#" Value="type NamedServiceProviderExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class NamedServiceProviderExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DependencyInjection.NamedService</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for getting services from an <see cref="T:Microsoft.Extensions.DependencyInjection.INamedServiceProvider`1" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRequiredService&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static TService GetRequiredService&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.INamedServiceProvider&lt;TService&gt; provider, string name) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TService GetRequiredService&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.INamedServiceProvider`1&lt;!!TService&gt; provider, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.NamedServiceProviderExtensions.GetRequiredService``1(Microsoft.Extensions.DependencyInjection.INamedServiceProvider{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRequiredService(Of TService As Class) (provider As INamedServiceProvider(Of TService), name As String) As TService" />
      <MemberSignature Language="F#" Value="static member GetRequiredService : Microsoft.Extensions.DependencyInjection.INamedServiceProvider&lt;'Service (requires 'Service : null)&gt; * string -&gt; 'Service (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.NamedServiceProviderExtensions.GetRequiredService (provider, name)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static TService GetRequiredService(Microsoft::Extensions::DependencyInjection::INamedServiceProvider&lt;TService&gt; ^ provider, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.NamedService</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TService</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="provider" Type="Microsoft.Extensions.DependencyInjection.INamedServiceProvider&lt;TService&gt;" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TService">The type of service object to get.</typeparam>
        <param name="provider">The <see cref="T:Microsoft.Extensions.DependencyInjection.INamedServiceProvider`1" /> to retrieve the service object from.</param>
        <param name="name">The name of the service.</param>
        <summary>
            Get service of type <typeparamref name="TService" /> from the <see cref="T:Microsoft.Extensions.DependencyInjection.INamedServiceProvider`1" />.
            </summary>
        <returns>A service object of type <typeparamref name="TService" />.</returns>
        <remarks>
            This method returns the latest <typeparamref name="TService" /> registered under the name.
            </remarks>
        <exception cref="T:System.InvalidOperationException">There is no service of type <typeparamref name="TService" /> with the name.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

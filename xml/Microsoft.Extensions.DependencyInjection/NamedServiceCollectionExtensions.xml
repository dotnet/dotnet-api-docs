<Type Name="NamedServiceCollectionExtensions" FullName="Microsoft.Extensions.DependencyInjection.NamedServiceCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class NamedServiceCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NamedServiceCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.NamedServiceCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module NamedServiceCollectionExtensions" />
  <TypeSignature Language="F#" Value="type NamedServiceCollectionExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class NamedServiceCollectionExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DependencyInjection.NamedService</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extensions for adding named services to <see cref="T:Microsoft.Extensions.DependencyInjection.INamedServiceProvider`1" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNamedSingleton&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddNamedSingleton&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, string name) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddNamedSingleton&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.NamedServiceCollectionExtensions.AddNamedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddNamedSingleton(Of TService As Class) (serviceCollection As IServiceCollection, name As String) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddNamedSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection * string -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.NamedServiceCollectionExtensions.AddNamedSingleton (serviceCollection, name)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddNamedSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ serviceCollection, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.NamedService</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="serviceCollection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TService">The type of the service to add.</typeparam>
        <param name="serviceCollection">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</param>
        <param name="name">The name of the service.</param>
        <summary>
            Adds a singleton named service of the type specific in <typeparamref name="TService" /> to the
            specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
        <returns>A reference to this instance after the operation has completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNamedSingleton&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddNamedSingleton&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, string name, Func&lt;IServiceProvider,TService&gt; implementationFactory) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddNamedSingleton&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, string name, class System.Func`2&lt;class System.IServiceProvider, !!TService&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.NamedServiceCollectionExtensions.AddNamedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Func{System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddNamedSingleton(Of TService As Class) (serviceCollection As IServiceCollection, name As String, implementationFactory As Func(Of IServiceProvider, TService)) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddNamedSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection * string * Func&lt;IServiceProvider, 'Service (requires 'Service : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.NamedServiceCollectionExtensions.AddNamedSingleton (serviceCollection, name, implementationFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddNamedSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ serviceCollection, System::String ^ name, Func&lt;IServiceProvider ^, TService&gt; ^ implementationFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.NamedService</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="serviceCollection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,TService&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TService">The type of the service to add.</typeparam>
        <param name="serviceCollection">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</param>
        <param name="name">The name of the service.</param>
        <param name="implementationFactory">The factory that creates the service.</param>
        <summary>
            Adds a singleton named service of the type specific in <typeparamref name="TService" /> to the
            specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
        <returns>A reference to this instance after the operation has completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNamedSingleton&lt;TService,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddNamedSingleton&lt;TService,TImplementation&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, string name) where TService : class where TImplementation : TService;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddNamedSingleton&lt;class TService, (!!TService) TImplementation&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.NamedServiceCollectionExtensions.AddNamedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddNamedSingleton(Of TService As Class, TImplementation As Class) (serviceCollection As IServiceCollection, name As String) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddNamedSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection * string -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.NamedServiceCollectionExtensions.AddNamedSingleton (serviceCollection, name)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService, typename TImplementation&gt;&#xA; where TService : class where TImplementation : TService[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddNamedSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ serviceCollection, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.NamedService</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>TService</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="serviceCollection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TService">The type of the service to add.</typeparam>
        <typeparam name="TImplementation">The type of the implementation to use.</typeparam>
        <param name="serviceCollection">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</param>
        <param name="name">The name of the service.</param>
        <summary>
            Adds a singleton named service of the type specific in <typeparamref name="TService" /> to the
            specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
        <returns>A reference to this instance after the operation has completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNamedTransient&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddNamedTransient&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, string name) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddNamedTransient&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.NamedServiceCollectionExtensions.AddNamedTransient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddNamedTransient(Of TService As Class) (serviceCollection As IServiceCollection, name As String) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddNamedTransient : Microsoft.Extensions.DependencyInjection.IServiceCollection * string -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.NamedServiceCollectionExtensions.AddNamedTransient (serviceCollection, name)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddNamedTransient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ serviceCollection, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.NamedService</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="serviceCollection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TService">The type of the service to add.</typeparam>
        <param name="serviceCollection">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</param>
        <param name="name">The name of the service.</param>
        <summary>
            Adds a transient named service of the type specific in <typeparamref name="TService" /> to the
            specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
        <returns>A reference to this instance after the operation has completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNamedTransient&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddNamedTransient&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, string name, Func&lt;IServiceProvider,TService&gt; implementationFactory) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddNamedTransient&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, string name, class System.Func`2&lt;class System.IServiceProvider, !!TService&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.NamedServiceCollectionExtensions.AddNamedTransient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Func{System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddNamedTransient(Of TService As Class) (serviceCollection As IServiceCollection, name As String, implementationFactory As Func(Of IServiceProvider, TService)) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddNamedTransient : Microsoft.Extensions.DependencyInjection.IServiceCollection * string * Func&lt;IServiceProvider, 'Service (requires 'Service : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.NamedServiceCollectionExtensions.AddNamedTransient (serviceCollection, name, implementationFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddNamedTransient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ serviceCollection, System::String ^ name, Func&lt;IServiceProvider ^, TService&gt; ^ implementationFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.NamedService</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="serviceCollection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,TService&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TService">The type of the service to add.</typeparam>
        <param name="serviceCollection">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</param>
        <param name="name">The name of the service.</param>
        <param name="implementationFactory">The factory that creates the service.</param>
        <summary>
            Adds a transient named service of the type specific in <typeparamref name="TService" /> to the
            specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
        <returns>A reference to this instance after the operation has completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

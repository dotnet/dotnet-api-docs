<Type Name="ObjectFactory&lt;T&gt;" FullName="Microsoft.Extensions.DependencyInjection.ObjectFactory&lt;T&gt;">
  <TypeSignature Language="C#" Value="public delegate T ObjectFactory&lt;T&gt;(IServiceProvider serviceProvider, object?[]? arguments);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ObjectFactory`1&lt;T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.ObjectFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ObjectFactory(Of T)(serviceProvider As IServiceProvider, arguments As Object()) As T " />
  <TypeSignature Language="F#" Value="type ObjectFactory&lt;'T&gt; = delegate of IServiceProvider * obj[] -&gt; 'T" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public delegate T ObjectFactory(IServiceProvider ^ serviceProvider, cli::array &lt;System::Object ^&gt; ^ arguments);" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
    <Parameter Name="arguments" Type="System.Object[]">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </Parameter>
  </Parameters>
  <ReturnValue>
    <ReturnType>T</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T">The type of the instance being returned</typeparam>
    <param name="serviceProvider">The <see cref="T:System.IServiceProvider" /> to get service arguments from.</param>
    <param name="arguments">Additional constructor arguments.</param>
    <summary>
            The result of <see cref="M:Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory``1(System.Type[])" />. A delegate to specify a factory method to call to instantiate an instance of type `T`
            </summary>
    <returns>An instance of T</returns>
    <remarks>To be added.</remarks>
  </Docs>
</Type>

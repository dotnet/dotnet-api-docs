<Type Name="ServiceDescriptor" FullName="Microsoft.Extensions.DependencyInjection.ServiceDescriptor">
  <TypeSignature Language="C#" Value="public class ServiceDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceDescriptor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceDescriptor" />
  <TypeSignature Language="F#" Value="type ServiceDescriptor = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Lifetime = {Lifetime}, ServiceType = {ServiceType}, ImplementationType = {ImplementationType}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Describes a service with its service type, implementation, and lifetime.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceDescriptor (Type serviceType, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serviceType, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceType As Type, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceDescriptor(Type ^ serviceType, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.DependencyInjection.ServiceDescriptor : Type * obj -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor" Usage="new Microsoft.Extensions.DependencyInjection.ServiceDescriptor (serviceType, instance)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serviceType">The <see cref="T:System.Type" /> of the service.</param>
        <param name="instance">The instance implementing the service.</param>
        <summary>Initializes a new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified <paramref name="instance" />
            as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceDescriptor (Type serviceType, Func&lt;IServiceProvider,object&gt; factory, Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serviceType, class System.Func`2&lt;class System.IServiceProvider, object&gt; factory, valuetype Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.#ctor(System.Type,System.Func{System.IServiceProvider,System.Object},Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceType As Type, factory As Func(Of IServiceProvider, Object), lifetime As ServiceLifetime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceDescriptor(Type ^ serviceType, Func&lt;IServiceProvider ^, System::Object ^&gt; ^ factory, Microsoft::Extensions::DependencyInjection::ServiceLifetime lifetime);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.DependencyInjection.ServiceDescriptor : Type * Func&lt;IServiceProvider, obj&gt; * Microsoft.Extensions.DependencyInjection.ServiceLifetime -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor" Usage="new Microsoft.Extensions.DependencyInjection.ServiceDescriptor (serviceType, factory, lifetime)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="factory" Type="System.Func&lt;System.IServiceProvider,System.Object&gt;" />
        <Parameter Name="lifetime" Type="Microsoft.Extensions.DependencyInjection.ServiceLifetime" />
      </Parameters>
      <Docs>
        <param name="serviceType">The <see cref="T:System.Type" /> of the service.</param>
        <param name="factory">A factory used for creating service instances.</param>
        <param name="lifetime">The <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceLifetime" /> of the service.</param>
        <summary>Initializes a new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified <paramref name="factory" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceDescriptor (Type serviceType, Type implementationType, Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serviceType, class System.Type implementationType, valuetype Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.#ctor(System.Type,System.Type,Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceType As Type, implementationType As Type, lifetime As ServiceLifetime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceDescriptor(Type ^ serviceType, Type ^ implementationType, Microsoft::Extensions::DependencyInjection::ServiceLifetime lifetime);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.DependencyInjection.ServiceDescriptor : Type * Type * Microsoft.Extensions.DependencyInjection.ServiceLifetime -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor" Usage="new Microsoft.Extensions.DependencyInjection.ServiceDescriptor (serviceType, implementationType, lifetime)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="implementationType" Type="System.Type" />
        <Parameter Name="lifetime" Type="Microsoft.Extensions.DependencyInjection.ServiceLifetime" />
      </Parameters>
      <Docs>
        <param name="serviceType">The <see cref="T:System.Type" /> of the service.</param>
        <param name="implementationType">The <see cref="T:System.Type" /> implementing the service.</param>
        <param name="lifetime">The <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceLifetime" /> of the service.</param>
        <summary>Initializes a new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified <paramref name="implementationType" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Describe">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.ServiceDescriptor Describe (Type serviceType, Func&lt;IServiceProvider,object&gt; implementationFactory, Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.ServiceDescriptor Describe(class System.Type serviceType, class System.Func`2&lt;class System.IServiceProvider, object&gt; implementationFactory, valuetype Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Describe(System.Type,System.Func{System.IServiceProvider,System.Object},Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Describe (serviceType As Type, implementationFactory As Func(Of IServiceProvider, Object), lifetime As ServiceLifetime) As ServiceDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ Describe(Type ^ serviceType, Func&lt;IServiceProvider ^, System::Object ^&gt; ^ implementationFactory, Microsoft::Extensions::DependencyInjection::ServiceLifetime lifetime);" />
      <MemberSignature Language="F#" Value="static member Describe : Type * Func&lt;IServiceProvider, obj&gt; * Microsoft.Extensions.DependencyInjection.ServiceLifetime -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Describe (serviceType, implementationFactory, lifetime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,System.Object&gt;" />
        <Parameter Name="lifetime" Type="Microsoft.Extensions.DependencyInjection.ServiceLifetime" />
      </Parameters>
      <Docs>
        <param name="serviceType">The type of the service.</param>
        <param name="implementationFactory">A factory to create new instances of the service implementation.</param>
        <param name="lifetime">The lifetime of the service.</param>
        <summary>Creates an instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified
            <paramref name="serviceType" />, <paramref name="implementationFactory" />,
            and <paramref name="lifetime" />.</summary>
        <returns>A new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Describe">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.ServiceDescriptor Describe (Type serviceType, Type implementationType, Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.ServiceDescriptor Describe(class System.Type serviceType, class System.Type implementationType, valuetype Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Describe(System.Type,System.Type,Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Describe (serviceType As Type, implementationType As Type, lifetime As ServiceLifetime) As ServiceDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ Describe(Type ^ serviceType, Type ^ implementationType, Microsoft::Extensions::DependencyInjection::ServiceLifetime lifetime);" />
      <MemberSignature Language="F#" Value="static member Describe : Type * Type * Microsoft.Extensions.DependencyInjection.ServiceLifetime -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Describe (serviceType, implementationType, lifetime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="implementationType" Type="System.Type" />
        <Parameter Name="lifetime" Type="Microsoft.Extensions.DependencyInjection.ServiceLifetime" />
      </Parameters>
      <Docs>
        <param name="serviceType">The type of the service.</param>
        <param name="implementationType">The type of the implementation.</param>
        <param name="lifetime">The lifetime of the service.</param>
        <summary>Creates an instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified
            <paramref name="serviceType" />, <paramref name="implementationType" />,
            and <paramref name="lifetime" />.</summary>
        <returns>A new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementationFactory">
      <MemberSignature Language="C#" Value="public Func&lt;IServiceProvider,object&gt; ImplementationFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.IServiceProvider, object&gt; ImplementationFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ImplementationFactory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImplementationFactory As Func(Of IServiceProvider, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;IServiceProvider ^, System::Object ^&gt; ^ ImplementationFactory { Func&lt;IServiceProvider ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImplementationFactory : Func&lt;IServiceProvider, obj&gt;" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ImplementationFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.IServiceProvider,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ImplementationInstance">
      <MemberSignature Language="C#" Value="public object ImplementationInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ImplementationInstance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ImplementationInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImplementationInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ImplementationInstance { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImplementationInstance : obj" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ImplementationInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ImplementationType">
      <MemberSignature Language="C#" Value="public Type ImplementationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ImplementationType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ImplementationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImplementationType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ImplementationType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImplementationType : Type" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ImplementationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Lifetime">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.DependencyInjection.ServiceLifetime Lifetime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.DependencyInjection.ServiceLifetime Lifetime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Lifetime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Lifetime As ServiceLifetime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::DependencyInjection::ServiceLifetime Lifetime { Microsoft::Extensions::DependencyInjection::ServiceLifetime get(); };" />
      <MemberSignature Language="F#" Value="member this.Lifetime : Microsoft.Extensions.DependencyInjection.ServiceLifetime" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Lifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceLifetime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Scoped">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.ServiceDescriptor Scoped (Type service, Func&lt;IServiceProvider,object&gt; implementationFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.ServiceDescriptor Scoped(class System.Type service, class System.Func`2&lt;class System.IServiceProvider, object&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Scoped(System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Scoped (service As Type, implementationFactory As Func(Of IServiceProvider, Object)) As ServiceDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ Scoped(Type ^ service, Func&lt;IServiceProvider ^, System::Object ^&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member Scoped : Type * Func&lt;IServiceProvider, obj&gt; -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Scoped (service, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Type" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="service">The type of the service.</param>
        <param name="implementationFactory">A factory to create new instances of the service implementation.</param>
        <summary>Creates an instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified
            <paramref name="service" />, <paramref name="implementationFactory" />,
            and the <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> lifetime.</summary>
        <returns>A new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scoped">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.ServiceDescriptor Scoped (Type service, Type implementationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.ServiceDescriptor Scoped(class System.Type service, class System.Type implementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Scoped(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Scoped (service As Type, implementationType As Type) As ServiceDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ Scoped(Type ^ service, Type ^ implementationType);" />
      <MemberSignature Language="F#" Value="static member Scoped : Type * Type -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Scoped (service, implementationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Type" />
        <Parameter Name="implementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="service">The type of the service.</param>
        <param name="implementationType">The type of the implementation.</param>
        <summary>Creates an instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified
            <paramref name="service" /> and <paramref name="implementationType" />
            and the <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> lifetime.</summary>
        <returns>A new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scoped&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.ServiceDescriptor Scoped&lt;TService&gt; (Func&lt;IServiceProvider,TService&gt; implementationFactory) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.ServiceDescriptor Scoped&lt;class TService&gt;(class System.Func`2&lt;class System.IServiceProvider, !!TService&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Scoped``1(System.Func{System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Scoped(Of TService As Class) (implementationFactory As Func(Of IServiceProvider, TService)) As ServiceDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class static Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ Scoped(Func&lt;IServiceProvider ^, TService&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member Scoped : Func&lt;IServiceProvider, 'Service (requires 'Service : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Scoped implementationFactory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceDescriptor</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,TService&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TService">The type of the service.</typeparam>
        <param name="implementationFactory">A factory to create new instances of the service implementation.</param>
        <summary>Creates an instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified
            <typeparamref name="TService" />, <paramref name="implementationFactory" />,
            and the <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> lifetime.</summary>
        <returns>A new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scoped&lt;TService,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.ServiceDescriptor Scoped&lt;TService,TImplementation&gt; () where TService : class where TImplementation : class, TService;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.ServiceDescriptor Scoped&lt;class TService, class (!!TService) TImplementation&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Scoped``2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Scoped(Of TService As Class, TImplementation As Class) () As ServiceDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService, typename TImplementation&gt;&#xA; where TService : class where TImplementation : class, TService static Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ Scoped();" />
      <MemberSignature Language="F#" Value="static member Scoped : unit -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Scoped " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceDescriptor</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TService</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TService">The type of the service.</typeparam>
        <typeparam name="TImplementation">The type of the implementation.</typeparam>
        <summary>Creates an instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified
            <typeparamref name="TService" />, <typeparamref name="TImplementation" />,
            and the <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> lifetime.</summary>
        <returns>A new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scoped&lt;TService,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.ServiceDescriptor Scoped&lt;TService,TImplementation&gt; (Func&lt;IServiceProvider,TImplementation&gt; implementationFactory) where TService : class where TImplementation : class, TService;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.ServiceDescriptor Scoped&lt;class TService, class (!!TService) TImplementation&gt;(class System.Func`2&lt;class System.IServiceProvider, !!TImplementation&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Scoped``2(System.Func{System.IServiceProvider,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Scoped(Of TService As Class, TImplementation As Class) (implementationFactory As Func(Of IServiceProvider, TImplementation)) As ServiceDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService, typename TImplementation&gt;&#xA; where TService : class where TImplementation : class, TService static Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ Scoped(Func&lt;IServiceProvider ^, TImplementation&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member Scoped : Func&lt;IServiceProvider, #'Service&gt; -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Scoped implementationFactory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceDescriptor</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TService</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,TImplementation&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TService">The type of the service.</typeparam>
        <typeparam name="TImplementation">The type of the implementation.</typeparam>
        <param name="implementationFactory">A factory to create new instances of the service implementation.</param>
        <summary>Creates an instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified
            <typeparamref name="TService" />, <typeparamref name="TImplementation" />,
            <paramref name="implementationFactory" />,
            and the <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> lifetime.</summary>
        <returns>A new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceType">
      <MemberSignature Language="C#" Value="public Type ServiceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ServiceType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ServiceType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ServiceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceType : Type" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ServiceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Singleton">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.ServiceDescriptor Singleton (Type serviceType, Func&lt;IServiceProvider,object&gt; implementationFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.ServiceDescriptor Singleton(class System.Type serviceType, class System.Func`2&lt;class System.IServiceProvider, object&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton(System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Singleton (serviceType As Type, implementationFactory As Func(Of IServiceProvider, Object)) As ServiceDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ Singleton(Type ^ serviceType, Func&lt;IServiceProvider ^, System::Object ^&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member Singleton : Type * Func&lt;IServiceProvider, obj&gt; -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton (serviceType, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="serviceType">The type of the service.</param>
        <param name="implementationFactory">A factory to create new instances of the service implementation.</param>
        <summary>Creates an instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified
            <paramref name="serviceType" />, <paramref name="implementationFactory" />,
            and the <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> lifetime.</summary>
        <returns>A new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Singleton">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.ServiceDescriptor Singleton (Type serviceType, object implementationInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.ServiceDescriptor Singleton(class System.Type serviceType, object implementationInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Singleton (serviceType As Type, implementationInstance As Object) As ServiceDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ Singleton(Type ^ serviceType, System::Object ^ implementationInstance);" />
      <MemberSignature Language="F#" Value="static member Singleton : Type * obj -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton (serviceType, implementationInstance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="implementationInstance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serviceType">The type of the service.</param>
        <param name="implementationInstance">The instance of the implementation.</param>
        <summary>Creates an instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified
            <paramref name="serviceType" />, <paramref name="implementationInstance" />,
            and the <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> lifetime.</summary>
        <returns>A new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Singleton">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.ServiceDescriptor Singleton (Type service, Type implementationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.ServiceDescriptor Singleton(class System.Type service, class System.Type implementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Singleton (service As Type, implementationType As Type) As ServiceDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ Singleton(Type ^ service, Type ^ implementationType);" />
      <MemberSignature Language="F#" Value="static member Singleton : Type * Type -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton (service, implementationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Type" />
        <Parameter Name="implementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="service">The type of the service.</param>
        <param name="implementationType">The type of the implementation.</param>
        <summary>Creates an instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified
            <paramref name="service" /> and <paramref name="implementationType" />
            and the <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> lifetime.</summary>
        <returns>A new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Singleton&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.ServiceDescriptor Singleton&lt;TService&gt; (Func&lt;IServiceProvider,TService&gt; implementationFactory) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.ServiceDescriptor Singleton&lt;class TService&gt;(class System.Func`2&lt;class System.IServiceProvider, !!TService&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton``1(System.Func{System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Singleton(Of TService As Class) (implementationFactory As Func(Of IServiceProvider, TService)) As ServiceDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class static Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ Singleton(Func&lt;IServiceProvider ^, TService&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member Singleton : Func&lt;IServiceProvider, 'Service (requires 'Service : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton implementationFactory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceDescriptor</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,TService&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TService">The type of the service.</typeparam>
        <param name="implementationFactory">A factory to create new instances of the service implementation.</param>
        <summary>Creates an instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified
            <typeparamref name="TService" />, <paramref name="implementationFactory" />,
            and the <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> lifetime.</summary>
        <returns>A new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Singleton&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.ServiceDescriptor Singleton&lt;TService&gt; (TService implementationInstance) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.ServiceDescriptor Singleton&lt;class TService&gt;(!!TService implementationInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Singleton(Of TService As Class) (implementationInstance As TService) As ServiceDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class static Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ Singleton(TService implementationInstance);" />
      <MemberSignature Language="F#" Value="static member Singleton : 'Service -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton implementationInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceDescriptor</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="implementationInstance" Type="TService" />
      </Parameters>
      <Docs>
        <typeparam name="TService">The type of the service.</typeparam>
        <param name="implementationInstance">The instance of the implementation.</param>
        <summary>Creates an instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified
            <typeparamref name="TService" />, <paramref name="implementationInstance" />,
            and the <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> lifetime.</summary>
        <returns>A new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Singleton&lt;TService,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.ServiceDescriptor Singleton&lt;TService,TImplementation&gt; () where TService : class where TImplementation : class, TService;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.ServiceDescriptor Singleton&lt;class TService, class (!!TService) TImplementation&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton``2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Singleton(Of TService As Class, TImplementation As Class) () As ServiceDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService, typename TImplementation&gt;&#xA; where TService : class where TImplementation : class, TService static Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ Singleton();" />
      <MemberSignature Language="F#" Value="static member Singleton : unit -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceDescriptor</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TService</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TService">The type of the service.</typeparam>
        <typeparam name="TImplementation">The type of the implementation.</typeparam>
        <summary>Creates an instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified
            <typeparamref name="TService" />, <typeparamref name="TImplementation" />,
            and the <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> lifetime.</summary>
        <returns>A new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Singleton&lt;TService,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.ServiceDescriptor Singleton&lt;TService,TImplementation&gt; (Func&lt;IServiceProvider,TImplementation&gt; implementationFactory) where TService : class where TImplementation : class, TService;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.ServiceDescriptor Singleton&lt;class TService, class (!!TService) TImplementation&gt;(class System.Func`2&lt;class System.IServiceProvider, !!TImplementation&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton``2(System.Func{System.IServiceProvider,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Singleton(Of TService As Class, TImplementation As Class) (implementationFactory As Func(Of IServiceProvider, TImplementation)) As ServiceDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService, typename TImplementation&gt;&#xA; where TService : class where TImplementation : class, TService static Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ Singleton(Func&lt;IServiceProvider ^, TImplementation&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member Singleton : Func&lt;IServiceProvider, #'Service&gt; -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Singleton implementationFactory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceDescriptor</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TService</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,TImplementation&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TService">The type of the service.</typeparam>
        <typeparam name="TImplementation">The type of the implementation.</typeparam>
        <param name="implementationFactory">A factory to create new instances of the service implementation.</param>
        <summary>Creates an instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified
            <typeparamref name="TService" />, <typeparamref name="TImplementation" />,
            <paramref name="implementationFactory" />,
            and the <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> lifetime.</summary>
        <returns>A new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="serviceDescriptor.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Transient">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.ServiceDescriptor Transient (Type service, Func&lt;IServiceProvider,object&gt; implementationFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.ServiceDescriptor Transient(class System.Type service, class System.Func`2&lt;class System.IServiceProvider, object&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Transient(System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Transient (service As Type, implementationFactory As Func(Of IServiceProvider, Object)) As ServiceDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ Transient(Type ^ service, Func&lt;IServiceProvider ^, System::Object ^&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member Transient : Type * Func&lt;IServiceProvider, obj&gt; -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Transient (service, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Type" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="service">The type of the service.</param>
        <param name="implementationFactory">A factory to create new instances of the service implementation.</param>
        <summary>Creates an instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified
            <paramref name="service" />, <paramref name="implementationFactory" />,
            and the <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> lifetime.</summary>
        <returns>A new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transient">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.ServiceDescriptor Transient (Type service, Type implementationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.ServiceDescriptor Transient(class System.Type service, class System.Type implementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Transient(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Transient (service As Type, implementationType As Type) As ServiceDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ Transient(Type ^ service, Type ^ implementationType);" />
      <MemberSignature Language="F#" Value="static member Transient : Type * Type -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Transient (service, implementationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Type" />
        <Parameter Name="implementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="service">The type of the service.</param>
        <param name="implementationType">The type of the implementation.</param>
        <summary>Creates an instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified
            <paramref name="service" /> and <paramref name="implementationType" />
            and the <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> lifetime.</summary>
        <returns>A new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transient&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.ServiceDescriptor Transient&lt;TService&gt; (Func&lt;IServiceProvider,TService&gt; implementationFactory) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.ServiceDescriptor Transient&lt;class TService&gt;(class System.Func`2&lt;class System.IServiceProvider, !!TService&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Transient``1(System.Func{System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Transient(Of TService As Class) (implementationFactory As Func(Of IServiceProvider, TService)) As ServiceDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class static Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ Transient(Func&lt;IServiceProvider ^, TService&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member Transient : Func&lt;IServiceProvider, 'Service (requires 'Service : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Transient implementationFactory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceDescriptor</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,TService&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TService">The type of the service.</typeparam>
        <param name="implementationFactory">A factory to create new instances of the service implementation.</param>
        <summary>Creates an instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified
            <typeparamref name="TService" />, <paramref name="implementationFactory" />,
            and the <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> lifetime.</summary>
        <returns>A new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transient&lt;TService,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.ServiceDescriptor Transient&lt;TService,TImplementation&gt; () where TService : class where TImplementation : class, TService;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.ServiceDescriptor Transient&lt;class TService, class (!!TService) TImplementation&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Transient``2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Transient(Of TService As Class, TImplementation As Class) () As ServiceDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService, typename TImplementation&gt;&#xA; where TService : class where TImplementation : class, TService static Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ Transient();" />
      <MemberSignature Language="F#" Value="static member Transient : unit -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Transient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceDescriptor</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TService</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TService">The type of the service.</typeparam>
        <typeparam name="TImplementation">The type of the implementation.</typeparam>
        <summary>Creates an instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified
            <typeparamref name="TService" />, <typeparamref name="TImplementation" />,
            and the <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> lifetime.</summary>
        <returns>A new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transient&lt;TService,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.ServiceDescriptor Transient&lt;TService,TImplementation&gt; (Func&lt;IServiceProvider,TImplementation&gt; implementationFactory) where TService : class where TImplementation : class, TService;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.ServiceDescriptor Transient&lt;class TService, class (!!TService) TImplementation&gt;(class System.Func`2&lt;class System.IServiceProvider, !!TImplementation&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Transient``2(System.Func{System.IServiceProvider,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Transient(Of TService As Class, TImplementation As Class) (implementationFactory As Func(Of IServiceProvider, TImplementation)) As ServiceDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService, typename TImplementation&gt;&#xA; where TService : class where TImplementation : class, TService static Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ Transient(Func&lt;IServiceProvider ^, TImplementation&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member Transient : Func&lt;IServiceProvider, #'Service&gt; -&gt; Microsoft.Extensions.DependencyInjection.ServiceDescriptor (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceDescriptor.Transient implementationFactory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceDescriptor</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TService</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,TImplementation&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TService">The type of the service.</typeparam>
        <typeparam name="TImplementation">The type of the implementation.</typeparam>
        <param name="implementationFactory">A factory to create new instances of the service implementation.</param>
        <summary>Creates an instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> with the specified
            <typeparamref name="TService" />, <typeparamref name="TImplementation" />,
            <paramref name="implementationFactory" />,
            and the <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> lifetime.</summary>
        <returns>A new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

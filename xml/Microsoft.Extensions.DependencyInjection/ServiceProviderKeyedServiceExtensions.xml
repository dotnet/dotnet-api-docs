<Type Name="ServiceProviderKeyedServiceExtensions" FullName="Microsoft.Extensions.DependencyInjection.ServiceProviderKeyedServiceExtensions">
  <TypeSignature Language="C#" Value="public static class ServiceProviderKeyedServiceExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ServiceProviderKeyedServiceExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.ServiceProviderKeyedServiceExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ServiceProviderKeyedServiceExtensions" />
  <TypeSignature Language="F#" Value="type ServiceProviderKeyedServiceExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceProviderKeyedServiceExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extension methods for getting services from an <see cref="T:System.IServiceProvider" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetKeyedService&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T? GetKeyedService&lt;T&gt; (this IServiceProvider provider, object? serviceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetKeyedService&lt;T&gt;(class System.IServiceProvider provider, object serviceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceProviderKeyedServiceExtensions.GetKeyedService``1(System.IServiceProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetKeyedService(Of T) (provider As IServiceProvider, serviceKey As Object) As T" />
      <MemberSignature Language="F#" Value="static member GetKeyedService : IServiceProvider * obj -&gt; 'T" Usage="Microsoft.Extensions.DependencyInjection.ServiceProviderKeyedServiceExtensions.GetKeyedService (provider, serviceKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T GetKeyedService(IServiceProvider ^ provider, System::Object ^ serviceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" RefType="this">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="serviceKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of service object to get.</typeparam>
        <param name="provider">The <see cref="T:System.IServiceProvider" /> to retrieve the service object from.</param>
        <param name="serviceKey">An object that specifies the key of service object to get.</param>
        <summary>
            Get service of type <typeparamref name="T" /> from the <see cref="T:System.IServiceProvider" />.
            </summary>
        <returns>A service object of type <typeparamref name="T" /> or null if there is no such service.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyedServices">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;object?&gt; GetKeyedServices (this IServiceProvider provider, Type serviceType, object? serviceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetKeyedServices(class System.IServiceProvider provider, class System.Type serviceType, object serviceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceProviderKeyedServiceExtensions.GetKeyedServices(System.IServiceProvider,System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetKeyedServices (provider As IServiceProvider, serviceType As Type, serviceKey As Object) As IEnumerable(Of Object)" />
      <MemberSignature Language="F#" Value="static member GetKeyedServices : IServiceProvider * Type * obj -&gt; seq&lt;obj&gt;" Usage="Microsoft.Extensions.DependencyInjection.ServiceProviderKeyedServiceExtensions.GetKeyedServices (provider, serviceType, serviceKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetKeyedServices(IServiceProvider ^ provider, Type ^ serviceType, System::Object ^ serviceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresDynamicCode("The native code for an IEnumerable&lt;serviceType&gt; might not be available at runtime.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresDynamicCode("The native code for an IEnumerable&lt;serviceType&gt; might not be available at runtime.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" RefType="this" />
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="serviceKey" Type="System.Object">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="provider">The <see cref="T:System.IServiceProvider" /> to retrieve the services from.</param>
        <param name="serviceType">An object that specifies the type of service object to get.</param>
        <param name="serviceKey">An object that specifies the key of service object to get.</param>
        <summary>
            Get an enumeration of services of type <paramref name="serviceType" /> from the <see cref="T:System.IServiceProvider" />.
            </summary>
        <returns>An enumeration of services of type <paramref name="serviceType" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyedServices&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetKeyedServices&lt;T&gt; (this IServiceProvider provider, object? serviceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetKeyedServices&lt;T&gt;(class System.IServiceProvider provider, object serviceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceProviderKeyedServiceExtensions.GetKeyedServices``1(System.IServiceProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetKeyedServices(Of T) (provider As IServiceProvider, serviceKey As Object) As IEnumerable(Of T)" />
      <MemberSignature Language="F#" Value="static member GetKeyedServices : IServiceProvider * obj -&gt; seq&lt;'T&gt;" Usage="Microsoft.Extensions.DependencyInjection.ServiceProviderKeyedServiceExtensions.GetKeyedServices (provider, serviceKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetKeyedServices(IServiceProvider ^ provider, System::Object ^ serviceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" RefType="this" />
        <Parameter Name="serviceKey" Type="System.Object">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of service object to get.</typeparam>
        <param name="provider">The <see cref="T:System.IServiceProvider" /> to retrieve the services from.</param>
        <param name="serviceKey">An object that specifies the key of service object to get.</param>
        <summary>
            Get an enumeration of services of type <typeparamref name="T" /> from the <see cref="T:System.IServiceProvider" />.
            </summary>
        <returns>An enumeration of services of type <typeparamref name="T" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredKeyedService">
      <MemberSignature Language="C#" Value="public static object GetRequiredKeyedService (this IServiceProvider provider, Type serviceType, object? serviceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetRequiredKeyedService(class System.IServiceProvider provider, class System.Type serviceType, object serviceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceProviderKeyedServiceExtensions.GetRequiredKeyedService(System.IServiceProvider,System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRequiredKeyedService (provider As IServiceProvider, serviceType As Type, serviceKey As Object) As Object" />
      <MemberSignature Language="F#" Value="static member GetRequiredKeyedService : IServiceProvider * Type * obj -&gt; obj" Usage="Microsoft.Extensions.DependencyInjection.ServiceProviderKeyedServiceExtensions.GetRequiredKeyedService (provider, serviceType, serviceKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Object ^ GetRequiredKeyedService(IServiceProvider ^ provider, Type ^ serviceType, System::Object ^ serviceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" RefType="this" />
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="serviceKey" Type="System.Object">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="provider">The <see cref="T:System.IServiceProvider" /> to retrieve the service object from.</param>
        <param name="serviceType">An object that specifies the type of service object to get.</param>
        <param name="serviceKey">An object that specifies the key of service object to get.</param>
        <summary>
            Get service of type <paramref name="serviceType" /> from the <see cref="T:System.IServiceProvider" />.
            </summary>
        <returns>A service object of type <paramref name="serviceType" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">There is no service of type <paramref name="serviceType" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredKeyedService&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetRequiredKeyedService&lt;T&gt; (this IServiceProvider provider, object? serviceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetRequiredKeyedService&lt;T&gt;(class System.IServiceProvider provider, object serviceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceProviderKeyedServiceExtensions.GetRequiredKeyedService``1(System.IServiceProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRequiredKeyedService(Of T) (provider As IServiceProvider, serviceKey As Object) As T" />
      <MemberSignature Language="F#" Value="static member GetRequiredKeyedService : IServiceProvider * obj -&gt; 'T" Usage="Microsoft.Extensions.DependencyInjection.ServiceProviderKeyedServiceExtensions.GetRequiredKeyedService (provider, serviceKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T GetRequiredKeyedService(IServiceProvider ^ provider, System::Object ^ serviceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" RefType="this" />
        <Parameter Name="serviceKey" Type="System.Object">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of service object to get.</typeparam>
        <param name="provider">The <see cref="T:System.IServiceProvider" /> to retrieve the service object from.</param>
        <param name="serviceKey">An object that specifies the key of service object to get.</param>
        <summary>
            Get service of type <typeparamref name="T" /> from the <see cref="T:System.IServiceProvider" />.
            </summary>
        <returns>A service object of type <typeparamref name="T" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">There is no service of type <typeparamref name="T" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

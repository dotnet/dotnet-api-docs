<Type Name="HttpClientFactoryServiceCollectionExtensions" FullName="Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class HttpClientFactoryServiceCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HttpClientFactoryServiceCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module HttpClientFactoryServiceCollectionExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpClientFactoryServiceCollectionExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type HttpClientFactoryServiceCollectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Extensions methods to configure an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> for <see cref="T:System.Net.Http.IHttpClientFactory" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddHttpClient">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddHttpClient (this Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddHttpClient(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpClient (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddHttpClient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberSignature Language="F#" Value="static member AddHttpClient : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <summary>Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpClient">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpClient (services As IServiceCollection, name As String) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpClient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member AddHttpClient : Microsoft.Extensions.DependencyInjection.IServiceCollection * string -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient (services, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="name">The logical name of the <see cref="T:System.Net.Http.HttpClient" /> to configure.</param>
        <summary>Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
        <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
        <remarks>
          <para>
            <see cref="T:System.Net.Http.HttpClient" /> instances that apply the provided configuration can be retrieved using 
            <see cref="M:System.Net.Http.IHttpClientFactory.CreateClient(System.String)" /> and providing the matching name.
            </para>
          <para>
            Use <see cref="F:Microsoft.Extensions.Options.Options.DefaultName" /> as the name to configure the default client.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpClient">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, Action&lt;IServiceProvider,System.Net.Http.HttpClient&gt; configureClient);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, class System.Action`2&lt;class System.IServiceProvider, class System.Net.Http.HttpClient&gt; configureClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{System.IServiceProvider,System.Net.Http.HttpClient})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpClient (services As IServiceCollection, name As String, configureClient As Action(Of IServiceProvider, HttpClient)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpClient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::String ^ name, Action&lt;IServiceProvider ^, System::Net::Http::HttpClient ^&gt; ^ configureClient);" />
      <MemberSignature Language="F#" Value="static member AddHttpClient : Microsoft.Extensions.DependencyInjection.IServiceCollection * string * Action&lt;IServiceProvider, System.Net.Http.HttpClient&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient (services, name, configureClient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="configureClient" Type="System.Action&lt;System.IServiceProvider,System.Net.Http.HttpClient&gt;" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="name">The logical name of the <see cref="T:System.Net.Http.HttpClient" /> to configure.</param>
        <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
        <summary>Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
        <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
        <remarks>
          <para>
            <see cref="T:System.Net.Http.HttpClient" /> instances that apply the provided configuration can be retrieved using 
            <see cref="M:System.Net.Http.IHttpClientFactory.CreateClient(System.String)" /> and providing the matching name.
            </para>
          <para>
            Use <see cref="F:Microsoft.Extensions.Options.Options.DefaultName" /> as the name to configure the default client.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpClient">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, Action&lt;System.Net.Http.HttpClient&gt; configureClient);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, class System.Action`1&lt;class System.Net.Http.HttpClient&gt; configureClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{System.Net.Http.HttpClient})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpClient (services As IServiceCollection, name As String, configureClient As Action(Of HttpClient)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpClient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::String ^ name, Action&lt;System::Net::Http::HttpClient ^&gt; ^ configureClient);" />
      <MemberSignature Language="F#" Value="static member AddHttpClient : Microsoft.Extensions.DependencyInjection.IServiceCollection * string * Action&lt;System.Net.Http.HttpClient&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient (services, name, configureClient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="configureClient" Type="System.Action&lt;System.Net.Http.HttpClient&gt;" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="name">The logical name of the <see cref="T:System.Net.Http.HttpClient" /> to configure.</param>
        <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
        <summary>Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
        <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
        <remarks>
          <para>
            <see cref="T:System.Net.Http.HttpClient" /> instances that apply the provided configuration can be retrieved using 
            <see cref="M:System.Net.Http.IHttpClientFactory.CreateClient(System.String)" /> and providing the matching name.
            </para>
          <para>
            Use <see cref="F:Microsoft.Extensions.Options.Options.DefaultName" /> as the name to configure the default client.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpClient&lt;TClient&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;TClient&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services) where TClient : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;class TClient&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpClient(Of TClient As Class) (services As IServiceCollection) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TClient&gt;&#xA; where TClient : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpClient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberSignature Language="F#" Value="static member AddHttpClient : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Client : null)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TClient">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TClient">
            The type of the typed client. They type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.
            </typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <summary>Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />. The client name
            will be set to the full name of <typeparamref name="TClient" />.</summary>
        <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
        <remarks>
          <para>
            <see cref="T:System.Net.Http.HttpClient" /> instances that apply the provided configuration can be retrieved using 
            <see cref="M:System.Net.Http.IHttpClientFactory.CreateClient(System.String)" /> and providing the matching name.
            </para>
          <para>
            <typeparamref name="TClient" /> instances constructed with the appropriate <see cref="T:System.Net.Http.HttpClient" />
            can be retrieved from <see cref="M:System.IServiceProvider.GetService(System.Type)" /> (and related methods) by providing
            <typeparamref name="TClient" /> as the service type. 
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpClient&lt;TClient&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;TClient&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;IServiceProvider,System.Net.Http.HttpClient&gt; configureClient) where TClient : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;class TClient&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`2&lt;class System.IServiceProvider, class System.Net.Http.HttpClient&gt; configureClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{System.IServiceProvider,System.Net.Http.HttpClient})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpClient(Of TClient As Class) (services As IServiceCollection, configureClient As Action(Of IServiceProvider, HttpClient)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TClient&gt;&#xA; where TClient : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpClient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Action&lt;IServiceProvider ^, System::Net::Http::HttpClient ^&gt; ^ configureClient);" />
      <MemberSignature Language="F#" Value="static member AddHttpClient : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;IServiceProvider, System.Net.Http.HttpClient&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Client : null)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient (services, configureClient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TClient">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="configureClient" Type="System.Action&lt;System.IServiceProvider,System.Net.Http.HttpClient&gt;" Index="1" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="TClient">
            The type of the typed client. They type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.
            </typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
        <summary>Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />. The client name will
            be set to the type name of <typeparamref name="TClient" />.</summary>
        <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
        <remarks>
          <para>
            <see cref="T:System.Net.Http.HttpClient" /> instances that apply the provided configuration can be retrieved using 
            <see cref="M:System.Net.Http.IHttpClientFactory.CreateClient(System.String)" /> and providing the matching name.
            </para>
          <para>
            <typeparamref name="TClient" /> instances constructed with the appropriate <see cref="T:System.Net.Http.HttpClient" />
            can be retrieved from <see cref="M:System.IServiceProvider.GetService(System.Type)" /> (and related methods) by providing
            <typeparamref name="TClient" /> as the service type. 
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpClient&lt;TClient&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;TClient&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;System.Net.Http.HttpClient&gt; configureClient) where TClient : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;class TClient&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;class System.Net.Http.HttpClient&gt; configureClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{System.Net.Http.HttpClient})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpClient(Of TClient As Class) (services As IServiceCollection, configureClient As Action(Of HttpClient)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TClient&gt;&#xA; where TClient : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpClient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Action&lt;System::Net::Http::HttpClient ^&gt; ^ configureClient);" />
      <MemberSignature Language="F#" Value="static member AddHttpClient : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;System.Net.Http.HttpClient&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Client : null)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient (services, configureClient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TClient">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configureClient" Type="System.Action&lt;System.Net.Http.HttpClient&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TClient">
            The type of the typed client. They type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.
            </typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
        <summary>Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />. The client name will
            be set to the type name of <typeparamref name="TClient" />.</summary>
        <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
        <remarks>
          <para>
            <see cref="T:System.Net.Http.HttpClient" /> instances that apply the provided configuration can be retrieved using 
            <see cref="M:System.Net.Http.IHttpClientFactory.CreateClient(System.String)" /> and providing the matching name.
            </para>
          <para>
            <typeparamref name="TClient" /> instances constructed with the appropriate <see cref="T:System.Net.Http.HttpClient" />
            can be retrieved from <see cref="M:System.IServiceProvider.GetService(System.Type)" /> (and related methods) by providing
            <typeparamref name="TClient" /> as the service type. 
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpClient&lt;TClient&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;TClient&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name) where TClient : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;class TClient&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpClient(Of TClient As Class) (services As IServiceCollection, name As String) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TClient&gt;&#xA; where TClient : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpClient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member AddHttpClient : Microsoft.Extensions.DependencyInjection.IServiceCollection * string -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Client : null)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient (services, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TClient">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TClient">
            The type of the typed client. They type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.
            </typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="name">The logical name of the <see cref="T:System.Net.Http.HttpClient" /> to configure.</param>
        <summary>Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
        <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
        <remarks>
          <para>
            <see cref="T:System.Net.Http.HttpClient" /> instances that apply the provided configuration can be retrieved using 
            <see cref="M:System.Net.Http.IHttpClientFactory.CreateClient(System.String)" /> and providing the matching name.
            </para>
          <para>
            <typeparamref name="TClient" /> instances constructed with the appropriate <see cref="T:System.Net.Http.HttpClient" />
            can be retrieved from <see cref="M:System.IServiceProvider.GetService(System.Type)" /> (and related methods) by providing
            <typeparamref name="TClient" /> as the service type. 
            </para>
          <para>
            Use <see cref="F:Microsoft.Extensions.Options.Options.DefaultName" /> as the name to configure the default client.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpClient&lt;TClient&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;TClient&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, Action&lt;IServiceProvider,System.Net.Http.HttpClient&gt; configureClient) where TClient : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;class TClient&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, class System.Action`2&lt;class System.IServiceProvider, class System.Net.Http.HttpClient&gt; configureClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{System.IServiceProvider,System.Net.Http.HttpClient})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpClient(Of TClient As Class) (services As IServiceCollection, name As String, configureClient As Action(Of IServiceProvider, HttpClient)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TClient&gt;&#xA; where TClient : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpClient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::String ^ name, Action&lt;IServiceProvider ^, System::Net::Http::HttpClient ^&gt; ^ configureClient);" />
      <MemberSignature Language="F#" Value="static member AddHttpClient : Microsoft.Extensions.DependencyInjection.IServiceCollection * string * Action&lt;IServiceProvider, System.Net.Http.HttpClient&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Client : null)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient (services, name, configureClient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TClient">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="configureClient" Type="System.Action&lt;System.IServiceProvider,System.Net.Http.HttpClient&gt;" Index="2" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="TClient">
            The type of the typed client. They type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.
            </typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="name">The logical name of the <see cref="T:System.Net.Http.HttpClient" /> to configure.</param>
        <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
        <summary>Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
        <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
        <remarks>
          <para>
            <see cref="T:System.Net.Http.HttpClient" /> instances that apply the provided configuration can be retrieved using 
            <see cref="M:System.Net.Http.IHttpClientFactory.CreateClient(System.String)" /> and providing the matching name.
            </para>
          <para>
            <typeparamref name="TClient" /> instances constructed with the appropriate <see cref="T:System.Net.Http.HttpClient" />
            can be retrieved from <see cref="M:System.IServiceProvider.GetService(System.Type)" /> (and related methods) by providing
            <typeparamref name="TClient" /> as the service type. 
            </para>
          <para>
            Use <see cref="F:Microsoft.Extensions.Options.Options.DefaultName" /> as the name to configure the default client.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpClient&lt;TClient&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;TClient&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, Action&lt;System.Net.Http.HttpClient&gt; configureClient) where TClient : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;class TClient&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, class System.Action`1&lt;class System.Net.Http.HttpClient&gt; configureClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{System.Net.Http.HttpClient})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpClient(Of TClient As Class) (services As IServiceCollection, name As String, configureClient As Action(Of HttpClient)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TClient&gt;&#xA; where TClient : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpClient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::String ^ name, Action&lt;System::Net::Http::HttpClient ^&gt; ^ configureClient);" />
      <MemberSignature Language="F#" Value="static member AddHttpClient : Microsoft.Extensions.DependencyInjection.IServiceCollection * string * Action&lt;System.Net.Http.HttpClient&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Client : null)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient (services, name, configureClient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TClient">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="configureClient" Type="System.Action&lt;System.Net.Http.HttpClient&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TClient">
            The type of the typed client. They type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.
            </typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="name">The logical name of the <see cref="T:System.Net.Http.HttpClient" /> to configure.</param>
        <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
        <summary>Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
        <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
        <remarks>
          <para>
            <see cref="T:System.Net.Http.HttpClient" /> instances that apply the provided configuration can be retrieved using 
            <see cref="M:System.Net.Http.IHttpClientFactory.CreateClient(System.String)" /> and providing the matching name.
            </para>
          <para>
            <typeparamref name="TClient" /> instances constructed with the appropriate <see cref="T:System.Net.Http.HttpClient" />
            can be retrieved from <see cref="M:System.IServiceProvider.GetService(System.Type)" /> (and related methods) by providing
            <typeparamref name="TClient" /> as the service type. 
            </para>
          <para>
            Use <see cref="F:Microsoft.Extensions.Options.Options.DefaultName" /> as the name to configure the default client.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpClient&lt;TClient,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;TClient,TImplementation&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services) where TClient : class where TImplementation : class, TClient;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;class TClient, class (!!TClient) TImplementation&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpClient(Of TClient As Class, TImplementation As Class) (services As IServiceCollection) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TClient, typename TImplementation&gt;&#xA; where TClient : class where TImplementation : class, TClient[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpClient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberSignature Language="F#" Value="static member AddHttpClient : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Client : null)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TClient">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TClient</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TClient">
            The type of the typed client. They type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.
            </typeparam>
        <typeparam name="TImplementation">
            The implementation type of the typed client. They type specified will be instantiated by the
            <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /></typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <summary>Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />. The client name will
            be set to the type name of <typeparamref name="TClient" />.</summary>
        <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
        <remarks>
          <para>
            <see cref="T:System.Net.Http.HttpClient" /> instances that apply the provided configuration can be retrieved using 
            <see cref="M:System.Net.Http.IHttpClientFactory.CreateClient(System.String)" /> and providing the matching name.
            </para>
          <para>
            <typeparamref name="TClient" /> instances constructed with the appropriate <see cref="T:System.Net.Http.HttpClient" />
            can be retrieved from <see cref="M:System.IServiceProvider.GetService(System.Type)" /> (and related methods) by providing
            <typeparamref name="TClient" /> as the service type. 
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpClient&lt;TClient,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;TClient,TImplementation&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;IServiceProvider,System.Net.Http.HttpClient&gt; configureClient) where TClient : class where TImplementation : class, TClient;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;class TClient, class (!!TClient) TImplementation&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`2&lt;class System.IServiceProvider, class System.Net.Http.HttpClient&gt; configureClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{System.IServiceProvider,System.Net.Http.HttpClient})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpClient(Of TClient As Class, TImplementation As Class) (services As IServiceCollection, configureClient As Action(Of IServiceProvider, HttpClient)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TClient, typename TImplementation&gt;&#xA; where TClient : class where TImplementation : class, TClient[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpClient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Action&lt;IServiceProvider ^, System::Net::Http::HttpClient ^&gt; ^ configureClient);" />
      <MemberSignature Language="F#" Value="static member AddHttpClient : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;IServiceProvider, System.Net.Http.HttpClient&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Client : null)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient (services, configureClient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TClient">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TClient</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="configureClient" Type="System.Action&lt;System.IServiceProvider,System.Net.Http.HttpClient&gt;" Index="1" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="TClient">
            The type of the typed client. They type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.
            </typeparam>
        <typeparam name="TImplementation">
            The implementation type of the typed client. They type specified will be instantiated by the
            <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /></typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
        <summary>Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />. The client name will
            be set to the type name of <typeparamref name="TClient" />.</summary>
        <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
        <remarks>
          <para>
            <see cref="T:System.Net.Http.HttpClient" /> instances that apply the provided configuration can be retrieved using 
            <see cref="M:System.Net.Http.IHttpClientFactory.CreateClient(System.String)" /> and providing the matching name.
            </para>
          <para>
            <typeparamref name="TClient" /> instances constructed with the appropriate <see cref="T:System.Net.Http.HttpClient" />
            can be retrieved from <see cref="M:System.IServiceProvider.GetService(System.Type)" /> (and related methods) by providing
            <typeparamref name="TClient" /> as the service type. 
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpClient&lt;TClient,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;TClient,TImplementation&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;System.Net.Http.HttpClient&gt; configureClient) where TClient : class where TImplementation : class, TClient;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;class TClient, class (!!TClient) TImplementation&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;class System.Net.Http.HttpClient&gt; configureClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{System.Net.Http.HttpClient})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpClient(Of TClient As Class, TImplementation As Class) (services As IServiceCollection, configureClient As Action(Of HttpClient)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TClient, typename TImplementation&gt;&#xA; where TClient : class where TImplementation : class, TClient[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpClient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Action&lt;System::Net::Http::HttpClient ^&gt; ^ configureClient);" />
      <MemberSignature Language="F#" Value="static member AddHttpClient : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;System.Net.Http.HttpClient&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Client : null)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient (services, configureClient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TClient">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TClient</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configureClient" Type="System.Action&lt;System.Net.Http.HttpClient&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TClient">
            The type of the typed client. They type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.
            </typeparam>
        <typeparam name="TImplementation">
            The implementation type of the typed client. They type specified will be instantiated by the
            <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /></typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
        <summary>Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />. The client name will
            be set to the type name of <typeparamref name="TClient" />.</summary>
        <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
        <remarks>
          <para>
            <see cref="T:System.Net.Http.HttpClient" /> instances that apply the provided configuration can be retrieved using 
            <see cref="M:System.Net.Http.IHttpClientFactory.CreateClient(System.String)" /> and providing the matching name.
            </para>
          <para>
            <typeparamref name="TClient" /> instances constructed with the appropriate <see cref="T:System.Net.Http.HttpClient" />
            can be retrieved from <see cref="M:System.IServiceProvider.GetService(System.Type)" /> (and related methods) by providing
            <typeparamref name="TClient" /> as the service type. 
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpClient&lt;TClient,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;TClient,TImplementation&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name) where TClient : class where TImplementation : class, TClient;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;class TClient, class (!!TClient) TImplementation&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpClient(Of TClient As Class, TImplementation As Class) (services As IServiceCollection, name As String) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TClient, typename TImplementation&gt;&#xA; where TClient : class where TImplementation : class, TClient[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpClient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member AddHttpClient : Microsoft.Extensions.DependencyInjection.IServiceCollection * string -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Client : null)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient (services, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TClient">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TClient</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TClient">
            The type of the typed client. They type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.
            </typeparam>
        <typeparam name="TImplementation">
            The implementation type of the typed client. They type specified will be instantiated by the
            <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /></typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="name">The logical name of the <see cref="T:System.Net.Http.HttpClient" /> to configure.</param>
        <summary>Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />. The client name will
            be set to the type name of <typeparamref name="TClient" />.</summary>
        <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
        <remarks>
          <para>
            <see cref="T:System.Net.Http.HttpClient" /> instances that apply the provided configuration can be retrieved using 
            <see cref="M:System.Net.Http.IHttpClientFactory.CreateClient(System.String)" /> and providing the matching name.
            </para>
          <para>
            <typeparamref name="TClient" /> instances constructed with the appropriate <see cref="T:System.Net.Http.HttpClient" />
            can be retrieved from <see cref="M:System.IServiceProvider.GetService(System.Type)" /> (and related methods) by providing
            <typeparamref name="TClient" /> as the service type. 
            </para>
          <para>
            Use <see cref="F:Microsoft.Extensions.Options.Options.DefaultName" /> as the name to configure the default client.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpClient&lt;TClient,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;TClient,TImplementation&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, Action&lt;IServiceProvider,System.Net.Http.HttpClient&gt; configureClient) where TClient : class where TImplementation : class, TClient;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;class TClient, class (!!TClient) TImplementation&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, class System.Action`2&lt;class System.IServiceProvider, class System.Net.Http.HttpClient&gt; configureClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{System.IServiceProvider,System.Net.Http.HttpClient})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpClient(Of TClient As Class, TImplementation As Class) (services As IServiceCollection, name As String, configureClient As Action(Of IServiceProvider, HttpClient)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TClient, typename TImplementation&gt;&#xA; where TClient : class where TImplementation : class, TClient[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpClient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::String ^ name, Action&lt;IServiceProvider ^, System::Net::Http::HttpClient ^&gt; ^ configureClient);" />
      <MemberSignature Language="F#" Value="static member AddHttpClient : Microsoft.Extensions.DependencyInjection.IServiceCollection * string * Action&lt;IServiceProvider, System.Net.Http.HttpClient&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Client : null)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient (services, name, configureClient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TClient">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TClient</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="configureClient" Type="System.Action&lt;System.IServiceProvider,System.Net.Http.HttpClient&gt;" Index="2" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="TClient">
            The type of the typed client. They type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.
            </typeparam>
        <typeparam name="TImplementation">
            The implementation type of the typed client. They type specified will be instantiated by the
            <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /></typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="name">The logical name of the <see cref="T:System.Net.Http.HttpClient" /> to configure.</param>
        <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
        <summary>Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
        <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
        <remarks>
          <para>
            <see cref="T:System.Net.Http.HttpClient" /> instances that apply the provided configuration can be retrieved using 
            <see cref="M:System.Net.Http.IHttpClientFactory.CreateClient(System.String)" /> and providing the matching name.
            </para>
          <para>
            <typeparamref name="TClient" /> instances constructed with the appropriate <see cref="T:System.Net.Http.HttpClient" />
            can be retrieved from <see cref="M:System.IServiceProvider.GetService(System.Type)" /> (and related methods) by providing
            <typeparamref name="TClient" /> as the service type. 
            </para>
          <para>
            Use <see cref="F:Microsoft.Extensions.Options.Options.DefaultName" /> as the name to configure the default client.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpClient&lt;TClient,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;TClient,TImplementation&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, Action&lt;System.Net.Http.HttpClient&gt; configureClient) where TClient : class where TImplementation : class, TClient;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpClient&lt;class TClient, class (!!TClient) TImplementation&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, class System.Action`1&lt;class System.Net.Http.HttpClient&gt; configureClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{System.Net.Http.HttpClient})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpClient(Of TClient As Class, TImplementation As Class) (services As IServiceCollection, name As String, configureClient As Action(Of HttpClient)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TClient, typename TImplementation&gt;&#xA; where TClient : class where TImplementation : class, TClient[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpClient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::String ^ name, Action&lt;System::Net::Http::HttpClient ^&gt; ^ configureClient);" />
      <MemberSignature Language="F#" Value="static member AddHttpClient : Microsoft.Extensions.DependencyInjection.IServiceCollection * string * Action&lt;System.Net.Http.HttpClient&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Client : null)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient (services, name, configureClient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TClient">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TClient</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="configureClient" Type="System.Action&lt;System.Net.Http.HttpClient&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TClient">
            The type of the typed client. They type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.
            </typeparam>
        <typeparam name="TImplementation">
            The implementation type of the typed client. They type specified will be instantiated by the
            <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /></typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="name">The logical name of the <see cref="T:System.Net.Http.HttpClient" /> to configure.</param>
        <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
        <summary>Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
        <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
        <remarks>
          <para>
            <see cref="T:System.Net.Http.HttpClient" /> instances that apply the provided configuration can be retrieved using 
            <see cref="M:System.Net.Http.IHttpClientFactory.CreateClient(System.String)" /> and providing the matching name.
            </para>
          <para>
            <typeparamref name="TClient" /> instances constructed with the appropriate <see cref="T:System.Net.Http.HttpClient" />
            can be retrieved from <see cref="M:System.IServiceProvider.GetService(System.Type)" /> (and related methods) by providing
            <typeparamref name="TClient" /> as the service type. 
            </para>
          <para>
            Use <see cref="F:Microsoft.Extensions.Options.Options.DefaultName" /> as the name to configure the default client.
            </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

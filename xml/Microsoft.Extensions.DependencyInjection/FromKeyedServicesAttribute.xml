<Type Name="FromKeyedServicesAttribute" FullName="Microsoft.Extensions.DependencyInjection.FromKeyedServicesAttribute">
  <TypeSignature Language="C#" Value="public class FromKeyedServicesAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FromKeyedServicesAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.FromKeyedServicesAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class FromKeyedServicesAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="F#" Value="type FromKeyedServicesAttribute = class&#xA;    inherit Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class FromKeyedServicesAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Parameter)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Parameter)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Indicates that the parameter should be bound using the keyed service registered with the specified key.
            </summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:Microsoft.Extensions.DependencyInjection.ServiceKeyAttribute" />
    <altmember cref="T:Microsoft.Extensions.DependencyInjection.ServiceKeyLookupMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FromKeyedServicesAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.FromKeyedServicesAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FromKeyedServicesAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new <see cref="T:Microsoft.Extensions.DependencyInjection.FromKeyedServicesAttribute" /> instance with <see cref="P:Microsoft.Extensions.DependencyInjection.FromKeyedServicesAttribute.LookupMode" /> set to <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceKeyLookupMode.InheritKey" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FromKeyedServicesAttribute (object? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.FromKeyedServicesAttribute.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Object)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.DependencyInjection.FromKeyedServicesAttribute : obj -&gt; Microsoft.Extensions.DependencyInjection.FromKeyedServicesAttribute" Usage="new Microsoft.Extensions.DependencyInjection.FromKeyedServicesAttribute key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FromKeyedServicesAttribute(System::Object ^ key);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">The key of the keyed service to bind to.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.Extensions.DependencyInjection.FromKeyedServicesAttribute" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public object? Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Key" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.DependencyInjection.FromKeyedServicesAttribute.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As Object" />
      <MemberSignature Language="F#" Value="member this.Key : obj" Usage="Microsoft.Extensions.DependencyInjection.FromKeyedServicesAttribute.Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Key { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The key of the keyed service to bind to.
            </summary>
        <value>To be added.</value>
        <remarks>A <see langword="null" /> value with indicates there is not a key and just the parameter type is used to resolve the service.
            This is useful for DI implementations that require an explict way to declare that the parameter should be resolved for unkeyed services.
            A <see langword="null" /> value is also used along with <see cref="P:Microsoft.Extensions.DependencyInjection.FromKeyedServicesAttribute.LookupMode" /> set to <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceKeyLookupMode.InheritKey" /> to indicate that the key should be inherited from the parent scope.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMode">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.DependencyInjection.ServiceKeyLookupMode LookupMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.DependencyInjection.ServiceKeyLookupMode LookupMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.DependencyInjection.FromKeyedServicesAttribute.LookupMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LookupMode As ServiceKeyLookupMode" />
      <MemberSignature Language="F#" Value="member this.LookupMode : Microsoft.Extensions.DependencyInjection.ServiceKeyLookupMode" Usage="Microsoft.Extensions.DependencyInjection.FromKeyedServicesAttribute.LookupMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::DependencyInjection::ServiceKeyLookupMode LookupMode { Microsoft::Extensions::DependencyInjection::ServiceKeyLookupMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceKeyLookupMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the mode used to look up the service key.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

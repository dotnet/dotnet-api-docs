<Type Name="IServiceProviderFactory&lt;TContainerBuilder&gt;" FullName="Microsoft.Extensions.DependencyInjection.IServiceProviderFactory&lt;TContainerBuilder&gt;">
  <TypeSignature Language="C#" Value="public interface IServiceProviderFactory&lt;TContainerBuilder&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IServiceProviderFactory`1&lt;TContainerBuilder&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IServiceProviderFactory(Of TContainerBuilder)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TContainerBuilder&gt;&#xA;public interface class IServiceProviderFactory" />
  <TypeSignature Language="F#" Value="type IServiceProviderFactory&lt;'ContainerBuilder&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TContainerBuilder" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TContainerBuilder">To be added.</typeparam>
    <summary>Provides an extension point for creating a container specific builder and an <see cref="T:System.IServiceProvider" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateBuilder">
      <MemberSignature Language="C#" Value="public TContainerBuilder CreateBuilder (Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TContainerBuilder CreateBuilder(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder (services As IServiceCollection) As TContainerBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TContainerBuilder CreateBuilder(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberSignature Language="F#" Value="abstract member CreateBuilder : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; 'ContainerBuilder" Usage="iServiceProviderFactory.CreateBuilder services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TContainerBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
      </Parameters>
      <Docs>
        <param name="services">The collection of services</param>
        <summary>Creates a container builder from an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</summary>
        <returns>A container builder that can be used to create an <see cref="T:System.IServiceProvider" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider CreateServiceProvider (TContainerBuilder containerBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IServiceProvider CreateServiceProvider(!TContainerBuilder containerBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateServiceProvider(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateServiceProvider (containerBuilder As TContainerBuilder) As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IServiceProvider ^ CreateServiceProvider(TContainerBuilder containerBuilder);" />
      <MemberSignature Language="F#" Value="abstract member CreateServiceProvider : 'ContainerBuilder -&gt; IServiceProvider" Usage="iServiceProviderFactory.CreateServiceProvider containerBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containerBuilder" Type="TContainerBuilder" />
      </Parameters>
      <Docs>
        <param name="containerBuilder">The container builder</param>
        <summary>Creates an <see cref="T:System.IServiceProvider" /> from the container builder.</summary>
        <returns>An <see cref="T:System.IServiceProvider" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="IKeyedServiceProvider" FullName="Microsoft.Extensions.DependencyInjection.IKeyedServiceProvider">
  <TypeSignature Language="C#" Value="public interface IKeyedServiceProvider : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IKeyedServiceProvider implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.IKeyedServiceProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IKeyedServiceProvider&#xA;Implements IServiceProvider" />
  <TypeSignature Language="F#" Value="type IKeyedServiceProvider = interface&#xA;    interface IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IKeyedServiceProvider : IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Retrieves services using a key and a type.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetKeyedService">
      <MemberSignature Language="C#" Value="public object? GetKeyedService (Type serviceType, object? serviceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetKeyedService(class System.Type serviceType, object serviceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.IKeyedServiceProvider.GetKeyedService(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetKeyedService (serviceType As Type, serviceKey As Object) As Object" />
      <MemberSignature Language="F#" Value="abstract member GetKeyedService : Type * obj -&gt; obj" Usage="iKeyedServiceProvider.GetKeyedService (serviceType, serviceKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetKeyedService(Type ^ serviceType, System::Object ^ serviceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="serviceKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serviceType">An object that specifies the type of service object to get.</param>
        <param name="serviceKey">An object that specifies the key of service object to get.</param>
        <summary>
            Gets the service object of the specified type.
            </summary>
        <returns>
          <para>A service object of type <paramref name="serviceType" />.</para>
          <para>-or-</para>
          <para>
            <see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredKeyedService">
      <MemberSignature Language="C#" Value="public object GetRequiredKeyedService (Type serviceType, object? serviceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetRequiredKeyedService(class System.Type serviceType, object serviceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.IKeyedServiceProvider.GetRequiredKeyedService(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequiredKeyedService (serviceType As Type, serviceKey As Object) As Object" />
      <MemberSignature Language="F#" Value="abstract member GetRequiredKeyedService : Type * obj -&gt; obj" Usage="iKeyedServiceProvider.GetRequiredKeyedService (serviceType, serviceKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetRequiredKeyedService(Type ^ serviceType, System::Object ^ serviceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="serviceKey" Type="System.Object">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="serviceType">An object that specifies the type of service object to get.</param>
        <param name="serviceKey">The <see cref="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ServiceKey" /> of the service.</param>
        <summary>
            Gets service of type <paramref name="serviceType" /> from the <see cref="T:System.IServiceProvider" /> implementing
            this interface.
            </summary>
        <returns>A service object of type <paramref name="serviceType" />.
            Throws an exception if the <see cref="T:System.IServiceProvider" /> cannot create the object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

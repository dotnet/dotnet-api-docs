<Type Name="INamedServiceProvider&lt;TService&gt;" FullName="Microsoft.Extensions.DependencyInjection.INamedServiceProvider&lt;TService&gt;">
  <TypeSignature Language="C#" Value="public interface INamedServiceProvider&lt;out TService&gt; where TService : class" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INamedServiceProvider`1&lt;class + TService&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.INamedServiceProvider`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface INamedServiceProvider(Of Out TService)" />
  <TypeSignature Language="F#" Value="type INamedServiceProvider&lt;'Service (requires 'Service : null)&gt; = interface" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TService&gt;&#xA; where TService : classpublic interface class INamedServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DependencyInjection.NamedService</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TService">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TService">The type of the service objects to retrieve.</typeparam>
    <summary>
            Provides a mechanism for retrieving named service objects of the specified type.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public TService? GetService (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TService GetService(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.INamedServiceProvider`1.GetService(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (name As String) As TService" />
      <MemberSignature Language="F#" Value="abstract member GetService : string -&gt; 'Service" Usage="iNamedServiceProvider.GetService name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.NamedService</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TService</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-10.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the service object.</param>
        <summary>
            Gets the service object with the specified name.
            </summary>
        <returns>The object.</returns>
        <remarks>
            This method returns the latest <typeparamref name="TService" /> registered under the name.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServices">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;out TService&gt; GetServices (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;!TService&gt; GetServices(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.INamedServiceProvider`1.GetServices(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetServices (name As String) As IEnumerable(Of Out TService)" />
      <MemberSignature Language="F#" Value="abstract member GetServices : string -&gt; seq&lt;'Service (requires 'Service : null)&gt;" Usage="iNamedServiceProvider.GetServices name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;TService&gt; ^ GetServices(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.NamedService</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TService&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the service objects.</param>
        <summary>
            Gets all the service objects with the specified name.
            </summary>
        <returns>The collection of objects.</returns>
        <remarks>
            This method returns all <typeparamref name="TService" /> registered under the name in the order they were registered.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

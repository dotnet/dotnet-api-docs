<Type Name="XmlConfigurationProvider" FullName="Microsoft.Extensions.Configuration.Xml.XmlConfigurationProvider">
  <TypeSignature Language="C#" Value="public class XmlConfigurationProvider : Microsoft.Extensions.Configuration.FileConfigurationProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlConfigurationProvider extends Microsoft.Extensions.Configuration.FileConfigurationProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Configuration.Xml.XmlConfigurationProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlConfigurationProvider&#xA;Inherits FileConfigurationProvider" />
  <TypeSignature Language="F#" Value="type XmlConfigurationProvider = class&#xA;    inherit FileConfigurationProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlConfigurationProvider : Microsoft::Extensions::Configuration::FileConfigurationProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Configuration.Xml</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Extensions.Configuration.FileConfigurationProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-6.0;net-7.0;net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Microsoft.Extensions.Configuration.Xml can use EncryptedXml. If you use encrypted XML files, your application might not have the algorithm implementations it needs. To avoid this problem, one option you can use is a DynamicDependency attribute to keep the algorithm implementations in your application.")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Microsoft.Extensions.Configuration.Xml can use EncryptedXml. If you use encrypted XML files, your application might not have the algorithm implementations it needs. To avoid this problem, one option you can use is a DynamicDependency attribute to keep the algorithm implementations in your application.")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-7.0;net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresDynamicCode("Microsoft.Extensions.Configuration.Xml can use EncryptedXml which may contain XSLTs in the xml. XSLTs require dynamic code.")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresDynamicCode("Microsoft.Extensions.Configuration.Xml can use EncryptedXml which may contain XSLTs in the xml. XSLTs require dynamic code.")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Provides configuration key-value pairs that are obtained from an XML file.
            </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

For more information and examples, see [XML configuration provider](/dotnet/core/extensions/configuration-providers#xml-configuration-provider).

   ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlConfigurationProvider (Microsoft.Extensions.Configuration.Xml.XmlConfigurationSource source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Configuration.Xml.XmlConfigurationSource source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.Xml.XmlConfigurationProvider.#ctor(Microsoft.Extensions.Configuration.Xml.XmlConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As XmlConfigurationSource)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Configuration.Xml.XmlConfigurationProvider : Microsoft.Extensions.Configuration.Xml.XmlConfigurationSource -&gt; Microsoft.Extensions.Configuration.Xml.XmlConfigurationProvider" Usage="new Microsoft.Extensions.Configuration.Xml.XmlConfigurationProvider source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlConfigurationProvider(Microsoft::Extensions::Configuration::Xml::XmlConfigurationSource ^ source);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration.Xml</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Extensions.Configuration.Xml.XmlConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="source">The source settings.</param>
        <summary>
            Initializes a new instance with the specified source.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.Xml.XmlConfigurationProvider.Load(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (stream As Stream)" />
      <MemberSignature Language="F#" Value="override this.Load : System.IO.Stream -&gt; unit" Usage="xmlConfigurationProvider.Load stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration.Xml</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">The stream to read.</param>
        <summary>
            Loads the XML data from a stream.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

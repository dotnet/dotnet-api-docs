<Type Name="IRelatedEnd" FullName="System.Data.Objects.DataClasses.IRelatedEnd">
  <TypeSignature Language="C#" Value="public interface IRelatedEnd" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRelatedEnd" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.IRelatedEnd" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRelatedEnd" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRelatedEnd" />
  <TypeSignature Language="F#" Value="type IRelatedEnd = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Defines the end of a relationship.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.IRelatedEnd> defines the requirements for an object that represents an end in an association. This interface is implemented by the <xref:System.Data.Objects.DataClasses.RelatedEnd> class. <xref:System.Data.Objects.DataClasses.RelatedEnd> is the base class for the <xref:System.Data.Objects.DataClasses.EntityCollection%601> and <xref:System.Data.Objects.DataClasses.EntityReference%601> classes.  
  
   
  
## Examples  
 The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832), which was generated by the [Entity Data Model Wizard](https://msdn.microsoft.com/library/423ec9a7-5464-43b7-a7ef-9f5f000848b5).  
  
 The following example adds new `SalesOrderHeader` entities to the `Contact` entity. Then it gets all related ends from the `Contact` entity and displays relationship name, source role name, and target role name for each related end.  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Adds an object to the related end.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Data.Objects.DataClasses.IEntityWithRelationships entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Data.Objects.DataClasses.IEntityWithRelationships entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (entity As IEntityWithRelationships)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Data::Objects::DataClasses::IEntityWithRelationships ^ entity);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Data.Objects.DataClasses.IEntityWithRelationships -&gt; unit" Usage="iRelatedEnd.Add entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </Parameters>
      <Docs>
        <param name="entity">An object to add to the collection. <paramref name="entity" /> must implement <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />.</param>
        <summary>Adds an object to the related end.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A> method adds an object to the related end. The related end must be an <xref:System.Data.Objects.DataClasses.EntityCollection%601>.  
  
 When the source object implements <xref:System.Data.Objects.DataClasses.IEntityWithRelationships> and is being tracked in the <xref:System.Data.Objects.ObjectStateManager>, the object being added is also tracked.  
  
 The <xref:System.Data.Objects.DataClasses.RelatedEnd> class explicitly implements the <xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A> method. The <xref:System.Data.Objects.DataClasses.EntityCollection%601> class uses this implementation. For more information, see <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A>.  
  
 If the related end is an <xref:System.Data.Objects.DataClasses.EntityReference%601> and the <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> property of the reference is not `null`, this method throws an exception.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; unit" Usage="iRelatedEnd.Add entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">An object to add to the collection.</param>
        <summary>Adds an object to the related end.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this method overload for entity classes that do not implement <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>. Use the <xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A> method for entity classes that do implement <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>.  
  
 The <xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A> method adds an object to the related end. The related end must be an <xref:System.Data.Objects.DataClasses.EntityCollection%601>.  
  
 The <xref:System.Data.Objects.DataClasses.RelatedEnd> class explicitly implements the <xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A> method. The <xref:System.Data.Objects.DataClasses.EntityCollection%601> class uses this implementation. For more information, see <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A>.  
  
 If the related end is an <xref:System.Data.Objects.DataClasses.EntityReference%601> and the <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> property of the reference is not `null`, this method throws an exception.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Attach">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Defines a relationship between two attached objects.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (System.Data.Objects.DataClasses.IEntityWithRelationships entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(class System.Data.Objects.DataClasses.IEntityWithRelationships entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entity As IEntityWithRelationships)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(System::Data::Objects::DataClasses::IEntityWithRelationships ^ entity);" />
      <MemberSignature Language="F#" Value="abstract member Attach : System.Data.Objects.DataClasses.IEntityWithRelationships -&gt; unit" Usage="iRelatedEnd.Attach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </Parameters>
      <Docs>
        <param name="entity">The object being attached. <paramref name="entity" /> must implement <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />.</param>
        <summary>Defines a relationship between two attached objects.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A> method is used to define a relationship between two objects that are both attached to the same <xref:System.Data.Objects.ObjectContext> instance.  
  
 The <xref:System.Data.Objects.DataClasses.RelatedEnd> class explicitly implements the <xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A> method. The <xref:System.Data.Objects.DataClasses.EntityCollection%601> class uses this implementation to define relationships between the attached source object and the object attached to the collection. For more information, see [Attaching and Detaching Objects](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="abstract member Attach : obj -&gt; unit" Usage="iRelatedEnd.Attach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The object being attached.</param>
        <summary>Defines a relationship between two attached objects.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this method overload for entity classes that do not implement <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>. Use the <xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A> method for entity classes that do implement <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>.  
  
 The <xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A> method is used to define a relationship between two objects that are both attached to the same <xref:System.Data.Objects.ObjectContext> instance.  
  
 The <xref:System.Data.Objects.DataClasses.RelatedEnd> class explicitly implements the <xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A> method. The <xref:System.Data.Objects.DataClasses.EntityCollection%601> class uses this implementation to define relationships between the attached source object and the object attached to the collection. For more information, see [Attaching and Detaching Objects](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSourceQuery">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable CreateSourceQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerable CreateSourceQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSourceQuery () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ CreateSourceQuery();" />
      <MemberSignature Language="F#" Value="abstract member CreateSourceQuery : unit -&gt; System.Collections.IEnumerable" Usage="iRelatedEnd.CreateSourceQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an <see cref="T:System.Collections.IEnumerable" /> that represents the objects that belong to the related end.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerable" /> that represents the objects that belong to the related end.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery%2A> method is explicitly implemented by the <xref:System.Data.Objects.DataClasses.RelatedEnd> class.  The <xref:System.Data.Objects.DataClasses.EntityCollection%601> and <xref:System.Data.Objects.DataClasses.EntityReference%601> classes both override the <xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23CreateSourceQuery%2A> method to return an <xref:System.Data.Objects.ObjectQuery%601> that, when it is executed, returns the same set of objects that belong to the related end.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="iRelatedEnd.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the collection of related objects.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerator" /> that iterates through the collection of related objects.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public bool IsLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoaded" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoaded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLoaded : bool" Usage="System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether all related objects have been loaded.</summary>
        <value>
          <see langword="true" /> if the related end contains all the related entities from the database; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Data.Objects.DataClasses.RelatedEnd> class implements the <xref:System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded%2A> method of <xref:System.Data.Objects.DataClasses.IRelatedEnd>. For more information, see <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>.  
  
 The <xref:System.Data.Objects.DataClasses.EntityCollection%601> and <xref:System.Data.Objects.DataClasses.EntityReference%601> classes inherit from <xref:System.Data.Objects.DataClasses.RelatedEnd>.  
  
   
  
## Examples  
 [Defining and Managing Relationships](https://msdn.microsoft.com/library/2c92c097-56bd-4145-989e-16d92475ecda)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Loads the related object or objects into this related end.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Load` is called to explicitly load related objects from a related end that is exposed by a navigation property. For more information, see [Loading Related Objects](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100)).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.IRelatedEnd.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load();" />
      <MemberSignature Language="F#" Value="abstract member Load : unit -&gt; unit" Usage="iRelatedEnd.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Loads the related object or objects into this related end with the default merge option.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Data.Objects.DataClasses.RelatedEnd> class implements the <xref:System.Data.Objects.DataClasses.IRelatedEnd.Load%2A> method of <xref:System.Data.Objects.DataClasses.IRelatedEnd>. For more information, see <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>.  
  
 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> is called to explicitly load related objects from a related end exposed by a navigation property. For more information, see [Loading Related Objects](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100)).  
  
 The <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> method loads related objects from the data source whether or not <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> is `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Data.Objects.MergeOption -&gt; unit" Usage="iRelatedEnd.Load mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption">The <see cref="T:System.Data.Objects.MergeOption" /> to use when merging objects into an existing <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</param>
        <summary>Loads the related object or objects into the related end with the specified merge option.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Data.Objects.DataClasses.RelatedEnd> class implements the <xref:System.Data.Objects.DataClasses.IRelatedEnd.Load%2A> method. Both the <xref:System.Data.Objects.DataClasses.EntityCollection%601> and <xref:System.Data.Objects.DataClasses.EntityReference%601> classes override this implementation.  
  
 `Load` is called to explicitly load related objects from a related end that is exposed by a navigation property. For more information, see [Loading Related Objects](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100)).  
  
 The <xref:System.Data.Objects.DataClasses.IRelatedEnd.Load%2A> method loads related objects from the data source whether or not <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> is `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipName">
      <MemberSignature Language="C#" Value="public string RelationshipName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RelationshipName : string" Usage="System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the relationship in which this related end participates.</summary>
        <value>The name of the relationship in which this <see cref="T:System.Data.Objects.DataClasses.IRelatedEnd" /> is participating. The relationship name is not namespace qualified.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832), which was generated by the [Entity Data Model Wizard](https://msdn.microsoft.com/library/423ec9a7-5464-43b7-a7ef-9f5f000848b5).  
  
 The following example adds new `SalesOrderHeader` entities to the `Contact` entity. Then it gets all related ends from the `Contact` entity and displays the relationship name, source role name, and target role name for each related end.  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipSet">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.RelationshipSet RelationshipSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.RelationshipSet RelationshipSet" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipSet As RelationshipSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::RelationshipSet ^ RelationshipSet { System::Data::Metadata::Edm::RelationshipSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RelationshipSet : System.Data.Metadata.Edm.RelationshipSet" Usage="System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.RelationshipSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a reference to the metadata for the related end.</summary>
        <value>A <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> object that contains metadata for the end of a relationship.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Removes an object from the collection of objects at the related end.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Data.Objects.DataClasses.IEntityWithRelationships entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Data.Objects.DataClasses.IEntityWithRelationships entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (entity As IEntityWithRelationships) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(System::Data::Objects::DataClasses::IEntityWithRelationships ^ entity);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Data.Objects.DataClasses.IEntityWithRelationships -&gt; bool" Usage="iRelatedEnd.Remove entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </Parameters>
      <Docs>
        <param name="entity">The object to remove from the collection. <paramref name="entity" /> must implement <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />.</param>
        <summary>Removes an object from the collection of objects at the related end.</summary>
        <returns>
          <see langword="true" /> if <paramref name="entity" /> was successfully removed, <see langword="false" /> if <paramref name="entity" /> was not part of the <see cref="T:System.Data.Objects.DataClasses.IRelatedEnd" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A> method removes an object from the related end. The related end must be an <xref:System.Data.Objects.DataClasses.EntityCollection%601>.  
  
 The <xref:System.Data.Objects.DataClasses.RelatedEnd> class explicitly implements the <xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A> method. The <xref:System.Data.Objects.DataClasses.EntityCollection%601> class uses this implementation. For more information, see <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (entity As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; bool" Usage="iRelatedEnd.Remove entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">An object to remove from the collection.</param>
        <summary>Removes an object from the collection of objects at the related end.</summary>
        <returns>
          <see langword="true" /> if <paramref name="entity" /> was successfully removed; <see langword="false" /> if <paramref name="entity" /> was not part of the <see cref="T:System.Data.Objects.DataClasses.IRelatedEnd" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this method overload for entity classes that do not implement <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>. Use the <xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A> method for entity classes that do implement <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>.  
  
 The <xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A> method removes an object from the related end. The related end must be an <xref:System.Data.Objects.DataClasses.EntityCollection%601>.  
  
 The <xref:System.Data.Objects.DataClasses.RelatedEnd> class explicitly implements the <xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A> method. The <xref:System.Data.Objects.DataClasses.EntityCollection%601> class uses this implementation. For more information, see <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceRoleName">
      <MemberSignature Language="C#" Value="public string SourceRoleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceRoleName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceRoleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceRoleName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourceRoleName : string" Usage="System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the role name at the source end of the relationship.</summary>
        <value>The role name at the source end of the relationship.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Data.Objects.DataClasses.RelatedEnd> class implements the  <xref:System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName%2A> property. For more information, see <xref:System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName%2A>.  
  
 The role name is specified by the `Role` attribute of the `End` element in the association that defines this relationship in the conceptual model. For more information, see [Association Element (CSDL)](https://msdn.microsoft.com/library/c305169a-8af7-432f-9ba7-800a163aed41).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetRoleName">
      <MemberSignature Language="C#" Value="public string TargetRoleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetRoleName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetRoleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetRoleName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetRoleName : string" Usage="System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the role name at the target end of the relationship.</summary>
        <value>The role name at the target end of the relationship.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Data.Objects.DataClasses.RelatedEnd> class implements the <xref:System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName%2A> property. For more information, see <xref:System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName%2A>.  
  
 The role name is specified by the `Role` attribute of the `End` element in the association that defines this relationship in the conceptual model. For more information, see [Association Element (CSDL)](https://msdn.microsoft.com/library/c305169a-8af7-432f-9ba7-800a163aed41).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="PEStreamOptions" FullName="System.Reflection.PortableExecutable.PEStreamOptions">
  <TypeSignature Language="C#" Value="public enum PEStreamOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PEStreamOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.PortableExecutable.PEStreamOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum PEStreamOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class PEStreamOptions" />
  <TypeSignature Language="F#" Value="type PEStreamOptions = " />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.0.22.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
    <AssemblyVersion>1.4.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides options that specify how sections of a PE image are read from a stream.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.PortableExecutable.PEStreamOptions Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.PortableExecutable.PEStreamOptions.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 0" Usage="System.Reflection.PortableExecutable.PEStreamOptions.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PortableExecutable.PEStreamOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>By default, the stream is disposed when the <see cref="T:System.Reflection.PortableExecutable.PEReader" /> is disposed, and sections of the PE image are read lazily.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoadedImage">
      <MemberSignature Language="C#" Value="IsLoadedImage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.PortableExecutable.PEStreamOptions IsLoadedImage = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.PortableExecutable.PEStreamOptions.IsLoadedImage" />
      <MemberSignature Language="VB.NET" Value="IsLoadedImage" />
      <MemberSignature Language="C++ CLI" Value="IsLoadedImage" />
      <MemberSignature Language="F#" Value="IsLoadedImage = 8" Usage="System.Reflection.PortableExecutable.PEStreamOptions.IsLoadedImage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PortableExecutable.PEStreamOptions</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Indicates that the underlying PE image has been loaded into memory by the OS loader.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaveOpen">
      <MemberSignature Language="C#" Value="LeaveOpen" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.PortableExecutable.PEStreamOptions LeaveOpen = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.PortableExecutable.PEStreamOptions.LeaveOpen" />
      <MemberSignature Language="VB.NET" Value="LeaveOpen" />
      <MemberSignature Language="C++ CLI" Value="LeaveOpen" />
      <MemberSignature Language="F#" Value="LeaveOpen = 1" Usage="System.Reflection.PortableExecutable.PEStreamOptions.LeaveOpen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PortableExecutable.PEStreamOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Keeps the stream open when the <see cref="T:System.Reflection.PortableExecutable.PEReader" /> is disposed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefetchEntireImage">
      <MemberSignature Language="C#" Value="PrefetchEntireImage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.PortableExecutable.PEStreamOptions PrefetchEntireImage = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.PortableExecutable.PEStreamOptions.PrefetchEntireImage" />
      <MemberSignature Language="VB.NET" Value="PrefetchEntireImage" />
      <MemberSignature Language="C++ CLI" Value="PrefetchEntireImage" />
      <MemberSignature Language="F#" Value="PrefetchEntireImage = 4" Usage="System.Reflection.PortableExecutable.PEStreamOptions.PrefetchEntireImage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PortableExecutable.PEStreamOptions</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Reads the entire image into memory right away. <see cref="T:System.Reflection.PortableExecutable.PEReader" /> closes the stream automatically by the time the constructor returns unless <see cref="F:System.Reflection.PortableExecutable.PEStreamOptions.LeaveOpen" /> is specified.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<xref:System.Reflection.PortableExecutable.PEReader> closes the stream automatically by the time the constructor returns unless <xref:System.Reflection.PortableExecutable.PEStreamOptions.LeaveOpen> is specified.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefetchMetadata">
      <MemberSignature Language="C#" Value="PrefetchMetadata" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.PortableExecutable.PEStreamOptions PrefetchMetadata = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.PortableExecutable.PEStreamOptions.PrefetchMetadata" />
      <MemberSignature Language="VB.NET" Value="PrefetchMetadata" />
      <MemberSignature Language="C++ CLI" Value="PrefetchMetadata" />
      <MemberSignature Language="F#" Value="PrefetchMetadata = 2" Usage="System.Reflection.PortableExecutable.PEStreamOptions.PrefetchMetadata" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PortableExecutable.PEStreamOptions</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <para>Reads the metadata section into memory right away.</para>
          <para>Reading from other sections of the file is not allowed (<see cref="T:System.InvalidOperationException" /> is thrown by the <see cref="T:System.Reflection.PortableExecutable.PEReader" />).</para>
          <para>
            <see cref="T:System.Reflection.PortableExecutable.PEReader" /> closes the stream automatically by the time the constructor returns unless <see cref="F:System.Reflection.PortableExecutable.PEStreamOptions.LeaveOpen" /> is specified. The underlying file may be closed and even deleted after <see cref="T:System.Reflection.PortableExecutable.PEReader" /> is constructed.</para>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Reading from other sections of the file is not allowed (<xref:System.InvalidOperationException> is thrown by the <xref:System.Reflection.PortableExecutable.PEReader>).
 The underlying file may be closed and even deleted after <xref:System.Reflection.PortableExecutable.PEReader> is constructed.
 
 <xref:System.Reflection.PortableExecutable.PEReader> closes the stream automatically by the time the constructor returns unless <xref:System.Reflection.PortableExecutable.PEStreamOptions.LeaveOpen> is specified.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

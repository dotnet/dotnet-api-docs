<Type Name="IDocumentReader&lt;TDocument&gt;" FullName="System.Cloud.DocumentDb.IDocumentReader&lt;TDocument&gt;">
  <TypeSignature Language="C#" Value="public interface IDocumentReader&lt;TDocument&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDocumentReader`1&lt;TDocument&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Cloud.DocumentDb.IDocumentReader`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDocumentReader(Of TDocument)" />
  <TypeSignature Language="F#" Value="type IDocumentReader&lt;'Document&gt; = interface" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TDocument&gt;&#xA;public interface class IDocumentReader" />
  <AssemblyInfo>
    <AssemblyName>System.Cloud.DocumentDb.Abstractions</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TDocument" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TDocument">
            The document entity type to be used as a table schema.
            Request results will be mapped to instance of this type.
            </typeparam>
    <summary>
            An interface to clients for all document oriented (or NoSQL) databases for document read operations.
            https://en.wikipedia.org/wiki/Document-oriented_database.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CountDocumentsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;int&gt;&gt; CountDocumentsAsync (System.Cloud.DocumentDb.QueryRequestOptions&lt;TDocument&gt; options, Func&lt;System.Linq.IQueryable&lt;TDocument&gt;,System.Linq.IQueryable&lt;TDocument&gt;&gt;? condition, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Cloud.DocumentDb.IDatabaseResponse`1&lt;int32&gt;&gt; CountDocumentsAsync(class System.Cloud.DocumentDb.QueryRequestOptions`1&lt;!TDocument&gt; options, class System.Func`2&lt;class System.Linq.IQueryable`1&lt;!TDocument&gt;, class System.Linq.IQueryable`1&lt;!TDocument&gt;&gt; condition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Cloud.DocumentDb.IDocumentReader`1.CountDocumentsAsync(System.Cloud.DocumentDb.QueryRequestOptions{`0},System.Func{System.Linq.IQueryable{`0},System.Linq.IQueryable{`0}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CountDocumentsAsync (options As QueryRequestOptions(Of TDocument), condition As Func(Of IQueryable(Of TDocument), IQueryable(Of TDocument)), cancellationToken As CancellationToken) As Task(Of IDatabaseResponse(Of Integer))" />
      <MemberSignature Language="F#" Value="abstract member CountDocumentsAsync : System.Cloud.DocumentDb.QueryRequestOptions&lt;'Document&gt; * Func&lt;System.Linq.IQueryable&lt;'Document&gt;, System.Linq.IQueryable&lt;'Document&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;int&gt;&gt;" Usage="iDocumentReader.CountDocumentsAsync (options, condition, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Cloud::DocumentDb::IDatabaseResponse&lt;int&gt; ^&gt; ^ CountDocumentsAsync(System::Cloud::DocumentDb::QueryRequestOptions&lt;TDocument&gt; ^ options, Func&lt;System::Linq::IQueryable&lt;TDocument&gt; ^, System::Linq::IQueryable&lt;TDocument&gt; ^&gt; ^ condition, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Cloud.DocumentDb.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Cloud.DocumentDb.QueryRequestOptions&lt;TDocument&gt;" />
        <Parameter Name="condition" Type="System.Func&lt;System.Linq.IQueryable&lt;TDocument&gt;,System.Linq.IQueryable&lt;TDocument&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The query request options. </param>
        <param name="condition">The condition function.</param>
        <param name="cancellationToken">The token represents request cancellation.</param>
        <summary>
            Counts documents which satisfy a query conditions in a table.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a count of documents.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">Thrown when an error occurred on a database server side,
            including internal server error.</exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">Thrown when a request failed but can be retried.
            This includes throttling and server not available cases. </exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A generic exception thrown in all other not covered above cases.</exception>
      </Docs>
    </Member>
    <Member MemberName="FetchDocumentsAsync&lt;TOutputDocument&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;System.Collections.Generic.IReadOnlyList&lt;TOutputDocument&gt;&gt;&gt; FetchDocumentsAsync&lt;TOutputDocument&gt; (System.Cloud.DocumentDb.QueryRequestOptions&lt;TDocument&gt; options, Func&lt;System.Linq.IQueryable&lt;TDocument&gt;,System.Linq.IQueryable&lt;TOutputDocument&gt;&gt;? condition, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Cloud.DocumentDb.IDatabaseResponse`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;!!TOutputDocument&gt;&gt;&gt; FetchDocumentsAsync&lt;TOutputDocument&gt;(class System.Cloud.DocumentDb.QueryRequestOptions`1&lt;!TDocument&gt; options, class System.Func`2&lt;class System.Linq.IQueryable`1&lt;!TDocument&gt;, class System.Linq.IQueryable`1&lt;!!TOutputDocument&gt;&gt; condition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Cloud.DocumentDb.IDocumentReader`1.FetchDocumentsAsync``1(System.Cloud.DocumentDb.QueryRequestOptions{`0},System.Func{System.Linq.IQueryable{`0},System.Linq.IQueryable{``0}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function FetchDocumentsAsync(Of TOutputDocument) (options As QueryRequestOptions(Of TDocument), condition As Func(Of IQueryable(Of TDocument), IQueryable(Of TOutputDocument)), cancellationToken As CancellationToken) As Task(Of IDatabaseResponse(Of IReadOnlyList(Of TOutputDocument)))" />
      <MemberSignature Language="F#" Value="abstract member FetchDocumentsAsync : System.Cloud.DocumentDb.QueryRequestOptions&lt;'Document&gt; * Func&lt;System.Linq.IQueryable&lt;'Document&gt;, System.Linq.IQueryable&lt;'OutputDocument&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;System.Collections.Generic.IReadOnlyList&lt;'OutputDocument&gt;&gt;&gt;" Usage="iDocumentReader.FetchDocumentsAsync (options, condition, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutputDocument&gt;&#xA; System::Threading::Tasks::Task&lt;System::Cloud::DocumentDb::IDatabaseResponse&lt;System::Collections::Generic::IReadOnlyList&lt;TOutputDocument&gt; ^&gt; ^&gt; ^ FetchDocumentsAsync(System::Cloud::DocumentDb::QueryRequestOptions&lt;TDocument&gt; ^ options, Func&lt;System::Linq::IQueryable&lt;TDocument&gt; ^, System::Linq::IQueryable&lt;TOutputDocument&gt; ^&gt; ^ condition, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Cloud.DocumentDb.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;System.Collections.Generic.IReadOnlyList&lt;TOutputDocument&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutputDocument" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="options" Type="System.Cloud.DocumentDb.QueryRequestOptions&lt;TDocument&gt;" />
        <Parameter Name="condition" Type="System.Func&lt;System.Linq.IQueryable&lt;TDocument&gt;,System.Linq.IQueryable&lt;TOutputDocument&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutputDocument">The type used to map results from <typeparamref name="TDocument" /> after condition is applied.</typeparam>
        <param name="options">The request options.</param>
        <param name="condition">The fetch condition function.</param>
        <param name="cancellationToken">The token represents request cancellation.</param>
        <summary>
            Fetches a collection of documents.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> which wraps enumerable of fetched documents.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">Thrown when an error occurred on a database server side,
            including internal server error.</exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">Thrown when a request failed but can be retried.
            This includes throttling and server not available cases. </exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A generic exception thrown in all other not covered above cases.</exception>
      </Docs>
    </Member>
    <Member MemberName="QueryDocumentsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;System.Collections.Generic.IReadOnlyList&lt;TDocument&gt;&gt;&gt; QueryDocumentsAsync (System.Cloud.DocumentDb.QueryRequestOptions&lt;TDocument&gt; options, System.Cloud.DocumentDb.Query query, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Cloud.DocumentDb.IDatabaseResponse`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;!TDocument&gt;&gt;&gt; QueryDocumentsAsync(class System.Cloud.DocumentDb.QueryRequestOptions`1&lt;!TDocument&gt; options, valuetype System.Cloud.DocumentDb.Query query, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Cloud.DocumentDb.IDocumentReader`1.QueryDocumentsAsync(System.Cloud.DocumentDb.QueryRequestOptions{`0},System.Cloud.DocumentDb.Query,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function QueryDocumentsAsync (options As QueryRequestOptions(Of TDocument), query As Query, cancellationToken As CancellationToken) As Task(Of IDatabaseResponse(Of IReadOnlyList(Of TDocument)))" />
      <MemberSignature Language="F#" Value="abstract member QueryDocumentsAsync : System.Cloud.DocumentDb.QueryRequestOptions&lt;'Document&gt; * System.Cloud.DocumentDb.Query * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;System.Collections.Generic.IReadOnlyList&lt;'Document&gt;&gt;&gt;" Usage="iDocumentReader.QueryDocumentsAsync (options, query, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Cloud::DocumentDb::IDatabaseResponse&lt;System::Collections::Generic::IReadOnlyList&lt;TDocument&gt; ^&gt; ^&gt; ^ QueryDocumentsAsync(System::Cloud::DocumentDb::QueryRequestOptions&lt;TDocument&gt; ^ options, System::Cloud::DocumentDb::Query query, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Cloud.DocumentDb.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;System.Collections.Generic.IReadOnlyList&lt;TDocument&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Cloud.DocumentDb.QueryRequestOptions&lt;TDocument&gt;" />
        <Parameter Name="query" Type="System.Cloud.DocumentDb.Query" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The query request options.</param>
        <param name="query">The query to fetch items.</param>
        <param name="cancellationToken">The token represents request cancellation.</param>
        <summary>
            Fetches a collection of documents using a custom query provided.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> which wraps enumerable of fetched documents.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">Thrown when an error occurred on a database server side,
            including internal server error.</exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">Thrown when a request failed but can be retried.
            This includes throttling and server not available cases. </exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A generic exception thrown in all other not covered above cases.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadDocumentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;TDocument&gt;&gt; ReadDocumentAsync (System.Cloud.DocumentDb.RequestOptions&lt;TDocument&gt; requestOptions, string id, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Cloud.DocumentDb.IDatabaseResponse`1&lt;!TDocument&gt;&gt; ReadDocumentAsync(class System.Cloud.DocumentDb.RequestOptions`1&lt;!TDocument&gt; requestOptions, string id, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Cloud.DocumentDb.IDocumentReader`1.ReadDocumentAsync(System.Cloud.DocumentDb.RequestOptions{`0},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadDocumentAsync (requestOptions As RequestOptions(Of TDocument), id As String, cancellationToken As CancellationToken) As Task(Of IDatabaseResponse(Of TDocument))" />
      <MemberSignature Language="F#" Value="abstract member ReadDocumentAsync : System.Cloud.DocumentDb.RequestOptions&lt;'Document&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;'Document&gt;&gt;" Usage="iDocumentReader.ReadDocumentAsync (requestOptions, id, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Cloud::DocumentDb::IDatabaseResponse&lt;TDocument&gt; ^&gt; ^ ReadDocumentAsync(System::Cloud::DocumentDb::RequestOptions&lt;TDocument&gt; ^ requestOptions, System::String ^ id, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Cloud.DocumentDb.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;TDocument&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestOptions" Type="System.Cloud.DocumentDb.RequestOptions&lt;TDocument&gt;" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestOptions">The request options.</param>
        <param name="id">The document id requested to read.</param>
        <param name="cancellationToken">The token represents request cancellation.</param>
        <summary>
            Reads a document.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> which wraps the result document.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">Thrown when an error occurred on a database server side,
            including internal server error.</exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">Thrown when a request failed but can be retried.
            This includes throttling and server not available cases. </exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A generic exception thrown in all other not covered above cases.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

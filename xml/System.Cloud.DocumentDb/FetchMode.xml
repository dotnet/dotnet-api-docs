<Type Name="FetchMode" FullName="System.Cloud.DocumentDb.FetchMode">
  <TypeSignature Language="C#" Value="public enum FetchMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FetchMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Cloud.DocumentDb.FetchMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum FetchMode" />
  <TypeSignature Language="F#" Value="type FetchMode = " />
  <TypeSignature Language="C++ CLI" Value="public enum class FetchMode" />
  <AssemblyInfo>
    <AssemblyName>System.Cloud.DocumentDb.Abstractions</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
            Fetch condition of query.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FetchAll">
      <MemberSignature Language="C#" Value="FetchAll" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Cloud.DocumentDb.FetchMode FetchAll = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Cloud.DocumentDb.FetchMode.FetchAll" />
      <MemberSignature Language="VB.NET" Value="FetchAll" />
      <MemberSignature Language="F#" Value="FetchAll = 0" Usage="System.Cloud.DocumentDb.FetchMode.FetchAll" />
      <MemberSignature Language="C++ CLI" Value="FetchAll" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Cloud.DocumentDb.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Cloud.DocumentDb.FetchMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
            Indicating whether we should fetch all documents.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="FetchMaxResults">
      <MemberSignature Language="C#" Value="FetchMaxResults" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Cloud.DocumentDb.FetchMode FetchMaxResults = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Cloud.DocumentDb.FetchMode.FetchMaxResults" />
      <MemberSignature Language="VB.NET" Value="FetchMaxResults" />
      <MemberSignature Language="F#" Value="FetchMaxResults = 2" Usage="System.Cloud.DocumentDb.FetchMode.FetchMaxResults" />
      <MemberSignature Language="C++ CLI" Value="FetchMaxResults" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Cloud.DocumentDb.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Cloud.DocumentDb.FetchMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
            Indicating whether we should ensure fetching at least the number of max item count.
            </summary>
        <remarks>
            This parameter should only being served on cross partition query.
            For instance, if you set the <see cref="P:System.Cloud.DocumentDb.QueryRequestOptions`1.MaxResults" /> to 50.
            On in partition query, it will return you exactly 50 items if there is that much.
            But for cross partition query, it might return you only 30 items on a single fetch.
            In a case of <see cref="F:System.Cloud.DocumentDb.FetchMode.FetchSinglePage" /> only 30 items will be returned with a continuation token to
            let you fetch forward.
            In a case of <see cref="F:System.Cloud.DocumentDb.FetchMode.FetchMaxResults" />, another round of single fetch query will be requested with same
            <see cref="P:System.Cloud.DocumentDb.QueryRequestOptions`1.MaxResults" />, which means 80 items at maximum can be returned.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchSinglePage">
      <MemberSignature Language="C#" Value="FetchSinglePage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Cloud.DocumentDb.FetchMode FetchSinglePage = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Cloud.DocumentDb.FetchMode.FetchSinglePage" />
      <MemberSignature Language="VB.NET" Value="FetchSinglePage" />
      <MemberSignature Language="F#" Value="FetchSinglePage = 1" Usage="System.Cloud.DocumentDb.FetchMode.FetchSinglePage" />
      <MemberSignature Language="C++ CLI" Value="FetchSinglePage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Cloud.DocumentDb.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Cloud.DocumentDb.FetchMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
            Indicating whether we should fetch only one page of results.
            </summary>
        <remarks>
            Page represents a physical group of data located on specific machine.
            The page should represent a partition,
            in a case of cross partition fetch each call will return data of a single partition.
            If a database implementation allows to distribute a partition data across servers,
            this page can be a subset of partition.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

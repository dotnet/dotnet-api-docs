<Type Name="IDocumentDatabase" FullName="System.Cloud.DocumentDb.IDocumentDatabase">
  <TypeSignature Language="C#" Value="public interface IDocumentDatabase" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDocumentDatabase" />
  <TypeSignature Language="DocId" Value="T:System.Cloud.DocumentDb.IDocumentDatabase" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDocumentDatabase" />
  <TypeSignature Language="F#" Value="type IDocumentDatabase = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDocumentDatabase" />
  <AssemblyInfo>
    <AssemblyName>System.Cloud.DocumentDb.Abstractions</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            An interface for managing a document database.
            </summary>
    <remarks>
            It plays a role of database, table and connection management.
            Also it allows constructing readers and writers for tables.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (bool createIfNotExists, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ConnectAsync(bool createIfNotExists, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Cloud.DocumentDb.IDocumentDatabase.ConnectAsync(System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (createIfNotExists As Boolean, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member ConnectAsync : bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iDocumentDatabase.ConnectAsync (createIfNotExists, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(bool createIfNotExists, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Cloud.DocumentDb.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="createIfNotExists" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="createIfNotExists">Specifies whether database should be created if not exists.</param>
        <param name="cancellationToken">The cancelation token.</param>
        <summary>
            Initializes connections and optionally creates database if not exists.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the result of the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTableAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;System.Cloud.DocumentDb.TableOptions&gt;&gt; CreateTableAsync (System.Cloud.DocumentDb.TableOptions tableOptions, System.Cloud.DocumentDb.RequestOptions requestOptions, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Cloud.DocumentDb.IDatabaseResponse`1&lt;class System.Cloud.DocumentDb.TableOptions&gt;&gt; CreateTableAsync(class System.Cloud.DocumentDb.TableOptions tableOptions, class System.Cloud.DocumentDb.RequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Cloud.DocumentDb.IDocumentDatabase.CreateTableAsync(System.Cloud.DocumentDb.TableOptions,System.Cloud.DocumentDb.RequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTableAsync (tableOptions As TableOptions, requestOptions As RequestOptions, cancellationToken As CancellationToken) As Task(Of IDatabaseResponse(Of TableOptions))" />
      <MemberSignature Language="F#" Value="abstract member CreateTableAsync : System.Cloud.DocumentDb.TableOptions * System.Cloud.DocumentDb.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;System.Cloud.DocumentDb.TableOptions&gt;&gt;" Usage="iDocumentDatabase.CreateTableAsync (tableOptions, requestOptions, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Cloud::DocumentDb::IDatabaseResponse&lt;System::Cloud::DocumentDb::TableOptions ^&gt; ^&gt; ^ CreateTableAsync(System::Cloud::DocumentDb::TableOptions ^ tableOptions, System::Cloud::DocumentDb::RequestOptions ^ requestOptions, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Cloud.DocumentDb.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;System.Cloud.DocumentDb.TableOptions&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableOptions" Type="System.Cloud.DocumentDb.TableOptions" />
        <Parameter Name="requestOptions" Type="System.Cloud.DocumentDb.RequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tableOptions">The table options.</param>
        <param name="requestOptions">The request options.</param>
        <param name="cancellationToken">The token represents request cancellation.</param>
        <summary>
            Creates table using provided parameters.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> which wraps the table information.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">Thrown when an error occurred on a database server side,
            including internal server error.</exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">Thrown when a request failed but can be retried.
            This includes throttling and server not available cases. </exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A generic exception thrown in all other not covered above cases.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteDatabaseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;bool&gt;&gt; DeleteDatabaseAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Cloud.DocumentDb.IDatabaseResponse`1&lt;bool&gt;&gt; DeleteDatabaseAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Cloud.DocumentDb.IDocumentDatabase.DeleteDatabaseAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteDatabaseAsync (cancellationToken As CancellationToken) As Task(Of IDatabaseResponse(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member DeleteDatabaseAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;bool&gt;&gt;" Usage="iDocumentDatabase.DeleteDatabaseAsync cancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Cloud::DocumentDb::IDatabaseResponse&lt;bool&gt; ^&gt; ^ DeleteDatabaseAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Cloud.DocumentDb.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Deletes database this instance is responsible for.
            </summary>
        <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> with
            <see langword="true" /> value if successfully deleted and <see langword="false" /> otherwise.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">Thrown when an error occurred on a database server side,
            including internal server error.</exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">Thrown when a request failed but can be retried.
            This includes throttling and server not available cases. </exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A generic exception thrown in all other not covered above cases.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteTableAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;System.Cloud.DocumentDb.TableOptions&gt;&gt; DeleteTableAsync (System.Cloud.DocumentDb.TableOptions tableOptions, System.Cloud.DocumentDb.RequestOptions requestOptions, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Cloud.DocumentDb.IDatabaseResponse`1&lt;class System.Cloud.DocumentDb.TableOptions&gt;&gt; DeleteTableAsync(class System.Cloud.DocumentDb.TableOptions tableOptions, class System.Cloud.DocumentDb.RequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Cloud.DocumentDb.IDocumentDatabase.DeleteTableAsync(System.Cloud.DocumentDb.TableOptions,System.Cloud.DocumentDb.RequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteTableAsync (tableOptions As TableOptions, requestOptions As RequestOptions, cancellationToken As CancellationToken) As Task(Of IDatabaseResponse(Of TableOptions))" />
      <MemberSignature Language="F#" Value="abstract member DeleteTableAsync : System.Cloud.DocumentDb.TableOptions * System.Cloud.DocumentDb.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;System.Cloud.DocumentDb.TableOptions&gt;&gt;" Usage="iDocumentDatabase.DeleteTableAsync (tableOptions, requestOptions, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Cloud::DocumentDb::IDatabaseResponse&lt;System::Cloud::DocumentDb::TableOptions ^&gt; ^&gt; ^ DeleteTableAsync(System::Cloud::DocumentDb::TableOptions ^ tableOptions, System::Cloud::DocumentDb::RequestOptions ^ requestOptions, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Cloud.DocumentDb.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;System.Cloud.DocumentDb.TableOptions&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableOptions" Type="System.Cloud.DocumentDb.TableOptions" />
        <Parameter Name="requestOptions" Type="System.Cloud.DocumentDb.RequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tableOptions">The table options with <see cref="P:System.Cloud.DocumentDb.TableOptions.TableName" /> and region information provided.</param>
        <param name="requestOptions">The request options.</param>
        <param name="cancellationToken">The token represents request cancellation.</param>
        <summary>
            Deletes table using provided parameters.
            </summary>
        <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> with
            <see langword="true" /> value if table successfully deleted and <see langword="false" /> otherwise.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">Thrown when an error occurred on a database server side,
            including internal server error.</exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">Thrown when a request failed but can be retried.
            This includes throttling and server not available cases. </exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A generic exception thrown in all other not covered above cases.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDocumentReader&lt;TDocument&gt;">
      <MemberSignature Language="C#" Value="public System.Cloud.DocumentDb.IDocumentReader&lt;TDocument&gt; GetDocumentReader&lt;TDocument&gt; (System.Cloud.DocumentDb.TableOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Cloud.DocumentDb.IDocumentReader`1&lt;!!TDocument&gt; GetDocumentReader&lt;TDocument&gt;(class System.Cloud.DocumentDb.TableOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Cloud.DocumentDb.IDocumentDatabase.GetDocumentReader``1(System.Cloud.DocumentDb.TableOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDocumentReader(Of TDocument) (options As TableOptions) As IDocumentReader(Of TDocument)" />
      <MemberSignature Language="F#" Value="abstract member GetDocumentReader : System.Cloud.DocumentDb.TableOptions -&gt; System.Cloud.DocumentDb.IDocumentReader&lt;'Document&gt;" Usage="iDocumentDatabase.GetDocumentReader options" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDocument&gt;&#xA; System::Cloud::DocumentDb::IDocumentReader&lt;TDocument&gt; ^ GetDocumentReader(System::Cloud::DocumentDb::TableOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Cloud.DocumentDb.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Cloud.DocumentDb.IDocumentReader&lt;TDocument&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDocument" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="options" Type="System.Cloud.DocumentDb.TableOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TDocument">
            The document entity type to be used as a table schema.
            Operation results of request will be mapped to instance of this type.
            </typeparam>
        <param name="options">The table options.</param>
        <summary>
            Gets a document reader for a table and a document type provided.
            </summary>
        <returns>The document reader.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDocumentWriter&lt;TDocument&gt;">
      <MemberSignature Language="C#" Value="public System.Cloud.DocumentDb.IDocumentWriter&lt;TDocument&gt; GetDocumentWriter&lt;TDocument&gt; (System.Cloud.DocumentDb.TableOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Cloud.DocumentDb.IDocumentWriter`1&lt;!!TDocument&gt; GetDocumentWriter&lt;TDocument&gt;(class System.Cloud.DocumentDb.TableOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Cloud.DocumentDb.IDocumentDatabase.GetDocumentWriter``1(System.Cloud.DocumentDb.TableOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDocumentWriter(Of TDocument) (options As TableOptions) As IDocumentWriter(Of TDocument)" />
      <MemberSignature Language="F#" Value="abstract member GetDocumentWriter : System.Cloud.DocumentDb.TableOptions -&gt; System.Cloud.DocumentDb.IDocumentWriter&lt;'Document&gt;" Usage="iDocumentDatabase.GetDocumentWriter options" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDocument&gt;&#xA; System::Cloud::DocumentDb::IDocumentWriter&lt;TDocument&gt; ^ GetDocumentWriter(System::Cloud::DocumentDb::TableOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Cloud.DocumentDb.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Cloud.DocumentDb.IDocumentWriter&lt;TDocument&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDocument" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="options" Type="System.Cloud.DocumentDb.TableOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TDocument">
            The document entity type to be used as a table schema.
            Operation results of request will be mapped to instance of this type.
            </typeparam>
        <param name="options">The table options.</param>
        <summary>
            Gets a document writer for a table and a document type provided.
            </summary>
        <returns>The document writer.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTableSettingsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;System.Cloud.DocumentDb.TableOptions&gt;&gt; ReadTableSettingsAsync (System.Cloud.DocumentDb.TableOptions tableOptions, System.Cloud.DocumentDb.RequestOptions requestOptions, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Cloud.DocumentDb.IDatabaseResponse`1&lt;class System.Cloud.DocumentDb.TableOptions&gt;&gt; ReadTableSettingsAsync(class System.Cloud.DocumentDb.TableOptions tableOptions, class System.Cloud.DocumentDb.RequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Cloud.DocumentDb.IDocumentDatabase.ReadTableSettingsAsync(System.Cloud.DocumentDb.TableOptions,System.Cloud.DocumentDb.RequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadTableSettingsAsync (tableOptions As TableOptions, requestOptions As RequestOptions, cancellationToken As CancellationToken) As Task(Of IDatabaseResponse(Of TableOptions))" />
      <MemberSignature Language="F#" Value="abstract member ReadTableSettingsAsync : System.Cloud.DocumentDb.TableOptions * System.Cloud.DocumentDb.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;System.Cloud.DocumentDb.TableOptions&gt;&gt;" Usage="iDocumentDatabase.ReadTableSettingsAsync (tableOptions, requestOptions, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Cloud::DocumentDb::IDatabaseResponse&lt;System::Cloud::DocumentDb::TableOptions ^&gt; ^&gt; ^ ReadTableSettingsAsync(System::Cloud::DocumentDb::TableOptions ^ tableOptions, System::Cloud::DocumentDb::RequestOptions ^ requestOptions, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Cloud.DocumentDb.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;System.Cloud.DocumentDb.TableOptions&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableOptions" Type="System.Cloud.DocumentDb.TableOptions" />
        <Parameter Name="requestOptions" Type="System.Cloud.DocumentDb.RequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tableOptions">The table options with <see cref="P:System.Cloud.DocumentDb.TableOptions.TableName" /> and region information provided.</param>
        <param name="requestOptions">The request options.</param>
        <param name="cancellationToken">The token represents request cancellation.</param>
        <summary>
            Reads provided table settings.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> which wraps the table information.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">Thrown when an error occurred on a database server side,
            including internal server error.</exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">Thrown when a request failed but can be retried.
            This includes throttling and server not available cases. </exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A generic exception thrown in all other not covered above cases.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateTableSettingsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;bool&gt;&gt; UpdateTableSettingsAsync (System.Cloud.DocumentDb.TableOptions tableOptions, System.Cloud.DocumentDb.RequestOptions requestOptions, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Cloud.DocumentDb.IDatabaseResponse`1&lt;bool&gt;&gt; UpdateTableSettingsAsync(class System.Cloud.DocumentDb.TableOptions tableOptions, class System.Cloud.DocumentDb.RequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Cloud.DocumentDb.IDocumentDatabase.UpdateTableSettingsAsync(System.Cloud.DocumentDb.TableOptions,System.Cloud.DocumentDb.RequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateTableSettingsAsync (tableOptions As TableOptions, requestOptions As RequestOptions, cancellationToken As CancellationToken) As Task(Of IDatabaseResponse(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member UpdateTableSettingsAsync : System.Cloud.DocumentDb.TableOptions * System.Cloud.DocumentDb.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;bool&gt;&gt;" Usage="iDocumentDatabase.UpdateTableSettingsAsync (tableOptions, requestOptions, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Cloud::DocumentDb::IDatabaseResponse&lt;bool&gt; ^&gt; ^ UpdateTableSettingsAsync(System::Cloud::DocumentDb::TableOptions ^ tableOptions, System::Cloud::DocumentDb::RequestOptions ^ requestOptions, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Cloud.DocumentDb.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Cloud.DocumentDb.IDatabaseResponse&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableOptions" Type="System.Cloud.DocumentDb.TableOptions" />
        <Parameter Name="requestOptions" Type="System.Cloud.DocumentDb.RequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tableOptions">The table options with <see cref="P:System.Cloud.DocumentDb.TableOptions.TableName" /> and region information provided.</param>
        <param name="requestOptions">The request options.</param>
        <param name="cancellationToken">The token represents request cancellation.</param>
        <summary>
            Updates existing table settings.
            </summary>
        <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> which wraps the asynchronous operation result.
            The result is <see langword="true" /> when the throughput replaced successfully.
            The <see langword="false" /> indicating the operation is pending.
            </returns>
        <remarks>
          <seealso cref="P:System.Cloud.DocumentDb.Throughput.Value" />.</remarks>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">Thrown when an error occurred on a database server side,
            including internal server error.</exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">Thrown when a request failed but can be retried.
            This includes throttling and server not available cases. </exception>
        <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A generic exception thrown in all other not covered above cases.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

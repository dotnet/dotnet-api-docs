<Type Name="MethodInvoker" FullName="System.Reflection.MethodInvoker">
  <TypeSignature Language="C#" Value="public sealed class MethodInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MethodInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.MethodInvoker" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MethodInvoker" />
  <TypeSignature Language="F#" Value="type MethodInvoker = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class MethodInvoker sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides methods to invoke the method specified by the provided <see cref="T:System.Reflection.MethodBase" />.</summary>
    <remarks>The methods in this class provide better performance than <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> when compatibility with that method isn't necessary and when the caller can cache the MethodInvoker instance for additional invoke calls. Unlike <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" />, the invoke methods in this class don't look up default values for arguments when <see cref="F:System.Type.Missing" /> is specified. In addition, the target method may be inlined for performance and not appear in stack traces.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Reflection.MethodInvoker Create (System.Reflection.MethodBase method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MethodInvoker Create(class System.Reflection.MethodBase method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MethodInvoker.Create(System.Reflection.MethodBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (method As MethodBase) As MethodInvoker" />
      <MemberSignature Language="F#" Value="static member Create : System.Reflection.MethodBase -&gt; System.Reflection.MethodInvoker" Usage="System.Reflection.MethodInvoker.Create method" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::MethodInvoker ^ Create(System::Reflection::MethodBase ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInvoker</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodBase" />
      </Parameters>
      <Docs>
        <param name="method">The method that will be invoked.</param>
        <summary>Creates a new instance of <see cref="T:System.Reflection.MethodInvoker" />.</summary>
        <returns>The new instance.</returns>
        <remarks>For performance, the resulting instance should be cached for additional calls.</remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="method" /> is not a runtime-based method.</exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object? Invoke (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MethodInvoker.Invoke(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (obj As Object) As Object" />
      <MemberSignature Language="F#" Value="member this.Invoke : obj -&gt; obj" Usage="methodInvoker.Invoke obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object on which to invoke the method. If the method is static, this argument is ignored.</param>
        <summary>Invokes the method using the specified arguments.</summary>
        <returns>An object containing the return value of the invoked method, or <see langword="null" /> if the invoked method does not have a return value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.TargetException">The <paramref name="obj" /> argument is <see langword="null" /> and the method is not static.

-or-

The method is not declared or inherited by the class of <paramref name="obj" />.</exception>
        <exception cref="T:System.InvalidOperationException">The type that declares the method is an open generic type.</exception>
        <exception cref="T:System.Reflection.TargetParameterCountException">An incorrect number of arguments was provided.</exception>
        <exception cref="T:System.NotSupportedException">The calling convention or signature is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object? Invoke (object? obj, object? arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(object obj, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MethodInvoker.Invoke(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (obj As Object, arg1 As Object) As Object" />
      <MemberSignature Language="F#" Value="member this.Invoke : obj * obj -&gt; obj" Usage="methodInvoker.Invoke (obj, arg1)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Object ^ obj, System::Object ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object on which to invoke the method. If the method is static, this argument is ignored.</param>
        <param name="arg1">The first argument for the invoked method.</param>
        <summary>Invokes the method using the specified arguments.</summary>
        <returns>An object containing the return value of the invoked method, or <see langword="null" /> if the invoked method does not have a return value.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc cref="M:System.Reflection.MethodInvoker.Invoke(System.Object)" />
        <exception cref="T:System.ArgumentException">The arguments do not match the signature of the invoked method.</exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object? Invoke (object? obj, Span&lt;object?&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(object obj, valuetype System.Span`1&lt;object&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MethodInvoker.Invoke(System.Object,System.Span{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (obj As Object, arguments As Span(Of Object)) As Object" />
      <MemberSignature Language="F#" Value="member this.Invoke : obj * Span&lt;obj&gt; -&gt; obj" Usage="methodInvoker.Invoke (obj, arguments)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Object ^ obj, Span&lt;System::Object ^&gt; arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="arguments" Type="System.Span&lt;System.Object&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 2 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 2 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="obj">The object on which to invoke the method. If the method is static, this argument is ignored.</param>
        <param name="arguments">The arguments for the invoked method.</param>
        <summary>Invokes the method using the specified arguments.</summary>
        <returns>An object containing the return value of the invoked method, or <see langword="null" /> if the invoked method does not have a return value.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc cref="M:System.Reflection.MethodInvoker.Invoke(System.Object)" />
        <exception cref="T:System.ArgumentException">The arguments do not match the signature of the invoked method.</exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object? Invoke (object? obj, object? arg1, object? arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(object obj, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MethodInvoker.Invoke(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (obj As Object, arg1 As Object, arg2 As Object) As Object" />
      <MemberSignature Language="F#" Value="member this.Invoke : obj * obj * obj -&gt; obj" Usage="methodInvoker.Invoke (obj, arg1, arg2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Object ^ obj, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object on which to invoke the method. If the method is static, this argument is ignored.</param>
        <param name="arg1">The first argument for the invoked method.</param>
        <param name="arg2">The second argument for the invoked method.</param>
        <summary>Invokes the method using the specified arguments.</summary>
        <returns>An object containing the return value of the invoked method, or <see langword="null" /> if the invoked method does not have a return value.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc cref="M:System.Reflection.MethodInvoker.Invoke(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object? Invoke (object? obj, object? arg1, object? arg2, object? arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(object obj, object arg1, object arg2, object arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MethodInvoker.Invoke(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (obj As Object, arg1 As Object, arg2 As Object, arg3 As Object) As Object" />
      <MemberSignature Language="F#" Value="member this.Invoke : obj * obj * obj * obj -&gt; obj" Usage="methodInvoker.Invoke (obj, arg1, arg2, arg3)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Object ^ obj, System::Object ^ arg1, System::Object ^ arg2, System::Object ^ arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
        <Parameter Name="arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object on which to invoke the method. If the method is static, this argument is ignored.</param>
        <param name="arg1">The first argument for the invoked method.</param>
        <param name="arg2">The second argument for the invoked method.</param>
        <param name="arg3">The third argument for the invoked method.</param>
        <summary>Invokes the method using the specified arguments.</summary>
        <returns>An object containing the return value of the invoked method, or <see langword="null" /> if the invoked method does not have a return value.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc cref="M:System.Reflection.MethodInvoker.Invoke(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object? Invoke (object? obj, object? arg1, object? arg2, object? arg3, object? arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(object obj, object arg1, object arg2, object arg3, object arg4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MethodInvoker.Invoke(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (obj As Object, arg1 As Object, arg2 As Object, arg3 As Object, arg4 As Object) As Object" />
      <MemberSignature Language="F#" Value="member this.Invoke : obj * obj * obj * obj * obj -&gt; obj" Usage="methodInvoker.Invoke (obj, arg1, arg2, arg3, arg4)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Object ^ obj, System::Object ^ arg1, System::Object ^ arg2, System::Object ^ arg3, System::Object ^ arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
        <Parameter Name="arg3" Type="System.Object" />
        <Parameter Name="arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object on which to invoke the method. If the method is static, this argument is ignored.</param>
        <param name="arg1">The first argument for the invoked method.</param>
        <param name="arg2">The second argument for the invoked method.</param>
        <param name="arg3">The third argument for the invoked method.</param>
        <param name="arg4">The fourth argument for the invoked method.</param>
        <summary>Invokes the method using the specified arguments.</summary>
        <returns>An object containing the return value of the invoked method, or <see langword="null" /> if the invoked method does not have a return value.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc cref="M:System.Reflection.MethodInvoker.Invoke(System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>

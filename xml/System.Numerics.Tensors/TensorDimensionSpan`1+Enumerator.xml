<Type Name="TensorDimensionSpan&lt;T&gt;+Enumerator" FullName="System.Numerics.Tensors.TensorDimensionSpan&lt;T&gt;+Enumerator">
  <TypeSignature Language="C#" Value="public ref struct TensorDimensionSpan&lt;T&gt;.Enumerator : System.Collections.Generic.IEnumerator&lt;System.Numerics.Tensors.TensorSpan&lt;T&gt;&gt;" FrameworkAlternate="net-10.0-pp;net-9.0-pp" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit TensorDimensionSpan`1/Enumerator&lt;T&gt; extends System.ValueType implements class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Numerics.Tensors.TensorSpan`1&lt;!T&gt;&gt;, class System.Collections.IEnumerator, class System.IDisposable" FrameworkAlternate="net-10.0-pp;net-9.0-pp" />
  <TypeSignature Language="DocId" Value="T:System.Numerics.Tensors.TensorDimensionSpan`1.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure TensorDimensionSpan(Of T).Enumerator&#xA;Implements IEnumerator(Of TensorSpan(Of T))" FrameworkAlternate="net-10.0-pp;net-9.0-pp" />
  <TypeSignature Language="F#" Value="type TensorDimensionSpan&lt;'T&gt;.Enumerator = struct&#xA;    interface IEnumerator&lt;TensorSpan&lt;'T&gt;&gt;&#xA;    interface IEnumerator&#xA;    interface IDisposable" FrameworkAlternate="net-10.0-pp;net-9.0-pp" />
  <TypeSignature Language="C++ CLI" Value="public: value class TensorDimensionSpan&lt;T&gt;::Enumerator : System::Collections::Generic::IEnumerator&lt;System::Numerics::Tensors::TensorSpan&lt;T&gt;&gt;" FrameworkAlternate="net-10.0-pp;net-9.0-pp" />
  <TypeSignature Language="C#" Value="public ref struct TensorDimensionSpan&lt;T&gt;.Enumerator" FrameworkAlternate="net-8.0-pp" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit TensorDimensionSpan`1/Enumerator&lt;T&gt; extends System.ValueType" FrameworkAlternate="net-8.0-pp" />
  <TypeSignature Language="VB.NET" Value="Public Structure TensorDimensionSpan(Of T).Enumerator" FrameworkAlternate="net-8.0-pp" />
  <TypeSignature Language="F#" Value="type TensorDimensionSpan&lt;'T&gt;.Enumerator = struct" FrameworkAlternate="net-8.0-pp" />
  <TypeSignature Language="C++ CLI" Value="public: value class TensorDimensionSpan&lt;T&gt;::Enumerator" FrameworkAlternate="net-8.0-pp" />
  <AssemblyInfo>
    <AssemblyName>System.Numerics.Tensors</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="net-10.0-pp;net-9.0-pp">
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;System.Numerics.Tensors.TensorSpan&lt;T&gt;&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-10.0-pp;net-9.0-pp">
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-10.0-pp;net-9.0-pp">
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.CompilerFeatureRequired("RefStructs")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.CompilerFeatureRequired("RefStructs")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsByRefLike]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsByRefLike&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enumerates the spans of a tensor dimension span.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Numerics.Tensors.TensorSpan&lt;T&gt; Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Numerics.Tensors.TensorSpan`1&lt;!T&gt; Current" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.Tensors.TensorDimensionSpan`1.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As TensorSpan(Of T)" />
      <MemberSignature Language="F#" Value="member this.Current : System.Numerics.Tensors.TensorSpan&lt;'T&gt;" Usage="System.Numerics.Tensors.TensorDimensionSpan&lt;'T&gt;.Enumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Numerics::Tensors::TensorSpan&lt;T&gt; Current { System::Numerics::Tensors::TensorSpan&lt;T&gt; get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="net-10.0-pp;net-9.0-pp">P:System.Collections.Generic.IEnumerator`1.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.Tensors.TensorSpan&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the span at the current position of the enumerator.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" FrameworkAlternate="net-10.0-pp;net-9.0-pp" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Tensors.TensorDimensionSpan`1.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="enumerator.MoveNext " FrameworkAlternate="net-10.0-pp;net-9.0-pp" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" FrameworkAlternate="net-10.0-pp;net-9.0-pp" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" FrameworkAlternate="net-8.0-pp" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; bool" Usage="enumerator.MoveNext " FrameworkAlternate="net-8.0-pp" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" FrameworkAlternate="net-8.0-pp" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="net-10.0-pp;net-9.0-pp">M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Advances the enumerator to the next element of the tensor span.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" FrameworkAlternate="net-10.0-pp;net-9.0-pp" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Tensors.TensorDimensionSpan`1.Enumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="enumerator.Reset " FrameworkAlternate="net-10.0-pp;net-9.0-pp" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" FrameworkAlternate="net-10.0-pp;net-9.0-pp" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" FrameworkAlternate="net-8.0-pp" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="enumerator.Reset " FrameworkAlternate="net-8.0-pp" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" FrameworkAlternate="net-8.0-pp" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="net-10.0-pp;net-9.0-pp">M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the enumerator to its initial position, which is before the first element in the tensor span.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="readonly object? System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.Tensors.TensorDimensionSpan`1.Enumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IEnumerator.Current : obj" Usage="System.Collections.IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IEnumerator::Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-10.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Tensors.TensorDimensionSpan`1.Enumerator.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="enumerator.System.IDisposable.Dispose " />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Tensors</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

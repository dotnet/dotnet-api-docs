<Type Name="FileConfigurationSource" FullName="Microsoft.Extensions.Configuration.FileConfigurationSource">
  <TypeSignature Language="C#" Value="public abstract class FileConfigurationSource : Microsoft.Extensions.Configuration.IConfigurationSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FileConfigurationSource extends System.Object implements class Microsoft.Extensions.Configuration.IConfigurationSource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Configuration.FileConfigurationSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FileConfigurationSource&#xA;Implements IConfigurationSource" />
  <TypeSignature Language="F#" Value="type FileConfigurationSource = class&#xA;    interface IConfigurationSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileConfigurationSource abstract : Microsoft::Extensions::Configuration::IConfigurationSource" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Configuration.FileExtensions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Configuration.IConfigurationSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Provides the base class for file-based <see cref="T:Microsoft.Extensions.Configuration.IConfigurationSource" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FileConfigurationSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.FileConfigurationSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FileConfigurationSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration.FileExtensions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of <see cref="T:Microsoft.Extensions.Configuration.FileConfigurationSource" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public abstract Microsoft.Extensions.Configuration.IConfigurationProvider Build (Microsoft.Extensions.Configuration.IConfigurationBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Configuration.IConfigurationProvider Build(class Microsoft.Extensions.Configuration.IConfigurationBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.FileConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Build (builder As IConfigurationBuilder) As IConfigurationProvider" />
      <MemberSignature Language="F#" Value="abstract member Build : Microsoft.Extensions.Configuration.IConfigurationBuilder -&gt; Microsoft.Extensions.Configuration.IConfigurationProvider" Usage="fileConfigurationSource.Build builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Microsoft::Extensions::Configuration::IConfigurationProvider ^ Build(Microsoft::Extensions::Configuration::IConfigurationBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Configuration.IConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration.FileExtensions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Configuration.IConfigurationProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Configuration.IConfigurationBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</param>
        <summary>
            Builds the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /> for this source.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureDefaults">
      <MemberSignature Language="C#" Value="public void EnsureDefaults (Microsoft.Extensions.Configuration.IConfigurationBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureDefaults(class Microsoft.Extensions.Configuration.IConfigurationBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.FileConfigurationSource.EnsureDefaults(Microsoft.Extensions.Configuration.IConfigurationBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureDefaults (builder As IConfigurationBuilder)" />
      <MemberSignature Language="F#" Value="member this.EnsureDefaults : Microsoft.Extensions.Configuration.IConfigurationBuilder -&gt; unit" Usage="fileConfigurationSource.EnsureDefaults builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureDefaults(Microsoft::Extensions::Configuration::IConfigurationBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration.FileExtensions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Configuration.IConfigurationBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</param>
        <summary>
            Called to use any default settings on the builder like the FileProvider or FileLoadExceptionHandler.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileProvider">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.FileProviders.IFileProvider? FileProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.FileProviders.IFileProvider FileProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Configuration.FileConfigurationSource.FileProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property FileProvider As IFileProvider" />
      <MemberSignature Language="F#" Value="member this.FileProvider : Microsoft.Extensions.FileProviders.IFileProvider with get, set" Usage="Microsoft.Extensions.Configuration.FileConfigurationSource.FileProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::FileProviders::IFileProvider ^ FileProvider { Microsoft::Extensions::FileProviders::IFileProvider ^ get(); void set(Microsoft::Extensions::FileProviders::IFileProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration.FileExtensions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.FileProviders.IFileProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the provider used to access the contents of the file.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoadException">
      <MemberSignature Language="C#" Value="public Action&lt;Microsoft.Extensions.Configuration.FileLoadExceptionContext&gt;? OnLoadException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class Microsoft.Extensions.Configuration.FileLoadExceptionContext&gt; OnLoadException" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Configuration.FileConfigurationSource.OnLoadException" />
      <MemberSignature Language="VB.NET" Value="Public Property OnLoadException As Action(Of FileLoadExceptionContext)" />
      <MemberSignature Language="F#" Value="member this.OnLoadException : Action&lt;Microsoft.Extensions.Configuration.FileLoadExceptionContext&gt; with get, set" Usage="Microsoft.Extensions.Configuration.FileConfigurationSource.OnLoadException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;Microsoft::Extensions::Configuration::FileLoadExceptionContext ^&gt; ^ OnLoadException { Action&lt;Microsoft::Extensions::Configuration::FileLoadExceptionContext ^&gt; ^ get(); void set(Action&lt;Microsoft::Extensions::Configuration::FileLoadExceptionContext ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration.FileExtensions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.Extensions.Configuration.FileLoadExceptionContext&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the action that's called if an uncaught exception occurs in FileConfigurationProvider.Load.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional">
      <MemberSignature Language="C#" Value="public bool Optional { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Optional" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Configuration.FileConfigurationSource.Optional" />
      <MemberSignature Language="VB.NET" Value="Public Property Optional As Boolean" />
      <MemberSignature Language="F#" Value="member this.Optional : bool with get, set" Usage="Microsoft.Extensions.Configuration.FileConfigurationSource.Optional" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Optional { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration.FileExtensions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that indicates whether loading the file is optional.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string? Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Configuration.FileConfigurationSource.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="Microsoft.Extensions.Configuration.FileConfigurationSource.Path" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration.FileExtensions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the path to the file.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReloadDelay">
      <MemberSignature Language="C#" Value="public int ReloadDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReloadDelay" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Configuration.FileConfigurationSource.ReloadDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property ReloadDelay As Integer" />
      <MemberSignature Language="F#" Value="member this.ReloadDelay : int with get, set" Usage="Microsoft.Extensions.Configuration.FileConfigurationSource.ReloadDelay" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReloadDelay { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration.FileExtensions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of milliseconds that reload will wait before calling Load.
            </summary>
        <value>
            The number of milliseconds that reload waits before calling Load. The default is 250.
            </value>
        <remarks>
            This delay helps avoid triggering reload before a file is completely written.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReloadOnChange">
      <MemberSignature Language="C#" Value="public bool ReloadOnChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReloadOnChange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Configuration.FileConfigurationSource.ReloadOnChange" />
      <MemberSignature Language="VB.NET" Value="Public Property ReloadOnChange As Boolean" />
      <MemberSignature Language="F#" Value="member this.ReloadOnChange : bool with get, set" Usage="Microsoft.Extensions.Configuration.FileConfigurationSource.ReloadOnChange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReloadOnChange { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration.FileExtensions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that indicates whether the source will be loaded if the underlying file changes.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveFileProvider">
      <MemberSignature Language="C#" Value="public void ResolveFileProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveFileProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.FileConfigurationSource.ResolveFileProvider" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveFileProvider ()" />
      <MemberSignature Language="F#" Value="member this.ResolveFileProvider : unit -&gt; unit" Usage="fileConfigurationSource.ResolveFileProvider " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveFileProvider();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration.FileExtensions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a physical file provider for the nearest existing directory if no file provider has been set, for absolute Path.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

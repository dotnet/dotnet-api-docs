<Type Name="IControlbar" FullName="Microsoft.CLRAdmin.IControlbar">
  <TypeSignature Language="C#" Value="public interface IControlbar" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IControlbar" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CLRAdmin.IControlbar" />
  <TypeSignature Language="VB.NET" Value="Public Interface IControlbar" />
  <TypeSignature Language="C++ CLI" Value="public interface class IControlbar" />
  <TypeSignature Language="F#" Value="type IControlbar = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorcfg</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("69FB811E-6C1C-11D0-A2CB-00C04FD909DD")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (Microsoft.CLRAdmin.MMC_CONTROL_TYPE nType, object lpUnknown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(valuetype Microsoft.CLRAdmin.MMC_CONTROL_TYPE nType, object lpUnknown) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IControlbar.Attach(Microsoft.CLRAdmin.MMC_CONTROL_TYPE,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (nType As MMC_CONTROL_TYPE, lpUnknown As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(Microsoft::CLRAdmin::MMC_CONTROL_TYPE nType, System::Object ^ lpUnknown);" />
      <MemberSignature Language="F#" Value="abstract member Attach : Microsoft.CLRAdmin.MMC_CONTROL_TYPE * obj -&gt; unit" Usage="iControlbar.Attach (nType, lpUnknown)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nType" Type="Microsoft.CLRAdmin.MMC_CONTROL_TYPE" />
        <Parameter Name="lpUnknown" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="nType">A value that specifies the type of control to be associated with the control bar, taken from the <see cref="T:Microsoft.CLRAdmin.MMC_CONTROL_TYPE" /> enumeration.</param>
        <param name="lpUnknown">A pointer to the IUnknown interface on the control object to be inserted.</param>
        <summary>Allows the snap-in to associate a control with a control bar.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (Microsoft.CLRAdmin.MMC_CONTROL_TYPE nType, Microsoft.CLRAdmin.IExtendControlbar pExtendControlbar, out object ppUnknown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Create(valuetype Microsoft.CLRAdmin.MMC_CONTROL_TYPE nType, class Microsoft.CLRAdmin.IExtendControlbar pExtendControlbar, [out] object&amp; ppUnknown) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IControlbar.Create(Microsoft.CLRAdmin.MMC_CONTROL_TYPE,Microsoft.CLRAdmin.IExtendControlbar,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create (nType As MMC_CONTROL_TYPE, pExtendControlbar As IExtendControlbar, ByRef ppUnknown As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(Microsoft::CLRAdmin::MMC_CONTROL_TYPE nType, Microsoft::CLRAdmin::IExtendControlbar ^ pExtendControlbar, [Runtime::InteropServices::Out] System::Object ^ % ppUnknown);" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.CLRAdmin.MMC_CONTROL_TYPE * Microsoft.CLRAdmin.IExtendControlbar * obj -&gt; unit" Usage="iControlbar.Create (nType, pExtendControlbar, ppUnknown)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nType" Type="Microsoft.CLRAdmin.MMC_CONTROL_TYPE" />
        <Parameter Name="pExtendControlbar" Type="Microsoft.CLRAdmin.IExtendControlbar" />
        <Parameter Name="ppUnknown" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="nType">A value that specifies the type of control to be associated; taken from the <see cref="T:Microsoft.CLRAdmin.MMC_CONTROL_TYPE" /> enumeration.</param>
        <param name="pExtendControlbar">A pointer to the snap-in's <see cref="T:Microsoft.CLRAdmin.IExtendControlbar" /> interface that is to be associated with the control (toolbar or menu button) that will be created. Notifications generated by the new control will be sent to <see cref="M:Microsoft.CLRAdmin.IExtendControlbar.ControlbarNotify(System.UInt32,System.Int32,System.Int32)" />.</param>
        <param name="ppUnknown">A pointer to the address of the IUnknown interface of the control that was created.</param>
        <summary>Creates and returns the control requested by the snap-in.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach (object lpUnknown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Detach(object lpUnknown) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IControlbar.Detach(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Detach (lpUnknown As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Detach(System::Object ^ lpUnknown);" />
      <MemberSignature Language="F#" Value="abstract member Detach : obj -&gt; unit" Usage="iControlbar.Detach lpUnknown" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lpUnknown" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="lpUnknown">A pointer to the IUnknown interface on the control object that represents the control removed.</param>
        <summary>Breaks the association between a control and the control bar. This command removes or detaches the control from the control bar on which it is displayed.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="IComponentData" FullName="Microsoft.CLRAdmin.IComponentData">
  <TypeSignature Language="C#" Value="public interface IComponentData" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComponentData" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CLRAdmin.IComponentData" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComponentData" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComponentData" />
  <TypeSignature Language="F#" Value="type IComponentData = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorcfg</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("955AB28A-5218-11D0-A985-00C04FD8D565")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareObjects">
      <MemberSignature Language="C#" Value="public int CompareObjects (Microsoft.CLRAdmin.IDataObject lpDataObjectA, Microsoft.CLRAdmin.IDataObject lpDataObjectB);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareObjects(class Microsoft.CLRAdmin.IDataObject lpDataObjectA, class Microsoft.CLRAdmin.IDataObject lpDataObjectB) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IComponentData.CompareObjects(Microsoft.CLRAdmin.IDataObject,Microsoft.CLRAdmin.IDataObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareObjects (lpDataObjectA As IDataObject, lpDataObjectB As IDataObject) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareObjects(Microsoft::CLRAdmin::IDataObject ^ lpDataObjectA, Microsoft::CLRAdmin::IDataObject ^ lpDataObjectB);" />
      <MemberSignature Language="F#" Value="abstract member CompareObjects : Microsoft.CLRAdmin.IDataObject * Microsoft.CLRAdmin.IDataObject -&gt; int" Usage="iComponentData.CompareObjects (lpDataObjectA, lpDataObjectB)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lpDataObjectA" Type="Microsoft.CLRAdmin.IDataObject" />
        <Parameter Name="lpDataObjectB" Type="Microsoft.CLRAdmin.IDataObject" />
      </Parameters>
      <Docs>
        <param name="lpDataObjectA">A pointer to the first object exposing an <see cref="T:Microsoft.CLRAdmin.IDataObject" /> interface that is to be compared.</param>
        <param name="lpDataObjectB">A pointer to the second object exposing an <see cref="T:Microsoft.CLRAdmin.IDataObject" /> interface that is to be compared.</param>
        <summary>Enables a snap-in to compare two data objects acquired through <see cref="M:Microsoft.CLRAdmin.IComponentData.QueryDataObject(System.Int32,System.UInt32,Microsoft.CLRAdmin.IDataObject@)" />. Be aware that data objects can be acquired from two different instances of <see cref="T:Microsoft.CLRAdmin.IComponentData" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="public void CreateComponent (out Microsoft.CLRAdmin.IComponent ppComponent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateComponent([out] class Microsoft.CLRAdmin.IComponent&amp; ppComponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IComponentData.CreateComponent(Microsoft.CLRAdmin.IComponent@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateComponent (ByRef ppComponent As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateComponent([Runtime::InteropServices::Out] Microsoft::CLRAdmin::IComponent ^ % ppComponent);" />
      <MemberSignature Language="F#" Value="abstract member CreateComponent : IComponent -&gt; unit" Usage="iComponentData.CreateComponent ppComponent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppComponent" Type="Microsoft.CLRAdmin.IComponent" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppComponent">A pointer to the location that stores the newly created pointer to <see cref="T:Microsoft.CLRAdmin.IComponent" />.</param>
        <summary>Creates an instance of the <see cref="T:Microsoft.CLRAdmin.IComponent" /> that will be associated with this <see cref="T:Microsoft.CLRAdmin.IComponentData" /> interface.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Destroy">
      <MemberSignature Language="C#" Value="public void Destroy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Destroy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IComponentData.Destroy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Destroy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Destroy();" />
      <MemberSignature Language="F#" Value="abstract member Destroy : unit -&gt; unit" Usage="iComponentData.Destroy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayInfo">
      <MemberSignature Language="C#" Value="public void GetDisplayInfo (ref Microsoft.CLRAdmin.SCOPEDATAITEM ResultDataItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetDisplayInfo(valuetype Microsoft.CLRAdmin.SCOPEDATAITEM&amp; ResultDataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IComponentData.GetDisplayInfo(Microsoft.CLRAdmin.SCOPEDATAITEM@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetDisplayInfo (ByRef ResultDataItem As SCOPEDATAITEM)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetDisplayInfo(Microsoft::CLRAdmin::SCOPEDATAITEM % ResultDataItem);" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayInfo : SCOPEDATAITEM -&gt; unit" Usage="iComponentData.GetDisplayInfo ResultDataItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ResultDataItem" Type="Microsoft.CLRAdmin.SCOPEDATAITEM" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ResultDataItem">A pointer to a <see cref="T:Microsoft.CLRAdmin.SCOPEDATAITEM" /> structure. On input, the structure mask member specifies the type of information required and the lParam member identifies the item of interest.</param>
        <summary>Retrieves display information for a scope item.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (object pUnknown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object pUnknown) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IComponentData.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (pUnknown As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::Object ^ pUnknown);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit" Usage="iComponentData.Initialize pUnknown" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnknown" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pUnknown">A pointer to the console IUnknown interface. This interface pointer can be used to call QueryInterface for <see cref="T:Microsoft.CLRAdmin.IConsole2" /> and <see cref="T:Microsoft.CLRAdmin.IConsoleNameSpace2" />.</param>
        <summary>Provides an entry point to the console.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Notify">
      <MemberSignature Language="C#" Value="public int Notify (Microsoft.CLRAdmin.IDataObject lpDataObject, uint aevent, IntPtr arg, IntPtr param);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Notify(class Microsoft.CLRAdmin.IDataObject lpDataObject, unsigned int32 aevent, native int arg, native int param) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IComponentData.Notify(Microsoft.CLRAdmin.IDataObject,System.UInt32,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Function Notify (lpDataObject As IDataObject, aevent As UInteger, arg As IntPtr, param As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Notify(Microsoft::CLRAdmin::IDataObject ^ lpDataObject, System::UInt32 aevent, IntPtr arg, IntPtr param);" />
      <MemberSignature Language="F#" Value="abstract member Notify : Microsoft.CLRAdmin.IDataObject * uint32 * nativeint * nativeint -&gt; int" Usage="iComponentData.Notify (lpDataObject, aevent, arg, param)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lpDataObject" Type="Microsoft.CLRAdmin.IDataObject" />
        <Parameter Name="aevent" Type="System.UInt32" />
        <Parameter Name="arg" Type="System.IntPtr" />
        <Parameter Name="param" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="lpDataObject">A pointer to the data object of the currently selected item.</param>
        <param name="aevent">Identifies an action taken by a user.</param>
        <param name="arg"Depends on the notification type.</param>
        <param name="param">Depends on the notification type.</param>
        <summary>Notifies the snap-in of actions taken by the user.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="QueryDataObject">
      <MemberSignature Language="C#" Value="public void QueryDataObject (int cookie, uint type, out Microsoft.CLRAdmin.IDataObject ppDataObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QueryDataObject(int32 cookie, unsigned int32 type, [out] class Microsoft.CLRAdmin.IDataObject&amp; ppDataObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IComponentData.QueryDataObject(System.Int32,System.UInt32,Microsoft.CLRAdmin.IDataObject@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub QueryDataObject (cookie As Integer, type As UInteger, ByRef ppDataObject As IDataObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void QueryDataObject(int cookie, System::UInt32 type, [Runtime::InteropServices::Out] Microsoft::CLRAdmin::IDataObject ^ % ppDataObject);" />
      <MemberSignature Language="F#" Value="abstract member QueryDataObject : int * uint32 * IDataObject -&gt; unit" Usage="iComponentData.QueryDataObject (cookie, type, ppDataObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Int32" />
        <Parameter Name="type" Type="System.UInt32" />
        <Parameter Name="ppDataObject" Type="Microsoft.CLRAdmin.IDataObject" RefType="out" />
      </Parameters>
      <Docs>
        <param name="cookie">A value that specifies the unique identifier for which the data object is required. When called for virtual list items, which do not have cookies, this parameter is set to the item list index.</param>
        <param name="type">A value that specifies the data object as one of the following.
        
| Value | Description |
| --- | --- |
| CCT\_SCOPE = 0x8000 | Data object for the scope item. |
| CCT\_RESULT = 0x8001 | Data object for the result item. |
| CCT\_SNAPIN\_MANAGER = 0x8002 | Data object for the Snap-In Manager context. |
| CCT\_UNINITIALIZED = 0xFFFF | Data object has an invalid type. |</param>
        <param name="ppDataObject">A pointer to the address of the returned data object.</param>
        <summary>Returns a data object that can be used to retrieve context information for the specified cookie.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="IStream" FullName="Microsoft.CLRAdmin.IStream">
  <TypeSignature Language="C#" Value="public interface IStream" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStream" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CLRAdmin.IStream" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStream" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStream" />
  <TypeSignature Language="F#" Value="type IStream = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorcfg</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0000000c-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public void Clone (out Microsoft.CLRAdmin.IStream ppstm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clone([out] class Microsoft.CLRAdmin.IStream&amp; ppstm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IStream.Clone(Microsoft.CLRAdmin.IStream@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clone (ByRef ppstm As IStream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clone([Runtime::InteropServices::Out] Microsoft::CLRAdmin::IStream ^ % ppstm);" />
      <MemberSignature Language="F#" Value="abstract member Clone : IStream -&gt; unit" Usage="iStream.Clone ppstm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppstm" Type="Microsoft.CLRAdmin.IStream" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppstm">When this method returns, contains the new stream object. This parameter is passed uninitialized.</param>
        <summary>Creates a new stream object with its own seek pointer that references the same bytes as the original stream.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (uint grfCommitFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(unsigned int32 grfCommitFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IStream.Commit(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit (grfCommitFlags As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::UInt32 grfCommitFlags);" />
      <MemberSignature Language="F#" Value="abstract member Commit : uint32 -&gt; unit" Usage="iStream.Commit grfCommitFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grfCommitFlags" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="grfCommitFlags">A value that controls how the changes for the stream object are committed.</param>
        <summary>Ensures that any changes made to a stream object that is open in transacted mode are reflected in the parent storage.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Microsoft.CLRAdmin.IStream pstm, ulong cb, out ulong pcbRead, out ulong pcbWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class Microsoft.CLRAdmin.IStream pstm, unsigned int64 cb, [out] unsigned int64&amp; pcbRead, [out] unsigned int64&amp; pcbWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IStream.CopyTo(Microsoft.CLRAdmin.IStream,System.UInt64,System.UInt64@,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (pstm As IStream, cb As ULong, ByRef pcbRead As ULong, ByRef pcbWritten As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Microsoft::CLRAdmin::IStream ^ pstm, System::UInt64 cb, [Runtime::InteropServices::Out] System::UInt64 % pcbRead, [Runtime::InteropServices::Out] System::UInt64 % pcbWritten);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Microsoft.CLRAdmin.IStream * uint64 * uint64 * uint64 -&gt; unit" Usage="iStream.CopyTo (pstm, cb, pcbRead, pcbWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pstm" Type="Microsoft.CLRAdmin.IStream" />
        <Parameter Name="cb" Type="System.UInt64" />
        <Parameter Name="pcbRead" Type="System.UInt64" RefType="out" />
        <Parameter Name="pcbWritten" Type="System.UInt64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pstm">A reference to the destination stream.</param>
        <param name="cb">The number of bytes to copy from the source stream.</param>
        <param name="pcbRead">On successful return, contains the actual number of bytes read from the source.</param>
        <param name="pcbWritten">On successful return, contains the actual number of bytes written to the destination.</param>
        <summary>Copies a specified number of bytes from the current seek pointer in the stream to the current seek pointer in another stream.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LockRegion">
      <MemberSignature Language="C#" Value="public void LockRegion (ulong libOffset, ulong cb, uint dwLockType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LockRegion(unsigned int64 libOffset, unsigned int64 cb, unsigned int32 dwLockType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IStream.LockRegion(System.UInt64,System.UInt64,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LockRegion (libOffset As ULong, cb As ULong, dwLockType As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LockRegion(System::UInt64 libOffset, System::UInt64 cb, System::UInt32 dwLockType);" />
      <MemberSignature Language="F#" Value="abstract member LockRegion : uint64 * uint64 * uint32 -&gt; unit" Usage="iStream.LockRegion (libOffset, cb, dwLockType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libOffset" Type="System.UInt64" />
        <Parameter Name="cb" Type="System.UInt64" />
        <Parameter Name="dwLockType" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="libOffset">The byte offset for the beginning of the range.</param>
        <param name="cb">The length of the range, in bytes, to restrict.</param>
        <param name="dwLockType">The requested restrictions on accessing the range.</param>
        <summary>Restricts access to a specified range of bytes in the stream.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public void Read (IntPtr pv, uint cb, out uint pcbRead);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Read(native int pv, unsigned int32 cb, [out] unsigned int32&amp; pcbRead) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IStream.Read(System.IntPtr,System.UInt32,System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Read (pv As IntPtr, cb As UInteger, ByRef pcbRead As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Read(IntPtr pv, System::UInt32 cb, [Runtime::InteropServices::Out] System::UInt32 % pcbRead);" />
      <MemberSignature Language="F#" Value="abstract member Read : nativeint * uint32 * uint32 -&gt; unit" Usage="iStream.Read (pv, cb, pcbRead)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pv" Type="System.IntPtr" />
        <Parameter Name="cb" Type="System.UInt32" />
        <Parameter Name="pcbRead" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pv">When this method returns, contains the data read from the stream. This parameter is passed uninitialized.</param>
        <param name="cb">The number of bytes to read from the stream object.</param>
        <param name="pcbRead">A pointer to a <see langword="ULONG" /> variable that receives the actual number of bytes read from the stream object.</param>
        <summary>Reads a specified number of bytes from the stream object into memory starting at the current seek pointer.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Revert">
      <MemberSignature Language="C#" Value="public void Revert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Revert() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IStream.Revert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Revert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Revert();" />
      <MemberSignature Language="F#" Value="abstract member Revert : unit -&gt; unit" Usage="iStream.Revert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Discards all changes that have been made to a transacted stream since the last <see cref="M:Microsoft.CLRAdmin.IStream.Commit(System.UInt32)" /> call.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (long dlibMove, uint dwOrigin, out ulong plibNewPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Seek(int64 dlibMove, unsigned int32 dwOrigin, [out] unsigned int64&amp; plibNewPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IStream.Seek(System.Int64,System.UInt32,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (dlibMove As Long, dwOrigin As UInteger, ByRef plibNewPosition As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(long dlibMove, System::UInt32 dwOrigin, [Runtime::InteropServices::Out] System::UInt64 % plibNewPosition);" />
      <MemberSignature Language="F#" Value="abstract member Seek : int64 * uint32 * uint64 -&gt; unit" Usage="iStream.Seek (dlibMove, dwOrigin, plibNewPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dlibMove" Type="System.Int64" />
        <Parameter Name="dwOrigin" Type="System.UInt32" />
        <Parameter Name="plibNewPosition" Type="System.UInt64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="dlibMove">The displacement to add to <paramref name="dwOrigin" />.</param>
        <param name="dwOrigin">The origin of the seek. The origin can be the beginning of the file, the current seek pointer, or the end of the file.</param>
        <param name="plibNewPosition">On successful return, contains the offset of the seek pointer from the beginning of the stream.</param>
        <summary>Changes the seek pointer to a new location relative to the beginning of the stream, to the end of the stream, or to the current seek pointer.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SetSize">
      <MemberSignature Language="C#" Value="public void SetSize (ulong libNewSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSize(unsigned int64 libNewSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IStream.SetSize(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSize (libNewSize As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSize(System::UInt64 libNewSize);" />
      <MemberSignature Language="F#" Value="abstract member SetSize : uint64 -&gt; unit" Usage="iStream.SetSize libNewSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libNewSize" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="libNewSize">The new size of the stream as a number of bytes.</param>
        <summary>Changes the size of the stream object.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Stat">
      <MemberSignature Language="C#" Value="public void Stat (out Microsoft.CLRAdmin.STATSTG pstatstg, uint grfStatFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stat([out] valuetype Microsoft.CLRAdmin.STATSTG&amp; pstatstg, unsigned int32 grfStatFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IStream.Stat(Microsoft.CLRAdmin.STATSTG@,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stat (ByRef pstatstg As STATSTG, grfStatFlag As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stat([Runtime::InteropServices::Out] Microsoft::CLRAdmin::STATSTG % pstatstg, System::UInt32 grfStatFlag);" />
      <MemberSignature Language="F#" Value="abstract member Stat : STATSTG * uint32 -&gt; unit" Usage="iStream.Stat (pstatstg, grfStatFlag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pstatstg" Type="Microsoft.CLRAdmin.STATSTG" RefType="out" />
        <Parameter Name="grfStatFlag" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="pstatstg">When this method returns, contains a <see langword="STATSTG" /> structure that describes this stream object. This parameter is passed uninitialized.</param>
        <param name="grfStatFlag">Members in the <see langword="STATSTG" /> structure that this method does not return, thus saving some memory allocation operations.</param>
        <summary>Retrieves the <see cref="T:Microsoft.CLRAdmin.STATSTG" /> structure for this stream.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="UnlockRegion">
      <MemberSignature Language="C#" Value="public void UnlockRegion (ulong libOffset, ulong cb, uint dwLockType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnlockRegion(unsigned int64 libOffset, unsigned int64 cb, unsigned int32 dwLockType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IStream.UnlockRegion(System.UInt64,System.UInt64,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnlockRegion (libOffset As ULong, cb As ULong, dwLockType As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnlockRegion(System::UInt64 libOffset, System::UInt64 cb, System::UInt32 dwLockType);" />
      <MemberSignature Language="F#" Value="abstract member UnlockRegion : uint64 * uint64 * uint32 -&gt; unit" Usage="iStream.UnlockRegion (libOffset, cb, dwLockType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libOffset" Type="System.UInt64" />
        <Parameter Name="cb" Type="System.UInt64" />
        <Parameter Name="dwLockType" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="libOffset">The byte offset for the beginning of the range.</param>
        <param name="cb">The length, in bytes, of the range to restrict.</param>
        <param name="dwLockType">The access restrictions previously placed on the range.</param>
        <summary>Removes the access restriction on a range of bytes previously restricted with the <see cref="M:Microsoft.CLRAdmin.IStream.LockRegion(System.UInt64,System.UInt64,System.UInt32)" /> method.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (IntPtr pv, uint cb, out uint pcbWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(native int pv, unsigned int32 cb, [out] unsigned int32&amp; pcbWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IStream.Write(System.IntPtr,System.UInt32,System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (pv As IntPtr, cb As UInteger, ByRef pcbWritten As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(IntPtr pv, System::UInt32 cb, [Runtime::InteropServices::Out] System::UInt32 % pcbWritten);" />
      <MemberSignature Language="F#" Value="abstract member Write : nativeint * uint32 * uint32 -&gt; unit" Usage="iStream.Write (pv, cb, pcbWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pv" Type="System.IntPtr" />
        <Parameter Name="cb" Type="System.UInt32" />
        <Parameter Name="pcbWritten" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pv">The buffer to write this stream to.</param>
        <param name="cb">The number of bytes to write to the stream.</param>
        <param name="pcbWritten">On successful return, contains the actual number of bytes written to the stream object. If the caller sets this pointer to <see cref="F:System.IntPtr.Zero" />, this method does not provide the actual number of bytes written.</param>
        <summary>Writes a specified number of bytes into the stream object starting at the current seek pointer.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>

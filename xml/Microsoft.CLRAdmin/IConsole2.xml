<Type Name="IConsole2" FullName="Microsoft.CLRAdmin.IConsole2">
  <TypeSignature Language="C#" Value="public interface IConsole2" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IConsole2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CLRAdmin.IConsole2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IConsole2" />
  <TypeSignature Language="C++ CLI" Value="public interface class IConsole2" />
  <TypeSignature Language="F#" Value="type IConsole2 = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorcfg</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("103D842A-AA63-11D1-A7E1-00C04FD8D565")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public void Expand (int hItem, int bExpand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Expand(int32 hItem, int32 bExpand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IConsole2.Expand(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Expand (hItem As Integer, bExpand As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Expand(int hItem, int bExpand);" />
      <MemberSignature Language="F#" Value="abstract member Expand : int * int -&gt; unit" Usage="iConsole2.Expand (hItem, bExpand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hItem" Type="System.Int32" />
        <Parameter Name="bExpand" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hItem">A handle to the item to expand.</param>
        <param name="bExpand">A value that specifies whether to expand or collapse the item. <see langword="true" /> expands the item. <see langword="false" /> collapses the item.</param>
        <summary>Enables the snap-in to expand or collapse an item in the scope pane.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetMainWindow">
      <MemberSignature Language="C#" Value="public void GetMainWindow (out IntPtr phwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetMainWindow([out] native int&amp; phwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IConsole2.GetMainWindow(System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetMainWindow (ByRef phwnd As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetMainWindow([Runtime::InteropServices::Out] IntPtr % phwnd);" />
      <MemberSignature Language="F#" Value="abstract member GetMainWindow : nativeint -&gt; unit" Usage="iConsole2.GetMainWindow phwnd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phwnd" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="phwnd">A pointer to a variable that receives the window handle.</param>
        <summary>Retrieves a handle to the main frame window.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsTaskpadViewPreferred">
      <MemberSignature Language="C#" Value="public void IsTaskpadViewPreferred ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IsTaskpadViewPreferred() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IConsole2.IsTaskpadViewPreferred" />
      <MemberSignature Language="VB.NET" Value="Public Sub IsTaskpadViewPreferred ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IsTaskpadViewPreferred();" />
      <MemberSignature Language="F#" Value="abstract member IsTaskpadViewPreferred : unit -&gt; unit" Usage="iConsole2.IsTaskpadViewPreferred " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageBox">
      <MemberSignature Language="C#" Value="public void MessageBox (string lpszText, string lpszTitle, uint fuStyle, ref int piRetval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MessageBox(string lpszText, string lpszTitle, unsigned int32 fuStyle, int32&amp; piRetval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IConsole2.MessageBox(System.String,System.String,System.UInt32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MessageBox (lpszText As String, lpszTitle As String, fuStyle As UInteger, ByRef piRetval As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MessageBox(System::String ^ lpszText, System::String ^ lpszTitle, System::UInt32 fuStyle, int % piRetval);" />
      <MemberSignature Language="F#" Value="abstract member MessageBox : string * string * uint32 * int -&gt; unit" Usage="iConsole2.MessageBox (lpszText, lpszTitle, fuStyle, piRetval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lpszText" Type="System.String" />
        <Parameter Name="lpszTitle" Type="System.String" />
        <Parameter Name="fuStyle" Type="System.UInt32" />
        <Parameter Name="piRetval" Type="System.Int32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="lpszText">A pointer to a null-terminated string that contains the message to be displayed.</param>
        <param name="lpszTitle">A pointer to a null-terminated string used for the message box title. If this parameter is <see langword="null" />, the default title "Error" is used.</param>
        <param name="fuStyle">A value that specifies a set of bit flags that determine the contents and behavior of the message box. This parameter can be a combination of flags from the following groups of flags.
        
Specify one of the following flags to indicate which buttons appear in the message box:
| Value | Description |
| --- | --- |
| MB\_ABORTRETRYIGNORE | The message box contains three buttons: Abort, Retry, and Ignore. |
| MB\_OK | The message box contains one button: OK. This is the default. |
| MB\_OKCANCEL | The message box contains two buttons: OK and Cancel. |
| MB\_RETRYCANCEL | The message box contains two buttons: Retry and Cancel. |
| MB\_YESNO | The message box contains two buttons: Yes and No. |
| MB\_YESNOCANCEL | The message box contains three buttons: Yes, No, and Cancel. |

Specify one of the following flags to indicate which icon appears in the message box:
| Value | Description |
| --- | --- |
| MB\_ICONEXCLAMATION, MB\_ICONWARNING | An exclamation point icon appears in the message box. |
| MB\_ICONINFORMATION, MB\_ICONASTERISK | An icon consisting of an "I" in a circle appears in the message box. |
| MB\_ICONQUESTION | A question-mark icon appears in the message box. |
| MB\_ICONSTOP, MB\_ICONERROR, MB\_ICONHAND | A stop sign icon appears in the message box. |

Specify one of the following flags to indicate the default button:
| Value | Description |
| --- | --- |
| MB\_DEFBUTTON1 | The first button is the default button unless one of the other flags in this group is specified as the default. |
| MB\_DEFBUTTON2 | The second button is the default button. |
| MB\_DEFBUTTON3 | The third button is the default button. |
| MB\_DEFBUTTON4 | The fourth button is the default button. |

Specify one of the following flags to indicate the modality of the dialog box:
| Value | Description |
| --- | --- |
| MB\_APPLMODAL | The user must respond to the message box before continuing work in the current window. However, the user can move to the windows of other applications and work in those windows. The default is MB\_APPLMODAL if neither MB\_SYSTEMMODAL nor MB\_TASKMODAL is specified. |
| MB\_SYSTEMMODAL | All applications are suspended until the user responds to the message box. System-modal message boxes are used to notify the user of serious, potentially damaging errors that require immediate attention and should be used sparingly. |
| MB\_TASKMODAL | This flag is reserved for a calling application or library that does not have a window handle available. |

In addition, you can specify the following flags:
| Value | Description |
| --- | --- |
| MB\_DEFAULT\_DESKTOP\_ONLY | The desktop currently receiving input must be a default desktop; otherwise, the function fails. A default desktop is one an application runs on after the user has logged on. |
| MB\_HELP | Adds a Help button to the message box. Choosing the Help button or pressing F1 generates a Help event. |
| MB\_RIGHT | The text is right-justified. |
| MB\_RTLREADING | Displays message and caption text using right-to-left reading order for Hebrew and Arabic systems. |
| MB\_SETFOREGROUND | The message box becomes the foreground window. |
| MB\_TOPMOST | The message box is created with the WS\_EX\_TOPMOST window style. |
| MB\_SERVICE\_NOTIFICATION | The caller is a service notifying the user of an event. The function displays a message box on the current active desktop, even if there is no user logged on to the computer. |
| MB\_SERVICE\_NOTIFICATION\_NT3x | This value corresponds to the value defined for MB\_SERVICE\_NOTIFICATION for earlier versions of Windows. |</param>
        <param name="piRetval">A pointer to the return value.</param>
        <summary>Displays a message box.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NewWindow">
      <MemberSignature Language="C#" Value="public void NewWindow (int hScopeItem, uint lOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NewWindow(int32 hScopeItem, unsigned int32 lOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IConsole2.NewWindow(System.Int32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NewWindow (hScopeItem As Integer, lOptions As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NewWindow(int hScopeItem, System::UInt32 lOptions);" />
      <MemberSignature Language="F#" Value="abstract member NewWindow : int * uint32 -&gt; unit" Usage="iConsole2.NewWindow (hScopeItem, lOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hScopeItem" Type="System.Int32" />
        <Parameter Name="lOptions" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="hScopeItem">The scope item that forms the root of the new window.</param>
        <param name="lOptions">Options used to create the new window are listed in the following list.
| Value | Description |
| --- | --- |
| MMC\_NW\_OPTION\_NONE | Display a new window with default window settings. This is the programmatic equivalent to selecting the New Window From Here command from the View context menu. |
| MMC\_NW\_OPTION\_NOSCOPEPANE | Hide the scope pane (Console Tree pane) in the new window. |
| MMC\_NW\_OPTION\_NOTOOLBARS | Hide the standard toolbars in the new window. If the snap-in has custom toolbar buttons and menus, they will appear. |
| MMC\_NW\_OPTION\_SHORTTITLE | This option is not supported and its definition exists only for backward compatibility. |
| MMC\_NW\_OPTION\_CUSTOMTITLE | Use the custom title provided by the snap-in. Title bar text contains the display name specified by the item data object implementation of the CCF\_DISPLAY\_NAME. |
| MMC\_NW\_OPTION\_NOPERSIST | Do not save the new window to the .msc file. |</param>
        <summary>Creates a new multiple-document interface (MDI) child window rooted at the specified scope item.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="QueryConsoleVerb">
      <MemberSignature Language="C#" Value="public void QueryConsoleVerb (out Microsoft.CLRAdmin.IConsoleVerb ppConsoleVerb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QueryConsoleVerb([out] class Microsoft.CLRAdmin.IConsoleVerb&amp; ppConsoleVerb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IConsole2.QueryConsoleVerb(Microsoft.CLRAdmin.IConsoleVerb@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub QueryConsoleVerb (ByRef ppConsoleVerb As IConsoleVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void QueryConsoleVerb([Runtime::InteropServices::Out] Microsoft::CLRAdmin::IConsoleVerb ^ % ppConsoleVerb);" />
      <MemberSignature Language="F#" Value="abstract member QueryConsoleVerb : IConsoleVerb -&gt; unit" Usage="iConsole2.QueryConsoleVerb ppConsoleVerb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppConsoleVerb" Type="Microsoft.CLRAdmin.IConsoleVerb" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppConsoleVerb">A pointer to the address of a variable that receives the <see cref="T:Microsoft.CLRAdmin.IConsoleVerb" /> interface pointer.</param>
        <summary>Queries for the <see cref="T:Microsoft.CLRAdmin.IConsoleVerb" /> interface.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="QueryResultImageList">
      <MemberSignature Language="C#" Value="public void QueryResultImageList (out Microsoft.CLRAdmin.IImageList ppImageList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QueryResultImageList([out] class Microsoft.CLRAdmin.IImageList&amp; ppImageList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IConsole2.QueryResultImageList(Microsoft.CLRAdmin.IImageList@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub QueryResultImageList (ByRef ppImageList As IImageList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void QueryResultImageList([Runtime::InteropServices::Out] Microsoft::CLRAdmin::IImageList ^ % ppImageList);" />
      <MemberSignature Language="F#" Value="abstract member QueryResultImageList : IImageList -&gt; unit" Usage="iConsole2.QueryResultImageList ppImageList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppImageList" Type="Microsoft.CLRAdmin.IImageList" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppImageList">Address of a variable that receives the <see cref="T:Microsoft.CLRAdmin.IImageList" /> interface pointer.</param>
        <summary>Retrieves the console-provided result-view image list. This image list should be used only if the snap-in is using the default list view.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="QueryResultView">
      <MemberSignature Language="C#" Value="public void QueryResultView (out object pUnknown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QueryResultView([out] object&amp; pUnknown) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IConsole2.QueryResultView(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub QueryResultView (ByRef pUnknown As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void QueryResultView([Runtime::InteropServices::Out] System::Object ^ % pUnknown);" />
      <MemberSignature Language="F#" Value="abstract member QueryResultView : obj -&gt; unit" Usage="iConsole2.QueryResultView pUnknown" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnknown" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pUnknown">A pointer to the location of the <see cref="T:IUnknown" /> interface pointer to the result view object.</param>
        <summary>Queries <see cref="T:Microsoft.CLRAdmin.IConsole2" /> for the result view object <see cref="T:IUnknown" /> interface pointer.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="QueryScopeImageList">
      <MemberSignature Language="C#" Value="public void QueryScopeImageList (out Microsoft.CLRAdmin.IImageList ppImageList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QueryScopeImageList([out] class Microsoft.CLRAdmin.IImageList&amp; ppImageList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IConsole2.QueryScopeImageList(Microsoft.CLRAdmin.IImageList@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub QueryScopeImageList (ByRef ppImageList As IImageList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void QueryScopeImageList([Runtime::InteropServices::Out] Microsoft::CLRAdmin::IImageList ^ % ppImageList);" />
      <MemberSignature Language="F#" Value="abstract member QueryScopeImageList : IImageList -&gt; unit" Usage="iConsole2.QueryScopeImageList ppImageList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppImageList" Type="Microsoft.CLRAdmin.IImageList" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppImageList">The address of a variable that receives the scope pane <see cref="T:Microsoft.CLRAdmin.IImageList" /> interface pointer.</param>
        <summary>Queries the console-provided scope pane image list.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SelectScopeItem">
      <MemberSignature Language="C#" Value="public void SelectScopeItem (int hScopeItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectScopeItem(int32 hScopeItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IConsole2.SelectScopeItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectScopeItem (hScopeItem As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectScopeItem(int hScopeItem);" />
      <MemberSignature Language="F#" Value="abstract member SelectScopeItem : int -&gt; unit" Usage="iConsole2.SelectScopeItem hScopeItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hScopeItem" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hScopeItem">A handle to the item in the scope pane to be selected.</param>
        <summary>Selects the given scope item.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SetHeader">
      <MemberSignature Language="C#" Value="public void SetHeader (ref Microsoft.CLRAdmin.IHeaderCtrl pHeader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHeader(class Microsoft.CLRAdmin.IHeaderCtrl&amp; pHeader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IConsole2.SetHeader(Microsoft.CLRAdmin.IHeaderCtrl@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetHeader (ByRef pHeader As IHeaderCtrl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetHeader(Microsoft::CLRAdmin::IHeaderCtrl ^ % pHeader);" />
      <MemberSignature Language="F#" Value="abstract member SetHeader : IHeaderCtrl -&gt; unit" Usage="iConsole2.SetHeader pHeader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pHeader" Type="Microsoft.CLRAdmin.IHeaderCtrl" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="pHeader">A pointer to the <see cref="T:Microsoft.CLRAdmin.IHeaderCtrl" /> interface.</param>
        <summary>Sets the header interface to use for this instance of <see cref="T:Microsoft.CLRAdmin.IComponent" />.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SetStatusText">
      <MemberSignature Language="C#" Value="public void SetStatusText (string pszStatusText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStatusText(string pszStatusText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IConsole2.SetStatusText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetStatusText (pszStatusText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetStatusText(System::String ^ pszStatusText);" />
      <MemberSignature Language="F#" Value="abstract member SetStatusText : string -&gt; unit" Usage="iConsole2.SetStatusText pszStatusText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pszStatusText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pszStatusText">A pointer to a null-terminated string that contains text to be displayed in the status bar.</param>
        <summary>Enables the snap-in to change the text in the status bar. Be aware that this is used only by instances of <see cref="T:Microsoft.CLRAdmin.IComponent" />.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SetToolbar">
      <MemberSignature Language="C#" Value="public void SetToolbar (ref object pToolbar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetToolbar(object&amp; pToolbar) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IConsole2.SetToolbar(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetToolbar (ByRef pToolbar As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetToolbar(System::Object ^ % pToolbar);" />
      <MemberSignature Language="F#" Value="abstract member SetToolbar : obj -&gt; unit" Usage="iConsole2.SetToolbar pToolbar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pToolbar" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="pToolbar">A pointer to the <see cref="T:Microsoft.CLRAdmin.IToolbar" /> interface.</param>
        <summary>Sets the toolbar interface to use for this instance of <see cref="T:Microsoft.CLRAdmin.IComponent" />.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="UpdateAllViews">
      <MemberSignature Language="C#" Value="public void UpdateAllViews (Microsoft.CLRAdmin.IDataObject lpDataObject, int data, int hint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateAllViews(class Microsoft.CLRAdmin.IDataObject lpDataObject, int32 data, int32 hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IConsole2.UpdateAllViews(Microsoft.CLRAdmin.IDataObject,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateAllViews (lpDataObject As IDataObject, data As Integer, hint As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateAllViews(Microsoft::CLRAdmin::IDataObject ^ lpDataObject, int data, int hint);" />
      <MemberSignature Language="F#" Value="abstract member UpdateAllViews : Microsoft.CLRAdmin.IDataObject * int * int -&gt; unit" Usage="iConsole2.UpdateAllViews (lpDataObject, data, hint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lpDataObject" Type="Microsoft.CLRAdmin.IDataObject" />
        <Parameter Name="data" Type="System.Int32" />
        <Parameter Name="hint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lpDataObject">A pointer to a user-supplied data object.</param>
        <param name="data">A user-defined value, for example a pointer to the modified content.</param>
        <param name="hint">A user-defined value, for example information about the type of content change.</param>
        <summary>Called by a snap-in when there is a content change in the result pane.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="IResultData" FullName="Microsoft.CLRAdmin.IResultData">
  <TypeSignature Language="C#" Value="public interface IResultData" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IResultData" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CLRAdmin.IResultData" />
  <TypeSignature Language="VB.NET" Value="Public Interface IResultData" />
  <TypeSignature Language="C++ CLI" Value="public interface class IResultData" />
  <TypeSignature Language="F#" Value="type IResultData = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorcfg</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("31DA5FA0-E0EB-11cf-9F21-00AA003CA9F6")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DeleteAllRsltItems">
      <MemberSignature Language="C#" Value="public void DeleteAllRsltItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteAllRsltItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IResultData.DeleteAllRsltItems" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteAllRsltItems ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteAllRsltItems();" />
      <MemberSignature Language="F#" Value="abstract member DeleteAllRsltItems : unit -&gt; unit" Usage="iResultData.DeleteAllRsltItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enables the snap-in to remove all user-inserted items and subitems from the result view pane.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public void DeleteItem (uint itemID, int nCol);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem(unsigned int32 itemID, int32 nCol) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IResultData.DeleteItem(System.UInt32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteItem (itemID As UInteger, nCol As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteItem(System::UInt32 itemID, int nCol);" />
      <MemberSignature Language="F#" Value="abstract member DeleteItem : uint32 * int -&gt; unit" Usage="iResultData.DeleteItem (itemID, nCol)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemID" Type="System.UInt32" />
        <Parameter Name="nCol" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemID">A value that specifies the unique ID of the item to be deleted. When applied to virtual lists, pass the item index instead of the itemID.</param>
        <param name="nCol">Not used. Must be zero.</param>
        <summary>Enables the snap-in to delete a single item in the result view pane.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FindItemByLParam">
      <MemberSignature Language="C#" Value="public void FindItemByLParam (int lParam, out uint pItemID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FindItemByLParam(int32 lParam, [out] unsigned int32&amp; pItemID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IResultData.FindItemByLParam(System.Int32,System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FindItemByLParam (lParam As Integer, ByRef pItemID As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FindItemByLParam(int lParam, [Runtime::InteropServices::Out] System::UInt32 % pItemID);" />
      <MemberSignature Language="F#" Value="abstract member FindItemByLParam : int * uint32 -&gt; unit" Usage="iResultData.FindItemByLParam (lParam, pItemID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lParam" Type="System.Int32" />
        <Parameter Name="pItemID" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="lParam">A generic 32-bit value in which information can be stored.</param>
        <param name="pItemID">A pointer to an item identifier to hold the results of the search for the <paramref name="lParam" /> value.</param>
        <summary>Enables the snap-in to find an item or subitem based on its user-inserted <paramref name="lParam" /> value.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public int GetItem (ref Microsoft.CLRAdmin.RESULTDATAITEM item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetItem(valuetype Microsoft.CLRAdmin.RESULTDATAITEM&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IResultData.GetItem(Microsoft.CLRAdmin.RESULTDATAITEM@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (ByRef item As RESULTDATAITEM) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetItem(Microsoft::CLRAdmin::RESULTDATAITEM % item);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : RESULTDATAITEM -&gt; int" Usage="iResultData.GetItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.CLRAdmin.RESULTDATAITEM" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="item">A pointer to a <see cref="T:Microsoft.CLRAdmin.RESULTDATAITEM" /> structure that contains information about the item whose parameters are being retrieved.</param>
        <summary>Enables a user to retrieve the parameters of a single item.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetNextItem">
      <MemberSignature Language="C#" Value="public int GetNextItem (ref Microsoft.CLRAdmin.RESULTDATAITEM item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNextItem(valuetype Microsoft.CLRAdmin.RESULTDATAITEM&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IResultData.GetNextItem(Microsoft.CLRAdmin.RESULTDATAITEM@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextItem (ByRef item As RESULTDATAITEM) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNextItem(Microsoft::CLRAdmin::RESULTDATAITEM % item);" />
      <MemberSignature Language="F#" Value="abstract member GetNextItem : RESULTDATAITEM -&gt; int" Usage="iResultData.GetNextItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.CLRAdmin.RESULTDATAITEM" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="item">A pointer to a <see cref="T:Microsoft.CLRAdmin.RESULTDATAITEM" /> structure that contains information about the item to be obtained.</param>
        <summary>Gets the next item in the result view with the specified state flags set.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetViewMode">
      <MemberSignature Language="C#" Value="public void GetViewMode (out int lViewMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetViewMode([out] int32&amp; lViewMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IResultData.GetViewMode(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetViewMode (ByRef lViewMode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetViewMode([Runtime::InteropServices::Out] int % lViewMode);" />
      <MemberSignature Language="F#" Value="abstract member GetViewMode : int -&gt; unit" Usage="iResultData.GetViewMode lViewMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lViewMode" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="lViewMode">A pointer to the view mode to be retrieved. It can be one of the following:
| Value | Description |
| --- | --- |
| MMCLV\_VIEWSTYLE\_ICON | Items are displayed as title strings under their large (32x32) icon representations. Subitems and headers are not displayed. |
| MMCLV\_VIEWSTYLE\_REPORT | Items are displayed as title strings to the right of their small (16x16) icon representations. Items are tabulated under the header in the 0 (zero) position of the zero-based index on the left side of the result view pane. Subsequent headers are produced from left to right and corresponding subitems are placed beneath each. |
| MMCLV\_VIEWSTYLE\_SMALLICON | Items are displayed as title strings under their small (16x16) icon representations. Subitems and headers are not displayed. |
| MMCLV\_VIEWSTYLE\_LIST | Items are displayed as title strings to the right of their small (16x16) icon representations. Subitems and headers are not displayed. |
| MMCLV\_VIEWSTYLE\_FILTERED | The list view is displayed as a filtered view. Each list view column has an associated column filter. This parameter must not be <see langword="null" />.|</param>
        <summary>Enables the snap-in to retrieve a view mode for the result view pane. Be aware that view modes only apply to list views.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public void InsertItem (ref Microsoft.CLRAdmin.RESULTDATAITEM item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertItem(valuetype Microsoft.CLRAdmin.RESULTDATAITEM&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IResultData.InsertItem(Microsoft.CLRAdmin.RESULTDATAITEM@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertItem (ByRef item As RESULTDATAITEM)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertItem(Microsoft::CLRAdmin::RESULTDATAITEM % item);" />
      <MemberSignature Language="F#" Value="abstract member InsertItem : RESULTDATAITEM -&gt; unit" Usage="iResultData.InsertItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.CLRAdmin.RESULTDATAITEM" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="item">A pointer to a <see cref="T:Microsoft.CLRAdmin.RESULTDATAITEM" /> structure that contains information about the item to be added.</param>
        <summary>Enables the snap-in to add a single new item to the result pane view.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ModifyItemState">
      <MemberSignature Language="C#" Value="public void ModifyItemState (int nIndex, uint itemID, uint uAdd, uint uRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ModifyItemState(int32 nIndex, unsigned int32 itemID, unsigned int32 uAdd, unsigned int32 uRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IResultData.ModifyItemState(System.Int32,System.UInt32,System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ModifyItemState (nIndex As Integer, itemID As UInteger, uAdd As UInteger, uRemove As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ModifyItemState(int nIndex, System::UInt32 itemID, System::UInt32 uAdd, System::UInt32 uRemove);" />
      <MemberSignature Language="F#" Value="abstract member ModifyItemState : int * uint32 * uint32 * uint32 -&gt; unit" Usage="iResultData.ModifyItemState (nIndex, itemID, uAdd, uRemove)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nIndex" Type="System.Int32" />
        <Parameter Name="itemID" Type="System.UInt32" />
        <Parameter Name="uAdd" Type="System.UInt32" />
        <Parameter Name="uRemove" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="nIndex">A value that specifies the index of the item whose state is to be modified. This parameter is used only when the <paramref name="itemID" /> parameter is zero. When applied to virtual lists, you must use <paramref name="nIndex" /> and set <paramref name="itemID" /> to zero.</param>
        <param name="itemID">Unique identifier of the item whose state is to be modified. When applied to virtual lists, set <paramref name="itemID" /> to 0.</param>
        <param name="uAdd">A value that specifies which Windows list-view state flags can be set. When applied to virtual lists, only focus and select states can be modified. This value can be any valid combination of the following:
| Value | Description |
| --- | --- |
| LVIS\_CUT | The item is marked for a cut-and-paste operation. |
| LVIS\_DROPHILITED | The item is highlighted as a drag-and-drop target. |
| LVIS\_FOCUSED | The item has the focus, so it is surrounded by a standard focus rectangle. Although more than one item can be selected, only one item can have the focus. |
| LVIS\_SELECTED | The item is selected. The appearance of a selected item depends on whether it has the focus and on the system colors used for selection. |</param>
        <param name="uRemove">A value that specifies the list-view item state flags that can be removed. This value can be any valid combination of the preceding flags shown for the <paramref name="uAdd" /> parameter.</param>
        <summary>Enables the snap-in to modify the state of an item.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ModifyViewStyle">
      <MemberSignature Language="C#" Value="public void ModifyViewStyle (int add, int remove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ModifyViewStyle(int32 add, int32 remove) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IResultData.ModifyViewStyle(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ModifyViewStyle (add As Integer, remove As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ModifyViewStyle(int add, int remove);" />
      <MemberSignature Language="F#" Value="abstract member ModifyViewStyle : int * int -&gt; unit" Usage="iResultData.ModifyViewStyle (add, remove)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="add" Type="System.Int32" />
        <Parameter Name="remove" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="add">A value that specifies the view style (or styles) to be set in the result view pane. This value can be a valid combination of the following:
| Value | Description |
| --- | --- |
| MMC\_SINGLESEL | Allows only one item at a time to be selected. Without this view style, multiple items can be selected. |
| MMC\_SHOWSELALWAYS | Always show the selection, if any, even if the control does not have the focus. |
| MMC\_NOSORTHEADER | A value that specifies that column headers do not work like buttons. This style is useful if clicking on a column header in report view does not perform an operation, such as sorting. |</param>
        <param name="remove">A value that specifies the view style (or styles) to be removed from the result view pane. This value can be a valid combination of the preceding flags shown for the <paramref name="add" /> parameter.</param>
        <summary>Enables the snap-in to set the result pane's view style.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SetDescBarText">
      <MemberSignature Language="C#" Value="public void SetDescBarText (int DescText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDescBarText(int32 DescText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IResultData.SetDescBarText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDescBarText (DescText As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDescBarText(int DescText);" />
      <MemberSignature Language="F#" Value="abstract member SetDescBarText : int -&gt; unit" Usage="iResultData.SetDescBarText DescText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DescText" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="DescText">A pointer to a null-terminated string that contains text to be displayed in the description bar.</param>
        <summary>Sets the description bar text for the result view pane.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="public void SetItem (ref Microsoft.CLRAdmin.RESULTDATAITEM item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetItem(valuetype Microsoft.CLRAdmin.RESULTDATAITEM&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IResultData.SetItem(Microsoft.CLRAdmin.RESULTDATAITEM@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItem (ByRef item As RESULTDATAITEM)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItem(Microsoft::CLRAdmin::RESULTDATAITEM % item);" />
      <MemberSignature Language="F#" Value="abstract member SetItem : RESULTDATAITEM -&gt; unit" Usage="iResultData.SetItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.CLRAdmin.RESULTDATAITEM" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="item">A pointer to a <see cref="T:Microsoft.CLRAdmin.RESULTDATAITEM" /> structure that contains information about the item to be changed.</param>
        <summary>Enables the snap-in to set a single item in the result pane.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SetItemCount">
      <MemberSignature Language="C#" Value="public void SetItemCount (int nItemCount, uint dwOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetItemCount(int32 nItemCount, unsigned int32 dwOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IResultData.SetItemCount(System.Int32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItemCount (nItemCount As Integer, dwOptions As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItemCount(int nItemCount, System::UInt32 dwOptions);" />
      <MemberSignature Language="F#" Value="abstract member SetItemCount : int * uint32 -&gt; unit" Usage="iResultData.SetItemCount (nItemCount, dwOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nItemCount" Type="System.Int32" />
        <Parameter Name="dwOptions" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="nItemCount">The number of items that the control will contain.</param>
        <param name="dwOptions">Combination of the following flags:
| Value | Description |
| --- | --- |
| MMCLV\_UPDATE\_NOINVALIDATEALL | Only repaint items added or removed at the bottom of the result pane. Set this flag only if items are removed or added at the bottom of the list. |
| MMCLV\_UPDATE\_NOSCROLL | Do not adjust the scroll bar on changed item count. |</param>
        <summary>Sets the number of items in a virtual list.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SetViewMode">
      <MemberSignature Language="C#" Value="public void SetViewMode (int lViewMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetViewMode(int32 lViewMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IResultData.SetViewMode(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetViewMode (lViewMode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetViewMode(int lViewMode);" />
      <MemberSignature Language="F#" Value="abstract member SetViewMode : int -&gt; unit" Usage="iResultData.SetViewMode lViewMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lViewMode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lViewMode">A value that specifies the view mode to be set in the result pane. It can be one of the following values:
| Value | Description |
| --- | --- |
| MMCLV\_VIEWSTYLE\_ICON | Items are displayed as title strings under their large (32x32) icon representations. Subitems and headers are not displayed. |
| MMCLV\_VIEWSTYLE\_REPORT | Items are displayed as title strings to the right of their small (16x16) icon representations. Items are tabulated under the header in the zero position of the zero-based index on the left side of the result view pane. Subsequent headers are produced from left to right and corresponding subitems are placed beneath each. |
| MMCLV\_VIEWSTYLE\_SMALLICON | Items are displayed as title strings under their small (16x16) icon representations. Subitems and headers are not displayed. |
| MMCLV\_VIEWSTYLE\_LIST | Items are displayed as title strings to the right of their small (16x16) icon representations. Subitems and headers are not displayed. |
| MMCLV\_VIEWSTYLE\_FILTERED | Allows a snap-in to programmatically set the view mode to filtered view. |

This parameter must not be <see langword="null" />.</param>
        <summary>Enables the snap-in to set the view mode in which the result view pane displays its items. Be aware that view modes apply only to list views.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (int nColumn, uint dwSortOptions, int lUserParam);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(int32 nColumn, unsigned int32 dwSortOptions, int32 lUserParam) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IResultData.Sort(System.Int32,System.UInt32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (nColumn As Integer, dwSortOptions As UInteger, lUserParam As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(int nColumn, System::UInt32 dwSortOptions, int lUserParam);" />
      <MemberSignature Language="F#" Value="abstract member Sort : int * uint32 * int -&gt; unit" Usage="iResultData.Sort (nColumn, dwSortOptions, lUserParam)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nColumn" Type="System.Int32" />
        <Parameter Name="dwSortOptions" Type="System.UInt32" />
        <Parameter Name="lUserParam" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="nColumn">An index of the column header clicked.</param>
        <param name="dwSortOptions">The sort options to be used during the sort operation. This value can be a combination of the following:
| Value | Description |
| --- | --- |
| RSI\_DESCENDING = 0x0001 | The sort should be in descending order. The default is to sort in ascending order. |
| RSI\_NOSORTICON = 0x0002 | Instructs MMC to remove the sort arrow icon. This option is useful when the snap-in performs a custom sort operation. |</param>
        <param name="lUserParam">A value that specifies information determined by the user. This parameter can contain a variety of entries such as including sort order or context information.</param>
        <summary>Sorts all items in the result pane.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public void UpdateItem (uint itemID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(unsigned int32 itemID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.IResultData.UpdateItem(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateItem (itemID As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateItem(System::UInt32 itemID);" />
      <MemberSignature Language="F#" Value="abstract member UpdateItem : uint32 -&gt; unit" Usage="iResultData.UpdateItem itemID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemID" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="itemID">A value that specifies the unique identifier of the item to be redrawn in the result pane. When applied to virtual lists, pass the item index instead of the identifier.</param>
        <summary>Causes a specified item in the result pane to be redrawn.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>

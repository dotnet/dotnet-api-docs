<Type Name="NegotiateEvents" FullName="Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents">
  <TypeSignature Language="C#" Value="public class NegotiateEvents" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NegotiateEvents extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents" />
  <TypeSignature Language="VB.NET" Value="Public Class NegotiateEvents" />
  <TypeSignature Language="C++ CLI" Value="public ref class NegotiateEvents" />
  <TypeSignature Language="F#" Value="type NegotiateEvents = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Authentication.Negotiate</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateEvents();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Negotiate</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticated">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Authenticated (Microsoft.AspNetCore.Authentication.Negotiate.AuthenticatedContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Authenticated(class Microsoft.AspNetCore.Authentication.Negotiate.AuthenticatedContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.Authenticated(Microsoft.AspNetCore.Authentication.Negotiate.AuthenticatedContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Authenticated (context As AuthenticatedContext) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Authenticated(Microsoft::AspNetCore::Authentication::Negotiate::AuthenticatedContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Authenticated : Microsoft.AspNetCore.Authentication.Negotiate.AuthenticatedContext -&gt; System.Threading.Tasks.Task&#xA;override this.Authenticated : Microsoft.AspNetCore.Authentication.Negotiate.AuthenticatedContext -&gt; System.Threading.Tasks.Task" Usage="negotiateEvents.Authenticated context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Negotiate</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Authentication.Negotiate.AuthenticatedContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationFailed">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticationFailed (Microsoft.AspNetCore.Authentication.Negotiate.AuthenticationFailedContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticationFailed(class Microsoft.AspNetCore.Authentication.Negotiate.AuthenticationFailedContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.AuthenticationFailed(Microsoft.AspNetCore.Authentication.Negotiate.AuthenticationFailedContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticationFailed (context As AuthenticationFailedContext) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticationFailed(Microsoft::AspNetCore::Authentication::Negotiate::AuthenticationFailedContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticationFailed : Microsoft.AspNetCore.Authentication.Negotiate.AuthenticationFailedContext -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticationFailed : Microsoft.AspNetCore.Authentication.Negotiate.AuthenticationFailedContext -&gt; System.Threading.Tasks.Task" Usage="negotiateEvents.AuthenticationFailed context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Negotiate</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Authentication.Negotiate.AuthenticationFailedContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Challenge">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Challenge (Microsoft.AspNetCore.Authentication.Negotiate.ChallengeContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Challenge(class Microsoft.AspNetCore.Authentication.Negotiate.ChallengeContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.Challenge(Microsoft.AspNetCore.Authentication.Negotiate.ChallengeContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Challenge (context As ChallengeContext) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Challenge(Microsoft::AspNetCore::Authentication::Negotiate::ChallengeContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Challenge : Microsoft.AspNetCore.Authentication.Negotiate.ChallengeContext -&gt; System.Threading.Tasks.Task&#xA;override this.Challenge : Microsoft.AspNetCore.Authentication.Negotiate.ChallengeContext -&gt; System.Threading.Tasks.Task" Usage="negotiateEvents.Challenge context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Negotiate</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Authentication.Negotiate.ChallengeContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAuthenticated">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.AspNetCore.Authentication.Negotiate.AuthenticatedContext,System.Threading.Tasks.Task&gt; OnAuthenticated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class Microsoft.AspNetCore.Authentication.Negotiate.AuthenticatedContext, class System.Threading.Tasks.Task&gt; OnAuthenticated" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.OnAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Property OnAuthenticated As Func(Of AuthenticatedContext, Task)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;Microsoft::AspNetCore::Authentication::Negotiate::AuthenticatedContext ^, System::Threading::Tasks::Task ^&gt; ^ OnAuthenticated { Func&lt;Microsoft::AspNetCore::Authentication::Negotiate::AuthenticatedContext ^, System::Threading::Tasks::Task ^&gt; ^ get(); void set(Func&lt;Microsoft::AspNetCore::Authentication::Negotiate::AuthenticatedContext ^, System::Threading::Tasks::Task ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnAuthenticated : Func&lt;Microsoft.AspNetCore.Authentication.Negotiate.AuthenticatedContext, System.Threading.Tasks.Task&gt; with get, set" Usage="Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.OnAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Negotiate</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.AspNetCore.Authentication.Negotiate.AuthenticatedContext,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAuthenticationFailed">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.AspNetCore.Authentication.Negotiate.AuthenticationFailedContext,System.Threading.Tasks.Task&gt; OnAuthenticationFailed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class Microsoft.AspNetCore.Authentication.Negotiate.AuthenticationFailedContext, class System.Threading.Tasks.Task&gt; OnAuthenticationFailed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.OnAuthenticationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Property OnAuthenticationFailed As Func(Of AuthenticationFailedContext, Task)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;Microsoft::AspNetCore::Authentication::Negotiate::AuthenticationFailedContext ^, System::Threading::Tasks::Task ^&gt; ^ OnAuthenticationFailed { Func&lt;Microsoft::AspNetCore::Authentication::Negotiate::AuthenticationFailedContext ^, System::Threading::Tasks::Task ^&gt; ^ get(); void set(Func&lt;Microsoft::AspNetCore::Authentication::Negotiate::AuthenticationFailedContext ^, System::Threading::Tasks::Task ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnAuthenticationFailed : Func&lt;Microsoft.AspNetCore.Authentication.Negotiate.AuthenticationFailedContext, System.Threading.Tasks.Task&gt; with get, set" Usage="Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.OnAuthenticationFailed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Negotiate</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.AspNetCore.Authentication.Negotiate.AuthenticationFailedContext,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChallenge">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.AspNetCore.Authentication.Negotiate.ChallengeContext,System.Threading.Tasks.Task&gt; OnChallenge { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class Microsoft.AspNetCore.Authentication.Negotiate.ChallengeContext, class System.Threading.Tasks.Task&gt; OnChallenge" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.OnChallenge" />
      <MemberSignature Language="VB.NET" Value="Public Property OnChallenge As Func(Of ChallengeContext, Task)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;Microsoft::AspNetCore::Authentication::Negotiate::ChallengeContext ^, System::Threading::Tasks::Task ^&gt; ^ OnChallenge { Func&lt;Microsoft::AspNetCore::Authentication::Negotiate::ChallengeContext ^, System::Threading::Tasks::Task ^&gt; ^ get(); void set(Func&lt;Microsoft::AspNetCore::Authentication::Negotiate::ChallengeContext ^, System::Threading::Tasks::Task ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnChallenge : Func&lt;Microsoft.AspNetCore.Authentication.Negotiate.ChallengeContext, System.Threading.Tasks.Task&gt; with get, set" Usage="Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.OnChallenge" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Negotiate</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.AspNetCore.Authentication.Negotiate.ChallengeContext,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

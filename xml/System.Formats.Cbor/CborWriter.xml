<Type Name="CborWriter" FullName="System.Formats.Cbor.CborWriter">
  <TypeSignature Language="C#" Value="public class CborWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CborWriter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Formats.Cbor.CborWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class CborWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class CborWriter" />
  <TypeSignature Language="F#" Value="type CborWriter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Formats.Cbor</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A writer for CBOR encoded data.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CborWriter (System.Formats.Cbor.CborConformanceMode conformanceMode = System.Formats.Cbor.CborConformanceMode.Strict, bool convertIndefiniteLengthEncodings = false, bool allowMultipleRootLevelValues = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Formats.Cbor.CborConformanceMode conformanceMode, bool convertIndefiniteLengthEncodings, bool allowMultipleRootLevelValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.#ctor(System.Formats.Cbor.CborConformanceMode,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional conformanceMode As CborConformanceMode = System.Formats.Cbor.CborConformanceMode.Strict, Optional convertIndefiniteLengthEncodings As Boolean = false, Optional allowMultipleRootLevelValues As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Formats.Cbor.CborWriter : System.Formats.Cbor.CborConformanceMode * bool * bool -&gt; System.Formats.Cbor.CborWriter" Usage="new System.Formats.Cbor.CborWriter (conformanceMode, convertIndefiniteLengthEncodings, allowMultipleRootLevelValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="conformanceMode" Type="System.Formats.Cbor.CborConformanceMode" />
        <Parameter Name="convertIndefiniteLengthEncodings" Type="System.Boolean" />
        <Parameter Name="allowMultipleRootLevelValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="conformanceMode">One of the enumeration values that specifies the guidance on the conformance checks performed on the encoded data.
              Defaults to <see cref="F:System.Formats.Cbor.CborConformanceMode.Strict" /> conformance mode.</param>
        <param name="convertIndefiniteLengthEncodings"><see langword="true"/> to enable automatically converting indefinite-length encodings into definite-length equivalents and allow use of indefinite-length write APIs in conformance modes that otherwise do not permit it; otherwise, <see langword="false"/></param>
        <param name="allowMultipleRootLevelValues">
          <see langword="true" /> to allow multiple root-level values to be written by the writer; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of <see cref="T:System.Formats.Cbor.CborWriter" /> class using the specified configuration.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="conformanceMode" /> is not a defined <see cref="T:System.Formats.Cbor.CborConformanceMode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowMultipleRootLevelValues">
      <MemberSignature Language="C#" Value="public bool AllowMultipleRootLevelValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultipleRootLevelValues" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Cbor.CborWriter.AllowMultipleRootLevelValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowMultipleRootLevelValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowMultipleRootLevelValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowMultipleRootLevelValues : bool" Usage="System.Formats.Cbor.CborWriter.AllowMultipleRootLevelValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether this writer allows multiple root-level CBOR data items.</summary>
        <value>
          <see langword="true" /> if the writer allows multiple root-level CBOR data items; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BytesWritten">
      <MemberSignature Language="C#" Value="public int BytesWritten { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesWritten" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Cbor.CborWriter.BytesWritten" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesWritten As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BytesWritten { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesWritten : int" Usage="System.Formats.Cbor.CborWriter.BytesWritten" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the total number of bytes that have been written to the buffer.</summary>
        <value>The total number of bytes that have been written to the buffer.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceMode">
      <MemberSignature Language="C#" Value="public System.Formats.Cbor.CborConformanceMode ConformanceMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Formats.Cbor.CborConformanceMode ConformanceMode" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Cbor.CborWriter.ConformanceMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConformanceMode As CborConformanceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Formats::Cbor::CborConformanceMode ConformanceMode { System::Formats::Cbor::CborConformanceMode get(); };" />
      <MemberSignature Language="F#" Value="member this.ConformanceMode : System.Formats.Cbor.CborConformanceMode" Usage="System.Formats.Cbor.CborWriter.ConformanceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Formats.Cbor.CborConformanceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the conformance mode used by this writer.</summary>
        <value>One of the enumeration values that represent the conformance mode used by this writer.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertIndefiniteLengthEncodings">
      <MemberSignature Language="C#" Value="public bool ConvertIndefiniteLengthEncodings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertIndefiniteLengthEncodings" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Cbor.CborWriter.ConvertIndefiniteLengthEncodings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConvertIndefiniteLengthEncodings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertIndefiniteLengthEncodings { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ConvertIndefiniteLengthEncodings : bool" Usage="System.Formats.Cbor.CborWriter.ConvertIndefiniteLengthEncodings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the writer automatically converts indefinite-length encodings into definite-length equivalents.</summary>
        <value>
          <see langword="true" /> if the writer automatically converts indefinite-length encodings into definite-length equivalents; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDepth">
      <MemberSignature Language="C#" Value="public int CurrentDepth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentDepth" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Cbor.CborWriter.CurrentDepth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentDepth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDepth : int" Usage="System.Formats.Cbor.CborWriter.CurrentDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the writer's current level of nestedness in the CBOR document.</summary>
        <value>A number that represents the current level of nestedness in the CBOR document.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public byte[] Encode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.Encode" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encode();" />
      <MemberSignature Language="F#" Value="member this.Encode : unit -&gt; byte[]" Usage="cborWriter.Encode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new array containing the encoded value.</summary>
        <returns>A precisely-sized array containing the encoded value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The writer does not contain a complete CBOR value or sequence of root-level values.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public int Encode (Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Encode(valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.Encode(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode (destination As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Encode(Span&lt;System::Byte&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.Encode : Span&lt;byte&gt; -&gt; int" Usage="cborWriter.Encode destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="destination">The buffer in which to write.</param>
        <summary>Writes the encoded representation of the data to <paramref name="destination" />.</summary>
        <returns>The number of bytes written to <paramref name="destination" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The writer does not contain a complete CBOR value or sequence of root-level values.</exception>
        <exception cref="T:System.ArgumentException">The destination buffer is not large enough to hold the encoded value.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsWriteCompleted">
      <MemberSignature Language="C#" Value="public bool IsWriteCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWriteCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Cbor.CborWriter.IsWriteCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWriteCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWriteCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWriteCompleted : bool" Usage="System.Formats.Cbor.CborWriter.IsWriteCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Declares whether the writer has completed writing a complete root-level CBOR document, or sequence of root-level CBOR documents.</summary>
        <value><see langword="true" /> if the writer has completed writing a complete root-level CBOR document, or sequence of root-level CBOR documents; <see langword="false" /> otherwise.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="cborWriter.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets the writer to have no data, without releasing resources.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncode">
      <MemberSignature Language="C#" Value="public bool TryEncode (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncode(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.TryEncode(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncode (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncode(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncode : Span&lt;byte&gt; * int -&gt; bool" Usage="cborWriter.TryEncode (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">The buffer in which to write.</param>
        <param name="bytesWritten">When this method returns, contains the number of bytes written to <paramref name="destination" />.</param>
        <summary>Attempts to write the encoded representation of the data to <paramref name="destination" />.</summary>
        <returns>
          <see langword="true" /> if the encode succeeded, <see langword="false" /> if <paramref name="destination" /> is too small.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The writer does not contain a complete CBOR value or sequence of root-level values.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBigInteger">
      <MemberSignature Language="C#" Value="public void WriteBigInteger (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBigInteger(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteBigInteger(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBigInteger (value As BigInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBigInteger(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="member this.WriteBigInteger : System.Numerics.BigInteger -&gt; unit" Usage="cborWriter.WriteBigInteger value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <summary>Writes the provided value as a tagged bignum encoding, as described in RFC7049 section 2.4.2.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public void WriteBoolean (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBoolean(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteBoolean(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBoolean (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBoolean(bool value);" />
      <MemberSignature Language="F#" Value="member this.WriteBoolean : bool -&gt; unit" Usage="cborWriter.WriteBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <summary>Writes a boolean value (major type 7).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteByteString">
      <MemberSignature Language="C#" Value="public void WriteByteString (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteByteString(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteByteString(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteByteString (value As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteByteString(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteByteString : byte[] -&gt; unit" Usage="cborWriter.WriteByteString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <summary>Writes a buffer as a byte string encoding (major type 2).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The provided value cannot be <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteByteString">
      <MemberSignature Language="C#" Value="public void WriteByteString (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteByteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteByteString(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteByteString (value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteByteString(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteByteString : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="cborWriter.WriteByteString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <summary>Writes a buffer as a byte string encoding (major type 2).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCborNegativeIntegerRepresentation">
      <MemberSignature Language="C#" Value="public void WriteCborNegativeIntegerRepresentation (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteCborNegativeIntegerRepresentation(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteCborNegativeIntegerRepresentation(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteCborNegativeIntegerRepresentation (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteCborNegativeIntegerRepresentation(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.WriteCborNegativeIntegerRepresentation : uint64 -&gt; unit" Usage="cborWriter.WriteCborNegativeIntegerRepresentation value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">An unsigned integer denoting -1 minus the integer.</param>
        <summary>Writes the provided value as a CBOR negative integer representation (major type 1).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This method supports encoding integers between -18446744073709551616 and -1.
              Useful for handling values that do not fit in the <xref:System.Int64> type.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDateTimeOffset">
      <MemberSignature Language="C#" Value="public void WriteDateTimeOffset (DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteDateTimeOffset(valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteDateTimeOffset(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteDateTimeOffset (value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteDateTimeOffset(DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.WriteDateTimeOffset : DateTimeOffset -&gt; unit" Usage="cborWriter.WriteDateTimeOffset value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <summary>Writes the provided value as a tagged date/time string, as described in RFC7049 section 2.4.1.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDecimal">
      <MemberSignature Language="C#" Value="public void WriteDecimal (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteDecimal(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteDecimal(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteDecimal (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteDecimal(System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.WriteDecimal : decimal -&gt; unit" Usage="cborWriter.WriteDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <summary>Writes the provided value value as a tagged decimal fraction encoding, as described in RFC7049 section 2.4.3</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDouble">
      <MemberSignature Language="C#" Value="public void WriteDouble (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteDouble(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteDouble(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteDouble (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteDouble(double value);" />
      <MemberSignature Language="F#" Value="member this.WriteDouble : double -&gt; unit" Usage="cborWriter.WriteDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <summary>Writes a double-precision floating point number (major type 7).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedValue">
      <MemberSignature Language="C#" Value="public void WriteEncodedValue (ReadOnlySpan&lt;byte&gt; encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEncodedValue(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteEncodedValue(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEncodedValue (encodedValue As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEncodedValue(ReadOnlySpan&lt;System::Byte&gt; encodedValue);" />
      <MemberSignature Language="F#" Value="member this.WriteEncodedValue : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="cborWriter.WriteEncodedValue encodedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="encodedValue">The encoded value to write.</param>
        <summary>Writes a single CBOR data item which has already been encoded.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="encodedValue" /> is not a well-formed CBOR encoding.

-or-

<paramref name="encodedValue" /> is not valid under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndArray">
      <MemberSignature Language="C#" Value="public void WriteEndArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEndArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteEndArray" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEndArray ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEndArray();" />
      <MemberSignature Language="F#" Value="member this.WriteEndArray : unit -&gt; unit" Usage="cborWriter.WriteEndArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Writes the end of an array (major type 4).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The written data is not accepted under the current conformance mode.

-or-

The definite-length array anticipates more data items.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndIndefiniteLengthByteString">
      <MemberSignature Language="C#" Value="public void WriteEndIndefiniteLengthByteString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEndIndefiniteLengthByteString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteEndIndefiniteLengthByteString" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEndIndefiniteLengthByteString ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEndIndefiniteLengthByteString();" />
      <MemberSignature Language="F#" Value="member this.WriteEndIndefiniteLengthByteString : unit -&gt; unit" Usage="cborWriter.WriteEndIndefiniteLengthByteString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Writes the end of an indefinite-length byte string (major type 2).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndIndefiniteLengthTextString">
      <MemberSignature Language="C#" Value="public void WriteEndIndefiniteLengthTextString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEndIndefiniteLengthTextString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteEndIndefiniteLengthTextString" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEndIndefiniteLengthTextString ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEndIndefiniteLengthTextString();" />
      <MemberSignature Language="F#" Value="member this.WriteEndIndefiniteLengthTextString : unit -&gt; unit" Usage="cborWriter.WriteEndIndefiniteLengthTextString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Writes the end of an indefinite-length UTF-8 string (major type 3).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMap">
      <MemberSignature Language="C#" Value="public void WriteEndMap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEndMap() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteEndMap" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEndMap ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEndMap();" />
      <MemberSignature Language="F#" Value="member this.WriteEndMap : unit -&gt; unit" Usage="cborWriter.WriteEndMap " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Writes the end of a map (major type 5).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The written data is not accepted under the current conformance mode.

-or-

The definite-length map anticipates more data items.

-or-

The latest key/value pair is lacking a value.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteHalf">
      <MemberSignature Language="C#" Value="public void WriteHalf (Half value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteHalf(valuetype System.Half value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteHalf(System.Half)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteHalf (value As Half)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteHalf(Half value);" />
      <MemberSignature Language="F#" Value="member this.WriteHalf : Half -&gt; unit" Usage="cborWriter.WriteHalf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Half" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <summary>Writes a half-precision floating point number (major type 7).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public void WriteInt32 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteInt32(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteInt32 (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteInt32(int value);" />
      <MemberSignature Language="F#" Value="member this.WriteInt32 : int -&gt; unit" Usage="cborWriter.WriteInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">The value to write</param>
        <summary>Writes an value as a signed integer encoding (major types 0,1)</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public void WriteInt64 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteInt64(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteInt64(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteInt64 (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteInt64(long value);" />
      <MemberSignature Language="F#" Value="member this.WriteInt64 : int64 -&gt; unit" Usage="cborWriter.WriteInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">The value to write</param>
        <summary>Writes the provided value as a signed integer encoding (major types 0,1)</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNull">
      <MemberSignature Language="C#" Value="public void WriteNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteNull" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNull();" />
      <MemberSignature Language="F#" Value="member this.WriteNull : unit -&gt; unit" Usage="cborWriter.WriteNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Writes a <see langword="null" /> value (major type 7).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSimpleValue">
      <MemberSignature Language="C#" Value="public void WriteSimpleValue (System.Formats.Cbor.CborSimpleValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteSimpleValue(valuetype System.Formats.Cbor.CborSimpleValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteSimpleValue(System.Formats.Cbor.CborSimpleValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteSimpleValue (value As CborSimpleValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteSimpleValue(System::Formats::Cbor::CborSimpleValue value);" />
      <MemberSignature Language="F#" Value="member this.WriteSimpleValue : System.Formats.Cbor.CborSimpleValue -&gt; unit" Usage="cborWriter.WriteSimpleValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Formats.Cbor.CborSimpleValue" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <summary>Writes a simple value encoding (major type 7).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="value" /> parameter is in the invalid 24-31 range.</exception>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSingle">
      <MemberSignature Language="C#" Value="public void WriteSingle (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteSingle(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteSingle(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteSingle (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteSingle(float value);" />
      <MemberSignature Language="F#" Value="member this.WriteSingle : single -&gt; unit" Usage="cborWriter.WriteSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <summary>Writes a single-precision floating point number (major type 7).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartArray">
      <MemberSignature Language="C#" Value="public void WriteStartArray (int? definiteLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartArray(valuetype System.Nullable`1&lt;int32&gt; definiteLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteStartArray(System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartArray (definiteLength As Nullable(Of Integer))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartArray(Nullable&lt;int&gt; definiteLength);" />
      <MemberSignature Language="F#" Value="member this.WriteStartArray : Nullable&lt;int&gt; -&gt; unit" Usage="cborWriter.WriteStartArray definiteLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definiteLength" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <summary>Writes the start of a definite or indefinite-length array (major type 4).</summary>
        <param name="definiteLength">The length of the definite-length array, or <see langword="null" /> for an indefinite-length array.</param>
        
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

In canonical conformance modes, the writer will reject indefinite-length writes unless the <xref:System.Formats.Cbor.CborWriter.ConvertIndefiniteLengthEncodings> flag is enabled.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="definiteLength" /> parameter cannot be negative.</exception>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartIndefiniteLengthByteString">
      <MemberSignature Language="C#" Value="public void WriteStartIndefiniteLengthByteString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartIndefiniteLengthByteString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteStartIndefiniteLengthByteString" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartIndefiniteLengthByteString ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartIndefiniteLengthByteString();" />
      <MemberSignature Language="F#" Value="member this.WriteStartIndefiniteLengthByteString : unit -&gt; unit" Usage="cborWriter.WriteStartIndefiniteLengthByteString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Writes the start of an indefinite-length byte string (major type 2).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Pushes a context where definite-length chunks of the same major type can be written.
              In canonical conformance modes, the writer will reject indefinite-length writes unless the <xref:System.Formats.Cbor.CborWriter.ConvertIndefiniteLengthEncodings> flag is enabled.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartIndefiniteLengthTextString">
      <MemberSignature Language="C#" Value="public void WriteStartIndefiniteLengthTextString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartIndefiniteLengthTextString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteStartIndefiniteLengthTextString" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartIndefiniteLengthTextString ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartIndefiniteLengthTextString();" />
      <MemberSignature Language="F#" Value="member this.WriteStartIndefiniteLengthTextString : unit -&gt; unit" Usage="cborWriter.WriteStartIndefiniteLengthTextString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Writes the start of an indefinite-length UTF-8 string (major type 3).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Pushes a context where definite-length chunks of the same major type can be written.
              In canonical conformance modes, the writer will reject indefinite-length writes unless the <xref:System.Formats.Cbor.CborWriter.ConvertIndefiniteLengthEncodings> flag is enabled.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMap">
      <MemberSignature Language="C#" Value="public void WriteStartMap (int? definiteLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartMap(valuetype System.Nullable`1&lt;int32&gt; definiteLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteStartMap(System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartMap (definiteLength As Nullable(Of Integer))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartMap(Nullable&lt;int&gt; definiteLength);" />
      <MemberSignature Language="F#" Value="member this.WriteStartMap : Nullable&lt;int&gt; -&gt; unit" Usage="cborWriter.WriteStartMap definiteLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definiteLength" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <summary>Writes the start of a definite or indefinite-length map (major type 5).</summary>
        <param name="definiteLength">The length of the definite-length map, or <see langword="null" /> for an indefinite-length map.</param>
        
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 In canonical conformance modes, the writer will reject indefinite-length writes unless the <xref:System.Formats.Cbor.CborWriter.ConvertIndefiniteLengthEncodings> flag is enabled.
              

 Map contents are written as if arrays twice the length of the map's declared size.
                For instance, a map of size `1` containing a key of type int with a value of type string must be written by successive calls to <xref:System.Formats.Cbor.CborWriter.WriteInt32(System.Int32)> and <xref:System.Formats.Cbor.CborWriter.WriteTextString(System.ReadOnlySpan{System.Char})>.
                It is up to the caller to keep track of whether the next call is a key or a value.
              

 Fundamentally, this is a technical restriction stemming from the fact that CBOR allows keys of any type, for instance a map can contain keys that are maps themselves.
              



          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="definiteLength" /> parameter cannot be negative.</exception>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTag">
      <MemberSignature Language="C#" Value="public void WriteTag (System.Formats.Cbor.CborTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTag(valuetype System.Formats.Cbor.CborTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteTag(System.Formats.Cbor.CborTag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteTag (tag As CborTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTag(System::Formats::Cbor::CborTag tag);" />
      <MemberSignature Language="F#" Value="member this.WriteTag : System.Formats.Cbor.CborTag -&gt; unit" Usage="cborWriter.WriteTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Formats.Cbor.CborTag" />
      </Parameters>
      <Docs>
        <param name="tag">The value to write.</param>
        <summary>Assign a semantic tag (major type 6) to the next data item.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTextString">
      <MemberSignature Language="C#" Value="public void WriteTextString (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTextString(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteTextString(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteTextString (value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTextString(ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteTextString : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="cborWriter.WriteTextString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <summary>Writes a buffer as a UTF-8 string encoding (major type 3).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The supplied string is not a valid UTF-8 encoding, which is not permitted under the current conformance mode.</exception>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTextString">
      <MemberSignature Language="C#" Value="public void WriteTextString (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTextString(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteTextString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteTextString (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTextString(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteTextString : string -&gt; unit" Usage="cborWriter.WriteTextString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <summary>Writes a buffer as a UTF-8 string encoding (major type 3).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The provided value cannot be <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The supplied string is not a valid UTF-8 encoding, which is not permitted under the current conformance mode.</exception>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteUInt32">
      <MemberSignature Language="C#" Value="public void WriteUInt32 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteUInt32(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteUInt32(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteUInt32 (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteUInt32(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.WriteUInt32 : uint32 -&gt; unit" Usage="cborWriter.WriteUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">The value to write</param>
        <summary>Writes anvalue as an unsigned integer encoding (major type 0).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteUInt64">
      <MemberSignature Language="C#" Value="public void WriteUInt64 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteUInt64(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteUInt64(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteUInt64 (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteUInt64(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.WriteUInt64 : uint64 -&gt; unit" Usage="cborWriter.WriteUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">The value to write</param>
        <summary>Writes an value as an unsigned integer encoding (major type 0).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteUnixTimeSeconds">
      <MemberSignature Language="C#" Value="public void WriteUnixTimeSeconds (double seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteUnixTimeSeconds(float64 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteUnixTimeSeconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteUnixTimeSeconds (seconds As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteUnixTimeSeconds(double seconds);" />
      <MemberSignature Language="F#" Value="member this.WriteUnixTimeSeconds : double -&gt; unit" Usage="cborWriter.WriteUnixTimeSeconds seconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seconds" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="seconds">The value to write.</param>
        <summary>Writes a unix time in seconds as a tagged date/time value, as described in RFC7049 section 2.4.1.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="seconds" /> parameter cannot be infinite or NaN</exception>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteUnixTimeSeconds">
      <MemberSignature Language="C#" Value="public void WriteUnixTimeSeconds (long seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteUnixTimeSeconds(int64 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborWriter.WriteUnixTimeSeconds(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteUnixTimeSeconds (seconds As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteUnixTimeSeconds(long seconds);" />
      <MemberSignature Language="F#" Value="member this.WriteUnixTimeSeconds : int64 -&gt; unit" Usage="cborWriter.WriteUnixTimeSeconds seconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seconds" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="seconds">The value to write.</param>
        <summary>Writes a unix time in seconds as a tagged date/time value, as described in RFC7049 section 2.4.1.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Writing a new value exceeds the definite length of the parent data item.

-or-

The major type of the encoded value is not permitted in the parent data item.

-or-

The written data is not accepted under the current conformance mode.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

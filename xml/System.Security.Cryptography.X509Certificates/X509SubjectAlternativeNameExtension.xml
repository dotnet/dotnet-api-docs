<Type Name="X509SubjectAlternativeNameExtension" FullName="System.Security.Cryptography.X509Certificates.X509SubjectAlternativeNameExtension">
  <TypeSignature Language="C#" Value="public sealed class X509SubjectAlternativeNameExtension : System.Security.Cryptography.X509Certificates.X509Extension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X509SubjectAlternativeNameExtension extends System.Security.Cryptography.X509Certificates.X509Extension" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.X509Certificates.X509SubjectAlternativeNameExtension" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class X509SubjectAlternativeNameExtension&#xA;Inherits X509Extension" />
  <TypeSignature Language="F#" Value="type X509SubjectAlternativeNameExtension = class&#xA;    inherit X509Extension" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509SubjectAlternativeNameExtension sealed : System::Security::Cryptography::X509Certificates::X509Extension" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.X509Certificates.X509Extension</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the Subject Alternative Name X.509 Extension (2.5.29.17).</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SubjectAlternativeNameExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509SubjectAlternativeNameExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SubjectAlternativeNameExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SubjectAlternativeNameExtension" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SubjectAlternativeNameExtension (byte[] rawData, bool critical = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, bool critical) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509SubjectAlternativeNameExtension.#ctor(System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), Optional critical As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509SubjectAlternativeNameExtension : byte[] * bool -&gt; System.Security.Cryptography.X509Certificates.X509SubjectAlternativeNameExtension" Usage="new System.Security.Cryptography.X509Certificates.X509SubjectAlternativeNameExtension (rawData, critical)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="critical" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rawData">The encoded data used to create the extension.</param>
        <param name="critical"><see langword="true" /> if the extension is critical; otherwise, <see langword="false" />. The default is <see langword="false"/>.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SubjectAlternativeNameExtension" /> class from an encoded representation of the extension and an optional critical marker.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rawData" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <paramref name="rawData" /> did not decode as a Subject Alternative Name extension.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SubjectAlternativeNameExtension (ReadOnlySpan&lt;byte&gt; rawData, bool critical = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; rawData, bool critical) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509SubjectAlternativeNameExtension.#ctor(System.ReadOnlySpan{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As ReadOnlySpan(Of Byte), Optional critical As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509SubjectAlternativeNameExtension : ReadOnlySpan&lt;byte&gt; * bool -&gt; System.Security.Cryptography.X509Certificates.X509SubjectAlternativeNameExtension" Usage="new System.Security.Cryptography.X509Certificates.X509SubjectAlternativeNameExtension (rawData, critical)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="critical" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rawData">The encoded data used to create the extension.</param>
        <param name="critical"><see langword="true" /> if the extension is critical; otherwise, <see langword="false" />. The default is <see langword="false"/>.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SubjectAlternativeNameExtension" /> class from an encoded representation of the extension and an optional critical marker.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <paramref name="rawData" /> did not decode as a Subject Alternative Name extension.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public override void CopyFrom (System.Security.Cryptography.AsnEncodedData asnEncodedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFrom(class System.Security.Cryptography.AsnEncodedData asnEncodedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509SubjectAlternativeNameExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFrom (asnEncodedData As AsnEncodedData)" />
      <MemberSignature Language="F#" Value="override this.CopyFrom : System.Security.Cryptography.AsnEncodedData -&gt; unit" Usage="x509SubjectAlternativeNameExtension.CopyFrom asnEncodedData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFrom(System::Security::Cryptography::AsnEncodedData ^ asnEncodedData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asnEncodedData" Type="System.Security.Cryptography.AsnEncodedData" />
      </Parameters>
      <Docs>
        <param name="asnEncodedData">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="EnumerateDnsNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; EnumerateDnsNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; EnumerateDnsNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509SubjectAlternativeNameExtension.EnumerateDnsNames" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDnsNames () As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="member this.EnumerateDnsNames : unit -&gt; seq&lt;string&gt;" Usage="x509SubjectAlternativeNameExtension.EnumerateDnsNames " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ EnumerateDnsNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enumerates the alternative name entries with a DNS Name type identifier.</summary>
        <returns>The name entries with a DNS Name type identifier.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The contents of the extension could not be decoded successfully.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateIPAddresses">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Net.IPAddress&gt; EnumerateIPAddresses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Net.IPAddress&gt; EnumerateIPAddresses() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509SubjectAlternativeNameExtension.EnumerateIPAddresses" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateIPAddresses () As IEnumerable(Of IPAddress)" />
      <MemberSignature Language="F#" Value="member this.EnumerateIPAddresses : unit -&gt; seq&lt;System.Net.IPAddress&gt;" Usage="x509SubjectAlternativeNameExtension.EnumerateIPAddresses " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Net::IPAddress ^&gt; ^ EnumerateIPAddresses();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Net.IPAddress&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enumerates the alternative name entries with an IP Address type identifier.</summary>
        <returns>The name entries with an IP Address type identifier.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

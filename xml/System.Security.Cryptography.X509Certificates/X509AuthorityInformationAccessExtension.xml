<Type Name="X509AuthorityInformationAccessExtension" FullName="System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension">
  <TypeSignature Language="C#" Value="public sealed class X509AuthorityInformationAccessExtension : System.Security.Cryptography.X509Certificates.X509Extension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X509AuthorityInformationAccessExtension extends System.Security.Cryptography.X509Certificates.X509Extension" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class X509AuthorityInformationAccessExtension&#xA;Inherits X509Extension" />
  <TypeSignature Language="F#" Value="type X509AuthorityInformationAccessExtension = class&#xA;    inherit X509Extension" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509AuthorityInformationAccessExtension sealed : System::Security::Cryptography::X509Certificates::X509Extension" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.X509Certificates.X509Extension</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the Authority Information Access X.509 Extension (1.3.6.1.5.5.7.1.1).</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509AuthorityInformationAccessExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509AuthorityInformationAccessExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509AuthorityInformationAccessExtension (byte[] rawData, bool critical = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, bool critical) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension.#ctor(System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), Optional critical As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension : byte[] * bool -&gt; System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension" Usage="new System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension (rawData, critical)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="critical" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rawData">The encoded data used to create the extension.</param>
        <param name="critical">
          <see langword="true" /> if the extension is critical; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension" /> class from an encoded representation of the extension and an optional critical marker.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rawData" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <paramref name="rawData" /> did not decode as an Authority Information Access extension.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509AuthorityInformationAccessExtension (ReadOnlySpan&lt;byte&gt; rawData, bool critical = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; rawData, bool critical) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension.#ctor(System.ReadOnlySpan{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As ReadOnlySpan(Of Byte), Optional critical As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension : ReadOnlySpan&lt;byte&gt; * bool -&gt; System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension" Usage="new System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension (rawData, critical)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="critical" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rawData">The encoded data used to create the extension.</param>
        <param name="critical">
          <see langword="true" /> if the extension is critical; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension" /> class from an encoded representation of the extension and an optional critical marker.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <paramref name="rawData" /> did not decode as an Authority Information Access extension.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509AuthorityInformationAccessExtension (System.Collections.Generic.IEnumerable&lt;string&gt;? ocspUris, System.Collections.Generic.IEnumerable&lt;string&gt;? caIssuersUris, bool critical = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; ocspUris, class System.Collections.Generic.IEnumerable`1&lt;string&gt; caIssuersUris, bool critical) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ocspUris As IEnumerable(Of String), caIssuersUris As IEnumerable(Of String), Optional critical As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension : seq&lt;string&gt; * seq&lt;string&gt; * bool -&gt; System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension" Usage="new System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension (ocspUris, caIssuersUris, critical)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ocspUris" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="caIssuersUris" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="critical" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ocspUris">A collection of OCSP URI values to embed in the extension.</param>
        <param name="caIssuersUris">A collection of CAIssuers URI values to embed in the extension.</param>
        <param name="critical">
          <see langword="true" /> if the extension is critical; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension" /> class from a collection of OCSP and CAIssuer values.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Both <paramref name="ocspUris" /> and <paramref name="caIssuersUris" /> are
              either <see langword="null" /> or empty.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">One of the values in <paramref name="ocspUris" /> or <paramref name="caIssuersUris" />
              contains characters outside of the International Alphabet 5 (IA5) character space
              (which is equivalent to 7-bit US-ASCII).</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public override void CopyFrom (System.Security.Cryptography.AsnEncodedData asnEncodedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFrom(class System.Security.Cryptography.AsnEncodedData asnEncodedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFrom (asnEncodedData As AsnEncodedData)" />
      <MemberSignature Language="F#" Value="override this.CopyFrom : System.Security.Cryptography.AsnEncodedData -&gt; unit" Usage="x509AuthorityInformationAccessExtension.CopyFrom asnEncodedData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFrom(System::Security::Cryptography::AsnEncodedData ^ asnEncodedData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asnEncodedData" Type="System.Security.Cryptography.AsnEncodedData" />
      </Parameters>
      <Docs>
        <param name="asnEncodedData">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="EnumerateCAIssuersUris">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; EnumerateCAIssuersUris ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; EnumerateCAIssuersUris() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension.EnumerateCAIssuersUris" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateCAIssuersUris () As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="member this.EnumerateCAIssuersUris : unit -&gt; seq&lt;string&gt;" Usage="x509AuthorityInformationAccessExtension.EnumerateCAIssuersUris " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ EnumerateCAIssuersUris();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enumerates the AccessDescription values whose AccessMethod is CAIssuers (1.3.6.1.5.5.7.48.2) and content data type is URI.</summary>
        <returns>The URIs corresponding to the locations for the issuing Certificate Authority certificate.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The contents of the extension could not be decoded successfully.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateOcspUris">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; EnumerateOcspUris ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; EnumerateOcspUris() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension.EnumerateOcspUris" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateOcspUris () As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="member this.EnumerateOcspUris : unit -&gt; seq&lt;string&gt;" Usage="x509AuthorityInformationAccessExtension.EnumerateOcspUris " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ EnumerateOcspUris();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enumerates the AccessDescription values whose AccessMethod is OCSP (1.3.6.1.5.5.7.48.1) and content data type is URI.</summary>
        <returns>The URIs corresponding to the locations for the issuing Certificate Authority certificate.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The contents of the extension could not be decoded successfully.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateUris">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; EnumerateUris (System.Security.Cryptography.Oid accessMethodOid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; EnumerateUris(class System.Security.Cryptography.Oid accessMethodOid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension.EnumerateUris(System.Security.Cryptography.Oid)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateUris (accessMethodOid As Oid) As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="member this.EnumerateUris : System.Security.Cryptography.Oid -&gt; seq&lt;string&gt;" Usage="x509AuthorityInformationAccessExtension.EnumerateUris accessMethodOid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ EnumerateUris(System::Security::Cryptography::Oid ^ accessMethodOid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessMethodOid" Type="System.Security.Cryptography.Oid" />
      </Parameters>
      <Docs>
        <param name="accessMethodOid">The object identifier representing the access method for filtering.</param>
        <summary>Enumerates the AccessDescription values described in this extension, filtering the results to include only items using the specified access method and having a content data type of URI.</summary>
        <returns>The URI-typed access location values that correspond to the requested access method.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This method does not validate or ensure that the produced values are valid URIs,
              merely that they were encoded as a URI.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="accessMethodOid" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Cryptography.Oid.Value" /> property of the <paramref name="accessMethodOid" /> parameter is
              <see langword="null" /> or the empty string.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The contents of the extension could not be decoded successfully.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateUris">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; EnumerateUris (string accessMethodOid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; EnumerateUris(string accessMethodOid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension.EnumerateUris(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateUris (accessMethodOid As String) As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="member this.EnumerateUris : string -&gt; seq&lt;string&gt;" Usage="x509AuthorityInformationAccessExtension.EnumerateUris accessMethodOid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ EnumerateUris(System::String ^ accessMethodOid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessMethodOid" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="accessMethodOid">The dotted-decimal form of the access method for filtering.</param>
        <summary>Enumerates the AccessDescription values described in this extension, filtering the results to include only items using the specified access method and having a content data type of URI.</summary>
        <returns>The URI-typed access location values that correspond to the requested access method.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This method does not validate or ensure that the produced values are valid URIs,
              merely that they were encoded as a URI.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="accessMethodOid" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The contents of the extension could not be decoded successfully.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

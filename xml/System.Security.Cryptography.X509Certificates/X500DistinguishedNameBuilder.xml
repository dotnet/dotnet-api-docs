<Type Name="X500DistinguishedNameBuilder" FullName="System.Security.Cryptography.X509Certificates.X500DistinguishedNameBuilder">
  <TypeSignature Language="C#" Value="public sealed class X500DistinguishedNameBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X500DistinguishedNameBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.X509Certificates.X500DistinguishedNameBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class X500DistinguishedNameBuilder" />
  <TypeSignature Language="F#" Value="type X500DistinguishedNameBuilder = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class X500DistinguishedNameBuilder sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Facilitates building a distinguished name for an X.509 certificate.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

When constructing the `SEQUENCE OF` `Relative Distinguished Names`, this builder constructs the `SEQUENCE OF` in the opposite order which they were added to the builder. For example:

```cs
builder.AddCommonName("Contoso");
builder.AddCountryOrRegion("US");
```

Will produce a `SEQUENCE OF` with the country or region first, and the common name second. Because <xref:System.Security.Cryptography.X509Certificates.X500DistinguishedName> follows RFC 4514
when converting a `Distinguished Name` to a string, it starts with the last `Relative Distinguished Name` component, moving backward toward the first.

Because the builder creates the `SEQUENCE OF` in reverse, and <xref:System.Security.Cryptography.X509Certificates.X500DistinguishedName> is also in reverse, it gives the appearance of the added attributes and the string representation of the `Distinguished Name` in the same order.

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X500DistinguishedNameBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X500DistinguishedNameBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X500DistinguishedNameBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedNameBuilder" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Security.Cryptography.Oid oid, string value, System.Formats.Asn1.UniversalTagNumber? stringEncodingType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Security.Cryptography.Oid oid, string value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.UniversalTagNumber&gt; stringEncodingType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X500DistinguishedNameBuilder.Add(System.Security.Cryptography.Oid,System.String,System.Nullable{System.Formats.Asn1.UniversalTagNumber})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (oid As Oid, value As String, Optional stringEncodingType As Nullable(Of UniversalTagNumber) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.Add : System.Security.Cryptography.Oid * string * Nullable&lt;System.Formats.Asn1.UniversalTagNumber&gt; -&gt; unit" Usage="x500DistinguishedNameBuilder.Add (oid, value, stringEncodingType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oid" Type="System.Security.Cryptography.Oid" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="stringEncodingType" Type="System.Nullable&lt;System.Formats.Asn1.UniversalTagNumber&gt;" />
      </Parameters>
      <Docs>
        <param name="oid">The OID of the attribute.</param>
        <param name="value">The value of the attribute.</param>
        <param name="stringEncodingType">The encoding type to use when encoding the <paramref name="value" /> in to the attribute.</param>
        <summary>Adds a <c>Relative Distinguished Name</c> attribute identified by an OID.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="oid" /> or <paramref name="value" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="oid" /> does not contain a valid OID.

-or-

<paramref name="stringEncodingType" /> is not a type for character strings.

-or-

<paramref name="value" /> is not encodable as defined by <paramref name="stringEncodingType" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string oidValue, string value, System.Formats.Asn1.UniversalTagNumber? stringEncodingType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string oidValue, string value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.UniversalTagNumber&gt; stringEncodingType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X500DistinguishedNameBuilder.Add(System.String,System.String,System.Nullable{System.Formats.Asn1.UniversalTagNumber})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (oidValue As String, value As String, Optional stringEncodingType As Nullable(Of UniversalTagNumber) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.Add : string * string * Nullable&lt;System.Formats.Asn1.UniversalTagNumber&gt; -&gt; unit" Usage="x500DistinguishedNameBuilder.Add (oidValue, value, stringEncodingType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oidValue" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="stringEncodingType" Type="System.Nullable&lt;System.Formats.Asn1.UniversalTagNumber&gt;" />
      </Parameters>
      <Docs>
        <param name="oidValue">The OID of the attribute.</param>
        <param name="value">The value of the attribute.</param>
        <param name="stringEncodingType">The encoding type to use when encoding the <paramref name="value" /> in to the attribute.</param>
        <summary>Adds a <c>Relative Distinguished Name</c> attribute identified by an OID.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="oidValue" /> or <paramref name="value" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="oidValue" /> is an empty string or not a valid OID.

-or-

<paramref name="stringEncodingType" /> is not a type for character strings.

-or-

<paramref name="value" /> is not encodable as defined by <paramref name="stringEncodingType" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddCommonName">
      <MemberSignature Language="C#" Value="public void AddCommonName (string commonName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCommonName(string commonName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X500DistinguishedNameBuilder.AddCommonName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCommonName (commonName As String)" />
      <MemberSignature Language="F#" Value="member this.AddCommonName : string -&gt; unit" Usage="x500DistinguishedNameBuilder.AddCommonName commonName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCommonName(System::String ^ commonName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commonName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commonName">The common name to add.</param>
        <summary>Adds a common name attribute.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This encodes an attribute with the OID 2.5.4.3 as a UTF8String.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="commonName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="commonName" /> is empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCountryOrRegion">
      <MemberSignature Language="C#" Value="public void AddCountryOrRegion (string twoLetterCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCountryOrRegion(string twoLetterCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X500DistinguishedNameBuilder.AddCountryOrRegion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCountryOrRegion (twoLetterCode As String)" />
      <MemberSignature Language="F#" Value="member this.AddCountryOrRegion : string -&gt; unit" Usage="x500DistinguishedNameBuilder.AddCountryOrRegion twoLetterCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCountryOrRegion(System::String ^ twoLetterCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="twoLetterCode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="twoLetterCode">The two letter code of the country or region.</param>
        <summary>Adds a country or region attribute.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This encodes an attribute with the OID 2.5.4.6 as a PrintableString.

`twoLetterCode` should be a two letter ISO 3166 alpha-2 code, and will be normalized to upper case characters.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="twoLetterCode" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="twoLetterCode" /> is not exactly two characters, or contains
            characters that are not A through Z.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddDomainComponent">
      <MemberSignature Language="C#" Value="public void AddDomainComponent (string domainComponent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDomainComponent(string domainComponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X500DistinguishedNameBuilder.AddDomainComponent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDomainComponent (domainComponent As String)" />
      <MemberSignature Language="F#" Value="member this.AddDomainComponent : string -&gt; unit" Usage="x500DistinguishedNameBuilder.AddDomainComponent domainComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDomainComponent(System::String ^ domainComponent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domainComponent" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="domainComponent">The domain component to add.</param>
        <summary>Adds a domain component attribute.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This encodes an attribute with the OID 0.9.2342.19200300.100.1.25 as an IA5String.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="domainComponent" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="domainComponent" /> is empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddEmailAddress">
      <MemberSignature Language="C#" Value="public void AddEmailAddress (string emailAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEmailAddress(string emailAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X500DistinguishedNameBuilder.AddEmailAddress(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEmailAddress (emailAddress As String)" />
      <MemberSignature Language="F#" Value="member this.AddEmailAddress : string -&gt; unit" Usage="x500DistinguishedNameBuilder.AddEmailAddress emailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEmailAddress(System::String ^ emailAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailAddress">The email address to add.</param>
        <summary>Adds an email address attribute.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This encodes an attribute with the OID 1.2.840.113549.1.9.1 as an IA5String.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="emailAddress" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="emailAddress" /> is empty or exceeds 255 characters.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddLocalityName">
      <MemberSignature Language="C#" Value="public void AddLocalityName (string localityName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLocalityName(string localityName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X500DistinguishedNameBuilder.AddLocalityName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLocalityName (localityName As String)" />
      <MemberSignature Language="F#" Value="member this.AddLocalityName : string -&gt; unit" Usage="x500DistinguishedNameBuilder.AddLocalityName localityName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLocalityName(System::String ^ localityName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localityName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localityName">The locality name to add.</param>
        <summary>Adds a locality name attribute.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This encodes an attribute with the OID 2.5.4.7 as a UTF8String.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="localityName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="localityName" /> is empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddOrganizationalUnitName">
      <MemberSignature Language="C#" Value="public void AddOrganizationalUnitName (string organizationalUnitName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOrganizationalUnitName(string organizationalUnitName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X500DistinguishedNameBuilder.AddOrganizationalUnitName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOrganizationalUnitName (organizationalUnitName As String)" />
      <MemberSignature Language="F#" Value="member this.AddOrganizationalUnitName : string -&gt; unit" Usage="x500DistinguishedNameBuilder.AddOrganizationalUnitName organizationalUnitName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOrganizationalUnitName(System::String ^ organizationalUnitName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="organizationalUnitName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="organizationalUnitName">The organizational unit name to add.</param>
        <summary>Adds an organizational unit name attribute.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This encodes an attribute with the OID 2.5.4.11 as a UTF8String.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="organizationalUnitName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="organizationalUnitName" /> is empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddOrganizationName">
      <MemberSignature Language="C#" Value="public void AddOrganizationName (string organizationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOrganizationName(string organizationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X500DistinguishedNameBuilder.AddOrganizationName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOrganizationName (organizationName As String)" />
      <MemberSignature Language="F#" Value="member this.AddOrganizationName : string -&gt; unit" Usage="x500DistinguishedNameBuilder.AddOrganizationName organizationName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOrganizationName(System::String ^ organizationName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="organizationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="organizationName">The organization name to add.</param>
        <summary>Adds an organization name attribute.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This encodes an attribute with the OID 2.5.4.10 as a UTF8String.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="organizationName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="organizationName" /> is empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddStateOrProvinceName">
      <MemberSignature Language="C#" Value="public void AddStateOrProvinceName (string stateOrProvinceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddStateOrProvinceName(string stateOrProvinceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X500DistinguishedNameBuilder.AddStateOrProvinceName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddStateOrProvinceName (stateOrProvinceName As String)" />
      <MemberSignature Language="F#" Value="member this.AddStateOrProvinceName : string -&gt; unit" Usage="x500DistinguishedNameBuilder.AddStateOrProvinceName stateOrProvinceName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddStateOrProvinceName(System::String ^ stateOrProvinceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateOrProvinceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stateOrProvinceName">The state or province name to add.</param>
        <summary>Adds a state or province name attribute.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This encodes an attribute with the OID 2.5.4.8 as a UTF8String.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stateOrProvinceName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="stateOrProvinceName" /> is empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X500DistinguishedNameBuilder.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As X500DistinguishedName" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; System.Security.Cryptography.X509Certificates.X500DistinguishedName" Usage="x500DistinguishedNameBuilder.Build " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ Build();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Builds an <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> that represents the encoded attributes.</summary>
        <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> that represents the encoded attributes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

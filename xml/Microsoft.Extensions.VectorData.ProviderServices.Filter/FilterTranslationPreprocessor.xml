<Type Name="FilterTranslationPreprocessor" FullName="Microsoft.Extensions.VectorData.ProviderServices.Filter.FilterTranslationPreprocessor">
  <TypeSignature Language="C#" Value="public class FilterTranslationPreprocessor : System.Linq.Expressions.ExpressionVisitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FilterTranslationPreprocessor extends System.Linq.Expressions.ExpressionVisitor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.VectorData.ProviderServices.Filter.FilterTranslationPreprocessor" />
  <TypeSignature Language="VB.NET" Value="Public Class FilterTranslationPreprocessor&#xA;Inherits ExpressionVisitor" />
  <TypeSignature Language="F#" Value="type FilterTranslationPreprocessor = class&#xA;    inherit ExpressionVisitor" />
  <TypeSignature Language="C++ CLI" Value="public ref class FilterTranslationPreprocessor : System::Linq::Expressions::ExpressionVisitor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Linq.Expressions.ExpressionVisitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("MEVD9001")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("MEVD9001")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.RequiredMember]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.RequiredMember&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A processor for user-provided filter expressions which performs various common transformations before actual translation takes place.
            This is an internal support type meant for use by connectors only, and not for use by applications.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FilterTranslationPreprocessor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.VectorData.ProviderServices.Filter.FilterTranslationPreprocessor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FilterTranslationPreprocessor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Constructors of types with required members are not supported in this version of your compiler.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Constructors of types with required members are not supported in this version of your compiler.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.CompilerFeatureRequired("RequiredMembers")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.CompilerFeatureRequired("RequiredMembers")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Preprocess">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression Preprocess (System.Linq.Expressions.Expression node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Linq.Expressions.Expression Preprocess(class System.Linq.Expressions.Expression node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.VectorData.ProviderServices.Filter.FilterTranslationPreprocessor.Preprocess(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Function Preprocess (node As Expression) As Expression" />
      <MemberSignature Language="F#" Value="member this.Preprocess : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="filterTranslationPreprocessor.Preprocess node" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ Preprocess(System::Linq::Expressions::Expression ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>
            Preprocesses the filter expression before translation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsParameterization">
      <MemberSignature Language="C#" Value="public bool SupportsParameterization { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsParameterization" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.ProviderServices.Filter.FilterTranslationPreprocessor.SupportsParameterization" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportsParameterization As Boolean" />
      <MemberSignature Language="F#" Value="member this.SupportsParameterization : bool with get, set" Usage="Microsoft.Extensions.VectorData.ProviderServices.Filter.FilterTranslationPreprocessor.SupportsParameterization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsParameterization { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.RequiredMember]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.RequiredMember&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether the connector supports parameterization.
            </summary>
        <value>To be added.</value>
        <remarks>
            If <see langword="false" />, the visitor will inline captured variables and constant member accesses as simple constant nodes.
            If <see langword="true" />, these will instead be replaced with <see cref="T:Microsoft.Extensions.VectorData.ProviderServices.Filter.QueryParameterExpression" /> nodes.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitMember">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitMember (System.Linq.Expressions.MemberExpression node);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitMember(class System.Linq.Expressions.MemberExpression node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.VectorData.ProviderServices.Filter.FilterTranslationPreprocessor.VisitMember(System.Linq.Expressions.MemberExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitMember (node As MemberExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitMember : System.Linq.Expressions.MemberExpression -&gt; System.Linq.Expressions.Expression" Usage="filterTranslationPreprocessor.VisitMember node" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Linq::Expressions::Expression ^ VisitMember(System::Linq::Expressions::MemberExpression ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.MemberExpression" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>

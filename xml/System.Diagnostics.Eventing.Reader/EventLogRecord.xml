<Type Name="EventLogRecord" FullName="System.Diagnostics.Eventing.Reader.EventLogRecord">
  <TypeSignature Language="C#" Value="public class EventLogRecord : System.Diagnostics.Eventing.Reader.EventRecord" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogRecord extends System.Diagnostics.Eventing.Reader.EventRecord" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.EventLogRecord" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogRecord&#xA;Inherits EventRecord" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogRecord : System::Diagnostics::Eventing::Reader::EventRecord" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.Eventing.Reader.EventRecord</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contains the properties of an event instance for an event that is received from an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> object. The event properties provide information about the event such as the name of the computer where the event was logged and the time that the event was created.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivityId">
      <MemberSignature Language="C#" Value="public override Nullable&lt;Guid&gt; ActivityId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Guid&gt; ActivityId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ActivityId As Nullable(Of Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;Guid&gt; ActivityId { Nullable&lt;Guid&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the globally unique identifier (GUID) for the activity in process for which the event is involved. This allows consumers to group related activities.</summary>
        <value>Returns a GUID value.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bookmark">
      <MemberSignature Language="C#" Value="public override System.Diagnostics.Eventing.Reader.EventBookmark Bookmark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.Eventing.Reader.EventBookmark Bookmark" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Bookmark As EventBookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::Eventing::Reader::EventBookmark ^ Bookmark { System::Diagnostics::Eventing::Reader::EventBookmark ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventBookmark</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a placeholder (bookmark) that corresponds to this event. This can be used as a placeholder in a stream of events.</summary>
        <value>Returns a <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" /> object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerLog">
      <MemberSignature Language="C#" Value="public string ContainerLog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContainerLog" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainerLog As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContainerLog { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the event log or the event log file in which the event is stored.</summary>
        <value>Returns a string that contains the name of the event log or the event log file in which the event is stored.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        <summary>Releases the unmanaged resources used by this object, and optionally releases the managed resources.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FormatDescription">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the event message.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FormatDescription">
      <MemberSignature Language="C#" Value="public override string FormatDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string FormatDescription() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FormatDescription () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ FormatDescription();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the event message in the current locale.</summary>
        <returns>Returns a string that contains the event message in the current locale.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatDescription">
      <MemberSignature Language="C#" Value="public override string FormatDescription (System.Collections.Generic.IEnumerable&lt;object&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string FormatDescription(class System.Collections.Generic.IEnumerable`1&lt;object&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FormatDescription (values As IEnumerable(Of Object)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ FormatDescription(System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="values">The values used to replace variables in the event message. Variables are represented by %n, where n is a number.</param>
        <summary>Gets the event message, replacing variables in the message with the specified values.</summary>
        <returns>Returns a string that contains the event message in the current locale.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;object&gt; GetPropertyValues (System.Diagnostics.Eventing.Reader.EventLogPropertySelector propertySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;object&gt; GetPropertyValues(class System.Diagnostics.Eventing.Reader.EventLogPropertySelector propertySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues(System.Diagnostics.Eventing.Reader.EventLogPropertySelector)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValues (propertySelector As EventLogPropertySelector) As IList(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Object ^&gt; ^ GetPropertyValues(System::Diagnostics::Eventing::Reader::EventLogPropertySelector ^ propertySelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertySelector" Type="System.Diagnostics.Eventing.Reader.EventLogPropertySelector" />
      </Parameters>
      <Docs>
        <param name="propertySelector">Selects the property values to return.</param>
        <summary>Gets the enumeration of the values of the user-supplied event properties, or the results of XPath-based data if the event has XML representation.</summary>
        <returns>Returns a list of objects.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Id { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the identifier for this event. All events with this identifier value represent the same type of event.</summary>
        <value>Returns an integer value. This value can be null.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keywords">
      <MemberSignature Language="C#" Value="public override Nullable&lt;long&gt; Keywords { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; Keywords" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Keywords As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;long&gt; Keywords { Nullable&lt;long&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the keyword mask of the event. Get the value of the <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames" /> property to get the name of the keywords used in this mask.</summary>
        <value>Returns a long value. This value can be null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The keywords for an event are used to group the event with other similar events based on the usage of the events. Each keyword is a bit in a 64-bit mask. Predefined bit values and reserved bits occupy the top 16 positions of this mask, leaving the manifest to use any bits between 0x0000000000000001 and 0x0000800000000000.  
  
 The standard event keywords are defined in the <xref:System.Diagnostics.Eventing.Reader.StandardEventKeywords> enumeration.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeywordsDisplayNames">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;string&gt; KeywordsDisplayNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; KeywordsDisplayNames" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeywordsDisplayNames As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ KeywordsDisplayNames { System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the display names of the keywords used in the keyword mask for this event.</summary>
        <value>Returns an enumerable collection of strings that contain the display names of the keywords used in the keyword mask for this event.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The standard event keywords are defined in the <xref:System.Diagnostics.Eventing.Reader.StandardEventKeywords> enumeration.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public override Nullable&lt;byte&gt; Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;unsigned int8&gt; Level" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Level" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Level As Nullable(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;System::Byte&gt; Level { Nullable&lt;System::Byte&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the level of the event. The level signifies the severity of the event. For the name of the level, get the value of the <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName" /> property.</summary>
        <value>Returns a byte value. This value can be null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The standard event levels are defined in the <xref:System.Diagnostics.Eventing.Reader.StandardEventLevel> enumeration.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LevelDisplayName">
      <MemberSignature Language="C#" Value="public override string LevelDisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LevelDisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LevelDisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LevelDisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the display name of the level for this event.</summary>
        <value>Returns a string that contains the display name of the level for this event.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The standard event levels are defined in the <xref:System.Diagnostics.Eventing.Reader.StandardEventLevel> enumeration.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogName">
      <MemberSignature Language="C#" Value="public override string LogName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LogName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LogName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LogName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the event log where this event is logged.</summary>
        <value>Returns a string that contains a name of the event log that contains this event.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public override string MachineName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MachineName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the computer on which this event was logged.</summary>
        <value>Returns a string that contains the name of the computer on which this event was logged.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchedQueryIds">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;int&gt; MatchedQueryIds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;int32&gt; MatchedQueryIds" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MatchedQueryIds As IEnumerable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;int&gt; ^ MatchedQueryIds { System::Collections::Generic::IEnumerable&lt;int&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a list of query identifiers that this event matches. This event matches a query if the query would return this event.</summary>
        <value>Returns an enumerable collection of integer values.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opcode">
      <MemberSignature Language="C#" Value="public override Nullable&lt;short&gt; Opcode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int16&gt; Opcode" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Opcode As Nullable(Of Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;short&gt; Opcode { Nullable&lt;short&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the opcode of the event. The opcode defines a numeric value that identifies the activity or a point within an activity that the application was performing when it raised the event. For the name of the opcode, get the value of the <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName" /> property.</summary>
        <value>Returns a short value. This value can be null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The standard event opcodes are defined in the <xref:System.Diagnostics.Eventing.Reader.StandardEventOpcode> enumeration.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpcodeDisplayName">
      <MemberSignature Language="C#" Value="public override string OpcodeDisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OpcodeDisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OpcodeDisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OpcodeDisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the display name of the opcode for this event.</summary>
        <value>Returns a string that contains the display name of the opcode for this event.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The standard event opcodes are defined in the <xref:System.Diagnostics.Eventing.Reader.StandardEventOpcode> enumeration.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public override Nullable&lt;int&gt; ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ProcessId As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;int&gt; ProcessId { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the process identifier for the event provider that logged this event.</summary>
        <value>Returns an integer value. This value can be null.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Diagnostics.Eventing.Reader.EventProperty&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Diagnostics.Eventing.Reader.EventProperty&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Properties As IList(Of EventProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Diagnostics::Eventing::Reader::EventProperty ^&gt; ^ Properties { System::Collections::Generic::IList&lt;System::Diagnostics::Eventing::Reader::EventProperty ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Diagnostics.Eventing.Reader.EventProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the user-supplied properties of the event.</summary>
        <value>Returns a list of <see cref="T:System.Diagnostics.Eventing.Reader.EventProperty" /> objects.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderId">
      <MemberSignature Language="C#" Value="public override Nullable&lt;Guid&gt; ProviderId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Guid&gt; ProviderId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ProviderId As Nullable(Of Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;Guid&gt; ProviderId { Nullable&lt;Guid&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the globally unique identifier (GUID) of the event provider that published this event.</summary>
        <value>Returns a GUID value. This value can be null.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public override string ProviderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ProviderName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the event provider that published this event.</summary>
        <value>Returns a string that contains the name of the event provider that published this event.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Qualifiers">
      <MemberSignature Language="C#" Value="public override Nullable&lt;int&gt; Qualifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Qualifiers" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Qualifiers As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;int&gt; Qualifiers { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets qualifier numbers that are used for event identification.</summary>
        <value>Returns an integer value. This value can be null.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordId">
      <MemberSignature Language="C#" Value="public override Nullable&lt;long&gt; RecordId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; RecordId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordId As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;long&gt; RecordId { Nullable&lt;long&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the event record identifier of the event in the log.</summary>
        <value>Returns a long value. This value can be null.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelatedActivityId">
      <MemberSignature Language="C#" Value="public override Nullable&lt;Guid&gt; RelatedActivityId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Guid&gt; RelatedActivityId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RelatedActivityId As Nullable(Of Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;Guid&gt; RelatedActivityId { Nullable&lt;Guid&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a globally unique identifier (GUID) for a related activity in a process for which an event is involved.</summary>
        <value>Returns a GUID value. This value can be null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 An event provider can set the value of the ActivityID attribute before publishing events. All the events that are published after this ID is set will have the ActivityID attribute set to the specified value. This allows providers to specify simple relationships between events. The events that are published are part of the same activity. When a provider must start a new, but related activity, the publisher can publish a transfer event and specify the new activity ID. This new ID will appear as a RelatedActivityID attribute. This allows consumers to group related activities.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Task">
      <MemberSignature Language="C#" Value="public override Nullable&lt;int&gt; Task { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Task" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Task" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Task As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;int&gt; Task { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a task identifier for a portion of an application or a component that publishes an event. A task is a 16-bit value with 16 top values reserved. This type allows any value between 0x0000 and 0xffef to be used. For the name of the task, get the value of the <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName" /> property.</summary>
        <value>Returns an integer value. This value can be null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The standard event tasks are defined in the <xref:System.Diagnostics.Eventing.Reader.StandardEventTask> enumeration.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskDisplayName">
      <MemberSignature Language="C#" Value="public override string TaskDisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TaskDisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TaskDisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TaskDisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the display name of the task for the event.</summary>
        <value>Returns a string that contains the display name of the task for the event.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The standard event tasks are defined in the <xref:System.Diagnostics.Eventing.Reader.StandardEventTask> enumeration.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadId">
      <MemberSignature Language="C#" Value="public override Nullable&lt;int&gt; ThreadId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ThreadId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ThreadId As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;int&gt; ThreadId { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the thread identifier for the thread that the event provider is running in.</summary>
        <value>Returns an integer value. This value can be null.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeCreated">
      <MemberSignature Language="C#" Value="public override Nullable&lt;DateTime&gt; TimeCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; TimeCreated" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TimeCreated As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;DateTime&gt; TimeCreated { Nullable&lt;DateTime&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the time, in <see cref="T:System.DateTime" /> format, that the event was created.</summary>
        <value>Returns a <see cref="T:System.DateTime" /> value. The value can be null.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override string ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the XML representation of the event. All of the event properties are represented in the event's XML. The XML conforms to the [event schema](http://go.microsoft.com/fwlink/?LinkId=81771).</summary>
        <returns>Returns a string that contains the XML representation of the event.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserId">
      <MemberSignature Language="C#" Value="public override System.Security.Principal.SecurityIdentifier UserId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.SecurityIdentifier UserId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.UserId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UserId As SecurityIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::SecurityIdentifier ^ UserId { System::Security::Principal::SecurityIdentifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.SecurityIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the security descriptor of the user whose context is used to publish the event.</summary>
        <value>Returns a <see cref="T:System.Security.Principal.SecurityIdentifier" /> value.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public override Nullable&lt;byte&gt; Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;unsigned int8&gt; Version" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Version" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Version As Nullable(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;System::Byte&gt; Version { Nullable&lt;System::Byte&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the version number for the event.</summary>
        <value>Returns a byte value. This value can be null.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
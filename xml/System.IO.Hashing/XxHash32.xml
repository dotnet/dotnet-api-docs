<Type Name="XxHash32" FullName="System.IO.Hashing.XxHash32">
  <TypeSignature Language="C#" Value="public sealed class XxHash32 : System.IO.Hashing.NonCryptographicHashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XxHash32 extends System.IO.Hashing.NonCryptographicHashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.IO.Hashing.XxHash32" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XxHash32&#xA;Inherits NonCryptographicHashAlgorithm" />
  <TypeSignature Language="F#" Value="type XxHash32 = class&#xA;    inherit NonCryptographicHashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class XxHash32 sealed : System::IO::Hashing::NonCryptographicHashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Hashing</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Hashing.NonCryptographicHashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides an implementation of the XxHash32 algorithm.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XxHash32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash32.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XxHash32();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.IO.Hashing.XxHash32" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

The XxHash32 algorithm supports an optional seed value.
              Instances created with this constructor use the default seed, zero.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XxHash32 (int seed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash32.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (seed As Integer)" />
      <MemberSignature Language="F#" Value="new System.IO.Hashing.XxHash32 : int -&gt; System.IO.Hashing.XxHash32" Usage="new System.IO.Hashing.XxHash32 seed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XxHash32(int seed);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="seed" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seed">The hash seed value for computations from this instance.</param>
        <summary>Initializes a new instance of the <see cref="T:System.IO.Hashing.XxHash32" /> class with a specified seed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public override void Append (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Append(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash32.Append(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Append (source As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="F#" Value="override this.Append : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="xxHash32.Append source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Append(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="source">The data to process.</param>
        <summary>Appends the contents of <paramref name="source" /> to the data already processed for the current hash computation.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentHashCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentHashCore (Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentHashCore(valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash32.GetCurrentHashCore(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentHashCore (destination As Span(Of Byte))" />
      <MemberSignature Language="F#" Value="override this.GetCurrentHashCore : Span&lt;byte&gt; -&gt; unit" Usage="xxHash32.GetCurrentHashCore destination" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentHashCore(Span&lt;System::Byte&gt; destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <summary>Writes the computed hash value to <paramref name="destination" /> without modifying accumulated state.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="public static byte[] Hash (byte[] source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Hash(unsigned int8[] source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash32.Hash(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Hash (source As Byte()) As Byte()" />
      <MemberSignature Language="F#" Value="static member Hash : byte[] -&gt; byte[]" Usage="System.IO.Hashing.XxHash32.Hash source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Hash(cli::array &lt;System::Byte&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="source">The data to hash.</param>
        <summary>Computes the XxHash32 hash of the provided data.</summary>
        <returns>The XxHash32 hash of the provided data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="source" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="public static byte[] Hash (byte[] source, int seed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Hash(unsigned int8[] source, int32 seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash32.Hash(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Hash (source As Byte(), seed As Integer) As Byte()" />
      <MemberSignature Language="F#" Value="static member Hash : byte[] * int -&gt; byte[]" Usage="System.IO.Hashing.XxHash32.Hash (source, seed)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Hash(cli::array &lt;System::Byte&gt; ^ source, int seed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Byte[]" />
        <Parameter Name="seed" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">The data to hash.</param>
        <param name="seed">The seed value for this hash computation.</param>
        <summary>Computes the XxHash32 hash of the provided data using the provided seed.</summary>
        <returns>The XxHash32 hash of the provided data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="source" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="public static byte[] Hash (ReadOnlySpan&lt;byte&gt; source, int seed = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Hash(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, int32 seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash32.Hash(System.ReadOnlySpan{System.Byte},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Hash (source As ReadOnlySpan(Of Byte), Optional seed As Integer = 0) As Byte()" />
      <MemberSignature Language="F#" Value="static member Hash : ReadOnlySpan&lt;byte&gt; * int -&gt; byte[]" Usage="System.IO.Hashing.XxHash32.Hash (source, seed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="seed" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">The data to hash.</param>
        <param name="seed">The seed value for this hash computation. The default is zero.</param>
        <summary>Computes the XxHash32 hash of the provided data.</summary>
        <returns>The XxHash32 hash of the provided data.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="public static int Hash (ReadOnlySpan&lt;byte&gt; source, Span&lt;byte&gt; destination, int seed = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Hash(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, valuetype System.Span`1&lt;unsigned int8&gt; destination, int32 seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash32.Hash(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Hash (source As ReadOnlySpan(Of Byte), destination As Span(Of Byte), Optional seed As Integer = 0) As Integer" />
      <MemberSignature Language="F#" Value="static member Hash : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int -&gt; int" Usage="System.IO.Hashing.XxHash32.Hash (source, destination, seed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="seed" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">The data to hash.</param>
        <param name="destination">The buffer that receives the computed hash value.</param>
        <param name="seed">The seed value for this hash computation. The default is zero.</param>
        <summary>Computes the XxHash32 hash of the provided data into the provided destination.</summary>
        <returns>The number of bytes written to <paramref name="destination" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash32.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="xxHash32.Reset " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets the hash computation to the initial state.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryHash">
      <MemberSignature Language="C#" Value="public static bool TryHash (ReadOnlySpan&lt;byte&gt; source, Span&lt;byte&gt; destination, out int bytesWritten, int seed = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryHash(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, int32 seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash32.TryHash(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryHash (source As ReadOnlySpan(Of Byte), destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional seed As Integer = 0) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryHash : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int * int -&gt; bool" Usage="System.IO.Hashing.XxHash32.TryHash (source, destination, bytesWritten, seed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="seed" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">The data to hash.</param>
        <param name="destination">The buffer that receives the computed hash value.</param>
        <param name="bytesWritten">When this method returns, contains the number of bytes written to <paramref name="destination" />.</param>
        <param name="seed">The seed value for this hash computation. The default is zero.</param>
        <summary>Attempts to compute the XxHash32 hash of the provided data into the provided destination.</summary>
        <returns>
          <see langword="true" /> if <paramref name="destination" /> is long enough to receive the computed hash value (4 bytes); otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

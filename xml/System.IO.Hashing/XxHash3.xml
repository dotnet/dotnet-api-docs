<Type Name="XxHash3" FullName="System.IO.Hashing.XxHash3">
  <TypeSignature Language="C#" Value="public sealed class XxHash3 : System.IO.Hashing.NonCryptographicHashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XxHash3 extends System.IO.Hashing.NonCryptographicHashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.IO.Hashing.XxHash3" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XxHash3&#xA;Inherits NonCryptographicHashAlgorithm" />
  <TypeSignature Language="F#" Value="type XxHash3 = class&#xA;    inherit NonCryptographicHashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class XxHash3 sealed : System::IO::Hashing::NonCryptographicHashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Hashing</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Hashing.NonCryptographicHashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.SkipLocalsInit]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.SkipLocalsInit&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides an implementation of the XXH3 hash algorithm for generating a 64-bit hash.</summary>
    <remarks>For methods that persist the computed numerical hash value as bytes, the value is written in the Big Endian byte order.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XxHash3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash3.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XxHash3();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.IO.Hashing.XxHash3" /> class using the default seed value 0.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XxHash3 (long seed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash3.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (seed As Long)" />
      <MemberSignature Language="F#" Value="new System.IO.Hashing.XxHash3 : int64 -&gt; System.IO.Hashing.XxHash3" Usage="new System.IO.Hashing.XxHash3 seed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XxHash3(long seed);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="seed" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="seed">The seed value for the hash computation.</param>
        <summary>Initializes a new instance of the <see cref="T:System.IO.Hashing.XxHash3" /> class using the specified seed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public override void Append (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Append(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash3.Append(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Append (source As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="F#" Value="override this.Append : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="xxHash3.Append source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Append(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="source">The data to process.</param>
        <summary>Appends the contents of <paramref name="source" /> to the data already processed for the current hash computation.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentHashAsUInt64">
      <MemberSignature Language="C#" Value="public ulong GetCurrentHashAsUInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int64 GetCurrentHashAsUInt64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash3.GetCurrentHashAsUInt64" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentHashAsUInt64 () As ULong" />
      <MemberSignature Language="F#" Value="member this.GetCurrentHashAsUInt64 : unit -&gt; uint64" Usage="xxHash3.GetCurrentHashAsUInt64 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::UInt64 GetCurrentHashAsUInt64();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the current computed hash value without modifying accumulated state.</summary>
        <returns>The hash value for the data already provided.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentHashCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentHashCore (Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentHashCore(valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash3.GetCurrentHashCore(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentHashCore (destination As Span(Of Byte))" />
      <MemberSignature Language="F#" Value="override this.GetCurrentHashCore : Span&lt;byte&gt; -&gt; unit" Usage="xxHash3.GetCurrentHashCore destination" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentHashCore(Span&lt;System::Byte&gt; destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="destination">The buffer that receives the computed hash value.</param>
        <summary>Writes the computed 64-bit hash value to <paramref name="destination" /> without modifying accumulated state.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="public static byte[] Hash (byte[] source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Hash(unsigned int8[] source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash3.Hash(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Hash (source As Byte()) As Byte()" />
      <MemberSignature Language="F#" Value="static member Hash : byte[] -&gt; byte[]" Usage="System.IO.Hashing.XxHash3.Hash source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Hash(cli::array &lt;System::Byte&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="source">The data to hash.</param>
        <summary>Computes the XXH3 hash of the provided <paramref name="source" /> data.</summary>
        <returns>The XXH3 64-bit hash code of the provided data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="source" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="public static byte[] Hash (byte[] source, long seed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Hash(unsigned int8[] source, int64 seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash3.Hash(System.Byte[],System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Hash (source As Byte(), seed As Long) As Byte()" />
      <MemberSignature Language="F#" Value="static member Hash : byte[] * int64 -&gt; byte[]" Usage="System.IO.Hashing.XxHash3.Hash (source, seed)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Hash(cli::array &lt;System::Byte&gt; ^ source, long seed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Byte[]" />
        <Parameter Name="seed" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="source">The data to hash.</param>
        <param name="seed">The seed value for this hash computation.</param>
        <summary>Computes the XXH3 hash of the provided data using the provided seed.</summary>
        <returns>The XXH3 64-bit hash code of the provided data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="source" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="public static byte[] Hash (ReadOnlySpan&lt;byte&gt; source, long seed = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Hash(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, int64 seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash3.Hash(System.ReadOnlySpan{System.Byte},System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Hash (source As ReadOnlySpan(Of Byte), Optional seed As Long = 0) As Byte()" />
      <MemberSignature Language="F#" Value="static member Hash : ReadOnlySpan&lt;byte&gt; * int64 -&gt; byte[]" Usage="System.IO.Hashing.XxHash3.Hash (source, seed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="seed" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="source">The data to hash.</param>
        <param name="seed">The seed value for this hash computation. The default is zero.</param>
        <summary>Computes the XXH3 hash of the provided <paramref name="source" /> data using the optionally provided <paramref name="seed" />.</summary>
        <returns>The XXH3 64-bit hash code of the provided data.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="public static int Hash (ReadOnlySpan&lt;byte&gt; source, Span&lt;byte&gt; destination, long seed = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Hash(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, valuetype System.Span`1&lt;unsigned int8&gt; destination, int64 seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash3.Hash(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Hash (source As ReadOnlySpan(Of Byte), destination As Span(Of Byte), Optional seed As Long = 0) As Integer" />
      <MemberSignature Language="F#" Value="static member Hash : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int64 -&gt; int" Usage="System.IO.Hashing.XxHash3.Hash (source, destination, seed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="seed" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="source">The data to hash.</param>
        <param name="destination">The buffer that receives the computed 64-bit hash code.</param>
        <param name="seed">The seed value for this hash computation. The default is zero.</param>
        <summary>Computes the XXH3 hash of the provided <paramref name="source" /> data into the provided <paramref name="destination" /> using the optionally provided <paramref name="seed" />.</summary>
        <returns>The number of bytes written to <paramref name="destination" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destination" /> is shorter than the number of bytes produced from this hash algorithm (8 bytes).</exception>
      </Docs>
    </Member>
    <Member MemberName="HashToUInt64">
      <MemberSignature Language="C#" Value="public static ulong HashToUInt64 (ReadOnlySpan&lt;byte&gt; source, long seed = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 HashToUInt64(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, int64 seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash3.HashToUInt64(System.ReadOnlySpan{System.Byte},System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashToUInt64 (source As ReadOnlySpan(Of Byte), Optional seed As Long = 0) As ULong" />
      <MemberSignature Language="F#" Value="static member HashToUInt64 : ReadOnlySpan&lt;byte&gt; * int64 -&gt; uint64" Usage="System.IO.Hashing.XxHash3.HashToUInt64 (source, seed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="seed" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="source">The data to hash.</param>
        <param name="seed">The seed value for this hash computation.</param>
        <summary>Computes the XXH3 hash of the provided data.</summary>
        <returns>The computed XXH3 hash.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash3.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="xxHash3.Reset " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets the hash computation to the initial state.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryHash">
      <MemberSignature Language="C#" Value="public static bool TryHash (ReadOnlySpan&lt;byte&gt; source, Span&lt;byte&gt; destination, out int bytesWritten, long seed = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryHash(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, int64 seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.XxHash3.TryHash(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryHash (source As ReadOnlySpan(Of Byte), destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional seed As Long = 0) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryHash : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int * int64 -&gt; bool" Usage="System.IO.Hashing.XxHash3.TryHash (source, destination, bytesWritten, seed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="seed" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="source">The data to hash.</param>
        <param name="destination">The buffer that receives the computed 64-bit hash code.</param>
        <param name="bytesWritten">When this method returns, contains the number of bytes written to <paramref name="destination" />.</param>
        <param name="seed">The seed value for this hash computation. The default is zero.</param>
        <summary>Attempts to compute the XXH3 hash of the provided <paramref name="source" /> data into the provided <paramref name="destination" /> using the optionally provided <paramref name="seed" />.</summary>
        <returns>
          <see langword="true" /> if <paramref name="destination" /> is long enough to receive the computed hash value (8 bytes); otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

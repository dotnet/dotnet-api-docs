<Type Name="Crc32" FullName="System.IO.Hashing.Crc32">
  <TypeSignature Language="C#" Value="public sealed class Crc32 : System.IO.Hashing.NonCryptographicHashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Crc32 extends System.IO.Hashing.NonCryptographicHashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.IO.Hashing.Crc32" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Crc32&#xA;Inherits NonCryptographicHashAlgorithm" />
  <TypeSignature Language="F#" Value="type Crc32 = class&#xA;    inherit NonCryptographicHashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class Crc32 sealed : System::IO::Hashing::NonCryptographicHashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Hashing</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Hashing.NonCryptographicHashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides an implementation of the CRC-32 algorithm, as used in ITU-T V.42 and IEEE 802.3.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

This implementation emits the answer in the Little Endian byte order so that
                the CRC residue relationship (CRC(message concat CRC(message)) is a fixed value) holds.
                For CRC-32, this stable output is the byte sequence `{ 0x1C, 0xDF, 0x44, 0x21 }`,
                the Little Endian representation of `0x2144DF1C`.
              


There are multiple, incompatible, definitions of a 32-bit cyclic redundancy
                check (CRC) algorithm. When interoperating with another system, ensure that you
                are using the same definition. The definition used by this implementation is not
                compatible with the cyclic redundancy check described in ITU-T I.363.5.

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Crc32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.Crc32.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Crc32();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.IO.Hashing.Crc32" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public override void Append (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Append(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.Crc32.Append(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Append (source As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="F#" Value="override this.Append : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="crc32.Append source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Append(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="source">The data to process.</param>
        <summary>Appends the contents of <paramref name="source" /> to the data already processed for the current hash computation.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentHashCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentHashCore (Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentHashCore(valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.Crc32.GetCurrentHashCore(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentHashCore (destination As Span(Of Byte))" />
      <MemberSignature Language="F#" Value="override this.GetCurrentHashCore : Span&lt;byte&gt; -&gt; unit" Usage="crc32.GetCurrentHashCore destination" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentHashCore(Span&lt;System::Byte&gt; destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="destination">The buffer that receives the computed hash value.</param>
        <summary>Writes the computed hash value to <paramref name="destination" /> without modifying accumulated state.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashAndResetCore">
      <MemberSignature Language="C#" Value="protected override void GetHashAndResetCore (Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetHashAndResetCore(valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.Crc32.GetHashAndResetCore(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetHashAndResetCore (destination As Span(Of Byte))" />
      <MemberSignature Language="F#" Value="override this.GetHashAndResetCore : Span&lt;byte&gt; -&gt; unit" Usage="crc32.GetHashAndResetCore destination" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetHashAndResetCore(Span&lt;System::Byte&gt; destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <summary>Writes the computed hash value to <paramref name="destination" /> then clears the accumulated state.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="public static byte[] Hash (byte[] source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Hash(unsigned int8[] source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.Crc32.Hash(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Hash (source As Byte()) As Byte()" />
      <MemberSignature Language="F#" Value="static member Hash : byte[] -&gt; byte[]" Usage="System.IO.Hashing.Crc32.Hash source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Hash(cli::array &lt;System::Byte&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="source">The data to hash.</param>
        <summary>Computes the CRC-32 hash of the provided data.</summary>
        <returns>The CRC-32 hash of the provided data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="source" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="public static byte[] Hash (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Hash(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.Crc32.Hash(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Hash (source As ReadOnlySpan(Of Byte)) As Byte()" />
      <MemberSignature Language="F#" Value="static member Hash : ReadOnlySpan&lt;byte&gt; -&gt; byte[]" Usage="System.IO.Hashing.Crc32.Hash source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Hash(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="source">The data to hash.</param>
        <summary>Computes the CRC-32 hash of the provided data.</summary>
        <returns>The CRC-32 hash of the provided data.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="public static int Hash (ReadOnlySpan&lt;byte&gt; source, Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Hash(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.Crc32.Hash(System.ReadOnlySpan{System.Byte},System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Hash (source As ReadOnlySpan(Of Byte), destination As Span(Of Byte)) As Integer" />
      <MemberSignature Language="F#" Value="static member Hash : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; -&gt; int" Usage="System.IO.Hashing.Crc32.Hash (source, destination)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Hash(ReadOnlySpan&lt;System::Byte&gt; source, Span&lt;System::Byte&gt; destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="source">The data to hash.</param>
        <param name="destination">The buffer that receives the computed hash value.</param>
        <summary>Computes the CRC-32 hash of the provided data into the provided destination.</summary>
        <returns>The number of bytes written to <paramref name="destination" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.Crc32.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="crc32.Reset " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets the hash computation to the initial state.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryHash">
      <MemberSignature Language="C#" Value="public static bool TryHash (ReadOnlySpan&lt;byte&gt; source, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryHash(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Hashing.Crc32.TryHash(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryHash (source As ReadOnlySpan(Of Byte), destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryHash : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int -&gt; bool" Usage="System.IO.Hashing.Crc32.TryHash (source, destination, bytesWritten)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryHash(ReadOnlySpan&lt;System::Byte&gt; source, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Hashing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="source">The data to hash.</param>
        <param name="destination">The buffer that receives the computed hash value.</param>
        <param name="bytesWritten">When this method returns, contains the number of bytes written to <paramref name="destination" />.</param>
        <summary>Attempts to compute the CRC-32 hash of the provided data into the provided destination.</summary>
        <returns>
          <see langword="true" /> if <paramref name="destination" /> is long enough to receive the computed hash value (4 bytes); otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

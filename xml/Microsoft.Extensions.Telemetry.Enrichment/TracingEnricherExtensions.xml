<Type Name="TracingEnricherExtensions" FullName="Microsoft.Extensions.Telemetry.Enrichment.TracingEnricherExtensions">
  <TypeSignature Language="C#" Value="public static class TracingEnricherExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TracingEnricherExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Telemetry.Enrichment.TracingEnricherExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module TracingEnricherExtensions" />
  <TypeSignature Language="F#" Value="type TracingEnricherExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class TracingEnricherExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for Tracing.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddTraceEnricher">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddTraceEnricher (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Microsoft.Extensions.Telemetry.Enrichment.ITraceEnricher enricher);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddTraceEnricher(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class Microsoft.Extensions.Telemetry.Enrichment.ITraceEnricher enricher) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Enrichment.TracingEnricherExtensions.AddTraceEnricher(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Telemetry.Enrichment.ITraceEnricher)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTraceEnricher (services As IServiceCollection, enricher As ITraceEnricher) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddTraceEnricher : Microsoft.Extensions.DependencyInjection.IServiceCollection * Microsoft.Extensions.Telemetry.Enrichment.ITraceEnricher -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.Telemetry.Enrichment.TracingEnricherExtensions.AddTraceEnricher (services, enricher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddTraceEnricher(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Microsoft::Extensions::Telemetry::Enrichment::ITraceEnricher ^ enricher);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="enricher" Type="Microsoft.Extensions.Telemetry.Enrichment.ITraceEnricher" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add this enricher to.</param>
        <param name="enricher">Enricher to be added.</param>
        <summary>
            Adds an enricher to enrich all traces.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The argument <paramref name="services" /> or <paramref name="enricher" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddTraceEnricher">
      <MemberSignature Language="C#" Value="public static OpenTelemetry.Trace.TracerProviderBuilder AddTraceEnricher (this OpenTelemetry.Trace.TracerProviderBuilder builder, Microsoft.Extensions.Telemetry.Enrichment.ITraceEnricher enricher);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class OpenTelemetry.Trace.TracerProviderBuilder AddTraceEnricher(class OpenTelemetry.Trace.TracerProviderBuilder builder, class Microsoft.Extensions.Telemetry.Enrichment.ITraceEnricher enricher) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Enrichment.TracingEnricherExtensions.AddTraceEnricher(OpenTelemetry.Trace.TracerProviderBuilder,Microsoft.Extensions.Telemetry.Enrichment.ITraceEnricher)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTraceEnricher (builder As TracerProviderBuilder, enricher As ITraceEnricher) As TracerProviderBuilder" />
      <MemberSignature Language="F#" Value="static member AddTraceEnricher : OpenTelemetry.Trace.TracerProviderBuilder * Microsoft.Extensions.Telemetry.Enrichment.ITraceEnricher -&gt; OpenTelemetry.Trace.TracerProviderBuilder" Usage="Microsoft.Extensions.Telemetry.Enrichment.TracingEnricherExtensions.AddTraceEnricher (builder, enricher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static OpenTelemetry::Trace::TracerProviderBuilder ^ AddTraceEnricher(OpenTelemetry::Trace::TracerProviderBuilder ^ builder, Microsoft::Extensions::Telemetry::Enrichment::ITraceEnricher ^ enricher);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTelemetry.Trace.TracerProviderBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="OpenTelemetry.Trace.TracerProviderBuilder" RefType="this" />
        <Parameter Name="enricher" Type="Microsoft.Extensions.Telemetry.Enrichment.ITraceEnricher" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:OpenTelemetry.Trace.TracerProviderBuilder" /> to add enricher.</param>
        <param name="enricher">The enricher to be added for enriching traces.</param>
        <summary>
            Adds an enricher to enrich all traces.
            </summary>
        <returns>The <see cref="T:OpenTelemetry.Trace.TracerProviderBuilder" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The argument <paramref name="builder" /> or <paramref name="enricher" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddTraceEnricher&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddTraceEnricher&lt;T&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services) where T : class, Microsoft.Extensions.Telemetry.Enrichment.ITraceEnricher;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddTraceEnricher&lt;class (class Microsoft.Extensions.Telemetry.Enrichment.ITraceEnricher) T&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Enrichment.TracingEnricherExtensions.AddTraceEnricher``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTraceEnricher(Of T As {Class, ITraceEnricher}) (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddTraceEnricher : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'T : null and 'T :&gt; Microsoft.Extensions.Telemetry.Enrichment.ITraceEnricher)" Usage="Microsoft.Extensions.Telemetry.Enrichment.TracingEnricherExtensions.AddTraceEnricher services" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class, Microsoft::Extensions::Telemetry::Enrichment::ITraceEnricher[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddTraceEnricher(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.Extensions.Telemetry.Enrichment.ITraceEnricher</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Enricher object type.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add this enricher to.</param>
        <summary>
            Adds an enricher to enrich all traces.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The argument <paramref name="services" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddTraceEnricher&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static OpenTelemetry.Trace.TracerProviderBuilder AddTraceEnricher&lt;T&gt; (this OpenTelemetry.Trace.TracerProviderBuilder builder) where T : class, Microsoft.Extensions.Telemetry.Enrichment.ITraceEnricher;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class OpenTelemetry.Trace.TracerProviderBuilder AddTraceEnricher&lt;class (class Microsoft.Extensions.Telemetry.Enrichment.ITraceEnricher) T&gt;(class OpenTelemetry.Trace.TracerProviderBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Enrichment.TracingEnricherExtensions.AddTraceEnricher``1(OpenTelemetry.Trace.TracerProviderBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTraceEnricher(Of T As {Class, ITraceEnricher}) (builder As TracerProviderBuilder) As TracerProviderBuilder" />
      <MemberSignature Language="F#" Value="static member AddTraceEnricher : OpenTelemetry.Trace.TracerProviderBuilder -&gt; OpenTelemetry.Trace.TracerProviderBuilder (requires 'T : null and 'T :&gt; Microsoft.Extensions.Telemetry.Enrichment.ITraceEnricher)" Usage="Microsoft.Extensions.Telemetry.Enrichment.TracingEnricherExtensions.AddTraceEnricher builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class, Microsoft::Extensions::Telemetry::Enrichment::ITraceEnricher[System::Runtime::CompilerServices::Extension]&#xA; static OpenTelemetry::Trace::TracerProviderBuilder ^ AddTraceEnricher(OpenTelemetry::Trace::TracerProviderBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTelemetry.Trace.TracerProviderBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.Extensions.Telemetry.Enrichment.ITraceEnricher</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="OpenTelemetry.Trace.TracerProviderBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Enricher object type.</typeparam>
        <param name="builder">The <see cref="T:OpenTelemetry.Trace.TracerProviderBuilder" /> to add enricher.</param>
        <summary>
            Adds an enricher to enrich all traces.
            </summary>
        <returns>The <see cref="T:OpenTelemetry.Trace.TracerProviderBuilder" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The argument <paramref name="builder" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

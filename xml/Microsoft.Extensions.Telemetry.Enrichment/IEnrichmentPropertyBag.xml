<Type Name="IEnrichmentPropertyBag" FullName="Microsoft.Extensions.Telemetry.Enrichment.IEnrichmentPropertyBag">
  <TypeSignature Language="C#" Value="public interface IEnrichmentPropertyBag" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnrichmentPropertyBag" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Telemetry.Enrichment.IEnrichmentPropertyBag" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnrichmentPropertyBag" />
  <TypeSignature Language="F#" Value="type IEnrichmentPropertyBag = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnrichmentPropertyBag" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Allows enrichers to report enrichment properties.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (ReadOnlySpan&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype System.ReadOnlySpan`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Enrichment.IEnrichmentPropertyBag.Add(System.ReadOnlySpan{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (properties As ReadOnlySpan(Of KeyValuePair(Of String, Object)))" />
      <MemberSignature Language="F#" Value="abstract member Add : ReadOnlySpan&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt; -&gt; unit" Usage="iEnrichmentPropertyBag.Add properties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(ReadOnlySpan&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.ReadOnlySpan&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="properties">The properties to add.</param>
        <summary>
            Adds a series of properties to the bag of enrichment properties.
            </summary>
        <remarks>Refer to the <see cref="M:Microsoft.Extensions.Telemetry.Enrichment.IEnrichmentPropertyBag.Add(System.String,System.Object)" /> overload for a description of the serialization semantics.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (ReadOnlySpan&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype System.ReadOnlySpan`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Enrichment.IEnrichmentPropertyBag.Add(System.ReadOnlySpan{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (properties As ReadOnlySpan(Of KeyValuePair(Of String, String)))" />
      <MemberSignature Language="F#" Value="abstract member Add : ReadOnlySpan&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; unit" Usage="iEnrichmentPropertyBag.Add properties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(ReadOnlySpan&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.ReadOnlySpan&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="properties">The properties to add.</param>
        <summary>
            Adds a series of properties to the bag of enrichment properties.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Enrichment.IEnrichmentPropertyBag.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, value As Object)" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj -&gt; unit" Usage="iEnrichmentPropertyBag.Add (key, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">Enrichment property key.</param>
        <param name="value">Enrichment property value.</param>
        <summary>
            Add a property in form of a key/value pair to the bag of enrichment properties.
            </summary>
        <remarks>
            For log enrichment, <paramref name="value" /> is serialized as per the rules below:
            <list type="bullet"><listheader><term>Primitive types</term><description>recognized and efficiently serialized.</description></listheader><item><term>Arrays</term><description>recognized and serialized in a loop.</description></item><item><term><see cref="T:System.Collections.IDictionary" /></term><description>recognized as IDictionary&lt;string, object&gt; and serialized in a loop.</description></item><item><term><see cref="T:System.DateTime" /></term><description>recognized and serialized after converting to <see cref="M:System.DateTime.ToUniversalTime" />.</description></item><item><term>All the rest</term><description>converted to <see cref="T:System.String" /> as is and serialized.</description></item></list>
            For metric enrichment, <paramref name="value" /> is converted to <see cref="T:System.String" /> format using <see cref="M:System.Object.ToString" /> method.
            </remarks>
        <exception cref="T:System.ArgumentException">When <paramref name="key" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
            Either <paramref name="key" /> or <paramref name="value" /> is <see langword="null" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Enrichment.IEnrichmentPropertyBag.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, value As String)" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string -&gt; unit" Usage="iEnrichmentPropertyBag.Add (key, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ key, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Enrichment property key.</param>
        <param name="value">Enrichment property value.</param>
        <summary>
            Add a property in form of a key/value pair to the bag of enrichment properties.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">When <paramref name="key" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
            Either <paramref name="key" /> or <paramref name="value" /> is <see langword="null" />.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>

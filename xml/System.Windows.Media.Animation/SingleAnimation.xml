<Type Name="SingleAnimation" FullName="System.Windows.Media.Animation.SingleAnimation">
  <TypeSignature Language="C#" Value="public class SingleAnimation : System.Windows.Media.Animation.SingleAnimationBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SingleAnimation extends System.Windows.Media.Animation.SingleAnimationBase" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.SingleAnimation" />
  <TypeSignature Language="VB.NET" Value="Public Class SingleAnimation&#xA;Inherits SingleAnimationBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SingleAnimation : System::Windows::Media::Animation::SingleAnimationBase" />
  <TypeSignature Language="F#" Value="type SingleAnimation = class&#xA;    inherit SingleAnimationBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi SingleAnimation extends System.Windows.Media.Animation.SingleAnimationBase" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.SingleAnimationBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Animates the value of a  <see cref="T:System.Single" /> property between two target values using      linear interpolation over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 An animation updates the value of a property over a period of time.  An animation effect can be subtle, such as moving a <xref:System.Windows.Shapes.Shape> a few pixels left and right, or dramatic, such as enlarging an object to 200 times its original size while spinning it and changing its color. To create an animation in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], you associate an animation with an object's property value.  
  
## Target Values  
 The <xref:System.Windows.Media.Animation.SingleAnimation> class creates a transition between two target values. To set its target values, use its <xref:System.Windows.Media.Animation.SingleAnimation.From%2A>, <xref:System.Windows.Media.Animation.SingleAnimation.To%2A>, and <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> properties.  The following table summarizes how the <xref:System.Windows.Media.Animation.SingleAnimation.From%2A>, <xref:System.Windows.Media.Animation.SingleAnimation.To%2A>, and <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> properties may be used together or separately to determine an animation's target values.  
  
|Properties specified|Resulting behavior|  
|--------------------------|------------------------|  
|<xref:System.Windows.Media.Animation.SingleAnimation.From%2A>|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.From%2A> property to the base value of the property being animated or to a previous animation's output value, depending on how the previous animation is configured.|  
|<xref:System.Windows.Media.Animation.SingleAnimation.From%2A> and <xref:System.Windows.Media.Animation.SingleAnimation.To%2A>|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.From%2A> property to the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.To%2A> property.|  
|<xref:System.Windows.Media.Animation.SingleAnimation.From%2A> and <xref:System.Windows.Media.Animation.SingleAnimation.By%2A>|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.From%2A> property to the value specified by the sum of the <xref:System.Windows.Media.Animation.SingleAnimation.From%2A> and <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> properties.|  
|<xref:System.Windows.Media.Animation.SingleAnimation.To%2A>|The animation progresses from the animated property's base value or a previous animation's output value to the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.To%2A> property.|  
|<xref:System.Windows.Media.Animation.SingleAnimation.By%2A>|The animation progresses from the base value of the property being animated or a previous animation's output value to the sum of that value and the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> property.|  
  
> [!NOTE]
>  If you set both the <xref:System.Windows.Media.Animation.SingleAnimation.To%2A> and <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> properties, the <xref:System.Windows.Media.Animation.SingleAnimation.To%2A> property takes precedence and the <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> property is ignored.  
  
 To use other interpolation methods or animate between more than two target values, use a <xref:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames> object.  
  
 For information about applying multiple animations to a single property, see [Key-Frame Animations Overview](/dotnet/framework/wpf/graphics-multimedia/key-frame-animations-overview).  
  
## Freezable Features  
 Because the <xref:System.Windows.Media.Animation.SingleAnimation> class inherits from <xref:System.Windows.Freezable>, <xref:System.Windows.Media.Animation.SingleAnimation> objects gain several special features, which include the following: they can be declared as , shared among multiple objects, made read-only to improve performance, cloned, and made thread-safe. For more information about the different features provided by <xref:System.Windows.Freezable> objects, see the [Freezable Objects Overview](/dotnet/framework/wpf/advanced/freezable-objects-overview).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" />
    <altmember cref="T:System.Windows.Freezable" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SingleAnimation" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SingleAnimation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.SingleAnimation.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SingleAnimation();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SingleAnimation" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SingleAnimation (float toValue, System.Windows.Duration duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 toValue, valuetype System.Windows.Duration duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.SingleAnimation.#ctor(System.Single,System.Windows.Duration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (toValue As Single, duration As Duration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SingleAnimation(float toValue, System::Windows::Duration duration);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.SingleAnimation : single * System.Windows.Duration -&gt; System.Windows.Media.Animation.SingleAnimation" Usage="new System.Windows.Media.Animation.SingleAnimation (toValue, duration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="toValue" Type="System.Single" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="toValue">The destination value of the animation.</param>
        <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SingleAnimation" /> class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SingleAnimation (float fromValue, float toValue, System.Windows.Duration duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 fromValue, float32 toValue, valuetype System.Windows.Duration duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.SingleAnimation.#ctor(System.Single,System.Single,System.Windows.Duration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fromValue As Single, toValue As Single, duration As Duration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SingleAnimation(float fromValue, float toValue, System::Windows::Duration duration);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.SingleAnimation : single * single * System.Windows.Duration -&gt; System.Windows.Media.Animation.SingleAnimation" Usage="new System.Windows.Media.Animation.SingleAnimation (fromValue, toValue, duration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fromValue" Type="System.Single" />
        <Parameter Name="toValue" Type="System.Single" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="fromValue">The starting value of the animation.</param>
        <param name="toValue">The destination value of the animation.</param>
        <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SingleAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SingleAnimation (float toValue, System.Windows.Duration duration, System.Windows.Media.Animation.FillBehavior fillBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 toValue, valuetype System.Windows.Duration duration, valuetype System.Windows.Media.Animation.FillBehavior fillBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.SingleAnimation.#ctor(System.Single,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (toValue As Single, duration As Duration, fillBehavior As FillBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SingleAnimation(float toValue, System::Windows::Duration duration, System::Windows::Media::Animation::FillBehavior fillBehavior);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.SingleAnimation : single * System.Windows.Duration * System.Windows.Media.Animation.FillBehavior -&gt; System.Windows.Media.Animation.SingleAnimation" Usage="new System.Windows.Media.Animation.SingleAnimation (toValue, duration, fillBehavior)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="toValue" Type="System.Single" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
        <Parameter Name="fillBehavior" Type="System.Windows.Media.Animation.FillBehavior" />
      </Parameters>
      <Docs>
        <param name="toValue">The destination value of the animation.</param>
        <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
        <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SingleAnimation" /> class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SingleAnimation (float fromValue, float toValue, System.Windows.Duration duration, System.Windows.Media.Animation.FillBehavior fillBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 fromValue, float32 toValue, valuetype System.Windows.Duration duration, valuetype System.Windows.Media.Animation.FillBehavior fillBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.SingleAnimation.#ctor(System.Single,System.Single,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fromValue As Single, toValue As Single, duration As Duration, fillBehavior As FillBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SingleAnimation(float fromValue, float toValue, System::Windows::Duration duration, System::Windows::Media::Animation::FillBehavior fillBehavior);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.SingleAnimation : single * single * System.Windows.Duration * System.Windows.Media.Animation.FillBehavior -&gt; System.Windows.Media.Animation.SingleAnimation" Usage="new System.Windows.Media.Animation.SingleAnimation (fromValue, toValue, duration, fillBehavior)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fromValue" Type="System.Single" />
        <Parameter Name="toValue" Type="System.Single" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
        <Parameter Name="fillBehavior" Type="System.Windows.Media.Animation.FillBehavior" />
      </Parameters>
      <Docs>
        <param name="fromValue">The starting value of the animation.</param>
        <param name="toValue">The destination value of the animation.</param>
        <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
        <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SingleAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="By">
      <MemberSignature Language="C#" Value="public float? By { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float32&gt; By" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.SingleAnimation.By" />
      <MemberSignature Language="VB.NET" Value="Public Property By As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;float&gt; By { Nullable&lt;float&gt; get(); void set(Nullable&lt;float&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.By : Nullable&lt;single&gt; with get, set" Usage="System.Windows.Media.Animation.SingleAnimation.By" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the total amount by which the animation changes its starting value.</summary>
        <value>The total amount by which the animation changes its starting value.     The default value is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> property when you want to animate a value "by" a certain amount, rather than specifying a starting or ending value. You may also use the <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> property with the <xref:System.Windows.Media.Animation.SingleAnimation.From%2A> property. The following table summarizes how the <xref:System.Windows.Media.Animation.SingleAnimation.From%2A>, <xref:System.Windows.Media.Animation.SingleAnimation.To%2A>, and <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> properties may be used together or separately to determine an animation's target values.  
  
|Properties Specified|Resulting Behavior|  
|--------------------------|------------------------|  
|<xref:System.Windows.Media.Animation.SingleAnimation.From%2A>|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.From%2A> property to the base value of the property being animated or to a previous animation's output value, depending on how the previous animation is configured.|  
|<xref:System.Windows.Media.Animation.SingleAnimation.From%2A> and <xref:System.Windows.Media.Animation.SingleAnimation.To%2A>|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.From%2A> property to the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.To%2A> property.|  
|<xref:System.Windows.Media.Animation.SingleAnimation.From%2A> and <xref:System.Windows.Media.Animation.SingleAnimation.By%2A>|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.From%2A> property to the value specified by the sum of the <xref:System.Windows.Media.Animation.SingleAnimation.From%2A> and <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> properties.|  
|<xref:System.Windows.Media.Animation.SingleAnimation.To%2A>|The animation progresses from the animated property's base value or a previous animation's output value to the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.To%2A> property.|  
|<xref:System.Windows.Media.Animation.SingleAnimation.By%2A>|The animation progresses from the base value of the property being animated or a previous animation's output value to the sum of that value and the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> property.|  
  
 **Note** If you set both the <xref:System.Windows.Media.Animation.SingleAnimation.To%2A> and <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> properties, the <xref:System.Windows.Media.Animation.SingleAnimation.To%2A> property takes precedence and the <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> property is ignored.  
  
 To use other interpolation methods or animate between more than two target values, use a <xref:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames> object.  
  
<a name="xamlAttributeUsage_By"></a>   
## XAML Attribute Usage  
 <*object* `By`="<xref:System.Single>"/>  
  
-or-
  
 <*object* `By`="{[x:Null Markup Extension](/dotnet/framework/xaml-services/x-null-markup-extension)}"/>  
  
<a name="dependencyPropertyInfo_By"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Media.Animation.SingleAnimation.ByProperty>|  
|Metadata properties set to `true`|None|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.SingleAnimation.From" />
        <altmember cref="P:System.Windows.Media.Animation.SingleAnimation.To" />
      </Docs>
    </Member>
    <Member MemberName="ByProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ByProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ByProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.SingleAnimation.ByProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ByProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ByProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ByProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.SingleAnimation.ByProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SingleAnimation.By" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.SingleAnimation Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.SingleAnimation Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.SingleAnimation.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As SingleAnimation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::SingleAnimation ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.SingleAnimation" Usage="singleAnimation.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.SingleAnimation</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.SingleAnimation" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
        <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  
  
 For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.SingleAnimation.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="singleAnimation.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />.</summary>
        <returns>The new instance.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <Member MemberName="EasingFunction">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.IEasingFunction EasingFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.IEasingFunction EasingFunction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.SingleAnimation.EasingFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property EasingFunction As IEasingFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::IEasingFunction ^ EasingFunction { System::Windows::Media::Animation::IEasingFunction ^ get(); void set(System::Windows::Media::Animation::IEasingFunction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EasingFunction : System.Windows.Media.Animation.IEasingFunction with get, set" Usage="System.Windows.Media.Animation.SingleAnimation.EasingFunction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.IEasingFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the easing function applied to this animation.</summary>
        <value>The easing function applied to this animation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Easing functions allow you to create a variety of specialized animation effects including bouncing, spring oscillations, and various magnitude acceleration and deceleration animations.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.IEasingFunction" />
      </Docs>
    </Member>
    <Member MemberName="EasingFunctionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EasingFunctionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EasingFunctionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.SingleAnimation.EasingFunctionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EasingFunctionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EasingFunctionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EasingFunctionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.SingleAnimation.EasingFunctionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SingleAnimation.EasingFunction" /> dependency property.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Animation.IEasingFunction" />
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public float? From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float32&gt; From" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.SingleAnimation.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;float&gt; From { Nullable&lt;float&gt; get(); void set(Nullable&lt;float&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.From : Nullable&lt;single&gt; with get, set" Usage="System.Windows.Media.Animation.SingleAnimation.From" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the animation's starting value.</summary>
        <value>The starting value of the animation. The default value is **null**.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following table summarizes how the <xref:System.Windows.Media.Animation.SingleAnimation.From%2A>, <xref:System.Windows.Media.Animation.SingleAnimation.To%2A>, and <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> properties may be used together or separately to determine an animation's target values.  
  
|Properties Specified|Resulting Behavior|  
|--------------------------|------------------------|  
|<xref:System.Windows.Media.Animation.SingleAnimation.From%2A>|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.From%2A> property to the base value of the property being animated or to a previous animation's output value, depending on how the previous animation is configured.|  
|<xref:System.Windows.Media.Animation.SingleAnimation.From%2A> and <xref:System.Windows.Media.Animation.SingleAnimation.To%2A>|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.From%2A> property to the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.To%2A> property.|  
|<xref:System.Windows.Media.Animation.SingleAnimation.From%2A> and <xref:System.Windows.Media.Animation.SingleAnimation.By%2A>|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.From%2A> property to the value specified by the sum of the <xref:System.Windows.Media.Animation.SingleAnimation.From%2A> and <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> properties.|  
|<xref:System.Windows.Media.Animation.SingleAnimation.To%2A>|The animation progresses from the animated property's base value or a previous animation's output value to the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.To%2A> property.|  
|<xref:System.Windows.Media.Animation.SingleAnimation.By%2A>|The animation progresses from the base value of the property being animated or a previous animation's output value to the sum of that value and the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> property.|  
  
 **Note** If you set both the <xref:System.Windows.Media.Animation.SingleAnimation.To%2A> and <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> properties, the <xref:System.Windows.Media.Animation.SingleAnimation.To%2A> property takes precedence and the <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> property is ignored.  
  
 To use other interpolation methods or animate between more than two target values, use a <xref:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames> object.  
  
<a name="xamlAttributeUsage_From"></a>   
## XAML Attribute Usage  
 <*object* `From`="<xref:System.Single>"/>  
  
-or-
  
 <*object* `From`="{[x:Null Markup Extension](/dotnet/framework/xaml-services/x-null-markup-extension)}"/>  
  
<a name="dependencyPropertyInfo_From"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier Field|<xref:System.Windows.Media.Animation.SingleAnimation.FromProperty>|  
|Metadata properties set to `true`|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FromProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FromProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.SingleAnimation.FromProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FromProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FromProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FromProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.SingleAnimation.FromProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SingleAnimation.From" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override float GetCurrentValueCore (float defaultOriginValue, float defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float32 GetCurrentValueCore(float32 defaultOriginValue, float32 defaultDestinationValue, class System.Windows.Media.Animation.AnimationClock animationClock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.SingleAnimation.GetCurrentValueCore(System.Single,System.Single,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetCurrentValueCore (defaultOriginValue As Single, defaultDestinationValue As Single, animationClock As AnimationClock) As Single" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override float GetCurrentValueCore(float defaultOriginValue, float defaultDestinationValue, System::Windows::Media::Animation::AnimationClock ^ animationClock);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueCore : single * single * System.Windows.Media.Animation.AnimationClock -&gt; single" Usage="singleAnimation.GetCurrentValueCore (defaultOriginValue, defaultDestinationValue, animationClock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultOriginValue" Type="System.Single" />
        <Parameter Name="defaultDestinationValue" Type="System.Single" />
        <Parameter Name="animationClock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
        <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
        <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
        <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.SingleAnimation" />.</summary>
        <returns>The calculated value of the property, as determined by the current animation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the `defaultOriginValue` is the first in the composition chain, this value will be the snapshot value (if one is available) or the base property value; otherwise this value will be the value returned by the previous animation in the chain with an <xref:System.Windows.Media.Animation.AnimationClock> that is not <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.  
  
 The `defaultDestinationValue` is the base value if the animation is in the first composition layer of animations on a property; otherwise the value is the output value from the previous composition layer of animations for the property.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.SingleAnimationBase.GetCurrentValueCore(System.Single,System.Single,System.Windows.Media.Animation.AnimationClock)" />
      </Docs>
    </Member>
    <Member MemberName="IsAdditive">
      <MemberSignature Language="C#" Value="public bool IsAdditive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAdditive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.SingleAnimation.IsAdditive" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAdditive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAdditive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAdditive : bool with get, set" Usage="System.Windows.Media.Animation.SingleAnimation.IsAdditive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.</summary>
        <value>
          <see langword="true" /> if the target property's current value should be added to this animation's starting value; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the animation has only one of its <xref:System.Windows.Media.Animation.SingleAnimation.From%2A>, <xref:System.Windows.Media.Animation.SingleAnimation.To%2A>, or <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> properties set, setting this property has no effect.  
  
<a name="dependencyPropertyInfo_Additive"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>|  
|Metadata properties set to `true`|None|  
  
> [!NOTE]
>  This dependency property is unusual in that the identifier field for it comes from <xref:System.Windows.Media.Animation.AnimationTimeline>, and is shared by various derived classes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCumulative">
      <MemberSignature Language="C#" Value="public bool IsCumulative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCumulative" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.SingleAnimation.IsCumulative" />
      <MemberSignature Language="VB.NET" Value="Public Property IsCumulative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCumulative { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsCumulative : bool with get, set" Usage="System.Windows.Media.Animation.SingleAnimation.IsCumulative" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
        <value>
          <see langword="true" /> if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration. otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When this property is set to `true`, the animation's output values only accumulate when the animation's <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> property causes it to repeat its simple duration. It does not accumulate its values when it restarts because its parent repeated or because its clock was restarted from a <xref:System.Windows.Media.Animation.ClockController.Begin%2A> call.  
  
<a name="dependencyPropertyInfo_Cumulative"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty>|  
|Metadata properties set to `true`|None|  
  
> [!NOTE]
>  This dependency property is unusual in that the identifier field for it comes from <xref:System.Windows.Media.Animation.AnimationTimeline>, and is shared by various derived classes.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public float? To { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float32&gt; To" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.SingleAnimation.To" />
      <MemberSignature Language="VB.NET" Value="Public Property To As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;float&gt; To { Nullable&lt;float&gt; get(); void set(Nullable&lt;float&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.To : Nullable&lt;single&gt; with get, set" Usage="System.Windows.Media.Animation.SingleAnimation.To" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the animation's ending value.</summary>
        <value>The ending value of the animation. The default value is null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following table summarizes how the <xref:System.Windows.Media.Animation.SingleAnimation.From%2A>, <xref:System.Windows.Media.Animation.SingleAnimation.To%2A>, and <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> properties may be used together or separately to determine an animation's target values.  
  
|Properties Specified|Resulting Behavior|  
|--------------------------|------------------------|  
|<xref:System.Windows.Media.Animation.SingleAnimation.From%2A>|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.From%2A> property to the base value of the property being animated or to a previous animation's output value, depending on how the previous animation is configured.|  
|<xref:System.Windows.Media.Animation.SingleAnimation.From%2A> and <xref:System.Windows.Media.Animation.SingleAnimation.To%2A>|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.From%2A> property to the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.To%2A> property.|  
|<xref:System.Windows.Media.Animation.SingleAnimation.From%2A> and <xref:System.Windows.Media.Animation.SingleAnimation.By%2A>|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.From%2A> property to the value specified by the sum of the <xref:System.Windows.Media.Animation.SingleAnimation.From%2A> and <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> properties.|  
|<xref:System.Windows.Media.Animation.SingleAnimation.To%2A>|The animation progresses from the animated property's base value or a previous animation's output value to the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.To%2A> property.|  
|<xref:System.Windows.Media.Animation.SingleAnimation.By%2A>|The animation progresses from the base value of the property being animated or a previous animation's output value to the sum of that value and the value specified by the <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> property.|  
  
 **Note** If you set both the <xref:System.Windows.Media.Animation.SingleAnimation.To%2A> and <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> properties, the <xref:System.Windows.Media.Animation.SingleAnimation.To%2A> property takes precedence and the <xref:System.Windows.Media.Animation.SingleAnimation.By%2A> property is ignored.  
  
 To use other interpolation methods or animate between more than two target values, use a <xref:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames> object.  
  
<a name="xamlAttributeUsage_To"></a>   
## XAML Attribute Usage  
 <*object* `To`="<xref:System.Single>"/>  
  
-or-
  
 <*object* `To`="{[x:Null Markup Extension](/dotnet/framework/xaml-services/x-null-markup-extension)}"/>  
  
<a name="dependencyPropertyInfo_To"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Media.Animation.SingleAnimation.ToProperty>|  
|Metadata properties set to `true`|None|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.SingleAnimation.From" />
        <altmember cref="P:System.Windows.Media.Animation.SingleAnimation.By" />
      </Docs>
    </Member>
    <Member MemberName="ToProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ToProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ToProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.SingleAnimation.ToProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ToProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.SingleAnimation.ToProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SingleAnimation.To" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

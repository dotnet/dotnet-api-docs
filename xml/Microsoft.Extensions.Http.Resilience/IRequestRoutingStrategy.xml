<Type Name="IRequestRoutingStrategy" FullName="Microsoft.Extensions.Http.Resilience.IRequestRoutingStrategy">
  <TypeSignature Language="C#" Value="public interface IRequestRoutingStrategy" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRequestRoutingStrategy" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Http.Resilience.IRequestRoutingStrategy" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRequestRoutingStrategy" />
  <TypeSignature Language="F#" Value="type IRequestRoutingStrategy = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRequestRoutingStrategy" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Defines a strategy for retrieval of route URLs,
            used to route one request across a set of different endpoints.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryGetNextRoute">
      <MemberSignature Language="C#" Value="public bool TryGetNextRoute (out Uri? nextRoute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetNextRoute([out] class System.Uri&amp; nextRoute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Resilience.IRequestRoutingStrategy.TryGetNextRoute(System.Uri@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetNextRoute (ByRef nextRoute As Uri) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetNextRoute : Uri -&gt; bool" Usage="iRequestRoutingStrategy.TryGetNextRoute nextRoute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetNextRoute([Runtime::InteropServices::Out] Uri ^ % nextRoute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nextRoute" Type="System.Uri" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="nextRoute">Holds next route value, or <see langword="null" />.</param>
        <summary>
            Gets the next route Uri.
            </summary>
        <returns>
          <see langword="true" /> if next route available, <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

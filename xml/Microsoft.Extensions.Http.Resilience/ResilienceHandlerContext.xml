<Type Name="ResilienceHandlerContext" FullName="Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext">
  <TypeSignature Language="C#" Value="public sealed class ResilienceHandlerContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResilienceHandlerContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResilienceHandlerContext" />
  <TypeSignature Language="F#" Value="type ResilienceHandlerContext = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResilienceHandlerContext sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            The context used when building a resilience strategy HTTP handler.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BuilderName">
      <MemberSignature Language="C#" Value="public string BuilderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BuilderName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.BuilderName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuilderName As String" />
      <MemberSignature Language="F#" Value="member this.BuilderName : string" Usage="Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.BuilderName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BuilderName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the builder being built.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableReloads&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public void EnableReloads&lt;TOptions&gt; (string? name = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnableReloads&lt;TOptions&gt;(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.EnableReloads``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnableReloads(Of TOptions) (Optional name As String = Nothing)" />
      <MemberSignature Language="F#" Value="member this.EnableReloads : string -&gt; unit" Usage="resilienceHandlerContext.EnableReloads name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">The options type to listen to.</typeparam>
        <param name="name">The named options, if any.</param>
        <summary>
            Enables dynamic reloading of the resilience strategy whenever the <typeparamref name="TOptions" /> options are changed.
            </summary>
        <remarks>
            You can decide based on the <paramref name="name" /> to listen for changes in global options or named options.
            If <paramref name="name" /> is <see langword="null" /> then the global options are listened to.
            <para>
            You can listen for changes only for single options. If you call this method multiple times, the preceding calls are ignored and only the last one wins.
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.ServiceProvider : IServiceProvider" Usage="Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.ServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the service provider.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrategyKey">
      <MemberSignature Language="C#" Value="public string StrategyKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrategyKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.StrategyKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StrategyKey As String" />
      <MemberSignature Language="F#" Value="member this.StrategyKey : string" Usage="Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.StrategyKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrategyKey { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the strategy key of the resilience strategy being built.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

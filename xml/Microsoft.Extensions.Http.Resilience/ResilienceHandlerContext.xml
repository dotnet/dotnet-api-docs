<Type Name="ResilienceHandlerContext" FullName="Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext">
  <TypeSignature Language="C#" Value="public sealed class ResilienceHandlerContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResilienceHandlerContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResilienceHandlerContext" />
  <TypeSignature Language="F#" Value="type ResilienceHandlerContext = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResilienceHandlerContext sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            The context used when building a resilience pipeline HTTP handler.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BuilderName">
      <MemberSignature Language="C#" Value="public string BuilderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BuilderName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.BuilderName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuilderName As String" />
      <MemberSignature Language="F#" Value="member this.BuilderName : string" Usage="Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.BuilderName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BuilderName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the builder being built.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableReloads&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public void EnableReloads&lt;TOptions&gt; (string? name = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnableReloads&lt;TOptions&gt;(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.EnableReloads``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnableReloads(Of TOptions) (Optional name As String = Nothing)" />
      <MemberSignature Language="F#" Value="member this.EnableReloads : string -&gt; unit" Usage="resilienceHandlerContext.EnableReloads name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">The options type to listen to.</typeparam>
        <param name="name">The named options, if any.</param>
        <summary>
            Enables dynamic reloading of the resilience pipeline whenever the <typeparamref name="TOptions" /> options are changed.
            </summary>
        <remarks>
            You can decide based on the <paramref name="name" /> to listen for changes in global options or named options.
            If <paramref name="name" /> is <see langword="null" /> then the global options are listened to.
            By default, the <paramref name="name" /> parameter is <see langword="null" />.
            <para>
            You can listen for changes only for single options. If you call this method multiple times, the preceding calls are ignored and only the last one wins.
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOptions&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public TOptions GetOptions&lt;TOptions&gt; (string? name = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TOptions GetOptions&lt;TOptions&gt;(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.GetOptions``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOptions(Of TOptions) (Optional name As String = Nothing) As TOptions" />
      <MemberSignature Language="F#" Value="member this.GetOptions : string -&gt; 'Options" Usage="resilienceHandlerContext.GetOptions name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TOptions</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="dotnet-plat-ext-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">The options type.</typeparam>
        <param name="name">The options name, if any.</param>
        <summary>
            Gets the options identified by <paramref name="name" />.
            </summary>
        <returns>The options instance.</returns>
        <remarks>
            If <paramref name="name" /> is <see langword="null" /> then the global options are returned.
            By default, the <paramref name="name" /> parameter is <see langword="null" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceName">
      <MemberSignature Language="C#" Value="public string InstanceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstanceName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.InstanceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceName As String" />
      <MemberSignature Language="F#" Value="member this.InstanceName : string" Usage="Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.InstanceName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InstanceName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the instance name of resilience pipeline being built.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPipelineDisposed">
      <MemberSignature Language="C#" Value="public void OnPipelineDisposed (Action callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnPipelineDisposed(class System.Action callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.OnPipelineDisposed(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnPipelineDisposed (callback As Action)" />
      <MemberSignature Language="F#" Value="member this.OnPipelineDisposed : Action -&gt; unit" Usage="resilienceHandlerContext.OnPipelineDisposed callback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnPipelineDisposed(Action ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="callback">The callback delegate.</param>
        <summary>
            Registers a callback that is called when the pipeline instance being configured is disposed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.ServiceProvider : IServiceProvider" Usage="Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.ServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the service provider.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

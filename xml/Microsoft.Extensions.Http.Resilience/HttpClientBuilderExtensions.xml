<Type Name="HttpClientBuilderExtensions" FullName="Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class HttpClientBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HttpClientBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module HttpClientBuilderExtensions" />
  <TypeSignature Language="F#" Value="type HttpClientBuilderExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpClientBuilderExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddFallbackHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddFallbackHandler (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddFallbackHandler(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class Microsoft.Extensions.Configuration.IConfigurationSection section) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddFallbackHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,Microsoft.Extensions.Configuration.IConfigurationSection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFallbackHandler (builder As IHttpClientBuilder, section As IConfigurationSection) As IHttpClientBuilder" />
      <MemberSignature Language="F#" Value="static member AddFallbackHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Microsoft.Extensions.Configuration.IConfigurationSection -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddFallbackHandler (builder, section)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddFallbackHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Microsoft::Extensions::Configuration::IConfigurationSection ^ section);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="section" Type="Microsoft.Extensions.Configuration.IConfigurationSection" />
      </Parameters>
      <Docs>
        <param name="builder">The HTTP client builder.</param>
        <param name="section">The section that the <see cref="T:Microsoft.Extensions.Http.Resilience.FallbackClientHandlerOptions" /> will bind against.</param>
        <summary>
            Adds a fallback handler that wraps the execution of the request with a fallback mechanism,
            ensuring that the request is retried against a secondary endpoint.
            </summary>
        <returns>
            An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFallbackHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddFallbackHandler (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Action&lt;Microsoft.Extensions.Http.Resilience.FallbackClientHandlerOptions&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddFallbackHandler(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Action`1&lt;class Microsoft.Extensions.Http.Resilience.FallbackClientHandlerOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddFallbackHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Action{Microsoft.Extensions.Http.Resilience.FallbackClientHandlerOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFallbackHandler (builder As IHttpClientBuilder, configure As Action(Of FallbackClientHandlerOptions)) As IHttpClientBuilder" />
      <MemberSignature Language="F#" Value="static member AddFallbackHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Action&lt;Microsoft.Extensions.Http.Resilience.FallbackClientHandlerOptions&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddFallbackHandler (builder, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddFallbackHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Action&lt;Microsoft::Extensions::Http::Resilience::FallbackClientHandlerOptions ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Http.Resilience.FallbackClientHandlerOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">The HTTP client builder.</param>
        <param name="configure">The configure callback.</param>
        <summary>
            Adds a fallback handler that wraps the execution of the request with a fallback mechanism,
            ensuring that the request is retried against a secondary endpoint.
            </summary>
        <returns>
            An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFallbackHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddFallbackHandler (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section, Action&lt;Microsoft.Extensions.Http.Resilience.FallbackClientHandlerOptions&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddFallbackHandler(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class Microsoft.Extensions.Configuration.IConfigurationSection section, class System.Action`1&lt;class Microsoft.Extensions.Http.Resilience.FallbackClientHandlerOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddFallbackHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,Microsoft.Extensions.Configuration.IConfigurationSection,System.Action{Microsoft.Extensions.Http.Resilience.FallbackClientHandlerOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFallbackHandler (builder As IHttpClientBuilder, section As IConfigurationSection, configure As Action(Of FallbackClientHandlerOptions)) As IHttpClientBuilder" />
      <MemberSignature Language="F#" Value="static member AddFallbackHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Microsoft.Extensions.Configuration.IConfigurationSection * Action&lt;Microsoft.Extensions.Http.Resilience.FallbackClientHandlerOptions&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddFallbackHandler (builder, section, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddFallbackHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Microsoft::Extensions::Configuration::IConfigurationSection ^ section, Action&lt;Microsoft::Extensions::Http::Resilience::FallbackClientHandlerOptions ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="section" Type="Microsoft.Extensions.Configuration.IConfigurationSection" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Http.Resilience.FallbackClientHandlerOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">The HTTP client builder.</param>
        <param name="section">The section that the <see cref="T:Microsoft.Extensions.Http.Resilience.FallbackClientHandlerOptions" /> will bind against.</param>
        <param name="configure">The configure callback.</param>
        <summary>
            Adds a fallback handler that wraps the execution of the request with a fallback mechanism,
            ensuring that the request is retried against a secondary endpoint.
            </summary>
        <returns>
            An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddResilienceHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Http.Resilience.IHttpResiliencePipelineBuilder AddResilienceHandler (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, string pipelineIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Http.Resilience.IHttpResiliencePipelineBuilder AddResilienceHandler(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, string pipelineIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddResilienceHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddResilienceHandler (builder As IHttpClientBuilder, pipelineIdentifier As String) As IHttpResiliencePipelineBuilder" />
      <MemberSignature Language="F#" Value="static member AddResilienceHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * string -&gt; Microsoft.Extensions.Http.Resilience.IHttpResiliencePipelineBuilder" Usage="Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddResilienceHandler (builder, pipelineIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Http::Resilience::IHttpResiliencePipelineBuilder ^ AddResilienceHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, System::String ^ pipelineIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Http.Resilience.IHttpResiliencePipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="pipelineIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">The builder instance.</param>
        <param name="pipelineIdentifier">The custom identifier for the pipeline, used in the name of the pipeline.</param>
        <summary>
            Adds a <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> that uses a named inline resilience pipeline configured by returned <see cref="T:Microsoft.Extensions.Http.Resilience.IHttpResiliencePipelineBuilder" />.
            </summary>
        <returns>The HTTP pipeline builder instance.</returns>
        <remarks>
            The final pipeline name is combination of <see cref="P:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder.Name" /> and <paramref name="pipelineIdentifier" />.
            Use pipeline identifier if your HTTP client contains multiple resilience handlers.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStandardResilienceHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder AddStandardResilienceHandler (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder AddStandardResilienceHandler(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddStandardResilienceHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddStandardResilienceHandler (builder As IHttpClientBuilder) As IHttpStandardResiliencePipelineBuilder" />
      <MemberSignature Language="F#" Value="static member AddStandardResilienceHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder -&gt; Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder" Usage="Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddStandardResilienceHandler builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Http::Resilience::IHttpStandardResiliencePipelineBuilder ^ AddStandardResilienceHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="builder">The builder instance.</param>
        <summary>
            Adds a <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> that uses a standard resilience pipeline with default <see cref="T:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions" />
            to send the requests and handle any transient errors.
            The pipeline combines multiple policies that are configured based on HTTP-specific <see cref="T:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions" /> options with recommended defaults.
            </summary>
        <returns>The HTTP pipeline builder instance.</returns>
        <remarks>
            See <see cref="T:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions" /> for more details about the individual policies configured by this method.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStandardResilienceHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder AddStandardResilienceHandler (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder AddStandardResilienceHandler(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class Microsoft.Extensions.Configuration.IConfigurationSection section) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddStandardResilienceHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,Microsoft.Extensions.Configuration.IConfigurationSection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddStandardResilienceHandler (builder As IHttpClientBuilder, section As IConfigurationSection) As IHttpStandardResiliencePipelineBuilder" />
      <MemberSignature Language="F#" Value="static member AddStandardResilienceHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Microsoft.Extensions.Configuration.IConfigurationSection -&gt; Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder" Usage="Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddStandardResilienceHandler (builder, section)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Http::Resilience::IHttpStandardResiliencePipelineBuilder ^ AddStandardResilienceHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Microsoft::Extensions::Configuration::IConfigurationSection ^ section);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="section" Type="Microsoft.Extensions.Configuration.IConfigurationSection" />
      </Parameters>
      <Docs>
        <param name="builder">The builder instance.</param>
        <param name="section">The section that the options will bind against.</param>
        <summary>
            Adds a <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> that uses a standard resilience pipeline with default options to send the requests and handle any transient errors.
            The pipeline combines multiple policies that are configured based on HTTP-specific <see cref="T:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions" /> options with recommended defaults.
            </summary>
        <returns>The HTTP pipeline builder instance.</returns>
        <remarks>
            See <see cref="T:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions" /> for more details about the individual policies configured by this method.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStandardResilienceHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder AddStandardResilienceHandler (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Action&lt;Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder AddStandardResilienceHandler(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Action`1&lt;class Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddStandardResilienceHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Action{Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddStandardResilienceHandler (builder As IHttpClientBuilder, configure As Action(Of HttpStandardResilienceOptions)) As IHttpStandardResiliencePipelineBuilder" />
      <MemberSignature Language="F#" Value="static member AddStandardResilienceHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Action&lt;Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions&gt; -&gt; Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder" Usage="Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddStandardResilienceHandler (builder, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Http::Resilience::IHttpStandardResiliencePipelineBuilder ^ AddStandardResilienceHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Action&lt;Microsoft::Extensions::Http::Resilience::HttpStandardResilienceOptions ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">The builder instance.</param>
        <param name="configure">The action that configures the resilience options.</param>
        <summary>
            Adds a <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> that uses a standard resilience pipeline with default options to send the requests and handle any transient errors.
            The pipeline combines multiple policies that are configured based on HTTP-specific <see cref="T:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions" /> options with recommended defaults.
            </summary>
        <returns>The HTTP pipeline builder instance.</returns>
        <remarks>
            See <see cref="T:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions" /> for more details about the individual policies configured by this method.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

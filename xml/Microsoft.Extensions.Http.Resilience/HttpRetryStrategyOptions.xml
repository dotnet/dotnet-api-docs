<Type Name="HttpRetryStrategyOptions" FullName="Microsoft.Extensions.Http.Resilience.HttpRetryStrategyOptions">
  <TypeSignature Language="C#" Value="public class HttpRetryStrategyOptions : Polly.Retry.RetryStrategyOptions&lt;System.Net.Http.HttpResponseMessage&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpRetryStrategyOptions extends Polly.Retry.RetryStrategyOptions`1&lt;class System.Net.Http.HttpResponseMessage&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Http.Resilience.HttpRetryStrategyOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpRetryStrategyOptions&#xA;Inherits RetryStrategyOptions(Of HttpResponseMessage)" />
  <TypeSignature Language="F#" Value="type HttpRetryStrategyOptions = class&#xA;    inherit RetryStrategyOptions&lt;HttpResponseMessage&gt;" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRetryStrategyOptions : Polly::Retry::RetryStrategyOptions&lt;System::Net::Http::HttpResponseMessage ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.4.0.0</AssemblyVersion>
    <AssemblyVersion>8.5.0.0</AssemblyVersion>
    <AssemblyVersion>8.6.0.0</AssemblyVersion>
    <AssemblyVersion>8.7.0.0</AssemblyVersion>
    <AssemblyVersion>8.8.0.0</AssemblyVersion>
    <AssemblyVersion>8.9.1.0</AssemblyVersion>
    <AssemblyVersion>8.10.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Polly.Retry.RetryStrategyOptions&lt;System.Net.Http.HttpResponseMessage&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Net.Http.HttpResponseMessage</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Implementation of the <see cref="T:Polly.Retry.RetryStrategyOptions`1" /> for <see cref="T:System.Net.Http.HttpResponseMessage" /> results.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRetryStrategyOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Resilience.HttpRetryStrategyOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRetryStrategyOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.10.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Http.Resilience.HttpRetryStrategyOptions" /> class.
            </summary>
        <remarks>
            By default, the options are configured to handle only transient failures.
            Specifically, this includes HTTP status codes 408, 429, 500 and above, 
            as well as <see cref="T:System.Net.Http.HttpRequestException" /> and <see cref="T:Polly.Timeout.TimeoutRejectedException" /> exceptions.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldRetryAfterHeader">
      <MemberSignature Language="C#" Value="public bool ShouldRetryAfterHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldRetryAfterHeader" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Resilience.HttpRetryStrategyOptions.ShouldRetryAfterHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property ShouldRetryAfterHeader As Boolean" />
      <MemberSignature Language="F#" Value="member this.ShouldRetryAfterHeader : bool with get, set" Usage="Microsoft.Extensions.Http.Resilience.HttpRetryStrategyOptions.ShouldRetryAfterHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldRetryAfterHeader { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.10.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to use the <c>Retry-After</c> header for the retry delays.
            </summary>
        <value>
            Defaults to <see langword="true" />.
            </value>
        <remarks>
            If the property is set to <see langword="true" /> then the generator will resolve the delay
            based on the <c>Retry-After</c> header rules, otherwise it will return <see langword="null" /> and the retry strategy
            delay will generate the delay based on the configured options.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="HedgingHttpClientBuilderExtensions" FullName="Microsoft.Extensions.Http.Resilience.HedgingHttpClientBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class HedgingHttpClientBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HedgingHttpClientBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Http.Resilience.HedgingHttpClientBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module HedgingHttpClientBuilderExtensions" />
  <TypeSignature Language="F#" Value="type HedgingHttpClientBuilderExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class HedgingHttpClientBuilderExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for configuring <see cref="T:System.Net.Http.DelegatingHandler" /> message handlers as part of
            the <see cref="T:System.Net.Http.HttpClient" /> message handler pipeline.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddStandardHedgingHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder AddStandardHedgingHandler (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder AddStandardHedgingHandler(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Resilience.HedgingHttpClientBuilderExtensions.AddStandardHedgingHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddStandardHedgingHandler (builder As IHttpClientBuilder) As IStandardHedgingHandlerBuilder" />
      <MemberSignature Language="F#" Value="static member AddStandardHedgingHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder -&gt; Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder" Usage="Microsoft.Extensions.Http.Resilience.HedgingHttpClientBuilderExtensions.AddStandardHedgingHandler builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Http::Resilience::IStandardHedgingHandlerBuilder ^ AddStandardHedgingHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="builder">The HTTP client builder.</param>
        <summary>
             Adds a standard hedging handler which wraps the execution of the request with a standard hedging mechanism.
             </summary>
        <returns>
             A <see cref="T:Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder" /> builder that can be used to configure the standard hedging behavior.
             </returns>
        <remarks>
             The standard hedging uses a pipeline pool of circuit breakers to ensure that unhealthy endpoints are not hedged against.
             By default, the selection from pool is based on the URL Authority (scheme + host + port).
            
             It is recommended that you configure the way the pipelines are selected by calling 'SelectPipelineByAuthority' extensions on top of returned <see cref="T:Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder" />.
            
             See <see cref="T:Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions" /> for more details about the policies inside the pipeline.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStandardHedgingHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder AddStandardHedgingHandler (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Action&lt;Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder AddStandardHedgingHandler(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Action`1&lt;class Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Resilience.HedgingHttpClientBuilderExtensions.AddStandardHedgingHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Action{Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddStandardHedgingHandler (builder As IHttpClientBuilder, configure As Action(Of IRoutingStrategyBuilder)) As IStandardHedgingHandlerBuilder" />
      <MemberSignature Language="F#" Value="static member AddStandardHedgingHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Action&lt;Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder&gt; -&gt; Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder" Usage="Microsoft.Extensions.Http.Resilience.HedgingHttpClientBuilderExtensions.AddStandardHedgingHandler (builder, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Http::Resilience::IStandardHedgingHandlerBuilder ^ AddStandardHedgingHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Action&lt;Microsoft::Extensions::Http::Resilience::IRoutingStrategyBuilder ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">The HTTP client builder.</param>
        <param name="configure">Configures the routing strategy associated with this handler.</param>
        <summary>
             Adds a standard hedging handler which wraps the execution of the request with a standard hedging mechanism.
             </summary>
        <returns>
             A <see cref="T:Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder" /> builder that can be used to configure the standard hedging behavior.
             </returns>
        <remarks>
             The standard hedging uses a pipeline pool of circuit breakers to ensure that unhealthy endpoints are not hedged against.
             By default, the selection from pool is based on the URL Authority (scheme + host + port).
            
             It is recommended that you configure the way the pipelines are selected by calling 'SelectPipelineByAuthority' extensions on top of returned <see cref="T:Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder" />.
            
             See <see cref="T:Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions" /> for more details about the policies inside the pipeline.
             </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

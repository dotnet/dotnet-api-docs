<Type Name="SequentialWorkflowRootDesigner" FullName="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner">
  <TypeSignature Language="C#" Value="public class SequentialWorkflowRootDesigner : System.Workflow.ComponentModel.Design.SequentialActivityDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SequentialWorkflowRootDesigner extends System.Workflow.ComponentModel.Design.SequentialActivityDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class SequentialWorkflowRootDesigner&#xA;Inherits SequentialActivityDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class SequentialWorkflowRootDesigner : System::Workflow::ComponentModel::Design::SequentialActivityDesigner" />
  <TypeSignature Language="F#" Value="type SequentialWorkflowRootDesigner = class&#xA;    inherit SequentialActivityDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Design.SequentialActivityDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contains properties and methods to provide consistent look and feel to all root designers on a workflow design surface.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Typically, an instance of a sequential workflow root designer class is created when a workflow is created in a workflow designer and it represents the designer surface on which users can add and edit activities. A workflow root designer does not have a parent designer unless it is the child of an <xref:System.Workflow.Activities.InvokeWorkflowActivity> activity. All workflow root designers must derive from <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SequentialWorkflowRootDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SequentialWorkflowRootDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeParentedTo">
      <MemberSignature Language="C#" Value="public override bool CanBeParentedTo (System.Workflow.ComponentModel.Design.CompositeActivityDesigner parentActivityDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBeParentedTo(class System.Workflow.ComponentModel.Design.CompositeActivityDesigner parentActivityDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.CanBeParentedTo(System.Workflow.ComponentModel.Design.CompositeActivityDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBeParentedTo (parentActivityDesigner As CompositeActivityDesigner) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanBeParentedTo(System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ parentActivityDesigner);" />
      <MemberSignature Language="F#" Value="override this.CanBeParentedTo : System.Workflow.ComponentModel.Design.CompositeActivityDesigner -&gt; bool" Usage="sequentialWorkflowRootDesigner.CanBeParentedTo parentActivityDesigner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentActivityDesigner" Type="System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />
      </Parameters>
      <Docs>
        <param name="parentActivityDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> to check.</param>
        <summary>Returns a value that indicates whether a <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> can be set as the parent of the activity associated with the designer.</summary>
        <returns>
          <see langword="true" /> to allow the activity associated with <paramref name="parentActivityDesigner" /> to be the parent of the activity associated with the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Root designers cannot have a parent activity designer on a workflow design surface. Unless overridden in an inheriting class, <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.CanBeParentedTo%2A> returns `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExpandCollapse">
      <MemberSignature Language="C#" Value="public override bool CanExpandCollapse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanExpandCollapse" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.CanExpandCollapse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanExpandCollapse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanExpandCollapse { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanExpandCollapse : bool" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.CanExpandCollapse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the designer can be expanded and collapsed.</summary>
        <value>
          <see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> can be expanded and collapsed; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Unless overridden in a deriving class, <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.CanExpandCollapse%2A> is always set to `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Footer">
      <MemberSignature Language="C#" Value="protected virtual System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter Footer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter Footer" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Footer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Footer As SequentialWorkflowHeaderFooter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Workflow::ComponentModel::Design::SequentialWorkflowHeaderFooter ^ Footer { System::Workflow::ComponentModel::Design::SequentialWorkflowHeaderFooter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Footer : System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Footer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the footer associated with the root designer.</summary>
        <value>The <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> that represents the footer associated with the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The contents of <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Footer%2A> appear at the bottom of the root designer on the workflow design surface. Icons and text can be displayed in the footer, including button icons that change the designer view when a user selects one of them.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerConnections">
      <MemberSignature Language="C#" Value="protected override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Drawing.Point&gt; GetInnerConnections (System.Workflow.ComponentModel.Design.DesignerEdges edges);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Drawing.Point&gt; GetInnerConnections(valuetype System.Workflow.ComponentModel.Design.DesignerEdges edges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.GetInnerConnections(System.Workflow.ComponentModel.Design.DesignerEdges)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetInnerConnections (edges As DesignerEdges) As ReadOnlyCollection(Of Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Drawing::Point&gt; ^ GetInnerConnections(System::Workflow::ComponentModel::Design::DesignerEdges edges);" />
      <MemberSignature Language="F#" Value="override this.GetInnerConnections : System.Workflow.ComponentModel.Design.DesignerEdges -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Drawing.Point&gt;" Usage="sequentialWorkflowRootDesigner.GetInnerConnections edges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Drawing.Point&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edges" Type="System.Workflow.ComponentModel.Design.DesignerEdges" />
      </Parameters>
      <Docs>
        <param name="edges">The <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> on which to gather the collection of connection points.</param>
        <summary>Returns a read-only collection of points that represent the inner connection of the designer.</summary>
        <returns>A collection that contains the <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> objects used for a connectable designer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A designer can have connectors within it.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Glyphs">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection Glyphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection Glyphs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Glyphs" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property Glyphs As ActivityDesignerGlyphCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Workflow::ComponentModel::Design::ActivityDesignerGlyphCollection ^ Glyphs { System::Workflow::ComponentModel::Design::ActivityDesignerGlyphCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Glyphs : System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Glyphs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of glyphs that are displayed on the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</summary>
        <value>An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> that contains the glyphs displayed on the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="protected virtual System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter Header { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter Header" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Header" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Header As SequentialWorkflowHeaderFooter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Workflow::ComponentModel::Design::SequentialWorkflowHeaderFooter ^ Header { System::Workflow::ComponentModel::Design::SequentialWorkflowHeaderFooter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Header : System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Header" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the header associated with the root designer.</summary>
        <value>The <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> that represents the header associated with the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The contents of <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Header%2A> appear at the top of the root designer on the workflow design surface. Icons and text can be displayed in the header, including text that indicates the designer view that is currently displayed on the design surface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image Image { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Image" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Image" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Image As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ Image { System::Drawing::Image ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Image : System.Drawing.Image" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Image" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the image associated with the designer.</summary>
        <value>The <see cref="T:System.Drawing.Image" /> to associate with the designer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Image%2A> property is set to the <xref:System.Drawing.Image> to display. You can do this at design time or at run time.  
  
 Unless overridden in a derived class, <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Image%2A> returns a null reference (`Nothing` in Visual Basic).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageRectangle">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle ImageRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ImageRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.ImageRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ImageRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle ImageRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ImageRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.ImageRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value for the enclosing bounds of the image associated with the designer in logical coordinates.</summary>
        <value>A <see cref="T:System.Drawing.Rectangle" /> that encloses the <see cref="T:System.Drawing.Image" /> displayed for the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.ImageRectangle%2A> to retrieve the coordinates for the rectangle that encloses the image associated with the designer. You can use these coordinates for drawing connectors or overlaying graphics.  
  
   
  
## Examples  
 The following example shows how to override the <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.ImageRectangle%2A> property. In this example, the <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.ImageRectangle%2A> is calculated using the Bounds of the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.  
  
 [!code-csharp[wf_samples#74](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#74)]
 [!code-vb[wf_samples#74](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#74)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokingDesigner">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.Design.CompositeActivityDesigner InvokingDesigner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.CompositeActivityDesigner InvokingDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.InvokingDesigner" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property InvokingDesigner As CompositeActivityDesigner" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ InvokingDesigner { System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ get(); void set(System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InvokingDesigner : System.Workflow.ComponentModel.Design.CompositeActivityDesigner with get, set" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.InvokingDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.CompositeActivityDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> that requested the sequential workflow root designer to be initialized.</summary>
        <value>The <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> that requested the workflow root designer to be initialized.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size MinimumSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.MinimumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinimumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MinimumSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimumSize : System.Drawing.Size" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.MinimumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum size for the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</summary>
        <value>A <see cref="T:System.Drawing.Size" /> that represents the minimum size of the sequential workflow designer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.MinimumSize%2A> represents the smallest size to which a user can resize the <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size OnLayoutSize (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Size OnLayoutSize(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnLayoutSize (e As ActivityDesignerLayoutEventArgs) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Size OnLayoutSize(System::Workflow::ComponentModel::Design::ActivityDesignerLayoutEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLayoutSize : System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs -&gt; System.Drawing.Size" Usage="sequentialWorkflowRootDesigner.OnLayoutSize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the layout arguments.</param>
        <summary>Sets the size of the visual cues on the designers contained within the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</summary>
        <returns>The <see cref="T:System.Drawing.Size" /> that represents the size of the visual cues on the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Workflow::ComponentModel::Design::ActivityDesignerPaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs -&gt; unit" Usage="sequentialWorkflowRootDesigner.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> that contains the event data.</param>
        <summary>Draws any headers and footers associated with the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.OnPaint%2A> draws any text to include in the headers and footers with the appropriate theme settings. It also draws any images to include in the headers and footers.  
  
 **Note** When you override <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.OnPaint%2A> in a derived class, be sure to call the <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnPaint%2A> method of the base class so that registered delegates receive the event.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnSmartTagVisibilityChanged">
      <MemberSignature Language="C#" Value="protected override void OnSmartTagVisibilityChanged (bool visible);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSmartTagVisibilityChanged(bool visible) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.OnSmartTagVisibilityChanged(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSmartTagVisibilityChanged (visible As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSmartTagVisibilityChanged(bool visible);" />
      <MemberSignature Language="F#" Value="override this.OnSmartTagVisibilityChanged : bool -&gt; unit" Usage="sequentialWorkflowRootDesigner.OnSmartTagVisibilityChanged visible" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible">
          <see langword="true" /> to display smart tags on the designer surface; otherwise, <see langword="false" />.</param>
        <summary>Notifies the designer whether smart tags are to be shown or hidden on the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When called, <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.OnSmartTagVisibilityChanged%2A> invalidates the text rectangle associated with the <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Header%2A>.  
  
 **Note** When you override <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.OnSmartTagVisibilityChanged%2A> in a derived class, be sure to call the base class's <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnSmartTagVisibilityChanged%2A> method so that registered delegates receive the event.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSmartTag">
      <MemberSignature Language="C#" Value="protected override bool ShowSmartTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowSmartTag" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.ShowSmartTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ShowSmartTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ShowSmartTag { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowSmartTag : bool" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.ShowSmartTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the root designer displays smart tags.</summary>
        <value>
          <see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> displays smart tags; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Header%2A> property is not set to a null reference (`Nothing` in Visual Basic) and the corresponding <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.Text%2A> property is not an empty string or set to a null reference (`Nothing`), <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.ShowSmartTag%2A> returns `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagRectangle">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle SmartTagRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle SmartTagRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.SmartTagRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property SmartTagRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle SmartTagRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.SmartTagRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.SmartTagRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the rectangle on the designer surface in which to display a smart tag.</summary>
        <value>A <see cref="T:System.Drawing.Rectangle" /> that defines the bounds in which to display the smart tag.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can use <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowSmartTag%2A> and <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagVerbs%2A> to display a smart tag of available <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerActions%2A> at the location specified by <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.SmartTagRectangle%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the description associated with the designer.</summary>
        <value>A string that contains the description associated with the designer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Unless overridden in an inheriting class, <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Text%2A> returns <xref:System.String.Empty?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleHeight">
      <MemberSignature Language="C#" Value="protected override int TitleHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TitleHeight" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.TitleHeight" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TitleHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int TitleHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TitleHeight : int" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.TitleHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height of the title area of the designer.</summary>
        <value>An integer that represents the height of the title area of the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A root designer title area typically contains the header and any icon associated with the designer.  
  
 <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.TitleHeight%2A> calculates the integer it returns by getting the value of its base implementation and adding the height integer defined for the <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Header%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

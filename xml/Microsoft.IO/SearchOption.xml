<Type Name="SearchOption" FullName="Microsoft.IO.SearchOption">
  <TypeSignature Language="C#" Value="public enum SearchOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SearchOption extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.IO.SearchOption" />
  <TypeSignature Language="VB.NET" Value="Public Enum SearchOption" />
  <TypeSignature Language="F#" Value="type SearchOption = " />
  <TypeSignature Language="C++ CLI" Value="public enum class SearchOption" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.IO.Redist</AssemblyName>
    <AssemblyVersion>6.0.0.1</AssemblyVersion>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
    <AssemblyVersion>6.1.1.0</AssemblyVersion>
    <AssemblyVersion>6.1.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
    <devdoc>
              Enum describing whether the search operation should
              retrieve files/directories from the current directory alone
              or should include all the subdirectories also.
            </devdoc>
  </Docs>
  <Members>
    <Member MemberName="AllDirectories">
      <MemberSignature Language="C#" Value="AllDirectories" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.IO.SearchOption AllDirectories = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.IO.SearchOption.AllDirectories" />
      <MemberSignature Language="VB.NET" Value="AllDirectories" />
      <MemberSignature Language="F#" Value="AllDirectories = 1" Usage="Microsoft.IO.SearchOption.AllDirectories" />
      <MemberSignature Language="C++ CLI" Value="AllDirectories" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IO.Redist</AssemblyName>
        <AssemblyVersion>6.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IO.SearchOption</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <devdoc>
              Include the current directory and all the sub-directories
              underneath it including reparse points in the search operation.
              This will traverse reparse points (i.e, mounted points and symbolic links)
              recursively. If the directory structure searched contains a loop
              because of hard links, the search operation will go on for ever.
            </devdoc>
      </Docs>
    </Member>
    <Member MemberName="TopDirectoryOnly">
      <MemberSignature Language="C#" Value="TopDirectoryOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.IO.SearchOption TopDirectoryOnly = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.IO.SearchOption.TopDirectoryOnly" />
      <MemberSignature Language="VB.NET" Value="TopDirectoryOnly" />
      <MemberSignature Language="F#" Value="TopDirectoryOnly = 0" Usage="Microsoft.IO.SearchOption.TopDirectoryOnly" />
      <MemberSignature Language="C++ CLI" Value="TopDirectoryOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IO.Redist</AssemblyName>
        <AssemblyVersion>6.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IO.SearchOption</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <devdoc>
              Include only the current directory in the search operation
            </devdoc>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="IFaultInjectionOptionsProvider" FullName="Microsoft.Extensions.Resilience.FaultInjection.IFaultInjectionOptionsProvider">
  <TypeSignature Language="C#" Value="public interface IFaultInjectionOptionsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFaultInjectionOptionsProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Resilience.FaultInjection.IFaultInjectionOptionsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFaultInjectionOptionsProvider" />
  <TypeSignature Language="F#" Value="type IFaultInjectionOptionsProvider = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFaultInjectionOptionsProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Interface for fault-injection options provider implementations.
            </summary>
    <remarks>
            A fault-injection options provider is intended to retain chaos policy configurations and
            to allow <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.ChaosPolicyOptionsGroup" /> instances to be retrieved by other services.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="TryGetChaosPolicyOptionsGroup">
      <MemberSignature Language="C#" Value="public bool TryGetChaosPolicyOptionsGroup (string optionsGroupName, out Microsoft.Extensions.Resilience.FaultInjection.ChaosPolicyOptionsGroup? optionsGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetChaosPolicyOptionsGroup(string optionsGroupName, [out] class Microsoft.Extensions.Resilience.FaultInjection.ChaosPolicyOptionsGroup&amp; optionsGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.FaultInjection.IFaultInjectionOptionsProvider.TryGetChaosPolicyOptionsGroup(System.String,Microsoft.Extensions.Resilience.FaultInjection.ChaosPolicyOptionsGroup@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetChaosPolicyOptionsGroup (optionsGroupName As String, ByRef optionsGroup As ChaosPolicyOptionsGroup) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetChaosPolicyOptionsGroup : string * ChaosPolicyOptionsGroup -&gt; bool" Usage="iFaultInjectionOptionsProvider.TryGetChaosPolicyOptionsGroup (optionsGroupName, optionsGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetChaosPolicyOptionsGroup(System::String ^ optionsGroupName, [Runtime::InteropServices::Out] Microsoft::Extensions::Resilience::FaultInjection::ChaosPolicyOptionsGroup ^ % optionsGroup);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionsGroupName" Type="System.String" />
        <Parameter Name="optionsGroup" Type="Microsoft.Extensions.Resilience.FaultInjection.ChaosPolicyOptionsGroup" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="optionsGroupName">The chaos policy options group name.</param>
        <param name="optionsGroup">
            The <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.ChaosPolicyOptionsGroup" /> associated with the options group name if it is found; otherwise, null.
            </param>
        <summary>
            Get an instance of <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.ChaosPolicyOptionsGroup" /> from the provider by the options group name.
            </summary>
        <returns>
            True if the <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.ChaosPolicyOptionsGroup" /> associated with the options group name if it is found; otherwise, false.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

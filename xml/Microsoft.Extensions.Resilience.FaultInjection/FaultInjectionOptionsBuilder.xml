<Type Name="FaultInjectionOptionsBuilder" FullName="Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder">
  <TypeSignature Language="C#" Value="public class FaultInjectionOptionsBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FaultInjectionOptionsBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class FaultInjectionOptionsBuilder" />
  <TypeSignature Language="F#" Value="type FaultInjectionOptionsBuilder = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class FaultInjectionOptionsBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Builder class to provide options configuration methods for
            <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions" /> and <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionExceptionOptions" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FaultInjectionOptionsBuilder (Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (services As IServiceCollection)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder" Usage="new Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder services" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FaultInjectionOptionsBuilder(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
      </Parameters>
      <Docs>
        <param name="services">The services collection.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            All parameters cannot be null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddCustomResult">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder AddCustomResult (string key, object customResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder AddCustomResult(string key, object customResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder.AddCustomResult(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCustomResult (key As String, customResult As Object) As FaultInjectionOptionsBuilder" />
      <MemberSignature Language="F#" Value="member this.AddCustomResult : string * obj -&gt; Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder" Usage="faultInjectionOptionsBuilder.AddCustomResult (key, customResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Resilience::FaultInjection::FaultInjectionOptionsBuilder ^ AddCustomResult(System::String ^ key, System::Object ^ customResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="customResult" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">The identifier for the custom result object instance to be added.</param>
        <param name="customResult">The custom result object instance to be added.</param>
        <summary>
            Add a custom result object instance to <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionCustomResultOptions" />.
            </summary>
        <returns>The builder object itself so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            The exception cannot be null.
            </exception>
        <exception cref="T:System.ArgumentException">
            The key must not be an empty string or null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddException">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder AddException (string key, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder AddException(string key, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder.AddException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddException (key As String, exception As Exception) As FaultInjectionOptionsBuilder" />
      <MemberSignature Language="F#" Value="member this.AddException : string * Exception -&gt; Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder" Usage="faultInjectionOptionsBuilder.AddException (key, exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Resilience::FaultInjection::FaultInjectionOptionsBuilder ^ AddException(System::String ^ key, Exception ^ exception);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="key">The identifier for the exception instance to be added.</param>
        <param name="exception">The exception instance to be added.</param>
        <summary>
            Add an exception instance to <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionExceptionOptions" />.
            </summary>
        <returns>The builder object itself so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            The exception cannot be null.
            </exception>
        <exception cref="T:System.ArgumentException">
            The key must not be an empty string or null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder Configure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder Configure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder.Configure" />
      <MemberSignature Language="VB.NET" Value="Public Function Configure () As FaultInjectionOptionsBuilder" />
      <MemberSignature Language="F#" Value="member this.Configure : unit -&gt; Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder" Usage="faultInjectionOptionsBuilder.Configure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Resilience::FaultInjection::FaultInjectionOptionsBuilder ^ Configure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Configures default <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions" />.
            </summary>
        <returns>
            The builder object itself so that additional calls can be chained.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder Configure (Microsoft.Extensions.Configuration.IConfiguration section);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder Configure(class Microsoft.Extensions.Configuration.IConfiguration section) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder.Configure(Microsoft.Extensions.Configuration.IConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Function Configure (section As IConfiguration) As FaultInjectionOptionsBuilder" />
      <MemberSignature Language="F#" Value="member this.Configure : Microsoft.Extensions.Configuration.IConfiguration -&gt; Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder" Usage="faultInjectionOptionsBuilder.Configure section" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Resilience::FaultInjection::FaultInjectionOptionsBuilder ^ Configure(Microsoft::Extensions::Configuration::IConfiguration ^ section);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicDependency(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties, typeof(Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicDependency(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties, typeof(Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessage("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code", Justification="Addressed by [DynamicDependency]")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessage("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code", Justification="Addressed by [DynamicDependency]")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="section" Type="Microsoft.Extensions.Configuration.IConfiguration" />
      </Parameters>
      <Docs>
        <param name="section">
            The configuration section to bind to <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions" />.
            </param>
        <summary>
            Configures <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions" /> through
            the provided <see cref="T:Microsoft.Extensions.Configuration.IConfigurationSection" />.
            </summary>
        <returns>The builder object itself so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            All parameters cannot be null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder Configure (Action&lt;Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions&gt; configureOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder Configure(class System.Action`1&lt;class Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions&gt; configureOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder.Configure(System.Action{Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions})" />
      <MemberSignature Language="VB.NET" Value="Public Function Configure (configureOptions As Action(Of FaultInjectionOptions)) As FaultInjectionOptionsBuilder" />
      <MemberSignature Language="F#" Value="member this.Configure : Action&lt;Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions&gt; -&gt; Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder" Usage="faultInjectionOptionsBuilder.Configure configureOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Resilience::FaultInjection::FaultInjectionOptionsBuilder ^ Configure(Action&lt;Microsoft::Extensions::Resilience::FaultInjection::FaultInjectionOptions ^&gt; ^ configureOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configureOptions" Type="System.Action&lt;Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="configureOptions">
            The function to be registered to configure <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions" />.
            </param>
        <summary>
            Configures <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions" /> through
            the provided configure.
            </summary>
        <returns>The builder object itself so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            All parameters cannot be null.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>

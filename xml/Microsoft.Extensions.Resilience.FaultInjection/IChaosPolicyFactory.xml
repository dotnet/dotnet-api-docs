<Type Name="IChaosPolicyFactory" FullName="Microsoft.Extensions.Resilience.FaultInjection.IChaosPolicyFactory">
  <TypeSignature Language="C#" Value="public interface IChaosPolicyFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChaosPolicyFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Resilience.FaultInjection.IChaosPolicyFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChaosPolicyFactory" />
  <TypeSignature Language="F#" Value="type IChaosPolicyFactory = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IChaosPolicyFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Factory for chaos policy creation.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateCustomResultPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public Polly.Contrib.Simmy.Outcomes.AsyncInjectOutcomePolicy&lt;TResult&gt; CreateCustomResultPolicy&lt;TResult&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Polly.Contrib.Simmy.Outcomes.AsyncInjectOutcomePolicy`1&lt;!!TResult&gt; CreateCustomResultPolicy&lt;TResult&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.FaultInjection.IChaosPolicyFactory.CreateCustomResultPolicy``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCustomResultPolicy(Of TResult) () As AsyncInjectOutcomePolicy(Of TResult)" />
      <MemberSignature Language="F#" Value="abstract member CreateCustomResultPolicy : unit -&gt; Polly.Contrib.Simmy.Outcomes.AsyncInjectOutcomePolicy&lt;'Result&gt;" Usage="iChaosPolicyFactory.CreateCustomResultPolicy " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; Polly::Contrib::Simmy::Outcomes::AsyncInjectOutcomePolicy&lt;TResult&gt; ^ CreateCustomResultPolicy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Polly.Contrib.Simmy.Outcomes.AsyncInjectOutcomePolicy&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TResult">The type of value policies created by this method will inject.</typeparam>
        <summary>
            Creates an async custom result policy with delegate functions to fetch
            fault injection settings from <see cref="T:Polly.Context" />.
            </summary>
        <returns>A custom result policy, an instance of <see cref="T:Polly.Contrib.Simmy.Outcomes.AsyncInjectOutcomePolicy`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateExceptionPolicy">
      <MemberSignature Language="C#" Value="public Polly.Contrib.Simmy.Outcomes.AsyncInjectOutcomePolicy CreateExceptionPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Polly.Contrib.Simmy.Outcomes.AsyncInjectOutcomePolicy CreateExceptionPolicy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.FaultInjection.IChaosPolicyFactory.CreateExceptionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateExceptionPolicy () As AsyncInjectOutcomePolicy" />
      <MemberSignature Language="F#" Value="abstract member CreateExceptionPolicy : unit -&gt; Polly.Contrib.Simmy.Outcomes.AsyncInjectOutcomePolicy" Usage="iChaosPolicyFactory.CreateExceptionPolicy " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Polly::Contrib::Simmy::Outcomes::AsyncInjectOutcomePolicy ^ CreateExceptionPolicy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Polly.Contrib.Simmy.Outcomes.AsyncInjectOutcomePolicy</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates an async exception policy with delegate functions to fetch
            fault injection settings from <see cref="T:Polly.Context" />.
            </summary>
        <returns>
            An exception policy,
            an instance of <see cref="T:Polly.Contrib.Simmy.Outcomes.AsyncInjectOutcomePolicy" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLatencyPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public Polly.Contrib.Simmy.Latency.AsyncInjectLatencyPolicy&lt;TResult&gt; CreateLatencyPolicy&lt;TResult&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Polly.Contrib.Simmy.Latency.AsyncInjectLatencyPolicy`1&lt;!!TResult&gt; CreateLatencyPolicy&lt;TResult&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.FaultInjection.IChaosPolicyFactory.CreateLatencyPolicy``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateLatencyPolicy(Of TResult) () As AsyncInjectLatencyPolicy(Of TResult)" />
      <MemberSignature Language="F#" Value="abstract member CreateLatencyPolicy : unit -&gt; Polly.Contrib.Simmy.Latency.AsyncInjectLatencyPolicy&lt;'Result&gt;" Usage="iChaosPolicyFactory.CreateLatencyPolicy " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; Polly::Contrib::Simmy::Latency::AsyncInjectLatencyPolicy&lt;TResult&gt; ^ CreateLatencyPolicy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Polly.Contrib.Simmy.Latency.AsyncInjectLatencyPolicy&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TResult">The type of value policies created by this method will inject.</typeparam>
        <summary>
            Creates an async latency policy with delegate functions to fetch fault injection
            settings from <see cref="T:Polly.Context" />.
            </summary>
        <returns>
            A latency policy,
            an instance of <see cref="T:Polly.Contrib.Simmy.Latency.AsyncInjectLatencyPolicy`1" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

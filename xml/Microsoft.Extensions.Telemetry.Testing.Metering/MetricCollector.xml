<Type Name="MetricCollector" FullName="Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector">
  <TypeSignature Language="C#" Value="public class MetricCollector : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetricCollector extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector" />
  <TypeSignature Language="VB.NET" Value="Public Class MetricCollector&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type MetricCollector = class&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetricCollector : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            The helper class to automatically capture metering data that has been recorded
            by instruments created by <see cref="T:System.Diagnostics.Metrics.Meter" />.
            </summary>
    <remarks>
            This type has been designed to be used only for testing purposes.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetricCollector (TimeProvider? timeProvider = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.TimeProvider timeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.#ctor(System.TimeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional timeProvider As TimeProvider = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector : TimeProvider -&gt; Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector" Usage="new Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector timeProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="timeProvider" Type="System.TimeProvider" />
      </Parameters>
      <Docs>
        <param name="timeProvider">The <see cref="T:System.TimeProvider" /> instance.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector" /> class.
            </summary>
        <remarks>
            This constructor is applicable for the scenario when metering data
            generated by all the active <see cref="T:System.Diagnostics.Metrics.Meter" /> instances
            in the application is to be captured.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetricCollector (System.Collections.Generic.IEnumerable&lt;string&gt; meterNames, TimeProvider? timeProvider = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; meterNames, class System.TimeProvider timeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.#ctor(System.Collections.Generic.IEnumerable{System.String},System.TimeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (meterNames As IEnumerable(Of String), Optional timeProvider As TimeProvider = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector : seq&lt;string&gt; * TimeProvider -&gt; Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector" Usage="new Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector (meterNames, timeProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="meterNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="timeProvider" Type="System.TimeProvider" />
      </Parameters>
      <Docs>
        <param name="meterNames">The names of .NET <see cref="T:System.Diagnostics.Metrics.Meter" /> to capture measurements from.</param>
        <param name="timeProvider">The <see cref="T:System.TimeProvider" /> instance.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector" /> class.
            </summary>
        <remarks>
            This constructor is applicable for the scenario when metering data generated
            by active <see cref="T:System.Diagnostics.Metrics.Meter" /> instances which <see cref="P:System.Diagnostics.Metrics.Meter.Name" /> matches
            the one from the list <paramref name="meterNames" /> is to be captured.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetricCollector (System.Diagnostics.Metrics.Meter meter, TimeProvider? timeProvider = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.Metrics.Meter meter, class System.TimeProvider timeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.#ctor(System.Diagnostics.Metrics.Meter,System.TimeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (meter As Meter, Optional timeProvider As TimeProvider = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector : System.Diagnostics.Metrics.Meter * TimeProvider -&gt; Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector" Usage="new Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector (meter, timeProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="meter" Type="System.Diagnostics.Metrics.Meter" />
        <Parameter Name="timeProvider" Type="System.TimeProvider" />
      </Parameters>
      <Docs>
        <param name="meter">The <see cref="T:System.Diagnostics.Metrics.Meter" /> instance to capture metering data.</param>
        <param name="timeProvider">The <see cref="T:System.TimeProvider" /> instance.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector" /> class.
            </summary>
        <remarks>
            This constructor is applicable for the scenario when metering data
            generated by a specific <see cref="T:System.Diagnostics.Metrics.Meter" /> instance is to be captured.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="metricCollector.Clear " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Clears all the captured metering data.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectObservableInstruments">
      <MemberSignature Language="C#" Value="public void CollectObservableInstruments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollectObservableInstruments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.CollectObservableInstruments" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollectObservableInstruments ()" />
      <MemberSignature Language="F#" Value="member this.CollectObservableInstruments : unit -&gt; unit" Usage="metricCollector.CollectObservableInstruments " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CollectObservableInstruments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Collects all observable instruments and records their measurements.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="metricCollector.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="metricCollector.Dispose disposing" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Disposing.</param>
        <summary>
            Disponse the el.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllCounters&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;&gt;? GetAllCounters&lt;T&gt; () where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1&lt;!!T&gt;&gt; GetAllCounters&lt;struct .ctor (class System.ValueType) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.GetAllCounters``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllCounters(Of T As Structure) () As IReadOnlyDictionary(Of String, MetricValuesHolder(Of T))" />
      <MemberSignature Language="F#" Value="member this.GetAllCounters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;string, Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;'T&gt;&gt; (requires 'T : struct)" Usage="metricCollector.GetAllCounters " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, Microsoft::Extensions::Telemetry::Testing::Metering::MetricValuesHolder&lt;T&gt; ^&gt; ^ GetAllCounters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of metric measurement value.</typeparam>
        <summary>
            Gets a list of all counters registered with this metrics collector.
            </summary>
        <returns>Read only dictionary of <see cref="T:Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllHistograms&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;&gt;? GetAllHistograms&lt;T&gt; () where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1&lt;!!T&gt;&gt; GetAllHistograms&lt;struct .ctor (class System.ValueType) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.GetAllHistograms``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllHistograms(Of T As Structure) () As IReadOnlyDictionary(Of String, MetricValuesHolder(Of T))" />
      <MemberSignature Language="F#" Value="member this.GetAllHistograms : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;string, Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;'T&gt;&gt; (requires 'T : struct)" Usage="metricCollector.GetAllHistograms " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, Microsoft::Extensions::Telemetry::Testing::Metering::MetricValuesHolder&lt;T&gt; ^&gt; ^ GetAllHistograms();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of metric measurement value.</typeparam>
        <summary>
            Gets a list of all histograms registered with this metrics collector.
            </summary>
        <returns>Read only dictionary of <see cref="T:Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllObservableCounters&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;&gt;? GetAllObservableCounters&lt;T&gt; () where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1&lt;!!T&gt;&gt; GetAllObservableCounters&lt;struct .ctor (class System.ValueType) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.GetAllObservableCounters``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllObservableCounters(Of T As Structure) () As IReadOnlyDictionary(Of String, MetricValuesHolder(Of T))" />
      <MemberSignature Language="F#" Value="member this.GetAllObservableCounters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;string, Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;'T&gt;&gt; (requires 'T : struct)" Usage="metricCollector.GetAllObservableCounters " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, Microsoft::Extensions::Telemetry::Testing::Metering::MetricValuesHolder&lt;T&gt; ^&gt; ^ GetAllObservableCounters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of metric measurement value.</typeparam>
        <summary>
            Gets a list of all observable counters registered with this metrics collector.
            </summary>
        <returns>Read only dictionary of <see cref="T:Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllObservableGauges&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;&gt;? GetAllObservableGauges&lt;T&gt; () where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1&lt;!!T&gt;&gt; GetAllObservableGauges&lt;struct .ctor (class System.ValueType) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.GetAllObservableGauges``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllObservableGauges(Of T As Structure) () As IReadOnlyDictionary(Of String, MetricValuesHolder(Of T))" />
      <MemberSignature Language="F#" Value="member this.GetAllObservableGauges : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;string, Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;'T&gt;&gt; (requires 'T : struct)" Usage="metricCollector.GetAllObservableGauges " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, Microsoft::Extensions::Telemetry::Testing::Metering::MetricValuesHolder&lt;T&gt; ^&gt; ^ GetAllObservableGauges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of metric measurement value.</typeparam>
        <summary>
            Gets a list of all observable Gauges registered with this metrics collector.
            </summary>
        <returns>Read only dictionary of <see cref="T:Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllObservableUpDownCounters&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;&gt;? GetAllObservableUpDownCounters&lt;T&gt; () where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1&lt;!!T&gt;&gt; GetAllObservableUpDownCounters&lt;struct .ctor (class System.ValueType) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.GetAllObservableUpDownCounters``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllObservableUpDownCounters(Of T As Structure) () As IReadOnlyDictionary(Of String, MetricValuesHolder(Of T))" />
      <MemberSignature Language="F#" Value="member this.GetAllObservableUpDownCounters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;string, Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;'T&gt;&gt; (requires 'T : struct)" Usage="metricCollector.GetAllObservableUpDownCounters " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, Microsoft::Extensions::Telemetry::Testing::Metering::MetricValuesHolder&lt;T&gt; ^&gt; ^ GetAllObservableUpDownCounters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of metric measurement value.</typeparam>
        <summary>
            Gets a list of all observable UpDown counters registered with this metrics collector.
            </summary>
        <returns>Read only dictionary of <see cref="T:Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUpDownCounters&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;&gt;? GetAllUpDownCounters&lt;T&gt; () where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1&lt;!!T&gt;&gt; GetAllUpDownCounters&lt;struct .ctor (class System.ValueType) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.GetAllUpDownCounters``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllUpDownCounters(Of T As Structure) () As IReadOnlyDictionary(Of String, MetricValuesHolder(Of T))" />
      <MemberSignature Language="F#" Value="member this.GetAllUpDownCounters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;string, Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;'T&gt;&gt; (requires 'T : struct)" Usage="metricCollector.GetAllUpDownCounters " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, Microsoft::Extensions::Telemetry::Testing::Metering::MetricValuesHolder&lt;T&gt; ^&gt; ^ GetAllUpDownCounters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of metric measurement value.</typeparam>
        <summary>
            Gets a list of all UpDown counters registered with this metrics collector.
            </summary>
        <returns>Read only dictionary of <see cref="T:Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCounterValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T? GetCounterValue&lt;T&gt; (string counterName, params System.Collections.Generic.KeyValuePair&lt;string,object&gt;[] tags) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;!!T&gt; GetCounterValue&lt;struct .ctor (class System.ValueType) T&gt;(string counterName, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;[] tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.GetCounterValue``1(System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCounterValue(Of T As Structure) (counterName As String, ParamArray tags As KeyValuePair(Of String, Object)()) As Nullable(Of T)" />
      <MemberSignature Language="F#" Value="member this.GetCounterValue : string * System.Collections.Generic.KeyValuePair&lt;string, obj&gt;[] -&gt; Nullable&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="metricCollector.GetCounterValue (counterName, tags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class Nullable&lt;T&gt; GetCounterValue(System::String ^ counterName, ... cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ tags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of metric measurement value.</typeparam>
        <param name="counterName">The metric name.</param>
        <param name="tags">The dimensions collection describing the measurement value.</param>
        <summary>
            Gets a measurement value recorded by a counter instrument.
            </summary>
        <returns>The measurement value or <see langword="null" /> if the value was not recorded.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCounterValues&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;? GetCounterValues&lt;T&gt; (string counterName) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1&lt;!!T&gt; GetCounterValues&lt;struct .ctor (class System.ValueType) T&gt;(string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.GetCounterValues``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCounterValues(Of T As Structure) (counterName As String) As MetricValuesHolder(Of T)" />
      <MemberSignature Language="F#" Value="member this.GetCounterValues : string -&gt; Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="metricCollector.GetCounterValues counterName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class Microsoft::Extensions::Telemetry::Testing::Metering::MetricValuesHolder&lt;T&gt; ^ GetCounterValues(System::String ^ counterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of metric measurement value.</typeparam>
        <param name="counterName">The metric name.</param>
        <summary>
            Gets the object containing all the captured metering data that has been recorded by a counter instrument.
            </summary>
        <returns>
            The <see cref="T:Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1" /> instance or <see langword="null" /> if a counter with given <paramref name="counterName" /> was not found.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHistogramValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T? GetHistogramValue&lt;T&gt; (string histogramName, params System.Collections.Generic.KeyValuePair&lt;string,object&gt;[] tags) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;!!T&gt; GetHistogramValue&lt;struct .ctor (class System.ValueType) T&gt;(string histogramName, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;[] tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.GetHistogramValue``1(System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHistogramValue(Of T As Structure) (histogramName As String, ParamArray tags As KeyValuePair(Of String, Object)()) As Nullable(Of T)" />
      <MemberSignature Language="F#" Value="member this.GetHistogramValue : string * System.Collections.Generic.KeyValuePair&lt;string, obj&gt;[] -&gt; Nullable&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="metricCollector.GetHistogramValue (histogramName, tags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class Nullable&lt;T&gt; GetHistogramValue(System::String ^ histogramName, ... cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ tags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="histogramName" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of metric measurement value.</typeparam>
        <param name="histogramName">The metric name.</param>
        <param name="tags">The dimensions collection describing the measurement value.</param>
        <summary>
            Gets a measurement value recorded by a histogram instrument.
            </summary>
        <returns>The measurement value or <see langword="null" /> if the value was not recorded.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHistogramValues&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;? GetHistogramValues&lt;T&gt; (string histogramName) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1&lt;!!T&gt; GetHistogramValues&lt;struct .ctor (class System.ValueType) T&gt;(string histogramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.GetHistogramValues``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHistogramValues(Of T As Structure) (histogramName As String) As MetricValuesHolder(Of T)" />
      <MemberSignature Language="F#" Value="member this.GetHistogramValues : string -&gt; Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="metricCollector.GetHistogramValues histogramName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class Microsoft::Extensions::Telemetry::Testing::Metering::MetricValuesHolder&lt;T&gt; ^ GetHistogramValues(System::String ^ histogramName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="histogramName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of metric measurement value.</typeparam>
        <param name="histogramName">The metric name.</param>
        <summary>
            Gets the object containing all the captured metering data that has been recorded by a histogram instrument.
            </summary>
        <returns>
            The <see cref="T:Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1" /> instance or <see langword="null" /> if a histogram with given <paramref name="histogramName" /> was not found.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObservableCounterValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T? GetObservableCounterValue&lt;T&gt; (string observableCounterName, params System.Collections.Generic.KeyValuePair&lt;string,object&gt;[] tags) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;!!T&gt; GetObservableCounterValue&lt;struct .ctor (class System.ValueType) T&gt;(string observableCounterName, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;[] tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.GetObservableCounterValue``1(System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObservableCounterValue(Of T As Structure) (observableCounterName As String, ParamArray tags As KeyValuePair(Of String, Object)()) As Nullable(Of T)" />
      <MemberSignature Language="F#" Value="member this.GetObservableCounterValue : string * System.Collections.Generic.KeyValuePair&lt;string, obj&gt;[] -&gt; Nullable&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="metricCollector.GetObservableCounterValue (observableCounterName, tags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class Nullable&lt;T&gt; GetObservableCounterValue(System::String ^ observableCounterName, ... cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ tags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="observableCounterName" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of metric measurement value.</typeparam>
        <param name="observableCounterName">The metric name.</param>
        <param name="tags">The dimensions collection describing the measurement value.</param>
        <summary>
            Gets a measurement value recorded by an observable counter instrument.
            </summary>
        <returns>The measurement value or <see langword="null" /> if the value was not recorded.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObservableCounterValues&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;? GetObservableCounterValues&lt;T&gt; (string observableCounterName) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1&lt;!!T&gt; GetObservableCounterValues&lt;struct .ctor (class System.ValueType) T&gt;(string observableCounterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.GetObservableCounterValues``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObservableCounterValues(Of T As Structure) (observableCounterName As String) As MetricValuesHolder(Of T)" />
      <MemberSignature Language="F#" Value="member this.GetObservableCounterValues : string -&gt; Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="metricCollector.GetObservableCounterValues observableCounterName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class Microsoft::Extensions::Telemetry::Testing::Metering::MetricValuesHolder&lt;T&gt; ^ GetObservableCounterValues(System::String ^ observableCounterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="observableCounterName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of metric measurement value.</typeparam>
        <param name="observableCounterName">The metric name.</param>
        <summary>
            Gets the object containing all the captured metering data that has been recorded by an observable counter instrument.
            </summary>
        <returns>
            The <see cref="T:Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1" /> instance or <see langword="null" /> if an observable counter with given <paramref name="observableCounterName" /> was not found.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObservableGaugeValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T? GetObservableGaugeValue&lt;T&gt; (string observableGaugeName, params System.Collections.Generic.KeyValuePair&lt;string,object&gt;[] tags) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;!!T&gt; GetObservableGaugeValue&lt;struct .ctor (class System.ValueType) T&gt;(string observableGaugeName, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;[] tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.GetObservableGaugeValue``1(System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObservableGaugeValue(Of T As Structure) (observableGaugeName As String, ParamArray tags As KeyValuePair(Of String, Object)()) As Nullable(Of T)" />
      <MemberSignature Language="F#" Value="member this.GetObservableGaugeValue : string * System.Collections.Generic.KeyValuePair&lt;string, obj&gt;[] -&gt; Nullable&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="metricCollector.GetObservableGaugeValue (observableGaugeName, tags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class Nullable&lt;T&gt; GetObservableGaugeValue(System::String ^ observableGaugeName, ... cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ tags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="observableGaugeName" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of metric measurement value.</typeparam>
        <param name="observableGaugeName">The metric name.</param>
        <param name="tags">The dimensions collection describing the measurement value.</param>
        <summary>
            Gets a measurement value recorded by an observable gauge instrument.
            </summary>
        <returns>The measurement value or <see langword="null" /> if the value was not recorded.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObservableGaugeValues&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;? GetObservableGaugeValues&lt;T&gt; (string observableGaugeName) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1&lt;!!T&gt; GetObservableGaugeValues&lt;struct .ctor (class System.ValueType) T&gt;(string observableGaugeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.GetObservableGaugeValues``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObservableGaugeValues(Of T As Structure) (observableGaugeName As String) As MetricValuesHolder(Of T)" />
      <MemberSignature Language="F#" Value="member this.GetObservableGaugeValues : string -&gt; Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="metricCollector.GetObservableGaugeValues observableGaugeName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class Microsoft::Extensions::Telemetry::Testing::Metering::MetricValuesHolder&lt;T&gt; ^ GetObservableGaugeValues(System::String ^ observableGaugeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="observableGaugeName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of metric measurement value.</typeparam>
        <param name="observableGaugeName">The metric name.</param>
        <summary>
            Gets the object containing all the captured metering data that has been recorded by an observable gauge instrument.
            </summary>
        <returns>
            The <see cref="T:Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1" /> instance or <see langword="null" /> if an observable gauge with given <paramref name="observableGaugeName" /> was not found.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObservableUpDownCounterValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T? GetObservableUpDownCounterValue&lt;T&gt; (string observableUpDownCounterName, params System.Collections.Generic.KeyValuePair&lt;string,object&gt;[] tags) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;!!T&gt; GetObservableUpDownCounterValue&lt;struct .ctor (class System.ValueType) T&gt;(string observableUpDownCounterName, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;[] tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.GetObservableUpDownCounterValue``1(System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObservableUpDownCounterValue(Of T As Structure) (observableUpDownCounterName As String, ParamArray tags As KeyValuePair(Of String, Object)()) As Nullable(Of T)" />
      <MemberSignature Language="F#" Value="member this.GetObservableUpDownCounterValue : string * System.Collections.Generic.KeyValuePair&lt;string, obj&gt;[] -&gt; Nullable&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="metricCollector.GetObservableUpDownCounterValue (observableUpDownCounterName, tags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class Nullable&lt;T&gt; GetObservableUpDownCounterValue(System::String ^ observableUpDownCounterName, ... cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ tags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="observableUpDownCounterName" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of metric measurement value.</typeparam>
        <param name="observableUpDownCounterName">The metric name.</param>
        <param name="tags">The dimensions collection describing the measurement value.</param>
        <summary>
            Gets a measurement value recorded by an observable updown counter instrument.
            </summary>
        <returns>The measurement value or <see langword="null" /> if the value was not recorded.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObservableUpDownCounterValues&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;? GetObservableUpDownCounterValues&lt;T&gt; (string observableUpDownCounterName) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1&lt;!!T&gt; GetObservableUpDownCounterValues&lt;struct .ctor (class System.ValueType) T&gt;(string observableUpDownCounterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.GetObservableUpDownCounterValues``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObservableUpDownCounterValues(Of T As Structure) (observableUpDownCounterName As String) As MetricValuesHolder(Of T)" />
      <MemberSignature Language="F#" Value="member this.GetObservableUpDownCounterValues : string -&gt; Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="metricCollector.GetObservableUpDownCounterValues observableUpDownCounterName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class Microsoft::Extensions::Telemetry::Testing::Metering::MetricValuesHolder&lt;T&gt; ^ GetObservableUpDownCounterValues(System::String ^ observableUpDownCounterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="observableUpDownCounterName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of metric measurement value.</typeparam>
        <param name="observableUpDownCounterName">The metric name.</param>
        <summary>
            Gets the object containing all the captured metering data that has been recorded by an observable updown counter instrument.
            </summary>
        <returns>
            The <see cref="T:Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1" /> instance or <see langword="null" /> if an observable updown counter with given <paramref name="observableUpDownCounterName" /> was not found.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpDownCounterValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T? GetUpDownCounterValue&lt;T&gt; (string updownCounterName, params System.Collections.Generic.KeyValuePair&lt;string,object&gt;[] tags) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;!!T&gt; GetUpDownCounterValue&lt;struct .ctor (class System.ValueType) T&gt;(string updownCounterName, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;[] tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.GetUpDownCounterValue``1(System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpDownCounterValue(Of T As Structure) (updownCounterName As String, ParamArray tags As KeyValuePair(Of String, Object)()) As Nullable(Of T)" />
      <MemberSignature Language="F#" Value="member this.GetUpDownCounterValue : string * System.Collections.Generic.KeyValuePair&lt;string, obj&gt;[] -&gt; Nullable&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="metricCollector.GetUpDownCounterValue (updownCounterName, tags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class Nullable&lt;T&gt; GetUpDownCounterValue(System::String ^ updownCounterName, ... cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ tags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="updownCounterName" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of metric measurement value.</typeparam>
        <param name="updownCounterName">The metric name.</param>
        <param name="tags">The dimensions collection describing the measurement value.</param>
        <summary>
            Gets a measurement value recorded by an updown counter instrument.
            </summary>
        <returns>The measurement value or <see langword="null" /> if the value was not recorded.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpDownCounterValues&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;? GetUpDownCounterValues&lt;T&gt; (string updownCounterName) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1&lt;!!T&gt; GetUpDownCounterValues&lt;struct .ctor (class System.ValueType) T&gt;(string updownCounterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Testing.Metering.MetricCollector.GetUpDownCounterValues``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpDownCounterValues(Of T As Structure) (updownCounterName As String) As MetricValuesHolder(Of T)" />
      <MemberSignature Language="F#" Value="member this.GetUpDownCounterValues : string -&gt; Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="metricCollector.GetUpDownCounterValues updownCounterName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class Microsoft::Extensions::Telemetry::Testing::Metering::MetricValuesHolder&lt;T&gt; ^ GetUpDownCounterValues(System::String ^ updownCounterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="updownCounterName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of metric measurement value.</typeparam>
        <param name="updownCounterName">The metric name.</param>
        <summary>
            Gets the object containing all the captured metering data that has been recorded by an updown counter instrument.
            </summary>
        <returns>
            The <see cref="T:Microsoft.Extensions.Telemetry.Testing.Metering.MetricValuesHolder`1" /> instance or <see langword="null" /> if an updown counter with given <paramref name="updownCounterName" /> was not found.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

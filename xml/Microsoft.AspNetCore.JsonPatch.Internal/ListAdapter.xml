<Type Name="ListAdapter" FullName="Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter">
  <TypeSignature Language="C#" Value="public class ListAdapter : Microsoft.AspNetCore.JsonPatch.Internal.IAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListAdapter extends System.Object implements class Microsoft.AspNetCore.JsonPatch.Internal.IAdapter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Class ListAdapter&#xA;Implements IAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListAdapter : Microsoft::AspNetCore::JsonPatch::Internal::IAdapter" />
  <TypeSignature Language="F#" Value="type ListAdapter = class&#xA;    interface IAdapter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.JsonPatch.Internal.IAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public virtual bool TryAdd (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryAdd(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter.TryAdd(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryAdd (target As Object, segment As String, contractResolver As IContractResolver, value As Object, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryAdd(System::Object ^ target, System::String ^ segment, Newtonsoft::Json::Serialization::IContractResolver ^ contractResolver, System::Object ^ value, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryAdd : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool&#xA;override this.TryAdd : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool" Usage="listAdapter.TryAdd (target, segment, contractResolver, value, errorMessage)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryAdd(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="value">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertValue">
      <MemberSignature Language="C#" Value="protected virtual bool TryConvertValue (object originalValue, Type listTypeArgument, string segment, out object convertedValue, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryConvertValue(object originalValue, class System.Type listTypeArgument, string segment, [out] object&amp; convertedValue, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter.TryConvertValue(System.Object,System.Type,System.String,System.Object@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryConvertValue (originalValue As Object, listTypeArgument As Type, segment As String, ByRef convertedValue As Object, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TryConvertValue(System::Object ^ originalValue, Type ^ listTypeArgument, System::String ^ segment, [Runtime::InteropServices::Out] System::Object ^ % convertedValue, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryConvertValue : obj * Type * string * obj * string -&gt; bool&#xA;override this.TryConvertValue : obj * Type * string * obj * string -&gt; bool" Usage="listAdapter.TryConvertValue (originalValue, listTypeArgument, segment, convertedValue, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originalValue" Type="System.Object" />
        <Parameter Name="listTypeArgument" Type="System.Type" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="convertedValue" Type="System.Object" RefType="out" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="originalValue">To be added.</param>
        <param name="listTypeArgument">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="convertedValue">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGet">
      <MemberSignature Language="C#" Value="public virtual bool TryGet (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, out object value, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGet(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, [out] object&amp; value, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter.TryGet(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryGet (target As Object, segment As String, contractResolver As IContractResolver, ByRef value As Object, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGet(System::Object ^ target, System::String ^ segment, Newtonsoft::Json::Serialization::IContractResolver ^ contractResolver, [Runtime::InteropServices::Out] System::Object ^ % value, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryGet : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool&#xA;override this.TryGet : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool" Usage="listAdapter.TryGet (target, segment, contractResolver, value, errorMessage)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryGet(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="value">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetListTypeArgument">
      <MemberSignature Language="C#" Value="protected virtual bool TryGetListTypeArgument (System.Collections.IList list, out Type listTypeArgument, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryGetListTypeArgument(class System.Collections.IList list, [out] class System.Type&amp; listTypeArgument, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter.TryGetListTypeArgument(System.Collections.IList,System.Type@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryGetListTypeArgument (list As IList, ByRef listTypeArgument As Type, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TryGetListTypeArgument(System::Collections::IList ^ list, [Runtime::InteropServices::Out] Type ^ % listTypeArgument, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryGetListTypeArgument : System.Collections.IList * Type * string -&gt; bool&#xA;override this.TryGetListTypeArgument : System.Collections.IList * Type * string -&gt; bool" Usage="listAdapter.TryGetListTypeArgument (list, listTypeArgument, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
        <Parameter Name="listTypeArgument" Type="System.Type" RefType="out" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="list">To be added.</param>
        <param name="listTypeArgument">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetPositionInfo">
      <MemberSignature Language="C#" Value="protected virtual bool TryGetPositionInfo (System.Collections.IList list, string segment, Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter.OperationType operationType, out Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter.PositionInfo positionInfo, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryGetPositionInfo(class System.Collections.IList list, string segment, valuetype Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter/OperationType operationType, [out] valuetype Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter/PositionInfo&amp; positionInfo, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter.TryGetPositionInfo(System.Collections.IList,System.String,Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter.OperationType,Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter.PositionInfo@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryGetPositionInfo (list As IList, segment As String, operationType As ListAdapter.OperationType, ByRef positionInfo As ListAdapter.PositionInfo, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TryGetPositionInfo(System::Collections::IList ^ list, System::String ^ segment, Microsoft::AspNetCore::JsonPatch::Internal::ListAdapter::OperationType operationType, [Runtime::InteropServices::Out] Microsoft::AspNetCore::JsonPatch::Internal::ListAdapter::PositionInfo % positionInfo, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryGetPositionInfo : System.Collections.IList * string * Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter.OperationType * PositionInfo * string -&gt; bool&#xA;override this.TryGetPositionInfo : System.Collections.IList * string * Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter.OperationType * PositionInfo * string -&gt; bool" Usage="listAdapter.TryGetPositionInfo (list, segment, operationType, positionInfo, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="operationType" Type="Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter+OperationType" />
        <Parameter Name="positionInfo" Type="Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter+PositionInfo" RefType="out" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="list">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="operationType">To be added.</param>
        <param name="positionInfo">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryRemove">
      <MemberSignature Language="C#" Value="public virtual bool TryRemove (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryRemove(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter.TryRemove(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryRemove (target As Object, segment As String, contractResolver As IContractResolver, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryRemove(System::Object ^ target, System::String ^ segment, Newtonsoft::Json::Serialization::IContractResolver ^ contractResolver, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryRemove : obj * string * Newtonsoft.Json.Serialization.IContractResolver * string -&gt; bool&#xA;override this.TryRemove : obj * string * Newtonsoft.Json.Serialization.IContractResolver * string -&gt; bool" Usage="listAdapter.TryRemove (target, segment, contractResolver, errorMessage)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryRemove(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReplace">
      <MemberSignature Language="C#" Value="public virtual bool TryReplace (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReplace(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter.TryReplace(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryReplace (target As Object, segment As String, contractResolver As IContractResolver, value As Object, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryReplace(System::Object ^ target, System::String ^ segment, Newtonsoft::Json::Serialization::IContractResolver ^ contractResolver, System::Object ^ value, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryReplace : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool&#xA;override this.TryReplace : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool" Usage="listAdapter.TryReplace (target, segment, contractResolver, value, errorMessage)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryReplace(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="value">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryTest">
      <MemberSignature Language="C#" Value="public virtual bool TryTest (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryTest(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter.TryTest(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryTest (target As Object, segment As String, contractResolver As IContractResolver, value As Object, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryTest(System::Object ^ target, System::String ^ segment, Newtonsoft::Json::Serialization::IContractResolver ^ contractResolver, System::Object ^ value, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryTest : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool&#xA;override this.TryTest : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool" Usage="listAdapter.TryTest (target, segment, contractResolver, value, errorMessage)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryTest(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="value">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryTraverse">
      <MemberSignature Language="C#" Value="public virtual bool TryTraverse (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, out object value, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryTraverse(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, [out] object&amp; value, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.ListAdapter.TryTraverse(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryTraverse (target As Object, segment As String, contractResolver As IContractResolver, ByRef value As Object, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryTraverse(System::Object ^ target, System::String ^ segment, Newtonsoft::Json::Serialization::IContractResolver ^ contractResolver, [Runtime::InteropServices::Out] System::Object ^ % value, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryTraverse : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool&#xA;override this.TryTraverse : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool" Usage="listAdapter.TryTraverse (target, segment, contractResolver, value, errorMessage)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryTraverse(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="value">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

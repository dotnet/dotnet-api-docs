<Type Name="PocoAdapter" FullName="Microsoft.AspNetCore.JsonPatch.Internal.PocoAdapter">
  <TypeSignature Language="C#" Value="public class PocoAdapter : Microsoft.AspNetCore.JsonPatch.Internal.IAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PocoAdapter extends System.Object implements class Microsoft.AspNetCore.JsonPatch.Internal.IAdapter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.JsonPatch.Internal.PocoAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Class PocoAdapter&#xA;Implements IAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PocoAdapter : Microsoft::AspNetCore::JsonPatch::Internal::IAdapter" />
  <TypeSignature Language="F#" Value="type PocoAdapter = class&#xA;    interface IAdapter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.JsonPatch.Internal.IAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PocoAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.PocoAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PocoAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public virtual bool TryAdd (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryAdd(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.PocoAdapter.TryAdd(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryAdd (target As Object, segment As String, contractResolver As IContractResolver, value As Object, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryAdd(System::Object ^ target, System::String ^ segment, Newtonsoft::Json::Serialization::IContractResolver ^ contractResolver, System::Object ^ value, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryAdd : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool&#xA;override this.TryAdd : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool" Usage="pocoAdapter.TryAdd (target, segment, contractResolver, value, errorMessage)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryAdd(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="value">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertValue">
      <MemberSignature Language="C#" Value="protected virtual bool TryConvertValue (object value, Type propertyType, out object convertedValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryConvertValue(object value, class System.Type propertyType, [out] object&amp; convertedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.PocoAdapter.TryConvertValue(System.Object,System.Type,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryConvertValue (value As Object, propertyType As Type, ByRef convertedValue As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TryConvertValue(System::Object ^ value, Type ^ propertyType, [Runtime::InteropServices::Out] System::Object ^ % convertedValue);" />
      <MemberSignature Language="F#" Value="abstract member TryConvertValue : obj * Type * obj -&gt; bool&#xA;override this.TryConvertValue : obj * Type * obj -&gt; bool" Usage="pocoAdapter.TryConvertValue (value, propertyType, convertedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="convertedValue" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="propertyType">To be added.</param>
        <param name="convertedValue">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGet">
      <MemberSignature Language="C#" Value="public virtual bool TryGet (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, out object value, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGet(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, [out] object&amp; value, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.PocoAdapter.TryGet(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryGet (target As Object, segment As String, contractResolver As IContractResolver, ByRef value As Object, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGet(System::Object ^ target, System::String ^ segment, Newtonsoft::Json::Serialization::IContractResolver ^ contractResolver, [Runtime::InteropServices::Out] System::Object ^ % value, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryGet : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool&#xA;override this.TryGet : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool" Usage="pocoAdapter.TryGet (target, segment, contractResolver, value, errorMessage)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryGet(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="value">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetJsonProperty">
      <MemberSignature Language="C#" Value="protected virtual bool TryGetJsonProperty (object target, Newtonsoft.Json.Serialization.IContractResolver contractResolver, string segment, out Newtonsoft.Json.Serialization.JsonProperty jsonProperty);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryGetJsonProperty(object target, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, string segment, [out] class Newtonsoft.Json.Serialization.JsonProperty&amp; jsonProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.PocoAdapter.TryGetJsonProperty(System.Object,Newtonsoft.Json.Serialization.IContractResolver,System.String,Newtonsoft.Json.Serialization.JsonProperty@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryGetJsonProperty (target As Object, contractResolver As IContractResolver, segment As String, ByRef jsonProperty As JsonProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TryGetJsonProperty(System::Object ^ target, Newtonsoft::Json::Serialization::IContractResolver ^ contractResolver, System::String ^ segment, [Runtime::InteropServices::Out] Newtonsoft::Json::Serialization::JsonProperty ^ % jsonProperty);" />
      <MemberSignature Language="F#" Value="abstract member TryGetJsonProperty : obj * Newtonsoft.Json.Serialization.IContractResolver * string * JsonProperty -&gt; bool&#xA;override this.TryGetJsonProperty : obj * Newtonsoft.Json.Serialization.IContractResolver * string * JsonProperty -&gt; bool" Usage="pocoAdapter.TryGetJsonProperty (target, contractResolver, segment, jsonProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="jsonProperty" Type="Newtonsoft.Json.Serialization.JsonProperty" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="jsonProperty">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryRemove">
      <MemberSignature Language="C#" Value="public virtual bool TryRemove (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryRemove(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.PocoAdapter.TryRemove(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryRemove (target As Object, segment As String, contractResolver As IContractResolver, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryRemove(System::Object ^ target, System::String ^ segment, Newtonsoft::Json::Serialization::IContractResolver ^ contractResolver, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryRemove : obj * string * Newtonsoft.Json.Serialization.IContractResolver * string -&gt; bool&#xA;override this.TryRemove : obj * string * Newtonsoft.Json.Serialization.IContractResolver * string -&gt; bool" Usage="pocoAdapter.TryRemove (target, segment, contractResolver, errorMessage)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryRemove(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReplace">
      <MemberSignature Language="C#" Value="public virtual bool TryReplace (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReplace(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.PocoAdapter.TryReplace(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryReplace (target As Object, segment As String, contractResolver As IContractResolver, value As Object, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryReplace(System::Object ^ target, System::String ^ segment, Newtonsoft::Json::Serialization::IContractResolver ^ contractResolver, System::Object ^ value, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryReplace : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool&#xA;override this.TryReplace : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool" Usage="pocoAdapter.TryReplace (target, segment, contractResolver, value, errorMessage)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryReplace(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="value">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryTest">
      <MemberSignature Language="C#" Value="public virtual bool TryTest (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryTest(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.PocoAdapter.TryTest(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryTest (target As Object, segment As String, contractResolver As IContractResolver, value As Object, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryTest(System::Object ^ target, System::String ^ segment, Newtonsoft::Json::Serialization::IContractResolver ^ contractResolver, System::Object ^ value, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryTest : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool&#xA;override this.TryTest : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool" Usage="pocoAdapter.TryTest (target, segment, contractResolver, value, errorMessage)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryTest(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="value">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryTraverse">
      <MemberSignature Language="C#" Value="public virtual bool TryTraverse (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, out object value, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryTraverse(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, [out] object&amp; value, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.PocoAdapter.TryTraverse(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryTraverse (target As Object, segment As String, contractResolver As IContractResolver, ByRef value As Object, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryTraverse(System::Object ^ target, System::String ^ segment, Newtonsoft::Json::Serialization::IContractResolver ^ contractResolver, [Runtime::InteropServices::Out] System::Object ^ % value, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryTraverse : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool&#xA;override this.TryTraverse : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool" Usage="pocoAdapter.TryTraverse (target, segment, contractResolver, value, errorMessage)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryTraverse(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="value">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

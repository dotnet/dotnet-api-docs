<Type Name="IAdapter" FullName="Microsoft.AspNetCore.JsonPatch.Internal.IAdapter">
  <TypeSignature Language="C#" Value="public interface IAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAdapter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAdapter" />
  <TypeSignature Language="F#" Value="type IAdapter = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryAdd(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryAdd(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (target As Object, segment As String, contractResolver As IContractResolver, value As Object, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(System::Object ^ target, System::String ^ segment, Newtonsoft::Json::Serialization::IContractResolver ^ contractResolver, System::Object ^ value, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryAdd : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool" Usage="iAdapter.TryAdd (target, segment, contractResolver, value, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="value">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGet">
      <MemberSignature Language="C#" Value="public bool TryGet (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, out object value, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGet(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, [out] object&amp; value, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryGet(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGet (target As Object, segment As String, contractResolver As IContractResolver, ByRef value As Object, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGet(System::Object ^ target, System::String ^ segment, Newtonsoft::Json::Serialization::IContractResolver ^ contractResolver, [Runtime::InteropServices::Out] System::Object ^ % value, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryGet : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool" Usage="iAdapter.TryGet (target, segment, contractResolver, value, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="value">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryRemove">
      <MemberSignature Language="C#" Value="public bool TryRemove (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryRemove(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryRemove(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryRemove (target As Object, segment As String, contractResolver As IContractResolver, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryRemove(System::Object ^ target, System::String ^ segment, Newtonsoft::Json::Serialization::IContractResolver ^ contractResolver, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryRemove : obj * string * Newtonsoft.Json.Serialization.IContractResolver * string -&gt; bool" Usage="iAdapter.TryRemove (target, segment, contractResolver, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReplace">
      <MemberSignature Language="C#" Value="public bool TryReplace (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReplace(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryReplace(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReplace (target As Object, segment As String, contractResolver As IContractResolver, value As Object, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryReplace(System::Object ^ target, System::String ^ segment, Newtonsoft::Json::Serialization::IContractResolver ^ contractResolver, System::Object ^ value, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryReplace : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool" Usage="iAdapter.TryReplace (target, segment, contractResolver, value, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="value">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryTest">
      <MemberSignature Language="C#" Value="public bool TryTest (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryTest(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryTest(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryTest (target As Object, segment As String, contractResolver As IContractResolver, value As Object, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryTest(System::Object ^ target, System::String ^ segment, Newtonsoft::Json::Serialization::IContractResolver ^ contractResolver, System::Object ^ value, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryTest : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool" Usage="iAdapter.TryTest (target, segment, contractResolver, value, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="value">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryTraverse">
      <MemberSignature Language="C#" Value="public bool TryTraverse (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, out object nextTarget, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryTraverse(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, [out] object&amp; nextTarget, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryTraverse(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryTraverse (target As Object, segment As String, contractResolver As IContractResolver, ByRef nextTarget As Object, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryTraverse(System::Object ^ target, System::String ^ segment, Newtonsoft::Json::Serialization::IContractResolver ^ contractResolver, [Runtime::InteropServices::Out] System::Object ^ % nextTarget, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryTraverse : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj * string -&gt; bool" Usage="iAdapter.TryTraverse (target, segment, contractResolver, nextTarget, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="nextTarget" Type="System.Object" RefType="out" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="nextTarget">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="DirectoryInfoWrapper" FullName="Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper">
  <TypeSignature Language="C#" Value="public class DirectoryInfoWrapper : Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DirectoryInfoWrapper extends Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper" />
  <TypeSignature Language="VB.NET" Value="Public Class DirectoryInfoWrapper&#xA;Inherits DirectoryInfoBase" />
  <TypeSignature Language="F#" Value="type DirectoryInfoWrapper = class&#xA;    inherit DirectoryInfoBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryInfoWrapper : Microsoft::Extensions::FileSystemGlobbing::Abstractions::DirectoryInfoBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.FileSystemGlobbing</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wraps an instance of <see cref="T:System.IO.DirectoryInfo" /> and provides implementation of
            <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryInfoWrapper (System.IO.DirectoryInfo directoryInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.DirectoryInfo directoryInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.#ctor(System.IO.DirectoryInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (directoryInfo As DirectoryInfo)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper : System.IO.DirectoryInfo -&gt; Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper" Usage="new Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper directoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryInfoWrapper(System::IO::DirectoryInfo ^ directoryInfo);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileSystemGlobbing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="directoryInfo" Type="System.IO.DirectoryInfo" />
      </Parameters>
      <Docs>
        <param name="directoryInfo">The <see cref="T:System.IO.DirectoryInfo" />.</param>
        <summary>Initializes an instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase&gt; EnumerateFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase&gt; EnumerateFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.EnumerateFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Overrides Function EnumerateFileSystemInfos () As IEnumerable(Of FileSystemInfoBase)" />
      <MemberSignature Language="F#" Value="override this.EnumerateFileSystemInfos : unit -&gt; seq&lt;Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase&gt;" Usage="directoryInfoWrapper.EnumerateFileSystemInfos " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::FileSystemGlobbing::Abstractions::FileSystemInfoBase ^&gt; ^ EnumerateFileSystemInfos();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileSystemGlobbing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper+&lt;EnumerateFileSystemInfos&gt;d__4))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper+&lt;EnumerateFileSystemInfos&gt;d__4))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enumerates all files and directories in the directory.</summary>
        <returns>Collection of files and directories.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.FullName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileSystemGlobbing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the full path to the directory.</summary>
        <value>To be added.</value>
        <remarks>Equals the value of <see cref="P:System.IO.FileSystemInfo.FullName" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectory">
      <MemberSignature Language="C#" Value="public override Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase? GetDirectory (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase GetDirectory(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.GetDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDirectory (name As String) As DirectoryInfoBase" />
      <MemberSignature Language="F#" Value="override this.GetDirectory : string -&gt; Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase" Usage="directoryInfoWrapper.GetDirectory name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Microsoft::Extensions::FileSystemGlobbing::Abstractions::DirectoryInfoBase ^ GetDirectory(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileSystemGlobbing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The directory name.</param>
        <summary>Returns an instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase" /> that represents a subdirectory.</summary>
        <returns>The directory.</returns>
        <remarks>If <paramref name="name" /> equals '..', this returns the parent directory.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public override Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase GetFile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase GetFile(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFile (name As String) As FileInfoBase" />
      <MemberSignature Language="F#" Value="override this.GetFile : string -&gt; Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase" Usage="directoryInfoWrapper.GetFile name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Microsoft::Extensions::FileSystemGlobbing::Abstractions::FileInfoBase ^ GetFile(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileSystemGlobbing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>Returns an instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase" /> that represents a file in the directory.</summary>
        <returns>Instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase" /> even if file does not exist.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.Name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileSystemGlobbing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the file or directory.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ParentDirectory">
      <MemberSignature Language="C#" Value="public override Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase? ParentDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase ParentDirectory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.ParentDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ParentDirectory As DirectoryInfoBase" />
      <MemberSignature Language="F#" Value="member this.ParentDirectory : Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase" Usage="Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.ParentDirectory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::Extensions::FileSystemGlobbing::Abstractions::DirectoryInfoBase ^ ParentDirectory { Microsoft::Extensions::FileSystemGlobbing::Abstractions::DirectoryInfoBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileSystemGlobbing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the parent directory.</summary>
        <value>To be added.</value>
        <remarks>Equals the value of <see cref="P:System.IO.DirectoryInfo.Parent" />.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

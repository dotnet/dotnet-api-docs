<Type Name="NamespaceDeclaration" FullName="System.Xaml.NamespaceDeclaration">
  <TypeSignature Language="C#" Value="public class NamespaceDeclaration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NamespaceDeclaration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.NamespaceDeclaration" />
  <TypeSignature Language="VB.NET" Value="Public Class NamespaceDeclaration" />
  <TypeSignature Language="C++ CLI" Value="public ref class NamespaceDeclaration" />
  <TypeSignature Language="F#" Value="type NamespaceDeclaration = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Prefix={Prefix} Namespace={Namespace}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Declares the identifier and the prefix of a XAML namespace by storing these string values as separate properties.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.NamespaceDeclaration> represents XAML namespace information as part of a XAML node stream. The <xref:System.Xaml.NamespaceDeclaration> class is a node type that is not truly an object or member; instead, it is a discrete node type.  
  
 In the XAML node stream, a <xref:System.Xaml.NamespaceDeclaration> is encountered just prior to the object or member to which that XAML namespace applies.  
  
 By convention, the identifier of a XAML namespace resembles a Uniform Resource Identifier (URI). However, the <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> property of <xref:System.Xaml.NamespaceDeclaration> is of type <xref:System.String>. The APIs of .NET Framework XAML Services usually treat XAML namespace identifiers as strings. The relative versus absolute distinctions in the true <xref:System.Uri> type are irrelevant for identifying a XAML (or XML) namespace. The URI-as-namespace convention is also typical in XML.  
  
 Objects of this type are used as input for the <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A?displayProperty=nameWithType> method when writing XAML node stream information into an object graph. Objects of this type are used as input for the <xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A?displayProperty=nameWithType> method when writing XAML node stream information as XML for serialization.  
  
 A namespace declaration may have a <xref:System.String.Empty?displayProperty=nameWithType> value for the prefix. A <xref:System.String.Empty?displayProperty=nameWithType> prefix represents a declaration of the default XAML namespace.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
    <altmember cref="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
    <altmember cref="P:System.Xaml.XamlXmlReader.Namespace" />
    <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3">Understanding XAML Node Stream Structures and Concepts</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamespaceDeclaration (string ns, string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string ns, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.NamespaceDeclaration.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ns As String, prefix As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamespaceDeclaration(System::String ^ ns, System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="new System.Xaml.NamespaceDeclaration : string * string -&gt; System.Xaml.NamespaceDeclaration" Usage="new System.Xaml.NamespaceDeclaration (ns, prefix)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">The XAML namespace identifier, as a string.</param>
        <param name="prefix">The string prefix that is used for the namespace in prefix mappings.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Xaml.NamespaceDeclaration" /> class using initial property values.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Initialization of <xref:System.Xaml.NamespaceDeclaration> does not attempt to validate values. To correctly use a XAML writer, do not use null values. A namespace declaration may have a <xref:System.String.Empty?displayProperty=nameWithType> value for the prefix. A <xref:System.String.Empty?displayProperty=nameWithType> prefix represents a declaration of the default XAML namespace.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.NamespaceDeclaration.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string" Usage="System.Xaml.NamespaceDeclaration.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the identifier component of a <see cref="T:System.Xaml.NamespaceDeclaration" />.</summary>
        <value>The identifier of the XAML namespace declaration.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 By convention, the identifier for a XAML namespace resembles a Uniform Resource Identifier (URI). The APIs of .NET Framework XAML Services usually treat XAML namespace identifiers as strings. The relative versus absolute distinctions in the true <xref:System.Uri> type are irrelevant for identifying a XAML (or XML) namespace. The URI-as-namespace convention is also typical in XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.NamespaceDeclaration.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Xaml.NamespaceDeclaration.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the prefix that is used as the XAML namespace mapping prefix for a <see cref="T:System.Xaml.NamespaceDeclaration" />.</summary>
        <value>The prefix string for this <see cref="T:System.Xaml.NamespaceDeclaration" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A namespace declaration may have a <xref:System.String.Empty?displayProperty=nameWithType> value for the prefix. A <xref:System.String.Empty?displayProperty=nameWithType> prefix represents a declaration of the default XAML namespace.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

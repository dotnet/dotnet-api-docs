<Type Name="TransportDuplexSessionChannel" FullName="System.ServiceModel.Channels.TransportDuplexSessionChannel">
  <TypeSignature Language="C#" Value="public abstract class TransportDuplexSessionChannel : System.ServiceModel.Channels.TransportOutputChannel, System.ServiceModel.Channels.ISessionChannel&lt;System.ServiceModel.Channels.IAsyncDuplexSession&gt;, System.ServiceModel.Channels.ISessionChannel&lt;System.ServiceModel.Channels.IDuplexSession&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TransportDuplexSessionChannel extends System.ServiceModel.Channels.TransportOutputChannel implements class System.ServiceModel.Channels.IAsyncInputChannel, class System.ServiceModel.Channels.IAsyncOutputChannel, class System.ServiceModel.Channels.IChannel, class System.ServiceModel.Channels.IDuplexChannel, class System.ServiceModel.Channels.IDuplexSessionChannel, class System.ServiceModel.Channels.IInputChannel, class System.ServiceModel.Channels.IOutputChannel, class System.ServiceModel.Channels.ISessionChannel`1&lt;class System.ServiceModel.Channels.IAsyncDuplexSession&gt;, class System.ServiceModel.Channels.ISessionChannel`1&lt;class System.ServiceModel.Channels.IDuplexSession&gt;, class System.ServiceModel.IAsyncCommunicationObject, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.TransportDuplexSessionChannel" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TransportDuplexSessionChannel&#xA;Inherits TransportOutputChannel&#xA;Implements ISessionChannel(Of IAsyncDuplexSession), ISessionChannel(Of IDuplexSession)" />
  <TypeSignature Language="F#" Value="type TransportDuplexSessionChannel = class&#xA;    inherit TransportOutputChannel&#xA;    interface IDuplexSessionChannel&#xA;    interface IDuplexChannel&#xA;    interface IInputChannel&#xA;    interface IChannel&#xA;    interface ICommunicationObject&#xA;    interface IOutputChannel&#xA;    interface ISessionChannel&lt;IDuplexSession&gt;&#xA;    interface IAsyncInputChannel&#xA;    interface IAsyncCommunicationObject&#xA;    interface IAsyncOutputChannel&#xA;    interface ISessionChannel&lt;IAsyncDuplexSession&gt;" />
  <TypeSignature Language="C++ CLI" Value="public ref class TransportDuplexSessionChannel abstract : System::ServiceModel::Channels::TransportOutputChannel, System::ServiceModel::Channels::ISessionChannel&lt;System::ServiceModel::Channels::IAsyncDuplexSession ^&gt;, System::ServiceModel::Channels::ISessionChannel&lt;System::ServiceModel::Channels::IDuplexSession ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Private.ServiceModel</AssemblyName>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.TransportOutputChannel</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IAsyncInputChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IAsyncOutputChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IDuplexChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IDuplexSessionChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IInputChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IOutputChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.ISessionChannel&lt;System.ServiceModel.Channels.IAsyncDuplexSession&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.ISessionChannel&lt;System.ServiceModel.Channels.IDuplexSession&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.IAsyncCommunicationObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TransportDuplexSessionChannel (System.ServiceModel.Channels.ChannelManagerBase manager, System.ServiceModel.Channels.ITransportFactorySettings settings, System.ServiceModel.EndpointAddress localAddress, Uri localVia, System.ServiceModel.EndpointAddress remoteAddress, Uri via);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.ChannelManagerBase manager, class System.ServiceModel.Channels.ITransportFactorySettings settings, class System.ServiceModel.EndpointAddress localAddress, class System.Uri localVia, class System.ServiceModel.EndpointAddress remoteAddress, class System.Uri via) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.#ctor(System.ServiceModel.Channels.ChannelManagerBase,System.ServiceModel.Channels.ITransportFactorySettings,System.ServiceModel.EndpointAddress,System.Uri,System.ServiceModel.EndpointAddress,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (manager As ChannelManagerBase, settings As ITransportFactorySettings, localAddress As EndpointAddress, localVia As Uri, remoteAddress As EndpointAddress, via As Uri)" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.TransportDuplexSessionChannel : System.ServiceModel.Channels.ChannelManagerBase * System.ServiceModel.Channels.ITransportFactorySettings * System.ServiceModel.EndpointAddress * Uri * System.ServiceModel.EndpointAddress * Uri -&gt; System.ServiceModel.Channels.TransportDuplexSessionChannel" Usage="new System.ServiceModel.Channels.TransportDuplexSessionChannel (manager, settings, localAddress, localVia, remoteAddress, via)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TransportDuplexSessionChannel(System::ServiceModel::Channels::ChannelManagerBase ^ manager, System::ServiceModel::Channels::ITransportFactorySettings ^ settings, System::ServiceModel::EndpointAddress ^ localAddress, Uri ^ localVia, System::ServiceModel::EndpointAddress ^ remoteAddress, Uri ^ via);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="manager" Type="System.ServiceModel.Channels.ChannelManagerBase" />
        <Parameter Name="settings" Type="System.ServiceModel.Channels.ITransportFactorySettings" />
        <Parameter Name="localAddress" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="localVia" Type="System.Uri" />
        <Parameter Name="remoteAddress" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="via" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="manager">To be added.</param>
        <param name="settings">To be added.</param>
        <param name="localAddress">To be added.</param>
        <param name="localVia">To be added.</param>
        <param name="remoteAddress">To be added.</param>
        <param name="via">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyChannelBinding">
      <MemberSignature Language="C#" Value="protected void ApplyChannelBinding (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ApplyChannelBinding(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.ApplyChannelBinding(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ApplyChannelBinding (message As Message)" />
      <MemberSignature Language="F#" Value="member this.ApplyChannelBinding : System.ServiceModel.Channels.Message -&gt; unit" Usage="transportDuplexSessionChannel.ApplyChannelBinding message" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ApplyChannelBinding(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCloseOutput">
      <MemberSignature Language="C#" Value="protected abstract System.Runtime.AsyncCompletionResult BeginCloseOutput (TimeSpan timeout, Action&lt;object&gt; callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Runtime.AsyncCompletionResult BeginCloseOutput(valuetype System.TimeSpan timeout, class System.Action`1&lt;object&gt; callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.BeginCloseOutput(System.TimeSpan,System.Action{System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function BeginCloseOutput (timeout As TimeSpan, callback As Action(Of Object), state As Object) As AsyncCompletionResult" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutput : TimeSpan * Action&lt;obj&gt; * obj -&gt; System.Runtime.AsyncCompletionResult" Usage="transportDuplexSessionChannel.BeginCloseOutput (timeout, callback, state)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Runtime::AsyncCompletionResult BeginCloseOutput(TimeSpan timeout, Action&lt;System::Object ^&gt; ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.AsyncCompletionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.Action&lt;System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReceive(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.BeginReceive(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginReceive : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginReceive : AsyncCallback * obj -&gt; IAsyncResult" Usage="transportDuplexSessionChannel.BeginReceive (callback, state)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginReceive(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReceive(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginReceive : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginReceive : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="transportDuplexSessionChannel.BeginReceive (timeout, callback, state)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginReceive(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTryReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTryReceive (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTryReceive(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTryReceive (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginTryReceive : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTryReceive : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="transportDuplexSessionChannel.BeginTryReceive (timeout, callback, state)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginTryReceive(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForMessage">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForMessage (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWaitForMessage(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForMessage (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginWaitForMessage : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginWaitForMessage : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="transportDuplexSessionChannel.BeginWaitForMessage (timeout, callback, state)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWaitForMessage(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferManager">
      <MemberSignature Language="C#" Value="protected System.ServiceModel.Channels.BufferManager BufferManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.BufferManager BufferManager" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TransportDuplexSessionChannel.BufferManager" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property BufferManager As BufferManager" />
      <MemberSignature Language="F#" Value="member this.BufferManager : System.ServiceModel.Channels.BufferManager" Usage="System.ServiceModel.Channels.TransportDuplexSessionChannel.BufferManager" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ServiceModel::Channels::BufferManager ^ BufferManager { System::ServiceModel::Channels::BufferManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BufferManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="protected void CloseOutputSession (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CloseOutputSession(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.CloseOutputSession(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CloseOutputSession (timeout As TimeSpan)" />
      <MemberSignature Language="F#" Value="member this.CloseOutputSession : TimeSpan -&gt; unit" Usage="transportDuplexSessionChannel.CloseOutputSession timeout" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CloseOutputSession(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputSessionAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task CloseOutputSessionAsync (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task CloseOutputSessionAsync(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.CloseOutputSessionAsync(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CloseOutputSessionAsync (timeout As TimeSpan) As Task" />
      <MemberSignature Language="F#" Value="member this.CloseOutputSessionAsync : TimeSpan -&gt; System.Threading.Tasks.Task" Usage="transportDuplexSessionChannel.CloseOutputSessionAsync timeout" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Threading::Tasks::Task ^ CloseOutputSessionAsync(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputSessionCore">
      <MemberSignature Language="C#" Value="protected abstract void CloseOutputSessionCore (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CloseOutputSessionCore(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.CloseOutputSessionCore(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub CloseOutputSessionCore (timeout As TimeSpan)" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSessionCore : TimeSpan -&gt; unit" Usage="transportDuplexSessionChannel.CloseOutputSessionCore timeout" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void CloseOutputSessionCore(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputSessionCoreAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.Task CloseOutputSessionCoreAsync (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task CloseOutputSessionCoreAsync(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.CloseOutputSessionCoreAsync(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CloseOutputSessionCoreAsync (timeout As TimeSpan) As Task" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSessionCoreAsync : TimeSpan -&gt; System.Threading.Tasks.Task" Usage="transportDuplexSessionChannel.CloseOutputSessionCoreAsync timeout" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Threading::Tasks::Task ^ CloseOutputSessionCoreAsync(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteClose">
      <MemberSignature Language="C#" Value="protected abstract void CompleteClose (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CompleteClose(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.CompleteClose(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub CompleteClose (timeout As TimeSpan)" />
      <MemberSignature Language="F#" Value="abstract member CompleteClose : TimeSpan -&gt; unit" Usage="transportDuplexSessionChannel.CompleteClose timeout" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void CompleteClose(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeMessage">
      <MemberSignature Language="C#" Value="protected abstract ArraySegment&lt;byte&gt; EncodeMessage (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.ArraySegment`1&lt;unsigned int8&gt; EncodeMessage(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.EncodeMessage(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function EncodeMessage (message As Message) As ArraySegment(Of Byte)" />
      <MemberSignature Language="F#" Value="abstract member EncodeMessage : System.ServiceModel.Channels.Message -&gt; ArraySegment&lt;byte&gt;" Usage="transportDuplexSessionChannel.EncodeMessage message" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract ArraySegment&lt;System::Byte&gt; EncodeMessage(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ArraySegment&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndReceive (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndReceive(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.EndReceive(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (result As IAsyncResult) As Message" />
      <MemberSignature Language="F#" Value="abstract member EndReceive : IAsyncResult -&gt; System.ServiceModel.Channels.Message&#xA;override this.EndReceive : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="transportDuplexSessionChannel.EndReceive result" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ EndReceive(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTryReceive">
      <MemberSignature Language="C#" Value="public bool EndTryReceive (IAsyncResult result, out System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndTryReceive(class System.IAsyncResult result, [out] class System.ServiceModel.Channels.Message&amp; message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTryReceive (result As IAsyncResult, ByRef message As Message) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member EndTryReceive : IAsyncResult * Message -&gt; bool&#xA;override this.EndTryReceive : IAsyncResult * Message -&gt; bool" Usage="transportDuplexSessionChannel.EndTryReceive (result, message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EndTryReceive(IAsyncResult ^ result, [Runtime::InteropServices::Out] System::ServiceModel::Channels::Message ^ % message);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <param name="message">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForMessage">
      <MemberSignature Language="C#" Value="public bool EndWaitForMessage (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndWaitForMessage(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.EndWaitForMessage(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForMessage (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member EndWaitForMessage : IAsyncResult -&gt; bool&#xA;override this.EndWaitForMessage : IAsyncResult -&gt; bool" Usage="transportDuplexSessionChannel.EndWaitForMessage result" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EndWaitForMessage(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishWritingMessage">
      <MemberSignature Language="C#" Value="protected virtual void FinishWritingMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FinishWritingMessage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.FinishWritingMessage" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub FinishWritingMessage ()" />
      <MemberSignature Language="F#" Value="abstract member FinishWritingMessage : unit -&gt; unit&#xA;override this.FinishWritingMessage : unit -&gt; unit" Usage="transportDuplexSessionChannel.FinishWritingMessage " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void FinishWritingMessage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStreamedOutput">
      <MemberSignature Language="C#" Value="protected abstract bool IsStreamedOutput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStreamedOutput" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TransportDuplexSessionChannel.IsStreamedOutput" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property IsStreamedOutput As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsStreamedOutput : bool" Usage="System.ServiceModel.Channels.TransportDuplexSessionChannel.IsStreamedOutput" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property bool IsStreamedOutput { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress LocalAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress LocalAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TransportDuplexSessionChannel.LocalAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalAddress As EndpointAddress" />
      <MemberSignature Language="F#" Value="member this.LocalAddress : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Channels.TransportDuplexSessionChannel.LocalAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ LocalAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IInputChannel.LocalAddress</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageEncoder">
      <MemberSignature Language="C#" Value="protected System.ServiceModel.Channels.MessageEncoder MessageEncoder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageEncoder MessageEncoder" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TransportDuplexSessionChannel.MessageEncoder" />
      <MemberSignature Language="VB.NET" Value="Protected Property MessageEncoder As MessageEncoder" />
      <MemberSignature Language="F#" Value="member this.MessageEncoder : System.ServiceModel.Channels.MessageEncoder with get, set" Usage="System.ServiceModel.Channels.TransportDuplexSessionChannel.MessageEncoder" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ServiceModel::Channels::MessageEncoder ^ MessageEncoder { System::ServiceModel::Channels::MessageEncoder ^ get(); void set(System::ServiceModel::Channels::MessageEncoder ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAbort">
      <MemberSignature Language="C#" Value="protected override void OnAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.OnAbort" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAbort ()" />
      <MemberSignature Language="F#" Value="override this.OnAbort : unit -&gt; unit" Usage="transportDuplexSessionChannel.OnAbort " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAbort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginClose">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="F#" Value="override this.OnBeginClose : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="transportDuplexSessionChannel.OnBeginClose (timeout, callback, state)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClose">
      <MemberSignature Language="C#" Value="protected override void OnClose (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClose(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.OnClose(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClose (timeout As TimeSpan)" />
      <MemberSignature Language="F#" Value="override this.OnClose : TimeSpan -&gt; unit" Usage="transportDuplexSessionChannel.OnClose timeout" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClose(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCloseAsync">
      <MemberSignature Language="C#" Value="protected internal override System.Threading.Tasks.Task OnCloseAsync (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Threading.Tasks.Task OnCloseAsync(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.OnCloseAsync(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnCloseAsync (timeout As TimeSpan) As Task" />
      <MemberSignature Language="F#" Value="override this.OnCloseAsync : TimeSpan -&gt; System.Threading.Tasks.Task" Usage="transportDuplexSessionChannel.OnCloseAsync timeout" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Threading::Tasks::Task ^ OnCloseAsync(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.OnClosed" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosed ()" />
      <MemberSignature Language="F#" Value="override this.OnClosed : unit -&gt; unit" Usage="transportDuplexSessionChannel.OnClosed " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndClose">
      <MemberSignature Language="C#" Value="protected override void OnEndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.OnEndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndClose (result As IAsyncResult)" />
      <MemberSignature Language="F#" Value="override this.OnEndClose : IAsyncResult -&gt; unit" Usage="transportDuplexSessionChannel.OnEndClose result" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndClose(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFaulted">
      <MemberSignature Language="C#" Value="protected override void OnFaulted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFaulted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.OnFaulted" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFaulted ()" />
      <MemberSignature Language="F#" Value="override this.OnFaulted : unit -&gt; unit" Usage="transportDuplexSessionChannel.OnFaulted " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFaulted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReceiveMessage">
      <MemberSignature Language="C#" Value="protected virtual void OnReceiveMessage (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReceiveMessage(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.OnReceiveMessage(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReceiveMessage (message As Message)" />
      <MemberSignature Language="F#" Value="abstract member OnReceiveMessage : System.ServiceModel.Channels.Message -&gt; unit&#xA;override this.OnReceiveMessage : System.ServiceModel.Channels.Message -&gt; unit" Usage="transportDuplexSessionChannel.OnReceiveMessage message" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReceiveMessage(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSend">
      <MemberSignature Language="C#" Value="protected override void OnSend (System.ServiceModel.Channels.Message message, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSend(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.OnSend(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSend (message As Message, timeout As TimeSpan)" />
      <MemberSignature Language="F#" Value="override this.OnSend : System.ServiceModel.Channels.Message * TimeSpan -&gt; unit" Usage="transportDuplexSessionChannel.OnSend (message, timeout)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSend(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSendAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task OnSendAsync (System.ServiceModel.Channels.Message message, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task OnSendAsync(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.OnSendAsync(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnSendAsync (message As Message, timeout As TimeSpan) As Task" />
      <MemberSignature Language="F#" Value="override this.OnSendAsync : System.ServiceModel.Channels.Message * TimeSpan -&gt; System.Threading.Tasks.Task" Usage="transportDuplexSessionChannel.OnSendAsync (message, timeout)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task ^ OnSendAsync(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSendCore">
      <MemberSignature Language="C#" Value="protected abstract void OnSendCore (System.ServiceModel.Channels.Message message, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSendCore(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.OnSendCore(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnSendCore (message As Message, timeout As TimeSpan)" />
      <MemberSignature Language="F#" Value="abstract member OnSendCore : System.ServiceModel.Channels.Message * TimeSpan -&gt; unit" Usage="transportDuplexSessionChannel.OnSendCore (message, timeout)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnSendCore(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareMessage">
      <MemberSignature Language="C#" Value="protected virtual void PrepareMessage (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PrepareMessage(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.PrepareMessage(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PrepareMessage (message As Message)" />
      <MemberSignature Language="F#" Value="abstract member PrepareMessage : System.ServiceModel.Channels.Message -&gt; unit&#xA;override this.PrepareMessage : System.ServiceModel.Channels.Message -&gt; unit" Usage="transportDuplexSessionChannel.PrepareMessage message" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PrepareMessage(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Receive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Receive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.Receive" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive () As Message" />
      <MemberSignature Language="F#" Value="abstract member Receive : unit -&gt; System.ServiceModel.Channels.Message&#xA;override this.Receive : unit -&gt; System.ServiceModel.Channels.Message" Usage="transportDuplexSessionChannel.Receive " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ Receive();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IInputChannel.Receive</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Receive (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Receive(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.Receive(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (timeout As TimeSpan) As Message" />
      <MemberSignature Language="F#" Value="abstract member Receive : TimeSpan -&gt; System.ServiceModel.Channels.Message&#xA;override this.Receive : TimeSpan -&gt; System.ServiceModel.Channels.Message" Usage="transportDuplexSessionChannel.Receive timeout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ Receive(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.ServiceModel.Channels.Message&gt; ReceiveAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.ServiceModel.Channels.Message&gt; ReceiveAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.ReceiveAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveAsync () As Task(Of Message)" />
      <MemberSignature Language="F#" Value="abstract member ReceiveAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.ServiceModel.Channels.Message&gt;&#xA;override this.ReceiveAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.ServiceModel.Channels.Message&gt;" Usage="transportDuplexSessionChannel.ReceiveAsync " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::ServiceModel::Channels::Message ^&gt; ^ ReceiveAsync();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IAsyncInputChannel.ReceiveAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.ServiceModel.Channels.Message&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.ServiceModel.Channels.Message&gt; ReceiveAsync (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.ServiceModel.Channels.Message&gt; ReceiveAsync(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.ReceiveAsync(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveAsync (timeout As TimeSpan) As Task(Of Message)" />
      <MemberSignature Language="F#" Value="abstract member ReceiveAsync : TimeSpan -&gt; System.Threading.Tasks.Task&lt;System.ServiceModel.Channels.Message&gt;&#xA;override this.ReceiveAsync : TimeSpan -&gt; System.Threading.Tasks.Task&lt;System.ServiceModel.Channels.Message&gt;" Usage="transportDuplexSessionChannel.ReceiveAsync timeout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::ServiceModel::Channels::Message ^&gt; ^ ReceiveAsync(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IAsyncInputChannel.ReceiveAsync(System.TimeSpan)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.ServiceModel.Channels.Message&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteSecurity">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.SecurityMessageProperty RemoteSecurity { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.SecurityMessageProperty RemoteSecurity" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TransportDuplexSessionChannel.RemoteSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property RemoteSecurity As SecurityMessageProperty" />
      <MemberSignature Language="F#" Value="member this.RemoteSecurity : System.ServiceModel.Security.SecurityMessageProperty with get, set" Usage="System.ServiceModel.Channels.TransportDuplexSessionChannel.RemoteSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::ServiceModel::Security::SecurityMessageProperty ^ RemoteSecurity {  public:&#xA;System::ServiceModel::Security::SecurityMessageProperty ^ get(); protected:&#xA; void set(System::ServiceModel::Security::SecurityMessageProperty ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityMessageProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnConnectionIfNecessary">
      <MemberSignature Language="C#" Value="protected abstract void ReturnConnectionIfNecessary (bool abort, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReturnConnectionIfNecessary(bool abort, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.ReturnConnectionIfNecessary(System.Boolean,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub ReturnConnectionIfNecessary (abort As Boolean, timeout As TimeSpan)" />
      <MemberSignature Language="F#" Value="abstract member ReturnConnectionIfNecessary : bool * TimeSpan -&gt; unit" Usage="transportDuplexSessionChannel.ReturnConnectionIfNecessary (abort, timeout)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void ReturnConnectionIfNecessary(bool abort, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="abort" Type="System.Boolean" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="abort">To be added.</param>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendLock">
      <MemberSignature Language="C#" Value="protected System.Threading.SemaphoreSlim SendLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.SemaphoreSlim SendLock" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TransportDuplexSessionChannel.SendLock" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SendLock As SemaphoreSlim" />
      <MemberSignature Language="F#" Value="member this.SendLock : System.Threading.SemaphoreSlim" Usage="System.ServiceModel.Channels.TransportDuplexSessionChannel.SendLock" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Threading::SemaphoreSlim ^ SendLock { System::Threading::SemaphoreSlim ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.SemaphoreSlim</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.IDuplexSession Session { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.IDuplexSession Session" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TransportDuplexSessionChannel.Session" />
      <MemberSignature Language="VB.NET" Value="Public Property Session As IDuplexSession" />
      <MemberSignature Language="F#" Value="member this.Session : System.ServiceModel.Channels.IDuplexSession with get, set" Usage="System.ServiceModel.Channels.TransportDuplexSessionChannel.Session" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::ServiceModel::Channels::IDuplexSession ^ Session {  public:&#xA;System::ServiceModel::Channels::IDuplexSession ^ get(); protected:&#xA; void set(System::ServiceModel::Channels::IDuplexSession ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IDuplexSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMessageSource">
      <MemberSignature Language="C#" Value="protected void SetMessageSource (System.ServiceModel.Channels.IMessageSource messageSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetMessageSource(class System.ServiceModel.Channels.IMessageSource messageSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.SetMessageSource(System.ServiceModel.Channels.IMessageSource)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetMessageSource (messageSource As IMessageSource)" />
      <MemberSignature Language="F#" Value="member this.SetMessageSource : System.ServiceModel.Channels.IMessageSource -&gt; unit" Usage="transportDuplexSessionChannel.SetMessageSource messageSource" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetMessageSource(System::ServiceModel::Channels::IMessageSource ^ messageSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageSource" Type="System.ServiceModel.Channels.IMessageSource" />
      </Parameters>
      <Docs>
        <param name="messageSource">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartWritingBufferedMessage">
      <MemberSignature Language="C#" Value="protected abstract System.Runtime.AsyncCompletionResult StartWritingBufferedMessage (System.ServiceModel.Channels.Message message, ArraySegment&lt;byte&gt; messageData, bool allowOutputBatching, TimeSpan timeout, Action&lt;object&gt; callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Runtime.AsyncCompletionResult StartWritingBufferedMessage(class System.ServiceModel.Channels.Message message, valuetype System.ArraySegment`1&lt;unsigned int8&gt; messageData, bool allowOutputBatching, valuetype System.TimeSpan timeout, class System.Action`1&lt;object&gt; callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.StartWritingBufferedMessage(System.ServiceModel.Channels.Message,System.ArraySegment{System.Byte},System.Boolean,System.TimeSpan,System.Action{System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function StartWritingBufferedMessage (message As Message, messageData As ArraySegment(Of Byte), allowOutputBatching As Boolean, timeout As TimeSpan, callback As Action(Of Object), state As Object) As AsyncCompletionResult" />
      <MemberSignature Language="F#" Value="abstract member StartWritingBufferedMessage : System.ServiceModel.Channels.Message * ArraySegment&lt;byte&gt; * bool * TimeSpan * Action&lt;obj&gt; * obj -&gt; System.Runtime.AsyncCompletionResult" Usage="transportDuplexSessionChannel.StartWritingBufferedMessage (message, messageData, allowOutputBatching, timeout, callback, state)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Runtime::AsyncCompletionResult StartWritingBufferedMessage(System::ServiceModel::Channels::Message ^ message, ArraySegment&lt;System::Byte&gt; messageData, bool allowOutputBatching, TimeSpan timeout, Action&lt;System::Object ^&gt; ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.AsyncCompletionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="messageData" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="allowOutputBatching" Type="System.Boolean" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.Action&lt;System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="messageData">To be added.</param>
        <param name="allowOutputBatching">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartWritingStreamedMessage">
      <MemberSignature Language="C#" Value="protected abstract System.Runtime.AsyncCompletionResult StartWritingStreamedMessage (System.ServiceModel.Channels.Message message, TimeSpan timeout, Action&lt;object&gt; callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Runtime.AsyncCompletionResult StartWritingStreamedMessage(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout, class System.Action`1&lt;object&gt; callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.StartWritingStreamedMessage(System.ServiceModel.Channels.Message,System.TimeSpan,System.Action{System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function StartWritingStreamedMessage (message As Message, timeout As TimeSpan, callback As Action(Of Object), state As Object) As AsyncCompletionResult" />
      <MemberSignature Language="F#" Value="abstract member StartWritingStreamedMessage : System.ServiceModel.Channels.Message * TimeSpan * Action&lt;obj&gt; * obj -&gt; System.Runtime.AsyncCompletionResult" Usage="transportDuplexSessionChannel.StartWritingStreamedMessage (message, timeout, callback, state)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Runtime::AsyncCompletionResult StartWritingStreamedMessage(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout, Action&lt;System::Object ^&gt; ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.AsyncCompletionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.Action&lt;System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.ISessionChannel&lt;System.ServiceModel.Channels.IAsyncDuplexSession&gt;.Session">
      <MemberSignature Language="C#" Value="System.ServiceModel.Channels.IAsyncDuplexSession System.ServiceModel.Channels.ISessionChannel&lt;System.ServiceModel.Channels.IAsyncDuplexSession&gt;.Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.IAsyncDuplexSession System.ServiceModel.Channels.ISessionChannel&lt;System.ServiceModel.Channels.IAsyncDuplexSession&gt;.Session" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TransportDuplexSessionChannel.System#ServiceModel#Channels#ISessionChannel&lt;System#ServiceModel#Channels#IAsyncDuplexSession&gt;#Session" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Session As IAsyncDuplexSession Implements ISessionChannel(Of IAsyncDuplexSession).Session" />
      <MemberSignature Language="F#" Value="member this.System.ServiceModel.Channels.ISessionChannel&lt;System.ServiceModel.Channels.IAsyncDuplexSession&gt;.Session : System.ServiceModel.Channels.IAsyncDuplexSession" Usage="System.ServiceModel.Channels.ISessionChannel&lt;System.ServiceModel.Channels.IAsyncDuplexSession&gt;.Session" />
      <MemberSignature Language="C++ CLI" Value="property System::ServiceModel::Channels::IAsyncDuplexSession ^ System::ServiceModel::Channels::ISessionChannel&lt;System::ServiceModel::Channels::IAsyncDuplexSession&gt;::Session { System::ServiceModel::Channels::IAsyncDuplexSession ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.ISessionChannel`1.Session</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IAsyncDuplexSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReceive">
      <MemberSignature Language="C#" Value="public bool TryReceive (TimeSpan timeout, out System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReceive(valuetype System.TimeSpan timeout, [out] class System.ServiceModel.Channels.Message&amp; message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReceive (timeout As TimeSpan, ByRef message As Message) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryReceive : TimeSpan * Message -&gt; bool&#xA;override this.TryReceive : TimeSpan * Message -&gt; bool" Usage="transportDuplexSessionChannel.TryReceive (timeout, message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryReceive(TimeSpan timeout, [Runtime::InteropServices::Out] System::ServiceModel::Channels::Message ^ % message);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <param name="message">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReceiveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;(bool, System.ServiceModel.Channels.Message)&gt; TryReceiveAsync (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype System.ValueTuple`2&lt;bool, class System.ServiceModel.Channels.Message&gt;&gt; TryReceiveAsync(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.TryReceiveAsync(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReceiveAsync (timeout As TimeSpan) As Task(Of ValueTuple(Of Boolean, Message))" />
      <MemberSignature Language="F#" Value="abstract member TryReceiveAsync : TimeSpan -&gt; System.Threading.Tasks.Task&lt;ValueTuple&lt;bool, System.ServiceModel.Channels.Message&gt;&gt;&#xA;override this.TryReceiveAsync : TimeSpan -&gt; System.Threading.Tasks.Task&lt;ValueTuple&lt;bool, System.ServiceModel.Channels.Message&gt;&gt;" Usage="transportDuplexSessionChannel.TryReceiveAsync timeout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;ValueTuple&lt;bool, System::ServiceModel::Channels::Message ^&gt;&gt; ^ TryReceiveAsync(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IAsyncInputChannel.TryReceiveAsync(System.TimeSpan)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.ValueTuple&lt;System.Boolean,System.ServiceModel.Channels.Message&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForMessage">
      <MemberSignature Language="C#" Value="public bool WaitForMessage (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitForMessage(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.WaitForMessage(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForMessage (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member WaitForMessage : TimeSpan -&gt; bool&#xA;override this.WaitForMessage : TimeSpan -&gt; bool" Usage="transportDuplexSessionChannel.WaitForMessage timeout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitForMessage(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForMessageAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; WaitForMessageAsync (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; WaitForMessageAsync(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportDuplexSessionChannel.WaitForMessageAsync(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForMessageAsync (timeout As TimeSpan) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member WaitForMessageAsync : TimeSpan -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.WaitForMessageAsync : TimeSpan -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="transportDuplexSessionChannel.WaitForMessageAsync timeout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ WaitForMessageAsync(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IAsyncInputChannel.WaitForMessageAsync(System.TimeSpan)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Private.ServiceModel</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

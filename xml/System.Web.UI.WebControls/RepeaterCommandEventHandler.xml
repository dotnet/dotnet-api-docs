<Type Name="RepeaterCommandEventHandler" FullName="System.Web.UI.WebControls.RepeaterCommandEventHandler">
  <TypeSignature Language="C#" Value="public delegate void RepeaterCommandEventHandler(object source, RepeaterCommandEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RepeaterCommandEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.RepeaterCommandEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RepeaterCommandEventHandler(source As Object, e As RepeaterCommandEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RepeaterCommandEventHandler(System::Object ^ source, RepeaterCommandEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type RepeaterCommandEventHandler = delegate of obj * RepeaterCommandEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="source" Type="System.Object" />
    <Parameter Name="e" Type="System.Web.UI.WebControls.RepeaterCommandEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="source">The source of the event.</param>
    <param name="e">A <see cref="T:System.Web.UI.WebControls.RepeaterCommandEventArgs" /> that contains the event data.</param>
    <summary>Represents the method that will handle the <see cref="E:System.Web.UI.WebControls.Repeater.ItemCommand" /> event of a <see cref="T:System.Web.UI.WebControls.Repeater" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you create a <xref:System.Web.UI.WebControls.RepeaterCommandEventHandler> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 The following example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.Repeater.ItemCommand> event of the <xref:System.Web.UI.WebControls.Repeater>. Information about the button is displayed when a <xref:System.Web.UI.WebControls.Button> control within the <xref:System.Web.UI.WebControls.Repeater> is clicked.  
  
 [!code-aspx-csharp[Classic RepeaterCommandEventHandler Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic RepeaterCommandEventHandler Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic RepeaterCommandEventHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic RepeaterCommandEventHandler Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Repeater" />
    <altmember cref="E:System.Web.UI.WebControls.Repeater.ItemCommand" />
    <altmember cref="T:System.Web.UI.WebControls.RepeaterCommandEventArgs" />
  </Docs>
</Type>

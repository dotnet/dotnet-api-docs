<Type Name="LoginCancelEventHandler" FullName="System.Web.UI.WebControls.LoginCancelEventHandler">
  <TypeSignature Language="C#" Value="public delegate void LoginCancelEventHandler(object sender, LoginCancelEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed LoginCancelEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LoginCancelEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub LoginCancelEventHandler(sender As Object, e As LoginCancelEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void LoginCancelEventHandler(System::Object ^ sender, LoginCancelEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type LoginCancelEventHandler = delegate of obj * LoginCancelEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Web.UI.WebControls.LoginCancelEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">The source of the event.</param>
    <param name="e">A <see cref="T:System.Web.UI.WebControls.LoginCancelEventArgs" /> object that contains the event data.</param>
    <summary>Represents the method that handles a cancelable event.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.WebControls.LoginCancelEventHandler> class represents the method that handles the cancelable events, such as the <xref:System.Web.UI.WebControls.Login.LoggingIn> event, or the <xref:System.Web.UI.WebControls.CreateUserWizard.CreatingUser> event.  
  
 When you create a <xref:System.Web.UI.WebControls.LoginCancelEventHandler> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.LoginCancelEventArgs" />
    <related type="Article" href="https://msdn.microsoft.com/library/f4ee4ece-c984-4bf7-bfde-f2365c06026d">Login Controls</related>
    <related type="Article" href="https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c">Securing Login Controls</related>
  </Docs>
</Type>

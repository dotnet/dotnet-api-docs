<Type Name="ServiceCredentialsSecurityTokenManager" FullName="System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager">
  <TypeSignature Language="C#" Value="public class ServiceCredentialsSecurityTokenManager : System.IdentityModel.Selectors.SecurityTokenManager, System.ServiceModel.Security.IEndpointIdentityProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceCredentialsSecurityTokenManager extends System.IdentityModel.Selectors.SecurityTokenManager implements class System.ServiceModel.Security.IEndpointIdentityProvider" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceCredentialsSecurityTokenManager&#xA;Inherits SecurityTokenManager&#xA;Implements IEndpointIdentityProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceCredentialsSecurityTokenManager : System::IdentityModel::Selectors::SecurityTokenManager, System::ServiceModel::Security::IEndpointIdentityProvider" />
  <TypeSignature Language="F#" Value="type ServiceCredentialsSecurityTokenManager = class&#xA;    inherit SecurityTokenManager&#xA;    interface IEndpointIdentityProvider" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenManager</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Security.IEndpointIdentityProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents a <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" /> implementation that provides security token serializers based on the <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> configured on the service.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This class creates instances of the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class. There is one instance of this class for each service channel listener.  
  
   
  
## Examples  
 The following code shows how to override this class to create a customized Service Credentials Token Manager.  
  
 [!code-csharp[c_CustomCredentials#5](~/samples/snippets/csharp/VS_Snippets_CFX/c_customcredentials/cs/source.cs#5)]
 [!code-vb[c_CustomCredentials#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customcredentials/vb/service/service.vb#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceCredentialsSecurityTokenManager (System.ServiceModel.Description.ServiceCredentials parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.ServiceCredentials parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As ServiceCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceCredentialsSecurityTokenManager(System::ServiceModel::Description::ServiceCredentials ^ parent);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager : System.ServiceModel.Description.ServiceCredentials -&gt; System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" Usage="new System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager parent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.ServiceModel.Description.ServiceCredentials" />
      </Parameters>
      <Docs>
        <param name="parent">The service credentials.</param>
        <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" /> class based on the <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> passed in.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecureConversationTokenAuthenticator">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecureConversationTokenAuthenticator (System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement recipientRequirement, bool preserveBootstrapTokens, out System.IdentityModel.Selectors.SecurityTokenResolver sctResolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecureConversationTokenAuthenticator(class System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement recipientRequirement, bool preserveBootstrapTokens, [out] class System.IdentityModel.Selectors.SecurityTokenResolver&amp; sctResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateSecureConversationTokenAuthenticator (recipientRequirement As RecipientServiceModelSecurityTokenRequirement, preserveBootstrapTokens As Boolean, ByRef sctResolver As SecurityTokenResolver) As SecurityTokenAuthenticator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IdentityModel::Selectors::SecurityTokenAuthenticator ^ CreateSecureConversationTokenAuthenticator(System::ServiceModel::Security::Tokens::RecipientServiceModelSecurityTokenRequirement ^ recipientRequirement, bool preserveBootstrapTokens, [Runtime::InteropServices::Out] System::IdentityModel::Selectors::SecurityTokenResolver ^ % sctResolver);" />
      <MemberSignature Language="F#" Value="member this.CreateSecureConversationTokenAuthenticator : System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement * bool *  -&gt; System.IdentityModel.Selectors.SecurityTokenAuthenticator" Usage="serviceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator (recipientRequirement, preserveBootstrapTokens, sctResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenAuthenticator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipientRequirement" Type="System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement" />
        <Parameter Name="preserveBootstrapTokens" Type="System.Boolean" />
        <Parameter Name="sctResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" RefType="out" />
      </Parameters>
      <Docs>
        <param name="recipientRequirement">Represents security property requirements specific to the listener.</param>
        <param name="preserveBootstrapTokens">
          <see langword="true" /> if the bootstrap tokens should be preserved; Otherwise <see langword="false" />.</param>
        <param name="sctResolver">A security token resolver object that can retrieve security tokens or keys when you have a key identifier or key identifier clause.</param>
        <summary>Creates a secure conversation token authenticator based on the property requirements passed in.</summary>
        <returns>A security token authenticator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenAuthenticator">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, out System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator(class System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, [out] class System.IdentityModel.Selectors.SecurityTokenResolver&amp; outOfBandTokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenAuthenticator (tokenRequirement As SecurityTokenRequirement, ByRef outOfBandTokenResolver As SecurityTokenResolver) As SecurityTokenAuthenticator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenAuthenticator ^ CreateSecurityTokenAuthenticator(System::IdentityModel::Selectors::SecurityTokenRequirement ^ tokenRequirement, [Runtime::InteropServices::Out] System::IdentityModel::Selectors::SecurityTokenResolver ^ % outOfBandTokenResolver);" />
      <MemberSignature Language="F#" Value="override this.CreateSecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenRequirement *  -&gt; System.IdentityModel.Selectors.SecurityTokenAuthenticator" Usage="serviceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator (tokenRequirement, outOfBandTokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenAuthenticator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenRequirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
        <Parameter Name="outOfBandTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" RefType="out" />
      </Parameters>
      <Docs>
        <param name="tokenRequirement">The security token requirement.</param>
        <param name="outOfBandTokenResolver">When this method returns, contains a <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />. This parameter is passed uninitialized.</param>
        <summary>Creates a security token authenticator based on the <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</summary>
        <returns>The security token authenticator.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 An `outOfBand` token resolver can optionally be returned by the method, which is used by the WCF security processor to resolve tokens that are not in the SOAP message when processing security. The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> that is returned by this method validates tokens and extracts claims. One <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> is created for each class derived from <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.  
  
   
  
## Examples  
 The following code is an example of how to override this method.  
  
 [!code-csharp[c_CustomTokenAuthenticator#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_customtokenauthenticator/cs/source.cs#2)]
 [!code-vb[c_CustomTokenAuthenticator#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customtokenauthenticator/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tokenRequirement" /> is <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">A security token authenticator cannot be created for the <paramref name="tokenRequirement" /> that was passed in.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenProvider">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider(class System.IdentityModel.Selectors.SecurityTokenRequirement requirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenProvider (requirement As SecurityTokenRequirement) As SecurityTokenProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenProvider ^ CreateSecurityTokenProvider(System::IdentityModel::Selectors::SecurityTokenRequirement ^ requirement);" />
      <MemberSignature Language="F#" Value="override this.CreateSecurityTokenProvider : System.IdentityModel.Selectors.SecurityTokenRequirement -&gt; System.IdentityModel.Selectors.SecurityTokenProvider" Usage="serviceCredentialsSecurityTokenManager.CreateSecurityTokenProvider requirement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="requirement">The security token requirement.</param>
        <summary>Creates a security token provider based on the <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</summary>
        <returns>The security token provider.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class is responsible for obtaining tokens for a given <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>. Optionally, token providers can support renewing and canceling tokens as well. The token provider can cache tokens if it is configured to do so.  
  
   
  
## Examples  
 The following code shows how to override this method.  
  
 [!code-csharp[ClientCredentialsSecurityTokenManager#4](~/samples/snippets/csharp/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/cs/source.cs#4)]
 [!code-vb[ClientCredentialsSecurityTokenManager#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/vb/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requirement" /> is <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">A security token provider cannot be created for the <paramref name="requirement" /> that was passed in.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenSerializer">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.IdentityModel.Selectors.SecurityTokenVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer(class System.IdentityModel.Selectors.SecurityTokenVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenSerializer (version As SecurityTokenVersion) As SecurityTokenSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenSerializer ^ CreateSecurityTokenSerializer(System::IdentityModel::Selectors::SecurityTokenVersion ^ version);" />
      <MemberSignature Language="F#" Value="override this.CreateSecurityTokenSerializer : System.IdentityModel.Selectors.SecurityTokenVersion -&gt; System.IdentityModel.Selectors.SecurityTokenSerializer" Usage="serviceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.IdentityModel.Selectors.SecurityTokenVersion" />
      </Parameters>
      <Docs>
        <param name="version">The version of the security token.</param>
        <summary>Creates a security token serializer based on the security token version passed in.</summary>
        <returns>The security token serializer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> is used for writing and reading security tokens and security token references. When deserializing the token from XML, the returned token must be able to perform cryptographic operations. The token serializer must be able to do enough validation to ensure that the token can do cryptographic operations (Kerberos ticket processing, X.509 decoding, SAML decoding, and so on) but should defer application trust decisions to the authenticator.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">A security token serializer cannot be created for the  <paramref name="version" /> that was passed in.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIdentityOfSelf">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.EndpointIdentity GetIdentityOfSelf (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.EndpointIdentity GetIdentityOfSelf(class System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdentityOfSelf (tokenRequirement As SecurityTokenRequirement) As EndpointIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::EndpointIdentity ^ GetIdentityOfSelf(System::IdentityModel::Selectors::SecurityTokenRequirement ^ tokenRequirement);" />
      <MemberSignature Language="F#" Value="abstract member GetIdentityOfSelf : System.IdentityModel.Selectors.SecurityTokenRequirement -&gt; System.ServiceModel.EndpointIdentity&#xA;override this.GetIdentityOfSelf : System.IdentityModel.Selectors.SecurityTokenRequirement -&gt; System.ServiceModel.EndpointIdentity" Usage="serviceCredentialsSecurityTokenManager.GetIdentityOfSelf tokenRequirement" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IEndpointIdentityProvider.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenRequirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="tokenRequirement">The security token requirement.</param>
        <summary>Gets the <see cref="T:System.ServiceModel.EndpointIdentity" /> based on the security token requirement.</summary>
        <returns>The endpoint identity that corresponds to the <paramref name="tokenRequirement" />. <see langword="null" /> is returned if an identity cannot be created from the <paramref name="tokenRequirement" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is called by the WCF infrastructure to obtain the <xref:System.ServiceModel.EndpointIdentity> that corresponds to a service endpoint.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tokenRequirement" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsIssuedSecurityTokenRequirement">
      <MemberSignature Language="C#" Value="protected bool IsIssuedSecurityTokenRequirement (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsIssuedSecurityTokenRequirement(class System.IdentityModel.Selectors.SecurityTokenRequirement requirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsIssuedSecurityTokenRequirement (requirement As SecurityTokenRequirement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsIssuedSecurityTokenRequirement(System::IdentityModel::Selectors::SecurityTokenRequirement ^ requirement);" />
      <MemberSignature Language="F#" Value="member this.IsIssuedSecurityTokenRequirement : System.IdentityModel.Selectors.SecurityTokenRequirement -&gt; bool" Usage="serviceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement requirement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="requirement">The security token requirement.</param>
        <summary>Determines whether the security token requirement is for an issued token.</summary>
        <returns>
          <see langword="true" /> if the security token requirement is for an issued token; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceCredentials">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceCredentials ServiceCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.ServiceCredentials ServiceCredentials" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceCredentials As ServiceCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::ServiceCredentials ^ ServiceCredentials { System::ServiceModel::Description::ServiceCredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceCredentials : System.ServiceModel.Description.ServiceCredentials" Usage="System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the service credentials used to construct this instance of this class.</summary>
        <value>The service credentials.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.ServiceModel.Description.ServiceCredentials> object enables you to configure service credentials as well as service credential authentication settings.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="RandomProbabilisticSamplerFilterRule" FullName="Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule">
  <TypeSignature Language="C#" Value="public class RandomProbabilisticSamplerFilterRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RandomProbabilisticSamplerFilterRule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule" />
  <TypeSignature Language="VB.NET" Value="Public Class RandomProbabilisticSamplerFilterRule" />
  <TypeSignature Language="F#" Value="type RandomProbabilisticSamplerFilterRule = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class RandomProbabilisticSamplerFilterRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
    <AssemblyVersion>9.5.0.0</AssemblyVersion>
    <AssemblyVersion>9.6.0.0</AssemblyVersion>
    <AssemblyVersion>9.7.0.0</AssemblyVersion>
    <AssemblyVersion>9.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Defines a rule used to filter log messages for purposes of sampling.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RandomProbabilisticSamplerFilterRule (double probability, string? categoryName = default, Microsoft.Extensions.Logging.LogLevel? logLevel = default, int? eventId = default, string? eventName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 probability, string categoryName, valuetype System.Nullable`1&lt;valuetype Microsoft.Extensions.Logging.LogLevel&gt; logLevel, valuetype System.Nullable`1&lt;int32&gt; eventId, string eventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule.#ctor(System.Double,System.String,System.Nullable{Microsoft.Extensions.Logging.LogLevel},System.Nullable{System.Int32},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (probability As Double, Optional categoryName As String = Nothing, Optional logLevel As Nullable(Of LogLevel) = Nothing, Optional eventId As Nullable(Of Integer) = Nothing, Optional eventName As String = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule : double * string * Nullable&lt;Microsoft.Extensions.Logging.LogLevel&gt; * Nullable&lt;int&gt; * string -&gt; Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule" Usage="new Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule (probability, categoryName, logLevel, eventId, eventName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="logLevel" Type="System.Nullable&lt;Microsoft.Extensions.Logging.LogLevel&gt;" />
        <Parameter Name="eventId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="eventName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="probability">The probability for sampling in if this rule applies.</param>
        <param name="categoryName">The category name to use in this filter rule.</param>
        <param name="logLevel">The <see cref="P:Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule.LogLevel" /> to use in this filter rule.</param>
        <param name="eventId">The event ID to use in this filter rule.</param>
        <param name="eventName">The event name to use in this filter rule.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public string? CategoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule.CategoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryName As String" />
      <MemberSignature Language="F#" Value="member this.CategoryName : string" Usage="Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule.CategoryName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="EventId">
      <MemberSignature Language="C#" Value="public int? EventId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; EventId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule.EventId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventId As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.EventId : Nullable&lt;int&gt;" Usage="Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule.EventId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; EventId { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="EventName">
      <MemberSignature Language="C#" Value="public string? EventName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule.EventName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventName As String" />
      <MemberSignature Language="F#" Value="member this.EventName : string" Usage="Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule.EventName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EventName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="LogLevel">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.LogLevel? LogLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Microsoft.Extensions.Logging.LogLevel&gt; LogLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule.LogLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogLevel As Nullable(Of LogLevel)" />
      <MemberSignature Language="F#" Value="member this.LogLevel : Nullable&lt;Microsoft.Extensions.Logging.LogLevel&gt;" Usage="Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule.LogLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;Microsoft::Extensions::Logging::LogLevel&gt; LogLevel { Nullable&lt;Microsoft::Extensions::Logging::LogLevel&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.Extensions.Logging.LogLevel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Probability">
      <MemberSignature Language="C#" Value="public double Probability { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Probability" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule.Probability" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Probability As Double" />
      <MemberSignature Language="F#" Value="member this.Probability : double" Usage="Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule.Probability" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Probability { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Range(0, 1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Range(0, 1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the probability for sampling in if this rule applies.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

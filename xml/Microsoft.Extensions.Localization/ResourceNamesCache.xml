<Type Name="ResourceNamesCache" FullName="Microsoft.Extensions.Localization.ResourceNamesCache">
  <TypeSignature Language="C#" Value="public class ResourceNamesCache : Microsoft.Extensions.Localization.IResourceNamesCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourceNamesCache extends System.Object implements class Microsoft.Extensions.Localization.IResourceNamesCache" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Localization.ResourceNamesCache" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceNamesCache&#xA;Implements IResourceNamesCache" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceNamesCache : Microsoft::Extensions::Localization::IResourceNamesCache" />
  <TypeSignature Language="F#" Value="type ResourceNamesCache = class&#xA;    interface IResourceNamesCache" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Localization</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Localization.IResourceNamesCache</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>An implementation of <see cref="T:Microsoft.Extensions.Localization.IResourceNamesCache" /> backed by a <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceNamesCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Localization.ResourceNamesCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceNamesCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Localization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new <see cref="T:Microsoft.Extensions.Localization.ResourceNamesCache" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAdd">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; GetOrAdd (string name, Func&lt;string,System.Collections.Generic.IList&lt;string&gt;&gt; valueFactory);" FrameworkAlternate="dotnet-plat-ext-1.0;dotnet-plat-ext-1.1;dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetOrAdd(string name, class System.Func`2&lt;string, class System.Collections.Generic.IList`1&lt;string&gt;&gt; valueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Localization.ResourceNamesCache.GetOrAdd(System.String,System.Func{System.String,System.Collections.Generic.IList{System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAdd (name As String, valueFactory As Func(Of String, IList(Of String))) As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetOrAdd(System::String ^ name, Func&lt;System::String ^, System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ valueFactory);" />
      <MemberSignature Language="F#" Value="abstract member GetOrAdd : string * Func&lt;string, System.Collections.Generic.IList&lt;string&gt;&gt; -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetOrAdd : string * Func&lt;string, System.Collections.Generic.IList&lt;string&gt;&gt; -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="resourceNamesCache.GetOrAdd (name, valueFactory)" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt;? GetOrAdd (string name, Func&lt;string,System.Collections.Generic.IList&lt;string&gt;?&gt; valueFactory);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Localization.IResourceNamesCache.GetOrAdd(System.String,System.Func{System.String,System.Collections.Generic.IList{System.String}})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Localization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="valueFactory" Type="System.Func&lt;System.String,System.Collections.Generic.IList&lt;System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The resource name to add string names for.</param>
        <param name="valueFactory">The function used to generate the string names for the resource.</param>
        <summary>Adds a set of resource names to the cache by using the specified function, if the name does not already exist.</summary>
        <returns>A list containing the string names for the resource.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>

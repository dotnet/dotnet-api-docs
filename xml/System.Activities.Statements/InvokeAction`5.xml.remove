<Type Name="InvokeAction&lt;T1,T2,T3,T4,T5&gt;" FullName="System.Activities.Statements.InvokeAction&lt;T1,T2,T3,T4,T5&gt;">
  <TypeSignature Language="C#" Value="public sealed class InvokeAction&lt;T1,T2,T3,T4,T5&gt; : System.Activities.NativeActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InvokeAction`5&lt;T1, T2, T3, T4, T5&gt; extends System.Activities.NativeActivity" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.InvokeAction`5" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InvokeAction(Of T1, T2, T3, T4, T5)&#xA;Inherits NativeActivity" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt;&#xA;public ref class InvokeAction sealed : System::Activities::NativeActivity" />
  <TypeSignature Language="F#" Value="type InvokeAction&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt; = class&#xA;    inherit NativeActivity" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
    <TypeParameter Name="T5" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Activities.NativeActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ContentProperty("Action")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T1">The data type of the first <see cref="T:System.Activities.InArgument`1" /> passed to the <see cref="T:System.Activities.ActivityAction`5" />.</typeparam>
    <typeparam name="T2">The data type of the second <see cref="T:System.Activities.InArgument`1" /> passed to the <see cref="T:System.Activities.ActivityAction`5" />.</typeparam>
    <typeparam name="T3">The data type of the third <see cref="T:System.Activities.InArgument`1" /> passed to the <see cref="T:System.Activities.ActivityAction`5" />.</typeparam>
    <typeparam name="T4">The data type of the fourth <see cref="T:System.Activities.InArgument`1" /> passed to the <see cref="T:System.Activities.ActivityAction`5" />.</typeparam>
    <typeparam name="T5">The data type of the fifth <see cref="T:System.Activities.InArgument`1" /> passed to the <see cref="T:System.Activities.ActivityAction`5" />.</typeparam>
    <summary>Invokes an activity's <see cref="T:System.Activities.ActivityAction`5" /> handler.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvokeAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.InvokeAction`5.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvokeAction();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Activities.Statements.InvokeAction`5" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5&gt; Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.ActivityAction`5&lt;!T1, !T2, !T3, !T4, !T5&gt; Action" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.InvokeAction`5.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As ActivityAction(Of T1, T2, T3, T4, T5)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::ActivityAction&lt;T1, T2, T3, T4, T5&gt; ^ Action { System::Activities::ActivityAction&lt;T1, T2, T3, T4, T5&gt; ^ get(); void set(System::Activities::ActivityAction&lt;T1, T2, T3, T4, T5&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt; with get, set" Usage="System.Activities.Statements.InvokeAction&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt;.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Activities.ActivityAction`5" /> invoked by this <see cref="T:System.Activities.Statements.InvokeAction`5" />.</summary>
        <value>The activity action invoked by this <see cref="T:System.Activities.Statements.InvokeAction`5" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Argument1">
      <MemberSignature Language="C#" Value="public System.Activities.InArgument&lt;T1&gt; Argument1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.InArgument`1&lt;!T1&gt; Argument1" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.InvokeAction`5.Argument1" />
      <MemberSignature Language="VB.NET" Value="Public Property Argument1 As InArgument(Of T1)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::InArgument&lt;T1&gt; ^ Argument1 { System::Activities::InArgument&lt;T1&gt; ^ get(); void set(System::Activities::InArgument&lt;T1&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Argument1 : System.Activities.InArgument&lt;'T1&gt; with get, set" Usage="System.Activities.Statements.InvokeAction&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt;.Argument1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Activities.RequiredArgument</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.InArgument&lt;T1&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the first <see cref="T:System.Activities.InArgument`1" /> passed to the associated <see cref="T:System.Activities.ActivityAction`5" />.</summary>
        <value>The first argument passed to the associated <see cref="T:System.Activities.ActivityAction`5" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Argument2">
      <MemberSignature Language="C#" Value="public System.Activities.InArgument&lt;T2&gt; Argument2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.InArgument`1&lt;!T2&gt; Argument2" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.InvokeAction`5.Argument2" />
      <MemberSignature Language="VB.NET" Value="Public Property Argument2 As InArgument(Of T2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::InArgument&lt;T2&gt; ^ Argument2 { System::Activities::InArgument&lt;T2&gt; ^ get(); void set(System::Activities::InArgument&lt;T2&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Argument2 : System.Activities.InArgument&lt;'T2&gt; with get, set" Usage="System.Activities.Statements.InvokeAction&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt;.Argument2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Activities.RequiredArgument</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.InArgument&lt;T2&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the second <see cref="T:System.Activities.InArgument`1" /> passed to the associated <see cref="T:System.Activities.ActivityAction`5" />.</summary>
        <value>The second argument passed to the associated <see cref="T:System.Activities.ActivityAction`5" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Argument3">
      <MemberSignature Language="C#" Value="public System.Activities.InArgument&lt;T3&gt; Argument3 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.InArgument`1&lt;!T3&gt; Argument3" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.InvokeAction`5.Argument3" />
      <MemberSignature Language="VB.NET" Value="Public Property Argument3 As InArgument(Of T3)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::InArgument&lt;T3&gt; ^ Argument3 { System::Activities::InArgument&lt;T3&gt; ^ get(); void set(System::Activities::InArgument&lt;T3&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Argument3 : System.Activities.InArgument&lt;'T3&gt; with get, set" Usage="System.Activities.Statements.InvokeAction&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt;.Argument3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Activities.RequiredArgument</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.InArgument&lt;T3&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the third <see cref="T:System.Activities.InArgument`1" /> passed to the associated <see cref="T:System.Activities.ActivityAction`5" />.</summary>
        <value>The third argument passed to the associated <see cref="T:System.Activities.ActivityAction`5" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Argument4">
      <MemberSignature Language="C#" Value="public System.Activities.InArgument&lt;T4&gt; Argument4 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.InArgument`1&lt;!T4&gt; Argument4" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.InvokeAction`5.Argument4" />
      <MemberSignature Language="VB.NET" Value="Public Property Argument4 As InArgument(Of T4)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::InArgument&lt;T4&gt; ^ Argument4 { System::Activities::InArgument&lt;T4&gt; ^ get(); void set(System::Activities::InArgument&lt;T4&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Argument4 : System.Activities.InArgument&lt;'T4&gt; with get, set" Usage="System.Activities.Statements.InvokeAction&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt;.Argument4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Activities.RequiredArgument</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.InArgument&lt;T4&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the fourth <see cref="T:System.Activities.InArgument`1" /> passed to the associated <see cref="T:System.Activities.ActivityAction`5" />.</summary>
        <value>The fourth argument passed to the associated <see cref="T:System.Activities.ActivityAction`5" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Argument5">
      <MemberSignature Language="C#" Value="public System.Activities.InArgument&lt;T5&gt; Argument5 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.InArgument`1&lt;!T5&gt; Argument5" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.InvokeAction`5.Argument5" />
      <MemberSignature Language="VB.NET" Value="Public Property Argument5 As InArgument(Of T5)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::InArgument&lt;T5&gt; ^ Argument5 { System::Activities::InArgument&lt;T5&gt; ^ get(); void set(System::Activities::InArgument&lt;T5&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Argument5 : System.Activities.InArgument&lt;'T5&gt; with get, set" Usage="System.Activities.Statements.InvokeAction&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt;.Argument5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Activities.RequiredArgument</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.InArgument&lt;T5&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the fifth <see cref="T:System.Activities.InArgument`1" /> passed to the associated <see cref="T:System.Activities.ActivityAction`5" />.</summary>
        <value>The fifth argument passed to the associated <see cref="T:System.Activities.ActivityAction`5" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override void Execute (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Execute(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.InvokeAction`5.Execute(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Execute (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Execute(System::Activities::NativeActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Activities.NativeActivityContext -&gt; unit" Usage="invokeAction.Execute context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateDynamicUpdateMap">
      <MemberSignature Language="C#" Value="protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCreateDynamicUpdateMap(class System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, class System.Activities.Activity originalActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.InvokeAction`5.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCreateDynamicUpdateMap (metadata As NativeActivityUpdateMapMetadata, originalActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCreateDynamicUpdateMap(System::Activities::DynamicUpdate::NativeActivityUpdateMapMetadata ^ metadata, System::Activities::Activity ^ originalActivity);" />
      <MemberSignature Language="F#" Value="override this.OnCreateDynamicUpdateMap : System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata * System.Activities.Activity -&gt; unit" Usage="invokeAction.OnCreateDynamicUpdateMap (metadata, originalActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata" />
        <Parameter Name="originalActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <param name="originalActivity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ResiliencePipelineBuilderExtensions" FullName="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class ResiliencePipelineBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ResiliencePipelineBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ResiliencePipelineBuilderExtensions" />
  <TypeSignature Language="F#" Value="type ResiliencePipelineBuilderExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResiliencePipelineBuilderExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for pipeline builders.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBulkheadPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddBulkheadPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddBulkheadPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddBulkheadPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddBulkheadPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddBulkheadPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddBulkheadPolicy (builder, policyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddBulkheadPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <summary>
            Adds a bulkhead policy with default options to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBulkheadPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddBulkheadPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName, Microsoft.Extensions.Configuration.IConfigurationSection section);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddBulkheadPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName, class Microsoft.Extensions.Configuration.IConfigurationSection section) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddBulkheadPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String,Microsoft.Extensions.Configuration.IConfigurationSection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddBulkheadPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String, section As IConfigurationSection) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddBulkheadPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string * Microsoft.Extensions.Configuration.IConfigurationSection -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddBulkheadPolicy (builder, policyName, section)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddBulkheadPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName, Microsoft::Extensions::Configuration::IConfigurationSection ^ section);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="section" Type="Microsoft.Extensions.Configuration.IConfigurationSection" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <param name="section">The configuration that the options will bind against.</param>
        <summary>
            Adds a bulkhead policy to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBulkheadPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddBulkheadPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName, Action&lt;Microsoft.Extensions.Resilience.Options.BulkheadPolicyOptions&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddBulkheadPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName, class System.Action`1&lt;class Microsoft.Extensions.Resilience.Options.BulkheadPolicyOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddBulkheadPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String,System.Action{Microsoft.Extensions.Resilience.Options.BulkheadPolicyOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddBulkheadPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String, configure As Action(Of BulkheadPolicyOptions)) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddBulkheadPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string * Action&lt;Microsoft.Extensions.Resilience.Options.BulkheadPolicyOptions&gt; -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddBulkheadPolicy (builder, policyName, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddBulkheadPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName, Action&lt;Microsoft::Extensions::Resilience::Options::BulkheadPolicyOptions ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Resilience.Options.BulkheadPolicyOptions&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <param name="configure">The action that configures the default policy options.</param>
        <summary>
            Adds a bulkhead policy to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBulkheadPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddBulkheadPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName, Microsoft.Extensions.Configuration.IConfigurationSection section, Action&lt;Microsoft.Extensions.Resilience.Options.BulkheadPolicyOptions&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddBulkheadPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName, class Microsoft.Extensions.Configuration.IConfigurationSection section, class System.Action`1&lt;class Microsoft.Extensions.Resilience.Options.BulkheadPolicyOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddBulkheadPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String,Microsoft.Extensions.Configuration.IConfigurationSection,System.Action{Microsoft.Extensions.Resilience.Options.BulkheadPolicyOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddBulkheadPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String, section As IConfigurationSection, configure As Action(Of BulkheadPolicyOptions)) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddBulkheadPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string * Microsoft.Extensions.Configuration.IConfigurationSection * Action&lt;Microsoft.Extensions.Resilience.Options.BulkheadPolicyOptions&gt; -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddBulkheadPolicy (builder, policyName, section, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddBulkheadPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName, Microsoft::Extensions::Configuration::IConfigurationSection ^ section, Action&lt;Microsoft::Extensions::Resilience::Options::BulkheadPolicyOptions ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="section" Type="Microsoft.Extensions.Configuration.IConfigurationSection" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Resilience.Options.BulkheadPolicyOptions&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <param name="section">The configuration that the options will bind against.</param>
        <param name="configure">The action that configures the policy options after <paramref name="section" /> is applied.</param>
        <summary>
            Adds a bulkhead policy to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>
            Keep in mind that the <paramref name="configure" /> delegate will override anything that was configured using <paramref name="section" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCircuitBreakerPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddCircuitBreakerPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddCircuitBreakerPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddCircuitBreakerPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddCircuitBreakerPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddCircuitBreakerPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddCircuitBreakerPolicy (builder, policyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddCircuitBreakerPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <summary>
            Adds a circuit breaker policy with default options to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCircuitBreakerPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddCircuitBreakerPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName, Microsoft.Extensions.Configuration.IConfigurationSection section);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddCircuitBreakerPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName, class Microsoft.Extensions.Configuration.IConfigurationSection section) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddCircuitBreakerPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String,Microsoft.Extensions.Configuration.IConfigurationSection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddCircuitBreakerPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String, section As IConfigurationSection) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddCircuitBreakerPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string * Microsoft.Extensions.Configuration.IConfigurationSection -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddCircuitBreakerPolicy (builder, policyName, section)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddCircuitBreakerPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName, Microsoft::Extensions::Configuration::IConfigurationSection ^ section);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="section" Type="Microsoft.Extensions.Configuration.IConfigurationSection" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <param name="section">The configuration that the options will bind against.</param>
        <summary>
            Adds a circuit breaker policy to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCircuitBreakerPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddCircuitBreakerPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName, Action&lt;Microsoft.Extensions.Resilience.Options.CircuitBreakerPolicyOptions&lt;TResult&gt;&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddCircuitBreakerPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName, class System.Action`1&lt;class Microsoft.Extensions.Resilience.Options.CircuitBreakerPolicyOptions`1&lt;!!TResult&gt;&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddCircuitBreakerPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String,System.Action{Microsoft.Extensions.Resilience.Options.CircuitBreakerPolicyOptions{``0}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddCircuitBreakerPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String, configure As Action(Of CircuitBreakerPolicyOptions(Of TResult))) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddCircuitBreakerPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string * Action&lt;Microsoft.Extensions.Resilience.Options.CircuitBreakerPolicyOptions&lt;'Result&gt;&gt; -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddCircuitBreakerPolicy (builder, policyName, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddCircuitBreakerPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName, Action&lt;Microsoft::Extensions::Resilience::Options::CircuitBreakerPolicyOptions&lt;TResult&gt; ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Resilience.Options.CircuitBreakerPolicyOptions&lt;TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <param name="configure">The action that configures the default policy options.</param>
        <summary>
            Adds a circuit breaker policy to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCircuitBreakerPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddCircuitBreakerPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName, Microsoft.Extensions.Configuration.IConfigurationSection section, Action&lt;Microsoft.Extensions.Resilience.Options.CircuitBreakerPolicyOptions&lt;TResult&gt;&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddCircuitBreakerPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName, class Microsoft.Extensions.Configuration.IConfigurationSection section, class System.Action`1&lt;class Microsoft.Extensions.Resilience.Options.CircuitBreakerPolicyOptions`1&lt;!!TResult&gt;&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddCircuitBreakerPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String,Microsoft.Extensions.Configuration.IConfigurationSection,System.Action{Microsoft.Extensions.Resilience.Options.CircuitBreakerPolicyOptions{``0}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddCircuitBreakerPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String, section As IConfigurationSection, configure As Action(Of CircuitBreakerPolicyOptions(Of TResult))) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddCircuitBreakerPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string * Microsoft.Extensions.Configuration.IConfigurationSection * Action&lt;Microsoft.Extensions.Resilience.Options.CircuitBreakerPolicyOptions&lt;'Result&gt;&gt; -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddCircuitBreakerPolicy (builder, policyName, section, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddCircuitBreakerPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName, Microsoft::Extensions::Configuration::IConfigurationSection ^ section, Action&lt;Microsoft::Extensions::Resilience::Options::CircuitBreakerPolicyOptions&lt;TResult&gt; ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="section" Type="Microsoft.Extensions.Configuration.IConfigurationSection" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Resilience.Options.CircuitBreakerPolicyOptions&lt;TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <param name="section">The configuration that the options will bind against.</param>
        <param name="configure">The action that configures the policy options after <paramref name="section" /> is applied.</param>
        <summary>
            Adds a circuit breaker policy to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>
            Keep in mind that the <paramref name="configure" /> delegate will override anything that was configured using <paramref name="section" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFallbackPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddFallbackPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName, Microsoft.Extensions.Resilience.FallbackScenarioTaskProvider&lt;TResult&gt; provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddFallbackPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName, class Microsoft.Extensions.Resilience.FallbackScenarioTaskProvider`1&lt;!!TResult&gt; provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddFallbackPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String,Microsoft.Extensions.Resilience.FallbackScenarioTaskProvider{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFallbackPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String, provider As FallbackScenarioTaskProvider(Of TResult)) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddFallbackPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string * Microsoft.Extensions.Resilience.FallbackScenarioTaskProvider&lt;'Result&gt; -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddFallbackPolicy (builder, policyName, provider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddFallbackPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName, Microsoft::Extensions::Resilience::FallbackScenarioTaskProvider&lt;TResult&gt; ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="provider" Type="Microsoft.Extensions.Resilience.FallbackScenarioTaskProvider&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <param name="provider">The task performed in the fallback scenario when the initial execution encounters a transient failure.</param>
        <summary>
            Adds a fallback policy with default options to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFallbackPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddFallbackPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName, Microsoft.Extensions.Resilience.FallbackScenarioTaskProvider&lt;TResult&gt; provider, Microsoft.Extensions.Configuration.IConfigurationSection section);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddFallbackPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName, class Microsoft.Extensions.Resilience.FallbackScenarioTaskProvider`1&lt;!!TResult&gt; provider, class Microsoft.Extensions.Configuration.IConfigurationSection section) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddFallbackPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String,Microsoft.Extensions.Resilience.FallbackScenarioTaskProvider{``0},Microsoft.Extensions.Configuration.IConfigurationSection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFallbackPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String, provider As FallbackScenarioTaskProvider(Of TResult), section As IConfigurationSection) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddFallbackPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string * Microsoft.Extensions.Resilience.FallbackScenarioTaskProvider&lt;'Result&gt; * Microsoft.Extensions.Configuration.IConfigurationSection -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddFallbackPolicy (builder, policyName, provider, section)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddFallbackPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName, Microsoft::Extensions::Resilience::FallbackScenarioTaskProvider&lt;TResult&gt; ^ provider, Microsoft::Extensions::Configuration::IConfigurationSection ^ section);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="provider" Type="Microsoft.Extensions.Resilience.FallbackScenarioTaskProvider&lt;TResult&gt;" />
        <Parameter Name="section" Type="Microsoft.Extensions.Configuration.IConfigurationSection" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <param name="provider">The task performed in the fallback scenario when the initial execution encounters a transient failure.</param>
        <param name="section">The configuration that the options will bind against.</param>
        <summary>
            Adds a fallback policy to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFallbackPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddFallbackPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName, Microsoft.Extensions.Resilience.FallbackScenarioTaskProvider&lt;TResult&gt; provider, Action&lt;Microsoft.Extensions.Resilience.Options.FallbackPolicyOptions&lt;TResult&gt;&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddFallbackPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName, class Microsoft.Extensions.Resilience.FallbackScenarioTaskProvider`1&lt;!!TResult&gt; provider, class System.Action`1&lt;class Microsoft.Extensions.Resilience.Options.FallbackPolicyOptions`1&lt;!!TResult&gt;&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddFallbackPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String,Microsoft.Extensions.Resilience.FallbackScenarioTaskProvider{``0},System.Action{Microsoft.Extensions.Resilience.Options.FallbackPolicyOptions{``0}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFallbackPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String, provider As FallbackScenarioTaskProvider(Of TResult), configure As Action(Of FallbackPolicyOptions(Of TResult))) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddFallbackPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string * Microsoft.Extensions.Resilience.FallbackScenarioTaskProvider&lt;'Result&gt; * Action&lt;Microsoft.Extensions.Resilience.Options.FallbackPolicyOptions&lt;'Result&gt;&gt; -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddFallbackPolicy (builder, policyName, provider, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddFallbackPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName, Microsoft::Extensions::Resilience::FallbackScenarioTaskProvider&lt;TResult&gt; ^ provider, Action&lt;Microsoft::Extensions::Resilience::Options::FallbackPolicyOptions&lt;TResult&gt; ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="provider" Type="Microsoft.Extensions.Resilience.FallbackScenarioTaskProvider&lt;TResult&gt;" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Resilience.Options.FallbackPolicyOptions&lt;TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <param name="provider">The task performed in the fallback scenario when the initial execution encounters a transient failure.</param>
        <param name="configure">The action that configures the default policy options.</param>
        <summary>
            Adds a fallback policy to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFallbackPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddFallbackPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName, Microsoft.Extensions.Resilience.FallbackScenarioTaskProvider&lt;TResult&gt; provider, Microsoft.Extensions.Configuration.IConfigurationSection section, Action&lt;Microsoft.Extensions.Resilience.Options.FallbackPolicyOptions&lt;TResult&gt;&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddFallbackPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName, class Microsoft.Extensions.Resilience.FallbackScenarioTaskProvider`1&lt;!!TResult&gt; provider, class Microsoft.Extensions.Configuration.IConfigurationSection section, class System.Action`1&lt;class Microsoft.Extensions.Resilience.Options.FallbackPolicyOptions`1&lt;!!TResult&gt;&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddFallbackPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String,Microsoft.Extensions.Resilience.FallbackScenarioTaskProvider{``0},Microsoft.Extensions.Configuration.IConfigurationSection,System.Action{Microsoft.Extensions.Resilience.Options.FallbackPolicyOptions{``0}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFallbackPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String, provider As FallbackScenarioTaskProvider(Of TResult), section As IConfigurationSection, configure As Action(Of FallbackPolicyOptions(Of TResult))) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddFallbackPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string * Microsoft.Extensions.Resilience.FallbackScenarioTaskProvider&lt;'Result&gt; * Microsoft.Extensions.Configuration.IConfigurationSection * Action&lt;Microsoft.Extensions.Resilience.Options.FallbackPolicyOptions&lt;'Result&gt;&gt; -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddFallbackPolicy (builder, policyName, provider, section, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddFallbackPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName, Microsoft::Extensions::Resilience::FallbackScenarioTaskProvider&lt;TResult&gt; ^ provider, Microsoft::Extensions::Configuration::IConfigurationSection ^ section, Action&lt;Microsoft::Extensions::Resilience::Options::FallbackPolicyOptions&lt;TResult&gt; ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="provider" Type="Microsoft.Extensions.Resilience.FallbackScenarioTaskProvider&lt;TResult&gt;" />
        <Parameter Name="section" Type="Microsoft.Extensions.Configuration.IConfigurationSection" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Resilience.Options.FallbackPolicyOptions&lt;TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <param name="provider">The task performed in the fallback scenario when the initial execution encounters a transient failure.</param>
        <param name="section">The configuration that the options will bind against.</param>
        <param name="configure">The action that configures the policy options after <paramref name="section" /> is applied.</param>
        <summary>
            Adds a fallback policy to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>
            Keep in mind that the <paramref name="configure" /> delegate will override anything that was configured using <paramref name="section" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHedgingPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddHedgingPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName, Microsoft.Extensions.Resilience.HedgedTaskProvider&lt;TResult&gt; provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddHedgingPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName, class Microsoft.Extensions.Resilience.HedgedTaskProvider`1&lt;!!TResult&gt; provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddHedgingPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String,Microsoft.Extensions.Resilience.HedgedTaskProvider{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHedgingPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String, provider As HedgedTaskProvider(Of TResult)) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddHedgingPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string * Microsoft.Extensions.Resilience.HedgedTaskProvider&lt;'Result&gt; -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddHedgingPolicy (builder, policyName, provider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddHedgingPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName, Microsoft::Extensions::Resilience::HedgedTaskProvider&lt;TResult&gt; ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="provider" Type="Microsoft.Extensions.Resilience.HedgedTaskProvider&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <param name="provider">The hedged task provider.</param>
        <summary>
            Adds a hedging policy with default options to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHedgingPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddHedgingPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName, Microsoft.Extensions.Resilience.HedgedTaskProvider&lt;TResult&gt; provider, Microsoft.Extensions.Configuration.IConfigurationSection section);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddHedgingPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName, class Microsoft.Extensions.Resilience.HedgedTaskProvider`1&lt;!!TResult&gt; provider, class Microsoft.Extensions.Configuration.IConfigurationSection section) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddHedgingPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String,Microsoft.Extensions.Resilience.HedgedTaskProvider{``0},Microsoft.Extensions.Configuration.IConfigurationSection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHedgingPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String, provider As HedgedTaskProvider(Of TResult), section As IConfigurationSection) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddHedgingPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string * Microsoft.Extensions.Resilience.HedgedTaskProvider&lt;'Result&gt; * Microsoft.Extensions.Configuration.IConfigurationSection -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddHedgingPolicy (builder, policyName, provider, section)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddHedgingPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName, Microsoft::Extensions::Resilience::HedgedTaskProvider&lt;TResult&gt; ^ provider, Microsoft::Extensions::Configuration::IConfigurationSection ^ section);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="provider" Type="Microsoft.Extensions.Resilience.HedgedTaskProvider&lt;TResult&gt;" />
        <Parameter Name="section" Type="Microsoft.Extensions.Configuration.IConfigurationSection" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <param name="provider">The hedged task provider.</param>
        <param name="section">The configuration that the options will bind against.</param>
        <summary>
            Adds a hedging policy to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHedgingPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddHedgingPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName, Microsoft.Extensions.Resilience.HedgedTaskProvider&lt;TResult&gt; provider, Action&lt;Microsoft.Extensions.Resilience.Options.HedgingPolicyOptions&lt;TResult&gt;&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddHedgingPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName, class Microsoft.Extensions.Resilience.HedgedTaskProvider`1&lt;!!TResult&gt; provider, class System.Action`1&lt;class Microsoft.Extensions.Resilience.Options.HedgingPolicyOptions`1&lt;!!TResult&gt;&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddHedgingPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String,Microsoft.Extensions.Resilience.HedgedTaskProvider{``0},System.Action{Microsoft.Extensions.Resilience.Options.HedgingPolicyOptions{``0}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHedgingPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String, provider As HedgedTaskProvider(Of TResult), configure As Action(Of HedgingPolicyOptions(Of TResult))) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddHedgingPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string * Microsoft.Extensions.Resilience.HedgedTaskProvider&lt;'Result&gt; * Action&lt;Microsoft.Extensions.Resilience.Options.HedgingPolicyOptions&lt;'Result&gt;&gt; -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddHedgingPolicy (builder, policyName, provider, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddHedgingPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName, Microsoft::Extensions::Resilience::HedgedTaskProvider&lt;TResult&gt; ^ provider, Action&lt;Microsoft::Extensions::Resilience::Options::HedgingPolicyOptions&lt;TResult&gt; ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="provider" Type="Microsoft.Extensions.Resilience.HedgedTaskProvider&lt;TResult&gt;" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Resilience.Options.HedgingPolicyOptions&lt;TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <param name="provider">The hedged task provider.</param>
        <param name="configure">The action that configures the default policy options.</param>
        <summary>
            Adds a hedging policy to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHedgingPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddHedgingPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName, Microsoft.Extensions.Resilience.HedgedTaskProvider&lt;TResult&gt; provider, Microsoft.Extensions.Configuration.IConfigurationSection section, Action&lt;Microsoft.Extensions.Resilience.Options.HedgingPolicyOptions&lt;TResult&gt;&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddHedgingPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName, class Microsoft.Extensions.Resilience.HedgedTaskProvider`1&lt;!!TResult&gt; provider, class Microsoft.Extensions.Configuration.IConfigurationSection section, class System.Action`1&lt;class Microsoft.Extensions.Resilience.Options.HedgingPolicyOptions`1&lt;!!TResult&gt;&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddHedgingPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String,Microsoft.Extensions.Resilience.HedgedTaskProvider{``0},Microsoft.Extensions.Configuration.IConfigurationSection,System.Action{Microsoft.Extensions.Resilience.Options.HedgingPolicyOptions{``0}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHedgingPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String, provider As HedgedTaskProvider(Of TResult), section As IConfigurationSection, configure As Action(Of HedgingPolicyOptions(Of TResult))) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddHedgingPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string * Microsoft.Extensions.Resilience.HedgedTaskProvider&lt;'Result&gt; * Microsoft.Extensions.Configuration.IConfigurationSection * Action&lt;Microsoft.Extensions.Resilience.Options.HedgingPolicyOptions&lt;'Result&gt;&gt; -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddHedgingPolicy (builder, policyName, provider, section, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddHedgingPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName, Microsoft::Extensions::Resilience::HedgedTaskProvider&lt;TResult&gt; ^ provider, Microsoft::Extensions::Configuration::IConfigurationSection ^ section, Action&lt;Microsoft::Extensions::Resilience::Options::HedgingPolicyOptions&lt;TResult&gt; ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="provider" Type="Microsoft.Extensions.Resilience.HedgedTaskProvider&lt;TResult&gt;" />
        <Parameter Name="section" Type="Microsoft.Extensions.Configuration.IConfigurationSection" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Resilience.Options.HedgingPolicyOptions&lt;TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <param name="provider">The hedged task provider.</param>
        <param name="section">The configuration that the options will bind against.</param>
        <param name="configure">The action that configures the policy options after <paramref name="section" /> is applied.</param>
        <summary>
            Adds a hedging policy to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>
            Keep in mind that the <paramref name="configure" /> delegate will override anything that was configured using <paramref name="section" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRetryPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddRetryPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddRetryPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddRetryPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddRetryPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddRetryPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddRetryPolicy (builder, policyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddRetryPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <summary>
            Adds a retry policy with default options to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRetryPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddRetryPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName, Microsoft.Extensions.Configuration.IConfigurationSection section);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddRetryPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName, class Microsoft.Extensions.Configuration.IConfigurationSection section) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddRetryPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String,Microsoft.Extensions.Configuration.IConfigurationSection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddRetryPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String, section As IConfigurationSection) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddRetryPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string * Microsoft.Extensions.Configuration.IConfigurationSection -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddRetryPolicy (builder, policyName, section)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddRetryPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName, Microsoft::Extensions::Configuration::IConfigurationSection ^ section);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="section" Type="Microsoft.Extensions.Configuration.IConfigurationSection" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <param name="section">The configuration that the options will bind against.</param>
        <summary>
            Adds a retry policy to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRetryPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddRetryPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName, Action&lt;Microsoft.Extensions.Resilience.Options.RetryPolicyOptions&lt;TResult&gt;&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddRetryPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName, class System.Action`1&lt;class Microsoft.Extensions.Resilience.Options.RetryPolicyOptions`1&lt;!!TResult&gt;&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddRetryPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String,System.Action{Microsoft.Extensions.Resilience.Options.RetryPolicyOptions{``0}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddRetryPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String, configure As Action(Of RetryPolicyOptions(Of TResult))) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddRetryPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string * Action&lt;Microsoft.Extensions.Resilience.Options.RetryPolicyOptions&lt;'Result&gt;&gt; -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddRetryPolicy (builder, policyName, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddRetryPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName, Action&lt;Microsoft::Extensions::Resilience::Options::RetryPolicyOptions&lt;TResult&gt; ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Resilience.Options.RetryPolicyOptions&lt;TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <param name="configure">The action that configures the default policy options.</param>
        <summary>
            Adds a retry policy to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRetryPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddRetryPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName, Microsoft.Extensions.Configuration.IConfigurationSection section, Action&lt;Microsoft.Extensions.Resilience.Options.RetryPolicyOptions&lt;TResult&gt;&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddRetryPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName, class Microsoft.Extensions.Configuration.IConfigurationSection section, class System.Action`1&lt;class Microsoft.Extensions.Resilience.Options.RetryPolicyOptions`1&lt;!!TResult&gt;&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddRetryPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String,Microsoft.Extensions.Configuration.IConfigurationSection,System.Action{Microsoft.Extensions.Resilience.Options.RetryPolicyOptions{``0}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddRetryPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String, section As IConfigurationSection, configure As Action(Of RetryPolicyOptions(Of TResult))) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddRetryPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string * Microsoft.Extensions.Configuration.IConfigurationSection * Action&lt;Microsoft.Extensions.Resilience.Options.RetryPolicyOptions&lt;'Result&gt;&gt; -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddRetryPolicy (builder, policyName, section, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddRetryPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName, Microsoft::Extensions::Configuration::IConfigurationSection ^ section, Action&lt;Microsoft::Extensions::Resilience::Options::RetryPolicyOptions&lt;TResult&gt; ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="section" Type="Microsoft.Extensions.Configuration.IConfigurationSection" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Resilience.Options.RetryPolicyOptions&lt;TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <param name="section">The configuration that the options will bind against.</param>
        <param name="configure">The action that configures the policy options after <paramref name="section" /> is applied.</param>
        <summary>
            Adds a retry policy to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>
            Keep in mind that the <paramref name="configure" /> delegate will override anything that was configured using <paramref name="section" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTimeoutPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddTimeoutPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddTimeoutPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddTimeoutPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTimeoutPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddTimeoutPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddTimeoutPolicy (builder, policyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddTimeoutPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <summary>
            Adds a timeout policy with default options to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTimeoutPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddTimeoutPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName, Microsoft.Extensions.Configuration.IConfigurationSection section);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddTimeoutPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName, class Microsoft.Extensions.Configuration.IConfigurationSection section) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddTimeoutPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String,Microsoft.Extensions.Configuration.IConfigurationSection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTimeoutPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String, section As IConfigurationSection) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddTimeoutPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string * Microsoft.Extensions.Configuration.IConfigurationSection -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddTimeoutPolicy (builder, policyName, section)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddTimeoutPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName, Microsoft::Extensions::Configuration::IConfigurationSection ^ section);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="section" Type="Microsoft.Extensions.Configuration.IConfigurationSection" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <param name="section">The configuration that the options will bind against.</param>
        <summary>
            Adds a timeout policy to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTimeoutPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddTimeoutPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName, Action&lt;Microsoft.Extensions.Resilience.Options.TimeoutPolicyOptions&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddTimeoutPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName, class System.Action`1&lt;class Microsoft.Extensions.Resilience.Options.TimeoutPolicyOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddTimeoutPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String,System.Action{Microsoft.Extensions.Resilience.Options.TimeoutPolicyOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTimeoutPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String, configure As Action(Of TimeoutPolicyOptions)) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddTimeoutPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string * Action&lt;Microsoft.Extensions.Resilience.Options.TimeoutPolicyOptions&gt; -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddTimeoutPolicy (builder, policyName, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddTimeoutPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName, Action&lt;Microsoft::Extensions::Resilience::Options::TimeoutPolicyOptions ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Resilience.Options.TimeoutPolicyOptions&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <param name="configure">The action that configures the default policy options.</param>
        <summary>
            Adds a timeout policy to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTimeoutPolicy&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; AddTimeoutPolicy&lt;TResult&gt; (this Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt; builder, string policyName, Microsoft.Extensions.Configuration.IConfigurationSection section, Action&lt;Microsoft.Extensions.Resilience.Options.TimeoutPolicyOptions&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; AddTimeoutPolicy&lt;TResult&gt;(class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TResult&gt; builder, string policyName, class Microsoft.Extensions.Configuration.IConfigurationSection section, class System.Action`1&lt;class Microsoft.Extensions.Resilience.Options.TimeoutPolicyOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddTimeoutPolicy``1(Microsoft.Extensions.Resilience.IResiliencePipelineBuilder{``0},System.String,Microsoft.Extensions.Configuration.IConfigurationSection,System.Action{Microsoft.Extensions.Resilience.Options.TimeoutPolicyOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTimeoutPolicy(Of TResult) (builder As IResiliencePipelineBuilder(Of TResult), policyName As String, section As IConfigurationSection, configure As Action(Of TimeoutPolicyOptions)) As IResiliencePipelineBuilder(Of TResult)" />
      <MemberSignature Language="F#" Value="static member AddTimeoutPolicy : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt; * string * Microsoft.Extensions.Configuration.IConfigurationSection * Action&lt;Microsoft.Extensions.Resilience.Options.TimeoutPolicyOptions&gt; -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'Result&gt;" Usage="Microsoft.Extensions.Resilience.ResiliencePipelineBuilderExtensions.AddTimeoutPolicy (builder, policyName, section, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ AddTimeoutPolicy(Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TResult&gt; ^ builder, System::String ^ policyName, Microsoft::Extensions::Configuration::IConfigurationSection ^ section, Action&lt;Microsoft::Extensions::Resilience::Options::TimeoutPolicyOptions ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TResult&gt;" RefType="this" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="section" Type="Microsoft.Extensions.Configuration.IConfigurationSection" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Resilience.Options.TimeoutPolicyOptions&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="builder">The policy pipeline builder.</param>
        <param name="policyName">The policy name.</param>
        <param name="section">The configuration that the options will bind against.</param>
        <param name="configure">The action that configures the policy options after <paramref name="section" /> is applied.</param>
        <summary>
            Adds a timeout policy to a pipeline.
            </summary>
        <returns>Current instance.</returns>
        <remarks>
            Keep in mind that the <paramref name="configure" /> delegate will override anything that was configured using <paramref name="section" />.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

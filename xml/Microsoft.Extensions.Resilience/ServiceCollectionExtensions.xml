<Type Name="ServiceCollectionExtensions" FullName="Microsoft.Extensions.Resilience.ServiceCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class ServiceCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ServiceCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Resilience.ServiceCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ServiceCollectionExtensions" />
  <TypeSignature Language="F#" Value="type ServiceCollectionExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceCollectionExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension class for the Service Collection DI container.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddResiliencePipeline&lt;TPolicyResult&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TPolicyResult&gt; AddResiliencePipeline&lt;TPolicyResult&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string pipelineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1&lt;!!TPolicyResult&gt; AddResiliencePipeline&lt;TPolicyResult&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, string pipelineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Resilience.ServiceCollectionExtensions.AddResiliencePipeline``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddResiliencePipeline(Of TPolicyResult) (services As IServiceCollection, pipelineName As String) As IResiliencePipelineBuilder(Of TPolicyResult)" />
      <MemberSignature Language="F#" Value="static member AddResiliencePipeline : Microsoft.Extensions.DependencyInjection.IServiceCollection * string -&gt; Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;'PolicyResult&gt;" Usage="Microsoft.Extensions.Resilience.ServiceCollectionExtensions.AddResiliencePipeline (services, pipelineName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TPolicyResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Resilience::IResiliencePipelineBuilder&lt;TPolicyResult&gt; ^ AddResiliencePipeline(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::String ^ pipelineName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Resilience</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Resilience.IResiliencePipelineBuilder&lt;TPolicyResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TPolicyResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="pipelineName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TPolicyResult">The type of the result returned by the action executed by the policies.</typeparam>
        <param name="services">The DI container.</param>
        <param name="pipelineName">The pipeline name.</param>
        <summary>
            Returns a generic <see cref="T:Microsoft.Extensions.Resilience.IResiliencePipelineBuilder`1" /> that is used to configure the new resilience pipeline.
            </summary>
        <returns>The input <paramref name="services" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="services" /> cannot be null.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="AIFunctionDeclaration" FullName="Microsoft.Extensions.AI.AIFunctionDeclaration">
  <TypeSignature Language="C#" Value="public abstract class AIFunctionDeclaration : Microsoft.Extensions.AI.AITool" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AIFunctionDeclaration extends Microsoft.Extensions.AI.AITool" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.AIFunctionDeclaration" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AIFunctionDeclaration&#xA;Inherits AITool" />
  <TypeSignature Language="F#" Value="type AIFunctionDeclaration = class&#xA;    inherit AITool" />
  <TypeSignature Language="C++ CLI" Value="public ref class AIFunctionDeclaration abstract : Microsoft::Extensions::AI::AITool" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
    <AssemblyVersion>9.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Extensions.AI.AITool</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a function that can be described to an AI service.</summary>
    <remarks>
      <see cref="T:Microsoft.Extensions.AI.AIFunctionDeclaration" /> is the base class for <see cref="T:Microsoft.Extensions.AI.AIFunction" />, which
            adds the ability to invoke the function. Components may type test <see cref="T:Microsoft.Extensions.AI.AITool" /> instances
            for <see cref="T:Microsoft.Extensions.AI.AIFunctionDeclaration" /> to determine whether they can be described as functions,
            and may type test for <see cref="T:Microsoft.Extensions.AI.AIFunction" /> to determine whether they can be invoked.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AIFunctionDeclaration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.AIFunctionDeclaration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AIFunctionDeclaration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AIFunctionDeclaration" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonSchema">
      <MemberSignature Language="C#" Value="public virtual System.Text.Json.JsonElement JsonSchema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonElement JsonSchema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.AIFunctionDeclaration.JsonSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property JsonSchema As JsonElement" />
      <MemberSignature Language="F#" Value="member this.JsonSchema : System.Text.Json.JsonElement" Usage="Microsoft.Extensions.AI.AIFunctionDeclaration.JsonSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Json::JsonElement JsonSchema { System::Text::Json::JsonElement get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a JSON Schema describing the function and its input parameters.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            When specified, declares a self-contained JSON schema document that describes the function and its input parameters.
            A simple example of a JSON schema for a function that adds two numbers together is shown below:
            </para>
          <code>
            {
              "title" : "addNumbers",
              "description": "A simple function that adds two numbers together.",
              "type": "object",
              "properties": {
                "a" : { "type": "number" },
                "b" : { "type": "number", "default": 1 }
              }, 
              "required" : ["a"]
            }
            </code>
          <para>
            The metadata present in the schema document plays an important role in guiding AI function invocation.
            </para>
          <para>
            When no schema is specified, consuming chat clients should assume the "{}" or "true" schema, indicating that any JSON input is admissible.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnJsonSchema">
      <MemberSignature Language="C#" Value="public virtual System.Text.Json.JsonElement? ReturnJsonSchema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Text.Json.JsonElement&gt; ReturnJsonSchema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.AIFunctionDeclaration.ReturnJsonSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ReturnJsonSchema As Nullable(Of JsonElement)" />
      <MemberSignature Language="F#" Value="member this.ReturnJsonSchema : Nullable&lt;System.Text.Json.JsonElement&gt;" Usage="Microsoft.Extensions.AI.AIFunctionDeclaration.ReturnJsonSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;System::Text::Json::JsonElement&gt; ReturnJsonSchema { Nullable&lt;System::Text::Json::JsonElement&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Text.Json.JsonElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a JSON Schema describing the function's return value.</summary>
        <value>To be added.</value>
        <remarks>
            A <see langword="null" /> typically reflects a function that doesn't specify a return schema
            or a function that returns <see cref="T:System.Void" />, <see cref="T:System.Threading.Tasks.Task" />, or <see cref="T:System.Threading.Tasks.ValueTask" />.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

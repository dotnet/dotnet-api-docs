<Type Name="OpenTelemetrySpeechToTextClient" FullName="Microsoft.Extensions.AI.OpenTelemetrySpeechToTextClient">
  <TypeSignature Language="C#" Value="public sealed class OpenTelemetrySpeechToTextClient : Microsoft.Extensions.AI.DelegatingSpeechToTextClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OpenTelemetrySpeechToTextClient extends Microsoft.Extensions.AI.DelegatingSpeechToTextClient" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.OpenTelemetrySpeechToTextClient" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OpenTelemetrySpeechToTextClient&#xA;Inherits DelegatingSpeechToTextClient" />
  <TypeSignature Language="F#" Value="type OpenTelemetrySpeechToTextClient = class&#xA;    inherit DelegatingSpeechToTextClient" />
  <TypeSignature Language="C++ CLI" Value="public ref class OpenTelemetrySpeechToTextClient sealed : Microsoft::Extensions::AI::DelegatingSpeechToTextClient" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.10.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Extensions.AI.DelegatingSpeechToTextClient</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("MEAI001")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("MEAI001")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a delegating speech-to-text client that implements the OpenTelemetry Semantic Conventions for Generative AI systems.</summary>
    <remarks>
            This class provides an implementation of the Semantic Conventions for Generative AI systems v1.37, defined at <see href="https://opentelemetry.io/docs/specs/semconv/gen-ai/" />.
            The specification is still experimental and subject to change; as such, the telemetry output by this client is also subject to change.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenTelemetrySpeechToTextClient (Microsoft.Extensions.AI.ISpeechToTextClient innerClient, Microsoft.Extensions.Logging.ILogger? logger = default, string? sourceName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.AI.ISpeechToTextClient innerClient, class Microsoft.Extensions.Logging.ILogger logger, string sourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.OpenTelemetrySpeechToTextClient.#ctor(Microsoft.Extensions.AI.ISpeechToTextClient,Microsoft.Extensions.Logging.ILogger,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerClient As ISpeechToTextClient, Optional logger As ILogger = Nothing, Optional sourceName As String = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.OpenTelemetrySpeechToTextClient : Microsoft.Extensions.AI.ISpeechToTextClient * Microsoft.Extensions.Logging.ILogger * string -&gt; Microsoft.Extensions.AI.OpenTelemetrySpeechToTextClient" Usage="new Microsoft.Extensions.AI.OpenTelemetrySpeechToTextClient (innerClient, logger, sourceName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerClient" Type="Microsoft.Extensions.AI.ISpeechToTextClient">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
        <Parameter Name="sourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="innerClient">The underlying <see cref="T:Microsoft.Extensions.AI.ISpeechToTextClient" />.</param>
        <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to use for emitting any logging data from the client.</param>
        <param name="sourceName">An optional source name that will be used on the telemetry data.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.OpenTelemetrySpeechToTextClient" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.OpenTelemetrySpeechToTextClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="openTelemetrySpeechToTextClient.Dispose disposing" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="EnableSensitiveData">
      <MemberSignature Language="C#" Value="public bool EnableSensitiveData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSensitiveData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.OpenTelemetrySpeechToTextClient.EnableSensitiveData" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSensitiveData As Boolean" />
      <MemberSignature Language="F#" Value="member this.EnableSensitiveData : bool with get, set" Usage="Microsoft.Extensions.AI.OpenTelemetrySpeechToTextClient.EnableSensitiveData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSensitiveData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether potentially sensitive information should be included in telemetry.
            </summary>
        <value>
          <see langword="true" /> if potentially sensitive information should be included in telemetry;
            <see langword="false" /> if telemetry shouldn't include raw inputs and outputs.
            The default value is <see langword="false" />, unless the <c>OTEL_INSTRUMENTATION_GENAI_CAPTURE_MESSAGE_CONTENT</c>
            environment variable is set to "true" (case-insensitive).
            </value>
        <remarks>
            By default, telemetry includes metadata, such as token counts, but not raw inputs
            and outputs, such as message content, function call arguments, and function call results.
            The default value can be overridden by setting the <c>OTEL_INSTRUMENTATION_GENAI_CAPTURE_MESSAGE_CONTENT</c>
            environment variable to "true". Explicitly setting this property will override the environment variable.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public override object? GetService (Type serviceType, object? serviceKey = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetService(class System.Type serviceType, object serviceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.OpenTelemetrySpeechToTextClient.GetService(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetService (serviceType As Type, Optional serviceKey As Object = Nothing) As Object" />
      <MemberSignature Language="F#" Value="override this.GetService : Type * obj -&gt; obj" Usage="openTelemetrySpeechToTextClient.GetService (serviceType, serviceKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="serviceKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serviceType">To be added.</param>
        <param name="serviceKey">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetStreamingTextAsync">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.SpeechToTextResponseUpdate&gt; GetStreamingTextAsync (System.IO.Stream audioSpeechStream, Microsoft.Extensions.AI.SpeechToTextOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;class Microsoft.Extensions.AI.SpeechToTextResponseUpdate&gt; GetStreamingTextAsync(class System.IO.Stream audioSpeechStream, class Microsoft.Extensions.AI.SpeechToTextOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.OpenTelemetrySpeechToTextClient.GetStreamingTextAsync(System.IO.Stream,Microsoft.Extensions.AI.SpeechToTextOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStreamingTextAsync (audioSpeechStream As Stream, Optional options As SpeechToTextOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of SpeechToTextResponseUpdate)" />
      <MemberSignature Language="F#" Value="override this.GetStreamingTextAsync : System.IO.Stream * Microsoft.Extensions.AI.SpeechToTextOptions * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.SpeechToTextResponseUpdate&gt;" Usage="openTelemetrySpeechToTextClient.GetStreamingTextAsync (audioSpeechStream, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Microsoft.Extensions.AI.OpenTelemetrySpeechToTextClient+&lt;GetStreamingTextAsync&gt;d__16))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Microsoft.Extensions.AI.OpenTelemetrySpeechToTextClient+&lt;GetStreamingTextAsync&gt;d__16))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.SpeechToTextResponseUpdate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioSpeechStream" Type="System.IO.Stream" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.SpeechToTextOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.EnumeratorCancellation]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.EnumeratorCancellation&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioSpeechStream">To be added.</param>
        <param name="options">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetTextAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.SpeechToTextResponse&gt; GetTextAsync (System.IO.Stream audioSpeechStream, Microsoft.Extensions.AI.SpeechToTextOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Extensions.AI.SpeechToTextResponse&gt; GetTextAsync(class System.IO.Stream audioSpeechStream, class Microsoft.Extensions.AI.SpeechToTextOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.OpenTelemetrySpeechToTextClient.GetTextAsync(System.IO.Stream,Microsoft.Extensions.AI.SpeechToTextOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTextAsync (audioSpeechStream As Stream, Optional options As SpeechToTextOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of SpeechToTextResponse)" />
      <MemberSignature Language="F#" Value="override this.GetTextAsync : System.IO.Stream * Microsoft.Extensions.AI.SpeechToTextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.SpeechToTextResponse&gt;" Usage="openTelemetrySpeechToTextClient.GetTextAsync (audioSpeechStream, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.SpeechToTextResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioSpeechStream" Type="System.IO.Stream" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.SpeechToTextOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="audioSpeechStream">To be added.</param>
        <param name="options">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="LoggingEmbeddingGenerator&lt;TInput,TEmbedding&gt;" FullName="Microsoft.Extensions.AI.LoggingEmbeddingGenerator&lt;TInput,TEmbedding&gt;">
  <TypeSignature Language="C#" Value="public class LoggingEmbeddingGenerator&lt;TInput,TEmbedding&gt; : Microsoft.Extensions.AI.DelegatingEmbeddingGenerator&lt;TInput,TEmbedding&gt; where TEmbedding : Embedding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LoggingEmbeddingGenerator`2&lt;TInput, (class Microsoft.Extensions.AI.Embedding) TEmbedding&gt; extends Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2&lt;!TInput, !TEmbedding&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.LoggingEmbeddingGenerator`2" />
  <TypeSignature Language="VB.NET" Value="Public Class LoggingEmbeddingGenerator(Of TInput, TEmbedding)&#xA;Inherits DelegatingEmbeddingGenerator(Of TInput, TEmbedding)" />
  <TypeSignature Language="F#" Value="type LoggingEmbeddingGenerator&lt;'Input, 'Embedding (requires 'Embedding :&gt; Embedding)&gt; = class&#xA;    inherit DelegatingEmbeddingGenerator&lt;'Input, 'Embedding (requires 'Embedding :&gt; Embedding)&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TInput, typename TEmbedding&gt;&#xA; where TEmbedding : Embeddingpublic ref class LoggingEmbeddingGenerator : Microsoft::Extensions::AI::DelegatingEmbeddingGenerator&lt;TInput, TEmbedding&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
    <TypeParameter Name="TEmbedding">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Constraints>
        <BaseTypeName>Microsoft.Extensions.AI.Embedding</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.Extensions.AI.DelegatingEmbeddingGenerator&lt;TInput,TEmbedding&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">TInput</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!1">TEmbedding</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1, 1 })]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1, 1 })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TInput">Specifies the type of the input passed to the generator.</typeparam>
    <typeparam name="TEmbedding">Specifies the type of the embedding instance produced by the generator.</typeparam>
    <summary>A delegating embedding generator that logs embedding generation operations to an <see cref="T:Microsoft.Extensions.Logging.ILogger" />.</summary>
    <remarks>To be added.</remarks>
    <para>
            The provided implementation of <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2" /> is thread-safe for concurrent use
            so long as the <see cref="T:Microsoft.Extensions.Logging.ILogger" /> employed is also thread-safe for concurrent use.
            </para>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoggingEmbeddingGenerator (Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt; innerGenerator, Microsoft.Extensions.Logging.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.AI.IEmbeddingGenerator`2&lt;!TInput, !TEmbedding&gt; innerGenerator, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.LoggingEmbeddingGenerator`2.#ctor(Microsoft.Extensions.AI.IEmbeddingGenerator{`0,`1},Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerGenerator As IEmbeddingGenerator(Of TInput, TEmbedding), logger As ILogger)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.LoggingEmbeddingGenerator&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt; : Microsoft.Extensions.AI.IEmbeddingGenerator&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt; * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.Extensions.AI.LoggingEmbeddingGenerator&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt;" Usage="new Microsoft.Extensions.AI.LoggingEmbeddingGenerator&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt; (innerGenerator, logger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LoggingEmbeddingGenerator(Microsoft::Extensions::AI::IEmbeddingGenerator&lt;TInput, TEmbedding&gt; ^ innerGenerator, Microsoft::Extensions::Logging::ILogger ^ logger);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerGenerator" Type="Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="innerGenerator">The underlying <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2" />.</param>
        <param name="logger">An <see cref="T:Microsoft.Extensions.Logging.ILogger" /> instance that will be used for all logging.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.LoggingEmbeddingGenerator`2" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.GeneratedEmbeddings&lt;TEmbedding&gt;&gt; GenerateAsync (System.Collections.Generic.IEnumerable&lt;TInput&gt; values, Microsoft.Extensions.AI.EmbeddingGenerationOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Extensions.AI.GeneratedEmbeddings`1&lt;!TEmbedding&gt;&gt; GenerateAsync(class System.Collections.Generic.IEnumerable`1&lt;!TInput&gt; values, class Microsoft.Extensions.AI.EmbeddingGenerationOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.LoggingEmbeddingGenerator`2.GenerateAsync(System.Collections.Generic.IEnumerable{`0},Microsoft.Extensions.AI.EmbeddingGenerationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GenerateAsync (values As IEnumerable(Of TInput), Optional options As EmbeddingGenerationOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of GeneratedEmbeddings(Of TEmbedding))" />
      <MemberSignature Language="F#" Value="override this.GenerateAsync : seq&lt;'Input&gt; * Microsoft.Extensions.AI.EmbeddingGenerationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.GeneratedEmbeddings&lt;'Embedding&gt;&gt;" Usage="loggingEmbeddingGenerator.GenerateAsync (values, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.GeneratedEmbeddings&lt;TEmbedding&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;TInput&gt;" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.EmbeddingGenerationOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="values">To be added.</param>
        <param name="options">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="JsonSerializerOptions">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonSerializerOptions JsonSerializerOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Json.JsonSerializerOptions JsonSerializerOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.LoggingEmbeddingGenerator`2.JsonSerializerOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property JsonSerializerOptions As JsonSerializerOptions" />
      <MemberSignature Language="F#" Value="member this.JsonSerializerOptions : System.Text.Json.JsonSerializerOptions with get, set" Usage="Microsoft.Extensions.AI.LoggingEmbeddingGenerator&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt;.JsonSerializerOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonSerializerOptions ^ JsonSerializerOptions { System::Text::Json::JsonSerializerOptions ^ get(); void set(System::Text::Json::JsonSerializerOptions ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonSerializerOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets JSON serialization options to use when serializing logging data.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

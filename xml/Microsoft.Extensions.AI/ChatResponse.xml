<Type Name="ChatResponse" FullName="Microsoft.Extensions.AI.ChatResponse">
  <TypeSignature Language="C#" Value="public class ChatResponse" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChatResponse extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.ChatResponse" />
  <TypeSignature Language="VB.NET" Value="Public Class ChatResponse" />
  <TypeSignature Language="F#" Value="type ChatResponse = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChatResponse" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
    <AssemblyVersion>9.5.0.0</AssemblyVersion>
    <AssemblyVersion>9.6.0.0</AssemblyVersion>
    <AssemblyVersion>9.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents the response to a chat request.</summary>
    <remarks>
      <see cref="T:Microsoft.Extensions.AI.ChatResponse" /> provides one or more response messages and metadata about the response.
            A typical response will contain a single message, however a response may contain multiple messages
            in a variety of scenarios. For example, if automatic function calling is employed, such that a single
            request to a <see cref="T:Microsoft.Extensions.AI.IChatClient" /> may actually generate multiple roundtrips to an inner <see cref="T:Microsoft.Extensions.AI.IChatClient" />
            it uses, all of the involved messages may be surfaced as part of the final <see cref="T:Microsoft.Extensions.AI.ChatResponse" />.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatResponse.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChatResponse();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatResponse" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatResponse (Microsoft.Extensions.AI.ChatMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.AI.ChatMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatResponse.#ctor(Microsoft.Extensions.AI.ChatMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As ChatMessage)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.ChatResponse : Microsoft.Extensions.AI.ChatMessage -&gt; Microsoft.Extensions.AI.ChatResponse" Usage="new Microsoft.Extensions.AI.ChatResponse message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChatResponse(Microsoft::Extensions::AI::ChatMessage ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="Microsoft.Extensions.AI.ChatMessage" />
      </Parameters>
      <Docs>
        <param name="message">The response message.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatResponse" /> class.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatResponse (System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;? messages);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; messages) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatResponse.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (messages As IList(Of ChatMessage))" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.ChatResponse : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; -&gt; Microsoft.Extensions.AI.ChatResponse" Usage="new Microsoft.Extensions.AI.ChatResponse messages" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChatResponse(System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ messages);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="messages" Type="System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="messages">The response messages.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatResponse" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.AdditionalPropertiesDictionary? AdditionalProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.AdditionalPropertiesDictionary AdditionalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponse.AdditionalProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property AdditionalProperties As AdditionalPropertiesDictionary" />
      <MemberSignature Language="F#" Value="member this.AdditionalProperties : Microsoft.Extensions.AI.AdditionalPropertiesDictionary with get, set" Usage="Microsoft.Extensions.AI.ChatResponse.AdditionalProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::AI::AdditionalPropertiesDictionary ^ AdditionalProperties { Microsoft::Extensions::AI::AdditionalPropertiesDictionary ^ get(); void set(Microsoft::Extensions::AI::AdditionalPropertiesDictionary ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.AdditionalPropertiesDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets any additional properties associated with the chat response.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConversationId">
      <MemberSignature Language="C#" Value="public string? ConversationId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConversationId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponse.ConversationId" />
      <MemberSignature Language="VB.NET" Value="Public Property ConversationId As String" />
      <MemberSignature Language="F#" Value="member this.ConversationId : string with get, set" Usage="Microsoft.Extensions.AI.ChatResponse.ConversationId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConversationId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets an identifier for the state of the conversation.</summary>
        <value>To be added.</value>
        <remarks>
            Some <see cref="T:Microsoft.Extensions.AI.IChatClient" /> implementations are capable of storing the state for a conversation, such that
            the input messages supplied to <see cref="M:Microsoft.Extensions.AI.IChatClient.GetResponseAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" /> need only be the additional messages beyond
            what's already stored. If this property is non-<see langword="null" />, it represents an identifier for that state,
            and it should be used in a subsequent <see cref="P:Microsoft.Extensions.AI.ChatOptions.ConversationId" /> instead of supplying the same messages
            (and this <see cref="T:Microsoft.Extensions.AI.ChatResponse" />'s message) as part of the <c>messages</c> parameter. Note that the value may
            or may not differ on every response, depending on whether the underlying provider uses a fixed ID for each conversation
            or updates it for each message.
            </remarks>
        <related type="Article" href="https://learn.microsoft.com/dotnet/ai/microsoft-extensions-ai#stateless-vs-stateful-clients">Stateless vs. stateful clients.</related>
      </Docs>
    </Member>
    <Member MemberName="CreatedAt">
      <MemberSignature Language="C#" Value="public DateTimeOffset? CreatedAt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; CreatedAt" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponse.CreatedAt" />
      <MemberSignature Language="VB.NET" Value="Public Property CreatedAt As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.CreatedAt : Nullable&lt;DateTimeOffset&gt; with get, set" Usage="Microsoft.Extensions.AI.ChatResponse.CreatedAt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTimeOffset&gt; CreatedAt { Nullable&lt;DateTimeOffset&gt; get(); void set(Nullable&lt;DateTimeOffset&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a timestamp for the chat response.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishReason">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.ChatFinishReason? FinishReason { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Microsoft.Extensions.AI.ChatFinishReason&gt; FinishReason" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponse.FinishReason" />
      <MemberSignature Language="VB.NET" Value="Public Property FinishReason As Nullable(Of ChatFinishReason)" />
      <MemberSignature Language="F#" Value="member this.FinishReason : Nullable&lt;Microsoft.Extensions.AI.ChatFinishReason&gt; with get, set" Usage="Microsoft.Extensions.AI.ChatResponse.FinishReason" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;Microsoft::Extensions::AI::ChatFinishReason&gt; FinishReason { Nullable&lt;Microsoft::Extensions::AI::ChatFinishReason&gt; get(); void set(Nullable&lt;Microsoft::Extensions::AI::ChatFinishReason&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.Extensions.AI.ChatFinishReason&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the reason for the chat response.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Messages">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; Messages { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; Messages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponse.Messages" />
      <MemberSignature Language="VB.NET" Value="Public Property Messages As IList(Of ChatMessage)" />
      <MemberSignature Language="F#" Value="member this.Messages : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; with get, set" Usage="Microsoft.Extensions.AI.ChatResponse.Messages" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ Messages { System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the chat response messages.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelId">
      <MemberSignature Language="C#" Value="public string? ModelId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ModelId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponse.ModelId" />
      <MemberSignature Language="VB.NET" Value="Public Property ModelId As String" />
      <MemberSignature Language="F#" Value="member this.ModelId : string with get, set" Usage="Microsoft.Extensions.AI.ChatResponse.ModelId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ModelId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the model ID used in the creation of the chat response.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RawRepresentation">
      <MemberSignature Language="C#" Value="public object? RawRepresentation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RawRepresentation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponse.RawRepresentation" />
      <MemberSignature Language="VB.NET" Value="Public Property RawRepresentation As Object" />
      <MemberSignature Language="F#" Value="member this.RawRepresentation : obj with get, set" Usage="Microsoft.Extensions.AI.ChatResponse.RawRepresentation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RawRepresentation { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonIgnore&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the raw representation of the chat response from an underlying implementation.</summary>
        <value>To be added.</value>
        <remarks>
            If a <see cref="T:Microsoft.Extensions.AI.ChatResponse" /> is created to represent some underlying object from another object
            model, this property can be used to store that original object. This can be useful for debugging or
            for enabling a consumer to access the underlying object model if needed.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseId">
      <MemberSignature Language="C#" Value="public string? ResponseId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponseId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponse.ResponseId" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseId As String" />
      <MemberSignature Language="F#" Value="member this.ResponseId : string with get, set" Usage="Microsoft.Extensions.AI.ChatResponse.ResponseId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResponseId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the ID of the chat response.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponse.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="Microsoft.Extensions.AI.ChatResponse.Text" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonIgnore&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the text of the response.</summary>
        <value>To be added.</value>
        <remarks>
            This property concatenates the <see cref="P:Microsoft.Extensions.AI.ChatMessage.Text" /> of all <see cref="T:Microsoft.Extensions.AI.ChatMessage" />
            instances in <see cref="P:Microsoft.Extensions.AI.ChatResponse.Messages" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChatResponseUpdates">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.ChatResponseUpdate[] ToChatResponseUpdates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.AI.ChatResponseUpdate[] ToChatResponseUpdates() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatResponse.ToChatResponseUpdates" />
      <MemberSignature Language="VB.NET" Value="Public Function ToChatResponseUpdates () As ChatResponseUpdate()" />
      <MemberSignature Language="F#" Value="member this.ToChatResponseUpdates : unit -&gt; Microsoft.Extensions.AI.ChatResponseUpdate[]" Usage="chatResponse.ToChatResponseUpdates " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Microsoft::Extensions::AI::ChatResponseUpdate ^&gt; ^ ToChatResponseUpdates();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.ChatResponseUpdate[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an array of <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> instances that represent this <see cref="T:Microsoft.Extensions.AI.ChatResponse" />.</summary>
        <returns>An array of <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> instances that may be used to represent this <see cref="T:Microsoft.Extensions.AI.ChatResponse" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatResponse.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="chatResponse.ToString " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Usage">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.UsageDetails? Usage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.UsageDetails Usage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponse.Usage" />
      <MemberSignature Language="VB.NET" Value="Public Property Usage As UsageDetails" />
      <MemberSignature Language="F#" Value="member this.Usage : Microsoft.Extensions.AI.UsageDetails with get, set" Usage="Microsoft.Extensions.AI.ChatResponse.Usage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::AI::UsageDetails ^ Usage { Microsoft::Extensions::AI::UsageDetails ^ get(); void set(Microsoft::Extensions::AI::UsageDetails ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.UsageDetails</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets usage details for the chat response.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

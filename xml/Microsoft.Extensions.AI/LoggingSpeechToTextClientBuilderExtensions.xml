<Type Name="LoggingSpeechToTextClientBuilderExtensions" FullName="Microsoft.Extensions.AI.LoggingSpeechToTextClientBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class LoggingSpeechToTextClientBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LoggingSpeechToTextClientBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.LoggingSpeechToTextClientBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module LoggingSpeechToTextClientBuilderExtensions" />
  <TypeSignature Language="F#" Value="type LoggingSpeechToTextClientBuilderExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoggingSpeechToTextClientBuilderExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
    <AssemblyVersion>9.5.0.0</AssemblyVersion>
    <AssemblyVersion>9.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("MEAI001")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("MEAI001")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides extensions for configuring <see cref="T:Microsoft.Extensions.AI.LoggingSpeechToTextClient" /> instances.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="UseLogging">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.AI.SpeechToTextClientBuilder UseLogging (this Microsoft.Extensions.AI.SpeechToTextClientBuilder builder, Microsoft.Extensions.Logging.ILoggerFactory? loggerFactory = default, Action&lt;Microsoft.Extensions.AI.LoggingSpeechToTextClient&gt;? configure = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.AI.SpeechToTextClientBuilder UseLogging(class Microsoft.Extensions.AI.SpeechToTextClientBuilder builder, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, class System.Action`1&lt;class Microsoft.Extensions.AI.LoggingSpeechToTextClient&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.LoggingSpeechToTextClientBuilderExtensions.UseLogging(Microsoft.Extensions.AI.SpeechToTextClientBuilder,Microsoft.Extensions.Logging.ILoggerFactory,System.Action{Microsoft.Extensions.AI.LoggingSpeechToTextClient})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseLogging (builder As SpeechToTextClientBuilder, Optional loggerFactory As ILoggerFactory = Nothing, Optional configure As Action(Of LoggingSpeechToTextClient) = Nothing) As SpeechToTextClientBuilder" />
      <MemberSignature Language="F#" Value="static member UseLogging : Microsoft.Extensions.AI.SpeechToTextClientBuilder * Microsoft.Extensions.Logging.ILoggerFactory * Action&lt;Microsoft.Extensions.AI.LoggingSpeechToTextClient&gt; -&gt; Microsoft.Extensions.AI.SpeechToTextClientBuilder" Usage="Microsoft.Extensions.AI.LoggingSpeechToTextClientBuilderExtensions.UseLogging (builder, loggerFactory, configure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.SpeechToTextClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.AI.SpeechToTextClientBuilder" RefType="this" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.AI.LoggingSpeechToTextClient&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.Extensions.AI.SpeechToTextClientBuilder" />.</param>
        <param name="loggerFactory">
            An optional <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> used to create a logger with which logging should be performed.
            If not supplied, a required instance will be resolved from the service provider.
            </param>
        <param name="configure">An optional callback that can be used to configure the <see cref="T:Microsoft.Extensions.AI.LoggingSpeechToTextClient" /> instance.</param>
        <summary>Adds logging to the audio transcription client pipeline.</summary>
        <returns>The <paramref name="builder" />.</returns>
        <remarks>
          <para>
            When the employed <see cref="T:Microsoft.Extensions.Logging.ILogger" /> enables <see cref="F:Microsoft.Extensions.Logging.LogLevel.Trace" />, the contents of
            messages and options are logged. These messages and options may contain sensitive application data.
            <see cref="F:Microsoft.Extensions.Logging.LogLevel.Trace" /> is disabled by default and should never be enabled in a production environment.
            Messages and options are not logged at other logging levels.
            </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

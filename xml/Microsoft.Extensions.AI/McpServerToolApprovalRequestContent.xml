<Type Name="McpServerToolApprovalRequestContent" FullName="Microsoft.Extensions.AI.McpServerToolApprovalRequestContent">
  <TypeSignature Language="C#" Value="public sealed class McpServerToolApprovalRequestContent : Microsoft.Extensions.AI.UserInputRequestContent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit McpServerToolApprovalRequestContent extends Microsoft.Extensions.AI.UserInputRequestContent" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.McpServerToolApprovalRequestContent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class McpServerToolApprovalRequestContent&#xA;Inherits UserInputRequestContent" />
  <TypeSignature Language="F#" Value="type McpServerToolApprovalRequestContent = class&#xA;    inherit UserInputRequestContent" />
  <TypeSignature Language="C++ CLI" Value="public ref class McpServerToolApprovalRequestContent sealed : Microsoft::Extensions::AI::UserInputRequestContent" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
    <AssemblyVersion>9.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Extensions.AI.UserInputRequestContent</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("MEAI001")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("MEAI001")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Represents a request for user approval of an MCP server tool call.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public McpServerToolApprovalRequestContent (string id, Microsoft.Extensions.AI.McpServerToolCallContent toolCall);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, class Microsoft.Extensions.AI.McpServerToolCallContent toolCall) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.McpServerToolApprovalRequestContent.#ctor(System.String,Microsoft.Extensions.AI.McpServerToolCallContent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As String, toolCall As McpServerToolCallContent)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.McpServerToolApprovalRequestContent : string * Microsoft.Extensions.AI.McpServerToolCallContent -&gt; Microsoft.Extensions.AI.McpServerToolApprovalRequestContent" Usage="new Microsoft.Extensions.AI.McpServerToolApprovalRequestContent (id, toolCall)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; McpServerToolApprovalRequestContent(System::String ^ id, Microsoft::Extensions::AI::McpServerToolCallContent ^ toolCall);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="toolCall" Type="Microsoft.Extensions.AI.McpServerToolCallContent" />
      </Parameters>
      <Docs>
        <param name="id">The ID that uniquely identifies the MCP server tool approval request/response pair.</param>
        <param name="toolCall">The tool call that requires user approval.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.McpServerToolApprovalRequestContent" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="toolCall" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="id" /> is empty or composed entirely of whitespace.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResponse">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.McpServerToolApprovalResponseContent CreateResponse (bool approved);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.AI.McpServerToolApprovalResponseContent CreateResponse(bool approved) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.McpServerToolApprovalRequestContent.CreateResponse(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateResponse (approved As Boolean) As McpServerToolApprovalResponseContent" />
      <MemberSignature Language="F#" Value="member this.CreateResponse : bool -&gt; Microsoft.Extensions.AI.McpServerToolApprovalResponseContent" Usage="mcpServerToolApprovalRequestContent.CreateResponse approved" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::AI::McpServerToolApprovalResponseContent ^ CreateResponse(bool approved);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.McpServerToolApprovalResponseContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="approved" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="approved">
          <see langword="true" /> if the function call is approved; otherwise, <see langword="false" />.</param>
        <summary>
            Creates a <see cref="T:Microsoft.Extensions.AI.McpServerToolApprovalResponseContent" /> to indicate whether the function call is approved or rejected based on the value of <paramref name="approved" />.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.AI.FunctionApprovalResponseContent" /> representing the approval response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolCall">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.McpServerToolCallContent ToolCall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.McpServerToolCallContent ToolCall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.McpServerToolApprovalRequestContent.ToolCall" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolCall As McpServerToolCallContent" />
      <MemberSignature Language="F#" Value="member this.ToolCall : Microsoft.Extensions.AI.McpServerToolCallContent" Usage="Microsoft.Extensions.AI.McpServerToolApprovalRequestContent.ToolCall" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::AI::McpServerToolCallContent ^ ToolCall { Microsoft::Extensions::AI::McpServerToolCallContent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.McpServerToolCallContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the tool call that pre-invoke approval is required for.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="AIJsonSchemaTransformContext" FullName="Microsoft.Extensions.AI.AIJsonSchemaTransformContext">
  <TypeSignature Language="C#" Value="public readonly struct AIJsonSchemaTransformContext" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit AIJsonSchemaTransformContext extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.AIJsonSchemaTransformContext" />
  <TypeSignature Language="VB.NET" Value="Public Structure AIJsonSchemaTransformContext" />
  <TypeSignature Language="F#" Value="type AIJsonSchemaTransformContext = struct" />
  <TypeSignature Language="C++ CLI" Value="public value class AIJsonSchemaTransformContext" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
    <AssemblyVersion>9.5.0.0</AssemblyVersion>
    <AssemblyVersion>9.6.0.0</AssemblyVersion>
    <AssemblyVersion>9.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Defines the context for transforming a schema node withing a larger schema document.
            </summary>
    <remarks>
            This struct is being passed to the user-provided <see cref="P:Microsoft.Extensions.AI.AIJsonSchemaTransformOptions.TransformSchemaNode" /> 
            callback by the <see cref="M:Microsoft.Extensions.AI.AIJsonUtilities.CreateJsonSchema(System.Type,System.String,System.Boolean,System.Object,System.Text.Json.JsonSerializerOptions,Microsoft.Extensions.AI.AIJsonSchemaCreateOptions)" /> method and cannot be instantiated directly.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsCollectionElementSchema">
      <MemberSignature Language="C#" Value="public bool IsCollectionElementSchema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollectionElementSchema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.AIJsonSchemaTransformContext.IsCollectionElementSchema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCollectionElementSchema As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsCollectionElementSchema : bool" Usage="Microsoft.Extensions.AI.AIJsonSchemaTransformContext.IsCollectionElementSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCollectionElementSchema { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether the current schema is a collection element.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDictionaryValueSchema">
      <MemberSignature Language="C#" Value="public bool IsDictionaryValueSchema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDictionaryValueSchema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.AIJsonSchemaTransformContext.IsDictionaryValueSchema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDictionaryValueSchema As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsDictionaryValueSchema : bool" Usage="Microsoft.Extensions.AI.AIJsonSchemaTransformContext.IsDictionaryValueSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDictionaryValueSchema { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether the current schema is a dictionary value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;string&gt; Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;string&gt; Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.AIJsonSchemaTransformContext.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As ReadOnlySpan(Of String)" />
      <MemberSignature Language="F#" Value="member this.Path : ReadOnlySpan&lt;string&gt;" Usage="Microsoft.Extensions.AI.AIJsonSchemaTransformContext.Path" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlySpan&lt;System::String ^&gt; Path { ReadOnlySpan&lt;System::String ^&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the path to the schema document currently being generated.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public string? PropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.AIJsonSchemaTransformContext.PropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyName As String" />
      <MemberSignature Language="F#" Value="member this.PropertyName : string" Usage="Microsoft.Extensions.AI.AIJsonSchemaTransformContext.PropertyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PropertyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the containing property name if the current schema is a property of an object.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

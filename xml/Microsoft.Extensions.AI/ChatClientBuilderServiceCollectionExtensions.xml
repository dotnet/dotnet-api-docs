<Type Name="ChatClientBuilderServiceCollectionExtensions" FullName="Microsoft.Extensions.AI.ChatClientBuilderServiceCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class ChatClientBuilderServiceCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ChatClientBuilderServiceCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.ChatClientBuilderServiceCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ChatClientBuilderServiceCollectionExtensions" />
  <TypeSignature Language="F#" Value="type ChatClientBuilderServiceCollectionExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChatClientBuilderServiceCollectionExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides extension methods for registering <see cref="T:Microsoft.Extensions.AI.IChatClient" /> with a <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddChatClient">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddChatClient (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Func&lt;Microsoft.Extensions.AI.ChatClientBuilder,Microsoft.Extensions.AI.IChatClient&gt; clientFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddChatClient(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Func`2&lt;class Microsoft.Extensions.AI.ChatClientBuilder, class Microsoft.Extensions.AI.IChatClient&gt; clientFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatClientBuilderServiceCollectionExtensions.AddChatClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{Microsoft.Extensions.AI.ChatClientBuilder,Microsoft.Extensions.AI.IChatClient})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddChatClient (services As IServiceCollection, clientFactory As Func(Of ChatClientBuilder, IChatClient)) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddChatClient : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;Microsoft.Extensions.AI.ChatClientBuilder, Microsoft.Extensions.AI.IChatClient&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.AI.ChatClientBuilderServiceCollectionExtensions.AddChatClient (services, clientFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddChatClient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Func&lt;Microsoft::Extensions::AI::ChatClientBuilder ^, Microsoft::Extensions::AI::IChatClient ^&gt; ^ clientFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="clientFactory" Type="System.Func&lt;Microsoft.Extensions.AI.ChatClientBuilder,Microsoft.Extensions.AI.IChatClient&gt;" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to which the client should be added.</param>
        <param name="clientFactory">The factory to use to construct the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> instance.</param>
        <summary>Adds a chat client to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</summary>
        <returns>The <paramref name="services" /> collection.</returns>
        <remarks>The client is registered as a scoped service.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyedChatClient">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddKeyedChatClient (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, object serviceKey, Func&lt;Microsoft.Extensions.AI.ChatClientBuilder,Microsoft.Extensions.AI.IChatClient&gt; clientFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddKeyedChatClient(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, object serviceKey, class System.Func`2&lt;class Microsoft.Extensions.AI.ChatClientBuilder, class Microsoft.Extensions.AI.IChatClient&gt; clientFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatClientBuilderServiceCollectionExtensions.AddKeyedChatClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{Microsoft.Extensions.AI.ChatClientBuilder,Microsoft.Extensions.AI.IChatClient})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddKeyedChatClient (services As IServiceCollection, serviceKey As Object, clientFactory As Func(Of ChatClientBuilder, IChatClient)) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddKeyedChatClient : Microsoft.Extensions.DependencyInjection.IServiceCollection * obj * Func&lt;Microsoft.Extensions.AI.ChatClientBuilder, Microsoft.Extensions.AI.IChatClient&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.AI.ChatClientBuilderServiceCollectionExtensions.AddKeyedChatClient (services, serviceKey, clientFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddKeyedChatClient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::Object ^ serviceKey, Func&lt;Microsoft::Extensions::AI::ChatClientBuilder ^, Microsoft::Extensions::AI::IChatClient ^&gt; ^ clientFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="serviceKey" Type="System.Object" />
        <Parameter Name="clientFactory" Type="System.Func&lt;Microsoft.Extensions.AI.ChatClientBuilder,Microsoft.Extensions.AI.IChatClient&gt;" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to which the client should be added.</param>
        <param name="serviceKey">The key with which to associate the client.</param>
        <param name="clientFactory">The factory to use to construct the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> instance.</param>
        <summary>Adds a chat client to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</summary>
        <returns>The <paramref name="services" /> collection.</returns>
        <remarks>The client is registered as a scoped service.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

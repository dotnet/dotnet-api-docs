<Type Name="AIContent" FullName="Microsoft.Extensions.AI.AIContent">
  <TypeSignature Language="C#" Value="public class AIContent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AIContent extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.AIContent" />
  <TypeSignature Language="VB.NET" Value="Public Class AIContent" />
  <TypeSignature Language="F#" Value="type AIContent = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class AIContent" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Text.Json.Serialization.JsonDerivedType(typeof(Microsoft.Extensions.AI.AudioContent), "audio")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonDerivedType(typeof(Microsoft.Extensions.AI.AudioContent), "audio")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Text.Json.Serialization.JsonDerivedType(typeof(Microsoft.Extensions.AI.DataContent), "data")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonDerivedType(typeof(Microsoft.Extensions.AI.DataContent), "data")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Text.Json.Serialization.JsonDerivedType(typeof(Microsoft.Extensions.AI.FunctionCallContent), "functionCall")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonDerivedType(typeof(Microsoft.Extensions.AI.FunctionCallContent), "functionCall")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Text.Json.Serialization.JsonDerivedType(typeof(Microsoft.Extensions.AI.FunctionResultContent), "functionResult")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonDerivedType(typeof(Microsoft.Extensions.AI.FunctionResultContent), "functionResult")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Text.Json.Serialization.JsonDerivedType(typeof(Microsoft.Extensions.AI.ImageContent), "image")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonDerivedType(typeof(Microsoft.Extensions.AI.ImageContent), "image")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Text.Json.Serialization.JsonDerivedType(typeof(Microsoft.Extensions.AI.TextContent), "text")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonDerivedType(typeof(Microsoft.Extensions.AI.TextContent), "text")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Text.Json.Serialization.JsonDerivedType(typeof(Microsoft.Extensions.AI.UsageContent), "usage")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonDerivedType(typeof(Microsoft.Extensions.AI.UsageContent), "usage")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Text.Json.Serialization.JsonPolymorphic(TypeDiscriminatorPropertyName="$type")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonPolymorphic(TypeDiscriminatorPropertyName="$type")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides a base class for all content used with AI services.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AIContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.AIContent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AIContent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AIContent" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.AdditionalPropertiesDictionary? AdditionalProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.AdditionalPropertiesDictionary AdditionalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.AIContent.AdditionalProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property AdditionalProperties As AdditionalPropertiesDictionary" />
      <MemberSignature Language="F#" Value="member this.AdditionalProperties : Microsoft.Extensions.AI.AdditionalPropertiesDictionary with get, set" Usage="Microsoft.Extensions.AI.AIContent.AdditionalProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::AI::AdditionalPropertiesDictionary ^ AdditionalProperties { Microsoft::Extensions::AI::AdditionalPropertiesDictionary ^ get(); void set(Microsoft::Extensions::AI::AdditionalPropertiesDictionary ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.AdditionalPropertiesDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets additional properties for the content.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RawRepresentation">
      <MemberSignature Language="C#" Value="public object? RawRepresentation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RawRepresentation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.AIContent.RawRepresentation" />
      <MemberSignature Language="VB.NET" Value="Public Property RawRepresentation As Object" />
      <MemberSignature Language="F#" Value="member this.RawRepresentation : obj with get, set" Usage="Microsoft.Extensions.AI.AIContent.RawRepresentation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RawRepresentation { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonIgnore&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the raw representation of the content from an underlying implementation.</summary>
        <value>To be added.</value>
        <remarks>
            If an <see cref="T:Microsoft.Extensions.AI.AIContent" /> is created to represent some underlying object from another object
            model, this property can be used to store that original object. This can be useful for debugging or
            for enabling a consumer to access the underlying object model if needed.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ChatResponseExtensions" FullName="Microsoft.Extensions.AI.ChatResponseExtensions">
  <TypeSignature Language="C#" Value="public static class ChatResponseExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ChatResponseExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.ChatResponseExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ChatResponseExtensions" />
  <TypeSignature Language="F#" Value="type ChatResponseExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChatResponseExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Provides extension methods for working with <see cref="T:Microsoft.Extensions.AI.ChatResponse" /> and <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> instances.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddMessages">
      <MemberSignature Language="C#" Value="public static void AddMessages (this System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; list, Microsoft.Extensions.AI.ChatResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMessages(class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; list, class Microsoft.Extensions.AI.ChatResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatResponseExtensions.AddMessages(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatResponse)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddMessages (list As IList(Of ChatMessage), response As ChatResponse)" />
      <MemberSignature Language="F#" Value="static member AddMessages : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; * Microsoft.Extensions.AI.ChatResponse -&gt; unit" Usage="Microsoft.Extensions.AI.ChatResponseExtensions.AddMessages (list, response)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddMessages(System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ list, Microsoft::Extensions::AI::ChatResponse ^ response);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;" RefType="this" />
        <Parameter Name="response" Type="Microsoft.Extensions.AI.ChatResponse" />
      </Parameters>
      <Docs>
        <param name="list">The destination list to which the messages from <paramref name="response" /> should be added.</param>
        <param name="response">The response containing the messages to add.</param>
        <summary>Adds all of the messages from <paramref name="response" /> into <paramref name="list" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="response" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMessages">
      <MemberSignature Language="C#" Value="public static void AddMessages (this System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; list, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt; updates);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMessages(class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; list, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.ChatResponseUpdate&gt; updates) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatResponseExtensions.AddMessages(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatResponseUpdate})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddMessages (list As IList(Of ChatMessage), updates As IEnumerable(Of ChatResponseUpdate))" />
      <MemberSignature Language="F#" Value="static member AddMessages : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; * seq&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt; -&gt; unit" Usage="Microsoft.Extensions.AI.ChatResponseExtensions.AddMessages (list, updates)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddMessages(System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ list, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::AI::ChatResponseUpdate ^&gt; ^ updates);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;" RefType="this" />
        <Parameter Name="updates" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt;" />
      </Parameters>
      <Docs>
        <param name="list">The destination list to which the newly constructed messages should be added.</param>
        <param name="updates">The <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> instances to convert to messages and add to the list.</param>
        <summary>Converts the <paramref name="updates" /> into <see cref="T:Microsoft.Extensions.AI.ChatMessage" /> instances and adds them to <paramref name="list" />.</summary>
        <remarks>
            As part of combining <paramref name="updates" /> into a series of <see cref="T:Microsoft.Extensions.AI.ChatMessage" /> instances, the
            method may use <see cref="P:Microsoft.Extensions.AI.ChatResponseUpdate.MessageId" /> to determine message boundaries, as well as coalesce
            contiguous <see cref="T:Microsoft.Extensions.AI.AIContent" /> items where applicable, e.g. multiple
            <see cref="T:Microsoft.Extensions.AI.TextContent" /> instances in a row may be combined into a single <see cref="T:Microsoft.Extensions.AI.TextContent" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="updates" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMessages">
      <MemberSignature Language="C#" Value="public static void AddMessages (this System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; list, Microsoft.Extensions.AI.ChatResponseUpdate update, Func&lt;Microsoft.Extensions.AI.AIContent,bool&gt;? filter = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMessages(class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; list, class Microsoft.Extensions.AI.ChatResponseUpdate update, class System.Func`2&lt;class Microsoft.Extensions.AI.AIContent, bool&gt; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatResponseExtensions.AddMessages(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatResponseUpdate,System.Func{Microsoft.Extensions.AI.AIContent,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddMessages (list As IList(Of ChatMessage), update As ChatResponseUpdate, Optional filter As Func(Of AIContent, Boolean) = Nothing)" />
      <MemberSignature Language="F#" Value="static member AddMessages : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; * Microsoft.Extensions.AI.ChatResponseUpdate * Func&lt;Microsoft.Extensions.AI.AIContent, bool&gt; -&gt; unit" Usage="Microsoft.Extensions.AI.ChatResponseExtensions.AddMessages (list, update, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;" RefType="this" />
        <Parameter Name="update" Type="Microsoft.Extensions.AI.ChatResponseUpdate" />
        <Parameter Name="filter" Type="System.Func&lt;Microsoft.Extensions.AI.AIContent,System.Boolean&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="list">The destination list to which the newly constructed message should be added.</param>
        <param name="update">The <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> instance to convert to a message and add to the list.</param>
        <param name="filter">A predicate to filter which <see cref="T:Microsoft.Extensions.AI.AIContent" /> gets included in the message.</param>
        <summary>Converts the <paramref name="update" /> into a <see cref="T:Microsoft.Extensions.AI.ChatMessage" /> instance and adds it to <paramref name="list" />.</summary>
        <remarks>
            If the <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> has no content, or all its content gets excluded by <paramref name="filter" />, then
            no <see cref="T:Microsoft.Extensions.AI.ChatMessage" /> will be added to the <paramref name="list" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="update" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMessagesAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AddMessagesAsync (this System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; list, System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt; updates, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AddMessagesAsync(class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; list, class System.Collections.Generic.IAsyncEnumerable`1&lt;class Microsoft.Extensions.AI.ChatResponseUpdate&gt; updates, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatResponseExtensions.AddMessagesAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},System.Collections.Generic.IAsyncEnumerable{Microsoft.Extensions.AI.ChatResponseUpdate},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMessagesAsync (list As IList(Of ChatMessage), updates As IAsyncEnumerable(Of ChatResponseUpdate), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="static member AddMessagesAsync : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; * System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Extensions.AI.ChatResponseExtensions.AddMessagesAsync (list, updates, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;" RefType="this" />
        <Parameter Name="updates" Type="System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="list">The list to which the newly constructed messages should be added.</param>
        <param name="updates">The <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> instances to convert to messages and add to the list.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>Converts the <paramref name="updates" /> into <see cref="T:Microsoft.Extensions.AI.ChatMessage" /> instances and adds them to <paramref name="list" />.</summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the completion of the operation.</returns>
        <remarks>
            As part of combining <paramref name="updates" /> into a series of <see cref="T:Microsoft.Extensions.AI.ChatMessage" /> instances, tne
            method may use <see cref="P:Microsoft.Extensions.AI.ChatResponseUpdate.MessageId" /> to determine message boundaries, as well as coalesce
            contiguous <see cref="T:Microsoft.Extensions.AI.AIContent" /> items where applicable, e.g. multiple
            <see cref="T:Microsoft.Extensions.AI.TextContent" /> instances in a row may be combined into a single <see cref="T:Microsoft.Extensions.AI.TextContent" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="updates" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToChatResponse">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.AI.ChatResponse ToChatResponse (this System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt; updates);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.AI.ChatResponse ToChatResponse(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.ChatResponseUpdate&gt; updates) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatResponseExtensions.ToChatResponse(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatResponseUpdate})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToChatResponse (updates As IEnumerable(Of ChatResponseUpdate)) As ChatResponse" />
      <MemberSignature Language="F#" Value="static member ToChatResponse : seq&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt; -&gt; Microsoft.Extensions.AI.ChatResponse" Usage="Microsoft.Extensions.AI.ChatResponseExtensions.ToChatResponse updates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::AI::ChatResponse ^ ToChatResponse(System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::AI::ChatResponseUpdate ^&gt; ^ updates);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.ChatResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updates" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="updates">The updates to be combined.</param>
        <summary>Combines <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> instances into a single <see cref="T:Microsoft.Extensions.AI.ChatResponse" />.</summary>
        <returns>The combined <see cref="T:Microsoft.Extensions.AI.ChatResponse" />.</returns>
        <remarks>
            As part of combining <paramref name="updates" /> into a single <see cref="T:Microsoft.Extensions.AI.ChatResponse" />, the method will attempt to reconstruct
            <see cref="T:Microsoft.Extensions.AI.ChatMessage" /> instances. This includes using <see cref="P:Microsoft.Extensions.AI.ChatResponseUpdate.MessageId" /> to determine
            message boundaries, as well as coalescing contiguous <see cref="T:Microsoft.Extensions.AI.AIContent" /> items where applicable, e.g. multiple
            <see cref="T:Microsoft.Extensions.AI.TextContent" /> instances in a row may be combined into a single <see cref="T:Microsoft.Extensions.AI.TextContent" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="updates" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToChatResponseAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ChatResponse&gt; ToChatResponseAsync (this System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt; updates, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Extensions.AI.ChatResponse&gt; ToChatResponseAsync(class System.Collections.Generic.IAsyncEnumerable`1&lt;class Microsoft.Extensions.AI.ChatResponseUpdate&gt; updates, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatResponseExtensions.ToChatResponseAsync(System.Collections.Generic.IAsyncEnumerable{Microsoft.Extensions.AI.ChatResponseUpdate},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToChatResponseAsync (updates As IAsyncEnumerable(Of ChatResponseUpdate), Optional cancellationToken As CancellationToken = Nothing) As Task(Of ChatResponse)" />
      <MemberSignature Language="F#" Value="static member ToChatResponseAsync : System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ChatResponse&gt;" Usage="Microsoft.Extensions.AI.ChatResponseExtensions.ToChatResponseAsync (updates, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ChatResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updates" Type="System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="updates">The updates to be combined.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>Combines <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> instances into a single <see cref="T:Microsoft.Extensions.AI.ChatResponse" />.</summary>
        <returns>The combined <see cref="T:Microsoft.Extensions.AI.ChatResponse" />.</returns>
        <remarks>
            As part of combining <paramref name="updates" /> into a single <see cref="T:Microsoft.Extensions.AI.ChatResponse" />, the method will attempt to reconstruct
            <see cref="T:Microsoft.Extensions.AI.ChatMessage" /> instances. This includes using <see cref="P:Microsoft.Extensions.AI.ChatResponseUpdate.MessageId" /> to determine
            message boundaries, as well as coalescing contiguous <see cref="T:Microsoft.Extensions.AI.AIContent" /> items where applicable, e.g. multiple
            <see cref="T:Microsoft.Extensions.AI.TextContent" /> instances in a row may be combined into a single <see cref="T:Microsoft.Extensions.AI.TextContent" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="updates" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

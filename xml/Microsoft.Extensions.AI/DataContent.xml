<Type Name="DataContent" FullName="Microsoft.Extensions.AI.DataContent">
  <TypeSignature Language="C#" Value="public class DataContent : Microsoft.Extensions.AI.AIContent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataContent extends Microsoft.Extensions.AI.AIContent" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.DataContent" />
  <TypeSignature Language="VB.NET" Value="Public Class DataContent&#xA;Inherits AIContent" />
  <TypeSignature Language="F#" Value="type DataContent = class&#xA;    inherit AIContent" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContent : Microsoft::Extensions::AI::AIContent" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.1.0.0</AssemblyVersion>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
    <AssemblyVersion>9.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Extensions.AI.AIContent</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{DebuggerDisplay,nq}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{DebuggerDisplay,nq}")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Represents binary content with an associated media type (also known as MIME type).
            </summary>
    <remarks>
      <para>
            The content represents in-memory data. For references to data at a remote URI, use <see cref="T:Microsoft.Extensions.AI.UriContent" /> instead.
            </para>
      <para>
        <see cref="P:Microsoft.Extensions.AI.DataContent.Uri" /> always returns a valid URI string, even if the instance was constructed from
            a <see cref="T:System.ReadOnlyMemory`1" />. In that case, a data URI will be constructed and returned.
            </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContent (ReadOnlyMemory&lt;byte&gt; data, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; data, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.DataContent.#ctor(System.ReadOnlyMemory{System.Byte},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As ReadOnlyMemory(Of Byte), mediaType As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.DataContent : ReadOnlyMemory&lt;byte&gt; * string -&gt; Microsoft.Extensions.AI.DataContent" Usage="new Microsoft.Extensions.AI.DataContent (data, mediaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContent(ReadOnlyMemory&lt;System::Byte&gt; data, System::String ^ mediaType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="mediaType" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">The byte contents.</param>
        <param name="mediaType">The media type (also known as MIME type) represented by the content.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.DataContent" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="mediaType" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="mediaType" /> is empty or composed entirely of whitespace.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContent (string uri, string? mediaType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.DataContent.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As String, Optional mediaType As String = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.DataContent : string * string -&gt; Microsoft.Extensions.AI.DataContent" Usage="new Microsoft.Extensions.AI.DataContent (uri, mediaType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonConstructor]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonConstructor&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="uri" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("Uri")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("Uri")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="mediaType" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">The data URI containing the content.</param>
        <param name="mediaType">The media type (also known as MIME type) represented by the content.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.DataContent" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uri" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="mediaType" /> is an invalid media type.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContent (Uri uri, string? mediaType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.DataContent.#ctor(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As Uri, Optional mediaType As String = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.DataContent : Uri * string -&gt; Microsoft.Extensions.AI.DataContent" Usage="new Microsoft.Extensions.AI.DataContent (uri, mediaType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">The data URI containing the content.</param>
        <param name="mediaType">
            The media type (also known as MIME type) represented by the content. If not provided,
            it must be provided as part of the <paramref name="uri" />.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.DataContent" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uri" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="mediaType" /> is an invalid media type.</exception>
      </Docs>
    </Member>
    <Member MemberName="Base64Data">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;char&gt; Base64Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlyMemory`1&lt;char&gt; Base64Data" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.DataContent.Base64Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Base64Data As ReadOnlyMemory(Of Char)" />
      <MemberSignature Language="F#" Value="member this.Base64Data : ReadOnlyMemory&lt;char&gt;" Usage="Microsoft.Extensions.AI.DataContent.Base64Data" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlyMemory&lt;char&gt; Base64Data { ReadOnlyMemory&lt;char&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonIgnore&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the data represented by this instance as a Base64 character sequence.</summary>
        <value>The base64 representation of the data.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;byte&gt; Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; Data" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.DataContent.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As ReadOnlyMemory(Of Byte)" />
      <MemberSignature Language="F#" Value="member this.Data : ReadOnlyMemory&lt;byte&gt;" Usage="Microsoft.Extensions.AI.DataContent.Data" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlyMemory&lt;System::Byte&gt; Data { ReadOnlyMemory&lt;System::Byte&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonIgnore&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the data represented by this instance.</summary>
        <value>To be added.</value>
        <remarks>
            If the instance was constructed from a <see cref="T:System.ReadOnlyMemory`1" />, this property returns that data.
            If the instance was constructed from a data URI, this property the data contained within the data URI.
            If, however, the instance was constructed from another form of URI, one that simply references where the
            data can be found but doesn't actually contain the data, this property returns <see langword="null" />;
            no attempt is made to retrieve the data from that URI.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTopLevelMediaType">
      <MemberSignature Language="C#" Value="public bool HasTopLevelMediaType (string topLevelType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasTopLevelMediaType(string topLevelType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.DataContent.HasTopLevelMediaType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasTopLevelMediaType (topLevelType As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasTopLevelMediaType : string -&gt; bool" Usage="dataContent.HasTopLevelMediaType topLevelType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasTopLevelMediaType(System::String ^ topLevelType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topLevelType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="topLevelType">The type to compare against <see cref="P:Microsoft.Extensions.AI.DataContent.MediaType" />.</param>
        <summary>
            Determines whether the <see cref="P:Microsoft.Extensions.AI.DataContent.MediaType" />'s top-level type matches the specified <paramref name="topLevelType" />.
            </summary>
        <returns>
          <see langword="true" /> if the type portion of <see cref="P:Microsoft.Extensions.AI.DataContent.MediaType" /> matches the specified value; otherwise, false.</returns>
        <remarks>
            A media type is primarily composed of two parts, a "type" and a "subtype", separated by a slash ("/").
            The type portion is also referred to as the "top-level type"; for example,
            "image/png" has a top-level type of "image". <see cref="M:Microsoft.Extensions.AI.DataContent.HasTopLevelMediaType(System.String)" /> compares
            the specified <paramref name="topLevelType" /> against the type portion of <see cref="P:Microsoft.Extensions.AI.DataContent.MediaType" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaType">
      <MemberSignature Language="C#" Value="public string MediaType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MediaType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.DataContent.MediaType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MediaType As String" />
      <MemberSignature Language="F#" Value="member this.MediaType : string" Usage="Microsoft.Extensions.AI.DataContent.MediaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MediaType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonIgnore&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the media type (also known as MIME type) of the content.</summary>
        <value>To be added.</value>
        <remarks>
            If the media type was explicitly specified, this property returns that value.
            If the media type was not explicitly specified, but a data URI was supplied and that data URI contained a non-default
            media type, that media type is returned.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public string Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.DataContent.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As String" />
      <MemberSignature Language="F#" Value="member this.Uri : string" Usage="Microsoft.Extensions.AI.DataContent.Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uri { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("Uri")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("Uri")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the data URI for this <see cref="T:Microsoft.Extensions.AI.DataContent" />.</summary>
        <value>To be added.</value>
        <remarks>
            The returned URI is always a valid data URI string, even if the instance was constructed from a <see cref="T:System.ReadOnlyMemory`1" />
            or from a <see cref="T:System.Uri" />.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

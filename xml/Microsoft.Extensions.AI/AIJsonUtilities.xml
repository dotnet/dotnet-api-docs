<Type Name="AIJsonUtilities" FullName="Microsoft.Extensions.AI.AIJsonUtilities">
  <TypeSignature Language="C#" Value="public static class AIJsonUtilities" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AIJsonUtilities extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.AIJsonUtilities" />
  <TypeSignature Language="VB.NET" Value="Public Module AIJsonUtilities" />
  <TypeSignature Language="F#" Value="type AIJsonUtilities = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class AIJsonUtilities abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.1.0.0</AssemblyVersion>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides a collection of utility methods for marshalling JSON data.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddAIContentType">
      <MemberSignature Language="C#" Value="public static void AddAIContentType (this System.Text.Json.JsonSerializerOptions options, Type contentType, string typeDiscriminatorId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAIContentType(class System.Text.Json.JsonSerializerOptions options, class System.Type contentType, string typeDiscriminatorId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.AIJsonUtilities.AddAIContentType(System.Text.Json.JsonSerializerOptions,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddAIContentType (options As JsonSerializerOptions, contentType As Type, typeDiscriminatorId As String)" />
      <MemberSignature Language="F#" Value="static member AddAIContentType : System.Text.Json.JsonSerializerOptions * Type * string -&gt; unit" Usage="Microsoft.Extensions.AI.AIJsonUtilities.AddAIContentType (options, contentType, typeDiscriminatorId)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddAIContentType(System::Text::Json::JsonSerializerOptions ^ options, Type ^ contentType, System::String ^ typeDiscriminatorId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" RefType="this" />
        <Parameter Name="contentType" Type="System.Type" />
        <Parameter Name="typeDiscriminatorId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="options">The options instance to configure.</param>
        <param name="contentType">The custom content type to configure.</param>
        <param name="typeDiscriminatorId">The type discriminator id for the content type.</param>
        <summary>
            Adds a custom content type to the polymorphic configuration for <see cref="T:Microsoft.Extensions.AI.AIContent" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" />, <paramref name="contentType" />, or <paramref name="typeDiscriminatorId" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contentType" /> is a built-in content type or does not derived from <see cref="T:Microsoft.Extensions.AI.AIContent" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="options" /> is a read-only instance.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAIContentType&lt;TContent&gt;">
      <MemberSignature Language="C#" Value="public static void AddAIContentType&lt;TContent&gt; (this System.Text.Json.JsonSerializerOptions options, string typeDiscriminatorId) where TContent : Microsoft.Extensions.AI.AIContent;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAIContentType&lt;(class Microsoft.Extensions.AI.AIContent) TContent&gt;(class System.Text.Json.JsonSerializerOptions options, string typeDiscriminatorId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.AIJsonUtilities.AddAIContentType``1(System.Text.Json.JsonSerializerOptions,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddAIContentType(Of TContent As AIContent) (options As JsonSerializerOptions, typeDiscriminatorId As String)" />
      <MemberSignature Language="F#" Value="static member AddAIContentType : System.Text.Json.JsonSerializerOptions * string -&gt; unit (requires 'Content :&gt; Microsoft.Extensions.AI.AIContent)" Usage="Microsoft.Extensions.AI.AIJsonUtilities.AddAIContentType (options, typeDiscriminatorId)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TContent&gt;&#xA; where TContent : Microsoft::Extensions::AI::AIContent[System::Runtime::CompilerServices::Extension]&#xA; static void AddAIContentType(System::Text::Json::JsonSerializerOptions ^ options, System::String ^ typeDiscriminatorId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContent">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Extensions.AI.AIContent</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" RefType="this" />
        <Parameter Name="typeDiscriminatorId" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TContent">The custom content type to configure.</typeparam>
        <param name="options">The options instance to configure.</param>
        <param name="typeDiscriminatorId">The type discriminator id for the content type.</param>
        <summary>
            Adds a custom content type to the polymorphic configuration for <see cref="T:Microsoft.Extensions.AI.AIContent" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> or <paramref name="typeDiscriminatorId" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <typeparamref name="TContent" /> is a built-in content type.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="options" /> is a read-only instance.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFunctionJsonSchema">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonElement CreateFunctionJsonSchema (System.Reflection.MethodBase method, string? title = default, string? description = default, System.Text.Json.JsonSerializerOptions? serializerOptions = default, Microsoft.Extensions.AI.AIJsonSchemaCreateOptions? inferenceOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Json.JsonElement CreateFunctionJsonSchema(class System.Reflection.MethodBase method, string title, string description, class System.Text.Json.JsonSerializerOptions serializerOptions, class Microsoft.Extensions.AI.AIJsonSchemaCreateOptions inferenceOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.AIJsonUtilities.CreateFunctionJsonSchema(System.Reflection.MethodBase,System.String,System.String,System.Text.Json.JsonSerializerOptions,Microsoft.Extensions.AI.AIJsonSchemaCreateOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFunctionJsonSchema (method As MethodBase, Optional title As String = Nothing, Optional description As String = Nothing, Optional serializerOptions As JsonSerializerOptions = Nothing, Optional inferenceOptions As AIJsonSchemaCreateOptions = Nothing) As JsonElement" />
      <MemberSignature Language="F#" Value="static member CreateFunctionJsonSchema : System.Reflection.MethodBase * string * string * System.Text.Json.JsonSerializerOptions * Microsoft.Extensions.AI.AIJsonSchemaCreateOptions -&gt; System.Text.Json.JsonElement" Usage="Microsoft.Extensions.AI.AIJsonUtilities.CreateFunctionJsonSchema (method, title, description, serializerOptions, inferenceOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodBase">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="serializerOptions" Type="System.Text.Json.JsonSerializerOptions" />
        <Parameter Name="inferenceOptions" Type="Microsoft.Extensions.AI.AIJsonSchemaCreateOptions" />
      </Parameters>
      <Docs>
        <param name="method">The method from which to extract schema information.</param>
        <param name="title">The title keyword used by the method schema.</param>
        <param name="description">The description keyword used by the method schema.</param>
        <param name="serializerOptions">The options used to extract the schema from the specified type.</param>
        <param name="inferenceOptions">The options controlling schema inference.</param>
        <summary>
            Determines a JSON schema for the provided method.
            </summary>
        <returns>A JSON schema document encoded as a <see cref="T:System.Text.Json.JsonElement" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonSchema">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonElement CreateJsonSchema (Type? type, string? description = default, bool hasDefaultValue = false, object? defaultValue = default, System.Text.Json.JsonSerializerOptions? serializerOptions = default, Microsoft.Extensions.AI.AIJsonSchemaCreateOptions? inferenceOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Json.JsonElement CreateJsonSchema(class System.Type type, string description, bool hasDefaultValue, object defaultValue, class System.Text.Json.JsonSerializerOptions serializerOptions, class Microsoft.Extensions.AI.AIJsonSchemaCreateOptions inferenceOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.AIJsonUtilities.CreateJsonSchema(System.Type,System.String,System.Boolean,System.Object,System.Text.Json.JsonSerializerOptions,Microsoft.Extensions.AI.AIJsonSchemaCreateOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateJsonSchema (type As Type, Optional description As String = Nothing, Optional hasDefaultValue As Boolean = false, Optional defaultValue As Object = Nothing, Optional serializerOptions As JsonSerializerOptions = Nothing, Optional inferenceOptions As AIJsonSchemaCreateOptions = Nothing) As JsonElement" />
      <MemberSignature Language="F#" Value="static member CreateJsonSchema : Type * string * bool * obj * System.Text.Json.JsonSerializerOptions * Microsoft.Extensions.AI.AIJsonSchemaCreateOptions -&gt; System.Text.Json.JsonElement" Usage="Microsoft.Extensions.AI.AIJsonUtilities.CreateJsonSchema (type, description, hasDefaultValue, defaultValue, serializerOptions, inferenceOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="hasDefaultValue" Type="System.Boolean" />
        <Parameter Name="defaultValue" Type="System.Object" />
        <Parameter Name="serializerOptions" Type="System.Text.Json.JsonSerializerOptions" />
        <Parameter Name="inferenceOptions" Type="Microsoft.Extensions.AI.AIJsonSchemaCreateOptions" />
      </Parameters>
      <Docs>
        <param name="type">The type for which to generate the schema.</param>
        <param name="description">The description of the parameter.</param>
        <param name="hasDefaultValue">
          <see langword="true" /> if the parameter is optional; otherwise, <see langword="false" />.</param>
        <param name="defaultValue">The default value of the optional parameter, if applicable.</param>
        <param name="serializerOptions">The options used to extract the schema from the specified type.</param>
        <param name="inferenceOptions">The options controlling schema inference.</param>
        <summary>Creates a JSON schema for the specified type.</summary>
        <returns>A <see cref="T:System.Text.Json.JsonElement" /> representing the schema.</returns>
        <remarks>
            Uses a cache keyed on the <paramref name="serializerOptions" /> to store schema result,
            unless a <see cref="P:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions.TransformSchemaNode" /> delegate has been specified.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOptions">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonSerializerOptions DefaultOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Json.JsonSerializerOptions DefaultOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.AIJsonUtilities.DefaultOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultOptions As JsonSerializerOptions" />
      <MemberSignature Language="F#" Value="static member DefaultOptions : System.Text.Json.JsonSerializerOptions" Usage="Microsoft.Extensions.AI.AIJsonUtilities.DefaultOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Json::JsonSerializerOptions ^ DefaultOptions { System::Text::Json::JsonSerializerOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonSerializerOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Text.Json.JsonSerializerOptions" /> singleton used as the default in JSON serialization operations.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>For Native AOT or applications disabling <see cref="P:System.Text.Json.JsonSerializer.IsReflectionEnabledByDefault" /> this instance includes source generated contracts
            for all common exchange types contained in the Microsoft.Extensions.AI.Abstractions library.
            </para>
          <para>
            It additionally turns on the following settings:
            <list type="number"><item>Enables the <see cref="P:System.Text.Json.JsonSerializerOptions.WriteIndented" /> property.</item><item>Enables string based enum serialization as implemented by <see cref="T:System.Text.Json.Serialization.JsonStringEnumConverter" />.</item><item>Enables <see cref="F:System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull" /> as the default ignore condition for properties.</item><item>
            Enables <see cref="P:System.Text.Encodings.Web.JavaScriptEncoder.UnsafeRelaxedJsonEscaping" /> when escaping JSON strings.
            Consuming applications must ensure that JSON outputs are adequately escaped before embedding in other document formats, such as HTML and XML.
            </item></list></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

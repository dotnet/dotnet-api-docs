<Type Name="ImageGeneratorExtensions" FullName="Microsoft.Extensions.AI.ImageGeneratorExtensions">
  <TypeSignature Language="C#" Value="public static class ImageGeneratorExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImageGeneratorExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.ImageGeneratorExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ImageGeneratorExtensions" />
  <TypeSignature Language="F#" Value="type ImageGeneratorExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageGeneratorExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
    <AssemblyVersion>9.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("MEAI001")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("MEAI001")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Extensions for <see cref="T:Microsoft.Extensions.AI.IImageGenerator" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EditImageAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ImageGenerationResponse&gt; EditImageAsync (this Microsoft.Extensions.AI.IImageGenerator generator, Microsoft.Extensions.AI.DataContent originalImage, string prompt, Microsoft.Extensions.AI.ImageGenerationOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Extensions.AI.ImageGenerationResponse&gt; EditImageAsync(class Microsoft.Extensions.AI.IImageGenerator generator, class Microsoft.Extensions.AI.DataContent originalImage, string prompt, class Microsoft.Extensions.AI.ImageGenerationOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ImageGeneratorExtensions.EditImageAsync(Microsoft.Extensions.AI.IImageGenerator,Microsoft.Extensions.AI.DataContent,System.String,Microsoft.Extensions.AI.ImageGenerationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EditImageAsync (generator As IImageGenerator, originalImage As DataContent, prompt As String, Optional options As ImageGenerationOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ImageGenerationResponse)" />
      <MemberSignature Language="F#" Value="static member EditImageAsync : Microsoft.Extensions.AI.IImageGenerator * Microsoft.Extensions.AI.DataContent * string * Microsoft.Extensions.AI.ImageGenerationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ImageGenerationResponse&gt;" Usage="Microsoft.Extensions.AI.ImageGeneratorExtensions.EditImageAsync (generator, originalImage, prompt, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ImageGenerationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generator" Type="Microsoft.Extensions.AI.IImageGenerator" RefType="this" />
        <Parameter Name="originalImage" Type="Microsoft.Extensions.AI.DataContent" />
        <Parameter Name="prompt" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.ImageGenerationOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="generator">The image generator.</param>
        <param name="originalImage">The single image to base edits on.</param>
        <param name="prompt">The prompt to guide the image generation.</param>
        <param name="options">The image generation options to configure the request.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>
            Edits a single image based on the original image and the specified prompt.
            </summary>
        <returns>The images generated by the generator.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="generator" />, <paramref name="originalImage" />, or <paramref name="prompt" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EditImageAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ImageGenerationResponse&gt; EditImageAsync (this Microsoft.Extensions.AI.IImageGenerator generator, ReadOnlyMemory&lt;byte&gt; originalImageData, string fileName, string prompt, Microsoft.Extensions.AI.ImageGenerationOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Extensions.AI.ImageGenerationResponse&gt; EditImageAsync(class Microsoft.Extensions.AI.IImageGenerator generator, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; originalImageData, string fileName, string prompt, class Microsoft.Extensions.AI.ImageGenerationOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ImageGeneratorExtensions.EditImageAsync(Microsoft.Extensions.AI.IImageGenerator,System.ReadOnlyMemory{System.Byte},System.String,System.String,Microsoft.Extensions.AI.ImageGenerationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EditImageAsync (generator As IImageGenerator, originalImageData As ReadOnlyMemory(Of Byte), fileName As String, prompt As String, Optional options As ImageGenerationOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ImageGenerationResponse)" />
      <MemberSignature Language="F#" Value="static member EditImageAsync : Microsoft.Extensions.AI.IImageGenerator * ReadOnlyMemory&lt;byte&gt; * string * string * Microsoft.Extensions.AI.ImageGenerationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ImageGenerationResponse&gt;" Usage="Microsoft.Extensions.AI.ImageGeneratorExtensions.EditImageAsync (generator, originalImageData, fileName, prompt, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ImageGenerationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generator" Type="Microsoft.Extensions.AI.IImageGenerator" RefType="this" />
        <Parameter Name="originalImageData" Type="System.ReadOnlyMemory&lt;System.Byte&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="prompt" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.ImageGenerationOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="generator">The image generator.</param>
        <param name="originalImageData">The byte array containing the image data to base edits on.</param>
        <param name="fileName">The filename for the image data.</param>
        <param name="prompt">The prompt to guide the image generation.</param>
        <param name="options">The image generation options to configure the request.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>
            Edits a single image based on a byte array and the specified prompt.
            </summary>
        <returns>The images generated by the generator.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="generator" />, <paramref name="fileName" />, or <paramref name="prompt" /> are <see langword="null" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="EditImagesAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ImageGenerationResponse&gt; EditImagesAsync (this Microsoft.Extensions.AI.IImageGenerator generator, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.AIContent&gt; originalImages, string prompt, Microsoft.Extensions.AI.ImageGenerationOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Extensions.AI.ImageGenerationResponse&gt; EditImagesAsync(class Microsoft.Extensions.AI.IImageGenerator generator, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.AIContent&gt; originalImages, string prompt, class Microsoft.Extensions.AI.ImageGenerationOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ImageGeneratorExtensions.EditImagesAsync(Microsoft.Extensions.AI.IImageGenerator,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.AIContent},System.String,Microsoft.Extensions.AI.ImageGenerationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EditImagesAsync (generator As IImageGenerator, originalImages As IEnumerable(Of AIContent), prompt As String, Optional options As ImageGenerationOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ImageGenerationResponse)" />
      <MemberSignature Language="F#" Value="static member EditImagesAsync : Microsoft.Extensions.AI.IImageGenerator * seq&lt;Microsoft.Extensions.AI.AIContent&gt; * string * Microsoft.Extensions.AI.ImageGenerationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ImageGenerationResponse&gt;" Usage="Microsoft.Extensions.AI.ImageGeneratorExtensions.EditImagesAsync (generator, originalImages, prompt, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ImageGenerationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generator" Type="Microsoft.Extensions.AI.IImageGenerator" RefType="this" />
        <Parameter Name="originalImages" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.AIContent&gt;" />
        <Parameter Name="prompt" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.ImageGenerationOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="generator">The image generator.</param>
        <param name="originalImages">The images to base edits on.</param>
        <param name="prompt">The prompt to guide the image editing.</param>
        <param name="options">The image generation options to configure the request.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>
            Edits images based on original images and a text prompt.
            </summary>
        <returns>The images generated by the generator.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="generator" />, <paramref name="originalImages" />, or <paramref name="prompt" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateImagesAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ImageGenerationResponse&gt; GenerateImagesAsync (this Microsoft.Extensions.AI.IImageGenerator generator, string prompt, Microsoft.Extensions.AI.ImageGenerationOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Extensions.AI.ImageGenerationResponse&gt; GenerateImagesAsync(class Microsoft.Extensions.AI.IImageGenerator generator, string prompt, class Microsoft.Extensions.AI.ImageGenerationOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ImageGeneratorExtensions.GenerateImagesAsync(Microsoft.Extensions.AI.IImageGenerator,System.String,Microsoft.Extensions.AI.ImageGenerationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GenerateImagesAsync (generator As IImageGenerator, prompt As String, Optional options As ImageGenerationOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ImageGenerationResponse)" />
      <MemberSignature Language="F#" Value="static member GenerateImagesAsync : Microsoft.Extensions.AI.IImageGenerator * string * Microsoft.Extensions.AI.ImageGenerationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ImageGenerationResponse&gt;" Usage="Microsoft.Extensions.AI.ImageGeneratorExtensions.GenerateImagesAsync (generator, prompt, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ImageGenerationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generator" Type="Microsoft.Extensions.AI.IImageGenerator" RefType="this" />
        <Parameter Name="prompt" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.ImageGenerationOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="generator">The image generator.</param>
        <param name="prompt">The prompt to guide the image generation.</param>
        <param name="options">The image generation options to configure the request.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>
            Generates images based on a text prompt.
            </summary>
        <returns>The images generated by the generator.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="generator" /> or <paramref name="prompt" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredService">
      <MemberSignature Language="C#" Value="public static object GetRequiredService (this Microsoft.Extensions.AI.IImageGenerator generator, Type serviceType, object? serviceKey = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetRequiredService(class Microsoft.Extensions.AI.IImageGenerator generator, class System.Type serviceType, object serviceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ImageGeneratorExtensions.GetRequiredService(Microsoft.Extensions.AI.IImageGenerator,System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRequiredService (generator As IImageGenerator, serviceType As Type, Optional serviceKey As Object = Nothing) As Object" />
      <MemberSignature Language="F#" Value="static member GetRequiredService : Microsoft.Extensions.AI.IImageGenerator * Type * obj -&gt; obj" Usage="Microsoft.Extensions.AI.ImageGeneratorExtensions.GetRequiredService (generator, serviceType, serviceKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generator" Type="Microsoft.Extensions.AI.IImageGenerator" RefType="this" />
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="serviceKey" Type="System.Object">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="generator">The generator.</param>
        <param name="serviceType">The type of object being requested.</param>
        <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
        <summary>
            Asks the <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> for an object of the specified type <paramref name="serviceType" />
            and throws an exception if one isn't available.
            </summary>
        <returns>The found object.</returns>
        <remarks>
            The purpose of this method is to allow for the retrieval of services that are required to be provided by the <see cref="T:Microsoft.Extensions.AI.IImageGenerator" />,
            including itself or any services it might be wrapping.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serviceType" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">No service of the requested type for the specified key is available.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredService&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static TService GetRequiredService&lt;TService&gt; (this Microsoft.Extensions.AI.IImageGenerator generator, object? serviceKey = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TService GetRequiredService&lt;TService&gt;(class Microsoft.Extensions.AI.IImageGenerator generator, object serviceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ImageGeneratorExtensions.GetRequiredService``1(Microsoft.Extensions.AI.IImageGenerator,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRequiredService(Of TService) (generator As IImageGenerator, Optional serviceKey As Object = Nothing) As TService" />
      <MemberSignature Language="F#" Value="static member GetRequiredService : Microsoft.Extensions.AI.IImageGenerator * obj -&gt; 'Service" Usage="Microsoft.Extensions.AI.ImageGeneratorExtensions.GetRequiredService (generator, serviceKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TService</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="generator" Type="Microsoft.Extensions.AI.IImageGenerator" RefType="this" />
        <Parameter Name="serviceKey" Type="System.Object">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TService">The type of the object to be retrieved.</typeparam>
        <param name="generator">The generator.</param>
        <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
        <summary>
            Asks the <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> for an object of type <typeparamref name="TService" />
            and throws an exception if one isn't available.
            </summary>
        <returns>The found object.</returns>
        <remarks>
            The purpose of this method is to allow for the retrieval of strongly typed services that are required to be provided by the <see cref="T:Microsoft.Extensions.AI.IImageGenerator" />,
            including itself or any services it might be wrapping.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="generator" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">No service of the requested type for the specified key is available.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetService&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static TService? GetService&lt;TService&gt; (this Microsoft.Extensions.AI.IImageGenerator generator, object? serviceKey = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TService GetService&lt;TService&gt;(class Microsoft.Extensions.AI.IImageGenerator generator, object serviceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ImageGeneratorExtensions.GetService``1(Microsoft.Extensions.AI.IImageGenerator,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetService(Of TService) (generator As IImageGenerator, Optional serviceKey As Object = Nothing) As TService" />
      <MemberSignature Language="F#" Value="static member GetService : Microsoft.Extensions.AI.IImageGenerator * obj -&gt; 'Service" Usage="Microsoft.Extensions.AI.ImageGeneratorExtensions.GetService (generator, serviceKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TService</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="generator" Type="Microsoft.Extensions.AI.IImageGenerator" RefType="this">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="serviceKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TService">The type of the object to be retrieved.</typeparam>
        <param name="generator">The generator.</param>
        <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
        <summary>Asks the <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> for an object of type <typeparamref name="TService" />.</summary>
        <returns>The found object, otherwise <see langword="null" />.</returns>
        <remarks>
            The purpose of this method is to allow for the retrieval of strongly typed services that may be provided by the <see cref="T:Microsoft.Extensions.AI.IImageGenerator" />,
            including itself or any services it might be wrapping.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="generator" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

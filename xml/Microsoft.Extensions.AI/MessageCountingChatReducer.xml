<Type Name="MessageCountingChatReducer" FullName="Microsoft.Extensions.AI.MessageCountingChatReducer">
  <TypeSignature Language="C#" Value="public sealed class MessageCountingChatReducer : Microsoft.Extensions.AI.IChatReducer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MessageCountingChatReducer extends System.Object implements class Microsoft.Extensions.AI.IChatReducer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.MessageCountingChatReducer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MessageCountingChatReducer&#xA;Implements IChatReducer" />
  <TypeSignature Language="F#" Value="type MessageCountingChatReducer = class&#xA;    interface IChatReducer" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageCountingChatReducer sealed : Microsoft::Extensions::AI::IChatReducer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.AI.IChatReducer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("MEAI001")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("MEAI001")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Provides a chat reducer that limits the number of non-system messages in a conversation to a specified maximum
            count, preserving the most recent messages and the first system message if present.
            </summary>
    <remarks>
            This reducer is useful for scenarios where it is necessary to constrain the size of a chat history,
            such as when preparing input for models with context length limits. The reducer always includes the first
            encountered system message, if any, and then retains up to the specified number of the most recent non-system
            messages. Messages containing function call or function result content are excluded from the reduced
            output.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageCountingChatReducer (int targetCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 targetCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.MessageCountingChatReducer.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetCount As Integer)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.MessageCountingChatReducer : int -&gt; Microsoft.Extensions.AI.MessageCountingChatReducer" Usage="new Microsoft.Extensions.AI.MessageCountingChatReducer targetCount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageCountingChatReducer(int targetCount);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="targetCount">The maximum number of non-system messages to retain in the reduced output.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.MessageCountingChatReducer" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt;&gt; ReduceAsync (System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt; messages, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt;&gt; ReduceAsync(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; messages, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.MessageCountingChatReducer.ReduceAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReduceAsync (messages As IEnumerable(Of ChatMessage), cancellationToken As CancellationToken) As Task(Of IEnumerable(Of ChatMessage))" />
      <MemberSignature Language="F#" Value="abstract member ReduceAsync : seq&lt;Microsoft.Extensions.AI.ChatMessage&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Extensions.AI.ChatMessage&gt;&gt;&#xA;override this.ReduceAsync : seq&lt;Microsoft.Extensions.AI.ChatMessage&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Extensions.AI.ChatMessage&gt;&gt;" Usage="messageCountingChatReducer.ReduceAsync (messages, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^&gt; ^ ReduceAsync(System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ messages, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.AI.IChatReducer.ReduceAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messages" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messages">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>

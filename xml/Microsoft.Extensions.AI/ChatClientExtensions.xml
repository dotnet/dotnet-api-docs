<Type Name="ChatClientExtensions" FullName="Microsoft.Extensions.AI.ChatClientExtensions">
  <TypeSignature Language="C#" Value="public static class ChatClientExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ChatClientExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.ChatClientExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ChatClientExtensions" />
  <TypeSignature Language="F#" Value="type ChatClientExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChatClientExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.1.0.0</AssemblyVersion>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
    <AssemblyVersion>9.5.0.0</AssemblyVersion>
    <AssemblyVersion>9.6.0.0</AssemblyVersion>
    <AssemblyVersion>9.7.0.0</AssemblyVersion>
    <AssemblyVersion>9.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides a collection of static methods for extending <see cref="T:Microsoft.Extensions.AI.IChatClient" /> instances.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRequiredService">
      <MemberSignature Language="C#" Value="public static object GetRequiredService (this Microsoft.Extensions.AI.IChatClient client, Type serviceType, object? serviceKey = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetRequiredService(class Microsoft.Extensions.AI.IChatClient client, class System.Type serviceType, object serviceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatClientExtensions.GetRequiredService(Microsoft.Extensions.AI.IChatClient,System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRequiredService (client As IChatClient, serviceType As Type, Optional serviceKey As Object = Nothing) As Object" />
      <MemberSignature Language="F#" Value="static member GetRequiredService : Microsoft.Extensions.AI.IChatClient * Type * obj -&gt; obj" Usage="Microsoft.Extensions.AI.ChatClientExtensions.GetRequiredService (client, serviceType, serviceKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Microsoft.Extensions.AI.IChatClient" RefType="this" />
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="serviceKey" Type="System.Object">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="client">The client.</param>
        <param name="serviceType">The type of object being requested.</param>
        <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
        <summary>
            Asks the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> for an object of the specified type <paramref name="serviceType" />
            and throws an exception if one isn't available.
            </summary>
        <returns>The found object.</returns>
        <remarks>
            The purpose of this method is to allow for the retrieval of services that are required to be provided by the <see cref="T:Microsoft.Extensions.AI.IChatClient" />,
            including itself or any services it might be wrapping.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serviceType" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">No service of the requested type for the specified key is available.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredService&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static TService GetRequiredService&lt;TService&gt; (this Microsoft.Extensions.AI.IChatClient client, object? serviceKey = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TService GetRequiredService&lt;TService&gt;(class Microsoft.Extensions.AI.IChatClient client, object serviceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatClientExtensions.GetRequiredService``1(Microsoft.Extensions.AI.IChatClient,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRequiredService(Of TService) (client As IChatClient, Optional serviceKey As Object = Nothing) As TService" />
      <MemberSignature Language="F#" Value="static member GetRequiredService : Microsoft.Extensions.AI.IChatClient * obj -&gt; 'Service" Usage="Microsoft.Extensions.AI.ChatClientExtensions.GetRequiredService (client, serviceKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TService</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="client" Type="Microsoft.Extensions.AI.IChatClient" RefType="this" />
        <Parameter Name="serviceKey" Type="System.Object">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TService">The type of the object to be retrieved.</typeparam>
        <param name="client">The client.</param>
        <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
        <summary>
            Asks the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> for an object of type <typeparamref name="TService" />
            and throws an exception if one isn't available.
            </summary>
        <returns>The found object.</returns>
        <remarks>
            The purpose of this method is to allow for the retrieval of strongly typed services that are required to be provided by the <see cref="T:Microsoft.Extensions.AI.IChatClient" />,
            including itself or any services it might be wrapping.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">No service of the requested type for the specified key is available.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetResponseAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ChatResponse&gt; GetResponseAsync (this Microsoft.Extensions.AI.IChatClient client, Microsoft.Extensions.AI.ChatMessage chatMessage, Microsoft.Extensions.AI.ChatOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Extensions.AI.ChatResponse&gt; GetResponseAsync(class Microsoft.Extensions.AI.IChatClient client, class Microsoft.Extensions.AI.ChatMessage chatMessage, class Microsoft.Extensions.AI.ChatOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatClientExtensions.GetResponseAsync(Microsoft.Extensions.AI.IChatClient,Microsoft.Extensions.AI.ChatMessage,Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResponseAsync (client As IChatClient, chatMessage As ChatMessage, Optional options As ChatOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ChatResponse)" />
      <MemberSignature Language="F#" Value="static member GetResponseAsync : Microsoft.Extensions.AI.IChatClient * Microsoft.Extensions.AI.ChatMessage * Microsoft.Extensions.AI.ChatOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ChatResponse&gt;" Usage="Microsoft.Extensions.AI.ChatClientExtensions.GetResponseAsync (client, chatMessage, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ChatResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Microsoft.Extensions.AI.IChatClient" RefType="this" />
        <Parameter Name="chatMessage" Type="Microsoft.Extensions.AI.ChatMessage" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.ChatOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client">The chat client.</param>
        <param name="chatMessage">The chat message to send.</param>
        <param name="options">The chat options to configure the request.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>Sends a chat message and returns the response messages.</summary>
        <returns>The response messages generated by the client.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="chatMessage" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetResponseAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ChatResponse&gt; GetResponseAsync (this Microsoft.Extensions.AI.IChatClient client, string chatMessage, Microsoft.Extensions.AI.ChatOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Extensions.AI.ChatResponse&gt; GetResponseAsync(class Microsoft.Extensions.AI.IChatClient client, string chatMessage, class Microsoft.Extensions.AI.ChatOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatClientExtensions.GetResponseAsync(Microsoft.Extensions.AI.IChatClient,System.String,Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResponseAsync (client As IChatClient, chatMessage As String, Optional options As ChatOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ChatResponse)" />
      <MemberSignature Language="F#" Value="static member GetResponseAsync : Microsoft.Extensions.AI.IChatClient * string * Microsoft.Extensions.AI.ChatOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ChatResponse&gt;" Usage="Microsoft.Extensions.AI.ChatClientExtensions.GetResponseAsync (client, chatMessage, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ChatResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Microsoft.Extensions.AI.IChatClient" RefType="this" />
        <Parameter Name="chatMessage" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.ChatOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client">The chat client.</param>
        <param name="chatMessage">The text content for the chat message to send.</param>
        <param name="options">The chat options to configure the request.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>Sends a user chat text message and returns the response messages.</summary>
        <returns>The response messages generated by the client.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="chatMessage" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetService&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static TService? GetService&lt;TService&gt; (this Microsoft.Extensions.AI.IChatClient client, object? serviceKey = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TService GetService&lt;TService&gt;(class Microsoft.Extensions.AI.IChatClient client, object serviceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatClientExtensions.GetService``1(Microsoft.Extensions.AI.IChatClient,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetService(Of TService) (client As IChatClient, Optional serviceKey As Object = Nothing) As TService" />
      <MemberSignature Language="F#" Value="static member GetService : Microsoft.Extensions.AI.IChatClient * obj -&gt; 'Service" Usage="Microsoft.Extensions.AI.ChatClientExtensions.GetService (client, serviceKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TService</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="client" Type="Microsoft.Extensions.AI.IChatClient" RefType="this">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="serviceKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TService">The type of the object to be retrieved.</typeparam>
        <param name="client">The client.</param>
        <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
        <summary>Asks the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> for an object of type <typeparamref name="TService" />.</summary>
        <returns>The found object, otherwise <see langword="null" />.</returns>
        <remarks>
            The purpose of this method is to allow for the retrieval of strongly typed services that may be provided by the <see cref="T:Microsoft.Extensions.AI.IChatClient" />,
            including itself or any services it might be wrapping.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetStreamingResponseAsync">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt; GetStreamingResponseAsync (this Microsoft.Extensions.AI.IChatClient client, Microsoft.Extensions.AI.ChatMessage chatMessage, Microsoft.Extensions.AI.ChatOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IAsyncEnumerable`1&lt;class Microsoft.Extensions.AI.ChatResponseUpdate&gt; GetStreamingResponseAsync(class Microsoft.Extensions.AI.IChatClient client, class Microsoft.Extensions.AI.ChatMessage chatMessage, class Microsoft.Extensions.AI.ChatOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatClientExtensions.GetStreamingResponseAsync(Microsoft.Extensions.AI.IChatClient,Microsoft.Extensions.AI.ChatMessage,Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStreamingResponseAsync (client As IChatClient, chatMessage As ChatMessage, Optional options As ChatOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of ChatResponseUpdate)" />
      <MemberSignature Language="F#" Value="static member GetStreamingResponseAsync : Microsoft.Extensions.AI.IChatClient * Microsoft.Extensions.AI.ChatMessage * Microsoft.Extensions.AI.ChatOptions * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt;" Usage="Microsoft.Extensions.AI.ChatClientExtensions.GetStreamingResponseAsync (client, chatMessage, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Microsoft.Extensions.AI.IChatClient" RefType="this" />
        <Parameter Name="chatMessage" Type="Microsoft.Extensions.AI.ChatMessage" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.ChatOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client">The chat client.</param>
        <param name="chatMessage">The chat message to send.</param>
        <param name="options">The chat options to configure the request.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>Sends a chat message and streams the response messages.</summary>
        <returns>The response messages generated by the client.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="chatMessage" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetStreamingResponseAsync">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt; GetStreamingResponseAsync (this Microsoft.Extensions.AI.IChatClient client, string chatMessage, Microsoft.Extensions.AI.ChatOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IAsyncEnumerable`1&lt;class Microsoft.Extensions.AI.ChatResponseUpdate&gt; GetStreamingResponseAsync(class Microsoft.Extensions.AI.IChatClient client, string chatMessage, class Microsoft.Extensions.AI.ChatOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatClientExtensions.GetStreamingResponseAsync(Microsoft.Extensions.AI.IChatClient,System.String,Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStreamingResponseAsync (client As IChatClient, chatMessage As String, Optional options As ChatOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of ChatResponseUpdate)" />
      <MemberSignature Language="F#" Value="static member GetStreamingResponseAsync : Microsoft.Extensions.AI.IChatClient * string * Microsoft.Extensions.AI.ChatOptions * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt;" Usage="Microsoft.Extensions.AI.ChatClientExtensions.GetStreamingResponseAsync (client, chatMessage, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Microsoft.Extensions.AI.IChatClient" RefType="this" />
        <Parameter Name="chatMessage" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.ChatOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client">The chat client.</param>
        <param name="chatMessage">The text content for the chat message to send.</param>
        <param name="options">The chat options to configure the request.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>Sends a user chat text message and streams the response messages.</summary>
        <returns>The response messages generated by the client.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="chatMessage" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

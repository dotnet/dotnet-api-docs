<Type Name="ChatOptions" FullName="Microsoft.Extensions.AI.ChatOptions">
  <TypeSignature Language="C#" Value="public class ChatOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChatOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.ChatOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ChatOptions" />
  <TypeSignature Language="F#" Value="type ChatOptions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChatOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.1.0.0</AssemblyVersion>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
    <AssemblyVersion>9.5.0.0</AssemblyVersion>
    <AssemblyVersion>9.6.0.0</AssemblyVersion>
    <AssemblyVersion>9.7.0.0</AssemblyVersion>
    <AssemblyVersion>9.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents the options for a chat request.</summary>
    <remarks>To be added.</remarks>
    <related type="Article" href="https://learn.microsoft.com/dotnet/ai/microsoft-extensions-ai#provide-options">Provide options.</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChatOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.AdditionalPropertiesDictionary? AdditionalProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.AdditionalPropertiesDictionary AdditionalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatOptions.AdditionalProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property AdditionalProperties As AdditionalPropertiesDictionary" />
      <MemberSignature Language="F#" Value="member this.AdditionalProperties : Microsoft.Extensions.AI.AdditionalPropertiesDictionary with get, set" Usage="Microsoft.Extensions.AI.ChatOptions.AdditionalProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::AI::AdditionalPropertiesDictionary ^ AdditionalProperties { Microsoft::Extensions::AI::AdditionalPropertiesDictionary ^ get(); void set(Microsoft::Extensions::AI::AdditionalPropertiesDictionary ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.AdditionalPropertiesDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets any additional properties associated with the options.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowMultipleToolCalls">
      <MemberSignature Language="C#" Value="public bool? AllowMultipleToolCalls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; AllowMultipleToolCalls" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatOptions.AllowMultipleToolCalls" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowMultipleToolCalls As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.AllowMultipleToolCalls : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Extensions.AI.ChatOptions.AllowMultipleToolCalls" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; AllowMultipleToolCalls { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a flag to indicate whether a single response is allowed to include multiple tool calls.
            If <see langword="false" />, the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> is asked to return a maximum of one tool call per request.
            If <see langword="true" />, there is no limit.
            If <see langword="null" />, the provider may select its own default.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            When used with function calling middleware, this does not affect the ability to perform multiple function calls in sequence.
            It only affects the number of function calls within a single iteration of the function calling loop.
            </para>
          <para>
            The underlying provider is not guaranteed to support or honor this flag. For example it may choose to ignore it and return multiple tool calls regardless.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.AI.ChatOptions Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.AI.ChatOptions Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatOptions.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As ChatOptions" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; Microsoft.Extensions.AI.ChatOptions&#xA;override this.Clone : unit -&gt; Microsoft.Extensions.AI.ChatOptions" Usage="chatOptions.Clone " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::AI::ChatOptions ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.ChatOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Produces a clone of the current <see cref="T:Microsoft.Extensions.AI.ChatOptions" /> instance.</summary>
        <returns>A clone of the current <see cref="T:Microsoft.Extensions.AI.ChatOptions" /> instance.</returns>
        <remarks>
            The clone will have the same values for all properties as the original instance. Any collections, like <see cref="P:Microsoft.Extensions.AI.ChatOptions.Tools" />,
            <see cref="P:Microsoft.Extensions.AI.ChatOptions.StopSequences" />, and <see cref="P:Microsoft.Extensions.AI.ChatOptions.AdditionalProperties" />, are shallow-cloned, meaning a new collection instance is created,
            but any references contained by the collections are shared with the original.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConversationId">
      <MemberSignature Language="C#" Value="public string? ConversationId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConversationId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatOptions.ConversationId" />
      <MemberSignature Language="VB.NET" Value="Public Property ConversationId As String" />
      <MemberSignature Language="F#" Value="member this.ConversationId : string with get, set" Usage="Microsoft.Extensions.AI.ChatOptions.ConversationId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConversationId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets an optional identifier used to associate a request with an existing conversation.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://learn.microsoft.com/dotnet/ai/microsoft-extensions-ai#stateless-vs-stateful-clients">Stateless vs. stateful clients.</related>
      </Docs>
    </Member>
    <Member MemberName="FrequencyPenalty">
      <MemberSignature Language="C#" Value="public float? FrequencyPenalty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float32&gt; FrequencyPenalty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatOptions.FrequencyPenalty" />
      <MemberSignature Language="VB.NET" Value="Public Property FrequencyPenalty As Nullable(Of Single)" />
      <MemberSignature Language="F#" Value="member this.FrequencyPenalty : Nullable&lt;single&gt; with get, set" Usage="Microsoft.Extensions.AI.ChatOptions.FrequencyPenalty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;float&gt; FrequencyPenalty { Nullable&lt;float&gt; get(); void set(Nullable&lt;float&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the penalty for repeated tokens in chat responses proportional to how many times they've appeared.
            </summary>
        <value>To be added.</value>
        <remarks>
            You can modify this value to reduce the repetitiveness of generated tokens. The higher the value, the stronger a penalty
            is applied to previously present tokens, proportional to how many times they've already appeared in the prompt or prior generation.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Instructions">
      <MemberSignature Language="C#" Value="public string? Instructions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Instructions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatOptions.Instructions" />
      <MemberSignature Language="VB.NET" Value="Public Property Instructions As String" />
      <MemberSignature Language="F#" Value="member this.Instructions : string with get, set" Usage="Microsoft.Extensions.AI.ChatOptions.Instructions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Instructions { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets additional per-request instructions to be provided to the <see cref="T:Microsoft.Extensions.AI.IChatClient" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxOutputTokens">
      <MemberSignature Language="C#" Value="public int? MaxOutputTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaxOutputTokens" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatOptions.MaxOutputTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxOutputTokens As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaxOutputTokens : Nullable&lt;int&gt; with get, set" Usage="Microsoft.Extensions.AI.ChatOptions.MaxOutputTokens" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; MaxOutputTokens { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum number of tokens in the generated chat response.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelId">
      <MemberSignature Language="C#" Value="public string? ModelId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ModelId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatOptions.ModelId" />
      <MemberSignature Language="VB.NET" Value="Public Property ModelId As String" />
      <MemberSignature Language="F#" Value="member this.ModelId : string with get, set" Usage="Microsoft.Extensions.AI.ChatOptions.ModelId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ModelId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the model ID for the chat request.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresencePenalty">
      <MemberSignature Language="C#" Value="public float? PresencePenalty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float32&gt; PresencePenalty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatOptions.PresencePenalty" />
      <MemberSignature Language="VB.NET" Value="Public Property PresencePenalty As Nullable(Of Single)" />
      <MemberSignature Language="F#" Value="member this.PresencePenalty : Nullable&lt;single&gt; with get, set" Usage="Microsoft.Extensions.AI.ChatOptions.PresencePenalty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;float&gt; PresencePenalty { Nullable&lt;float&gt; get(); void set(Nullable&lt;float&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that influences the probability of generated tokens appearing based on their existing presence in generated text.
            </summary>
        <value>To be added.</value>
        <remarks>
            You can modify this value to reduce repetitiveness of generated tokens. Similar to <see cref="P:Microsoft.Extensions.AI.ChatOptions.FrequencyPenalty" />,
            except that this penalty is applied equally to all tokens that have already appeared, regardless of their exact frequencies.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RawRepresentationFactory">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.Extensions.AI.IChatClient,object?&gt;? RawRepresentationFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class Microsoft.Extensions.AI.IChatClient, object&gt; RawRepresentationFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatOptions.RawRepresentationFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property RawRepresentationFactory As Func(Of IChatClient, Object)" />
      <MemberSignature Language="F#" Value="member this.RawRepresentationFactory : Func&lt;Microsoft.Extensions.AI.IChatClient, obj&gt; with get, set" Usage="Microsoft.Extensions.AI.ChatOptions.RawRepresentationFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;Microsoft::Extensions::AI::IChatClient ^, System::Object ^&gt; ^ RawRepresentationFactory { Func&lt;Microsoft::Extensions::AI::IChatClient ^, System::Object ^&gt; ^ get(); void set(Func&lt;Microsoft::Extensions::AI::IChatClient ^, System::Object ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 2 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 2 })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonIgnore&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.Extensions.AI.IChatClient,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a callback responsible for creating the raw representation of the chat options from an underlying implementation.
            </summary>
        <value>To be added.</value>
        <remarks>
            The underlying <see cref="T:Microsoft.Extensions.AI.IChatClient" /> implementation may have its own representation of options.
            When <see cref="M:Microsoft.Extensions.AI.IChatClient.GetResponseAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" /> or <see cref="M:Microsoft.Extensions.AI.IChatClient.GetStreamingResponseAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" />
            is invoked with a <see cref="T:Microsoft.Extensions.AI.ChatOptions" />, that implementation may convert the provided options into
            its own representation in order to use it while performing the operation. For situations where a consumer knows
            which concrete <see cref="T:Microsoft.Extensions.AI.IChatClient" /> is being used and how it represents options, a new instance of that
            implementation-specific options type may be returned by this callback, for the <see cref="T:Microsoft.Extensions.AI.IChatClient" />
            implementation to use instead of creating a new instance. Such implementations may mutate the supplied options
            instance further based on other settings supplied on this <see cref="T:Microsoft.Extensions.AI.ChatOptions" /> instance or from other inputs,
            like the enumerable of <see cref="T:Microsoft.Extensions.AI.ChatMessage" />s, therefore, it is <b>strongly recommended</b> to not return shared instances
            and instead make the callback return a new instance on each call.
            This is typically used to set an implementation-specific setting that isn't otherwise exposed from the strongly-typed
            properties on <see cref="T:Microsoft.Extensions.AI.ChatOptions" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.ChatResponseFormat? ResponseFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.ChatResponseFormat ResponseFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatOptions.ResponseFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseFormat As ChatResponseFormat" />
      <MemberSignature Language="F#" Value="member this.ResponseFormat : Microsoft.Extensions.AI.ChatResponseFormat with get, set" Usage="Microsoft.Extensions.AI.ChatOptions.ResponseFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::AI::ChatResponseFormat ^ ResponseFormat { Microsoft::Extensions::AI::ChatResponseFormat ^ get(); void set(Microsoft::Extensions::AI::ChatResponseFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.ChatResponseFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the response format for the chat request.
            </summary>
        <value>To be added.</value>
        <remarks>
            If <see langword="null" />, no response format is specified and the client will use its default.
            This property can be set to <see cref="P:Microsoft.Extensions.AI.ChatResponseFormat.Text" /> to specify that the response should be unstructured text,
            to <see cref="P:Microsoft.Extensions.AI.ChatResponseFormat.Json" /> to specify that the response should be structured JSON data, or
            an instance of <see cref="T:Microsoft.Extensions.AI.ChatResponseFormatJson" /> constructed with a specific JSON schema to request that the
            response be structured JSON data according to that schema. It is up to the client implementation if or how
            to honor the request. If the client implementation doesn't recognize the specific kind of <see cref="T:Microsoft.Extensions.AI.ChatResponseFormat" />,
            it can be ignored.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seed">
      <MemberSignature Language="C#" Value="public long? Seed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; Seed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatOptions.Seed" />
      <MemberSignature Language="VB.NET" Value="Public Property Seed As Nullable(Of Long)" />
      <MemberSignature Language="F#" Value="member this.Seed : Nullable&lt;int64&gt; with get, set" Usage="Microsoft.Extensions.AI.ChatOptions.Seed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;long&gt; Seed { Nullable&lt;long&gt; get(); void set(Nullable&lt;long&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a seed value used by a service to control the reproducibility of results.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopSequences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt;? StopSequences { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; StopSequences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatOptions.StopSequences" />
      <MemberSignature Language="VB.NET" Value="Public Property StopSequences As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.StopSequences : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.Extensions.AI.ChatOptions.StopSequences" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::String ^&gt; ^ StopSequences { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the list of stop sequences.
            </summary>
        <value>To be added.</value>
        <remarks>
            After a stop sequence is detected, the model stops generating further tokens for chat responses.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Temperature">
      <MemberSignature Language="C#" Value="public float? Temperature { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float32&gt; Temperature" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatOptions.Temperature" />
      <MemberSignature Language="VB.NET" Value="Public Property Temperature As Nullable(Of Single)" />
      <MemberSignature Language="F#" Value="member this.Temperature : Nullable&lt;single&gt; with get, set" Usage="Microsoft.Extensions.AI.ChatOptions.Temperature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;float&gt; Temperature { Nullable&lt;float&gt; get(); void set(Nullable&lt;float&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the temperature for generating chat responses.</summary>
        <value>To be added.</value>
        <remarks>
            This value controls the randomness of predictions made by the model. Use a lower value to decrease randomness in the response.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolMode">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.ChatToolMode? ToolMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.ChatToolMode ToolMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatOptions.ToolMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolMode As ChatToolMode" />
      <MemberSignature Language="F#" Value="member this.ToolMode : Microsoft.Extensions.AI.ChatToolMode with get, set" Usage="Microsoft.Extensions.AI.ChatOptions.ToolMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::AI::ChatToolMode ^ ToolMode { Microsoft::Extensions::AI::ChatToolMode ^ get(); void set(Microsoft::Extensions::AI::ChatToolMode ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.ChatToolMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the tool mode for the chat request.</summary>
        <value>To be added.</value>
        <remarks>The default value is <see langword="null" />, which is treated the same as <see cref="P:Microsoft.Extensions.AI.ChatToolMode.Auto" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tools">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.AITool&gt;? Tools { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.AITool&gt; Tools" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatOptions.Tools" />
      <MemberSignature Language="VB.NET" Value="Public Property Tools As IList(Of AITool)" />
      <MemberSignature Language="F#" Value="member this.Tools : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.AITool&gt; with get, set" Usage="Microsoft.Extensions.AI.ChatOptions.Tools" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::AITool ^&gt; ^ Tools { System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::AITool ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::AITool ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonIgnore&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.AITool&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the list of tools to include with a chat request.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://learn.microsoft.com/dotnet/ai/microsoft-extensions-ai#tool-calling">Tool calling.</related>
      </Docs>
    </Member>
    <Member MemberName="TopK">
      <MemberSignature Language="C#" Value="public int? TopK { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; TopK" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatOptions.TopK" />
      <MemberSignature Language="VB.NET" Value="Public Property TopK As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.TopK : Nullable&lt;int&gt; with get, set" Usage="Microsoft.Extensions.AI.ChatOptions.TopK" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; TopK { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of most probable tokens that the model considers when generating the next part of the text.
            </summary>
        <value>To be added.</value>
        <remarks>
            This property reduces the probability of generating nonsense. A higher value gives more diverse answers, while a lower value is more conservative.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopP">
      <MemberSignature Language="C#" Value="public float? TopP { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float32&gt; TopP" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatOptions.TopP" />
      <MemberSignature Language="VB.NET" Value="Public Property TopP As Nullable(Of Single)" />
      <MemberSignature Language="F#" Value="member this.TopP : Nullable&lt;single&gt; with get, set" Usage="Microsoft.Extensions.AI.ChatOptions.TopP" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;float&gt; TopP { Nullable&lt;float&gt; get(); void set(Nullable&lt;float&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the "nucleus sampling" factor (or "top p") for generating chat responses.</summary>
        <value>To be added.</value>
        <remarks>
            Nucleus sampling is an alternative to sampling with temperature where the model
            considers the results of the tokens with <see cref="P:Microsoft.Extensions.AI.ChatOptions.TopP" /> probability mass.
            For example, 0.1 means only the tokens comprising the top 10% probability mass are considered.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

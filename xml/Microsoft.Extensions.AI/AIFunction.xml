<Type Name="AIFunction" FullName="Microsoft.Extensions.AI.AIFunction">
  <TypeSignature Language="C#" Value="public abstract class AIFunction : Microsoft.Extensions.AI.AIFunctionDeclaration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AIFunction extends Microsoft.Extensions.AI.AIFunctionDeclaration" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.AIFunction" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AIFunction&#xA;Inherits AIFunctionDeclaration" />
  <TypeSignature Language="F#" Value="type AIFunction = class&#xA;    inherit AIFunctionDeclaration" />
  <TypeSignature Language="C++ CLI" Value="public ref class AIFunction abstract : Microsoft::Extensions::AI::AIFunctionDeclaration" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.1.0.0</AssemblyVersion>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
    <AssemblyVersion>9.5.0.0</AssemblyVersion>
    <AssemblyVersion>9.6.0.0</AssemblyVersion>
    <AssemblyVersion>9.7.0.0</AssemblyVersion>
    <AssemblyVersion>9.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Extensions.AI.AIFunctionDeclaration</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a function that can be described to an AI service and invoked.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AIFunction ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.AIFunction.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AIFunction();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AIFunction" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsDeclarationOnly">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.AIFunctionDeclaration AsDeclarationOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.AI.AIFunctionDeclaration AsDeclarationOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.AIFunction.AsDeclarationOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function AsDeclarationOnly () As AIFunctionDeclaration" />
      <MemberSignature Language="F#" Value="member this.AsDeclarationOnly : unit -&gt; Microsoft.Extensions.AI.AIFunctionDeclaration" Usage="aIFunction.AsDeclarationOnly " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::AI::AIFunctionDeclaration ^ AsDeclarationOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.AIFunctionDeclaration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a <see cref="T:Microsoft.Extensions.AI.AIFunctionDeclaration" /> representation of this <see cref="T:Microsoft.Extensions.AI.AIFunction" /> that can't be invoked.</summary>
        <returns>The created instance.</returns>
        <remarks>
          <see cref="T:Microsoft.Extensions.AI.AIFunction" /> derives from <see cref="T:Microsoft.Extensions.AI.AIFunctionDeclaration" />, layering on the ability to invoke the function in addition
            to describing it. <see cref="M:Microsoft.Extensions.AI.AIFunction.AsDeclarationOnly" /> creates a new object that describes the function but that can't be invoked.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;object?&gt; InvokeAsync (Microsoft.Extensions.AI.AIFunctionArguments? arguments = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.Tasks.ValueTask`1&lt;object&gt; InvokeAsync(class Microsoft.Extensions.AI.AIFunctionArguments arguments, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync (Optional arguments As AIFunctionArguments = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of Object)" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Microsoft.Extensions.AI.AIFunctionArguments * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;obj&gt;" Usage="aIFunction.InvokeAsync (arguments, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Object&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-10.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="Microsoft.Extensions.AI.AIFunctionArguments" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="arguments">The arguments to pass to the function's invocation.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>Invokes the <see cref="T:Microsoft.Extensions.AI.AIFunction" /> and returns its result.</summary>
        <returns>The result of the function's execution.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeCoreAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.ValueTask&lt;object?&gt; InvokeCoreAsync (Microsoft.Extensions.AI.AIFunctionArguments arguments, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;object&gt; InvokeCoreAsync(class Microsoft.Extensions.AI.AIFunctionArguments arguments, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.AIFunction.InvokeCoreAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function InvokeCoreAsync (arguments As AIFunctionArguments, cancellationToken As CancellationToken) As ValueTask(Of Object)" />
      <MemberSignature Language="F#" Value="abstract member InvokeCoreAsync : Microsoft.Extensions.AI.AIFunctionArguments * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;obj&gt;" Usage="aIFunction.InvokeCoreAsync (arguments, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Threading::Tasks::ValueTask&lt;System::Object ^&gt; InvokeCoreAsync(Microsoft::Extensions::AI::AIFunctionArguments ^ arguments, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Object&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-10.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="Microsoft.Extensions.AI.AIFunctionArguments" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="arguments">The arguments to pass to the function's invocation.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests.</param>
        <summary>Invokes the <see cref="T:Microsoft.Extensions.AI.AIFunction" /> and returns its result.</summary>
        <returns>The result of the function's execution.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonSerializerOptions">
      <MemberSignature Language="C#" Value="public virtual System.Text.Json.JsonSerializerOptions JsonSerializerOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Json.JsonSerializerOptions JsonSerializerOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.AIFunction.JsonSerializerOptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property JsonSerializerOptions As JsonSerializerOptions" />
      <MemberSignature Language="F#" Value="member this.JsonSerializerOptions : System.Text.Json.JsonSerializerOptions" Usage="Microsoft.Extensions.AI.AIFunction.JsonSerializerOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Json::JsonSerializerOptions ^ JsonSerializerOptions { System::Text::Json::JsonSerializerOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonSerializerOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="P:Microsoft.Extensions.AI.AIFunction.JsonSerializerOptions" /> that can be used to marshal function parameters.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo? UnderlyingMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingMethod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.AIFunction.UnderlyingMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UnderlyingMethod As MethodInfo" />
      <MemberSignature Language="F#" Value="member this.UnderlyingMethod : System.Reflection.MethodInfo" Usage="Microsoft.Extensions.AI.AIFunction.UnderlyingMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodInfo ^ UnderlyingMethod { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the underlying <see cref="T:System.Reflection.MethodInfo" /> that this <see cref="T:Microsoft.Extensions.AI.AIFunction" /> might be wrapping.
            </summary>
        <value>To be added.</value>
        <remarks>
            Provides additional metadata on the function and its signature. Implementations not wrapping .NET methods may return <see langword="null" />.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

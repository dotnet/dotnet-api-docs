<Type Name="ChatCompletion&lt;T&gt;" FullName="Microsoft.Extensions.AI.ChatCompletion&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class ChatCompletion&lt;T&gt; : Microsoft.Extensions.AI.ChatCompletion" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChatCompletion`1&lt;T&gt; extends Microsoft.Extensions.AI.ChatCompletion" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.ChatCompletion`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ChatCompletion(Of T)&#xA;Inherits ChatCompletion" />
  <TypeSignature Language="F#" Value="type ChatCompletion&lt;'T&gt; = class&#xA;    inherit ChatCompletion" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ChatCompletion : Microsoft::Extensions::AI::ChatCompletion" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.Extensions.AI.ChatCompletion</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">The type of value expected from the chat completion.</typeparam>
    <summary>Represents the result of a chat completion request with structured output.</summary>
    <remarks>
            Language models are not guaranteed to honor the requested schema. If the model's output is not
            parseable as the expected type, then <see cref="M:Microsoft.Extensions.AI.ChatCompletion`1.TryGetResult(`0@)" /> will return <see langword="false" />.
            You can access the underlying JSON response on the <see cref="P:Microsoft.Extensions.AI.ChatCompletion.Message" /> property.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatCompletion (Microsoft.Extensions.AI.ChatCompletion completion, System.Text.Json.JsonSerializerOptions serializerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.AI.ChatCompletion completion, class System.Text.Json.JsonSerializerOptions serializerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatCompletion`1.#ctor(Microsoft.Extensions.AI.ChatCompletion,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (completion As ChatCompletion, serializerOptions As JsonSerializerOptions)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.ChatCompletion&lt;'T&gt; : Microsoft.Extensions.AI.ChatCompletion * System.Text.Json.JsonSerializerOptions -&gt; Microsoft.Extensions.AI.ChatCompletion&lt;'T&gt;" Usage="new Microsoft.Extensions.AI.ChatCompletion&lt;'T&gt; (completion, serializerOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChatCompletion(Microsoft::Extensions::AI::ChatCompletion ^ completion, System::Text::Json::JsonSerializerOptions ^ serializerOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="completion" Type="Microsoft.Extensions.AI.ChatCompletion" />
        <Parameter Name="serializerOptions" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="completion">The unstructured <see cref="T:Microsoft.Extensions.AI.ChatCompletion" /> that is being wrapped.</param>
        <param name="serializerOptions">The <see cref="T:System.Text.Json.JsonSerializerOptions" /> to use when deserializing the result.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatCompletion`1" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public T Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Result" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatCompletion`1.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As T" />
      <MemberSignature Language="F#" Value="member this.Result : 'T" Usage="Microsoft.Extensions.AI.ChatCompletion&lt;'T&gt;.Result" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Result { T get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the result of the chat completion as an instance of <typeparamref name="T" />.
            </summary>
        <value>To be added.</value>
        <remarks>
            If the response did not contain JSON, or if deserialization fails, this property will throw.
            To avoid exceptions, use <see cref="M:Microsoft.Extensions.AI.ChatCompletion`1.TryGetResult(`0@)" /> instead.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetResult">
      <MemberSignature Language="C#" Value="public bool TryGetResult (out T? result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetResult([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatCompletion`1.TryGetResult(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetResult (ByRef result As T) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryGetResult : 'T -&gt; bool" Usage="chatCompletion.TryGetResult result" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetResult([Runtime::InteropServices::Out] T % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" RefType="out">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="result">When this method returns, contains the result.</param>
        <summary>
            Attempts to deserialize the result to produce an instance of <typeparamref name="T" />.
            </summary>
        <returns>
          <see langword="true" /> if the result was produced, otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

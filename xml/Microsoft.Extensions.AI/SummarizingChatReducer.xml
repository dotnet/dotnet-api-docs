<Type Name="SummarizingChatReducer" FullName="Microsoft.Extensions.AI.SummarizingChatReducer">
  <TypeSignature Language="C#" Value="public sealed class SummarizingChatReducer : Microsoft.Extensions.AI.IChatReducer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SummarizingChatReducer extends System.Object implements class Microsoft.Extensions.AI.IChatReducer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.SummarizingChatReducer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SummarizingChatReducer&#xA;Implements IChatReducer" />
  <TypeSignature Language="F#" Value="type SummarizingChatReducer = class&#xA;    interface IChatReducer" />
  <TypeSignature Language="C++ CLI" Value="public ref class SummarizingChatReducer sealed : Microsoft::Extensions::AI::IChatReducer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.AI.IChatReducer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("MEAI001")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("MEAI001")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Provides functionality to reduce a collection of chat messages into a summarized form.
            </summary>
    <remarks>
            This reducer is useful for scenarios where it is necessary to constrain the size of a chat history,
            such as when preparing input for models with context length limits. The reducer automatically summarizes
            older messages when the conversation exceeds a specified length, preserving context while reducing message
            count. The reducer maintains system messages and excludes messages containing function call or function
            result content from summarization.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SummarizingChatReducer (Microsoft.Extensions.AI.IChatClient chatClient, int targetCount, int? threshold);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.AI.IChatClient chatClient, int32 targetCount, valuetype System.Nullable`1&lt;int32&gt; threshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.SummarizingChatReducer.#ctor(Microsoft.Extensions.AI.IChatClient,System.Int32,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (chatClient As IChatClient, targetCount As Integer, threshold As Nullable(Of Integer))" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.SummarizingChatReducer : Microsoft.Extensions.AI.IChatClient * int * Nullable&lt;int&gt; -&gt; Microsoft.Extensions.AI.SummarizingChatReducer" Usage="new Microsoft.Extensions.AI.SummarizingChatReducer (chatClient, targetCount, threshold)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SummarizingChatReducer(Microsoft::Extensions::AI::IChatClient ^ chatClient, int targetCount, Nullable&lt;int&gt; threshold);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="chatClient" Type="Microsoft.Extensions.AI.IChatClient" />
        <Parameter Name="targetCount" Type="System.Int32" />
        <Parameter Name="threshold" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="chatClient">The chat client used to interact with the chat system. Cannot be <see langword="null" />.</param>
        <param name="targetCount">The target number of messages to retain after summarization. Must be greater than 0.</param>
        <param name="threshold">The number of messages allowed beyond <paramref name="targetCount" /> before summarization is triggered. Must be greater than or equal to 0 if specified.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.SummarizingChatReducer" /> class with the specified chat client,
            target count, and optional threshold count.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt;&gt; ReduceAsync (System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt; messages, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt;&gt; ReduceAsync(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; messages, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.SummarizingChatReducer.ReduceAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReduceAsync (messages As IEnumerable(Of ChatMessage), cancellationToken As CancellationToken) As Task(Of IEnumerable(Of ChatMessage))" />
      <MemberSignature Language="F#" Value="abstract member ReduceAsync : seq&lt;Microsoft.Extensions.AI.ChatMessage&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Extensions.AI.ChatMessage&gt;&gt;&#xA;override this.ReduceAsync : seq&lt;Microsoft.Extensions.AI.ChatMessage&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Extensions.AI.ChatMessage&gt;&gt;" Usage="summarizingChatReducer.ReduceAsync (messages, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^&gt; ^ ReduceAsync(System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ messages, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.AI.IChatReducer.ReduceAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messages" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messages">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SummarizationPrompt">
      <MemberSignature Language="C#" Value="public string SummarizationPrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SummarizationPrompt" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.SummarizingChatReducer.SummarizationPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Property SummarizationPrompt As String" />
      <MemberSignature Language="F#" Value="member this.SummarizationPrompt : string with get, set" Usage="Microsoft.Extensions.AI.SummarizingChatReducer.SummarizationPrompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SummarizationPrompt { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the prompt text used for summarization.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="AIFunctionFactory" FullName="Microsoft.Extensions.AI.AIFunctionFactory">
  <TypeSignature Language="C#" Value="public static class AIFunctionFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AIFunctionFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.AIFunctionFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class AIFunctionFactory" />
  <TypeSignature Language="F#" Value="type AIFunctionFactory = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class AIFunctionFactory abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.1.0.0</AssemblyVersion>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides factory methods for creating commonly used implementations of <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.AI.AIFunction Create (Delegate method, Microsoft.Extensions.AI.AIFunctionFactoryOptions? options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.AI.AIFunction Create(class System.Delegate method, class Microsoft.Extensions.AI.AIFunctionFactoryOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.AIFunctionFactory.Create(System.Delegate,Microsoft.Extensions.AI.AIFunctionFactoryOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (method As Delegate, options As AIFunctionFactoryOptions) As AIFunction" />
      <MemberSignature Language="F#" Value="static member Create : Delegate * Microsoft.Extensions.AI.AIFunctionFactoryOptions -&gt; Microsoft.Extensions.AI.AIFunction" Usage="Microsoft.Extensions.AI.AIFunctionFactory.Create (method, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Extensions::AI::AIFunction ^ Create(Delegate ^ method, Microsoft::Extensions::AI::AIFunctionFactoryOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.AIFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.AIFunctionFactoryOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">The method to be represented via the created <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</param>
        <param name="options">Metadata to use to override defaults inferred from <paramref name="method" />.</param>
        <summary>Creates an <see cref="T:Microsoft.Extensions.AI.AIFunction" /> instance for a method, specified via a delegate.</summary>
        <returns>The created <see cref="T:Microsoft.Extensions.AI.AIFunction" /> for invoking <paramref name="method" />.</returns>
        <remarks>
          <para>
            Return values are serialized to <see cref="T:System.Text.Json.JsonElement" /> using <paramref name="options" />'s
            <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.SerializerOptions" />. Arguments that are not already of the expected type are
            marshaled to the expected type via JSON and using <paramref name="options" />'s
            <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.SerializerOptions" />. If the argument is a <see cref="T:System.Text.Json.JsonElement" />,
            <see cref="T:System.Text.Json.JsonDocument" />, or <see cref="T:System.Text.Json.Nodes.JsonNode" />, it is deserialized directly. If the argument is anything else unknown,
            it is round-tripped through JSON, serializing the object as JSON and then deserializing it to the expected type.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.AI.AIFunction Create (System.Reflection.MethodInfo method, object? target, Microsoft.Extensions.AI.AIFunctionFactoryOptions? options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.AI.AIFunction Create(class System.Reflection.MethodInfo method, object target, class Microsoft.Extensions.AI.AIFunctionFactoryOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.AIFunctionFactory.Create(System.Reflection.MethodInfo,System.Object,Microsoft.Extensions.AI.AIFunctionFactoryOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (method As MethodInfo, target As Object, options As AIFunctionFactoryOptions) As AIFunction" />
      <MemberSignature Language="F#" Value="static member Create : System.Reflection.MethodInfo * obj * Microsoft.Extensions.AI.AIFunctionFactoryOptions -&gt; Microsoft.Extensions.AI.AIFunction" Usage="Microsoft.Extensions.AI.AIFunctionFactory.Create (method, target, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Extensions::AI::AIFunction ^ Create(System::Reflection::MethodInfo ^ method, System::Object ^ target, Microsoft::Extensions::AI::AIFunctionFactoryOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.AIFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="target" Type="System.Object">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="options" Type="Microsoft.Extensions.AI.AIFunctionFactoryOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">The method to be represented via the created <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</param>
        <param name="target">
            The target object for the <paramref name="method" /> if it represents an instance method.
            This should be <see langword="null" /> if and only if <paramref name="method" /> is a static method.
            </param>
        <param name="options">Metadata to use to override defaults inferred from <paramref name="method" />.</param>
        <summary>
            Creates an <see cref="T:Microsoft.Extensions.AI.AIFunction" /> instance for a method, specified via an <see cref="T:System.Reflection.MethodInfo" /> instance
            and an optional target object if the method is an instance method.
            </summary>
        <returns>The created <see cref="T:Microsoft.Extensions.AI.AIFunction" /> for invoking <paramref name="method" />.</returns>
        <remarks>
          <para>
            Return values are serialized to <see cref="T:System.Text.Json.JsonElement" /> using <paramref name="options" />'s
            <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.SerializerOptions" />. Arguments that are not already of the expected type are
            marshaled to the expected type via JSON and using <paramref name="options" />'s
            <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.SerializerOptions" />. If the argument is a <see cref="T:System.Text.Json.JsonElement" />,
            <see cref="T:System.Text.Json.JsonDocument" />, or <see cref="T:System.Text.Json.Nodes.JsonNode" />, it is deserialized directly. If the argument is anything else unknown,
            it is round-tripped through JSON, serializing the object as JSON and then deserializing it to the expected type.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.AI.AIFunction Create (Delegate method, string? name = default, string? description = default, System.Text.Json.JsonSerializerOptions? serializerOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.AI.AIFunction Create(class System.Delegate method, string name, string description, class System.Text.Json.JsonSerializerOptions serializerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.AIFunctionFactory.Create(System.Delegate,System.String,System.String,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (method As Delegate, Optional name As String = Nothing, Optional description As String = Nothing, Optional serializerOptions As JsonSerializerOptions = Nothing) As AIFunction" />
      <MemberSignature Language="F#" Value="static member Create : Delegate * string * string * System.Text.Json.JsonSerializerOptions -&gt; Microsoft.Extensions.AI.AIFunction" Usage="Microsoft.Extensions.AI.AIFunctionFactory.Create (method, name, description, serializerOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.AIFunction</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="serializerOptions" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="method">The method to be represented via the created <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</param>
        <param name="name">The name to use for the <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</param>
        <param name="description">The description to use for the <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</param>
        <param name="serializerOptions">The <see cref="T:System.Text.Json.JsonSerializerOptions" /> used to marshal function parameters and any return value.</param>
        <summary>Creates an <see cref="T:Microsoft.Extensions.AI.AIFunction" /> instance for a method, specified via a delegate.</summary>
        <returns>The created <see cref="T:Microsoft.Extensions.AI.AIFunction" /> for invoking <paramref name="method" />.</returns>
        <remarks>
          <para>
            Return values are serialized to <see cref="T:System.Text.Json.JsonElement" /> using <paramref name="serializerOptions" />.
            Arguments that are not already of the expected type are marshaled to the expected type via JSON and using
            <paramref name="serializerOptions" />. If the argument is a <see cref="T:System.Text.Json.JsonElement" />, <see cref="T:System.Text.Json.JsonDocument" />,
            or <see cref="T:System.Text.Json.Nodes.JsonNode" />, it is deserialized directly. If the argument is anything else unknown, it is
            round-tripped through JSON, serializing the object as JSON and then deserializing it to the expected type.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.AI.AIFunction Create (System.Reflection.MethodInfo method, object? target, string? name = default, string? description = default, System.Text.Json.JsonSerializerOptions? serializerOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.AI.AIFunction Create(class System.Reflection.MethodInfo method, object target, string name, string description, class System.Text.Json.JsonSerializerOptions serializerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.AIFunctionFactory.Create(System.Reflection.MethodInfo,System.Object,System.String,System.String,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (method As MethodInfo, target As Object, Optional name As String = Nothing, Optional description As String = Nothing, Optional serializerOptions As JsonSerializerOptions = Nothing) As AIFunction" />
      <MemberSignature Language="F#" Value="static member Create : System.Reflection.MethodInfo * obj * string * string * System.Text.Json.JsonSerializerOptions -&gt; Microsoft.Extensions.AI.AIFunction" Usage="Microsoft.Extensions.AI.AIFunctionFactory.Create (method, target, name, description, serializerOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.AIFunction</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="serializerOptions" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="method">The method to be represented via the created <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</param>
        <param name="target">
            The target object for the <paramref name="method" /> if it represents an instance method.
            This should be <see langword="null" /> if and only if <paramref name="method" /> is a static method.
            </param>
        <param name="name">The name to use for the <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</param>
        <param name="description">The description to use for the <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</param>
        <param name="serializerOptions">The <see cref="T:System.Text.Json.JsonSerializerOptions" /> used to marshal function parameters and return value.</param>
        <summary>
            Creates an <see cref="T:Microsoft.Extensions.AI.AIFunction" /> instance for a method, specified via an <see cref="T:System.Reflection.MethodInfo" /> instance
            and an optional target object if the method is an instance method.
            </summary>
        <returns>The created <see cref="T:Microsoft.Extensions.AI.AIFunction" /> for invoking <paramref name="method" />.</returns>
        <remarks>
          <para>
            Return values are serialized to <see cref="T:System.Text.Json.JsonElement" /> using <paramref name="serializerOptions" />.
            Arguments that are not already of the expected type are marshaled to the expected type via JSON and using
            <paramref name="serializerOptions" />. If the argument is a <see cref="T:System.Text.Json.JsonElement" />, <see cref="T:System.Text.Json.JsonDocument" />,
            or <see cref="T:System.Text.Json.Nodes.JsonNode" />, it is deserialized directly. If the argument is anything else unknown, it is
            round-tripped through JSON, serializing the object as JSON and then deserializing it to the expected type.
            </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

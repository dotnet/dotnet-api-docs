<Type Name="AIFunctionFactory" FullName="Microsoft.Extensions.AI.AIFunctionFactory">
  <TypeSignature Language="C#" Value="public static class AIFunctionFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AIFunctionFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.AIFunctionFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class AIFunctionFactory" />
  <TypeSignature Language="F#" Value="type AIFunctionFactory = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class AIFunctionFactory abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.1.0.0</AssemblyVersion>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
    <AssemblyVersion>9.5.0.0</AssemblyVersion>
    <AssemblyVersion>9.6.0.0</AssemblyVersion>
    <AssemblyVersion>9.7.0.0</AssemblyVersion>
    <AssemblyVersion>9.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides factory methods for creating commonly-used implementations of <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</summary>
    <remarks>To be added.</remarks>
    <related type="Article" href="https://learn.microsoft.com/dotnet/ai/quickstarts/use-function-calling">Invoke .NET functions using an AI model.</related>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.AI.AIFunction Create (Delegate method, Microsoft.Extensions.AI.AIFunctionFactoryOptions? options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.AI.AIFunction Create(class System.Delegate method, class Microsoft.Extensions.AI.AIFunctionFactoryOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.AIFunctionFactory.Create(System.Delegate,Microsoft.Extensions.AI.AIFunctionFactoryOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (method As Delegate, options As AIFunctionFactoryOptions) As AIFunction" />
      <MemberSignature Language="F#" Value="static member Create : Delegate * Microsoft.Extensions.AI.AIFunctionFactoryOptions -&gt; Microsoft.Extensions.AI.AIFunction" Usage="Microsoft.Extensions.AI.AIFunctionFactory.Create (method, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Extensions::AI::AIFunction ^ Create(Delegate ^ method, Microsoft::Extensions::AI::AIFunctionFactoryOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.AIFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.AIFunctionFactoryOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">The method to be represented via the created <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</param>
        <param name="options">Metadata to use to override defaults inferred from <paramref name="method" />.</param>
        <summary>Creates an <see cref="T:Microsoft.Extensions.AI.AIFunction" /> instance for a method, specified via a delegate.</summary>
        <returns>The created <see cref="T:Microsoft.Extensions.AI.AIFunction" /> for invoking <paramref name="method" />.</returns>
        <remarks>
          <para>
            By default, any parameters to <paramref name="method" /> are sourced from the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" />'s dictionary
            of key/value pairs and are represented in the JSON schema for the function, as exposed in the returned <see cref="T:Microsoft.Extensions.AI.AIFunction" />'s
            <see cref="P:Microsoft.Extensions.AI.AIFunctionDeclaration.JsonSchema" />. There are a few exceptions to this:
            <list type="bullet"><item><description><see cref="T:System.Threading.CancellationToken" /> parameters are automatically bound to the <see cref="T:System.Threading.CancellationToken" /> passed into
                  the invocation via <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" />'s <see cref="T:System.Threading.CancellationToken" /> parameter. The parameter is
                  not included in the generated JSON schema. The behavior of <see cref="T:System.Threading.CancellationToken" /> parameters may not be overridden.
                </description></item><item><description>
                  By default, <see cref="T:System.IServiceProvider" /> parameters are bound from the <see cref="P:Microsoft.Extensions.AI.AIFunctionArguments.Services" /> property
                  and are not included in the JSON schema. If the parameter is optional, such that a default value is provided,
                  <see cref="P:Microsoft.Extensions.AI.AIFunctionArguments.Services" /> is allowed to be <see langword="null" />; otherwise, <see cref="P:Microsoft.Extensions.AI.AIFunctionArguments.Services" />
                  must be non-<see langword="null" />, or else the invocation will fail with an exception due to the required nature of the parameter.
                  The handling of <see cref="T:System.IServiceProvider" /> parameters may be overridden via <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ConfigureParameterBinding" />.
                </description></item><item><description>
                  By default, <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> parameters are bound directly to <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> instance
                  passed into <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" /> and are not included in the JSON schema. If the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" />
                  instance passed to <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" /> is <see langword="null" />, the <see cref="T:Microsoft.Extensions.AI.AIFunction" /> implementation
                  manufactures an empty instance, such that parameters of type <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> may always be satisfied, whether
                  optional or not. The handling of <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> parameters may be overridden via
                  <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ConfigureParameterBinding" />.
                </description></item></list>
            All other parameter types are, by default, bound from the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> dictionary passed into <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" />
            and are included in the generated JSON schema. This may be overridden by the <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ConfigureParameterBinding" /> provided
            via the <paramref name="options" /> parameter; for every parameter, the delegate is enabled to choose if the parameter should be included in the
            generated schema and how its value should be bound, including handling of optionality (by default, required parameters that are not included in the
            <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> dictionary will result in an exception being thrown). Loosely-typed additional context information may be passed
            into <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" /> via the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" />'s <see cref="P:Microsoft.Extensions.AI.AIFunctionArguments.Context" /> dictionary; the default
            binding ignores this collection, but a custom binding supplied via <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ConfigureParameterBinding" /> may choose to
            source arguments from this data.
            </para>
          <para>
            The default marshaling of parameters from the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> dictionary permits values to be passed into the <paramref name="method" />'s
            invocation directly if the object is already of a compatible type. Otherwise, if the argument is a <see cref="T:System.Text.Json.JsonElement" />, <see cref="T:System.Text.Json.JsonDocument" />,
            or <see cref="T:System.Text.Json.Nodes.JsonNode" />, it is deserialized into the parameter type, utilizing <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.SerializerOptions" /> if provided,
            or else using <see cref="P:Microsoft.Extensions.AI.AIJsonUtilities.DefaultOptions" />. If the argument is anything else, it is round-tripped through JSON, serializing the object as JSON
            and then deserializing it to the expected type.
            </para>
          <para>
            In general, the data supplied via an <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" />'s dictionary is supplied from an AI service and should be considered
            unvalidated and untrusted. To provide validated and trusted data to the invocation of <paramref name="method" />, consider having <paramref name="method" />
            point to an instance method on an instance configured to hold the appropriate state. An <see cref="T:System.IServiceProvider" /> parameter may also be
            used to resolve services from a dependency injection container.
            </para>
          <para>
            By default, return values are serialized to <see cref="T:System.Text.Json.JsonElement" /> using <paramref name="options" />'s
            <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.SerializerOptions" /> if provided, or else using <see cref="P:Microsoft.Extensions.AI.AIJsonUtilities.DefaultOptions" />.
            Handling of return values may be overridden via <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.MarshalResult" />.
            </para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="method" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Text.Json.JsonException">A parameter to <paramref name="method" /> is not serializable.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.AI.AIFunction Create (System.Reflection.MethodInfo method, Func&lt;Microsoft.Extensions.AI.AIFunctionArguments,object&gt; createInstanceFunc, Microsoft.Extensions.AI.AIFunctionFactoryOptions? options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.AI.AIFunction Create(class System.Reflection.MethodInfo method, class System.Func`2&lt;class Microsoft.Extensions.AI.AIFunctionArguments, object&gt; createInstanceFunc, class Microsoft.Extensions.AI.AIFunctionFactoryOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.AIFunctionFactory.Create(System.Reflection.MethodInfo,System.Func{Microsoft.Extensions.AI.AIFunctionArguments,System.Object},Microsoft.Extensions.AI.AIFunctionFactoryOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (method As MethodInfo, createInstanceFunc As Func(Of AIFunctionArguments, Object), Optional options As AIFunctionFactoryOptions = Nothing) As AIFunction" />
      <MemberSignature Language="F#" Value="static member Create : System.Reflection.MethodInfo * Func&lt;Microsoft.Extensions.AI.AIFunctionArguments, obj&gt; * Microsoft.Extensions.AI.AIFunctionFactoryOptions -&gt; Microsoft.Extensions.AI.AIFunction" Usage="Microsoft.Extensions.AI.AIFunctionFactory.Create (method, createInstanceFunc, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.AIFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="createInstanceFunc" Type="System.Func&lt;Microsoft.Extensions.AI.AIFunctionArguments,System.Object&gt;" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.AIFunctionFactoryOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">The instance method to be represented via the created <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</param>
        <param name="createInstanceFunc">
            Callback used on each function invocation to create an instance of the type on which the instance method <paramref name="method" />
            will be invoked. If the returned instance is <see cref="T:System.IAsyncDisposable" /> or <see cref="T:System.IDisposable" />, it will be disposed of
            after <paramref name="method" /> completes its invocation.
            </param>
        <param name="options">Metadata to use to override defaults inferred from <paramref name="method" />.</param>
        <summary>
            Creates an <see cref="T:Microsoft.Extensions.AI.AIFunction" /> instance for a method, specified via a <see cref="T:System.Reflection.MethodInfo" /> for
            an instance method and a <see cref="T:System.Func`2" /> for constructing an instance of
            the receiver object each time the <see cref="T:Microsoft.Extensions.AI.AIFunction" /> is invoked.
            </summary>
        <returns>The created <see cref="T:Microsoft.Extensions.AI.AIFunction" /> for invoking <paramref name="method" />.</returns>
        <remarks>
          <para>
            Return values are serialized to <see cref="T:System.Text.Json.JsonElement" /> using <paramref name="options" />'s
            <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.SerializerOptions" />. Arguments that are not already of the expected type are
            marshaled to the expected type via JSON and using <paramref name="options" />'s
            <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.SerializerOptions" />. If the argument is a <see cref="T:System.Text.Json.JsonElement" />,
            <see cref="T:System.Text.Json.JsonDocument" />, or <see cref="T:System.Text.Json.Nodes.JsonNode" />, it is deserialized directly. If the argument is anything else unknown,
            it is round-tripped through JSON, serializing the object as JSON and then deserializing it to the expected type.
            </para>
          <para>
            By default, any parameters to <paramref name="method" /> are sourced from the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" />'s dictionary
            of key/value pairs and are represented in the JSON schema for the function, as exposed in the returned <see cref="T:Microsoft.Extensions.AI.AIFunction" />'s
            <see cref="P:Microsoft.Extensions.AI.AIFunctionDeclaration.JsonSchema" />. There are a few exceptions to this:
            <list type="bullet"><item><description><see cref="T:System.Threading.CancellationToken" /> parameters are automatically bound to the <see cref="T:System.Threading.CancellationToken" /> passed into
                  the invocation via <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" />'s <see cref="T:System.Threading.CancellationToken" /> parameter. The parameter is
                  not included in the generated JSON schema. The behavior of <see cref="T:System.Threading.CancellationToken" /> parameters may not be overridden.
                </description></item><item><description>
                  By default, <see cref="T:System.IServiceProvider" /> parameters are bound from the <see cref="P:Microsoft.Extensions.AI.AIFunctionArguments.Services" /> property
                  and are not included in the JSON schema. If the parameter is optional, such that a default value is provided,
                  <see cref="P:Microsoft.Extensions.AI.AIFunctionArguments.Services" /> is allowed to be <see langword="null" />; otherwise, <see cref="P:Microsoft.Extensions.AI.AIFunctionArguments.Services" />
                  must be non-<see langword="null" />, or else the invocation will fail with an exception due to the required nature of the parameter.
                  The handling of <see cref="T:System.IServiceProvider" /> parameters may be overridden via <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ConfigureParameterBinding" />.
                </description></item><item><description>
                  By default, <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> parameters are bound directly to <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> instance
                  passed into <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" /> and are not included in the JSON schema. If the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" />
                  instance passed to <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" /> is <see langword="null" />, the <see cref="T:Microsoft.Extensions.AI.AIFunction" /> implementation
                  manufactures an empty instance, such that parameters of type <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> may always be satisfied, whether
                  optional or not. The handling of <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> parameters may be overridden via
                  <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ConfigureParameterBinding" />.
                </description></item></list>
            All other parameter types are, by default, bound from the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> dictionary passed into <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" />
            and are included in the generated JSON schema. This may be overridden by the <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ConfigureParameterBinding" /> provided
            via the <paramref name="options" /> parameter; for every parameter, the delegate is enabled to choose if the parameter should be included in the
            generated schema and how its value should be bound, including handling of optionality (by default, required parameters that are not included in the
            <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> dictionary will result in an exception being thrown). Loosely-typed additional context information may be passed
            into <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" /> via the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" />'s <see cref="P:Microsoft.Extensions.AI.AIFunctionArguments.Context" /> dictionary; the default
            binding ignores this collection, but a custom binding supplied via <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ConfigureParameterBinding" /> may choose to
            source arguments from this data.
            </para>
          <para>
            The default marshaling of parameters from the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> dictionary permits values to be passed into the <paramref name="method" />'s
            invocation directly if the object is already of a compatible type. Otherwise, if the argument is a <see cref="T:System.Text.Json.JsonElement" />, <see cref="T:System.Text.Json.JsonDocument" />,
            or <see cref="T:System.Text.Json.Nodes.JsonNode" />, it is deserialized into the parameter type, utilizing <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.SerializerOptions" /> if provided,
            or else using <see cref="P:Microsoft.Extensions.AI.AIJsonUtilities.DefaultOptions" />. If the argument is anything else, it is round-tripped through JSON, serializing the object as JSON
            and then deserializing it to the expected type.
            </para>
          <para>
            In general, the data supplied via an <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" />'s dictionary is supplied from an AI service and should be considered
            unvalidated and untrusted. To provide validated and trusted data to the invocation of <paramref name="method" />, the instance constructed
            for each invocation may contain that data in it, such that it's then available to <paramref name="method" /> as instance data.
            An <see cref="T:System.IServiceProvider" /> parameter may also be used to resolve services from a dependency injection container.
            </para>
          <para>
            By default, return values are serialized to <see cref="T:System.Text.Json.JsonElement" /> using <paramref name="options" />'s
            <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.SerializerOptions" /> if provided, or else using <see cref="P:Microsoft.Extensions.AI.AIJsonUtilities.DefaultOptions" />.
            Handling of return values may be overridden via <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.MarshalResult" />.
            </para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="createInstanceFunc" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="method" /> contains a parameter without a parameter name.</exception>
        <exception cref="T:System.Text.Json.JsonException">A parameter to <paramref name="method" /> or its return type is not serializable.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.AI.AIFunction Create (System.Reflection.MethodInfo method, object? target, Microsoft.Extensions.AI.AIFunctionFactoryOptions? options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.AI.AIFunction Create(class System.Reflection.MethodInfo method, object target, class Microsoft.Extensions.AI.AIFunctionFactoryOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.AIFunctionFactory.Create(System.Reflection.MethodInfo,System.Object,Microsoft.Extensions.AI.AIFunctionFactoryOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (method As MethodInfo, target As Object, options As AIFunctionFactoryOptions) As AIFunction" />
      <MemberSignature Language="F#" Value="static member Create : System.Reflection.MethodInfo * obj * Microsoft.Extensions.AI.AIFunctionFactoryOptions -&gt; Microsoft.Extensions.AI.AIFunction" Usage="Microsoft.Extensions.AI.AIFunctionFactory.Create (method, target, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Extensions::AI::AIFunction ^ Create(System::Reflection::MethodInfo ^ method, System::Object ^ target, Microsoft::Extensions::AI::AIFunctionFactoryOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.AIFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="target" Type="System.Object">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="options" Type="Microsoft.Extensions.AI.AIFunctionFactoryOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">The method to be represented via the created <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</param>
        <param name="target">
            The target object for the <paramref name="method" /> if it represents an instance method.
            This should be <see langword="null" /> if and only if <paramref name="method" /> is a static method.
            </param>
        <param name="options">Metadata to use to override defaults inferred from <paramref name="method" />.</param>
        <summary>
            Creates an <see cref="T:Microsoft.Extensions.AI.AIFunction" /> instance for a method, specified via an <see cref="T:System.Reflection.MethodInfo" /> instance
            and an optional target object if the method is an instance method.
            </summary>
        <returns>The created <see cref="T:Microsoft.Extensions.AI.AIFunction" /> for invoking <paramref name="method" />.</returns>
        <remarks>
          <para>
            By default, any parameters to <paramref name="method" /> are sourced from the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" />'s dictionary
            of key/value pairs and are represented in the JSON schema for the function, as exposed in the returned <see cref="T:Microsoft.Extensions.AI.AIFunction" />'s
            <see cref="P:Microsoft.Extensions.AI.AIFunctionDeclaration.JsonSchema" />. There are a few exceptions to this:
            <list type="bullet"><item><description><see cref="T:System.Threading.CancellationToken" /> parameters are automatically bound to the <see cref="T:System.Threading.CancellationToken" /> passed into
                  the invocation via <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" />'s <see cref="T:System.Threading.CancellationToken" /> parameter. The parameter is
                  not included in the generated JSON schema. The behavior of <see cref="T:System.Threading.CancellationToken" /> parameters may not be overridden.
                </description></item><item><description>
                  By default, <see cref="T:System.IServiceProvider" /> parameters are bound from the <see cref="P:Microsoft.Extensions.AI.AIFunctionArguments.Services" /> property
                  and are not included in the JSON schema. If the parameter is optional, such that a default value is provided,
                  <see cref="P:Microsoft.Extensions.AI.AIFunctionArguments.Services" /> is allowed to be <see langword="null" />; otherwise, <see cref="P:Microsoft.Extensions.AI.AIFunctionArguments.Services" />
                  must be non-<see langword="null" />, or else the invocation will fail with an exception due to the required nature of the parameter.
                  The handling of <see cref="T:System.IServiceProvider" /> parameters may be overridden via <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ConfigureParameterBinding" />.
                </description></item><item><description>
                  By default, <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> parameters are bound directly to <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> instance
                  passed into <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" /> and are not included in the JSON schema. If the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" />
                  instance passed to <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" /> is <see langword="null" />, the <see cref="T:Microsoft.Extensions.AI.AIFunction" /> implementation
                  manufactures an empty instance, such that parameters of type <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> may always be satisfied, whether
                  optional or not. The handling of <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> parameters may be overridden via
                  <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ConfigureParameterBinding" />.
                </description></item></list>
            All other parameter types are, by default, bound from the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> dictionary passed into <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" />
            and are included in the generated JSON schema. This may be overridden by the <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ConfigureParameterBinding" /> provided
            via the <paramref name="options" /> parameter; for every parameter, the delegate is enabled to choose if the parameter should be included in the
            generated schema and how its value should be bound, including handling of optionality (by default, required parameters that are not included in the
            <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> dictionary will result in an exception being thrown). Loosely-typed additional context information may be passed
            into <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" /> via the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" />'s <see cref="P:Microsoft.Extensions.AI.AIFunctionArguments.Context" /> dictionary; the default
            binding ignores this collection, but a custom binding supplied via <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ConfigureParameterBinding" /> may choose to
            source arguments from this data.
            </para>
          <para>
            The default marshaling of parameters from the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> dictionary permits values to be passed into the <paramref name="method" />'s
            invocation directly if the object is already of a compatible type. Otherwise, if the argument is a <see cref="T:System.Text.Json.JsonElement" />, <see cref="T:System.Text.Json.JsonDocument" />,
            or <see cref="T:System.Text.Json.Nodes.JsonNode" />, it is deserialized into the parameter type, utilizing <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.SerializerOptions" /> if provided,
            or else using <see cref="P:Microsoft.Extensions.AI.AIJsonUtilities.DefaultOptions" />. If the argument is anything else, it is round-tripped through JSON, serializing the object as JSON
            and then deserializing it to the expected type.
            </para>
          <para>
            In general, the data supplied via an <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" />'s dictionary is supplied from an AI service and should be considered
            unvalidated and untrusted. To provide validated and trusted data to the invocation of <paramref name="method" />, consider having <paramref name="method" />
            point to an instance method on an instance configured to hold the appropriate state. An <see cref="T:System.IServiceProvider" /> parameter may also be
            used to resolve services from a dependency injection container.
            </para>
          <para>
            By default, return values are serialized to <see cref="T:System.Text.Json.JsonElement" /> using <paramref name="options" />'s
            <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.SerializerOptions" /> if provided, or else using <see cref="P:Microsoft.Extensions.AI.AIJsonUtilities.DefaultOptions" />.
            Handling of return values may be overridden via <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.MarshalResult" />.
            </para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="method" /> represents an instance method but <paramref name="target" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="method" /> contains a parameter without a parameter name.</exception>
        <exception cref="T:System.Text.Json.JsonException">A parameter to <paramref name="method" /> or its return type is not serializable.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.AI.AIFunction Create (Delegate method, string? name = default, string? description = default, System.Text.Json.JsonSerializerOptions? serializerOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.AI.AIFunction Create(class System.Delegate method, string name, string description, class System.Text.Json.JsonSerializerOptions serializerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.AIFunctionFactory.Create(System.Delegate,System.String,System.String,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (method As Delegate, Optional name As String = Nothing, Optional description As String = Nothing, Optional serializerOptions As JsonSerializerOptions = Nothing) As AIFunction" />
      <MemberSignature Language="F#" Value="static member Create : Delegate * string * string * System.Text.Json.JsonSerializerOptions -&gt; Microsoft.Extensions.AI.AIFunction" Usage="Microsoft.Extensions.AI.AIFunctionFactory.Create (method, name, description, serializerOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.AIFunction</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-10.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="serializerOptions" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="method">The method to be represented via the created <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</param>
        <param name="name">
            The name to use for the <see cref="T:Microsoft.Extensions.AI.AIFunction" />. If <see langword="null" />, the name will be derived from
            the name of <paramref name="method" />.
            </param>
        <param name="description">
            The description to use for the <see cref="T:Microsoft.Extensions.AI.AIFunction" />. If <see langword="null" />, a description will be derived from
            any <see cref="T:System.ComponentModel.DescriptionAttribute" /> on <paramref name="method" />, if available.
            </param>
        <param name="serializerOptions">The <see cref="T:System.Text.Json.JsonSerializerOptions" /> used to marshal function parameters and any return value.</param>
        <summary>Creates an <see cref="T:Microsoft.Extensions.AI.AIFunction" /> instance for a method, specified via a delegate.</summary>
        <returns>The created <see cref="T:Microsoft.Extensions.AI.AIFunction" /> for invoking <paramref name="method" />.</returns>
        <remarks>
          <para>
            Any parameters to <paramref name="method" /> are sourced from the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" />'s dictionary
            of key/value pairs and are represented in the JSON schema for the function, as exposed in the returned <see cref="T:Microsoft.Extensions.AI.AIFunction" />'s
            <see cref="P:Microsoft.Extensions.AI.AIFunctionDeclaration.JsonSchema" />. There are a few exceptions to this:
            <list type="bullet"><item><description><see cref="T:System.Threading.CancellationToken" /> parameters are automatically bound to the <see cref="T:System.Threading.CancellationToken" /> passed into
                  the invocation via <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" />'s <see cref="T:System.Threading.CancellationToken" /> parameter. The parameter is
                  not included in the generated JSON schema.
                </description></item><item><description>
                  By default, <see cref="T:System.IServiceProvider" /> parameters are bound from the <see cref="P:Microsoft.Extensions.AI.AIFunctionArguments.Services" /> property
                  and are not included in the JSON schema. If the parameter is optional, such that a default value is provided,
                  <see cref="P:Microsoft.Extensions.AI.AIFunctionArguments.Services" /> is allowed to be <see langword="null" />; otherwise, <see cref="P:Microsoft.Extensions.AI.AIFunctionArguments.Services" />
                  must be non-<see langword="null" />, or else the invocation will fail with an exception due to the required nature of the parameter.
                </description></item><item><description>
                  By default, <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> parameters are bound directly to <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> instance
                  passed into <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" /> and are not included in the JSON schema. If the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" />
                  instance passed to <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" /> is <see langword="null" />, the <see cref="T:Microsoft.Extensions.AI.AIFunction" /> implementation
                  manufactures an empty instance, such that parameters of type <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> may always be satisfied, whether
                  optional or not.
                </description></item></list>
            All other parameter types are bound from the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> dictionary passed into <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" />
            and are included in the generated JSON schema.
            </para>
          <para>
            The marshaling of parameters from the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> dictionary permits values to be passed into the <paramref name="method" />'s
            invocation directly if the object is already of a compatible type. Otherwise, if the argument is a <see cref="T:System.Text.Json.JsonElement" />, <see cref="T:System.Text.Json.JsonDocument" />,
            or <see cref="T:System.Text.Json.Nodes.JsonNode" />, it is deserialized into the parameter type, utilizing <paramref name="serializerOptions" /> if provided, or else
            <see cref="P:Microsoft.Extensions.AI.AIJsonUtilities.DefaultOptions" />. If the argument is anything else, it is round-tripped through JSON, serializing the object as JSON
            and then deserializing it to the expected type.
            </para>
          <para>
            In general, the data supplied via an <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" />'s dictionary is supplied from an AI service and should be considered
            unvalidated and untrusted. To provide validated and trusted data to the invocation of <paramref name="method" />, consider having <paramref name="method" />
            point to an instance method on an instance configured to hold the appropriate state. An <see cref="T:System.IServiceProvider" /> parameter may also be
            used to resolve services from a dependency injection container.
            </para>
          <para>
            Return values are serialized to <see cref="T:System.Text.Json.JsonElement" /> using <paramref name="serializerOptions" /> if provided,
            or else using <see cref="P:Microsoft.Extensions.AI.AIJsonUtilities.DefaultOptions" />.
            </para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="method" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Text.Json.JsonException">A parameter to <paramref name="method" /> is not serializable.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.AI.AIFunction Create (System.Reflection.MethodInfo method, object? target, string? name = default, string? description = default, System.Text.Json.JsonSerializerOptions? serializerOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.AI.AIFunction Create(class System.Reflection.MethodInfo method, object target, string name, string description, class System.Text.Json.JsonSerializerOptions serializerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.AIFunctionFactory.Create(System.Reflection.MethodInfo,System.Object,System.String,System.String,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (method As MethodInfo, target As Object, Optional name As String = Nothing, Optional description As String = Nothing, Optional serializerOptions As JsonSerializerOptions = Nothing) As AIFunction" />
      <MemberSignature Language="F#" Value="static member Create : System.Reflection.MethodInfo * obj * string * string * System.Text.Json.JsonSerializerOptions -&gt; Microsoft.Extensions.AI.AIFunction" Usage="Microsoft.Extensions.AI.AIFunctionFactory.Create (method, target, name, description, serializerOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.AIFunction</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-10.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="serializerOptions" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="method">The method to be represented via the created <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</param>
        <param name="target">
            The target object for the <paramref name="method" /> if it represents an instance method.
            This should be <see langword="null" /> if and only if <paramref name="method" /> is a static method.
            </param>
        <param name="name">
            The name to use for the <see cref="T:Microsoft.Extensions.AI.AIFunction" />. If <see langword="null" />, the name will be derived from
            the name of <paramref name="method" />.
            </param>
        <param name="description">
            The description to use for the <see cref="T:Microsoft.Extensions.AI.AIFunction" />. If <see langword="null" />, a description will be derived from
            any <see cref="T:System.ComponentModel.DescriptionAttribute" /> on <paramref name="method" />, if available.
            </param>
        <param name="serializerOptions">The <see cref="T:System.Text.Json.JsonSerializerOptions" /> used to marshal function parameters and return value.</param>
        <summary>
            Creates an <see cref="T:Microsoft.Extensions.AI.AIFunction" /> instance for a method, specified via an <see cref="T:System.Reflection.MethodInfo" /> instance
            and an optional target object if the method is an instance method.
            </summary>
        <returns>The created <see cref="T:Microsoft.Extensions.AI.AIFunction" /> for invoking <paramref name="method" />.</returns>
        <remarks>
          <para>
            Any parameters to <paramref name="method" /> are sourced from the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" />'s dictionary
            of key/value pairs and are represented in the JSON schema for the function, as exposed in the returned <see cref="T:Microsoft.Extensions.AI.AIFunction" />'s
            <see cref="P:Microsoft.Extensions.AI.AIFunctionDeclaration.JsonSchema" />. There are a few exceptions to this:
            <list type="bullet"><item><description><see cref="T:System.Threading.CancellationToken" /> parameters are automatically bound to the <see cref="T:System.Threading.CancellationToken" /> passed into
                  the invocation via <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" />'s <see cref="T:System.Threading.CancellationToken" /> parameter. The parameter is
                  not included in the generated JSON schema.
                </description></item><item><description>
                  By default, <see cref="T:System.IServiceProvider" /> parameters are bound from the <see cref="P:Microsoft.Extensions.AI.AIFunctionArguments.Services" /> property
                  and are not included in the JSON schema. If the parameter is optional, such that a default value is provided,
                  <see cref="P:Microsoft.Extensions.AI.AIFunctionArguments.Services" /> is allowed to be <see langword="null" />; otherwise, <see cref="P:Microsoft.Extensions.AI.AIFunctionArguments.Services" />
                  must be non-<see langword="null" />, or else the invocation will fail with an exception due to the required nature of the parameter.
                </description></item><item><description>
                  By default, <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> parameters are bound directly to <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> instance
                  passed into <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" /> and are not included in the JSON schema. If the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" />
                  instance passed to <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" /> is <see langword="null" />, the <see cref="T:Microsoft.Extensions.AI.AIFunction" /> implementation
                  manufactures an empty instance, such that parameters of type <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> may always be satisfied, whether
                  optional or not.
                </description></item></list>
            All other parameter types are bound from the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> dictionary passed into <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" />
            and are included in the generated JSON schema.
            </para>
          <para>
            The marshaling of parameters from the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> dictionary permits values to be passed into the <paramref name="method" />'s
            invocation directly if the object is already of a compatible type. Otherwise, if the argument is a <see cref="T:System.Text.Json.JsonElement" />, <see cref="T:System.Text.Json.JsonDocument" />,
            or <see cref="T:System.Text.Json.Nodes.JsonNode" />, it is deserialized into the parameter type, utilizing <paramref name="serializerOptions" /> if provided, or else
            <see cref="P:Microsoft.Extensions.AI.AIJsonUtilities.DefaultOptions" />. If the argument is anything else, it is round-tripped through JSON, serializing the object as JSON
            and then deserializing it to the expected type.
            </para>
          <para>
            In general, the data supplied via an <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" />'s dictionary is supplied from an AI service and should be considered
            unvalidated and untrusted. To provide validated and trusted data to the invocation of <paramref name="method" />, consider having <paramref name="method" />
            point to an instance method on an instance configured to hold the appropriate state. An <see cref="T:System.IServiceProvider" /> parameter may also be
            used to resolve services from a dependency injection container.
            </para>
          <para>
            Return values are serialized to <see cref="T:System.Text.Json.JsonElement" /> using <paramref name="serializerOptions" /> if provided,
            or else using <see cref="P:Microsoft.Extensions.AI.AIJsonUtilities.DefaultOptions" />.
            </para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="method" /> represents an instance method but <paramref name="target" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="method" /> contains a parameter without a parameter name.</exception>
        <exception cref="T:System.Text.Json.JsonException">A parameter to <paramref name="method" /> or its return type is not serializable.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDeclaration">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.AI.AIFunctionDeclaration CreateDeclaration (string name, string? description, System.Text.Json.JsonElement jsonSchema, System.Text.Json.JsonElement? returnJsonSchema = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.AI.AIFunctionDeclaration CreateDeclaration(string name, string description, valuetype System.Text.Json.JsonElement jsonSchema, valuetype System.Nullable`1&lt;valuetype System.Text.Json.JsonElement&gt; returnJsonSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.AIFunctionFactory.CreateDeclaration(System.String,System.String,System.Text.Json.JsonElement,System.Nullable{System.Text.Json.JsonElement})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDeclaration (name As String, description As String, jsonSchema As JsonElement, Optional returnJsonSchema As Nullable(Of JsonElement) = Nothing) As AIFunctionDeclaration" />
      <MemberSignature Language="F#" Value="static member CreateDeclaration : string * string * System.Text.Json.JsonElement * Nullable&lt;System.Text.Json.JsonElement&gt; -&gt; Microsoft.Extensions.AI.AIFunctionDeclaration" Usage="Microsoft.Extensions.AI.AIFunctionFactory.CreateDeclaration (name, description, jsonSchema, returnJsonSchema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.AIFunctionDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="jsonSchema" Type="System.Text.Json.JsonElement" />
        <Parameter Name="returnJsonSchema" Type="System.Nullable&lt;System.Text.Json.JsonElement&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The name of the function.</param>
        <param name="description">A description of the function, suitable for use in describing the purpose to a model.</param>
        <param name="jsonSchema">A JSON schema describing the function and its input parameters.</param>
        <param name="returnJsonSchema">A JSON schema describing the function's return value.</param>
        <summary>Creates an <see cref="T:Microsoft.Extensions.AI.AIFunctionDeclaration" /> using the specified parameters as the implementation of its corresponding properties.</summary>
        <returns>The created <see cref="T:Microsoft.Extensions.AI.AIFunctionDeclaration" /> that describes a function.</returns>
        <remarks>
          <see cref="M:Microsoft.Extensions.AI.AIFunctionFactory.CreateDeclaration(System.String,System.String,System.Text.Json.JsonElement,System.Nullable{System.Text.Json.JsonElement})" /> creates an <see cref="T:Microsoft.Extensions.AI.AIFunctionDeclaration" /> that can be used to describe a function
            but not invoke it. To create an invocable <see cref="T:Microsoft.Extensions.AI.AIFunction" />, use Create. A non-invocable <see cref="T:Microsoft.Extensions.AI.AIFunctionDeclaration" />
            may also be created from an invocable <see cref="T:Microsoft.Extensions.AI.AIFunction" /> using that function's <see cref="M:Microsoft.Extensions.AI.AIFunction.AsDeclarationOnly" /> method.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

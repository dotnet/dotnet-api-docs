<Type Name="FunctionInvokingChatClient+FunctionInvocationContext" FullName="Microsoft.Extensions.AI.FunctionInvokingChatClient+FunctionInvocationContext">
  <TypeSignature Language="C#" Value="public sealed class FunctionInvokingChatClient.FunctionInvocationContext" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit FunctionInvokingChatClient/FunctionInvocationContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FunctionInvokingChatClient.FunctionInvocationContext" />
  <TypeSignature Language="F#" Value="type FunctionInvokingChatClient.FunctionInvocationContext = class" />
  <TypeSignature Language="C++ CLI" Value="public: ref class FunctionInvokingChatClient::FunctionInvocationContext sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.1.0.0</AssemblyVersion>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides context for a function invocation.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CallContent">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.FunctionCallContent CallContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.FunctionCallContent CallContent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationContext.CallContent" />
      <MemberSignature Language="VB.NET" Value="Public Property CallContent As FunctionCallContent" />
      <MemberSignature Language="F#" Value="member this.CallContent : Microsoft.Extensions.AI.FunctionCallContent with get, set" Usage="Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationContext.CallContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::AI::FunctionCallContent ^ CallContent { Microsoft::Extensions::AI::FunctionCallContent ^ get(); void set(Microsoft::Extensions::AI::FunctionCallContent ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.FunctionCallContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the function call content information associated with this invocation.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChatMessages">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; ChatMessages { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; ChatMessages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationContext.ChatMessages" />
      <MemberSignature Language="VB.NET" Value="Public Property ChatMessages As IList(Of ChatMessage)" />
      <MemberSignature Language="F#" Value="member this.ChatMessages : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; with get, set" Usage="Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationContext.ChatMessages" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ ChatMessages { System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the chat contents associated with the operation that initiated this function call request.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Function">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.AIFunction Function { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.AIFunction Function" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationContext.Function" />
      <MemberSignature Language="VB.NET" Value="Public Property Function As AIFunction" />
      <MemberSignature Language="F#" Value="member this.Function : Microsoft.Extensions.AI.AIFunction with get, set" Usage="Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationContext.Function" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::AI::AIFunction ^ Function { Microsoft::Extensions::AI::AIFunction ^ get(); void set(Microsoft::Extensions::AI::AIFunction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.AIFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the AI function to be invoked.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionCallIndex">
      <MemberSignature Language="C#" Value="public int FunctionCallIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FunctionCallIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationContext.FunctionCallIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property FunctionCallIndex As Integer" />
      <MemberSignature Language="F#" Value="member this.FunctionCallIndex : int with get, set" Usage="Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationContext.FunctionCallIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FunctionCallIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the index of the function call within the iteration.</summary>
        <value>To be added.</value>
        <remarks>
            The response from the underlying client may include multiple function call requests.
            This index indicates the position of the function call within the iteration.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionCount">
      <MemberSignature Language="C#" Value="public int FunctionCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FunctionCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationContext.FunctionCount" />
      <MemberSignature Language="VB.NET" Value="Public Property FunctionCount As Integer" />
      <MemberSignature Language="F#" Value="member this.FunctionCount : int with get, set" Usage="Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationContext.FunctionCount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FunctionCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the total number of function call requests within the iteration.</summary>
        <value>To be added.</value>
        <remarks>
            The response from the underlying client might include multiple function call requests.
            This count indicates how many there were.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Iteration">
      <MemberSignature Language="C#" Value="public int Iteration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Iteration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationContext.Iteration" />
      <MemberSignature Language="VB.NET" Value="Public Property Iteration As Integer" />
      <MemberSignature Language="F#" Value="member this.Iteration : int with get, set" Usage="Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationContext.Iteration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Iteration { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the number of this iteration with the underlying client.</summary>
        <value>To be added.</value>
        <remarks>
            The initial request to the client that passes along the chat contents provided to the <see cref="T:Microsoft.Extensions.AI.FunctionInvokingChatClient" />
            is iteration 1. If the client responds with a function call request, the next request to the client is iteration 2, and so on.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public bool Terminate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Terminate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationContext.Terminate" />
      <MemberSignature Language="VB.NET" Value="Public Property Terminate As Boolean" />
      <MemberSignature Language="F#" Value="member this.Terminate : bool with get, set" Usage="Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationContext.Terminate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Terminate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether to terminate the request.</summary>
        <value>To be added.</value>
        <remarks>
            In response to a function call request, the function might be invoked, its result added to the chat contents,
            and a new request issued to the wrapped client. If this property is set to <see langword="true" />, that subsequent request
            will not be issued and instead the loop immediately terminated rather than continuing until there are no
            more function call requests in responses.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

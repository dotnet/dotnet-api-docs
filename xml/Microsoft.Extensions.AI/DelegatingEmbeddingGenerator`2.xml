<Type Name="DelegatingEmbeddingGenerator&lt;TInput,TEmbedding&gt;" FullName="Microsoft.Extensions.AI.DelegatingEmbeddingGenerator&lt;TInput,TEmbedding&gt;">
  <TypeSignature Language="C#" Value="public class DelegatingEmbeddingGenerator&lt;TInput,TEmbedding&gt; : IDisposable, Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt; where TEmbedding : Embedding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DelegatingEmbeddingGenerator`2&lt;TInput, (class Microsoft.Extensions.AI.Embedding) TEmbedding&gt; extends System.Object implements class Microsoft.Extensions.AI.IEmbeddingGenerator`2&lt;!TInput, !TEmbedding&gt;, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2" />
  <TypeSignature Language="VB.NET" Value="Public Class DelegatingEmbeddingGenerator(Of TInput, TEmbedding)&#xA;Implements IDisposable, IEmbeddingGenerator(Of TInput, TEmbedding)" />
  <TypeSignature Language="F#" Value="type DelegatingEmbeddingGenerator&lt;'Input, 'Embedding (requires 'Embedding :&gt; Embedding)&gt; = class&#xA;    interface IEmbeddingGenerator&lt;'Input, 'Embedding (requires 'Embedding :&gt; Embedding)&gt;&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TInput, typename TEmbedding&gt;&#xA; where TEmbedding : Embeddingpublic ref class DelegatingEmbeddingGenerator : IDisposable, Microsoft::Extensions::AI::IEmbeddingGenerator&lt;TInput, TEmbedding&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
    <TypeParameter Name="TEmbedding">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Constraints>
        <BaseTypeName>Microsoft.Extensions.AI.Embedding</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TInput">Specifies the type of the input passed to the generator.</typeparam>
    <typeparam name="TEmbedding">Specifies the type of the embedding instance produced by the generator.</typeparam>
    <summary>
            Provides an optional base class for an <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2" /> that passes through calls to another instance.
            </summary>
    <remarks>
            This is recommended as a base type when building generators that can be chained in any order around an underlying <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2" />.
            The default implementation simply passes each call to the inner generator instance.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DelegatingEmbeddingGenerator (Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt; innerGenerator);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.AI.IEmbeddingGenerator`2&lt;!TInput, !TEmbedding&gt; innerGenerator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.#ctor(Microsoft.Extensions.AI.IEmbeddingGenerator{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (innerGenerator As IEmbeddingGenerator(Of TInput, TEmbedding))" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.DelegatingEmbeddingGenerator&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt; : Microsoft.Extensions.AI.IEmbeddingGenerator&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt; -&gt; Microsoft.Extensions.AI.DelegatingEmbeddingGenerator&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt;" Usage="new Microsoft.Extensions.AI.DelegatingEmbeddingGenerator&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt; innerGenerator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DelegatingEmbeddingGenerator(Microsoft::Extensions::AI::IEmbeddingGenerator&lt;TInput, TEmbedding&gt; ^ innerGenerator);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerGenerator" Type="Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;" />
      </Parameters>
      <Docs>
        <param name="innerGenerator">The wrapped generator instance.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="delegatingEmbeddingGenerator.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="delegatingEmbeddingGenerator.Dispose disposing" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">true if being called from <see cref="M:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.Dispose" />; otherwise, false.</param>
        <summary>Provides a mechanism for releasing unmanaged resources.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.GeneratedEmbeddings&lt;TEmbedding&gt;&gt; GenerateAsync (System.Collections.Generic.IEnumerable&lt;TInput&gt; values, Microsoft.Extensions.AI.EmbeddingGenerationOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Extensions.AI.GeneratedEmbeddings`1&lt;!TEmbedding&gt;&gt; GenerateAsync(class System.Collections.Generic.IEnumerable`1&lt;!TInput&gt; values, class Microsoft.Extensions.AI.EmbeddingGenerationOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.GenerateAsync(System.Collections.Generic.IEnumerable{`0},Microsoft.Extensions.AI.EmbeddingGenerationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateAsync (values As IEnumerable(Of TInput), Optional options As EmbeddingGenerationOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of GeneratedEmbeddings(Of TEmbedding))" />
      <MemberSignature Language="F#" Value="abstract member GenerateAsync : seq&lt;'Input&gt; * Microsoft.Extensions.AI.EmbeddingGenerationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.GeneratedEmbeddings&lt;'Embedding&gt;&gt;&#xA;override this.GenerateAsync : seq&lt;'Input&gt; * Microsoft.Extensions.AI.EmbeddingGenerationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.GeneratedEmbeddings&lt;'Embedding&gt;&gt;" Usage="delegatingEmbeddingGenerator.GenerateAsync (values, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.AI.IEmbeddingGenerator`2.GenerateAsync(System.Collections.Generic.IEnumerable{`0},Microsoft.Extensions.AI.EmbeddingGenerationOptions,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.GeneratedEmbeddings&lt;TEmbedding&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;TInput&gt;" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.EmbeddingGenerationOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="values">To be added.</param>
        <param name="options">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetService&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public virtual TService? GetService&lt;TService&gt; (object? key = default) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TService GetService&lt;class TService&gt;(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.GetService``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetService(Of TService As Class) (Optional key As Object = Nothing) As TService" />
      <MemberSignature Language="F#" Value="abstract member GetService : obj -&gt; 'Service (requires 'Service : null)&#xA;override this.GetService : obj -&gt; 'Service (requires 'Service : null)" Usage="delegatingEmbeddingGenerator.GetService key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.AI.IEmbeddingGenerator`2.GetService``1(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TService</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TService">To be added.</typeparam>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="InnerGenerator">
      <MemberSignature Language="C#" Value="protected Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt; InnerGenerator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.IEmbeddingGenerator`2&lt;!TInput, !TEmbedding&gt; InnerGenerator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.InnerGenerator" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InnerGenerator As IEmbeddingGenerator(Of TInput, TEmbedding)" />
      <MemberSignature Language="F#" Value="member this.InnerGenerator : Microsoft.Extensions.AI.IEmbeddingGenerator&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt;" Usage="Microsoft.Extensions.AI.DelegatingEmbeddingGenerator&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt;.InnerGenerator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::Extensions::AI::IEmbeddingGenerator&lt;TInput, TEmbedding&gt; ^ InnerGenerator { Microsoft::Extensions::AI::IEmbeddingGenerator&lt;TInput, TEmbedding&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the inner <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.AI.EmbeddingGeneratorMetadata Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.EmbeddingGeneratorMetadata Metadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Metadata As EmbeddingGeneratorMetadata" />
      <MemberSignature Language="F#" Value="member this.Metadata : Microsoft.Extensions.AI.EmbeddingGeneratorMetadata" Usage="Microsoft.Extensions.AI.DelegatingEmbeddingGenerator&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt;.Metadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::Extensions::AI::EmbeddingGeneratorMetadata ^ Metadata { Microsoft::Extensions::AI::EmbeddingGeneratorMetadata ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Extensions.AI.IEmbeddingGenerator`2.Metadata</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.EmbeddingGeneratorMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>

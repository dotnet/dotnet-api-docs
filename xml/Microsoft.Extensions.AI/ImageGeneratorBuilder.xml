<Type Name="ImageGeneratorBuilder" FullName="Microsoft.Extensions.AI.ImageGeneratorBuilder">
  <TypeSignature Language="C#" Value="public sealed class ImageGeneratorBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImageGeneratorBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.ImageGeneratorBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImageGeneratorBuilder" />
  <TypeSignature Language="F#" Value="type ImageGeneratorBuilder = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageGeneratorBuilder sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("MEAI001")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("MEAI001")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A builder for creating pipelines of <see cref="T:Microsoft.Extensions.AI.IImageGenerator" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageGeneratorBuilder (Microsoft.Extensions.AI.IImageGenerator innerGenerator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.AI.IImageGenerator innerGenerator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ImageGeneratorBuilder.#ctor(Microsoft.Extensions.AI.IImageGenerator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerGenerator As IImageGenerator)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.ImageGeneratorBuilder : Microsoft.Extensions.AI.IImageGenerator -&gt; Microsoft.Extensions.AI.ImageGeneratorBuilder" Usage="new Microsoft.Extensions.AI.ImageGeneratorBuilder innerGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageGeneratorBuilder(Microsoft::Extensions::AI::IImageGenerator ^ innerGenerator);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerGenerator" Type="Microsoft.Extensions.AI.IImageGenerator" />
      </Parameters>
      <Docs>
        <param name="innerGenerator">The inner <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> that represents the underlying backend.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ImageGeneratorBuilder" /> class.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="innerGenerator" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageGeneratorBuilder (Func&lt;IServiceProvider,Microsoft.Extensions.AI.IImageGenerator&gt; innerGeneratorFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;class System.IServiceProvider, class Microsoft.Extensions.AI.IImageGenerator&gt; innerGeneratorFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ImageGeneratorBuilder.#ctor(System.Func{System.IServiceProvider,Microsoft.Extensions.AI.IImageGenerator})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerGeneratorFactory As Func(Of IServiceProvider, IImageGenerator))" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.ImageGeneratorBuilder : Func&lt;IServiceProvider, Microsoft.Extensions.AI.IImageGenerator&gt; -&gt; Microsoft.Extensions.AI.ImageGeneratorBuilder" Usage="new Microsoft.Extensions.AI.ImageGeneratorBuilder innerGeneratorFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageGeneratorBuilder(Func&lt;IServiceProvider ^, Microsoft::Extensions::AI::IImageGenerator ^&gt; ^ innerGeneratorFactory);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerGeneratorFactory" Type="System.Func&lt;System.IServiceProvider,Microsoft.Extensions.AI.IImageGenerator&gt;" />
      </Parameters>
      <Docs>
        <param name="innerGeneratorFactory">A callback that produces the inner <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> that represents the underlying backend.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ImageGeneratorBuilder" /> class.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="innerGeneratorFactory" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.IImageGenerator Build (IServiceProvider? services = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.AI.IImageGenerator Build(class System.IServiceProvider services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ImageGeneratorBuilder.Build(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (Optional services As IServiceProvider = Nothing) As IImageGenerator" />
      <MemberSignature Language="F#" Value="member this.Build : IServiceProvider -&gt; Microsoft.Extensions.AI.IImageGenerator" Usage="imageGeneratorBuilder.Build services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.IImageGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.IServiceProvider">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="services">
            The <see cref="T:System.IServiceProvider" /> that should provide services to the <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> instances.
            If null, an empty <see cref="T:System.IServiceProvider" /> will be used.
            </param>
        <summary>Builds an <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> that represents the entire pipeline. Calls to this instance will pass through each of the pipeline stages in turn.</summary>
        <returns>An instance of <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> that represents the entire pipeline.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Use">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.ImageGeneratorBuilder Use (Func&lt;Microsoft.Extensions.AI.IImageGenerator,Microsoft.Extensions.AI.IImageGenerator&gt; generatorFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.AI.ImageGeneratorBuilder Use(class System.Func`2&lt;class Microsoft.Extensions.AI.IImageGenerator, class Microsoft.Extensions.AI.IImageGenerator&gt; generatorFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ImageGeneratorBuilder.Use(System.Func{Microsoft.Extensions.AI.IImageGenerator,Microsoft.Extensions.AI.IImageGenerator})" />
      <MemberSignature Language="VB.NET" Value="Public Function Use (generatorFactory As Func(Of IImageGenerator, IImageGenerator)) As ImageGeneratorBuilder" />
      <MemberSignature Language="F#" Value="member this.Use : Func&lt;Microsoft.Extensions.AI.IImageGenerator, Microsoft.Extensions.AI.IImageGenerator&gt; -&gt; Microsoft.Extensions.AI.ImageGeneratorBuilder" Usage="imageGeneratorBuilder.Use generatorFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::AI::ImageGeneratorBuilder ^ Use(Func&lt;Microsoft::Extensions::AI::IImageGenerator ^, Microsoft::Extensions::AI::IImageGenerator ^&gt; ^ generatorFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.ImageGeneratorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatorFactory" Type="System.Func&lt;Microsoft.Extensions.AI.IImageGenerator,Microsoft.Extensions.AI.IImageGenerator&gt;" />
      </Parameters>
      <Docs>
        <param name="generatorFactory">The generator factory function.</param>
        <summary>Adds a factory for an intermediate image generator to the image generator pipeline.</summary>
        <returns>The updated <see cref="T:Microsoft.Extensions.AI.ImageGeneratorBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="generatorFactory" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Use">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.ImageGeneratorBuilder Use (Func&lt;Microsoft.Extensions.AI.IImageGenerator,IServiceProvider,Microsoft.Extensions.AI.IImageGenerator&gt; generatorFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.AI.ImageGeneratorBuilder Use(class System.Func`3&lt;class Microsoft.Extensions.AI.IImageGenerator, class System.IServiceProvider, class Microsoft.Extensions.AI.IImageGenerator&gt; generatorFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ImageGeneratorBuilder.Use(System.Func{Microsoft.Extensions.AI.IImageGenerator,System.IServiceProvider,Microsoft.Extensions.AI.IImageGenerator})" />
      <MemberSignature Language="VB.NET" Value="Public Function Use (generatorFactory As Func(Of IImageGenerator, IServiceProvider, IImageGenerator)) As ImageGeneratorBuilder" />
      <MemberSignature Language="F#" Value="member this.Use : Func&lt;Microsoft.Extensions.AI.IImageGenerator, IServiceProvider, Microsoft.Extensions.AI.IImageGenerator&gt; -&gt; Microsoft.Extensions.AI.ImageGeneratorBuilder" Usage="imageGeneratorBuilder.Use generatorFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::AI::ImageGeneratorBuilder ^ Use(Func&lt;Microsoft::Extensions::AI::IImageGenerator ^, IServiceProvider ^, Microsoft::Extensions::AI::IImageGenerator ^&gt; ^ generatorFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.ImageGeneratorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatorFactory" Type="System.Func&lt;Microsoft.Extensions.AI.IImageGenerator,System.IServiceProvider,Microsoft.Extensions.AI.IImageGenerator&gt;" />
      </Parameters>
      <Docs>
        <param name="generatorFactory">The generator factory function.</param>
        <summary>Adds a factory for an intermediate image generator to the image generator pipeline.</summary>
        <returns>The updated <see cref="T:Microsoft.Extensions.AI.ImageGeneratorBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="generatorFactory" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="DelegatingSpeechToTextClient" FullName="Microsoft.Extensions.AI.DelegatingSpeechToTextClient">
  <TypeSignature Language="C#" Value="public class DelegatingSpeechToTextClient : IDisposable, Microsoft.Extensions.AI.ISpeechToTextClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DelegatingSpeechToTextClient extends System.Object implements class Microsoft.Extensions.AI.ISpeechToTextClient, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.DelegatingSpeechToTextClient" />
  <TypeSignature Language="VB.NET" Value="Public Class DelegatingSpeechToTextClient&#xA;Implements IDisposable, ISpeechToTextClient" />
  <TypeSignature Language="F#" Value="type DelegatingSpeechToTextClient = class&#xA;    interface ISpeechToTextClient&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DelegatingSpeechToTextClient : IDisposable, Microsoft::Extensions::AI::ISpeechToTextClient" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.AI.ISpeechToTextClient</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("MEAI001")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("MEAI001")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Provides an optional base class for an <see cref="T:Microsoft.Extensions.AI.ISpeechToTextClient" /> that passes through calls to another instance.
            </summary>
    <remarks>
            This is recommended as a base type when building clients that can be chained in any order around an underlying <see cref="T:Microsoft.Extensions.AI.ISpeechToTextClient" />.
            The default implementation simply passes each call to the inner client instance.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DelegatingSpeechToTextClient (Microsoft.Extensions.AI.ISpeechToTextClient innerClient);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.AI.ISpeechToTextClient innerClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.DelegatingSpeechToTextClient.#ctor(Microsoft.Extensions.AI.ISpeechToTextClient)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (innerClient As ISpeechToTextClient)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.DelegatingSpeechToTextClient : Microsoft.Extensions.AI.ISpeechToTextClient -&gt; Microsoft.Extensions.AI.DelegatingSpeechToTextClient" Usage="new Microsoft.Extensions.AI.DelegatingSpeechToTextClient innerClient" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DelegatingSpeechToTextClient(Microsoft::Extensions::AI::ISpeechToTextClient ^ innerClient);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerClient" Type="Microsoft.Extensions.AI.ISpeechToTextClient" />
      </Parameters>
      <Docs>
        <param name="innerClient">The wrapped client instance.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.DelegatingSpeechToTextClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.DelegatingSpeechToTextClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="delegatingSpeechToTextClient.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.DelegatingSpeechToTextClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="delegatingSpeechToTextClient.Dispose disposing" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> if being called from <see cref="M:Microsoft.Extensions.AI.DelegatingSpeechToTextClient.Dispose" />; otherwise, <see langword="false" />.</param>
        <summary>Provides a mechanism for releasing unmanaged resources.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public virtual object? GetService (Type serviceType, object? serviceKey = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType, object serviceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.DelegatingSpeechToTextClient.GetService(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetService (serviceType As Type, Optional serviceKey As Object = Nothing) As Object" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type * obj -&gt; obj&#xA;override this.GetService : Type * obj -&gt; obj" Usage="delegatingSpeechToTextClient.GetService (serviceType, serviceKey)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.AI.ISpeechToTextClient.GetService(System.Type,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="serviceKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serviceType">To be added.</param>
        <param name="serviceKey">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetStreamingTextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.SpeechToTextResponseUpdate&gt; GetStreamingTextAsync (System.IO.Stream audioSpeechStream, Microsoft.Extensions.AI.SpeechToTextOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;class Microsoft.Extensions.AI.SpeechToTextResponseUpdate&gt; GetStreamingTextAsync(class System.IO.Stream audioSpeechStream, class Microsoft.Extensions.AI.SpeechToTextOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.DelegatingSpeechToTextClient.GetStreamingTextAsync(System.IO.Stream,Microsoft.Extensions.AI.SpeechToTextOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStreamingTextAsync (audioSpeechStream As Stream, Optional options As SpeechToTextOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of SpeechToTextResponseUpdate)" />
      <MemberSignature Language="F#" Value="abstract member GetStreamingTextAsync : System.IO.Stream * Microsoft.Extensions.AI.SpeechToTextOptions * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.SpeechToTextResponseUpdate&gt;&#xA;override this.GetStreamingTextAsync : System.IO.Stream * Microsoft.Extensions.AI.SpeechToTextOptions * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.SpeechToTextResponseUpdate&gt;" Usage="delegatingSpeechToTextClient.GetStreamingTextAsync (audioSpeechStream, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.AI.ISpeechToTextClient.GetStreamingTextAsync(System.IO.Stream,Microsoft.Extensions.AI.SpeechToTextOptions,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.SpeechToTextResponseUpdate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioSpeechStream" Type="System.IO.Stream" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.SpeechToTextOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="audioSpeechStream">To be added.</param>
        <param name="options">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetTextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.SpeechToTextResponse&gt; GetTextAsync (System.IO.Stream audioSpeechStream, Microsoft.Extensions.AI.SpeechToTextOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Extensions.AI.SpeechToTextResponse&gt; GetTextAsync(class System.IO.Stream audioSpeechStream, class Microsoft.Extensions.AI.SpeechToTextOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.DelegatingSpeechToTextClient.GetTextAsync(System.IO.Stream,Microsoft.Extensions.AI.SpeechToTextOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTextAsync (audioSpeechStream As Stream, Optional options As SpeechToTextOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of SpeechToTextResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetTextAsync : System.IO.Stream * Microsoft.Extensions.AI.SpeechToTextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.SpeechToTextResponse&gt;&#xA;override this.GetTextAsync : System.IO.Stream * Microsoft.Extensions.AI.SpeechToTextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.SpeechToTextResponse&gt;" Usage="delegatingSpeechToTextClient.GetTextAsync (audioSpeechStream, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.AI.ISpeechToTextClient.GetTextAsync(System.IO.Stream,Microsoft.Extensions.AI.SpeechToTextOptions,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.SpeechToTextResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioSpeechStream" Type="System.IO.Stream" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.SpeechToTextOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="audioSpeechStream">To be added.</param>
        <param name="options">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="InnerClient">
      <MemberSignature Language="C#" Value="protected Microsoft.Extensions.AI.ISpeechToTextClient InnerClient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.ISpeechToTextClient InnerClient" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.DelegatingSpeechToTextClient.InnerClient" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InnerClient As ISpeechToTextClient" />
      <MemberSignature Language="F#" Value="member this.InnerClient : Microsoft.Extensions.AI.ISpeechToTextClient" Usage="Microsoft.Extensions.AI.DelegatingSpeechToTextClient.InnerClient" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::Extensions::AI::ISpeechToTextClient ^ InnerClient { Microsoft::Extensions::AI::ISpeechToTextClient ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.ISpeechToTextClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the inner <see cref="T:Microsoft.Extensions.AI.ISpeechToTextClient" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

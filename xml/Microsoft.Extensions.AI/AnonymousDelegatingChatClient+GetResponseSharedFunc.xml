<Type Name="AnonymousDelegatingChatClient+GetResponseSharedFunc" FullName="Microsoft.Extensions.AI.AnonymousDelegatingChatClient+GetResponseSharedFunc">
  <TypeSignature Language="C#" Value="public delegate System.Threading.Tasks.Task AnonymousDelegatingChatClient.GetResponseSharedFunc(IList&lt;ChatMessage&gt; chatMessages, ChatOptions? options, Func&lt;IList&lt;ChatMessage&gt;,ChatOptions?,CancellationToken,Task&gt; nextAsync, CancellationToken cancellationToken);" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed AnonymousDelegatingChatClient/GetResponseSharedFunc extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.AnonymousDelegatingChatClient.GetResponseSharedFunc" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function AnonymousDelegatingChatClient.GetResponseSharedFunc(chatMessages As IList(Of ChatMessage), options As ChatOptions, nextAsync As Func(Of IList(Of ChatMessage), ChatOptions, CancellationToken, Task), cancellationToken As CancellationToken) As Task " />
  <TypeSignature Language="F#" Value="type AnonymousDelegatingChatClient.GetResponseSharedFunc = delegate of IList&lt;ChatMessage&gt; * ChatOptions * Func&lt;IList&lt;ChatMessage&gt;, ChatOptions, CancellationToken, Task&gt; * CancellationToken -&gt; Task" />
  <TypeSignature Language="C++ CLI" Value="public: delegate System::Threading::Tasks::Task ^ AnonymousDelegatingChatClient::GetResponseSharedFunc(IList&lt;ChatMessage ^&gt; ^ chatMessages, ChatOptions ^ options, Func&lt;IList&lt;ChatMessage ^&gt; ^, ChatOptions ^, CancellationToken, Task ^&gt; ^ nextAsync, CancellationToken cancellationToken);" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="chatMessages" Type="System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;" />
    <Parameter Name="options" Type="Microsoft.Extensions.AI.ChatOptions">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </Parameter>
    <Parameter Name="nextAsync" Type="System.Func&lt;System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;,Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 1, 1, 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 1, 1, 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </Parameter>
    <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Threading.Tasks.Task</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="chatMessages">The chat content to send.</param>
    <param name="options">The chat options to configure the request.</param>
    <param name="nextAsync">
            A delegate that provides the implementation for the inner client's <see cref="M:Microsoft.Extensions.AI.IChatClient.GetResponseAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" /> or
            <see cref="M:Microsoft.Extensions.AI.IChatClient.GetStreamingResponseAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" />. It should be invoked to continue the pipeline. It accepts
            the chat messages, options, and cancellation token, which are typically the same instances as provided to this method
            but need not be.
            </param>
    <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
    <summary>
            Represents a method used to call <see cref="M:Microsoft.Extensions.AI.IChatClient.GetResponseAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" /> or <see cref="M:Microsoft.Extensions.AI.IChatClient.GetStreamingResponseAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" />.
            </summary>
    <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the completion of the operation.</returns>
    <remarks>To be added.</remarks>
  </Docs>
</Type>

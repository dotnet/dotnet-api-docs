<Type Name="ChatResponseUpdate" FullName="Microsoft.Extensions.AI.ChatResponseUpdate">
  <TypeSignature Language="C#" Value="public class ChatResponseUpdate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChatResponseUpdate extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.ChatResponseUpdate" />
  <TypeSignature Language="VB.NET" Value="Public Class ChatResponseUpdate" />
  <TypeSignature Language="F#" Value="type ChatResponseUpdate = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChatResponseUpdate" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Represents a single streaming response chunk from an <see cref="T:Microsoft.Extensions.AI.IChatClient" />.
            </summary>
    <remarks>
      <para>
        <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> is so named because it represents updates
            that layer on each other to form a single chat response. Conceptually, this combines the roles of
            <see cref="T:Microsoft.Extensions.AI.ChatResponse" /> and <see cref="T:Microsoft.Extensions.AI.ChatMessage" /> in streaming output. For ease of consumption,
            it also flattens the nested structure you see on streaming chunks in some AI services, so instead of a
            dictionary of choices, each update is part of a single choice (and hence has its own role, choice ID, etc.).
            </para>
      <para>
            The relationship between <see cref="T:Microsoft.Extensions.AI.ChatResponse" /> and <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> is
            codified in the <see cref="M:Microsoft.Extensions.AI.ChatResponseUpdateExtensions.ToChatResponseAsync(System.Collections.Generic.IAsyncEnumerable{Microsoft.Extensions.AI.ChatResponseUpdate},System.Boolean,System.Threading.CancellationToken)" /> and
            <see cref="M:Microsoft.Extensions.AI.ChatResponse.ToChatResponseUpdates" />, which enable bidirectional conversions
            between the two. Note, however, that the provided conversions may be lossy, for example if multiple
            updates all have different <see cref="P:Microsoft.Extensions.AI.ChatResponseUpdate.RawRepresentation" /> objects whereas there's only one slot for
            such an object available in <see cref="P:Microsoft.Extensions.AI.ChatResponse.RawRepresentation" />. Similarly, if different
            updates that are part of the same choice provide different values for properties like <see cref="P:Microsoft.Extensions.AI.ChatResponseUpdate.ModelId" />,
            only one of the values will be used to populate <see cref="P:Microsoft.Extensions.AI.ChatResponse.ModelId" />.
            </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatResponseUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatResponseUpdate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChatResponseUpdate();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.AdditionalPropertiesDictionary? AdditionalProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.AdditionalPropertiesDictionary AdditionalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponseUpdate.AdditionalProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property AdditionalProperties As AdditionalPropertiesDictionary" />
      <MemberSignature Language="F#" Value="member this.AdditionalProperties : Microsoft.Extensions.AI.AdditionalPropertiesDictionary with get, set" Usage="Microsoft.Extensions.AI.ChatResponseUpdate.AdditionalProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::AI::AdditionalPropertiesDictionary ^ AdditionalProperties { Microsoft::Extensions::AI::AdditionalPropertiesDictionary ^ get(); void set(Microsoft::Extensions::AI::AdditionalPropertiesDictionary ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.AdditionalPropertiesDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets additional properties for the update.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorName">
      <MemberSignature Language="C#" Value="public string? AuthorName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthorName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponseUpdate.AuthorName" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthorName As String" />
      <MemberSignature Language="F#" Value="member this.AuthorName : string with get, set" Usage="Microsoft.Extensions.AI.ChatResponseUpdate.AuthorName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthorName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the author of the response update.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChatThreadId">
      <MemberSignature Language="C#" Value="public string? ChatThreadId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChatThreadId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponseUpdate.ChatThreadId" />
      <MemberSignature Language="VB.NET" Value="Public Property ChatThreadId As String" />
      <MemberSignature Language="F#" Value="member this.ChatThreadId : string with get, set" Usage="Microsoft.Extensions.AI.ChatResponseUpdate.ChatThreadId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChatThreadId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the chat thread ID associated with the chat response of which this update is a part.</summary>
        <value>To be added.</value>
        <remarks>
            Some <see cref="T:Microsoft.Extensions.AI.IChatClient" /> implementations are capable of storing the state for a chat thread, such that
            the input messages supplied to <see cref="M:Microsoft.Extensions.AI.IChatClient.GetStreamingResponseAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" /> need only be the additional messages beyond
            what's already stored. If this property is non-<see langword="null" />, it represents an identifier for that state,
            and it should be used in a subsequent <see cref="P:Microsoft.Extensions.AI.ChatOptions.ChatThreadId" /> instead of supplying the same messages
            (and this streaming message) as part of the <c>chatMessages</c> parameter.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChoiceIndex">
      <MemberSignature Language="C#" Value="public int ChoiceIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChoiceIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponseUpdate.ChoiceIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ChoiceIndex As Integer" />
      <MemberSignature Language="F#" Value="member this.ChoiceIndex : int with get, set" Usage="Microsoft.Extensions.AI.ChatResponseUpdate.ChoiceIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChoiceIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the zero-based index of the choice with which this update is associated in the streaming sequence.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.AIContent&gt; Contents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.AIContent&gt; Contents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponseUpdate.Contents" />
      <MemberSignature Language="VB.NET" Value="Public Property Contents As IList(Of AIContent)" />
      <MemberSignature Language="F#" Value="member this.Contents : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.AIContent&gt; with get, set" Usage="Microsoft.Extensions.AI.ChatResponseUpdate.Contents" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::AIContent ^&gt; ^ Contents { System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::AIContent ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::AIContent ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.AIContent&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the chat response update content items.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatedAt">
      <MemberSignature Language="C#" Value="public DateTimeOffset? CreatedAt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; CreatedAt" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponseUpdate.CreatedAt" />
      <MemberSignature Language="VB.NET" Value="Public Property CreatedAt As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.CreatedAt : Nullable&lt;DateTimeOffset&gt; with get, set" Usage="Microsoft.Extensions.AI.ChatResponseUpdate.CreatedAt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTimeOffset&gt; CreatedAt { Nullable&lt;DateTimeOffset&gt; get(); void set(Nullable&lt;DateTimeOffset&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a timestamp for the response update.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishReason">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.ChatFinishReason? FinishReason { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Microsoft.Extensions.AI.ChatFinishReason&gt; FinishReason" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponseUpdate.FinishReason" />
      <MemberSignature Language="VB.NET" Value="Public Property FinishReason As Nullable(Of ChatFinishReason)" />
      <MemberSignature Language="F#" Value="member this.FinishReason : Nullable&lt;Microsoft.Extensions.AI.ChatFinishReason&gt; with get, set" Usage="Microsoft.Extensions.AI.ChatResponseUpdate.FinishReason" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;Microsoft::Extensions::AI::ChatFinishReason&gt; FinishReason { Nullable&lt;Microsoft::Extensions::AI::ChatFinishReason&gt; get(); void set(Nullable&lt;Microsoft::Extensions::AI::ChatFinishReason&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.Extensions.AI.ChatFinishReason&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the finish reason for the operation.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelId">
      <MemberSignature Language="C#" Value="public string? ModelId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ModelId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponseUpdate.ModelId" />
      <MemberSignature Language="VB.NET" Value="Public Property ModelId As String" />
      <MemberSignature Language="F#" Value="member this.ModelId : string with get, set" Usage="Microsoft.Extensions.AI.ChatResponseUpdate.ModelId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ModelId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the model ID associated with this response update.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RawRepresentation">
      <MemberSignature Language="C#" Value="public object? RawRepresentation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RawRepresentation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponseUpdate.RawRepresentation" />
      <MemberSignature Language="VB.NET" Value="Public Property RawRepresentation As Object" />
      <MemberSignature Language="F#" Value="member this.RawRepresentation : obj with get, set" Usage="Microsoft.Extensions.AI.ChatResponseUpdate.RawRepresentation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RawRepresentation { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonIgnore&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the raw representation of the response update from an underlying implementation.</summary>
        <value>To be added.</value>
        <remarks>
            If a <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> is created to represent some underlying object from another object
            model, this property can be used to store that original object. This can be useful for debugging or
            for enabling a consumer to access the underlying object model if needed.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseId">
      <MemberSignature Language="C#" Value="public string? ResponseId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponseId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponseUpdate.ResponseId" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseId As String" />
      <MemberSignature Language="F#" Value="member this.ResponseId : string with get, set" Usage="Microsoft.Extensions.AI.ChatResponseUpdate.ResponseId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResponseId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the ID of the response of which this update is a part.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.ChatRole? Role { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Microsoft.Extensions.AI.ChatRole&gt; Role" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponseUpdate.Role" />
      <MemberSignature Language="VB.NET" Value="Public Property Role As Nullable(Of ChatRole)" />
      <MemberSignature Language="F#" Value="member this.Role : Nullable&lt;Microsoft.Extensions.AI.ChatRole&gt; with get, set" Usage="Microsoft.Extensions.AI.ChatResponseUpdate.Role" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;Microsoft::Extensions::AI::ChatRole&gt; Role { Nullable&lt;Microsoft::Extensions::AI::ChatRole&gt; get(); void set(Nullable&lt;Microsoft::Extensions::AI::ChatRole&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.Extensions.AI.ChatRole&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the role of the author of the response update.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string? Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.ChatResponseUpdate.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="Microsoft.Extensions.AI.ChatResponseUpdate.Text" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonIgnore&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the text of the first <see cref="T:Microsoft.Extensions.AI.TextContent" /> instance in <see cref="P:Microsoft.Extensions.AI.ChatResponseUpdate.Contents" />.
            </summary>
        <value>To be added.</value>
        <remarks>
            If there is no <see cref="T:Microsoft.Extensions.AI.TextContent" /> instance in <see cref="P:Microsoft.Extensions.AI.ChatResponseUpdate.Contents" />, then the getter returns <see langword="null" />,
            and the setter will add new <see cref="T:Microsoft.Extensions.AI.TextContent" /> instance with the provided value.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ChatResponseUpdate.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="chatResponseUpdate.ToString " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>

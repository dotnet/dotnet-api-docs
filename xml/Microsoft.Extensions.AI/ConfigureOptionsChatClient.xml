<Type Name="ConfigureOptionsChatClient" FullName="Microsoft.Extensions.AI.ConfigureOptionsChatClient">
  <TypeSignature Language="C#" Value="public sealed class ConfigureOptionsChatClient : Microsoft.Extensions.AI.DelegatingChatClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConfigureOptionsChatClient extends Microsoft.Extensions.AI.DelegatingChatClient" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.ConfigureOptionsChatClient" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConfigureOptionsChatClient&#xA;Inherits DelegatingChatClient" />
  <TypeSignature Language="F#" Value="type ConfigureOptionsChatClient = class&#xA;    inherit DelegatingChatClient" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigureOptionsChatClient sealed : Microsoft::Extensions::AI::DelegatingChatClient" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Extensions.AI.DelegatingChatClient</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A delegating chat client that updates or replaces the <see cref="T:Microsoft.Extensions.AI.ChatOptions" /> used by the remainder of the pipeline.</summary>
    <remarks>
      <para>
            The configuration callback is invoked with the caller-supplied <see cref="T:Microsoft.Extensions.AI.ChatOptions" /> instance. To override the caller-supplied options
            with a new instance, the callback may simply return that new instance, for example <c>_ =&gt; new ChatOptions() { MaxTokens = 1000 }</c>. To provide
            a new instance only if the caller-supplied instance is <see langword="null" />, the callback may conditionally return a new instance, for example
            <c>options =&gt; options ?? new ChatOptions() { MaxTokens = 1000 }</c>. Any changes to the caller-provided options instance will persist on the
            original instance, so the callback must take care to only do so when such mutations are acceptable, such as by cloning the original instance
            and mutating the clone, for example:
            <c>
            options =&gt;
            {
                var newOptions = options?.Clone() ?? new();
                newOptions.MaxTokens = 1000;
                return newOptions;
            }
            </c></para>
      <para>
            The callback may return <see langword="null" />, in which case a <see langword="null" /> options will be passed to the next client in the pipeline.
            </para>
      <para>
            The provided implementation of <see cref="T:Microsoft.Extensions.AI.IChatClient" /> is thread-safe for concurrent use so long as the employed configuration
            callback is also thread-safe for concurrent requests. If callers employ a shared options instance, care should be taken in the
            configuration callback, as multiple calls to it may end up running in parallel with the same options instance.
            </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigureOptionsChatClient (Microsoft.Extensions.AI.IChatClient innerClient, Func&lt;Microsoft.Extensions.AI.ChatOptions?,Microsoft.Extensions.AI.ChatOptions?&gt; configureOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.AI.IChatClient innerClient, class System.Func`2&lt;class Microsoft.Extensions.AI.ChatOptions, class Microsoft.Extensions.AI.ChatOptions&gt; configureOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ConfigureOptionsChatClient.#ctor(Microsoft.Extensions.AI.IChatClient,System.Func{Microsoft.Extensions.AI.ChatOptions,Microsoft.Extensions.AI.ChatOptions})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerClient As IChatClient, configureOptions As Func(Of ChatOptions, ChatOptions))" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.ConfigureOptionsChatClient : Microsoft.Extensions.AI.IChatClient * Func&lt;Microsoft.Extensions.AI.ChatOptions, Microsoft.Extensions.AI.ChatOptions&gt; -&gt; Microsoft.Extensions.AI.ConfigureOptionsChatClient" Usage="new Microsoft.Extensions.AI.ConfigureOptionsChatClient (innerClient, configureOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConfigureOptionsChatClient(Microsoft::Extensions::AI::IChatClient ^ innerClient, Func&lt;Microsoft::Extensions::AI::ChatOptions ^, Microsoft::Extensions::AI::ChatOptions ^&gt; ^ configureOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerClient" Type="Microsoft.Extensions.AI.IChatClient" />
        <Parameter Name="configureOptions" Type="System.Func&lt;Microsoft.Extensions.AI.ChatOptions,Microsoft.Extensions.AI.ChatOptions&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2, 2 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2, 2 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="innerClient">The inner client.</param>
        <param name="configureOptions">
            The delegate to invoke to configure the <see cref="T:Microsoft.Extensions.AI.ChatOptions" /> instance. It is passed the caller-supplied <see cref="T:Microsoft.Extensions.AI.ChatOptions" />
            instance and should return the configured <see cref="T:Microsoft.Extensions.AI.ChatOptions" /> instance to use.
            </param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ConfigureOptionsChatClient" /> class with the specified <paramref name="configureOptions" /> callback.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ChatCompletion&gt; CompleteAsync (System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; chatMessages, Microsoft.Extensions.AI.ChatOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Extensions.AI.ChatCompletion&gt; CompleteAsync(class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; chatMessages, class Microsoft.Extensions.AI.ChatOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ConfigureOptionsChatClient.CompleteAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CompleteAsync (chatMessages As IList(Of ChatMessage), Optional options As ChatOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ChatCompletion)" />
      <MemberSignature Language="F#" Value="override this.CompleteAsync : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; * Microsoft.Extensions.AI.ChatOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ChatCompletion&gt;" Usage="configureOptionsChatClient.CompleteAsync (chatMessages, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ChatCompletion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chatMessages" Type="System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.ChatOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="chatMessages">To be added.</param>
        <param name="options">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="CompleteStreamingAsync">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.StreamingChatCompletionUpdate&gt; CompleteStreamingAsync (System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; chatMessages, Microsoft.Extensions.AI.ChatOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;class Microsoft.Extensions.AI.StreamingChatCompletionUpdate&gt; CompleteStreamingAsync(class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; chatMessages, class Microsoft.Extensions.AI.ChatOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ConfigureOptionsChatClient.CompleteStreamingAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CompleteStreamingAsync (chatMessages As IList(Of ChatMessage), Optional options As ChatOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of StreamingChatCompletionUpdate)" />
      <MemberSignature Language="F#" Value="override this.CompleteStreamingAsync : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; * Microsoft.Extensions.AI.ChatOptions * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.StreamingChatCompletionUpdate&gt;" Usage="configureOptionsChatClient.CompleteStreamingAsync (chatMessages, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Microsoft.Extensions.AI.ConfigureOptionsChatClient+&lt;CompleteStreamingAsync&gt;d__3))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Microsoft.Extensions.AI.ConfigureOptionsChatClient+&lt;CompleteStreamingAsync&gt;d__3))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.StreamingChatCompletionUpdate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chatMessages" Type="System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.ChatOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.EnumeratorCancellation]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.EnumeratorCancellation&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="chatMessages">To be added.</param>
        <param name="options">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>

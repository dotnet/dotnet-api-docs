<Type Name="OpenAIChatClient" FullName="Microsoft.Extensions.AI.OpenAIChatClient">
  <TypeSignature Language="C#" Value="public sealed class OpenAIChatClient : IDisposable, Microsoft.Extensions.AI.IChatClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OpenAIChatClient extends System.Object implements class Microsoft.Extensions.AI.IChatClient, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.OpenAIChatClient" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OpenAIChatClient&#xA;Implements IChatClient, IDisposable" />
  <TypeSignature Language="F#" Value="type OpenAIChatClient = class&#xA;    interface IChatClient&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OpenAIChatClient sealed : IDisposable, Microsoft::Extensions::AI::IChatClient" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.OpenAI</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.1.0.0</AssemblyVersion>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.AI.IChatClient</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents an <see cref="T:Microsoft.Extensions.AI.IChatClient" /> for an OpenAI <see cref="T:OpenAI.OpenAIClient" /> or <see cref="T:OpenAI.Chat.ChatClient" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenAIChatClient (OpenAI.Chat.ChatClient chatClient);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class OpenAI.Chat.ChatClient chatClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.OpenAIChatClient.#ctor(OpenAI.Chat.ChatClient)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (chatClient As ChatClient)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.OpenAIChatClient : OpenAI.Chat.ChatClient -&gt; Microsoft.Extensions.AI.OpenAIChatClient" Usage="new Microsoft.Extensions.AI.OpenAIChatClient chatClient" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpenAIChatClient(OpenAI::Chat::ChatClient ^ chatClient);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.OpenAI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="chatClient" Type="OpenAI.Chat.ChatClient" />
      </Parameters>
      <Docs>
        <param name="chatClient">The underlying client.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.OpenAIChatClient" /> class for the specified <see cref="T:OpenAI.Chat.ChatClient" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenAIChatClient (OpenAI.OpenAIClient openAIClient, string modelId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class OpenAI.OpenAIClient openAIClient, string modelId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.OpenAIChatClient.#ctor(OpenAI.OpenAIClient,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (openAIClient As OpenAIClient, modelId As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.OpenAIChatClient : OpenAI.OpenAIClient * string -&gt; Microsoft.Extensions.AI.OpenAIChatClient" Usage="new Microsoft.Extensions.AI.OpenAIChatClient (openAIClient, modelId)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpenAIChatClient(OpenAI::OpenAIClient ^ openAIClient, System::String ^ modelId);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.OpenAI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="openAIClient" Type="OpenAI.OpenAIClient" />
        <Parameter Name="modelId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="openAIClient">The underlying client.</param>
        <param name="modelId">The model to use.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.OpenAIChatClient" /> class for the specified <see cref="T:OpenAI.OpenAIClient" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ChatResponse&gt; GetResponseAsync (System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; chatMessages, Microsoft.Extensions.AI.ChatOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Extensions.AI.ChatResponse&gt; GetResponseAsync(class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; chatMessages, class Microsoft.Extensions.AI.ChatOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.OpenAIChatClient.GetResponseAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResponseAsync (chatMessages As IList(Of ChatMessage), Optional options As ChatOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ChatResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetResponseAsync : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; * Microsoft.Extensions.AI.ChatOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ChatResponse&gt;&#xA;override this.GetResponseAsync : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; * Microsoft.Extensions.AI.ChatOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ChatResponse&gt;" Usage="openAIChatClient.GetResponseAsync (chatMessages, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.AI.IChatClient.GetResponseAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.OpenAI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ChatResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chatMessages" Type="System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.ChatOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="chatMessages">To be added.</param>
        <param name="options">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetStreamingResponseAsync">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt; GetStreamingResponseAsync (System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; chatMessages, Microsoft.Extensions.AI.ChatOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;class Microsoft.Extensions.AI.ChatResponseUpdate&gt; GetStreamingResponseAsync(class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; chatMessages, class Microsoft.Extensions.AI.ChatOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.OpenAIChatClient.GetStreamingResponseAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStreamingResponseAsync (chatMessages As IList(Of ChatMessage), Optional options As ChatOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of ChatResponseUpdate)" />
      <MemberSignature Language="F#" Value="abstract member GetStreamingResponseAsync : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; * Microsoft.Extensions.AI.ChatOptions * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt;&#xA;override this.GetStreamingResponseAsync : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; * Microsoft.Extensions.AI.ChatOptions * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt;" Usage="openAIChatClient.GetStreamingResponseAsync (chatMessages, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.AI.IChatClient.GetStreamingResponseAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.OpenAI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.ChatResponseUpdate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chatMessages" Type="System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.ChatOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="chatMessages">To be added.</param>
        <param name="options">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Extensions.AI.IChatClient.GetService">
      <MemberSignature Language="C#" Value="object? IChatClient.GetService (Type serviceType, object? serviceKey);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Microsoft.Extensions.AI.IChatClient.GetService(class System.Type serviceType, object serviceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.OpenAIChatClient.Microsoft#Extensions#AI#IChatClient#GetService(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetService (serviceType As Type, serviceKey As Object) As Object Implements IChatClient.GetService" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Extensions.AI.IChatClient.GetService : Type * obj -&gt; obj&#xA;override this.Microsoft.Extensions.AI.IChatClient.GetService : Type * obj -&gt; obj" Usage="openAIChatClient.Microsoft.Extensions.AI.IChatClient.GetService (serviceType, serviceKey)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Microsoft.Extensions.AI.IChatClient.GetService(Type ^ serviceType, System::Object ^ serviceKey) = Microsoft::Extensions::AI::IChatClient::GetService;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.AI.IChatClient.GetService(System.Type,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.OpenAI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="serviceKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serviceType">To be added.</param>
        <param name="serviceKey">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.OpenAIChatClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="openAIChatClient.System.IDisposable.Dispose " />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.OpenAI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ToolCallJsonSerializerOptions">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonSerializerOptions ToolCallJsonSerializerOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Json.JsonSerializerOptions ToolCallJsonSerializerOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.OpenAIChatClient.ToolCallJsonSerializerOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolCallJsonSerializerOptions As JsonSerializerOptions" />
      <MemberSignature Language="F#" Value="member this.ToolCallJsonSerializerOptions : System.Text.Json.JsonSerializerOptions with get, set" Usage="Microsoft.Extensions.AI.OpenAIChatClient.ToolCallJsonSerializerOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonSerializerOptions ^ ToolCallJsonSerializerOptions { System::Text::Json::JsonSerializerOptions ^ get(); void set(System::Text::Json::JsonSerializerOptions ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.OpenAI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonSerializerOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets <see cref="T:System.Text.Json.JsonSerializerOptions" /> to use for any serialization activities related to tool call arguments and results.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

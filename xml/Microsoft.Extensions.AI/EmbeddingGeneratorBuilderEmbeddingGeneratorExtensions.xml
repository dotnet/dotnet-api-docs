<Type Name="EmbeddingGeneratorBuilderEmbeddingGeneratorExtensions" FullName="Microsoft.Extensions.AI.EmbeddingGeneratorBuilderEmbeddingGeneratorExtensions">
  <TypeSignature Language="C#" Value="public static class EmbeddingGeneratorBuilderEmbeddingGeneratorExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EmbeddingGeneratorBuilderEmbeddingGeneratorExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.EmbeddingGeneratorBuilderEmbeddingGeneratorExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EmbeddingGeneratorBuilderEmbeddingGeneratorExtensions" />
  <TypeSignature Language="F#" Value="type EmbeddingGeneratorBuilderEmbeddingGeneratorExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmbeddingGeneratorBuilderEmbeddingGeneratorExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides extension methods for working with <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2" />
            in the context of <see cref="T:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AsBuilder&lt;TInput,TEmbedding&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt; AsBuilder&lt;TInput,TEmbedding&gt; (this Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt; innerGenerator) where TEmbedding : Microsoft.Extensions.AI.Embedding;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2&lt;!!TInput, !!TEmbedding&gt; AsBuilder&lt;TInput, (class Microsoft.Extensions.AI.Embedding) TEmbedding&gt;(class Microsoft.Extensions.AI.IEmbeddingGenerator`2&lt;!!TInput, !!TEmbedding&gt; innerGenerator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.EmbeddingGeneratorBuilderEmbeddingGeneratorExtensions.AsBuilder``2(Microsoft.Extensions.AI.IEmbeddingGenerator{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsBuilder(Of TInput, TEmbedding) (innerGenerator As IEmbeddingGenerator(Of TInput, TEmbedding)) As EmbeddingGeneratorBuilder(Of TInput, TEmbedding)" />
      <MemberSignature Language="F#" Value="static member AsBuilder : Microsoft.Extensions.AI.IEmbeddingGenerator&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt; -&gt; Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt; (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)" Usage="Microsoft.Extensions.AI.EmbeddingGeneratorBuilderEmbeddingGeneratorExtensions.AsBuilder innerGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput, typename TEmbedding&gt;&#xA; where TEmbedding : Microsoft::Extensions::AI::Embedding[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::AI::EmbeddingGeneratorBuilder&lt;TInput, TEmbedding&gt; ^ AsBuilder(Microsoft::Extensions::AI::IEmbeddingGenerator&lt;TInput, TEmbedding&gt; ^ innerGenerator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
        <TypeParameter Name="TEmbedding">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Extensions.AI.Embedding</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="innerGenerator" Type="Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">The type from which embeddings will be generated.</typeparam>
        <typeparam name="TEmbedding">The type of embeddings to generate.</typeparam>
        <param name="innerGenerator">The generator to use as the inner generator.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2" /> using
            <paramref name="innerGenerator" /> as its inner generator.
            </summary>
        <returns>The new <see cref="T:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2" /> instance.</returns>
        <remarks>
            This method is equivalent to using the <see cref="T:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2" />
            constructor directly, specifying <paramref name="innerGenerator" /> as the inner generator.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

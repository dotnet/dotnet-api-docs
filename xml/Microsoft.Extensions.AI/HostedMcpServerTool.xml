<Type Name="HostedMcpServerTool" FullName="Microsoft.Extensions.AI.HostedMcpServerTool">
  <TypeSignature Language="C#" Value="public class HostedMcpServerTool : Microsoft.Extensions.AI.AITool" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HostedMcpServerTool extends Microsoft.Extensions.AI.AITool" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.HostedMcpServerTool" />
  <TypeSignature Language="VB.NET" Value="Public Class HostedMcpServerTool&#xA;Inherits AITool" />
  <TypeSignature Language="F#" Value="type HostedMcpServerTool = class&#xA;    inherit AITool" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostedMcpServerTool : Microsoft::Extensions::AI::AITool" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
    <AssemblyVersion>9.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Extensions.AI.AITool</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("MEAI001")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("MEAI001")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Represents a hosted MCP server tool that can be specified to an AI service.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostedMcpServerTool (string serverName, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serverName, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.HostedMcpServerTool.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serverName As String, url As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.HostedMcpServerTool : string * string -&gt; Microsoft.Extensions.AI.HostedMcpServerTool" Usage="new Microsoft.Extensions.AI.HostedMcpServerTool (serverName, url)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostedMcpServerTool(System::String ^ serverName, System::String ^ url);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="url" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("Uri")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("Uri")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="serverName">The name of the remote MCP server.</param>
        <param name="url">The URL of the remote MCP server.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.HostedMcpServerTool" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serverName" /> or <paramref name="url" /> are <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="serverName" /> is empty or composed entirely of whitespace.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostedMcpServerTool (string serverName, Uri url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serverName, class System.Uri url) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.HostedMcpServerTool.#ctor(System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serverName As String, url As Uri)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.HostedMcpServerTool : string * Uri -&gt; Microsoft.Extensions.AI.HostedMcpServerTool" Usage="new Microsoft.Extensions.AI.HostedMcpServerTool (serverName, url)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostedMcpServerTool(System::String ^ serverName, Uri ^ url);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="url" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="serverName">The name of the remote MCP server.</param>
        <param name="url">The URL of the remote MCP server.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.HostedMcpServerTool" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serverName" /> or <paramref name="url" /> are <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="serverName" /> is empty or composed entirely of whitespace.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedTools">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt;? AllowedTools { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; AllowedTools" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.HostedMcpServerTool.AllowedTools" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowedTools As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.AllowedTools : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.Extensions.AI.HostedMcpServerTool.AllowedTools" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::String ^&gt; ^ AllowedTools { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the list of tools allowed to be used by the AI service.
            </summary>
        <value>To be added.</value>
        <remarks>
            The default value is <see langword="null" />, which allows any tool to be used.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApprovalMode">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.HostedMcpServerToolApprovalMode? ApprovalMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.HostedMcpServerToolApprovalMode ApprovalMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.HostedMcpServerTool.ApprovalMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ApprovalMode As HostedMcpServerToolApprovalMode" />
      <MemberSignature Language="F#" Value="member this.ApprovalMode : Microsoft.Extensions.AI.HostedMcpServerToolApprovalMode with get, set" Usage="Microsoft.Extensions.AI.HostedMcpServerTool.ApprovalMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::AI::HostedMcpServerToolApprovalMode ^ ApprovalMode { Microsoft::Extensions::AI::HostedMcpServerToolApprovalMode ^ get(); void set(Microsoft::Extensions::AI::HostedMcpServerToolApprovalMode ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.HostedMcpServerToolApprovalMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the approval mode that indicates when the AI service should require user approval for tool calls to the remote MCP server.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            You can set this property to <see cref="P:Microsoft.Extensions.AI.HostedMcpServerToolApprovalMode.AlwaysRequire" /> to require approval for all tool calls, 
            or to <see cref="P:Microsoft.Extensions.AI.HostedMcpServerToolApprovalMode.NeverRequire" /> to never require approval.
            </para>
          <para>
            The default value is <see langword="null" />, which some providers may treat the same as <see cref="P:Microsoft.Extensions.AI.HostedMcpServerToolApprovalMode.AlwaysRequire" />.
            </para>
          <para>
            The underlying provider is not guaranteed to support or honor the approval mode.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt;? Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Headers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.HostedMcpServerTool.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Property Headers As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Generic.IDictionary&lt;string, string&gt; with get, set" Usage="Microsoft.Extensions.AI.HostedMcpServerTool.Headers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Headers { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); void set(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the HTTP headers that the AI service should use when calling the remote MCP server.
            </summary>
        <value>To be added.</value>
        <remarks>
            This property is useful for specifying the authentication header or other headers required by the MCP server.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerDescription">
      <MemberSignature Language="C#" Value="public string? ServerDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerDescription" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.HostedMcpServerTool.ServerDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerDescription As String" />
      <MemberSignature Language="F#" Value="member this.ServerDescription : string with get, set" Usage="Microsoft.Extensions.AI.HostedMcpServerTool.ServerDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServerDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the description of the remote MCP server, used to provide more context to the AI service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerName">
      <MemberSignature Language="C#" Value="public string ServerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.HostedMcpServerTool.ServerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerName As String" />
      <MemberSignature Language="F#" Value="member this.ServerName : string" Usage="Microsoft.Extensions.AI.HostedMcpServerTool.ServerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServerName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the remote MCP server that is used to identify it.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.HostedMcpServerTool.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="Microsoft.Extensions.AI.HostedMcpServerTool.Url" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Abstractions</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the URL of the remote MCP server.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

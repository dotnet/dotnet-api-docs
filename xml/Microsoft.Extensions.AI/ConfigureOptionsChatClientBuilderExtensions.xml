<Type Name="ConfigureOptionsChatClientBuilderExtensions" FullName="Microsoft.Extensions.AI.ConfigureOptionsChatClientBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class ConfigureOptionsChatClientBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ConfigureOptionsChatClientBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.ConfigureOptionsChatClientBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ConfigureOptionsChatClientBuilderExtensions" />
  <TypeSignature Language="F#" Value="type ConfigureOptionsChatClientBuilderExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigureOptionsChatClientBuilderExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides extensions for configuring <see cref="T:Microsoft.Extensions.AI.ConfigureOptionsChatClient" /> instances.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="UseChatOptions">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.AI.ChatClientBuilder UseChatOptions (this Microsoft.Extensions.AI.ChatClientBuilder builder, Func&lt;Microsoft.Extensions.AI.ChatOptions?,Microsoft.Extensions.AI.ChatOptions?&gt; configureOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.AI.ChatClientBuilder UseChatOptions(class Microsoft.Extensions.AI.ChatClientBuilder builder, class System.Func`2&lt;class Microsoft.Extensions.AI.ChatOptions, class Microsoft.Extensions.AI.ChatOptions&gt; configureOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.ConfigureOptionsChatClientBuilderExtensions.UseChatOptions(Microsoft.Extensions.AI.ChatClientBuilder,System.Func{Microsoft.Extensions.AI.ChatOptions,Microsoft.Extensions.AI.ChatOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseChatOptions (builder As ChatClientBuilder, configureOptions As Func(Of ChatOptions, ChatOptions)) As ChatClientBuilder" />
      <MemberSignature Language="F#" Value="static member UseChatOptions : Microsoft.Extensions.AI.ChatClientBuilder * Func&lt;Microsoft.Extensions.AI.ChatOptions, Microsoft.Extensions.AI.ChatOptions&gt; -&gt; Microsoft.Extensions.AI.ChatClientBuilder" Usage="Microsoft.Extensions.AI.ConfigureOptionsChatClientBuilderExtensions.UseChatOptions (builder, configureOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::AI::ChatClientBuilder ^ UseChatOptions(Microsoft::Extensions::AI::ChatClientBuilder ^ builder, Func&lt;Microsoft::Extensions::AI::ChatOptions ^, Microsoft::Extensions::AI::ChatOptions ^&gt; ^ configureOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.ChatClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.AI.ChatClientBuilder" RefType="this" />
        <Parameter Name="configureOptions" Type="System.Func&lt;Microsoft.Extensions.AI.ChatOptions,Microsoft.Extensions.AI.ChatOptions&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2, 2 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2, 2 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.Extensions.AI.ChatClientBuilder" />.</param>
        <param name="configureOptions">
            The delegate to invoke to configure the <see cref="T:Microsoft.Extensions.AI.ChatOptions" /> instance. It is passed the caller-supplied <see cref="T:Microsoft.Extensions.AI.ChatOptions" />
            instance and should return the configured <see cref="T:Microsoft.Extensions.AI.ChatOptions" /> instance to use.
            </param>
        <summary>
            Adds a callback that updates or replaces <see cref="T:Microsoft.Extensions.AI.ChatOptions" />. This can be used to set default options.
            </summary>
        <returns>The <paramref name="builder" />.</returns>
        <remarks>
          <para>
            The configuration callback is invoked with the caller-supplied <see cref="T:Microsoft.Extensions.AI.ChatOptions" /> instance. To override the caller-supplied options
            with a new instance, the callback may simply return that new instance, for example <c>_ =&gt; new ChatOptions() { MaxTokens = 1000 }</c>. To provide
            a new instance only if the caller-supplied instance is <see langword="null" />, the callback may conditionally return a new instance, for example
            <c>options =&gt; options ?? new ChatOptions() { MaxTokens = 1000 }</c>. Any changes to the caller-provided options instance will persist on the
            original instance, so the callback must take care to only do so when such mutations are acceptable, such as by cloning the original instance
            and mutating the clone, for example:
            <c>
            options =&gt;
            {
                var newOptions = options?.Clone() ?? new();
                newOptions.MaxTokens = 1000;
                return newOptions;
            }
            </c></para>
          <para>
            The callback may return <see langword="null" />, in which case a <see langword="null" /> options will be passed to the next client in the pipeline.
            </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

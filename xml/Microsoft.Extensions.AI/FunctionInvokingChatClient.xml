<Type Name="FunctionInvokingChatClient" FullName="Microsoft.Extensions.AI.FunctionInvokingChatClient">
  <TypeSignature Language="C#" Value="public class FunctionInvokingChatClient : Microsoft.Extensions.AI.DelegatingChatClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FunctionInvokingChatClient extends Microsoft.Extensions.AI.DelegatingChatClient" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.FunctionInvokingChatClient" />
  <TypeSignature Language="VB.NET" Value="Public Class FunctionInvokingChatClient&#xA;Inherits DelegatingChatClient" />
  <TypeSignature Language="F#" Value="type FunctionInvokingChatClient = class&#xA;    inherit DelegatingChatClient" />
  <TypeSignature Language="C++ CLI" Value="public ref class FunctionInvokingChatClient : Microsoft::Extensions::AI::DelegatingChatClient" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Extensions.AI.DelegatingChatClient</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A delegating chat client that invokes functions defined on <see cref="T:Microsoft.Extensions.AI.ChatOptions" />.
            Include this in a chat pipeline to resolve function calls automatically.
            </summary>
    <remarks>
      <para>
            When this client receives a <see cref="T:Microsoft.Extensions.AI.FunctionCallContent" /> in a chat completion, it responds
            by calling the corresponding <see cref="T:Microsoft.Extensions.AI.AIFunction" /> defined in <see cref="T:Microsoft.Extensions.AI.ChatOptions" />,
            producing a <see cref="T:Microsoft.Extensions.AI.FunctionResultContent" />.
            </para>
      <para>
            The provided implementation of <see cref="T:Microsoft.Extensions.AI.IChatClient" /> is thread-safe for concurrent use so long as the
            <see cref="T:Microsoft.Extensions.AI.AIFunction" /> instances employed as part of the supplied <see cref="T:Microsoft.Extensions.AI.ChatOptions" /> are also safe.
            The <see cref="P:Microsoft.Extensions.AI.FunctionInvokingChatClient.ConcurrentInvocation" /> property can be used to control whether multiple function invocation
            requests as part of the same request are invocable concurrently, but even with that set to <see langword="false" />
            (the default), multiple concurrent requests to this same instance and using the same tools could result in those
            tools being used concurrently (one per request). For example, a function that accesses the HttpContext of a specific
            ASP.NET web request should only be used as part of a single <see cref="T:Microsoft.Extensions.AI.ChatOptions" /> at a time, and only with
            <see cref="P:Microsoft.Extensions.AI.FunctionInvokingChatClient.ConcurrentInvocation" /> set to <see langword="false" />, in case the inner client decided to issue multiple
            invocation requests to that same function.
            </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FunctionInvokingChatClient (Microsoft.Extensions.AI.IChatClient innerClient, Microsoft.Extensions.Logging.ILogger? logger = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.AI.IChatClient innerClient, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.FunctionInvokingChatClient.#ctor(Microsoft.Extensions.AI.IChatClient,Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerClient As IChatClient, Optional logger As ILogger = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.FunctionInvokingChatClient : Microsoft.Extensions.AI.IChatClient * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.Extensions.AI.FunctionInvokingChatClient" Usage="new Microsoft.Extensions.AI.FunctionInvokingChatClient (innerClient, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerClient" Type="Microsoft.Extensions.AI.IChatClient" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="innerClient">The underlying <see cref="T:Microsoft.Extensions.AI.IChatClient" />, or the next instance in a chain of clients.</param>
        <param name="logger">An <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to use for logging information about function invocation.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.FunctionInvokingChatClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddResponseMessages">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; AddResponseMessages (System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; chat, ReadOnlySpan&lt;Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationResult&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; AddResponseMessages(class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; chat, valuetype System.ReadOnlySpan`1&lt;class Microsoft.Extensions.AI.FunctionInvokingChatClient/FunctionInvocationResult&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.FunctionInvokingChatClient.AddResponseMessages(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},System.ReadOnlySpan{Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationResult})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddResponseMessages (chat As IList(Of ChatMessage), results As ReadOnlySpan(Of FunctionInvokingChatClient.FunctionInvocationResult)) As IList(Of ChatMessage)" />
      <MemberSignature Language="F#" Value="abstract member AddResponseMessages : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; * ReadOnlySpan&lt;Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationResult&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;&#xA;override this.AddResponseMessages : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; * ReadOnlySpan&lt;Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationResult&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;" Usage="functionInvokingChatClient.AddResponseMessages (chat, results)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ AddResponseMessages(System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ chat, ReadOnlySpan&lt;Microsoft::Extensions::AI::FunctionInvokingChatClient::FunctionInvocationResult ^&gt; results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chat" Type="System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;" />
        <Parameter Name="results" Type="System.ReadOnlySpan&lt;Microsoft.Extensions.AI.FunctionInvokingChatClient+FunctionInvocationResult&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="chat">The chat to which to add the one or more response messages.</param>
        <param name="results">Information about the function call invocations and results.</param>
        <summary>Adds one or more response messages for function invocation results.</summary>
        <returns>A list of all chat messages added to <paramref name="chat" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ChatCompletion&gt; CompleteAsync (System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; chatMessages, Microsoft.Extensions.AI.ChatOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Extensions.AI.ChatCompletion&gt; CompleteAsync(class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; chatMessages, class Microsoft.Extensions.AI.ChatOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.FunctionInvokingChatClient.CompleteAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CompleteAsync (chatMessages As IList(Of ChatMessage), Optional options As ChatOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ChatCompletion)" />
      <MemberSignature Language="F#" Value="override this.CompleteAsync : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; * Microsoft.Extensions.AI.ChatOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ChatCompletion&gt;" Usage="functionInvokingChatClient.CompleteAsync (chatMessages, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ChatCompletion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chatMessages" Type="System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.ChatOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="chatMessages">To be added.</param>
        <param name="options">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="CompleteStreamingAsync">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.StreamingChatCompletionUpdate&gt; CompleteStreamingAsync (System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; chatMessages, Microsoft.Extensions.AI.ChatOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;class Microsoft.Extensions.AI.StreamingChatCompletionUpdate&gt; CompleteStreamingAsync(class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; chatMessages, class Microsoft.Extensions.AI.ChatOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.FunctionInvokingChatClient.CompleteStreamingAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CompleteStreamingAsync (chatMessages As IList(Of ChatMessage), Optional options As ChatOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of StreamingChatCompletionUpdate)" />
      <MemberSignature Language="F#" Value="override this.CompleteStreamingAsync : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; * Microsoft.Extensions.AI.ChatOptions * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.StreamingChatCompletionUpdate&gt;" Usage="functionInvokingChatClient.CompleteStreamingAsync (chatMessages, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Microsoft.Extensions.AI.FunctionInvokingChatClient+&lt;CompleteStreamingAsync&gt;d__24))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Microsoft.Extensions.AI.FunctionInvokingChatClient+&lt;CompleteStreamingAsync&gt;d__24))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Microsoft.Extensions.AI.StreamingChatCompletionUpdate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chatMessages" Type="System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.ChatOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.EnumeratorCancellation]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.EnumeratorCancellation&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="chatMessages">To be added.</param>
        <param name="options">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ConcurrentInvocation">
      <MemberSignature Language="C#" Value="public bool ConcurrentInvocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConcurrentInvocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.FunctionInvokingChatClient.ConcurrentInvocation" />
      <MemberSignature Language="VB.NET" Value="Public Property ConcurrentInvocation As Boolean" />
      <MemberSignature Language="F#" Value="member this.ConcurrentInvocation : bool with get, set" Usage="Microsoft.Extensions.AI.FunctionInvokingChatClient.ConcurrentInvocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConcurrentInvocation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to allow concurrent invocation of functions.
            </summary>
        <value>
          <see langword="true" /> if multiple function calls can execute in parallel.
            <see langword="false" /> if function calls are processed serially.
            The default value is <see langword="false" />.
            </value>
        <remarks>
            An individual response from the inner client might contain multiple function call requests.
            By default, such function calls are processed serially. Set <see cref="P:Microsoft.Extensions.AI.FunctionInvokingChatClient.ConcurrentInvocation" /> to
            <see langword="true" /> to enable concurrent invocation such that multiple function calls can execute in parallel.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetailedErrors">
      <MemberSignature Language="C#" Value="public bool DetailedErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DetailedErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.FunctionInvokingChatClient.DetailedErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property DetailedErrors As Boolean" />
      <MemberSignature Language="F#" Value="member this.DetailedErrors : bool with get, set" Usage="Microsoft.Extensions.AI.FunctionInvokingChatClient.DetailedErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DetailedErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether detailed exception information should be included
            in the chat history when calling the underlying <see cref="T:Microsoft.Extensions.AI.IChatClient" />.
            </summary>
        <value>
          <see langword="true" /> if the full exception message is added to the chat history
            when calling the underlying <see cref="T:Microsoft.Extensions.AI.IChatClient" />.
            <see langword="false" /> if a generic error message is included in the chat history.
            The default value is <see langword="false" />.
            </value>
        <remarks>
          <para>
            Setting the value to <see langword="false" /> prevents the underlying language model from disclosing
            raw exception details to the end user, since it doesn't receive that information. Even in this
            case, the raw <see cref="T:System.Exception" /> object is available to application code by inspecting
            the <see cref="P:Microsoft.Extensions.AI.FunctionResultContent.Exception" /> property.
            </para>
          <para>
            Setting the value to <see langword="true" /> can help the underlying <see cref="T:Microsoft.Extensions.AI.IChatClient" /> bypass problems on
            its own, for example by retrying the function call with different arguments. However it might
            result in disclosing the raw exception information to external users, which can be a security
            concern depending on the application scenario.
            </para>
          <para>
            Changing the value of this property while the client is in use might result in inconsistencies
            as to whether detailed errors are provided during an in-flight request.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeFunctionAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;object?&gt; InvokeFunctionAsync (Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationContext context, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; InvokeFunctionAsync(class Microsoft.Extensions.AI.FunctionInvokingChatClient/FunctionInvocationContext context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.FunctionInvokingChatClient.InvokeFunctionAsync(Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InvokeFunctionAsync (context As FunctionInvokingChatClient.FunctionInvocationContext, cancellationToken As CancellationToken) As Task(Of Object)" />
      <MemberSignature Language="F#" Value="abstract member InvokeFunctionAsync : Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;&#xA;override this.InvokeFunctionAsync : Microsoft.Extensions.AI.FunctionInvokingChatClient.FunctionInvocationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="functionInvokingChatClient.InvokeFunctionAsync (context, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ InvokeFunctionAsync(Microsoft::Extensions::AI::FunctionInvokingChatClient::FunctionInvocationContext ^ context, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Extensions.AI.FunctionInvokingChatClient+FunctionInvocationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="context">
            The function invocation context detailing the function to be invoked and its arguments along with additional request information.
            </param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>Invokes the function asynchronously.</summary>
        <returns>The result of the function invocation, or <see langword="null" /> if the function invocation returned <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepFunctionCallingMessages">
      <MemberSignature Language="C#" Value="public bool KeepFunctionCallingMessages { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepFunctionCallingMessages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.FunctionInvokingChatClient.KeepFunctionCallingMessages" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepFunctionCallingMessages As Boolean" />
      <MemberSignature Language="F#" Value="member this.KeepFunctionCallingMessages : bool with get, set" Usage="Microsoft.Extensions.AI.FunctionInvokingChatClient.KeepFunctionCallingMessages" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepFunctionCallingMessages { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to keep intermediate messages in the chat history.
            </summary>
        <value>
          <see langword="true" /> if intermediate messages persist in the <see cref="T:System.Collections.Generic.IList`1" /> list provided
            to <see cref="M:Microsoft.Extensions.AI.FunctionInvokingChatClient.CompleteAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" /> and <see cref="M:Microsoft.Extensions.AI.FunctionInvokingChatClient.CompleteStreamingAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" /> by the caller.
            <see langword="false" /> if intermediate messages are removed prior to completing the operation.
            The default value is <see langword="true" />.
            </value>
        <remarks>
          <para>
            When the inner <see cref="T:Microsoft.Extensions.AI.IChatClient" /> returns <see cref="T:Microsoft.Extensions.AI.FunctionCallContent" /> to the
            <see cref="T:Microsoft.Extensions.AI.FunctionInvokingChatClient" />, the <see cref="T:Microsoft.Extensions.AI.FunctionInvokingChatClient" /> adds
            those messages to the list of messages, along with <see cref="T:Microsoft.Extensions.AI.FunctionResultContent" /> instances
            it creates with the results of invoking the requested functions. The resulting augmented
            list of messages is then passed to the inner client in order to send the results back.
            By default, those messages persist in the <see cref="T:System.Collections.Generic.IList`1" /> list provided to <see cref="M:Microsoft.Extensions.AI.FunctionInvokingChatClient.CompleteAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" />
            and <see cref="M:Microsoft.Extensions.AI.FunctionInvokingChatClient.CompleteStreamingAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)" /> by the caller. Set <see cref="P:Microsoft.Extensions.AI.FunctionInvokingChatClient.KeepFunctionCallingMessages" />
            to <see langword="false" /> to remove those messages prior to completing the operation.
            </para>
          <para>
            Changing the value of this property while the client is in use might result in inconsistencies
            as to whether function calling messages are kept during an in-flight request.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumIterationsPerRequest">
      <MemberSignature Language="C#" Value="public int? MaximumIterationsPerRequest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaximumIterationsPerRequest" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.FunctionInvokingChatClient.MaximumIterationsPerRequest" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumIterationsPerRequest As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaximumIterationsPerRequest : Nullable&lt;int&gt; with get, set" Usage="Microsoft.Extensions.AI.FunctionInvokingChatClient.MaximumIterationsPerRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; MaximumIterationsPerRequest { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the maximum number of iterations per request.
            </summary>
        <value>
            The maximum number of iterations per request.
            The default value is <see langword="null" />.
            </value>
        <remarks>
          <para>
            Each request to this <see cref="T:Microsoft.Extensions.AI.FunctionInvokingChatClient" /> might end up making
            multiple requests to the inner client. Each time the inner client responds with
            a function call request, this client might perform that invocation and send the results
            back to the inner client in a new request. This property limits the number of times
            such a roundtrip is performed. If null, there is no limit applied. If set, the value
            must be at least one, as it includes the initial request.
            </para>
          <para>
            Changing the value of this property while the client is in use might result in inconsistencies
            as to how many iterations are allowed for an in-flight request.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetryOnError">
      <MemberSignature Language="C#" Value="public bool RetryOnError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RetryOnError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.FunctionInvokingChatClient.RetryOnError" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryOnError As Boolean" />
      <MemberSignature Language="F#" Value="member this.RetryOnError : bool with get, set" Usage="Microsoft.Extensions.AI.FunctionInvokingChatClient.RetryOnError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RetryOnError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to handle exceptions that occur during function calls.
            </summary>
        <value>
          <see langword="false" /> if the
            underlying <see cref="T:Microsoft.Extensions.AI.IChatClient" /> will be instructed to give a response without invoking
            any further functions if a function call fails with an exception.
            <see langword="true" /> if the underlying <see cref="T:Microsoft.Extensions.AI.IChatClient" /> is allowed
            to continue attempting function calls until <see cref="P:Microsoft.Extensions.AI.FunctionInvokingChatClient.MaximumIterationsPerRequest" /> is reached.
            The default value is <see langword="false" />.
            </value>
        <remarks>
            Changing the value of this property while the client is in use might result in inconsistencies
            as to whether errors are retried during an in-flight request.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

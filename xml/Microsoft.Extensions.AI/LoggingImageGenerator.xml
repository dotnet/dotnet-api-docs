<Type Name="LoggingImageGenerator" FullName="Microsoft.Extensions.AI.LoggingImageGenerator">
  <TypeSignature Language="C#" Value="public class LoggingImageGenerator : Microsoft.Extensions.AI.DelegatingImageGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LoggingImageGenerator extends Microsoft.Extensions.AI.DelegatingImageGenerator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.LoggingImageGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Class LoggingImageGenerator&#xA;Inherits DelegatingImageGenerator" />
  <TypeSignature Language="F#" Value="type LoggingImageGenerator = class&#xA;    inherit DelegatingImageGenerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoggingImageGenerator : Microsoft::Extensions::AI::DelegatingImageGenerator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Extensions.AI.DelegatingImageGenerator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("MEAI001")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("MEAI001")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A delegating image generator that logs image generation operations to an <see cref="T:Microsoft.Extensions.Logging.ILogger" />.</summary>
    <remarks>
      <para>
            The provided implementation of <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> is thread-safe for concurrent use so long as the
            <see cref="T:Microsoft.Extensions.Logging.ILogger" /> employed is also thread-safe for concurrent use.
            </para>
      <para>
            When the employed <see cref="T:Microsoft.Extensions.Logging.ILogger" /> enables <see cref="F:Microsoft.Extensions.Logging.LogLevel.Trace" />, the contents of
            prompts and options are logged. These prompts and options may contain sensitive application data.
            <see cref="F:Microsoft.Extensions.Logging.LogLevel.Trace" /> is disabled by default and should never be enabled in a production environment.
            Prompts and options are not logged at other logging levels.
            </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoggingImageGenerator (Microsoft.Extensions.AI.IImageGenerator innerGenerator, Microsoft.Extensions.Logging.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.AI.IImageGenerator innerGenerator, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.LoggingImageGenerator.#ctor(Microsoft.Extensions.AI.IImageGenerator,Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerGenerator As IImageGenerator, logger As ILogger)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.LoggingImageGenerator : Microsoft.Extensions.AI.IImageGenerator * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.Extensions.AI.LoggingImageGenerator" Usage="new Microsoft.Extensions.AI.LoggingImageGenerator (innerGenerator, logger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LoggingImageGenerator(Microsoft::Extensions::AI::IImageGenerator ^ innerGenerator, Microsoft::Extensions::Logging::ILogger ^ logger);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerGenerator" Type="Microsoft.Extensions.AI.IImageGenerator" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="innerGenerator">The underlying <see cref="T:Microsoft.Extensions.AI.IImageGenerator" />.</param>
        <param name="logger">An <see cref="T:Microsoft.Extensions.Logging.ILogger" /> instance that will be used for all logging.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.LoggingImageGenerator" /> class.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="innerGenerator" /> or <paramref name="logger" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ImageGenerationResponse&gt; GenerateAsync (Microsoft.Extensions.AI.ImageGenerationRequest request, Microsoft.Extensions.AI.ImageGenerationOptions? options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Extensions.AI.ImageGenerationResponse&gt; GenerateAsync(class Microsoft.Extensions.AI.ImageGenerationRequest request, class Microsoft.Extensions.AI.ImageGenerationOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.LoggingImageGenerator.GenerateAsync(Microsoft.Extensions.AI.ImageGenerationRequest,Microsoft.Extensions.AI.ImageGenerationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GenerateAsync (request As ImageGenerationRequest, Optional options As ImageGenerationOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ImageGenerationResponse)" />
      <MemberSignature Language="F#" Value="override this.GenerateAsync : Microsoft.Extensions.AI.ImageGenerationRequest * Microsoft.Extensions.AI.ImageGenerationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ImageGenerationResponse&gt;" Usage="loggingImageGenerator.GenerateAsync (request, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.ImageGenerationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Microsoft.Extensions.AI.ImageGenerationRequest" />
        <Parameter Name="options" Type="Microsoft.Extensions.AI.ImageGenerationOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="options">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="JsonSerializerOptions">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonSerializerOptions JsonSerializerOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Json.JsonSerializerOptions JsonSerializerOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.LoggingImageGenerator.JsonSerializerOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property JsonSerializerOptions As JsonSerializerOptions" />
      <MemberSignature Language="F#" Value="member this.JsonSerializerOptions : System.Text.Json.JsonSerializerOptions with get, set" Usage="Microsoft.Extensions.AI.LoggingImageGenerator.JsonSerializerOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonSerializerOptions ^ JsonSerializerOptions { System::Text::Json::JsonSerializerOptions ^ get(); void set(System::Text::Json::JsonSerializerOptions ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonSerializerOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets JSON serialization options to use when serializing logging data.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The value being set is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

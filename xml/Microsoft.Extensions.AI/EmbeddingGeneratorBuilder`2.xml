<Type Name="EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt;" FullName="Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt;">
  <TypeSignature Language="C#" Value="public sealed class EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt; where TEmbedding : Embedding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EmbeddingGeneratorBuilder`2&lt;TInput, (class Microsoft.Extensions.AI.Embedding) TEmbedding&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EmbeddingGeneratorBuilder(Of TInput, TEmbedding)" />
  <TypeSignature Language="F#" Value="type EmbeddingGeneratorBuilder&lt;'Input, 'Embedding (requires 'Embedding :&gt; Embedding)&gt; = class" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TInput, typename TEmbedding&gt;&#xA; where TEmbedding : Embeddingpublic ref class EmbeddingGeneratorBuilder sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.1.0.0</AssemblyVersion>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
    <TypeParameter Name="TEmbedding">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Constraints>
        <BaseTypeName>Microsoft.Extensions.AI.Embedding</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TInput">The type from which embeddings will be generated.</typeparam>
    <typeparam name="TEmbedding">The type of embeddings to generate.</typeparam>
    <summary>A builder for creating pipelines of <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddingGeneratorBuilder (Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt; innerGenerator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.AI.IEmbeddingGenerator`2&lt;!TInput, !TEmbedding&gt; innerGenerator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2.#ctor(Microsoft.Extensions.AI.IEmbeddingGenerator{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerGenerator As IEmbeddingGenerator(Of TInput, TEmbedding))" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt; : Microsoft.Extensions.AI.IEmbeddingGenerator&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt; -&gt; Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt;" Usage="new Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt; innerGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddingGeneratorBuilder(Microsoft::Extensions::AI::IEmbeddingGenerator&lt;TInput, TEmbedding&gt; ^ innerGenerator);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerGenerator" Type="Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;" />
      </Parameters>
      <Docs>
        <param name="innerGenerator">The inner <see cref="T:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2" /> that represents the underlying backend.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddingGeneratorBuilder (Func&lt;IServiceProvider,Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;&gt; innerGeneratorFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;class System.IServiceProvider, class Microsoft.Extensions.AI.IEmbeddingGenerator`2&lt;!TInput, !TEmbedding&gt;&gt; innerGeneratorFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2.#ctor(System.Func{System.IServiceProvider,Microsoft.Extensions.AI.IEmbeddingGenerator{`0,`1}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerGeneratorFactory As Func(Of IServiceProvider, IEmbeddingGenerator(Of TInput, TEmbedding)))" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt; : Func&lt;IServiceProvider, Microsoft.Extensions.AI.IEmbeddingGenerator&lt;'Input, 'Embedding&gt;&gt; -&gt; Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt;" Usage="new Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt; innerGeneratorFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddingGeneratorBuilder(Func&lt;IServiceProvider ^, Microsoft::Extensions::AI::IEmbeddingGenerator&lt;TInput, TEmbedding&gt; ^&gt; ^ innerGeneratorFactory);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerGeneratorFactory" Type="System.Func&lt;System.IServiceProvider,Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="innerGeneratorFactory">A callback that produces the inner <see cref="T:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2" /> that represents the underlying backend.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt; Build (IServiceProvider? services = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.AI.IEmbeddingGenerator`2&lt;!TInput, !TEmbedding&gt; Build(class System.IServiceProvider services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2.Build(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (Optional services As IServiceProvider = Nothing) As IEmbeddingGenerator(Of TInput, TEmbedding)" />
      <MemberSignature Language="F#" Value="member this.Build : IServiceProvider -&gt; Microsoft.Extensions.AI.IEmbeddingGenerator&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt;" Usage="embeddingGeneratorBuilder.Build services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.IServiceProvider">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="services">
            The <see cref="T:System.IServiceProvider" /> that should provide services to the <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2" /> instances.
            If null, an empty <see cref="T:System.IServiceProvider" /> will be used.
            </param>
        <summary>
            Builds an <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2" /> that represents the entire pipeline. Calls to this instance will pass through each of the pipeline stages in turn.
            </summary>
        <returns>An instance of <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2" /> that represents the entire pipeline.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Use">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt; Use (Func&lt;Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;,Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;&gt; generatorFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2&lt;!TInput, !TEmbedding&gt; Use(class System.Func`2&lt;class Microsoft.Extensions.AI.IEmbeddingGenerator`2&lt;!TInput, !TEmbedding&gt;, class Microsoft.Extensions.AI.IEmbeddingGenerator`2&lt;!TInput, !TEmbedding&gt;&gt; generatorFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2.Use(System.Func{Microsoft.Extensions.AI.IEmbeddingGenerator{`0,`1},Microsoft.Extensions.AI.IEmbeddingGenerator{`0,`1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Use (generatorFactory As Func(Of IEmbeddingGenerator(Of TInput, TEmbedding), IEmbeddingGenerator(Of TInput, TEmbedding))) As EmbeddingGeneratorBuilder(Of TInput, TEmbedding)" />
      <MemberSignature Language="F#" Value="member this.Use : Func&lt;Microsoft.Extensions.AI.IEmbeddingGenerator&lt;'Input, 'Embedding&gt;, Microsoft.Extensions.AI.IEmbeddingGenerator&lt;'Input, 'Embedding&gt;&gt; -&gt; Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt;" Usage="embeddingGeneratorBuilder.Use generatorFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::AI::EmbeddingGeneratorBuilder&lt;TInput, TEmbedding&gt; ^ Use(Func&lt;Microsoft::Extensions::AI::IEmbeddingGenerator&lt;TInput, TEmbedding&gt; ^, Microsoft::Extensions::AI::IEmbeddingGenerator&lt;TInput, TEmbedding&gt; ^&gt; ^ generatorFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatorFactory" Type="System.Func&lt;Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;,Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="generatorFactory">The generator factory function.</param>
        <summary>Adds a factory for an intermediate embedding generator to the embedding generator pipeline.</summary>
        <returns>The updated <see cref="T:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Use">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt; Use (Func&lt;Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;,IServiceProvider,Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;&gt; generatorFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2&lt;!TInput, !TEmbedding&gt; Use(class System.Func`3&lt;class Microsoft.Extensions.AI.IEmbeddingGenerator`2&lt;!TInput, !TEmbedding&gt;, class System.IServiceProvider, class Microsoft.Extensions.AI.IEmbeddingGenerator`2&lt;!TInput, !TEmbedding&gt;&gt; generatorFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2.Use(System.Func{Microsoft.Extensions.AI.IEmbeddingGenerator{`0,`1},System.IServiceProvider,Microsoft.Extensions.AI.IEmbeddingGenerator{`0,`1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Use (generatorFactory As Func(Of IEmbeddingGenerator(Of TInput, TEmbedding), IServiceProvider, IEmbeddingGenerator(Of TInput, TEmbedding))) As EmbeddingGeneratorBuilder(Of TInput, TEmbedding)" />
      <MemberSignature Language="F#" Value="member this.Use : Func&lt;Microsoft.Extensions.AI.IEmbeddingGenerator&lt;'Input, 'Embedding&gt;, IServiceProvider, Microsoft.Extensions.AI.IEmbeddingGenerator&lt;'Input, 'Embedding&gt;&gt; -&gt; Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt;" Usage="embeddingGeneratorBuilder.Use generatorFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::AI::EmbeddingGeneratorBuilder&lt;TInput, TEmbedding&gt; ^ Use(Func&lt;Microsoft::Extensions::AI::IEmbeddingGenerator&lt;TInput, TEmbedding&gt; ^, IServiceProvider ^, Microsoft::Extensions::AI::IEmbeddingGenerator&lt;TInput, TEmbedding&gt; ^&gt; ^ generatorFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatorFactory" Type="System.Func&lt;Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;,System.IServiceProvider,Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="generatorFactory">The generator factory function.</param>
        <summary>Adds a factory for an intermediate embedding generator to the embedding generator pipeline.</summary>
        <returns>The updated <see cref="T:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Use">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt; Use (Func&lt;System.Collections.Generic.IEnumerable&lt;TInput&gt;,Microsoft.Extensions.AI.EmbeddingGenerationOptions?,Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.GeneratedEmbeddings&lt;TEmbedding&gt;&gt;&gt;? generateFunc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2&lt;!TInput, !TEmbedding&gt; Use(class System.Func`5&lt;class System.Collections.Generic.IEnumerable`1&lt;!TInput&gt;, class Microsoft.Extensions.AI.EmbeddingGenerationOptions, class Microsoft.Extensions.AI.IEmbeddingGenerator`2&lt;!TInput, !TEmbedding&gt;, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;class Microsoft.Extensions.AI.GeneratedEmbeddings`1&lt;!TEmbedding&gt;&gt;&gt; generateFunc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2.Use(System.Func{System.Collections.Generic.IEnumerable{`0},Microsoft.Extensions.AI.EmbeddingGenerationOptions,Microsoft.Extensions.AI.IEmbeddingGenerator{`0,`1},System.Threading.CancellationToken,System.Threading.Tasks.Task{Microsoft.Extensions.AI.GeneratedEmbeddings{`1}}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Use (generateFunc As Func(Of IEnumerable(Of TInput), EmbeddingGenerationOptions, IEmbeddingGenerator(Of TInput, TEmbedding), CancellationToken, Task(Of GeneratedEmbeddings(Of TEmbedding)))) As EmbeddingGeneratorBuilder(Of TInput, TEmbedding)" />
      <MemberSignature Language="F#" Value="member this.Use : Func&lt;seq&lt;'Input&gt;, Microsoft.Extensions.AI.EmbeddingGenerationOptions, Microsoft.Extensions.AI.IEmbeddingGenerator&lt;'Input, 'Embedding&gt;, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.GeneratedEmbeddings&lt;'Embedding&gt;&gt;&gt; -&gt; Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt;" Usage="embeddingGeneratorBuilder.Use generateFunc" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::AI::EmbeddingGeneratorBuilder&lt;TInput, TEmbedding&gt; ^ Use(Func&lt;System::Collections::Generic::IEnumerable&lt;TInput&gt; ^, Microsoft::Extensions::AI::EmbeddingGenerationOptions ^, Microsoft::Extensions::AI::IEmbeddingGenerator&lt;TInput, TEmbedding&gt; ^, System::Threading::CancellationToken, System::Threading::Tasks::Task&lt;Microsoft::Extensions::AI::GeneratedEmbeddings&lt;TEmbedding&gt; ^&gt; ^&gt; ^ generateFunc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generateFunc" Type="System.Func&lt;System.Collections.Generic.IEnumerable&lt;TInput&gt;,Microsoft.Extensions.AI.EmbeddingGenerationOptions,Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;Microsoft.Extensions.AI.GeneratedEmbeddings&lt;TEmbedding&gt;&gt;&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1, 2, 1, 1, 1, 1, 1, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1, 2, 1, 1, 1, 1, 1, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="generateFunc">
            A delegate that provides the implementation for <see cref="M:Microsoft.Extensions.AI.IEmbeddingGenerator`2.GenerateAsync(System.Collections.Generic.IEnumerable{`0},Microsoft.Extensions.AI.EmbeddingGenerationOptions,System.Threading.CancellationToken)" />.
            </param>
        <summary>
            Adds to the embedding generator pipeline an anonymous delegating embedding generator based on a delegate that provides
            an implementation for <see cref="M:Microsoft.Extensions.AI.IEmbeddingGenerator`2.GenerateAsync(System.Collections.Generic.IEnumerable{`0},Microsoft.Extensions.AI.EmbeddingGenerationOptions,System.Threading.CancellationToken)" />.
            </summary>
        <returns>The updated <see cref="T:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2" /> instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="generateFunc" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

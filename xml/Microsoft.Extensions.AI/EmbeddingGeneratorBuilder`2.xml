<Type Name="EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt;" FullName="Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt;">
  <TypeSignature Language="C#" Value="public sealed class EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt; where TEmbedding : Embedding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EmbeddingGeneratorBuilder`2&lt;TInput, (class Microsoft.Extensions.AI.Embedding) TEmbedding&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EmbeddingGeneratorBuilder(Of TInput, TEmbedding)" />
  <TypeSignature Language="F#" Value="type EmbeddingGeneratorBuilder&lt;'Input, 'Embedding (requires 'Embedding :&gt; Embedding)&gt; = class" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TInput, typename TEmbedding&gt;&#xA; where TEmbedding : Embeddingpublic ref class EmbeddingGeneratorBuilder sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
    <TypeParameter Name="TEmbedding">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Constraints>
        <BaseTypeName>Microsoft.Extensions.AI.Embedding</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TInput">To be added.</typeparam>
    <typeparam name="TEmbedding">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddingGeneratorBuilder (IServiceProvider? services = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional services As IServiceProvider = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt; : IServiceProvider -&gt; Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt;" Usage="new Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt; services" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="services" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="services">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Services">
      <MemberSignature Language="C#" Value="public IServiceProvider Services { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider Services" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2.Services" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Services As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.Services : IServiceProvider" Usage="Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt;.Services" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ Services { IServiceProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Use">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt; Use (Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt; innerGenerator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.AI.IEmbeddingGenerator`2&lt;!TInput, !TEmbedding&gt; Use(class Microsoft.Extensions.AI.IEmbeddingGenerator`2&lt;!TInput, !TEmbedding&gt; innerGenerator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2.Use(Microsoft.Extensions.AI.IEmbeddingGenerator{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Use (innerGenerator As IEmbeddingGenerator(Of TInput, TEmbedding)) As IEmbeddingGenerator(Of TInput, TEmbedding)" />
      <MemberSignature Language="F#" Value="member this.Use : Microsoft.Extensions.AI.IEmbeddingGenerator&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt; -&gt; Microsoft.Extensions.AI.IEmbeddingGenerator&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt;" Usage="embeddingGeneratorBuilder.Use innerGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::AI::IEmbeddingGenerator&lt;TInput, TEmbedding&gt; ^ Use(Microsoft::Extensions::AI::IEmbeddingGenerator&lt;TInput, TEmbedding&gt; ^ innerGenerator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="innerGenerator" Type="Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;" />
      </Parameters>
      <Docs>
        <param name="innerGenerator">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Use">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt; Use (Func&lt;Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;,Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;&gt; generatorFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2&lt;!TInput, !TEmbedding&gt; Use(class System.Func`2&lt;class Microsoft.Extensions.AI.IEmbeddingGenerator`2&lt;!TInput, !TEmbedding&gt;, class Microsoft.Extensions.AI.IEmbeddingGenerator`2&lt;!TInput, !TEmbedding&gt;&gt; generatorFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2.Use(System.Func{Microsoft.Extensions.AI.IEmbeddingGenerator{`0,`1},Microsoft.Extensions.AI.IEmbeddingGenerator{`0,`1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Use (generatorFactory As Func(Of IEmbeddingGenerator(Of TInput, TEmbedding), IEmbeddingGenerator(Of TInput, TEmbedding))) As EmbeddingGeneratorBuilder(Of TInput, TEmbedding)" />
      <MemberSignature Language="F#" Value="member this.Use : Func&lt;Microsoft.Extensions.AI.IEmbeddingGenerator&lt;'Input, 'Embedding&gt;, Microsoft.Extensions.AI.IEmbeddingGenerator&lt;'Input, 'Embedding&gt;&gt; -&gt; Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt;" Usage="embeddingGeneratorBuilder.Use generatorFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::AI::EmbeddingGeneratorBuilder&lt;TInput, TEmbedding&gt; ^ Use(Func&lt;Microsoft::Extensions::AI::IEmbeddingGenerator&lt;TInput, TEmbedding&gt; ^, Microsoft::Extensions::AI::IEmbeddingGenerator&lt;TInput, TEmbedding&gt; ^&gt; ^ generatorFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatorFactory" Type="System.Func&lt;Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;,Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="generatorFactory">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Use">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt; Use (Func&lt;IServiceProvider,Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;,Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;&gt; generatorFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2&lt;!TInput, !TEmbedding&gt; Use(class System.Func`3&lt;class System.IServiceProvider, class Microsoft.Extensions.AI.IEmbeddingGenerator`2&lt;!TInput, !TEmbedding&gt;, class Microsoft.Extensions.AI.IEmbeddingGenerator`2&lt;!TInput, !TEmbedding&gt;&gt; generatorFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2.Use(System.Func{System.IServiceProvider,Microsoft.Extensions.AI.IEmbeddingGenerator{`0,`1},Microsoft.Extensions.AI.IEmbeddingGenerator{`0,`1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Use (generatorFactory As Func(Of IServiceProvider, IEmbeddingGenerator(Of TInput, TEmbedding), IEmbeddingGenerator(Of TInput, TEmbedding))) As EmbeddingGeneratorBuilder(Of TInput, TEmbedding)" />
      <MemberSignature Language="F#" Value="member this.Use : Func&lt;IServiceProvider, Microsoft.Extensions.AI.IEmbeddingGenerator&lt;'Input, 'Embedding&gt;, Microsoft.Extensions.AI.IEmbeddingGenerator&lt;'Input, 'Embedding&gt;&gt; -&gt; Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;'Input, 'Embedding (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)&gt;" Usage="embeddingGeneratorBuilder.Use generatorFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::AI::EmbeddingGeneratorBuilder&lt;TInput, TEmbedding&gt; ^ Use(Func&lt;IServiceProvider ^, Microsoft::Extensions::AI::IEmbeddingGenerator&lt;TInput, TEmbedding&gt; ^, Microsoft::Extensions::AI::IEmbeddingGenerator&lt;TInput, TEmbedding&gt; ^&gt; ^ generatorFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatorFactory" Type="System.Func&lt;System.IServiceProvider,Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;,Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="generatorFactory">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="EmbeddingGeneratorBuilderServiceCollectionExtensions" FullName="Microsoft.Extensions.AI.EmbeddingGeneratorBuilderServiceCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class EmbeddingGeneratorBuilderServiceCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EmbeddingGeneratorBuilderServiceCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.EmbeddingGeneratorBuilderServiceCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EmbeddingGeneratorBuilderServiceCollectionExtensions" />
  <TypeSignature Language="F#" Value="type EmbeddingGeneratorBuilderServiceCollectionExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmbeddingGeneratorBuilderServiceCollectionExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddEmbeddingGenerator&lt;TInput,TEmbedding&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddEmbeddingGenerator&lt;TInput,TEmbedding&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Func&lt;Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt;,Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;&gt; generatorFactory) where TEmbedding : Microsoft.Extensions.AI.Embedding;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddEmbeddingGenerator&lt;TInput, (class Microsoft.Extensions.AI.Embedding) TEmbedding&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Func`2&lt;class Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2&lt;!!TInput, !!TEmbedding&gt;, class Microsoft.Extensions.AI.IEmbeddingGenerator`2&lt;!!TInput, !!TEmbedding&gt;&gt; generatorFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.EmbeddingGeneratorBuilderServiceCollectionExtensions.AddEmbeddingGenerator``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{Microsoft.Extensions.AI.EmbeddingGeneratorBuilder{``0,``1},Microsoft.Extensions.AI.IEmbeddingGenerator{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddEmbeddingGenerator(Of TInput, TEmbedding) (services As IServiceCollection, generatorFactory As Func(Of EmbeddingGeneratorBuilder(Of TInput, TEmbedding), IEmbeddingGenerator(Of TInput, TEmbedding))) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddEmbeddingGenerator : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;'Input, 'Embedding&gt;, Microsoft.Extensions.AI.IEmbeddingGenerator&lt;'Input, 'Embedding&gt;&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)" Usage="Microsoft.Extensions.AI.EmbeddingGeneratorBuilderServiceCollectionExtensions.AddEmbeddingGenerator (services, generatorFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput, typename TEmbedding&gt;&#xA; where TEmbedding : Microsoft::Extensions::AI::Embedding[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddEmbeddingGenerator(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Func&lt;Microsoft::Extensions::AI::EmbeddingGeneratorBuilder&lt;TInput, TEmbedding&gt; ^, Microsoft::Extensions::AI::IEmbeddingGenerator&lt;TInput, TEmbedding&gt; ^&gt; ^ generatorFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
        <TypeParameter Name="TEmbedding">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Extensions.AI.Embedding</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="generatorFactory" Type="System.Func&lt;Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt;,Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">To be added.</typeparam>
        <typeparam name="TEmbedding">To be added.</typeparam>
        <param name="services">To be added.</param>
        <param name="generatorFactory">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyedEmbeddingGenerator&lt;TInput,TEmbedding&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddKeyedEmbeddingGenerator&lt;TInput,TEmbedding&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, object serviceKey, Func&lt;Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt;,Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;&gt; generatorFactory) where TEmbedding : Microsoft.Extensions.AI.Embedding;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddKeyedEmbeddingGenerator&lt;TInput, (class Microsoft.Extensions.AI.Embedding) TEmbedding&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, object serviceKey, class System.Func`2&lt;class Microsoft.Extensions.AI.EmbeddingGeneratorBuilder`2&lt;!!TInput, !!TEmbedding&gt;, class Microsoft.Extensions.AI.IEmbeddingGenerator`2&lt;!!TInput, !!TEmbedding&gt;&gt; generatorFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.EmbeddingGeneratorBuilderServiceCollectionExtensions.AddKeyedEmbeddingGenerator``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{Microsoft.Extensions.AI.EmbeddingGeneratorBuilder{``0,``1},Microsoft.Extensions.AI.IEmbeddingGenerator{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddKeyedEmbeddingGenerator(Of TInput, TEmbedding) (services As IServiceCollection, serviceKey As Object, generatorFactory As Func(Of EmbeddingGeneratorBuilder(Of TInput, TEmbedding), IEmbeddingGenerator(Of TInput, TEmbedding))) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddKeyedEmbeddingGenerator : Microsoft.Extensions.DependencyInjection.IServiceCollection * obj * Func&lt;Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;'Input, 'Embedding&gt;, Microsoft.Extensions.AI.IEmbeddingGenerator&lt;'Input, 'Embedding&gt;&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Embedding :&gt; Microsoft.Extensions.AI.Embedding)" Usage="Microsoft.Extensions.AI.EmbeddingGeneratorBuilderServiceCollectionExtensions.AddKeyedEmbeddingGenerator (services, serviceKey, generatorFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput, typename TEmbedding&gt;&#xA; where TEmbedding : Microsoft::Extensions::AI::Embedding[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddKeyedEmbeddingGenerator(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::Object ^ serviceKey, Func&lt;Microsoft::Extensions::AI::EmbeddingGeneratorBuilder&lt;TInput, TEmbedding&gt; ^, Microsoft::Extensions::AI::IEmbeddingGenerator&lt;TInput, TEmbedding&gt; ^&gt; ^ generatorFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
        <TypeParameter Name="TEmbedding">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Extensions.AI.Embedding</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="serviceKey" Type="System.Object" />
        <Parameter Name="generatorFactory" Type="System.Func&lt;Microsoft.Extensions.AI.EmbeddingGeneratorBuilder&lt;TInput,TEmbedding&gt;,Microsoft.Extensions.AI.IEmbeddingGenerator&lt;TInput,TEmbedding&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">To be added.</typeparam>
        <typeparam name="TEmbedding">To be added.</typeparam>
        <param name="services">To be added.</param>
        <param name="serviceKey">To be added.</param>
        <param name="generatorFactory">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

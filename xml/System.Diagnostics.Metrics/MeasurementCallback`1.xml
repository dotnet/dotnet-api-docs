<Type Name="MeasurementCallback&lt;T&gt;" FullName="System.Diagnostics.Metrics.MeasurementCallback&lt;T&gt;">
  <TypeSignature Language="C#" Value="public delegate void MeasurementCallback&lt;T&gt;(Instrument instrument, T measurement, ReadOnlySpan&lt;KeyValuePair&lt;string,object?&gt;&gt; tags, object? state) where T : struct;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MeasurementCallback`1&lt;struct .ctor (class System.ValueType) T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Metrics.MeasurementCallback`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub MeasurementCallback(Of T)(instrument As Instrument, measurement As T, tags As ReadOnlySpan(Of KeyValuePair(Of String, Object)), state As Object)" />
  <TypeSignature Language="F#" Value="type MeasurementCallback&lt;'T (requires 'T : struct)&gt; = delegate of Instrument * 'T * ReadOnlySpan&lt;KeyValuePair&lt;string, obj&gt;&gt; * obj -&gt; unit" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : value classpublic delegate void MeasurementCallback(Instrument ^ instrument, T measurement, ReadOnlySpan&lt;KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; tags, System::Object ^ state);" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="instrument" Type="System.Diagnostics.Metrics.Instrument">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </Parameter>
    <Parameter Name="measurement" Type="T" />
    <Parameter Name="tags" Type="System.ReadOnlySpan&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 0, 1, 2 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 0, 1, 2 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </Parameter>
    <Parameter Name="state" Type="System.Object">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </Parameter>
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T">The type that the measurement represents.</typeparam>
    <param name="instrument">The instrument that sent the measurement.</param>
    <param name="measurement">The measurement value.</param>
    <param name="tags">A span of key-value pair tags associated with the measurement.</param>
    <param name="state">The state object originally passed to <see cref="M:System.Diagnostics.Metrics.MeterListener.EnableMeasurementEvents(System.Diagnostics.Metrics.Instrument,System.Object)" /> method.</param>
    <summary>A delegate to represent the Meterlistener callbacks that are used when recording measurements.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>

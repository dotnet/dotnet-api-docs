<Type Name="Instrument" FullName="System.Diagnostics.Metrics.Instrument">
  <TypeSignature Language="C#" Value="public abstract class Instrument" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Instrument extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Metrics.Instrument" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Instrument" />
  <TypeSignature Language="F#" Value="type Instrument = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class Instrument abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Base class of all metrics instrument classes</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Instrument (System.Diagnostics.Metrics.Meter meter, string name, string? unit, string? description);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.Metrics.Meter meter, string name, string unit, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Metrics.Instrument.#ctor(System.Diagnostics.Metrics.Meter,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (meter As Meter, name As String, unit As String, description As String)" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Metrics.Instrument : System.Diagnostics.Metrics.Meter * string * string * string -&gt; System.Diagnostics.Metrics.Instrument" Usage="new System.Diagnostics.Metrics.Instrument (meter, name, unit, description)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Instrument(System::Diagnostics::Metrics::Meter ^ meter, System::String ^ name, System::String ^ unit, System::String ^ description);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="meter" Type="System.Diagnostics.Metrics.Meter" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="unit" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="meter">The meter that created the instrument.</param>
        <param name="name">The instrument name. Cannot be <see langword="null" />.</param>
        <param name="unit">Optional instrument unit of measurements.</param>
        <param name="description">Optional instrument description.</param>
        <summary>Protected constructor to initialize the common instrument properties like the meter, name, description, and unit.</summary>
        <remarks>All classes that Instrument must call this constructor when constructing objects of the extended class.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string? Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Metrics.Instrument.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Diagnostics.Metrics.Instrument.Description" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the instrument description.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Metrics.Instrument.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Enabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool" Usage="System.Diagnostics.Metrics.Instrument.Enabled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates if there are any listeners for this instrument.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsObservable">
      <MemberSignature Language="C#" Value="public virtual bool IsObservable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsObservable" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Metrics.Instrument.IsObservable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsObservable As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsObservable : bool" Usage="System.Diagnostics.Metrics.Instrument.IsObservable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsObservable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the instrument is an observable instrument.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Meter">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Metrics.Meter Meter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.Metrics.Meter Meter" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Metrics.Instrument.Meter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Meter As Meter" />
      <MemberSignature Language="F#" Value="member this.Meter : System.Diagnostics.Metrics.Meter" Usage="System.Diagnostics.Metrics.Instrument.Meter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Metrics::Meter ^ Meter { System::Diagnostics::Metrics::Meter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Metrics.Meter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the Meter that created the instrument.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Metrics.Instrument.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Diagnostics.Metrics.Instrument.Name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the instrument name.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Publish">
      <MemberSignature Language="C#" Value="protected void Publish ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Publish() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Metrics.Instrument.Publish" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Publish ()" />
      <MemberSignature Language="F#" Value="member this.Publish : unit -&gt; unit" Usage="instrument.Publish " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Publish();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Activates the instrument to start recording measurements and to allow listeners to start listening to such measurements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unit">
      <MemberSignature Language="C#" Value="public string? Unit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Unit" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Metrics.Instrument.Unit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Unit As String" />
      <MemberSignature Language="F#" Value="member this.Unit : string" Usage="System.Diagnostics.Metrics.Instrument.Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Unit { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the instrument unit of measurements.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="MeterFactoryExtensions" FullName="System.Diagnostics.Metrics.MeterFactoryExtensions">
  <TypeSignature Language="C#" Value="public static class MeterFactoryExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MeterFactoryExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Metrics.MeterFactoryExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module MeterFactoryExtensions" />
  <TypeSignature Language="F#" Value="type MeterFactoryExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class MeterFactoryExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Extension methods for <see cref="T:System.Diagnostics.Metrics.Meter" /> and <see cref="T:System.Diagnostics.Metrics.IMeterFactory" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Metrics.Meter Create (this System.Diagnostics.Metrics.IMeterFactory meterFactory, string name, string? version = default, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object?&gt;&gt;? tags = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Metrics.Meter Create(class System.Diagnostics.Metrics.IMeterFactory meterFactory, string name, string version, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Metrics.MeterFactoryExtensions.Create(System.Diagnostics.Metrics.IMeterFactory,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Create (meterFactory As IMeterFactory, name As String, Optional version As String = Nothing, Optional tags As IEnumerable(Of KeyValuePair(Of String, Object)) = Nothing) As Meter" />
      <MemberSignature Language="F#" Value="static member Create : System.Diagnostics.Metrics.IMeterFactory * string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt; -&gt; System.Diagnostics.Metrics.Meter" Usage="System.Diagnostics.Metrics.MeterFactoryExtensions.Create (meterFactory, name, version, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Metrics.Meter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="meterFactory" Type="System.Diagnostics.Metrics.IMeterFactory" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 0, 1, 2 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 0, 1, 2 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="meterFactory">The <see cref="T:System.Diagnostics.Metrics.IMeterFactory" /> to use to create the <see cref="T:System.Diagnostics.Metrics.Meter" />.</param>
        <param name="name">The name of the <see cref="T:System.Diagnostics.Metrics.Meter" />.</param>
        <param name="version">The version of the <see cref="T:System.Diagnostics.Metrics.Meter" />.</param>
        <param name="tags">The tags to associate with the <see cref="T:System.Diagnostics.Metrics.Meter" />.</param>
        <summary>Creates a <see cref="T:System.Diagnostics.Metrics.Meter" /> with the specified <paramref name="name" />, <paramref name="version" />, and <paramref name="tags" />.</summary>
        <returns>A <see cref="T:System.Diagnostics.Metrics.Meter" /> with the specified <paramref name="name" />, <paramref name="version" />, and <paramref name="tags" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

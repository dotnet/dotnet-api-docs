<Type Name="PreserializedResourceWriter" FullName="System.Resources.Extensions.PreserializedResourceWriter">
  <TypeSignature Language="C#" Value="public sealed class PreserializedResourceWriter : IDisposable, System.Resources.IResourceWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PreserializedResourceWriter extends System.Object implements class System.IDisposable, class System.Resources.IResourceWriter" />
  <TypeSignature Language="DocId" Value="T:System.Resources.Extensions.PreserializedResourceWriter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PreserializedResourceWriter&#xA;Implements IDisposable, IResourceWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PreserializedResourceWriter sealed : IDisposable, System::Resources::IResourceWriter" />
  <TypeSignature Language="F#" Value="type PreserializedResourceWriter = class&#xA;    interface IDisposable&#xA;    interface IResourceWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Resources.IResourceWriter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Provides APIs similar to <see cref="T:System.Resources.ResourceWriter" /> that can write pre-serialized resource data.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PreserializedResourceWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PreserializedResourceWriter(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Resources.Extensions.PreserializedResourceWriter : System.IO.Stream -&gt; System.Resources.Extensions.PreserializedResourceWriter" Usage="new System.Resources.Extensions.PreserializedResourceWriter stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">The output stream.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Resources.Extensions.PreserializedResourceWriter" /> class that writes the resources to the provided stream.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stream" /> is not writable.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PreserializedResourceWriter (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PreserializedResourceWriter(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Resources.Extensions.PreserializedResourceWriter : string -&gt; System.Resources.Extensions.PreserializedResourceWriter" Usage="new System.Resources.Extensions.PreserializedResourceWriter fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">The output file name.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Resources.Extensions.PreserializedResourceWriter" /> class that writes the resources to the specified file.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="fileName" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddActivatorResource">
      <MemberSignature Language="C#" Value="public void AddActivatorResource (string name, System.IO.Stream value, string typeName, bool closeAfterWrite = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddActivatorResource(string name, class System.IO.Stream value, string typeName, bool closeAfterWrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.AddActivatorResource(System.String,System.IO.Stream,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddActivatorResource (name As String, value As Stream, typeName As String, Optional closeAfterWrite As Boolean = false)" />
      <MemberSignature Language="F#" Value="member this.AddActivatorResource : string * System.IO.Stream * string * bool -&gt; unit" Usage="preserializedResourceWriter.AddActivatorResource (name, value, typeName, closeAfterWrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.IO.Stream" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="closeAfterWrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The resource name.</param>
        <param name="value">The value of the resource in <see cref="T:System.IO.Stream" /> form understood by the type's constructor.</param>
        <param name="typeName">The assembly qualified type name of the resource.</param>
        <param name="closeAfterWrite">An optional value that indicates whether, after resources have been written, the stream should be closed (<see langword="true" />) or left open (<see langword="false" />, the default value).</param>
        <summary>Adds a resource of the specified type represented by a <see cref="T:System.IO.Stream" /> value that is passed to the type's constructor when reading the resource.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" />, <paramref name="typeName" />, or <paramref name="value" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The object's type is <see cref="T:System.IO.Stream" />, but it is unseekable.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddBinaryFormattedResource">
      <MemberSignature Language="C#" Value="public void AddBinaryFormattedResource (string name, byte[] value, string typeName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBinaryFormattedResource(string name, unsigned int8[] value, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.AddBinaryFormattedResource(System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBinaryFormattedResource (name As String, value As Byte(), Optional typeName As String = null)" />
      <MemberSignature Language="F#" Value="member this.AddBinaryFormattedResource : string * byte[] * string -&gt; unit" Usage="preserializedResourceWriter.AddBinaryFormattedResource (name, value, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The resource name.</param>
        <param name="value">A byte array containing the value of the resource in <c>Byte[]</c> form understood by <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />.</param>
        <param name="typeName">The optional assembly qualified type name of the resource. The default value is <see langword="null" />.</param>
        <summary>Adds a resource of the specified type, represented by a byte array, that will be  passed to <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> when reading the resource.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="value" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.AddResource(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddResource(System::String ^ name, cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddResource : string * byte[] -&gt; unit&#xA;override this.AddResource : string * byte[] -&gt; unit" Usage="preserializedResourceWriter.AddResource (name, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="name">The resource name.</param>
        <param name="value">The byte array to add as a resource.</param>
        <summary>Adds a byte array as a named resource to the list of resources to be written to a file.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

The resources are not written until <xref:System.Resources.Extensions.PreserializedResourceWriter.Generate> is called.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The name is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The resource list is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.AddResource(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddResource(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddResource : string * obj -&gt; unit&#xA;override this.AddResource : string * obj -&gt; unit" Usage="preserializedResourceWriter.AddResource (name, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The resource name.</param>
        <param name="value">The object to add as a resource.</param>
        <summary>Adds an object as a named resource to the list of resources to be written to a file.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

The resources are not written until <xref:System.Resources.Extensions.PreserializedResourceWriter.Generate> is called.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The name is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The resource list is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The stream is unseekable.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.AddResource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddResource(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddResource : string * string -&gt; unit&#xA;override this.AddResource : string * string -&gt; unit" Usage="preserializedResourceWriter.AddResource (name, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceWriter.AddResource(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The resource name.</param>
        <param name="value">The string to add as a resource.</param>
        <summary>Adds a string as a named resource to the list of resources to be written to a file.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

The resources are not written until <xref:System.Resources.Extensions.PreserializedResourceWriter.Generate> is called.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The name is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The resource list is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, System.IO.Stream value, bool closeAfterWrite = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResource(string name, class System.IO.Stream value, bool closeAfterWrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As Stream, Optional closeAfterWrite As Boolean = false)" />
      <MemberSignature Language="F#" Value="member this.AddResource : string * System.IO.Stream * bool -&gt; unit" Usage="preserializedResourceWriter.AddResource (name, value, closeAfterWrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.IO.Stream" />
        <Parameter Name="closeAfterWrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The resource name.</param>
        <param name="value">The stream to add as a resource.</param>
        <param name="closeAfterWrite">An optional value that indicates whether, after resources have been written, the stream should be closed (<see langword="true" />) or left open (<see langword="false" />, the default value).</param>
        <summary>Adds a <see cref="T:System.IO.Stream" /> as a named resource to the list of resources to be written to a file.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

The resources are not written until <xref:System.Resources.Extensions.PreserializedResourceWriter.Generate> is called.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, string value, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResource(string name, string value, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.AddResource(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As String, typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddResource(System::String ^ name, System::String ^ value, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.AddResource : string * string * string -&gt; unit" Usage="preserializedResourceWriter.AddResource (name, value, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The resource name.</param>
        <param name="value">The value of the resource in string form understood by the type's <see cref="T:System.ComponentModel.TypeConverter" />.</param>
        <param name="typeName">The assembly qualified type name of the resource.</param>
        <summary>Adds a resource of the specified type represented by a string value. </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

If the type is a primitive type, the value will be converted using <xref:System.ComponentModel.TypeConverter> by the writer to that primitive type and stored in the resources in binary format. If the type is not a primitive type, the string value will be stored in the resources as a string and converted with a <xref:System.ComponentModel.TypeConverter> for the type when reading the resource. This conversion is done to avoid activating arbitrary types during resource writing.

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTypeConverterResource">
      <MemberSignature Language="C#" Value="public void AddTypeConverterResource (string name, byte[] value, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddTypeConverterResource(string name, unsigned int8[] value, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.AddTypeConverterResource(System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddTypeConverterResource (name As String, value As Byte(), typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddTypeConverterResource(System::String ^ name, cli::array &lt;System::Byte&gt; ^ value, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.AddTypeConverterResource : string * byte[] * string -&gt; unit" Usage="preserializedResourceWriter.AddTypeConverterResource (name, value, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The resource name.</param>
        <param name="value">A byte array containing the resource in a form understood by the type's <see cref="T:System.ComponentModel.TypeConverter" />.</param>
        <param name="typeName">The assembly qualified type name of the resource.</param>
        <summary>Adds a resource of the specified type represented by a byte array that is passed to the type's <see cref="T:System.ComponentModel.TypeConverter" /> when reading the resource.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="preserializedResourceWriter.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceWriter.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calls <see cref="M:System.Resources.Extensions.PreserializedResourceWriter.Dispose" /> to dispose the resource writer.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The resource list is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="preserializedResourceWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calls <see cref="M:System.Resources.Extensions.PreserializedResourceWriter.Generate" /> to write out all resources to the output stream in the system default format.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The resource list is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public void Generate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Generate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.Generate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Generate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Generate();" />
      <MemberSignature Language="F#" Value="abstract member Generate : unit -&gt; unit&#xA;override this.Generate : unit -&gt; unit" Usage="preserializedResourceWriter.Generate " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceWriter.Generate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Writes all resources to the output stream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

If the resources added to the writer can be represented in the system default format understood by the <xref:System.Resources.ResourceReader>, they will be written as such. If the resources require runtime deserialization other than that supported by the system default format (<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>) then we will write them using the format understood by <xref:System.Resources.Extensions.DeserializingResourceReader>.

If an exception occurs during object serialization or during IO, the .resources file is closed and deleted, since it is most likely invalid.

         ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The resource list is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

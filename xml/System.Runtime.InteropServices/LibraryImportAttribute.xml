<Type Name="LibraryImportAttribute" FullName="System.Runtime.InteropServices.LibraryImportAttribute">
  <TypeSignature Language="C#" Value="public sealed class LibraryImportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LibraryImportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.LibraryImportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LibraryImportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="F#" Value="type LibraryImportAttribute = class&#xA;    inherit Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class LibraryImportAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Indicates that a source generator should create a function for marshalling arguments instead of relying on the runtime to generate an equivalent marshalling function at run time.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

This attribute is meaningless if the source generator associated with it is not enabled.

The current built-in source generator only supports C# and only supplies an implementation when applied to static, partial, non-generic methods.

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LibraryImportAttribute (string libraryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string libraryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.LibraryImportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (libraryName As String)" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.LibraryImportAttribute : string -&gt; System.Runtime.InteropServices.LibraryImportAttribute" Usage="new System.Runtime.InteropServices.LibraryImportAttribute libraryName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LibraryImportAttribute(System::String ^ libraryName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="libraryName">Name of the library containing the import.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.LibraryImportAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public string? EntryPoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntryPoint" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.LibraryImportAttribute.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public Property EntryPoint As String" />
      <MemberSignature Language="F#" Value="member this.EntryPoint : string with get, set" Usage="System.Runtime.InteropServices.LibraryImportAttribute.EntryPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntryPoint { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the entry point to be called.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LibraryName">
      <MemberSignature Language="C#" Value="public string LibraryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LibraryName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.LibraryImportAttribute.LibraryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LibraryName As String" />
      <MemberSignature Language="F#" Value="member this.LibraryName : string" Usage="System.Runtime.InteropServices.LibraryImportAttribute.LibraryName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LibraryName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the library containing the import.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLastError">
      <MemberSignature Language="C#" Value="public bool SetLastError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SetLastError" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.LibraryImportAttribute.SetLastError" />
      <MemberSignature Language="VB.NET" Value="Public Property SetLastError As Boolean" />
      <MemberSignature Language="F#" Value="member this.SetLastError : bool with get, set" Usage="System.Runtime.InteropServices.LibraryImportAttribute.SetLastError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SetLastError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies whether the callee sets an error (<c>SetLastError</c> on Windows or <c>errno</c> on other platforms) before returning from the attributed method.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringMarshalling">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.StringMarshalling StringMarshalling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.StringMarshalling StringMarshalling" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.LibraryImportAttribute.StringMarshalling" />
      <MemberSignature Language="VB.NET" Value="Public Property StringMarshalling As StringMarshalling" />
      <MemberSignature Language="F#" Value="member this.StringMarshalling : System.Runtime.InteropServices.StringMarshalling with get, set" Usage="System.Runtime.InteropServices.LibraryImportAttribute.StringMarshalling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::StringMarshalling StringMarshalling { System::Runtime::InteropServices::StringMarshalling get(); void set(System::Runtime::InteropServices::StringMarshalling value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.StringMarshalling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets an object that specifies how to marshal string arguments to the method.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

If this field is set to a value other than <xref:System.Runtime.InteropServices.StringMarshalling.Custom>, <xref:System.Runtime.InteropServices.LibraryImportAttribute.StringMarshallingCustomType> must not be specified.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StringMarshallingCustomType">
      <MemberSignature Language="C#" Value="public Type? StringMarshallingCustomType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type StringMarshallingCustomType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.LibraryImportAttribute.StringMarshallingCustomType" />
      <MemberSignature Language="VB.NET" Value="Public Property StringMarshallingCustomType As Type" />
      <MemberSignature Language="F#" Value="member this.StringMarshallingCustomType : Type with get, set" Usage="System.Runtime.InteropServices.LibraryImportAttribute.StringMarshallingCustomType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ StringMarshallingCustomType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Type" /> used to control how string arguments to the method are marshalled.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

If this field is specified, <xref:System.Runtime.InteropServices.LibraryImportAttribute.StringMarshalling> must not be specified or must be set to <xref:System.Runtime.InteropServices.StringMarshalling.Custom>.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

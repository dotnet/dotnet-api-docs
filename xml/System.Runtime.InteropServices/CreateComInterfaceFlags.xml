<Type Name="CreateComInterfaceFlags" FullName="System.Runtime.InteropServices.CreateComInterfaceFlags">
  <TypeSignature Language="C#" Value="public enum CreateComInterfaceFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CreateComInterfaceFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.CreateComInterfaceFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum CreateComInterfaceFlags" />
  <TypeSignature Language="C++ CLI" Value="public enum class CreateComInterfaceFlags" />
  <TypeSignature Language="F#" Value="type CreateComInterfaceFlags = " />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Flags]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Flags&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies flags for the <see cref="M:System.Runtime.InteropServices.ComWrappers.GetOrCreateComInterfaceForObject(System.Object,System.Runtime.InteropServices.CreateComInterfaceFlags)" /> method.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CallerDefinedIUnknown">
      <MemberSignature Language="C#" Value="CallerDefinedIUnknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.CreateComInterfaceFlags CallerDefinedIUnknown = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.CreateComInterfaceFlags.CallerDefinedIUnknown" />
      <MemberSignature Language="VB.NET" Value="CallerDefinedIUnknown" />
      <MemberSignature Language="C++ CLI" Value="CallerDefinedIUnknown" />
      <MemberSignature Language="F#" Value="CallerDefinedIUnknown = 1" Usage="System.Runtime.InteropServices.CreateComInterfaceFlags.CallerDefinedIUnknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CreateComInterfaceFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The caller will provide an IUnknown Vtable.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This flag is useful in scenarios when the caller has no need to rely on an IUnknown instance that's used when it's not possible to run managed code (that is, during a garbage collection). This is common in traditional COM scenarios, but scenarios where <see href="/windows/win32/api/windows.ui.xaml.hosting.referencetracker/nn-windows-ui-xaml-hosting-referencetracker-ireferencetrackertarget">Reference Tracker hosting</see> calls the IUnknown API during a garbage collection are possible.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.CreateComInterfaceFlags None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.CreateComInterfaceFlags.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Runtime.InteropServices.CreateComInterfaceFlags.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CreateComInterfaceFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="TrackerSupport">
      <MemberSignature Language="C#" Value="TrackerSupport" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.CreateComInterfaceFlags TrackerSupport = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.CreateComInterfaceFlags.TrackerSupport" />
      <MemberSignature Language="VB.NET" Value="TrackerSupport" />
      <MemberSignature Language="C++ CLI" Value="TrackerSupport" />
      <MemberSignature Language="F#" Value="TrackerSupport = 2" Usage="System.Runtime.InteropServices.CreateComInterfaceFlags.TrackerSupport" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CreateComInterfaceFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Flag used to indicate the COM interface should implement <see href="https://docs.microsoft.com/windows/win32/api/windows.ui.xaml.hosting.referencetracker/nn-windows-ui-xaml-hosting-referencetracker-ireferencetrackertarget">IReferenceTrackerTarget</see>.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 When this flag is passed, the resulting COM interface will have an internal implementation of [IUnknown](https://docs.microsoft.com/windows/win32/api/unknwn/nn-unknwn-iunknown), therefore, none should be supplied by the caller.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

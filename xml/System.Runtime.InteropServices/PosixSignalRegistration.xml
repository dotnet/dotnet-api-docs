<Type Name="PosixSignalRegistration" FullName="System.Runtime.InteropServices.PosixSignalRegistration">
  <TypeSignature Language="C#" Value="public sealed class PosixSignalRegistration : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PosixSignalRegistration extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.PosixSignalRegistration" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PosixSignalRegistration&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type PosixSignalRegistration = class&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PosixSignalRegistration sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Handles a <see cref="T:System.Runtime.InteropServices.PosixSignal" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.PosixSignalRegistration Create (System.Runtime.InteropServices.PosixSignal signal, Action&lt;System.Runtime.InteropServices.PosixSignalContext&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.InteropServices.PosixSignalRegistration Create(valuetype System.Runtime.InteropServices.PosixSignal signal, class System.Action`1&lt;class System.Runtime.InteropServices.PosixSignalContext&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.PosixSignalRegistration.Create(System.Runtime.InteropServices.PosixSignal,System.Action{System.Runtime.InteropServices.PosixSignalContext})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (signal As PosixSignal, handler As Action(Of PosixSignalContext)) As PosixSignalRegistration" />
      <MemberSignature Language="F#" Value="static member Create : System.Runtime.InteropServices.PosixSignal * Action&lt;System.Runtime.InteropServices.PosixSignalContext&gt; -&gt; System.Runtime.InteropServices.PosixSignalRegistration" Usage="System.Runtime.InteropServices.PosixSignalRegistration.Create (signal, handler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::PosixSignalRegistration ^ Create(System::Runtime::InteropServices::PosixSignal signal, Action&lt;System::Runtime::InteropServices::PosixSignalContext ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.UnsupportedOSPlatform("android")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.UnsupportedOSPlatform("android")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.UnsupportedOSPlatform("browser")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.UnsupportedOSPlatform("browser")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.UnsupportedOSPlatform("ios")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.UnsupportedOSPlatform("ios")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.UnsupportedOSPlatform("tvos")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.UnsupportedOSPlatform("tvos")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.PosixSignalRegistration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signal" Type="System.Runtime.InteropServices.PosixSignal" />
        <Parameter Name="handler" Type="System.Action&lt;System.Runtime.InteropServices.PosixSignalContext&gt;" />
      </Parameters>
      <Docs>
        <param name="signal">The signal to register for.</param>
        <param name="handler">The handler that gets invoked.</param>
        <summary>Registers a <paramref name="handler" /> that is invoked when the <paramref name="signal" /> occurs.</summary>
        <returns>A <see cref="T:System.Runtime.InteropServices.PosixSignalRegistration" /> instance that can be disposed to unregister the handler.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Raw values can be provided for `signal` on Unix by casting them to <xref:System.Runtime.InteropServices.PosixSignal>.
            Default handling of the signal can be canceled through <xref:System.Runtime.InteropServices.PosixSignalContext.Cancel>.
            <xref:System.Runtime.InteropServices.PosixSignal.SIGINT> and <xref:System.Runtime.InteropServices.PosixSignal.SIGQUIT> can be canceled on both
            Windows and on Unix platforms; <xref:System.Runtime.InteropServices.PosixSignal.SIGTERM> can only be canceled on Unix.
            On Unix, terminal configuration can be canceled for <xref:System.Runtime.InteropServices.PosixSignal.SIGCHLD> and <xref:System.Runtime.InteropServices.PosixSignal.SIGCONT>.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="handler" /> is <see langword="null" />.</exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <paramref name="signal" /> is not supported by the platform.</exception>
        <exception cref="T:System.IO.IOException">An error occurred while setting up the signal handling or while installing the handler for the specified signal.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.PosixSignalRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="posixSignalRegistration.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unregisters the handler.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~PosixSignalRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.PosixSignalRegistration.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="posixSignalRegistration.Finalize " />
      <MemberSignature Language="C++ CLI" Value="!PosixSignalRegistration ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unregisters the handler.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

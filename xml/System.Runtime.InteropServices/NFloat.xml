<Type Name="NFloat" FullName="System.Runtime.InteropServices.NFloat">
  <TypeSignature Language="C#" Value="public readonly struct NFloat : IEquatable&lt;System.Runtime.InteropServices.NFloat&gt;" FrameworkAlternate="net-6.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit NFloat extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Runtime.InteropServices.NFloat&gt;" FrameworkAlternate="net-6.0" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.NFloat" />
  <TypeSignature Language="VB.NET" Value="Public Structure NFloat&#xA;Implements IEquatable(Of NFloat)" FrameworkAlternate="net-6.0" />
  <TypeSignature Language="F#" Value="type NFloat = struct" FrameworkAlternate="net-6.0" />
  <TypeSignature Language="C++ CLI" Value="public value class NFloat : IEquatable&lt;System::Runtime::InteropServices::NFloat&gt;" FrameworkAlternate="net-6.0" />
  <TypeSignature Language="C#" Value="public readonly struct NFloat : IComparable, IComparable&lt;System.Runtime.InteropServices.NFloat&gt;, IEquatable&lt;System.Runtime.InteropServices.NFloat&gt;, ISpanFormattable" FrameworkAlternate="net-7.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit NFloat extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Runtime.InteropServices.NFloat&gt;, class System.IEquatable`1&lt;valuetype System.Runtime.InteropServices.NFloat&gt;, class System.IFormattable, class System.ISpanFormattable" FrameworkAlternate="net-7.0" />
  <TypeSignature Language="VB.NET" Value="Public Structure NFloat&#xA;Implements IComparable, IComparable(Of NFloat), IEquatable(Of NFloat), ISpanFormattable" FrameworkAlternate="net-7.0" />
  <TypeSignature Language="F#" Value="type NFloat = struct&#xA;    interface IFormattable&#xA;    interface ISpanFormattable" FrameworkAlternate="net-7.0" />
  <TypeSignature Language="C++ CLI" Value="public value class NFloat : IComparable, IComparable&lt;System::Runtime::InteropServices::NFloat&gt;, IEquatable&lt;System::Runtime::InteropServices::NFloat&gt;, ISpanFormattable" FrameworkAlternate="net-7.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Runtime.InteropServices.NFloat&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-7.0">
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-7.0">
      <InterfaceName>System.IComparable&lt;System.Runtime.InteropServices.NFloat&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-7.0">
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-7.0">
      <InterfaceName>System.ISpanFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Runtime.InteropServices.NFloat" /> is an immutable value type that represents a floating type that has the same size as the native integer size.
      It is meant to be used as an exchange type at the managed/unmanaged boundary to accurately represent in managed code unmanaged APIs that use a type alias for C or C++'s <c>float</c> on 32-bit platforms or <c>double</c> on 64-bit platforms, such as the CGFloat type in libraries provided by Apple.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

It is meant to be used as an exchange type at the managed/unmanaged boundary to accurately represent in managed code unmanaged APIs that use a type alias for C or C++'s `float` on 32-bit platforms or `double` on 64-bit platforms, such as the `CGFloat` type in libraries provided by Apple.

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NFloat (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Double)" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.NFloat : double -&gt; System.Runtime.InteropServices.NFloat" Usage="new System.Runtime.InteropServices.NFloat value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NFloat(double value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">The floating-point value.</param>
        <summary>Constructs an instance from a 64-bit floating point value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NFloat (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.#ctor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Single)" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.NFloat : single -&gt; System.Runtime.InteropServices.NFloat" Usage="new System.Runtime.InteropServices.NFloat value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NFloat(float value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The floating-point value.</param>
        <summary>Constructs an instance from a 32-bit floating point value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="nFloat.CompareTo obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="obj">An object to compare, or <see langword="null" />.</param>
        <summary>Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</summary>
        <returns>
          <para>A signed number indicating the relative values of this instance and <paramref name="obj" />.</para>
          <list type="table">
            <listheader>
              <term>Return Value</term>
              <description>Description</description>
            </listheader>
            <item>
              <term>Less than zero</term>
              <description>This instance is less than <paramref name="obj" />, or this instance is not a number and <paramref name="obj" /> is a number.</description>
            </item>
            <item>
              <term>Zero</term>
              <description>This instance is equal to <paramref name="obj" />, or both this instance and <paramref name="obj" /> are not a number.</description>
            </item>
            <item>
              <term>Greater than zero</term>
              <description>This instance is greater than <paramref name="obj" />, or this instance is a number and <paramref name="obj" /> is not a number or <paramref name="obj" /> is <see langword="null" />.</description>
            </item>
          </list>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="obj" /> is not a <see cref="T:System.Runtime.InteropServices.NFloat" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Runtime.InteropServices.NFloat other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Runtime.InteropServices.NFloat other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.CompareTo(System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As NFloat) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : System.Runtime.InteropServices.NFloat -&gt; int&#xA;override this.CompareTo : System.Runtime.InteropServices.NFloat -&gt; int" Usage="nFloat.CompareTo other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Runtime::InteropServices::NFloat other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="other">A floating-point number to compare.</param>
        <summary>Compares this instance to a specified floating-point number and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified floating-point number.</summary>
        <returns>
          <para>A signed number indicating the relative values of this instance and <paramref name="other" />.</para>
          <list type="table">
            <listheader>
              <term>Return Value</term>
              <description>Description</description>
            </listheader>
            <item>
              <term>Less than zero</term>
              <description>This instance is less than <paramref name="other" />, or this instance is not a number and <paramref name="other" /> is a number.</description>
            </item>
            <item>
              <term>Zero</term>
              <description>This instance is equal to <paramref name="other" />, or both this instance and <paramref name="other" /> are not a number.</description>
            </item>
            <item>
              <term>Greater than zero</term>
              <description>This instance is greater than <paramref name="other" />, or this instance is a number and <paramref name="other" /> is not a number.</description>
            </item>
          </list>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Epsilon">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.NFloat Epsilon { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.InteropServices.NFloat Epsilon" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.NFloat.Epsilon" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Epsilon As NFloat" />
      <MemberSignature Language="F#" Value="member this.Epsilon : System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.Epsilon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::InteropServices::NFloat Epsilon { System::Runtime::InteropServices::NFloat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the smallest positive NFloat value that is greater than zero.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Runtime.InteropServices.NFloat other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Runtime.InteropServices.NFloat other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.Equals(System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As NFloat) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Runtime.InteropServices.NFloat -&gt; bool" Usage="nFloat.Equals other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Runtime::InteropServices::NFloat other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Runtime.InteropServices.NFloat" />
      </Parameters>
      <Docs>
        <param name="other">An <see cref="T:System.Runtime.InteropServices.NFloat" /> value to compare to this instance.</param>
        <summary>Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Runtime.InteropServices.CLong" /> value.</summary>
        <returns>
          <see langword="true" /> if <paramref name="other" /> has the same value as this instance; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? o);" FrameworkAlternate="net-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" FrameworkAlternate="net-6.0" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" FrameworkAlternate="net-6.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="nFloat.Equals o" FrameworkAlternate="net-6.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" FrameworkAlternate="net-6.0" />
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="nFloat.Equals obj" FrameworkAlternate="net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="net-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="net-6.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-6.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="net-7.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-7.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="o">An object to compare with this instance.</param>
        <param name="obj">An object to compare with this instance.</param>
        <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
        <returns>
          <see langword="true" /> if <paramref name="o" /> is an instance of <see cref="T:System.Runtime.InteropServices.NFloat" /> and equals the value of this instance; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="nFloat.GetHashCode " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code for this instance.</summary>
        <returns>A 32-bit signed integer hash code.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFinite">
      <MemberSignature Language="C#" Value="public static bool IsFinite (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFinite(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.IsFinite(System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsFinite (value As NFloat) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsFinite : System.Runtime.InteropServices.NFloat -&gt; bool" Usage="System.Runtime.InteropServices.NFloat.IsFinite value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsFinite(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The floating-point value.</param>
        <summary>Determines whether the specified value is finite (zero, subnormal, or normal).</summary>
        <returns>
          <see langword="true" /> if the value is finite (zero, subnormal or normal); <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInfinity">
      <MemberSignature Language="C#" Value="public static bool IsInfinity (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsInfinity(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.IsInfinity(System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsInfinity (value As NFloat) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsInfinity : System.Runtime.InteropServices.NFloat -&gt; bool" Usage="System.Runtime.InteropServices.NFloat.IsInfinity value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsInfinity(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The floating-point value.</param>
        <summary>Determines whether the specified value is infinite (positive or negative infinity).</summary>
        <returns>
          <see langword="true" /> if the value is infinite (positive or negative infinity); <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNaN">
      <MemberSignature Language="C#" Value="public static bool IsNaN (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNaN(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.IsNaN(System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNaN (value As NFloat) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsNaN : System.Runtime.InteropServices.NFloat -&gt; bool" Usage="System.Runtime.InteropServices.NFloat.IsNaN value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNaN(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The floating-point value.</param>
        <summary>Determines whether the specified value is NaN (not a number).</summary>
        <returns>
          <see langword="true" /> if the value is NaN (not a number); <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNegative">
      <MemberSignature Language="C#" Value="public static bool IsNegative (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNegative(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.IsNegative(System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNegative (value As NFloat) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsNegative : System.Runtime.InteropServices.NFloat -&gt; bool" Usage="System.Runtime.InteropServices.NFloat.IsNegative value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNegative(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The floating-point value.</param>
        <summary>Determines whether the specified value is negative.</summary>
        <returns>
          <see langword="true" /> if the value is negative; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNegativeInfinity">
      <MemberSignature Language="C#" Value="public static bool IsNegativeInfinity (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNegativeInfinity(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.IsNegativeInfinity(System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNegativeInfinity (value As NFloat) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsNegativeInfinity : System.Runtime.InteropServices.NFloat -&gt; bool" Usage="System.Runtime.InteropServices.NFloat.IsNegativeInfinity value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNegativeInfinity(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The floating-point value.</param>
        <summary>Determines whether the specified value is negative infinity.</summary>
        <returns>
          <see langword="true" /> if the value is negative infinity; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNormal">
      <MemberSignature Language="C#" Value="public static bool IsNormal (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNormal(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.IsNormal(System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNormal (value As NFloat) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsNormal : System.Runtime.InteropServices.NFloat -&gt; bool" Usage="System.Runtime.InteropServices.NFloat.IsNormal value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNormal(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The floating-point value.</param>
        <summary>Determines whether the specified value is normal.</summary>
        <returns>
          <see langword="true" /> if the value is normal; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPositiveInfinity">
      <MemberSignature Language="C#" Value="public static bool IsPositiveInfinity (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPositiveInfinity(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.IsPositiveInfinity(System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPositiveInfinity (value As NFloat) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsPositiveInfinity : System.Runtime.InteropServices.NFloat -&gt; bool" Usage="System.Runtime.InteropServices.NFloat.IsPositiveInfinity value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPositiveInfinity(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The floating-point value.</param>
        <summary>Determines whether the specified value is positive infinity.</summary>
        <returns>
          <see langword="true" /> if the value is positive infinity; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubnormal">
      <MemberSignature Language="C#" Value="public static bool IsSubnormal (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSubnormal(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.IsSubnormal(System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSubnormal (value As NFloat) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsSubnormal : System.Runtime.InteropServices.NFloat -&gt; bool" Usage="System.Runtime.InteropServices.NFloat.IsSubnormal value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSubnormal(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The floating-point value.</param>
        <summary>Determines whether the specified value is subnormal.</summary>
        <returns>
          <see langword="true" /> if the value is subnormal; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.NFloat MaxValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.InteropServices.NFloat MaxValue" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.NFloat.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxValue As NFloat" />
      <MemberSignature Language="F#" Value="member this.MaxValue : System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.MaxValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::InteropServices::NFloat MaxValue { System::Runtime::InteropServices::NFloat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the largest finite value of a NFloat.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.NFloat MinValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.InteropServices.NFloat MinValue" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.NFloat.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinValue As NFloat" />
      <MemberSignature Language="F#" Value="member this.MinValue : System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.MinValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::InteropServices::NFloat MinValue { System::Runtime::InteropServices::NFloat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the smallest finite value of a NFloat.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NaN">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.NFloat NaN { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.InteropServices.NFloat NaN" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.NFloat.NaN" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NaN As NFloat" />
      <MemberSignature Language="F#" Value="member this.NaN : System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.NaN" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::InteropServices::NFloat NaN { System::Runtime::InteropServices::NFloat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents a value that is not a number (NaN).</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NegativeInfinity">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.NFloat NegativeInfinity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.InteropServices.NFloat NegativeInfinity" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.NFloat.NegativeInfinity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NegativeInfinity As NFloat" />
      <MemberSignature Language="F#" Value="member this.NegativeInfinity : System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.NegativeInfinity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::InteropServices::NFloat NegativeInfinity { System::Runtime::InteropServices::NFloat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents negative infinity.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.NFloat operator + (System.Runtime.InteropServices.NFloat left, System.Runtime.InteropServices.NFloat right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_Addition(valuetype System.Runtime.InteropServices.NFloat left, valuetype System.Runtime.InteropServices.NFloat right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Addition(System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (left As NFloat, right As NFloat) As NFloat" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Runtime.InteropServices.NFloat * System.Runtime.InteropServices.NFloat -&gt; System.Runtime.InteropServices.NFloat" Usage="left + right" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::NFloat operator +(System::Runtime::InteropServices::NFloat left, System::Runtime::InteropServices::NFloat right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
        <Parameter Name="right" Type="System.Runtime.InteropServices.NFloat" Index="1" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="left">The value to which <paramref name="right" /> is added.</param>
        <param name="right">The value which is added to <paramref name="left" />.</param>
        <summary>Adds two values together to compute their sum.</summary>
        <returns>The sum of <paramref name="left" /> and <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Decrement">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.NFloat operator -- (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_Decrement(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Decrement(System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Decrement (value As NFloat) As NFloat" />
      <MemberSignature Language="F#" Value="static member op_Decrement : System.Runtime.InteropServices.NFloat -&gt; System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.op_Decrement value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::NFloat operator --(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to decrement.</param>
        <summary>Decrements a value.</summary>
        <returns>The result of decrementing <paramref name="value" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.NFloat operator / (System.Runtime.InteropServices.NFloat left, System.Runtime.InteropServices.NFloat right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_Division(valuetype System.Runtime.InteropServices.NFloat left, valuetype System.Runtime.InteropServices.NFloat right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Division(System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (left As NFloat, right As NFloat) As NFloat" />
      <MemberSignature Language="F#" Value="static member ( / ) : System.Runtime.InteropServices.NFloat * System.Runtime.InteropServices.NFloat -&gt; System.Runtime.InteropServices.NFloat" Usage="left / right" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::NFloat operator /(System::Runtime::InteropServices::NFloat left, System::Runtime::InteropServices::NFloat right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
        <Parameter Name="right" Type="System.Runtime.InteropServices.NFloat" Index="1" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="left">The value which <paramref name="right" /> divides.</param>
        <param name="right">The value which divides <paramref name="left" />.</param>
        <summary>Divides two values together to compute their quotient.</summary>
        <returns>The quotient of <paramref name="left" /> divided-by <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Runtime.InteropServices.NFloat left, System.Runtime.InteropServices.NFloat right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Runtime.InteropServices.NFloat left, valuetype System.Runtime.InteropServices.NFloat right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Equality(System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As NFloat, right As NFloat) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Runtime.InteropServices.NFloat * System.Runtime.InteropServices.NFloat -&gt; bool" Usage="left = right" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Runtime::InteropServices::NFloat left, System::Runtime::InteropServices::NFloat right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
        <Parameter Name="right" Type="System.Runtime.InteropServices.NFloat" Index="1" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="left">The value to compare with <paramref name="right" />.</param>
        <param name="right">The value to compare with <paramref name="left" />.</param>
        <summary>Compares two values to determine equality.</summary>
        <returns>
          <see langword="true" /> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Runtime.InteropServices.NFloat (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Explicit(System.Decimal)~System.Runtime.InteropServices.NFloat" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As NFloat" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.op_Explicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Runtime::InteropServices::NFloat(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Explicitly converts a <see cref="T:System.Decimal" /> value to its nearest representable native-sized floating-point value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable native-sized floating-point value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Runtime.InteropServices.NFloat (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_Explicit(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Explicit(System.Double)~System.Runtime.InteropServices.NFloat" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Double) As NFloat" />
      <MemberSignature Language="F#" Value="static member op_Explicit : double -&gt; System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.op_Explicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Runtime::InteropServices::NFloat(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Explicitly converts a <see cref="T:System.Double" /> value to its nearest representable native-sized floating-point value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable native-sized floating-point value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator byte (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8 op_Explicit(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Explicit(System.Runtime.InteropServices.NFloat)~System.Byte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As NFloat) As Byte" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Runtime.InteropServices.NFloat -&gt; byte" Usage="System.Runtime.InteropServices.NFloat.op_Explicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Byte(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Explicitly converts a native-sized floating-point value to its nearest representable <see cref="T:System.Byte" /> value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable <see cref="T:System.Byte" /> value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator char (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname char op_Explicit(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Explicit(System.Runtime.InteropServices.NFloat)~System.Char" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As NFloat) As Char" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Runtime.InteropServices.NFloat -&gt; char" Usage="System.Runtime.InteropServices.NFloat.op_Explicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator char(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Explicitly converts a native-sized floating-point value to its nearest representable <see cref="T:System.Char" /> value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable <see cref="T:System.Char" /> value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Explicit(System.Runtime.InteropServices.NFloat)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As NFloat) As Decimal" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Runtime.InteropServices.NFloat -&gt; decimal" Usage="System.Runtime.InteropServices.NFloat.op_Explicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Explicitly converts a native-sized floating-point value to its nearest representable <see cref="T:System.Decimal" /> value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable <see cref="T:System.Decimal" /> value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator short (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int16 op_Explicit(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Explicit(System.Runtime.InteropServices.NFloat)~System.Int16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As NFloat) As Short" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Runtime.InteropServices.NFloat -&gt; int16" Usage="System.Runtime.InteropServices.NFloat.op_Explicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator short(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Explicitly converts a native-sized floating-point value to its nearest representable <see cref="T:System.Int16" /> value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable <see cref="T:System.Int16" /> value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator int (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Explicit(System.Runtime.InteropServices.NFloat)~System.Int32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As NFloat) As Integer" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Runtime.InteropServices.NFloat -&gt; int" Usage="System.Runtime.InteropServices.NFloat.op_Explicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator int(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Explicitly converts a native-sized floating-point value to its nearest representable <see cref="T:System.Int32" /> value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable <see cref="T:System.Int32" /> value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator long (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Explicit(System.Runtime.InteropServices.NFloat)~System.Int64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As NFloat) As Long" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Runtime.InteropServices.NFloat -&gt; int64" Usage="System.Runtime.InteropServices.NFloat.op_Explicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator long(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Explicitly converts a native-sized floating-point value to its nearest representable <see cref="T:System.Int64" /> value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable <see cref="T:System.Int64" /> value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator nint (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname native int op_Explicit(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Explicit(System.Runtime.InteropServices.NFloat)~System.IntPtr" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As NFloat) As IntPtr" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Runtime.InteropServices.NFloat -&gt; nativeint" Usage="System.Runtime.InteropServices.NFloat.op_Explicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator IntPtr(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.NativeInteger]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NativeInteger&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Explicitly converts a native-sized floating-point value to its nearest representable <see cref="T:System.IntPtr" /> value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable <see cref="T:System.IntPtr" /> value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator sbyte (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int8 op_Explicit(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Explicit(System.Runtime.InteropServices.NFloat)~System.SByte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As NFloat) As SByte" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Runtime.InteropServices.NFloat -&gt; sbyte" Usage="System.Runtime.InteropServices.NFloat.op_Explicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::SByte(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Explicitly converts a native-sized floating-point value to its nearest representable <see cref="T:System.SByte" /> value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable <see cref="T:System.SByte" /> value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator float (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Explicit(System.Runtime.InteropServices.NFloat)~System.Single" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As NFloat) As Single" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Runtime.InteropServices.NFloat -&gt; single" Usage="System.Runtime.InteropServices.NFloat.op_Explicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator float(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Explicitly converts a native-sized floating-point value to its nearest representable <see cref="T:System.Single" /> value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable <see cref="T:System.Single" /> value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ushort (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int16 op_Explicit(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Explicit(System.Runtime.InteropServices.NFloat)~System.UInt16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As NFloat) As UShort" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Runtime.InteropServices.NFloat -&gt; uint16" Usage="System.Runtime.InteropServices.NFloat.op_Explicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt16(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Explicitly converts a native-sized floating-point value to its nearest representable <see cref="T:System.UInt16" /> value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable <see cref="T:System.UInt16" /> value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator uint (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int32 op_Explicit(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Explicit(System.Runtime.InteropServices.NFloat)~System.UInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As NFloat) As UInteger" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Runtime.InteropServices.NFloat -&gt; uint32" Usage="System.Runtime.InteropServices.NFloat.op_Explicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt32(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Explicitly converts a native-sized floating-point value to its nearest representable <see cref="T:System.UInt32" /> value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable <see cref="T:System.UInt32" /> value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ulong (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int64 op_Explicit(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Explicit(System.Runtime.InteropServices.NFloat)~System.UInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As NFloat) As ULong" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Runtime.InteropServices.NFloat -&gt; uint64" Usage="System.Runtime.InteropServices.NFloat.op_Explicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt64(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Explicitly converts a native-sized floating-point value to its nearest representable <see cref="T:System.UInt64" /> value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable <see cref="T:System.UInt64" /> value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator nuint (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname native unsigned int op_Explicit(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Explicit(System.Runtime.InteropServices.NFloat)~System.UIntPtr" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As NFloat) As UIntPtr" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Runtime.InteropServices.NFloat -&gt; unativeint" Usage="System.Runtime.InteropServices.NFloat.op_Explicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator UIntPtr(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UIntPtr</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.NativeInteger]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NativeInteger&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Explicitly converts a native-sized floating-point value to its nearest representable <see cref="T:System.UIntPtr" /> value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable <see cref="T:System.UIntPtr" /> value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Runtime.InteropServices.NFloat left, System.Runtime.InteropServices.NFloat right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Runtime.InteropServices.NFloat left, valuetype System.Runtime.InteropServices.NFloat right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_GreaterThan(System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As NFloat, right As NFloat) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Runtime.InteropServices.NFloat * System.Runtime.InteropServices.NFloat -&gt; bool" Usage="left &gt; right" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Runtime::InteropServices::NFloat left, System::Runtime::InteropServices::NFloat right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
        <Parameter Name="right" Type="System.Runtime.InteropServices.NFloat" Index="1" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="left">The value to compare with <paramref name="right" />.</param>
        <param name="right">The value to compare with <paramref name="left" />.</param>
        <summary>Compares two values to determine which is greater.</summary>
        <returns>
          <see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Runtime.InteropServices.NFloat left, System.Runtime.InteropServices.NFloat right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Runtime.InteropServices.NFloat left, valuetype System.Runtime.InteropServices.NFloat right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_GreaterThanOrEqual(System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As NFloat, right As NFloat) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Runtime.InteropServices.NFloat * System.Runtime.InteropServices.NFloat -&gt; bool" Usage="left &gt;= right" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Runtime::InteropServices::NFloat left, System::Runtime::InteropServices::NFloat right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
        <Parameter Name="right" Type="System.Runtime.InteropServices.NFloat" Index="1" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="left">The value to compare with <paramref name="right" />.</param>
        <param name="right">The value to compare with <paramref name="left" />.</param>
        <summary>Compares two values to determine which is greater or equal.</summary>
        <returns>
          <see langword="true" /> if <paramref name="left" /> is greater than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Runtime.InteropServices.NFloat (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_Implicit(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Implicit(System.Byte)~System.Runtime.InteropServices.NFloat" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Byte) As NFloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : byte -&gt; System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.op_Implicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Runtime::InteropServices::NFloat(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Implicitly converts a <see cref="T:System.Byte" /> value to its nearest representable native-sized floating-point value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable native-sized floating-point value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Runtime.InteropServices.NFloat (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_Implicit(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Implicit(System.Char)~System.Runtime.InteropServices.NFloat" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Char) As NFloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : char -&gt; System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.op_Implicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Runtime::InteropServices::NFloat(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Implicitly converts a <see cref="T:System.Char" /> value to its nearest representable native-sized floating-point value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable native-sized floating-point value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Runtime.InteropServices.NFloat (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_Implicit(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Implicit(System.Int16)~System.Runtime.InteropServices.NFloat" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Short) As NFloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int16 -&gt; System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.op_Implicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Runtime::InteropServices::NFloat(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Implicitly converts a <see cref="T:System.Int16" /> value to its nearest representable native-sized floating-point value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable native-sized floating-point value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Runtime.InteropServices.NFloat (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_Implicit(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Implicit(System.Int32)~System.Runtime.InteropServices.NFloat" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Integer) As NFloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int -&gt; System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.op_Implicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Runtime::InteropServices::NFloat(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Implicitly converts a <see cref="T:System.Int32" /> value to its nearest representable native-sized floating-point value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable native-sized floating-point value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Runtime.InteropServices.NFloat (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_Implicit(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Implicit(System.Int64)~System.Runtime.InteropServices.NFloat" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Long) As NFloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int64 -&gt; System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.op_Implicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Runtime::InteropServices::NFloat(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Implicitly converts a <see cref="T:System.Int64" /> value to its nearest representable native-sized floating-point value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable native-sized floating-point value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Runtime.InteropServices.NFloat (nint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_Implicit(native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Implicit(System.IntPtr)~System.Runtime.InteropServices.NFloat" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As IntPtr) As NFloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : nativeint -&gt; System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.op_Implicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Runtime::InteropServices::NFloat(IntPtr value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.IntPtr" Index="0" FrameworkAlternate="net-7.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.NativeInteger]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NativeInteger&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Implicitly converts a <see cref="T:System.IntPtr" /> value to its nearest representable native-sized floating-point value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable native-sized floating-point value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator double (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Implicit(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Implicit(System.Runtime.InteropServices.NFloat)~System.Double" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As NFloat) As Double" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Runtime.InteropServices.NFloat -&gt; double" Usage="System.Runtime.InteropServices.NFloat.op_Implicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator double(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Implicitly converts a native-sized floating-point value to its nearest representable <see cref="T:System.Double" /> value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable <see cref="T:System.Double" /> value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Runtime.InteropServices.NFloat (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_Implicit(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Implicit(System.SByte)~System.Runtime.InteropServices.NFloat" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As SByte) As NFloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : sbyte -&gt; System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.op_Implicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Runtime::InteropServices::NFloat(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Implicitly converts a <see cref="T:System.SByte" /> value to its nearest representable native-sized floating-point value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable native-sized floating-point value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Runtime.InteropServices.NFloat (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_Implicit(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Implicit(System.Single)~System.Runtime.InteropServices.NFloat" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Single) As NFloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : single -&gt; System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.op_Implicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Runtime::InteropServices::NFloat(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Implicitly converts a <see cref="T:System.Single" /> value to its nearest representable native-sized floating-point value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable native-sized floating-point value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Runtime.InteropServices.NFloat (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_Implicit(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Implicit(System.UInt16)~System.Runtime.InteropServices.NFloat" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UShort) As NFloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint16 -&gt; System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.op_Implicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Runtime::InteropServices::NFloat(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Implicitly converts a <see cref="T:System.UInt16" /> value to its nearest representable native-sized floating-point value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable native-sized floating-point value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Runtime.InteropServices.NFloat (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_Implicit(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Implicit(System.UInt32)~System.Runtime.InteropServices.NFloat" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UInteger) As NFloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint32 -&gt; System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.op_Implicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Runtime::InteropServices::NFloat(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Implicitly converts a <see cref="T:System.UInt32" /> value to its nearest representable native-sized floating-point value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable native-sized floating-point value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Runtime.InteropServices.NFloat (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_Implicit(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Implicit(System.UInt64)~System.Runtime.InteropServices.NFloat" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As ULong) As NFloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint64 -&gt; System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.op_Implicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Runtime::InteropServices::NFloat(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Implicitly converts a <see cref="T:System.UInt64" /> value to its nearest representable native-sized floating-point value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable native-sized floating-point value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Runtime.InteropServices.NFloat (nuint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_Implicit(native unsigned int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Implicit(System.UIntPtr)~System.Runtime.InteropServices.NFloat" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UIntPtr) As NFloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : unativeint -&gt; System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.op_Implicit value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Runtime::InteropServices::NFloat(UIntPtr value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-7.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UIntPtr" Index="0" FrameworkAlternate="net-7.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.NativeInteger]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NativeInteger&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>Implicitly converts a <see cref="T:System.UIntPtr" /> value to its nearest representable native-sized floating-point value.</summary>
        <returns>
          <paramref name="value" /> converted to its nearest representable native-sized floating-point value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Increment">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.NFloat operator ++ (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_Increment(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Increment(System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Increment (value As NFloat) As NFloat" />
      <MemberSignature Language="F#" Value="static member op_Increment : System.Runtime.InteropServices.NFloat -&gt; System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.op_Increment value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::NFloat operator ++(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to increment.</param>
        <summary>Increments a value.</summary>
        <returns>The result of incrementing <paramref name="value" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Runtime.InteropServices.NFloat left, System.Runtime.InteropServices.NFloat right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Runtime.InteropServices.NFloat left, valuetype System.Runtime.InteropServices.NFloat right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Inequality(System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As NFloat, right As NFloat) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Runtime.InteropServices.NFloat * System.Runtime.InteropServices.NFloat -&gt; bool" Usage="System.Runtime.InteropServices.NFloat.op_Inequality (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Runtime::InteropServices::NFloat left, System::Runtime::InteropServices::NFloat right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
        <Parameter Name="right" Type="System.Runtime.InteropServices.NFloat" Index="1" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="left">The value to compare with <paramref name="right" />.</param>
        <param name="right">The value to compare with <paramref name="left" />.</param>
        <summary>Compares two values to determine inequality.</summary>
        <returns>
          <see langword="true" /> if <paramref name="left" /> is not equal to <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Runtime.InteropServices.NFloat left, System.Runtime.InteropServices.NFloat right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Runtime.InteropServices.NFloat left, valuetype System.Runtime.InteropServices.NFloat right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_LessThan(System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As NFloat, right As NFloat) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Runtime.InteropServices.NFloat * System.Runtime.InteropServices.NFloat -&gt; bool" Usage="left &lt; right" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Runtime::InteropServices::NFloat left, System::Runtime::InteropServices::NFloat right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
        <Parameter Name="right" Type="System.Runtime.InteropServices.NFloat" Index="1" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="left">The value to compare with <paramref name="right" />.</param>
        <param name="right">The value to compare with <paramref name="left" />.</param>
        <summary>Compares two values to determine which is less.</summary>
        <returns>
          <see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Runtime.InteropServices.NFloat left, System.Runtime.InteropServices.NFloat right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Runtime.InteropServices.NFloat left, valuetype System.Runtime.InteropServices.NFloat right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_LessThanOrEqual(System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As NFloat, right As NFloat) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Runtime.InteropServices.NFloat * System.Runtime.InteropServices.NFloat -&gt; bool" Usage="left &lt;= right" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Runtime::InteropServices::NFloat left, System::Runtime::InteropServices::NFloat right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
        <Parameter Name="right" Type="System.Runtime.InteropServices.NFloat" Index="1" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="left">The value to compare with <paramref name="right" />.</param>
        <param name="right">The value to compare with <paramref name="left" />.</param>
        <summary>Compares two values to determine which is less or equal.</summary>
        <returns>
          <see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Modulus">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.NFloat operator % (System.Runtime.InteropServices.NFloat left, System.Runtime.InteropServices.NFloat right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_Modulus(valuetype System.Runtime.InteropServices.NFloat left, valuetype System.Runtime.InteropServices.NFloat right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Modulus(System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Mod (left As NFloat, right As NFloat) As NFloat" />
      <MemberSignature Language="F#" Value="static member ( % ) : System.Runtime.InteropServices.NFloat * System.Runtime.InteropServices.NFloat -&gt; System.Runtime.InteropServices.NFloat" Usage="left % right" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::NFloat operator %(System::Runtime::InteropServices::NFloat left, System::Runtime::InteropServices::NFloat right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
        <Parameter Name="right" Type="System.Runtime.InteropServices.NFloat" Index="1" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="left">The value which <paramref name="right" /> divides.</param>
        <param name="right">The value which divides <paramref name="left" />.</param>
        <summary>Divides two values together to compute their remainder.</summary>
        <returns>The remainder of <paramref name="left" /> divided-by <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.NFloat operator * (System.Runtime.InteropServices.NFloat left, System.Runtime.InteropServices.NFloat right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_Multiply(valuetype System.Runtime.InteropServices.NFloat left, valuetype System.Runtime.InteropServices.NFloat right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Multiply(System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As NFloat, right As NFloat) As NFloat" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Runtime.InteropServices.NFloat * System.Runtime.InteropServices.NFloat -&gt; System.Runtime.InteropServices.NFloat" Usage="left * right" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::NFloat operator *(System::Runtime::InteropServices::NFloat left, System::Runtime::InteropServices::NFloat right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
        <Parameter Name="right" Type="System.Runtime.InteropServices.NFloat" Index="1" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="left">The value which <paramref name="right" /> multiplies.</param>
        <param name="right">The value which multiplies <paramref name="left" />.</param>
        <summary>Multiplies two values together to compute their product.</summary>
        <returns>The product of <paramref name="left" /> divided-by <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.NFloat operator - (System.Runtime.InteropServices.NFloat left, System.Runtime.InteropServices.NFloat right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_Subtraction(valuetype System.Runtime.InteropServices.NFloat left, valuetype System.Runtime.InteropServices.NFloat right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_Subtraction(System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (left As NFloat, right As NFloat) As NFloat" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Runtime.InteropServices.NFloat * System.Runtime.InteropServices.NFloat -&gt; System.Runtime.InteropServices.NFloat" Usage="left - right" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::NFloat operator -(System::Runtime::InteropServices::NFloat left, System::Runtime::InteropServices::NFloat right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
        <Parameter Name="right" Type="System.Runtime.InteropServices.NFloat" Index="1" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="left">The value from which <paramref name="right" /> is subtracted.</param>
        <param name="right">The value which is subtracted from <paramref name="left" />.</param>
        <summary>Subtracts two values to compute their difference.</summary>
        <returns>The difference of <paramref name="right" /> subtracted from <paramref name="left" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.NFloat operator - (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_UnaryNegation(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_UnaryNegation(System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (value As NFloat) As NFloat" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : System.Runtime.InteropServices.NFloat -&gt; System.Runtime.InteropServices.NFloat" Usage="- value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::NFloat operator -(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value for which to compute its unary negation.</param>
        <summary>Computes the unary negation of a value.</summary>
        <returns>The unary negation of <paramref name="value" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.NFloat operator + (System.Runtime.InteropServices.NFloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.NFloat op_UnaryPlus(valuetype System.Runtime.InteropServices.NFloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.op_UnaryPlus(System.Runtime.InteropServices.NFloat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (value As NFloat) As NFloat" />
      <MemberSignature Language="F#" Value="static member ( ~+ ) : System.Runtime.InteropServices.NFloat -&gt; System.Runtime.InteropServices.NFloat" Usage="+ value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::NFloat operator +(System::Runtime::InteropServices::NFloat value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.NFloat" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value for which to compute its unary plus.</param>
        <summary>Computes the unary plus of a value.</summary>
        <returns>The unary plus of <paramref name="value" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.NFloat Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.InteropServices.NFloat Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As NFloat" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.Parse s" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::NFloat Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="s">A string that contains the number to convert.</param>
        <summary>Converts the string representation of a number to its floating-point number equivalent.</summary>
        <returns>A floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="s" /> is <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="s" /> does not represent a number in a valid format.</exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.NFloat Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.InteropServices.NFloat Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As NFloat" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.Parse (s, style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::NFloat Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="net-7.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="s">A string that contains the number to convert.</param>
        <param name="style">A bitwise combination of enumeration values that indicate the style elements that can be present in <paramref name="s" />.</param>
        <summary>Converts the string representation of a number in a specified style to its floating-point number equivalent.</summary>
        <returns>A floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.

-or-

<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="s" /> is <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="s" /> does not represent a number in a valid format.</exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.NFloat Parse (string s, IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.InteropServices.NFloat Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As NFloat" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.Parse (s, provider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::NFloat Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="net-7.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="s">A string that contains the number to convert.</param>
        <param name="provider">An object that supplies culture-specific formatting information about <paramref name="s" />.</param>
        <summary>Converts the string representation of a number in a specified culture-specific format to its floating-point number equivalent.</summary>
        <returns>A floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="s" /> is <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="s" /> does not represent a number in a valid format.</exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.NFloat Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.AllowThousands | System.Globalization.NumberStyles.Float, IFormatProvider? provider = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.InteropServices.NFloat Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.AllowThousands | System.Globalization.NumberStyles.Float, Optional provider As IFormatProvider = Nothing) As NFloat" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="net-7.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="net-7.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="s">A character span that contains the number to convert.</param>
        <param name="style">A bitwise combination of enumeration values that indicate the style elements that can be present in <paramref name="s" />.</param>
        <param name="provider">An object that supplies culture-specific formatting information about <paramref name="s" />.</param>
        <summary>Converts a character span that contains the string representation of a number in a specified style and culture-specific format to its floating-point number equivalent.</summary>
        <returns>A floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.

-or-

<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="s" /> does not represent a number in a valid format.</exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.NFloat Parse (string s, System.Globalization.NumberStyles style, IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.InteropServices.NFloat Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As NFloat" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.Parse (s, style, provider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::NFloat Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="net-7.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="net-7.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="s">A string that contains the number to convert.</param>
        <param name="style">A bitwise combination of enumeration values that indicate the style elements that can be present in <paramref name="s" />.</param>
        <param name="provider">An object that supplies culture-specific formatting information about <paramref name="s" />.</param>
        <summary>Converts the string representation of a number in a specified style and culture-specific format to its floating-point number equivalent.</summary>
        <returns>A floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.

-or-

<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="s" /> is <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="s" /> does not represent a number in a valid format.</exception>
      </Docs>
    </Member>
    <Member MemberName="PositiveInfinity">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.NFloat PositiveInfinity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.InteropServices.NFloat PositiveInfinity" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.NFloat.PositiveInfinity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PositiveInfinity As NFloat" />
      <MemberSignature Language="F#" Value="member this.PositiveInfinity : System.Runtime.InteropServices.NFloat" Usage="System.Runtime.InteropServices.NFloat.PositiveInfinity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::InteropServices::NFloat PositiveInfinity { System::Runtime::InteropServices::NFloat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.NFloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents positive infinity.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public static int Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.NFloat.Size" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Size As Integer" />
      <MemberSignature Language="F#" Value="member this.Size : int" Usage="System.Runtime.InteropServices.NFloat.Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int Size { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the size, in bytes, of an NFloat.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="nFloat.ToString " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts the numeric value of this instance to its equivalent string representation.</summary>
        <returns>The string representation of the value of this instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="nFloat.ToString provider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="provider">An object that supplies culture-specific formatting information.</param>
        <summary>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</summary>
        <returns>The string representation of the value of this instance as specified by <paramref name="provider" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string? format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="nFloat.ToString format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="format">A numeric format string.</param>
        <summary>Converts the numeric value of this instance to its equivalent string representation using the specified format.</summary>
        <returns>The string representation of the value of this instance as specified by <paramref name="format" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">
          <paramref name="format" /> is invalid.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string? format, IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="nFloat.ToString (format, provider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="net-7.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="format">A numeric format string.</param>
        <param name="provider">An object that supplies culture-specific formatting information.</param>
        <summary>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</summary>
        <returns>The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">
          <paramref name="format" /> is invalid.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = default, IFormatProvider? provider = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = Nothing, Optional provider As IFormatProvider = Nothing) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryFormat : Span&lt;char&gt; * int * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool&#xA;override this.TryFormat : Span&lt;char&gt; * int * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="nFloat.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ISpanFormattable.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="net-7.0" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="net-7.0" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="net-7.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="destination">The span in which to write this instance's value formatted as a span of characters.</param>
        <param name="charsWritten">When this method returns, contains the number of characters that were written in <paramref name="destination" />.</param>
        <param name="format">A span containing the characters that represent a standard or custom format string that defines the acceptable format for <paramref name="destination" />.</param>
        <param name="provider">An optional object that supplies culture-specific formatting information for <paramref name="destination" />.</param>
        <summary>Tries to format the value of the current instance into the provided span of characters.</summary>
        <returns>
          <see langword="true" /> if the formatting was successful; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out System.Runtime.InteropServices.NFloat result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] valuetype System.Runtime.InteropServices.NFloat&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.TryParse(System.ReadOnlySpan{System.Char},System.Runtime.InteropServices.NFloat@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As NFloat) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * NFloat -&gt; bool" Usage="System.Runtime.InteropServices.NFloat.TryParse (s, result)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::Runtime::InteropServices::NFloat % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="net-7.0" />
        <Parameter Name="result" Type="System.Runtime.InteropServices.NFloat" RefType="out" Index="1" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="s">A read-only character span that contains the number to convert.</param>
        <param name="result">When this method returns, contains a floating-point number equivalent of the numeric value or symbol contained in <paramref name="s" /> if the conversion succeeded or zero if the conversion failed. The conversion fails if the <paramref name="s" /> is <see cref="F:System.String.Empty" /> or is not in a valid format. This parameter is passed uninitialized; any value originally supplied in result will be overwritten.</param>
        <summary>Tries to convert a character span containing the string representation of a number to its floating-point number equivalent.</summary>
        <returns>
          <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string? s, out System.Runtime.InteropServices.NFloat result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] valuetype System.Runtime.InteropServices.NFloat&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.TryParse(System.String,System.Runtime.InteropServices.NFloat@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As NFloat) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : string * NFloat -&gt; bool" Usage="System.Runtime.InteropServices.NFloat.TryParse (s, result)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::Runtime::InteropServices::NFloat % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="net-7.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="result" Type="System.Runtime.InteropServices.NFloat" RefType="out" Index="1" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="s">A read-only character span that contains the number to convert.</param>
        <param name="result">When this method returns, contains a floating-point number equivalent of the numeric value or symbol contained in <paramref name="s" /> if the conversion succeeded or zero if the conversion failed. The conversion fails if the <paramref name="s" /> is <see langword="null" />, <see cref="F:System.String.Empty" />, or is not in a valid format. This parameter is passed uninitialized; any value originally supplied in result will be overwritten.</param>
        <summary>Tries to convert the string representation of a number to its floating-point number equivalent.</summary>
        <returns>
          <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider? provider, out System.Runtime.InteropServices.NFloat result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Runtime.InteropServices.NFloat&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Runtime.InteropServices.NFloat@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As NFloat) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider * NFloat -&gt; bool" Usage="System.Runtime.InteropServices.NFloat.TryParse (s, style, provider, result)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Runtime::InteropServices::NFloat % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="net-7.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="net-7.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="net-7.0" />
        <Parameter Name="result" Type="System.Runtime.InteropServices.NFloat" RefType="out" Index="3" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="s">A read-only character span that contains the number to convert.</param>
        <param name="style">A bitwise combination of enumeration values that indicate the style elements that can be present in <paramref name="s" />.</param>
        <param name="provider">An object that supplies culture-specific formatting information about <paramref name="s" />.</param>
        <param name="result">When this method returns, contains a floating-point number equivalent of the numeric value or symbol contained in <paramref name="s" /> if the conversion succeeded or zero if the conversion failed. The conversion fails if the <paramref name="s" /> is <see cref="F:System.String.Empty" /> or is not in a format compliant with <paramref name="style" />, or if <paramref name="style" /> is not a valid combination of <see cref="T:System.Globalization.NumberStyles" /> enumeration constants. This parameter is passed uninitialized; any value originally supplied in result will be overwritten.</param>
        <summary>Tries to convert a character span containing the string representation of a number in a specified style and culture-specific format to its floating-point number equivalent.</summary>
        <returns>
          <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.

-or-

<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string? s, System.Globalization.NumberStyles style, IFormatProvider? provider, out System.Runtime.InteropServices.NFloat result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Runtime.InteropServices.NFloat&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NFloat.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Runtime.InteropServices.NFloat@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As NFloat) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider * NFloat -&gt; bool" Usage="System.Runtime.InteropServices.NFloat.TryParse (s, style, provider, result)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Runtime::InteropServices::NFloat % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="net-7.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="net-7.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="net-7.0" />
        <Parameter Name="result" Type="System.Runtime.InteropServices.NFloat" RefType="out" Index="3" FrameworkAlternate="net-7.0" />
      </Parameters>
      <Docs>
        <param name="s">A read-only character span that contains the number to convert.</param>
        <param name="style">A bitwise combination of enumeration values that indicate the style elements that can be present in <paramref name="s" />.</param>
        <param name="provider">An object that supplies culture-specific formatting information about <paramref name="s" />.</param>
        <param name="result">When this method returns, contains a floating-point number equivalent of the numeric value or symbol contained in <paramref name="s" /> if the conversion succeeded or zero if the conversion failed. The conversion fails if the <paramref name="s" /> is <see langword="null" />, <see cref="F:System.String.Empty" />, or is not in a format compliant with <paramref name="style" />, or if <paramref name="style" /> is not a valid combination of <see cref="T:System.Globalization.NumberStyles" /> enumeration constants. This parameter is passed uninitialized; any value originally supplied in result will be overwritten.</param>
        <summary>Tries to convert the string representation of a number in a specified style and culture-specific format to its floating-point number equivalent.</summary>
        <returns>
          <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.

-or-

<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public double Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Value" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.NFloat.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Double" />
      <MemberSignature Language="F#" Value="member this.Value : double" Usage="System.Runtime.InteropServices.NFloat.Value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Value { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The underlying floating-point value of this instance.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ImmutableCollectionsMarshal" FullName="System.Runtime.InteropServices.ImmutableCollectionsMarshal">
  <TypeSignature Language="C#" Value="public static class ImmutableCollectionsMarshal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableCollectionsMarshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ImmutableCollectionsMarshal" />
  <TypeSignature Language="VB.NET" Value="Public Class ImmutableCollectionsMarshal" />
  <TypeSignature Language="F#" Value="type ImmutableCollectionsMarshal = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableCollectionsMarshal abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0;net-8.0-pp;net-9.0;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An unsafe class that provides a set of methods to access the underlying data representations of immutable collections.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AsArray&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[]? AsArray&lt;T&gt; (System.Collections.Immutable.ImmutableArray&lt;T&gt; array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] AsArray&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ImmutableCollectionsMarshal.AsArray``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AsArray(Of T) (array As ImmutableArray(Of T)) As T()" />
      <MemberSignature Language="F#" Value="static member AsArray : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T[]" Usage="System.Runtime.InteropServices.ImmutableCollectionsMarshal.AsArray array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static cli::array &lt;T&gt; ^ AsArray(System::Collections::Immutable::ImmutableArray&lt;T&gt; array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-8.0-pp;net-9.0;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of elements in the input <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> value.</typeparam>
        <param name="array">The input <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> value to get the underlying <typeparamref name="T" /> array from.</param>
        <summary>Gets the underlying <typeparamref name="T" /> array for an input <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> value.</summary>
        <returns>The underlying <typeparamref name="T" /> array for <paramref name="array" />, if present.</returns>
        <remarks>
          <para> When using this method, callers should make sure to not pass the resulting underlying array to methods that might mutate it. Doing so might cause undefined behavior in code paths using <paramref name="array" /> that don't expect the contents of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> value to change.
            </para>
          <para> If <paramref name="array" /> is uninitialized (that is, its <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> property is <see langword="true" />), the resulting <typeparamref name="T" /> array will be <see langword="null" />.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsImmutableArray&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; AsImmutableArray&lt;T&gt; (T[]? array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; AsImmutableArray&lt;T&gt;(!!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ImmutableCollectionsMarshal.AsImmutableArray``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AsImmutableArray(Of T) (array As T()) As ImmutableArray(Of T)" />
      <MemberSignature Language="F#" Value="static member AsImmutableArray : 'T[] -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Runtime.InteropServices.ImmutableCollectionsMarshal.AsImmutableArray array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; AsImmutableArray(cli::array &lt;T&gt; ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-8.0-pp;net-9.0;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of elements in the input array.</typeparam>
        <param name="array">The input array to wrap in the returned <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> value.</param>
        <summary>Gets an <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> value wrapping the input <typeparamref name="T" /> array.</summary>
        <returns>An <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> value wrapping <paramref name="array" />.</returns>
        <remarks>
          <para> When using this method, callers should take extra care to ensure that they're the sole owners of the input array, and that it won't be modified once the returned <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> value starts being used. Doing so might cause undefined behavior in code paths that don't expect the contents of a given <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> values to change after its creation.
            </para>
          <para> If <paramref name="array" /> is <see langword="null" />, the returned <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> value will be uninitialized (that is, its <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> property will be <see langword="true" />).
            </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

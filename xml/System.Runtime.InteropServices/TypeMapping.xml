<Type Name="TypeMapping" FullName="System.Runtime.InteropServices.TypeMapping">
  <TypeSignature Language="C#" Value="public static class TypeMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TypeMapping extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.TypeMapping" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeMapping" />
  <TypeSignature Language="F#" Value="type TypeMapping = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeMapping abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetOrCreateExternalTypeMapping&lt;TTypeMapGroup&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyDictionary&lt;string,Type&gt; GetOrCreateExternalTypeMapping&lt;TTypeMapGroup&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.Type&gt; GetOrCreateExternalTypeMapping&lt;TTypeMapGroup&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.TypeMapping.GetOrCreateExternalTypeMapping``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOrCreateExternalTypeMapping(Of TTypeMapGroup) () As IReadOnlyDictionary(Of String, Type)" />
      <MemberSignature Language="F#" Value="static member GetOrCreateExternalTypeMapping : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;string, Type&gt;" Usage="System.Runtime.InteropServices.TypeMapping.GetOrCreateExternalTypeMapping " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TTypeMapGroup&gt;&#xA; static System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, Type ^&gt; ^ GetOrCreateExternalTypeMapping();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Interop types may be removed by trimming")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Interop types may be removed by trimming")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Type&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TTypeMapGroup">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TTypeMapGroup">To be added.</typeparam>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateProxyTypeMapping&lt;TTypeMapGroup&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyDictionary&lt;Type,Type&gt; GetOrCreateProxyTypeMapping&lt;TTypeMapGroup&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyDictionary`2&lt;class System.Type, class System.Type&gt; GetOrCreateProxyTypeMapping&lt;TTypeMapGroup&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.TypeMapping.GetOrCreateProxyTypeMapping``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOrCreateProxyTypeMapping(Of TTypeMapGroup) () As IReadOnlyDictionary(Of Type, Type)" />
      <MemberSignature Language="F#" Value="static member GetOrCreateProxyTypeMapping : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;Type, Type&gt;" Usage="System.Runtime.InteropServices.TypeMapping.GetOrCreateProxyTypeMapping " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TTypeMapGroup&gt;&#xA; static System::Collections::Generic::IReadOnlyDictionary&lt;Type ^, Type ^&gt; ^ GetOrCreateProxyTypeMapping();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Interop types may be removed by trimming")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Interop types may be removed by trimming")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,System.Type&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TTypeMapGroup">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TTypeMapGroup">To be added.</typeparam>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

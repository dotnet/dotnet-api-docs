<Type Name="ClientScriptItemCollection" FullName="System.Web.UI.Design.ClientScriptItemCollection">
  <TypeSignature Language="C#" Value="public sealed class ClientScriptItemCollection : System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientScriptItemCollection extends System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ClientScriptItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientScriptItemCollection&#xA;Inherits ReadOnlyCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientScriptItemCollection sealed : System::Collections::ReadOnlyCollectionBase" />
  <TypeSignature Language="F#" Value="type ClientScriptItemCollection = class&#xA;    inherit ReadOnlyCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ReadOnlyCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a read-only collection of client script blocks that are contained within a Web Form or user control at design time. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Each <xref:System.Web.UI.Design.ClientScriptItem> object in the <xref:System.Web.UI.Design.ClientScriptItemCollection> class represents a `script` block that is contained in a document (a Web Form, Web server control, a content page, or a master page) at design time.  
  
 Use the <xref:System.Web.UI.Design.WebFormsRootDesigner> class to set or examine client script elements that are contained in a Web Forms document on the design surface. Retrieve the collection of client script elements that are contained within the Web document by using the <xref:System.Web.UI.Design.WebFormsRootDesigner.GetClientScriptsInDocument%2A> method. Add a client script element to the Web document by using the <xref:System.Web.UI.Design.WebFormsRootDesigner.AddClientScriptToDocument%2A> method.  
  
 To add client script elements at run time, use the <xref:System.Web.UI.ClientScriptManager> class.  
  
> [!NOTE]
>  The <xref:System.Web.UI.Design.ClientScriptItemCollection> class represents script elements at design time that execute on the client. Because the `script` elements that are generated for <xref:System.Web.UI.Design.ClientScriptItemCollection> objects are not run on the server, the elements do not contain the `runat="server"` attribute.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.ReadOnlyCollectionBase" />
    <altmember cref="T:System.Web.UI.Design.ClientScriptItem" />
    <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
    <altmember cref="T:System.Web.UI.ClientScriptManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientScriptItemCollection (System.Web.UI.Design.ClientScriptItem[] clientScriptItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Design.ClientScriptItem[] clientScriptItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ClientScriptItemCollection.#ctor(System.Web.UI.Design.ClientScriptItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clientScriptItems As ClientScriptItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientScriptItemCollection(cli::array &lt;System::Web::UI::Design::ClientScriptItem ^&gt; ^ clientScriptItems);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.ClientScriptItemCollection : System.Web.UI.Design.ClientScriptItem[] -&gt; System.Web.UI.Design.ClientScriptItemCollection" Usage="new System.Web.UI.Design.ClientScriptItemCollection clientScriptItems" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientScriptItems" Type="System.Web.UI.Design.ClientScriptItem[]" />
      </Parameters>
      <Docs>
        <param name="clientScriptItems">An array of <see cref="T:System.Web.UI.Design.ClientScriptItem" /> elements used to initialize the collection.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ClientScriptItemCollection" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If `clientScriptItems` is `null` (`Nothing` in Visual Basic) or does not contain any elements, the constructor initializes an empty <xref:System.Web.UI.Design.ClientScriptItemCollection> object. Otherwise, the items in the `clientScriptItems` array are used to set the items for the <xref:System.Web.UI.Design.ClientScriptItemCollection>.  
  
 The <xref:System.Web.UI.Design.ClientScriptItemCollection.%23ctor%2A> constructor is typically used in classes that are derived from the <xref:System.Web.UI.Design.WebFormsRootDesigner> class. Visual designers implement the <xref:System.Web.UI.Design.WebFormsRootDesigner.GetClientScriptsInDocument%2A> method to return a <xref:System.Web.UI.Design.ClientScriptItemCollection> object for the client script elements in a Web document at design time.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.WebFormsRootDesigner.GetClientScriptsInDocument" />
        <altmember cref="T:System.Web.UI.Design.ClientScriptItem" />
      </Docs>
    </Member>
  </Members>
</Type>

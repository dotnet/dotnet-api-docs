<Type Name="AppSettingsExpressionEditor" FullName="System.Web.UI.Design.AppSettingsExpressionEditor">
  <TypeSignature Language="C#" Value="public class AppSettingsExpressionEditor : System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppSettingsExpressionEditor extends System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.AppSettingsExpressionEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class AppSettingsExpressionEditor&#xA;Inherits ExpressionEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppSettingsExpressionEditor : System::Web::UI::Design::ExpressionEditor" />
  <TypeSignature Language="F#" Value="type AppSettingsExpressionEditor = class&#xA;    inherit ExpressionEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ExpressionEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides properties and methods for evaluating and editing an application setting expression in a configuration file at design time.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.Design.AppSettingsExpressionEditor> class is derived from the <xref:System.Web.UI.Design.ExpressionEditor> class and provides an implementation for evaluating and associating an application setting reference with a control property at design time. For example, you can bind the value of a control property to the application setting expression `AppSettings:mySettingKeyName`, which indicates that the control property value is set using the `mySettingKeyName` value in the `appSettings` section of the Web configuration file.  
  
 A visual designer host, such as [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], uses the <xref:System.Web.UI.Design.AppSettingsExpressionEditor> class to select an application setting from the `appSettings` configuration section, and then evaluates the selected expression for design-time rendering.  
  
 When you browse to the <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> property for a control in the design-time properties grid, the visual designer displays a dialog box to set expressions that provide the run-time value for a control property. You can select the expression type based on a list of expression prefixes. When you select the **AppSettings** expression prefix from the list, the visual designer host uses the associated <xref:System.Web.UI.Design.ExpressionEditorSheet> object to provide design-time editing functionality of `appSettings` expressions and uses <xref:System.Web.UI.Design.AppSettingsExpressionEditor> methods to evaluate and convert the expression string based on the syntax for an application setting expression. The visual designer host uses the evaluated expression result to assign control property values that are rendered on the design surface.  
  
 The <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> property for an <xref:System.Web.UI.Design.AppSettingsExpressionEditor> object returns the string `AppSettings`. The <xref:System.Web.Compilation.AppSettingsExpressionBuilder> class is associated with the expression prefix `AppSettings` and the <xref:System.Web.UI.Design.AppSettingsExpressionEditor> implementation.  
  
 The <xref:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression%2A> method evaluates an input application setting expression string. The <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method returns the <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that is used to enter and edit application setting expressions.  
  
   
  
## Examples  
 The following code example demonstrates how to bind the <xref:System.Web.UI.WebControls.HyperLink.NavigateUrl%2A> property of a <xref:System.Web.UI.WebControls.HyperLink> control to an application setting expression using the <xref:System.Web.UI.Design.AppSettingsExpressionEditor> object.  
  
1.  In a Web Forms project, add `MyHyperLinkSetting` to the `<appSettings>` section of the web.config file.  
  
     [!code-xml[ControlsUsingExpressions#5](~/samples/snippets/common/VS_Snippets_WebNet/ControlsUsingExpressions/Common/controlsusingexpressions.xml#5)]  
  
2.  On a Web Forms page, add a <xref:System.Web.UI.WebControls.HyperLink> control.  
  
3.  For the `Hyperlink` control, in Properties, click **Expressions**, and then click the ellipsis button (**...**).  
  
     The `<Hyperlinkname>`**Expression** dialog box appears.  
  
4.  Under **Bindable properties**, click **NavigateUrl**, in the **Expression type** list, click **AppSettings**, and then under **Expression properties**, in the **AppSetting** box, type **MyHyperLinkSetting**.  
  
 The visual designer uses the <xref:System.Web.UI.Design.AppSettingsExpressionEditor> to assign the expression for the `NavigateUrl` property.  
  
 The following aspx source shows an example of a property value set using an application setting expression.  
  
 [!code-aspx-csharp[ControlsUsingExpressions#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlsUsingExpressions/CS/controlsusingexpressionscs.aspx#2)]
 [!code-aspx-vb[ControlsUsingExpressions#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlsUsingExpressions/VB/controlsusingexpressionsvb.aspx#2)]
 [!code-xml[ControlsUsingExpressions#2](~/samples/snippets/common/VS_Snippets_WebNet/ControlsUsingExpressions/Common/controlsusingexpressions.xml#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Configuration.Configuration.AppSettings" />
    <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
    <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
    <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
    <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
    <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppSettingsExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.AppSettingsExpressionEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppSettingsExpressionEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.AppSettingsExpressionEditor" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 An instance of the <xref:System.Web.UI.Design.AppSettingsExpressionEditor> class is configured by the base class together with the <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> property set to `AppSettings`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Configuration.AppSettings" />
        <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public override object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EvaluateExpression (expression As String, parseTimeData As Object, propertyType As Type, serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EvaluateExpression(System::String ^ expression, System::Object ^ parseTimeData, Type ^ propertyType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.EvaluateExpression : string * obj * Type * IServiceProvider -&gt; obj" Usage="appSettingsExpressionEditor.EvaluateExpression (expression, parseTimeData, propertyType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">An application setting expression string to evaluate. <paramref name="expression" /> does not include the <see langword="AppSettings" /> expression prefix.</param>
        <param name="parseTimeData">An object containing additional parsing information for evaluating <paramref name="expression" />.</param>
        <param name="propertyType">The control property type.</param>
        <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
        <summary>Evaluates an application setting expression string and provides the design-time value for a control property.</summary>
        <returns>The object referenced by <paramref name="expression" />, if the expression evaluation succeeded; otherwise, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression%2A> method looks up the application setting that is specified by `expression`, and then returns the value of the application setting.  
  
 The visual designer uses the <xref:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression%2A> method to evaluate an application setting expression and provide the design-time value for an associated control property. The visual designer calls the <xref:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression%2A> method with the expression string, and uses the evaluated expression result to assign control property values that are rendered on the design surface.  
  
 At run time, the page parser uses the <xref:System.Web.Compilation.AppSettingsExpressionBuilder.EvaluateExpression%2A> and <xref:System.Web.Compilation.AppSettingsExpressionBuilder.GetCodeExpression%2A> methods of the corresponding <xref:System.Web.Compilation.AppSettingsExpressionBuilder> implementation to evaluate an expression and provide the run-time value for an associated control property.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Configuration.AppSettings" />
        <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.AppSettingsExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExpressionEditorSheet (expression As String, serviceProvider As IServiceProvider) As ExpressionEditorSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Design::ExpressionEditorSheet ^ GetExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="appSettingsExpressionEditor.GetExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">The expression string set for a control property, used to initialize the expression editor sheet. <paramref name="expression" /> does not include the <see langword="AppSettings" /> expression prefix.</param>
        <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
        <summary>Returns an expression editor sheet for an application setting expression.</summary>
        <returns>An <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> implementation that defines the application setting expression properties.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.Design.AppSettingsExpressionEditor.GetExpressionEditorSheet%2A> method returns a simple editor sheet implementation, which uses a single input string to form the expression.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Configuration.AppSettings" />
        <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>

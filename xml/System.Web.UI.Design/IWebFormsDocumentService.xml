<Type Name="IWebFormsDocumentService" FullName="System.Web.UI.Design.IWebFormsDocumentService">
  <TypeSignature Language="C#" Value="public interface IWebFormsDocumentService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebFormsDocumentService" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.IWebFormsDocumentService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebFormsDocumentService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebFormsDocumentService" />
  <TypeSignature Language="F#" Value="type IWebFormsDocumentService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The recommended alternative is System.Web.UI.Design.WebFormsRootDesigner. The WebFormsRootDesigner contains additional functionality and allows for more extensibility. To get the WebFormsRootDesigner use the RootDesigner property from your ControlDesigner. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides methods to access services for tracking the loading state of a Web Forms document, handling events at load time, accessing a document's location, managing a document's undo service, and setting a new selection within the document.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  The <xref:System.Web.UI.Design.IWebFormsDocumentService> interface is obsolete. Use the <xref:System.Web.UI.Design.WebFormsRootDesigner> class for equivalent designer functionality.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
  </Docs>
  <Members>
    <Member MemberName="CreateDiscardableUndoUnit">
      <MemberSignature Language="C#" Value="public object CreateDiscardableUndoUnit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateDiscardableUndoUnit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.IWebFormsDocumentService.CreateDiscardableUndoUnit" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDiscardableUndoUnit () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateDiscardableUndoUnit();" />
      <MemberSignature Language="F#" Value="abstract member CreateDiscardableUndoUnit : unit -&gt; obj" Usage="iWebFormsDocumentService.CreateDiscardableUndoUnit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a discardable undo unit.</summary>
        <returns>The new discardable undo unit.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is obsolete and there is no equivalent functionality.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardUndoUnit">
      <MemberSignature Language="C#" Value="public void DiscardUndoUnit (object discardableUndoUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscardUndoUnit(object discardableUndoUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.IWebFormsDocumentService.DiscardUndoUnit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardUndoUnit (discardableUndoUnit As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardUndoUnit(System::Object ^ discardableUndoUnit);" />
      <MemberSignature Language="F#" Value="abstract member DiscardUndoUnit : obj -&gt; unit" Usage="iWebFormsDocumentService.DiscardUndoUnit discardableUndoUnit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="discardableUndoUnit" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="discardableUndoUnit">The undo unit to discard.</param>
        <summary>Discards the specified undo unit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is obsolete and there is no equivalent functionality.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentUrl">
      <MemberSignature Language="C#" Value="public string DocumentUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.IWebFormsDocumentService.DocumentUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentUrl : string" Usage="System.Web.UI.Design.IWebFormsDocumentService.DocumentUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the URL at which the document is located.</summary>
        <value>The URL at which the document is located, or <see langword="null" /> if the document has no associated URL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  The <xref:System.Web.UI.Design.IWebFormsDocumentService.DocumentUrl%2A> interface property is obsolete. Use the <xref:System.Web.UI.Design.WebFormsRootDesigner.DocumentUrl%2A> property on the <xref:System.Web.UI.Design.WebFormsRootDesigner> class for equivalent designer functionality.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableUndo">
      <MemberSignature Language="C#" Value="public void EnableUndo (bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnableUndo(bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.IWebFormsDocumentService.EnableUndo(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnableUndo (enable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnableUndo(bool enable);" />
      <MemberSignature Language="F#" Value="abstract member EnableUndo : bool -&gt; unit" Usage="iWebFormsDocumentService.EnableUndo enable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enable">
          <see langword="true" /> if actions should be undoable; otherwise, <see langword="false" />.</param>
        <summary>Enables the ability to undo actions that occur within undoable action units or transactions.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is obsolete and there is no equivalent functionality.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoading">
      <MemberSignature Language="C#" Value="public bool IsLoading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoading" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.IWebFormsDocumentService.IsLoading" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoading { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLoading : bool" Usage="System.Web.UI.Design.IWebFormsDocumentService.IsLoading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the document service is currently loading.</summary>
        <value>
          <see langword="true" /> if the document service is loading; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  The <xref:System.Web.UI.Design.IWebFormsDocumentService.IsLoading%2A> interface property is obsolete. Use the <xref:System.Web.UI.Design.WebFormsRootDesigner.IsLoading%2A> property on the <xref:System.Web.UI.Design.WebFormsRootDesigner> class for equivalent designer functionality.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadComplete">
      <MemberSignature Language="C#" Value="event EventHandler LoadComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LoadComplete" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Design.IWebFormsDocumentService.LoadComplete" />
      <MemberSignature Language="VB.NET" Value="Event LoadComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LoadComplete;" />
      <MemberSignature Language="F#" Value="member this.LoadComplete : EventHandler " Usage="member this.LoadComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the service has finished loading.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  The <xref:System.Web.UI.Design.IWebFormsDocumentService.LoadComplete> interface event is obsolete. Use the <xref:System.Web.UI.Design.WebFormsRootDesigner.LoadComplete> event on the <xref:System.Web.UI.Design.WebFormsRootDesigner> class for equivalent designer functionality.  
  
 This event provides an opportunity to perform operations immediately after loading has completed. Events that should occur at load time can be registered as event handlers for this event.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSelection">
      <MemberSignature Language="C#" Value="public void UpdateSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.IWebFormsDocumentService.UpdateSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateSelection();" />
      <MemberSignature Language="F#" Value="abstract member UpdateSelection : unit -&gt; unit" Usage="iWebFormsDocumentService.UpdateSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>When implemented in a derived class, updates the current selection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is obsolete and there is no equivalent functionality.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="FilterLoggerProvider" FullName="Microsoft.Extensions.Logging.Filter.Internal.FilterLoggerProvider">
  <TypeSignature Language="C#" Value="public class FilterLoggerProvider : IDisposable, Microsoft.Extensions.Logging.ILoggerProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FilterLoggerProvider extends System.Object implements class Microsoft.Extensions.Logging.ILoggerProvider, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.Filter.Internal.FilterLoggerProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class FilterLoggerProvider&#xA;Implements IDisposable, ILoggerProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class FilterLoggerProvider : IDisposable, Microsoft::Extensions::Logging::ILoggerProvider" />
  <TypeSignature Language="F#" Value="type FilterLoggerProvider = class&#xA;    interface ILoggerProvider&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging.Filter</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FilterLoggerProvider (Microsoft.Extensions.Logging.ILoggerProvider innerLoggerProvider, Microsoft.Extensions.Logging.IFilterLoggerSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Logging.ILoggerProvider innerLoggerProvider, class Microsoft.Extensions.Logging.IFilterLoggerSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.Filter.Internal.FilterLoggerProvider.#ctor(Microsoft.Extensions.Logging.ILoggerProvider,Microsoft.Extensions.Logging.IFilterLoggerSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerLoggerProvider As ILoggerProvider, settings As IFilterLoggerSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FilterLoggerProvider(Microsoft::Extensions::Logging::ILoggerProvider ^ innerLoggerProvider, Microsoft::Extensions::Logging::IFilterLoggerSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Logging.Filter.Internal.FilterLoggerProvider : Microsoft.Extensions.Logging.ILoggerProvider * Microsoft.Extensions.Logging.IFilterLoggerSettings -&gt; Microsoft.Extensions.Logging.Filter.Internal.FilterLoggerProvider" Usage="new Microsoft.Extensions.Logging.Filter.Internal.FilterLoggerProvider (innerLoggerProvider, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Filter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerLoggerProvider" Type="Microsoft.Extensions.Logging.ILoggerProvider" />
        <Parameter Name="settings" Type="Microsoft.Extensions.Logging.IFilterLoggerSettings" />
      </Parameters>
      <Docs>
        <param name="innerLoggerProvider">To be added.</param>
        <param name="settings">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLogger">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.ILogger CreateLogger (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Logging.ILogger CreateLogger(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.Filter.Internal.FilterLoggerProvider.CreateLogger(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateLogger (categoryName As String) As ILogger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::Logging::ILogger ^ CreateLogger(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="abstract member CreateLogger : string -&gt; Microsoft.Extensions.Logging.ILogger&#xA;override this.CreateLogger : string -&gt; Microsoft.Extensions.Logging.ILogger" Usage="filterLoggerProvider.CreateLogger categoryName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Logging.ILoggerProvider.CreateLogger(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Filter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILogger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">The category name for messages produced by the logger.</param>
        <summary>Creates a new <see cref="T:Microsoft.Extensions.Logging.ILogger" /> instance.</summary>
        <returns>The instance of <see cref="T:Microsoft.Extensions.Logging.ILogger" /> that was created.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.Filter.Internal.FilterLoggerProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="filterLoggerProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Filter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="EntityStoreSchemaGenerator" FullName="System.Data.Entity.Design.EntityStoreSchemaGenerator">
  <TypeSignature Language="C#" Value="public sealed class EntityStoreSchemaGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityStoreSchemaGenerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Design.EntityStoreSchemaGenerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityStoreSchemaGenerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityStoreSchemaGenerator sealed" />
  <TypeSignature Language="F#" Value="type EntityStoreSchemaGenerator = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity.Design</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Responsible for Loading Database Schema Information.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityStoreSchemaGenerator (string providerInvariantName, string connectionString, string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerInvariantName, string connectionString, string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerInvariantName As String, connectionString As String, namespaceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityStoreSchemaGenerator(System::String ^ providerInvariantName, System::String ^ connectionString, System::String ^ namespaceName);" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Design.EntityStoreSchemaGenerator : string * string * string -&gt; System.Data.Entity.Design.EntityStoreSchemaGenerator" Usage="new System.Data.Entity.Design.EntityStoreSchemaGenerator (providerInvariantName, connectionString, namespaceName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerInvariantName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerInvariantName">The invariant name of a provider.</param>
        <param name="connectionString">The connection used to open the database.</param>
        <param name="namespaceName">The namespace name for the store schema definition language (SSDL).</param>
        <summary>Initializes a new instance of the <see cref="T:System.Data.Entity.Design.EntityStoreSchemaGenerator" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateStoreSchemaConnection">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Creates an EntityConnection loaded with the providers metadata for the store schema.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateStoreSchemaConnection">
      <MemberSignature Language="C#" Value="public static System.Data.EntityClient.EntityConnection CreateStoreSchemaConnection (string providerInvariantName, string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EntityClient.EntityConnection CreateStoreSchemaConnection(string providerInvariantName, string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateStoreSchemaConnection (providerInvariantName As String, connectionString As String) As EntityConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::EntityClient::EntityConnection ^ CreateStoreSchemaConnection(System::String ^ providerInvariantName, System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="static member CreateStoreSchemaConnection : string * string -&gt; System.Data.EntityClient.EntityConnection" Usage="System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection (providerInvariantName, connectionString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityClient.EntityConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerInvariantName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerInvariantName">The invariant name of a provider.</param>
        <param name="connectionString">The connection for the providers connection.</param>
        <summary>Creates an EntityConnection loaded with the providers metadata for the store schema.</summary>
        <returns>An EntityConnection that can query the ConceptualSchemaDefinition for the provider.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStoreSchemaConnection">
      <MemberSignature Language="C#" Value="public static System.Data.EntityClient.EntityConnection CreateStoreSchemaConnection (string providerInvariantName, string connectionString, Version targetEntityFrameworkVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EntityClient.EntityConnection CreateStoreSchemaConnection(string providerInvariantName, string connectionString, class System.Version targetEntityFrameworkVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection(System.String,System.String,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateStoreSchemaConnection (providerInvariantName As String, connectionString As String, targetEntityFrameworkVersion As Version) As EntityConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::EntityClient::EntityConnection ^ CreateStoreSchemaConnection(System::String ^ providerInvariantName, System::String ^ connectionString, Version ^ targetEntityFrameworkVersion);" />
      <MemberSignature Language="F#" Value="static member CreateStoreSchemaConnection : string * string * Version -&gt; System.Data.EntityClient.EntityConnection" Usage="System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection (providerInvariantName, connectionString, targetEntityFrameworkVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityClient.EntityConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerInvariantName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="targetEntityFrameworkVersion" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="providerInvariantName">The provider invariant name.</param>
        <param name="connectionString">The connection for the providers connection.</param>
        <param name="targetEntityFrameworkVersion">The internal Entity Framework version that is being targeted.</param>
        <summary>Creates an EntityConnection loaded with the providers metadata for the store schema. Note that the targetEntityFrameworkVersion parameter uses internal EntityFramework version numbers as described in the <see cref="T:System.Data.Entity.Design.EntityFrameworkVersions" /> class.</summary>
        <returns>An EntityConnection that can query the ConceptualSchemaDefinition for the provider.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer EntityContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.EntityContainer EntityContainer" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityStoreSchemaGenerator.EntityContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityContainer As EntityContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::EntityContainer ^ EntityContainer { System::Data::Metadata::Edm::EntityContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntityContainer : System.Data.Metadata.Edm.EntityContainer" Usage="System.Data.Entity.Design.EntityStoreSchemaGenerator.EntityContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the storage model EntityContainer that was created.</summary>
        <value>The storage model EntityContainer that was created.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateForeignKeyProperties">
      <MemberSignature Language="C#" Value="public bool GenerateForeignKeyProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateForeignKeyProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateForeignKeyProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateForeignKeyProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateForeignKeyProperties { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GenerateForeignKeyProperties : bool with get, set" Usage="System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateForeignKeyProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the flag for generating foreign key properties in a storage model.</summary>
        <value>
          <see langword="true" /> if foreign key properties are generated in the storage model; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateStoreMetadata">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Generates store metadata and returns any schema errors.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateStoreMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateStoreMetadata () As IList(Of EdmSchemaError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Data::Metadata::Edm::EdmSchemaError ^&gt; ^ GenerateStoreMetadata();" />
      <MemberSignature Language="F#" Value="member this.GenerateStoreMetadata : unit -&gt; System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;" Usage="entityStoreSchemaGenerator.GenerateStoreMetadata " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates store metadata and returns any schema errors.</summary>
        <returns>The collection of schema error objects.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateStoreMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata (System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt; filters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt; filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata(System.Collections.Generic.IEnumerable{System.Data.Entity.Design.EntityStoreSchemaFilterEntry})" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateStoreMetadata (filters As IEnumerable(Of EntityStoreSchemaFilterEntry)) As IList(Of EdmSchemaError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Data::Metadata::Edm::EdmSchemaError ^&gt; ^ GenerateStoreMetadata(System::Collections::Generic::IEnumerable&lt;System::Data::Entity::Design::EntityStoreSchemaFilterEntry ^&gt; ^ filters);" />
      <MemberSignature Language="F#" Value="member this.GenerateStoreMetadata : seq&lt;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt; -&gt; System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;" Usage="entityStoreSchemaGenerator.GenerateStoreMetadata filters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filters" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt;" />
      </Parameters>
      <Docs>
        <param name="filters">An EntityStoreSchemaFilterEntry that specifies which database objects to allow or exclude during generation.</param>
        <summary>Generates store metadata and returns any schema errors.</summary>
        <returns>The collection of schema error objects.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateStoreMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata (System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt; filters, Version targetEntityFrameworkVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt; filters, class System.Version targetEntityFrameworkVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata(System.Collections.Generic.IEnumerable{System.Data.Entity.Design.EntityStoreSchemaFilterEntry},System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateStoreMetadata (filters As IEnumerable(Of EntityStoreSchemaFilterEntry), targetEntityFrameworkVersion As Version) As IList(Of EdmSchemaError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Data::Metadata::Edm::EdmSchemaError ^&gt; ^ GenerateStoreMetadata(System::Collections::Generic::IEnumerable&lt;System::Data::Entity::Design::EntityStoreSchemaFilterEntry ^&gt; ^ filters, Version ^ targetEntityFrameworkVersion);" />
      <MemberSignature Language="F#" Value="member this.GenerateStoreMetadata : seq&lt;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt; * Version -&gt; System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;" Usage="entityStoreSchemaGenerator.GenerateStoreMetadata (filters, targetEntityFrameworkVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filters" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt;" />
        <Parameter Name="targetEntityFrameworkVersion" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="filters">An EntityStoreSchemaFilterEntry that specifies which database objects to allow or exclude during generation.</param>
        <param name="targetEntityFrameworkVersion">The property of EntityFrameworkVersions that corresponds to the targeted version of the Entity Framework.</param>
        <summary>Generates store schema definition language (SSDL) and returns any schema errors.</summary>
        <returns>The collection of schema error objects.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreItemCollection">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.StoreItemCollection StoreItemCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.StoreItemCollection StoreItemCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityStoreSchemaGenerator.StoreItemCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StoreItemCollection As StoreItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::StoreItemCollection ^ StoreItemCollection { System::Data::Metadata::Edm::StoreItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StoreItemCollection : System.Data.Metadata.Edm.StoreItemCollection" Usage="System.Data.Entity.Design.EntityStoreSchemaGenerator.StoreItemCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.StoreItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the StoreItemCollection that was created.</summary>
        <value>The created <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStoreSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Writes the generated store schema definition language (SSDL) to a file.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStoreSchema">
      <MemberSignature Language="C#" Value="public void WriteStoreSchema (string outputFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStoreSchema(string outputFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStoreSchema (outputFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStoreSchema(System::String ^ outputFileName);" />
      <MemberSignature Language="F#" Value="member this.WriteStoreSchema : string -&gt; unit" Usage="entityStoreSchemaGenerator.WriteStoreSchema outputFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outputFileName">The name of the output file.</param>
        <summary>Writes the generated store schema definition language (SSDL) to a file.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStoreSchema">
      <MemberSignature Language="C#" Value="public void WriteStoreSchema (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStoreSchema(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStoreSchema (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStoreSchema(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteStoreSchema : System.Xml.XmlWriter -&gt; unit" Usage="entityStoreSchemaGenerator.WriteStoreSchema writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The XmlWriter to which the SSDL is written.</param>
        <summary>Writes the generated store schema definition language (SSDL) to an XmlWriter object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
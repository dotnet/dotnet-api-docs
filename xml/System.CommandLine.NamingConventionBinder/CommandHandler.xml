<Type Name="CommandHandler" FullName="System.CommandLine.NamingConventionBinder.CommandHandler">
  <TypeSignature Language="C#" Value="public static class CommandHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CommandHandler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.NamingConventionBinder.CommandHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class CommandHandler" />
  <TypeSignature Language="F#" Value="type CommandHandler = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandHandler abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create (Delegate delegate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create(class System.Delegate delegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (delegate As Delegate) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Delegate -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Delegate ^ delegate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegate" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="delegate">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create (System.Reflection.MethodInfo method, object? target = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create(class System.Reflection.MethodInfo method, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create(System.Reflection.MethodInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (method As MethodInfo, Optional target As Object = Nothing) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : System.Reflection.MethodInfo * obj -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create (method, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="method">To be added.</param>
        <param name="target">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T&gt; (Action&lt;T&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T&gt;(class System.Action`1&lt;!!T&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``1(System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T) (action As Action(Of T)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Action&lt;'T&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Action&lt;T&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T&gt; (Func&lt;T,int&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T&gt;(class System.Func`2&lt;!!T, int32&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``1(System.Func{``0,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T) (action As Func(Of T, Integer)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T, int&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T, int&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T&gt; (Func&lt;T,System.Threading.Tasks.Task&lt;int&gt;&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T&gt;(class System.Func`2&lt;!!T, class System.Threading.Tasks.Task`1&lt;int32&gt;&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``1(System.Func{``0,System.Threading.Tasks.Task{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T) (action As Func(Of T, Task(Of Integer))) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T, System.Threading.Tasks.Task&lt;int&gt;&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T, System::Threading::Tasks::Task&lt;int&gt; ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T&gt; (Func&lt;T,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T&gt;(class System.Func`2&lt;!!T, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``1(System.Func{``0,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T) (action As Func(Of T, Task)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T, System.Threading.Tasks.Task&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2&gt; (Action&lt;T1,T2&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2&gt;(class System.Action`2&lt;!!T1, !!T2&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``2(System.Action{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2) (action As Action(Of T1, T2)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Action&lt;'T1, 'T2&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Action&lt;T1, T2&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T1,T2&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2&gt; (Func&lt;T1,T2,int&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2&gt;(class System.Func`3&lt;!!T1, !!T2, int32&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``2(System.Func{``0,``1,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2) (action As Func(Of T1, T2, Integer)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, int&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, int&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2&gt; (Func&lt;T1,T2,System.Threading.Tasks.Task&lt;int&gt;&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2&gt;(class System.Func`3&lt;!!T1, !!T2, class System.Threading.Tasks.Task`1&lt;int32&gt;&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``2(System.Func{``0,``1,System.Threading.Tasks.Task{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2) (action As Func(Of T1, T2, Task(Of Integer))) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, System.Threading.Tasks.Task&lt;int&gt;&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, System::Threading::Tasks::Task&lt;int&gt; ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2&gt; (Func&lt;T1,T2,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2&gt;(class System.Func`3&lt;!!T1, !!T2, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``2(System.Func{``0,``1,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2) (action As Func(Of T1, T2, Task)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, System.Threading.Tasks.Task&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3&gt; (Action&lt;T1,T2,T3&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3&gt;(class System.Action`3&lt;!!T1, !!T2, !!T3&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``3(System.Action{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3) (action As Action(Of T1, T2, T3)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Action&lt;'T1, 'T2, 'T3&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Action&lt;T1, T2, T3&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T1,T2,T3&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3&gt; (Func&lt;T1,T2,T3,int&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3&gt;(class System.Func`4&lt;!!T1, !!T2, !!T3, int32&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``3(System.Func{``0,``1,``2,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3) (action As Func(Of T1, T2, T3, Integer)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, int&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, int&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3&gt; (Func&lt;T1,T2,T3,System.Threading.Tasks.Task&lt;int&gt;&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3&gt;(class System.Func`4&lt;!!T1, !!T2, !!T3, class System.Threading.Tasks.Task`1&lt;int32&gt;&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``3(System.Func{``0,``1,``2,System.Threading.Tasks.Task{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3) (action As Func(Of T1, T2, T3, Task(Of Integer))) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, System.Threading.Tasks.Task&lt;int&gt;&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, System::Threading::Tasks::Task&lt;int&gt; ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3&gt; (Func&lt;T1,T2,T3,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3&gt;(class System.Func`4&lt;!!T1, !!T2, !!T3, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``3(System.Func{``0,``1,``2,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3) (action As Func(Of T1, T2, T3, Task)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, System.Threading.Tasks.Task&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4&gt; (Action&lt;T1,T2,T3,T4&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4&gt;(class System.Action`4&lt;!!T1, !!T2, !!T3, !!T4&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``4(System.Action{``0,``1,``2,``3})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4) (action As Action(Of T1, T2, T3, T4)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Action&lt;'T1, 'T2, 'T3, 'T4&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Action&lt;T1, T2, T3, T4&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T1,T2,T3,T4&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4&gt; (Func&lt;T1,T2,T3,T4,int&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4&gt;(class System.Func`5&lt;!!T1, !!T2, !!T3, !!T4, int32&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``4(System.Func{``0,``1,``2,``3,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4) (action As Func(Of T1, T2, T3, T4, Integer)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, int&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, int&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4&gt; (Func&lt;T1,T2,T3,T4,System.Threading.Tasks.Task&lt;int&gt;&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4&gt;(class System.Func`5&lt;!!T1, !!T2, !!T3, !!T4, class System.Threading.Tasks.Task`1&lt;int32&gt;&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``4(System.Func{``0,``1,``2,``3,System.Threading.Tasks.Task{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4) (action As Func(Of T1, T2, T3, T4, Task(Of Integer))) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, System.Threading.Tasks.Task&lt;int&gt;&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, System::Threading::Tasks::Task&lt;int&gt; ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4&gt; (Func&lt;T1,T2,T3,T4,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4&gt;(class System.Func`5&lt;!!T1, !!T2, !!T3, !!T4, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``4(System.Func{``0,``1,``2,``3,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4) (action As Func(Of T1, T2, T3, T4, Task)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, System.Threading.Tasks.Task&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5&gt; (Action&lt;T1,T2,T3,T4,T5&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5&gt;(class System.Action`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``5(System.Action{``0,``1,``2,``3,``4})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5) (action As Action(Of T1, T2, T3, T4, T5)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Action&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Action&lt;T1, T2, T3, T4, T5&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T1,T2,T3,T4,T5&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5&gt; (Func&lt;T1,T2,T3,T4,T5,int&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5&gt;(class System.Func`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, int32&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``5(System.Func{``0,``1,``2,``3,``4,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5) (action As Func(Of T1, T2, T3, T4, T5, Integer)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, int&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, int&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5&gt; (Func&lt;T1,T2,T3,T4,T5,System.Threading.Tasks.Task&lt;int&gt;&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5&gt;(class System.Func`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, class System.Threading.Tasks.Task`1&lt;int32&gt;&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``5(System.Func{``0,``1,``2,``3,``4,System.Threading.Tasks.Task{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5) (action As Func(Of T1, T2, T3, T4, T5, Task(Of Integer))) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, System.Threading.Tasks.Task&lt;int&gt;&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, System::Threading::Tasks::Task&lt;int&gt; ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5&gt; (Func&lt;T1,T2,T3,T4,T5,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5&gt;(class System.Func`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``5(System.Func{``0,``1,``2,``3,``4,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5) (action As Func(Of T1, T2, T3, T4, T5, Task)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, System.Threading.Tasks.Task&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6&gt; (Action&lt;T1,T2,T3,T4,T5,T6&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6&gt;(class System.Action`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``6(System.Action{``0,``1,``2,``3,``4,``5})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6) (action As Action(Of T1, T2, T3, T4, T5, T6)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Action&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Action&lt;T1, T2, T3, T4, T5, T6&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T1,T2,T3,T4,T5,T6&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6&gt; (Func&lt;T1,T2,T3,T4,T5,T6,int&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6&gt;(class System.Func`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, int32&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``6(System.Func{``0,``1,``2,``3,``4,``5,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6) (action As Func(Of T1, T2, T3, T4, T5, T6, Integer)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, int&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, int&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6&gt; (Func&lt;T1,T2,T3,T4,T5,T6,System.Threading.Tasks.Task&lt;int&gt;&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6&gt;(class System.Func`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, class System.Threading.Tasks.Task`1&lt;int32&gt;&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``6(System.Func{``0,``1,``2,``3,``4,``5,System.Threading.Tasks.Task{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6) (action As Func(Of T1, T2, T3, T4, T5, T6, Task(Of Integer))) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, System.Threading.Tasks.Task&lt;int&gt;&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, System::Threading::Tasks::Task&lt;int&gt; ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6&gt; (Func&lt;T1,T2,T3,T4,T5,T6,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6&gt;(class System.Func`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``6(System.Func{``0,``1,``2,``3,``4,``5,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6) (action As Func(Of T1, T2, T3, T4, T5, T6, Task)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, System.Threading.Tasks.Task&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7&gt; (Action&lt;T1,T2,T3,T4,T5,T6,T7&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7&gt;(class System.Action`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``7(System.Action{``0,``1,``2,``3,``4,``5,``6})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7) (action As Action(Of T1, T2, T3, T4, T5, T6, T7)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Action&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Action&lt;T1, T2, T3, T4, T5, T6, T7&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T1,T2,T3,T4,T5,T6,T7&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,int&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7&gt;(class System.Func`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, int32&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``7(System.Func{``0,``1,``2,``3,``4,``5,``6,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, Integer)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, int&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, int&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,System.Threading.Tasks.Task&lt;int&gt;&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7&gt;(class System.Func`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Threading.Tasks.Task`1&lt;int32&gt;&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``7(System.Func{``0,``1,``2,``3,``4,``5,``6,System.Threading.Tasks.Task{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, Task(Of Integer))) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, System.Threading.Tasks.Task&lt;int&gt;&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, System::Threading::Tasks::Task&lt;int&gt; ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7&gt;(class System.Func`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``7(System.Func{``0,``1,``2,``3,``4,``5,``6,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, Task)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, System.Threading.Tasks.Task&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (Action&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(class System.Action`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``8(System.Action{``0,``1,``2,``3,``4,``5,``6,``7})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8) (action As Action(Of T1, T2, T3, T4, T5, T6, T7, T8)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Action&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,int&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(class System.Func`9&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, int32&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``8(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, Integer)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, int&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, int&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,System.Threading.Tasks.Task&lt;int&gt;&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(class System.Func`9&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, class System.Threading.Tasks.Task`1&lt;int32&gt;&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``8(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,System.Threading.Tasks.Task{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, Task(Of Integer))) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, System.Threading.Tasks.Task&lt;int&gt;&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, System::Threading::Tasks::Task&lt;int&gt; ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(class System.Func`9&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``8(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, Task)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, System.Threading.Tasks.Task&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; (Action&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(class System.Action`9&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``9(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9) (action As Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Action&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,int&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(class System.Func`10&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, int32&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``9(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, Integer)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, int&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, int&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,System.Threading.Tasks.Task&lt;int&gt;&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(class System.Func`10&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, class System.Threading.Tasks.Task`1&lt;int32&gt;&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``9(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Threading.Tasks.Task{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, Task(Of Integer))) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, System.Threading.Tasks.Task&lt;int&gt;&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, System::Threading::Tasks::Task&lt;int&gt; ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(class System.Func`10&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``9(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, Task)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, System.Threading.Tasks.Task&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; (Action&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(class System.Action`10&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``10(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) (action As Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Action&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,int&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(class System.Func`11&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, int32&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``10(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Integer)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, int&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, int&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,System.Threading.Tasks.Task&lt;int&gt;&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(class System.Func`11&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, class System.Threading.Tasks.Task`1&lt;int32&gt;&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``10(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Threading.Tasks.Task{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Task(Of Integer))) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, System.Threading.Tasks.Task&lt;int&gt;&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, System::Threading::Tasks::Task&lt;int&gt; ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(class System.Func`11&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``10(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Task)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, System.Threading.Tasks.Task&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; (Action&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;(class System.Action`11&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``11(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) (action As Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Action&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,int&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;(class System.Func`12&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, int32&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``11(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Integer)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, int&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, int&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,System.Threading.Tasks.Task&lt;int&gt;&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;(class System.Func`12&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, class System.Threading.Tasks.Task`1&lt;int32&gt;&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``11(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Threading.Tasks.Task{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Task(Of Integer))) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, System.Threading.Tasks.Task&lt;int&gt;&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, System::Threading::Tasks::Task&lt;int&gt; ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;(class System.Func`12&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``11(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Task)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, System.Threading.Tasks.Task&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; (Action&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;(class System.Action`12&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``12(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) (action As Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Action&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <typeparam name="T12">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,int&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;(class System.Func`13&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, int32&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``12(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Integer)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, int&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, int&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <typeparam name="T12">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,System.Threading.Tasks.Task&lt;int&gt;&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;(class System.Func`13&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, class System.Threading.Tasks.Task`1&lt;int32&gt;&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``12(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Threading.Tasks.Task{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Task(Of Integer))) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, System.Threading.Tasks.Task&lt;int&gt;&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, System::Threading::Tasks::Task&lt;int&gt; ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <typeparam name="T12">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;(class System.Func`13&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``12(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Task)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, System.Threading.Tasks.Task&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <typeparam name="T12">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; (Action&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;(class System.Action`13&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``13(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) (action As Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Action&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <typeparam name="T12">To be added.</typeparam>
        <typeparam name="T13">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,int&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;(class System.Func`14&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, int32&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``13(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Integer)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, int&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, int&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <typeparam name="T12">To be added.</typeparam>
        <typeparam name="T13">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,System.Threading.Tasks.Task&lt;int&gt;&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;(class System.Func`14&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, class System.Threading.Tasks.Task`1&lt;int32&gt;&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``13(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Threading.Tasks.Task{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Task(Of Integer))) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, System.Threading.Tasks.Task&lt;int&gt;&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, System::Threading::Tasks::Task&lt;int&gt; ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <typeparam name="T12">To be added.</typeparam>
        <typeparam name="T13">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;(class System.Func`14&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``13(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Task)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, System.Threading.Tasks.Task&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <typeparam name="T12">To be added.</typeparam>
        <typeparam name="T13">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; (Action&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;(class System.Action`14&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``14(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) (action As Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Action&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <typeparam name="T12">To be added.</typeparam>
        <typeparam name="T13">To be added.</typeparam>
        <typeparam name="T14">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,int&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;(class System.Func`15&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, int32&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Integer)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, int&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, int&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <typeparam name="T12">To be added.</typeparam>
        <typeparam name="T13">To be added.</typeparam>
        <typeparam name="T14">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,System.Threading.Tasks.Task&lt;int&gt;&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;(class System.Func`15&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Threading.Tasks.Task`1&lt;int32&gt;&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Threading.Tasks.Task{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Task(Of Integer))) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, System.Threading.Tasks.Task&lt;int&gt;&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, System::Threading::Tasks::Task&lt;int&gt; ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <typeparam name="T12">To be added.</typeparam>
        <typeparam name="T13">To be added.</typeparam>
        <typeparam name="T14">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;(class System.Func`15&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Task)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, System.Threading.Tasks.Task&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <typeparam name="T12">To be added.</typeparam>
        <typeparam name="T13">To be added.</typeparam>
        <typeparam name="T14">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; (Action&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;(class System.Action`15&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``15(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) (action As Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Action&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <typeparam name="T12">To be added.</typeparam>
        <typeparam name="T13">To be added.</typeparam>
        <typeparam name="T14">To be added.</typeparam>
        <typeparam name="T15">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,int&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;(class System.Func`16&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, int32&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Integer)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15, int&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, int&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <typeparam name="T12">To be added.</typeparam>
        <typeparam name="T13">To be added.</typeparam>
        <typeparam name="T14">To be added.</typeparam>
        <typeparam name="T15">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,System.Threading.Tasks.Task&lt;int&gt;&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;(class System.Func`16&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, class System.Threading.Tasks.Task`1&lt;int32&gt;&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Threading.Tasks.Task{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Task(Of Integer))) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15, System.Threading.Tasks.Task&lt;int&gt;&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, System::Threading::Tasks::Task&lt;int&gt; ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <typeparam name="T12">To be added.</typeparam>
        <typeparam name="T13">To be added.</typeparam>
        <typeparam name="T14">To be added.</typeparam>
        <typeparam name="T15">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;(class System.Func`16&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Task)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15, System.Threading.Tasks.Task&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <typeparam name="T12">To be added.</typeparam>
        <typeparam name="T13">To be added.</typeparam>
        <typeparam name="T14">To be added.</typeparam>
        <typeparam name="T15">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; (Action&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;(class System.Action`16&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, !!T16&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``16(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) (action As Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Action&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15, 'T16&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <typeparam name="T12">To be added.</typeparam>
        <typeparam name="T13">To be added.</typeparam>
        <typeparam name="T14">To be added.</typeparam>
        <typeparam name="T15">To be added.</typeparam>
        <typeparam name="T16">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,int&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;(class System.Func`17&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, !!T16, int32&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, Integer)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15, 'T16, int&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, int&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <typeparam name="T12">To be added.</typeparam>
        <typeparam name="T13">To be added.</typeparam>
        <typeparam name="T14">To be added.</typeparam>
        <typeparam name="T15">To be added.</typeparam>
        <typeparam name="T16">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,System.Threading.Tasks.Task&lt;int&gt;&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;(class System.Func`17&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, !!T16, class System.Threading.Tasks.Task`1&lt;int32&gt;&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Threading.Tasks.Task{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, Task(Of Integer))) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15, 'T16, System.Threading.Tasks.Task&lt;int&gt;&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, System::Threading::Tasks::Task&lt;int&gt; ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <typeparam name="T12">To be added.</typeparam>
        <typeparam name="T13">To be added.</typeparam>
        <typeparam name="T14">To be added.</typeparam>
        <typeparam name="T15">To be added.</typeparam>
        <typeparam name="T16">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.ICommandHandler Create&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; (Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.ICommandHandler Create&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;(class System.Func`17&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, !!T16, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.NamingConventionBinder.CommandHandler.Create``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) (action As Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, Task)) As ICommandHandler" />
      <MemberSignature Language="F#" Value="static member Create : Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15, 'T16, System.Threading.Tasks.Task&gt; -&gt; System.CommandLine.Invocation.ICommandHandler" Usage="System.CommandLine.NamingConventionBinder.CommandHandler.Create action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16&gt;&#xA; static System::CommandLine::Invocation::ICommandHandler ^ Create(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.NamingConventionBinder</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.ICommandHandler</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <typeparam name="T9">To be added.</typeparam>
        <typeparam name="T10">To be added.</typeparam>
        <typeparam name="T11">To be added.</typeparam>
        <typeparam name="T12">To be added.</typeparam>
        <typeparam name="T13">To be added.</typeparam>
        <typeparam name="T14">To be added.</typeparam>
        <typeparam name="T15">To be added.</typeparam>
        <typeparam name="T16">To be added.</typeparam>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

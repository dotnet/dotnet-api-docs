<Type Name="DistributedContextPropagator" FullName="System.Diagnostics.DistributedContextPropagator">
  <TypeSignature Language="C#" Value="public abstract class DistributedContextPropagator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DistributedContextPropagator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DistributedContextPropagator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DistributedContextPropagator" />
  <TypeSignature Language="F#" Value="type DistributedContextPropagator = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class DistributedContextPropagator abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>An implementation of <see cref="T:System.Diagnostics.DistributedContextPropagator" /> determines if and how distributed context information is encoded and decoded as it traverses the network.
            The encoding can be transported over any network protocol that supports string key-value pairs. For example, when using HTTP, each key-value pair is an HTTP header.
            <see cref="T:System.Diagnostics.DistributedContextPropagator" /> injects values into and extracts values from carriers as string key-value pairs.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DistributedContextPropagator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DistributedContextPropagator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DistributedContextPropagator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes an instance of the <see cref="T:System.Diagnostics.DistributedContextPropagator" /> class. This constructor is protected and only meant to be called from parent classes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultPropagator">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.DistributedContextPropagator CreateDefaultPropagator ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.DistributedContextPropagator CreateDefaultPropagator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DistributedContextPropagator.CreateDefaultPropagator" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefaultPropagator () As DistributedContextPropagator" />
      <MemberSignature Language="F#" Value="static member CreateDefaultPropagator : unit -&gt; System.Diagnostics.DistributedContextPropagator" Usage="System.Diagnostics.DistributedContextPropagator.CreateDefaultPropagator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::DistributedContextPropagator ^ CreateDefaultPropagator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.DistributedContextPropagator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the default propagator object that <see cref="P:System.Diagnostics.DistributedContextPropagator.Current" /> will be initialized with.</summary>
        <returns>An instance of the <see cref="T:System.Diagnostics.DistributedContextPropagator" /> class.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

`CreateDefaultPropagator` creates a propagator instance that can inject and extract the headers with field names "tracestate",
            "traceparent" of the identifiers that are formatted as W3C trace parent, and "Request-Id" of the identifiers that are formatted as a hierarchical identifier.
            The returned propagator can inject the baggage key-value pair list with header name "Correlation-Context", and it can extract the baggage values mapped to header names "Correlation-Context" and "baggage".

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNoOutputPropagator">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.DistributedContextPropagator CreateNoOutputPropagator ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.DistributedContextPropagator CreateNoOutputPropagator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DistributedContextPropagator.CreateNoOutputPropagator" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNoOutputPropagator () As DistributedContextPropagator" />
      <MemberSignature Language="F#" Value="static member CreateNoOutputPropagator : unit -&gt; System.Diagnostics.DistributedContextPropagator" Usage="System.Diagnostics.DistributedContextPropagator.CreateNoOutputPropagator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::DistributedContextPropagator ^ CreateNoOutputPropagator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.DistributedContextPropagator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a propagator that does not transmit any distributed context information in outbound network messages.</summary>
        <returns>An instance of the <see cref="T:System.Diagnostics.DistributedContextPropagator" /> class.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePassThroughPropagator">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.DistributedContextPropagator CreatePassThroughPropagator ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.DistributedContextPropagator CreatePassThroughPropagator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DistributedContextPropagator.CreatePassThroughPropagator" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePassThroughPropagator () As DistributedContextPropagator" />
      <MemberSignature Language="F#" Value="static member CreatePassThroughPropagator : unit -&gt; System.Diagnostics.DistributedContextPropagator" Usage="System.Diagnostics.DistributedContextPropagator.CreatePassThroughPropagator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::DistributedContextPropagator ^ CreatePassThroughPropagator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.DistributedContextPropagator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a propagator that attempts to act transparently, emitting the same data on outbound network requests that was received on the inbound request.
            When encoding the outbound message, this propagator uses information from the request's root Activity, ignoring any intermediate Activities that may have been created while processing the request.</summary>
        <returns>An instance of the <see cref="T:System.Diagnostics.DistributedContextPropagator" /> class.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.DistributedContextPropagator Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.DistributedContextPropagator Current" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DistributedContextPropagator.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As DistributedContextPropagator" />
      <MemberSignature Language="F#" Value="static member Current : System.Diagnostics.DistributedContextPropagator with get, set" Usage="System.Diagnostics.DistributedContextPropagator.Current" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::DistributedContextPropagator ^ Current { System::Diagnostics::DistributedContextPropagator ^ get(); void set(System::Diagnostics::DistributedContextPropagator ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.DistributedContextPropagator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get or set the process-wide propagator object to use as the current selected propagator.</summary>
        <value>The currently selected process-wide propagator object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractBaggage">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string?&gt;&gt;? ExtractBaggage (object? carrier, System.Diagnostics.DistributedContextPropagator.PropagatorGetterCallback? getter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; ExtractBaggage(object carrier, class System.Diagnostics.DistributedContextPropagator/PropagatorGetterCallback getter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DistributedContextPropagator.ExtractBaggage(System.Object,System.Diagnostics.DistributedContextPropagator.PropagatorGetterCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ExtractBaggage (carrier As Object, getter As DistributedContextPropagator.PropagatorGetterCallback) As IEnumerable(Of KeyValuePair(Of String, String))" />
      <MemberSignature Language="F#" Value="abstract member ExtractBaggage : obj * System.Diagnostics.DistributedContextPropagator.PropagatorGetterCallback -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt;" Usage="distributedContextPropagator.ExtractBaggage (carrier, getter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ ExtractBaggage(System::Object ^ carrier, System::Diagnostics::DistributedContextPropagator::PropagatorGetterCallback ^ getter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="carrier" Type="System.Object" />
        <Parameter Name="getter" Type="System.Diagnostics.DistributedContextPropagator+PropagatorGetterCallback" />
      </Parameters>
      <Docs>
        <param name="carrier">The medium from which values will be read.</param>
        <param name="getter">The callback method to invoke to get the propagation baggage list from the carrier.</param>
        <summary>Extracts the baggage key-value pair list from an incoming request represented by the carrier. For example, from the headers of an HTTP request.</summary>
        <returns>Returns the extracted key-value pair list from the carrier.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractTraceIdAndState">
      <MemberSignature Language="C#" Value="public abstract void ExtractTraceIdAndState (object? carrier, System.Diagnostics.DistributedContextPropagator.PropagatorGetterCallback? getter, out string? traceId, out string? traceState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExtractTraceIdAndState(object carrier, class System.Diagnostics.DistributedContextPropagator/PropagatorGetterCallback getter, [out] string&amp; traceId, [out] string&amp; traceState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DistributedContextPropagator.ExtractTraceIdAndState(System.Object,System.Diagnostics.DistributedContextPropagator.PropagatorGetterCallback,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ExtractTraceIdAndState (carrier As Object, getter As DistributedContextPropagator.PropagatorGetterCallback, ByRef traceId As String, ByRef traceState As String)" />
      <MemberSignature Language="F#" Value="abstract member ExtractTraceIdAndState : obj * System.Diagnostics.DistributedContextPropagator.PropagatorGetterCallback * string * string -&gt; unit" Usage="distributedContextPropagator.ExtractTraceIdAndState (carrier, getter, traceId, traceState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ExtractTraceIdAndState(System::Object ^ carrier, System::Diagnostics::DistributedContextPropagator::PropagatorGetterCallback ^ getter, [Runtime::InteropServices::Out] System::String ^ % traceId, [Runtime::InteropServices::Out] System::String ^ % traceState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="carrier" Type="System.Object" />
        <Parameter Name="getter" Type="System.Diagnostics.DistributedContextPropagator+PropagatorGetterCallback" />
        <Parameter Name="traceId" Type="System.String" RefType="out" />
        <Parameter Name="traceState" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="carrier">The medium from which values will be read.</param>
        <param name="getter">The callback method to invoke to get the propagation trace ID and state from the carrier.</param>
        <param name="traceId">When this method returns, contains the trace ID extracted from the carrier.</param>
        <param name="traceState">When this method returns, contains the trace state extracted from the carrier.</param>
        <summary>Extracts the trace ID and trace state from an incoming request represented by the carrier. For example, from the headers of an HTTP request.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fields">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IReadOnlyCollection&lt;string&gt; Fields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;string&gt; Fields" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DistributedContextPropagator.Fields" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Fields As IReadOnlyCollection(Of String)" />
      <MemberSignature Language="F#" Value="member this.Fields : System.Collections.Generic.IReadOnlyCollection&lt;string&gt;" Usage="System.Diagnostics.DistributedContextPropagator.Fields" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IReadOnlyCollection&lt;System::String ^&gt; ^ Fields { System::Collections::Generic::IReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the set of field names this propagator is likely to read or write.</summary>
        <value>The list of fields that will be used by the <code>DistributedContextPropagator</code>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inject">
      <MemberSignature Language="C#" Value="public abstract void Inject (System.Diagnostics.Activity? activity, object? carrier, System.Diagnostics.DistributedContextPropagator.PropagatorSetterCallback? setter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Inject(class System.Diagnostics.Activity activity, object carrier, class System.Diagnostics.DistributedContextPropagator/PropagatorSetterCallback setter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DistributedContextPropagator.Inject(System.Diagnostics.Activity,System.Object,System.Diagnostics.DistributedContextPropagator.PropagatorSetterCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Inject (activity As Activity, carrier As Object, setter As DistributedContextPropagator.PropagatorSetterCallback)" />
      <MemberSignature Language="F#" Value="abstract member Inject : System.Diagnostics.Activity * obj * System.Diagnostics.DistributedContextPropagator.PropagatorSetterCallback -&gt; unit" Usage="distributedContextPropagator.Inject (activity, carrier, setter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Inject(System::Diagnostics::Activity ^ activity, System::Object ^ carrier, System::Diagnostics::DistributedContextPropagator::PropagatorSetterCallback ^ setter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Diagnostics.Activity" />
        <Parameter Name="carrier" Type="System.Object" />
        <Parameter Name="setter" Type="System.Diagnostics.DistributedContextPropagator+PropagatorSetterCallback" />
      </Parameters>
      <Docs>
        <param name="activity">The Activity object has the distributed context to inject to the carrier.</param>
        <param name="carrier">The medium in which the distributed context will be stored.</param>
        <param name="setter">The callback method to invoke to set a named key-value pair on the carrier.</param>
        <summary>Injects the trace values stored in the <see cref="T:System.Diagnostics.Activity" /> object into a carrier. For example, into the headers of an HTTP request.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ActivitySource" FullName="System.Diagnostics.ActivitySource">
  <TypeSignature Language="C#" Value="public sealed class ActivitySource : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ActivitySource extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ActivitySource" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActivitySource&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type ActivitySource = class&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivitySource sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Provides APIs to create and start <see cref="T:System.Diagnostics.Activity" /> objects and to register <see cref="T:System.Diagnostics.ActivityListener" /> objects to listen to the <see cref="T:System.Diagnostics.Activity" /> events.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivitySource (string name, string? version = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, Optional version As String = &quot;&quot;)" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ActivitySource : string * string -&gt; System.Diagnostics.ActivitySource" Usage="new System.Diagnostics.ActivitySource (name, version)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the activity source object.</param>
        <param name="version">The version of the component publishing the tracing info.</param>
        <summary>Constructs an activity source object with the specified <paramref name="name" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddActivityListener">
      <MemberSignature Language="C#" Value="public static void AddActivityListener (System.Diagnostics.ActivityListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddActivityListener(class System.Diagnostics.ActivityListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySource.AddActivityListener(System.Diagnostics.ActivityListener)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddActivityListener (listener As ActivityListener)" />
      <MemberSignature Language="F#" Value="static member AddActivityListener : System.Diagnostics.ActivityListener -&gt; unit" Usage="System.Diagnostics.ActivitySource.AddActivityListener listener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddActivityListener(System::Diagnostics::ActivityListener ^ listener);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="System.Diagnostics.ActivityListener" />
      </Parameters>
      <Docs>
        <param name="listener">The activity listener object to use for listening to the activity events.</param>
        <summary>Adds a listener to the activity starting and stopping events.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateActivity">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Activity? CreateActivity (string name, System.Diagnostics.ActivityKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.Activity CreateActivity(string name, valuetype System.Diagnostics.ActivityKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySource.CreateActivity(System.String,System.Diagnostics.ActivityKind)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateActivity (name As String, kind As ActivityKind) As Activity" />
      <MemberSignature Language="F#" Value="member this.CreateActivity : string * System.Diagnostics.ActivityKind -&gt; System.Diagnostics.Activity" Usage="activitySource.CreateActivity (name, kind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::Activity ^ CreateActivity(System::String ^ name, System::Diagnostics::ActivityKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="net-6.0;net-7.0" />
        <Parameter Name="kind" Type="System.Diagnostics.ActivityKind" Index="1" FrameworkAlternate="net-6.0;net-7.0" />
      </Parameters>
      <Docs>
        <param name="name">The operation name of the Activity</param>
        <param name="kind">The <see cref="T:System.Diagnostics.ActivityKind" /></param>
        <summary>Creates a new <see cref="T:System.Diagnostics.Activity" /> object if there is any listener to the Activity, returns <see langword="null" /> otherwise.</summary>
        <returns>The created <see cref="T:System.Diagnostics.Activity" /> object or <see langword="null" /> if there is no any event listener.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

If the Activity object is created, it will not start automatically. Callers need to call <xref:System.Diagnostics.Activity.Start> to start it.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateActivity">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Activity? CreateActivity (string name, System.Diagnostics.ActivityKind kind, System.Diagnostics.ActivityContext parentContext, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object?&gt;&gt;? tags = default, System.Collections.Generic.IEnumerable&lt;System.Diagnostics.ActivityLink&gt;? links = default, System.Diagnostics.ActivityIdFormat idFormat = System.Diagnostics.ActivityIdFormat.Unknown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.Activity CreateActivity(string name, valuetype System.Diagnostics.ActivityKind kind, valuetype System.Diagnostics.ActivityContext parentContext, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; tags, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Diagnostics.ActivityLink&gt; links, valuetype System.Diagnostics.ActivityIdFormat idFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySource.CreateActivity(System.String,System.Diagnostics.ActivityKind,System.Diagnostics.ActivityContext,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{System.Diagnostics.ActivityLink},System.Diagnostics.ActivityIdFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateActivity (name As String, kind As ActivityKind, parentContext As ActivityContext, Optional tags As IEnumerable(Of KeyValuePair(Of String, Object)) = Nothing, Optional links As IEnumerable(Of ActivityLink) = Nothing, Optional idFormat As ActivityIdFormat = System.Diagnostics.ActivityIdFormat.Unknown) As Activity" />
      <MemberSignature Language="F#" Value="member this.CreateActivity : string * System.Diagnostics.ActivityKind * System.Diagnostics.ActivityContext * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt; * seq&lt;System.Diagnostics.ActivityLink&gt; * System.Diagnostics.ActivityIdFormat -&gt; System.Diagnostics.Activity" Usage="activitySource.CreateActivity (name, kind, parentContext, tags, links, idFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="net-6.0;net-7.0" />
        <Parameter Name="kind" Type="System.Diagnostics.ActivityKind" Index="1" FrameworkAlternate="net-6.0;net-7.0" />
        <Parameter Name="parentContext" Type="System.Diagnostics.ActivityContext" Index="2" FrameworkAlternate="net-6.0;net-7.0" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;" Index="3" FrameworkAlternate="net-6.0;net-7.0" />
        <Parameter Name="links" Type="System.Collections.Generic.IEnumerable&lt;System.Diagnostics.ActivityLink&gt;" Index="4" FrameworkAlternate="net-6.0;net-7.0" />
        <Parameter Name="idFormat" Type="System.Diagnostics.ActivityIdFormat" Index="5" FrameworkAlternate="net-6.0;net-7.0" />
      </Parameters>
      <Docs>
        <param name="name">The operation name of the Activity.</param>
        <param name="kind">The <see cref="T:System.Diagnostics.ActivityKind" /></param>
        <param name="parentContext">The parent <see cref="T:System.Diagnostics.ActivityContext" /> object to initialize the created Activity object with.</param>
        <param name="tags">The optional tags list to initialize the created Activity object with.</param>
        <param name="links">The optional <see cref="T:System.Diagnostics.ActivityLink" /> list to initialize the created Activity object with.</param>
        <param name="idFormat">The default Id format to use.</param>
        <summary>Creates a new <see cref="T:System.Diagnostics.Activity" /> object if there is any listener to the Activity, returns <see langword="null" /> otherwise.
            If the Activity object is created, it will not automatically start. Callers will need to call <see cref="M:System.Diagnostics.Activity.Start" /> to start it.</summary>
        <returns>The created <see cref="T:System.Diagnostics.Activity" /> object or <see langword="null" /> if there is no any listener.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

If the Activity object is created, it will not start automatically. Callers need to call <xref:System.Diagnostics.Activity.Start> to start it.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateActivity">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Activity? CreateActivity (string name, System.Diagnostics.ActivityKind kind, string parentId, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object?&gt;&gt;? tags = default, System.Collections.Generic.IEnumerable&lt;System.Diagnostics.ActivityLink&gt;? links = default, System.Diagnostics.ActivityIdFormat idFormat = System.Diagnostics.ActivityIdFormat.Unknown);" FrameworkAlternate="net-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.Activity CreateActivity(string name, valuetype System.Diagnostics.ActivityKind kind, string parentId, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; tags, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Diagnostics.ActivityLink&gt; links, valuetype System.Diagnostics.ActivityIdFormat idFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySource.CreateActivity(System.String,System.Diagnostics.ActivityKind,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{System.Diagnostics.ActivityLink},System.Diagnostics.ActivityIdFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateActivity (name As String, kind As ActivityKind, parentId As String, Optional tags As IEnumerable(Of KeyValuePair(Of String, Object)) = Nothing, Optional links As IEnumerable(Of ActivityLink) = Nothing, Optional idFormat As ActivityIdFormat = System.Diagnostics.ActivityIdFormat.Unknown) As Activity" />
      <MemberSignature Language="F#" Value="member this.CreateActivity : string * System.Diagnostics.ActivityKind * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt; * seq&lt;System.Diagnostics.ActivityLink&gt; * System.Diagnostics.ActivityIdFormat -&gt; System.Diagnostics.Activity" Usage="activitySource.CreateActivity (name, kind, parentId, tags, links, idFormat)" />
      <MemberSignature Language="C#" Value="public System.Diagnostics.Activity? CreateActivity (string name, System.Diagnostics.ActivityKind kind, string? parentId, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object?&gt;&gt;? tags = default, System.Collections.Generic.IEnumerable&lt;System.Diagnostics.ActivityLink&gt;? links = default, System.Diagnostics.ActivityIdFormat idFormat = System.Diagnostics.ActivityIdFormat.Unknown);" FrameworkAlternate="net-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="net-6.0;net-7.0" />
        <Parameter Name="kind" Type="System.Diagnostics.ActivityKind" Index="1" FrameworkAlternate="net-6.0;net-7.0" />
        <Parameter Name="parentId" Type="System.String" Index="2" FrameworkAlternate="net-6.0;net-7.0" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;" Index="3" FrameworkAlternate="net-6.0;net-7.0" />
        <Parameter Name="links" Type="System.Collections.Generic.IEnumerable&lt;System.Diagnostics.ActivityLink&gt;" Index="4" FrameworkAlternate="net-6.0;net-7.0" />
        <Parameter Name="idFormat" Type="System.Diagnostics.ActivityIdFormat" Index="5" FrameworkAlternate="net-6.0;net-7.0" />
      </Parameters>
      <Docs>
        <param name="name">The operation name of the Activity.</param>
        <param name="kind">The <see cref="T:System.Diagnostics.ActivityKind" /></param>
        <param name="parentId">The parent Id to initialize the created Activity object with.</param>
        <param name="tags">The optional tags list to initialize the created Activity object with.</param>
        <param name="links">The optional <see cref="T:System.Diagnostics.ActivityLink" /> list to initialize the created Activity object with.</param>
        <param name="idFormat">The default Id format to use.</param>
        <summary>Creates a new <see cref="T:System.Diagnostics.Activity" /> object if there is any listener to the Activity, returns <see langword="null" /> otherwise.</summary>
        <returns>The created <see cref="T:System.Diagnostics.Activity" /> object or <see langword="null" /> if there is no any listener.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

If the Activity object is created, it will not start automatically. Callers need to call <xref:System.Diagnostics.Activity.Start> to start it.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySource.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="activitySource.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes the activity source object, removes the current instance from the global list, and empties the listeners list.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasListeners">
      <MemberSignature Language="C#" Value="public bool HasListeners ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasListeners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySource.HasListeners" />
      <MemberSignature Language="VB.NET" Value="Public Function HasListeners () As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasListeners : unit -&gt; bool" Usage="activitySource.HasListeners " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasListeners();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Checks if there are any listeners for this activity source.</summary>
        <returns>
          <see langword="true" /> if there is a listener registered for this activity source; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ActivitySource.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Diagnostics.ActivitySource.Name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the activity source name.</summary>
        <value>A string that represents the activity source name.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartActivity">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Activity? StartActivity (string name, System.Diagnostics.ActivityKind kind = System.Diagnostics.ActivityKind.Internal);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.Activity StartActivity(string name, valuetype System.Diagnostics.ActivityKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySource.StartActivity(System.String,System.Diagnostics.ActivityKind)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartActivity (name As String, Optional kind As ActivityKind = System.Diagnostics.ActivityKind.Internal) As Activity" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="member this.StartActivity : string * System.Diagnostics.ActivityKind -&gt; System.Diagnostics.Activity" Usage="activitySource.StartActivity (name, kind)" />
      <MemberSignature Language="C#" Value="public System.Diagnostics.Activity? StartActivity (string name = &quot;&quot;, System.Diagnostics.ActivityKind kind = System.Diagnostics.ActivityKind.Internal);" FrameworkAlternate="net-6.0;net-7.0" />
      <MemberSignature Language="VB.NET" Value="Public Function StartActivity (Optional name As String = &quot;&quot;, Optional kind As ActivityKind = System.Diagnostics.ActivityKind.Internal) As Activity" FrameworkAlternate="net-6.0;net-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="net-6.0;net-7.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.CallerMemberName]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.CallerMemberName&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="kind" Type="System.Diagnostics.ActivityKind" />
      </Parameters>
      <Docs>
        <param name="name">The operation name of the activity.</param>
        <param name="kind">The activity kind.</param>
        <summary>Creates a new activity if there are active listeners for it, using the specified name and activity kind.</summary>
        <returns>The created activity object, if it had active listeners, or <see langword="null" /> if it has no event listeners.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartActivity">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Activity? StartActivity (System.Diagnostics.ActivityKind kind, System.Diagnostics.ActivityContext parentContext = default, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object?&gt;&gt;? tags = default, System.Collections.Generic.IEnumerable&lt;System.Diagnostics.ActivityLink&gt;? links = default, DateTimeOffset startTime = default, string name = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.Activity StartActivity(valuetype System.Diagnostics.ActivityKind kind, valuetype System.Diagnostics.ActivityContext parentContext, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; tags, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Diagnostics.ActivityLink&gt; links, valuetype System.DateTimeOffset startTime, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySource.StartActivity(System.Diagnostics.ActivityKind,System.Diagnostics.ActivityContext,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{System.Diagnostics.ActivityLink},System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartActivity (kind As ActivityKind, Optional parentContext As ActivityContext = Nothing, Optional tags As IEnumerable(Of KeyValuePair(Of String, Object)) = Nothing, Optional links As IEnumerable(Of ActivityLink) = Nothing, Optional startTime As DateTimeOffset = Nothing, Optional name As String = &quot;&quot;) As Activity" />
      <MemberSignature Language="F#" Value="member this.StartActivity : System.Diagnostics.ActivityKind * System.Diagnostics.ActivityContext * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt; * seq&lt;System.Diagnostics.ActivityLink&gt; * DateTimeOffset * string -&gt; System.Diagnostics.Activity" Usage="activitySource.StartActivity (kind, parentContext, tags, links, startTime, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.Diagnostics.ActivityKind" Index="0" FrameworkAlternate="net-6.0;net-7.0" />
        <Parameter Name="parentContext" Type="System.Diagnostics.ActivityContext" Index="1" FrameworkAlternate="net-6.0;net-7.0" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;" Index="2" FrameworkAlternate="net-6.0;net-7.0" />
        <Parameter Name="links" Type="System.Collections.Generic.IEnumerable&lt;System.Diagnostics.ActivityLink&gt;" Index="3" FrameworkAlternate="net-6.0;net-7.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="4" FrameworkAlternate="net-6.0;net-7.0" />
        <Parameter Name="name" Type="System.String" Index="5" FrameworkAlternate="net-6.0;net-7.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.CallerMemberName]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.CallerMemberName&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="kind">The <see cref="T:System.Diagnostics.ActivityKind" /></param>
        <param name="parentContext">The parent <see cref="T:System.Diagnostics.ActivityContext" /> object to initialize the created Activity object with.</param>
        <param name="tags">The optional tags list to initialize the created Activity object with.</param>
        <param name="links">The optional <see cref="T:System.Diagnostics.ActivityLink" /> list to initialize the created Activity object with.</param>
        <param name="startTime">The optional start timestamp to set on the created Activity object.</param>
        <param name="name">The operation name of the Activity.</param>
        <summary>Creates and starts a new <see cref="T:System.Diagnostics.Activity" /> object if there is any listener to the Activity events, returns <see langword="null" /> otherwise.</summary>
        <returns>The created <see cref="T:System.Diagnostics.Activity" /> object or <see langword="null" /> if there is no any listener.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartActivity">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Activity? StartActivity (string name, System.Diagnostics.ActivityKind kind, System.Diagnostics.ActivityContext parentContext, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object?&gt;&gt;? tags = default, System.Collections.Generic.IEnumerable&lt;System.Diagnostics.ActivityLink&gt;? links = default, DateTimeOffset startTime = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.Activity StartActivity(string name, valuetype System.Diagnostics.ActivityKind kind, valuetype System.Diagnostics.ActivityContext parentContext, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; tags, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Diagnostics.ActivityLink&gt; links, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySource.StartActivity(System.String,System.Diagnostics.ActivityKind,System.Diagnostics.ActivityContext,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{System.Diagnostics.ActivityLink},System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartActivity (name As String, kind As ActivityKind, parentContext As ActivityContext, Optional tags As IEnumerable(Of KeyValuePair(Of String, Object)) = Nothing, Optional links As IEnumerable(Of ActivityLink) = Nothing, Optional startTime As DateTimeOffset = Nothing) As Activity" />
      <MemberSignature Language="F#" Value="member this.StartActivity : string * System.Diagnostics.ActivityKind * System.Diagnostics.ActivityContext * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt; * seq&lt;System.Diagnostics.ActivityLink&gt; * DateTimeOffset -&gt; System.Diagnostics.Activity" Usage="activitySource.StartActivity (name, kind, parentContext, tags, links, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="kind" Type="System.Diagnostics.ActivityKind" />
        <Parameter Name="parentContext" Type="System.Diagnostics.ActivityContext" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;" />
        <Parameter Name="links" Type="System.Collections.Generic.IEnumerable&lt;System.Diagnostics.ActivityLink&gt;" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="name">The operation name of the activity.</param>
        <param name="kind">The activity kind.</param>
        <param name="parentContext">The parent <see cref="T:System.Diagnostics.ActivityContext" /> object to initialize the created activity object with.</param>
        <param name="tags">The optional tags list to initialize the created activity object with.</param>
        <param name="links">The optional <see cref="T:System.Diagnostics.ActivityLink" /> list to initialize the created activity object with.</param>
        <param name="startTime">The optional start timestamp to set on the created activity object.</param>
        <summary>Creates a new activity if there are active listeners for it, using the specified name, activity kind, parent activity context, tags, optional activity link and optional start time.</summary>
        <returns>The created activity object, if it had active listeners, or <see langword="null" /> if it has no event listeners.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartActivity">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Activity? StartActivity (string name, System.Diagnostics.ActivityKind kind, string parentId, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object?&gt;&gt;? tags = default, System.Collections.Generic.IEnumerable&lt;System.Diagnostics.ActivityLink&gt;? links = default, DateTimeOffset startTime = default);" FrameworkAlternate="net-5.0;net-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.Activity StartActivity(string name, valuetype System.Diagnostics.ActivityKind kind, string parentId, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; tags, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Diagnostics.ActivityLink&gt; links, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySource.StartActivity(System.String,System.Diagnostics.ActivityKind,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{System.Diagnostics.ActivityLink},System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartActivity (name As String, kind As ActivityKind, parentId As String, Optional tags As IEnumerable(Of KeyValuePair(Of String, Object)) = Nothing, Optional links As IEnumerable(Of ActivityLink) = Nothing, Optional startTime As DateTimeOffset = Nothing) As Activity" />
      <MemberSignature Language="F#" Value="member this.StartActivity : string * System.Diagnostics.ActivityKind * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt; * seq&lt;System.Diagnostics.ActivityLink&gt; * DateTimeOffset -&gt; System.Diagnostics.Activity" Usage="activitySource.StartActivity (name, kind, parentId, tags, links, startTime)" />
      <MemberSignature Language="C#" Value="public System.Diagnostics.Activity? StartActivity (string name, System.Diagnostics.ActivityKind kind, string? parentId, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object?&gt;&gt;? tags = default, System.Collections.Generic.IEnumerable&lt;System.Diagnostics.ActivityLink&gt;? links = default, DateTimeOffset startTime = default);" FrameworkAlternate="net-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="kind" Type="System.Diagnostics.ActivityKind" />
        <Parameter Name="parentId" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;" />
        <Parameter Name="links" Type="System.Collections.Generic.IEnumerable&lt;System.Diagnostics.ActivityLink&gt;" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="name">The operation name of the activity.</param>
        <param name="kind">The activity kind.</param>
        <param name="parentId">The parent Id to initialize the created activity object with.</param>
        <param name="tags">The optional tags list to initialize the created activity object with.</param>
        <param name="links">The optional <see cref="T:System.Diagnostics.ActivityLink" /> list to initialize the created activity object with.</param>
        <param name="startTime">The optional start timestamp to set on the created activity object.</param>
        <summary>Creates a new activity if there are active listeners for it, using the specified name, activity kind, parent Id, tags, optional activity links and optional start time.</summary>
        <returns>The created activity object, if it had active listeners, or <see langword="null" /> if it has no event listeners.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string? Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ActivitySource.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="F#" Value="member this.Version : string" Usage="System.Diagnostics.ActivitySource.Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the activity source version.</summary>
        <value>A string that represents the activity source version.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

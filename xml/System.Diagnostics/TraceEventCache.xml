<Type Name="TraceEventCache" FullName="System.Diagnostics.TraceEventCache">
  <TypeSignature Language="C#" Value="public class TraceEventCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceEventCache extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceEventCache" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceEventCache" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceEventCache" />
  <TypeSignature Language="F#" Value="type TraceEventCache = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Diagnostics.TraceSource" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides trace event data specific to a thread and a process.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  The <xref:System.Diagnostics.TraceEventCache> class, designed as a performance optimization for trace listener calls, is of interest only to developers creating custom trace listeners.  
  
 The <xref:System.Diagnostics.TraceEventCache> class is used as a parameter in tracing methods to accurately identify the source of a trace event. Examples of methods that use <xref:System.Diagnostics.TraceEventCache> are <xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=nameWithType>. The <xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A> property contains data that can be used to correlate the trace with related traces.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceEventCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceEventCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceEventCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.TraceEventCache" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Callstack">
      <MemberSignature Language="C#" Value="public string Callstack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Callstack" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.Callstack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Callstack As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Callstack { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Callstack : string" Usage="System.Diagnostics.TraceEventCache.Callstack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the call stack for the current thread.</summary>
        <value>A string containing stack trace information. This value can be an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property gets the call stack from the <xref:System.Environment.StackTrace%2A> property of the <xref:System.Environment> class. The property value lists method calls in reverse chronological order. That is, the most recent method call is described first. One line of stack trace information is listed for each method call on the stack. For more information, see <xref:System.Environment.StackTrace%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateTime">
      <MemberSignature Language="C#" Value="public DateTime DateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateTime" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.DateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateTime : DateTime" Usage="System.Diagnostics.TraceEventCache.DateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the date and time at which the event trace occurred.</summary>
        <value>A <see cref="T:System.DateTime" /> structure whose value is a date and time expressed in Coordinated Universal Time (UTC).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The first time the property is accessed in an instance of the <xref:System.Diagnostics.TraceEventCache> class, the current time is returned. Subsequent queries of this property in that instance return that same <xref:System.DateTime> value, allowing it to be used as a timestamp.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalOperationStack">
      <MemberSignature Language="C#" Value="public System.Collections.Stack LogicalOperationStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Stack LogicalOperationStack" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.LogicalOperationStack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalOperationStack As Stack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Stack ^ LogicalOperationStack { System::Collections::Stack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalOperationStack : System.Collections.Stack" Usage="System.Diagnostics.TraceEventCache.LogicalOperationStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Stack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the correlation data, contained in a stack.</summary>
        <value>A <see cref="T:System.Collections.Stack" /> containing correlation data.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The correlation data is stored as an object in the call context with the name "System.Diagnostics.Trace.CorrelationManagerSlot". The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity. The <xref:System.Diagnostics.CorrelationManager> is accessed through the <xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=nameWithType> property. Each call to the <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> method pushes a new logical operation identity onto the stack. Each call to the <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> method pops a logical operation identity from the stack  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public int ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProcessId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessId : int" Usage="System.Diagnostics.TraceEventCache.ProcessId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the unique identifier of the current process.</summary>
        <value>The system-generated unique identifier of the current process.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Until the process terminates, the process identifier uniquely identifies the process throughout the system.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadId">
      <MemberSignature Language="C#" Value="public string ThreadId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreadId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.ThreadId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreadId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreadId : string" Usage="System.Diagnostics.TraceEventCache.ThreadId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unique identifier for the current managed thread.</summary>
        <value>A string that represents a unique integer identifier for this managed thread.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The thread identifier is the value of the <xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=nameWithType> property formatted as a string.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public long Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Timestamp { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Timestamp : int64" Usage="System.Diagnostics.TraceEventCache.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current number of ticks in the timer mechanism.</summary>
        <value>The tick counter value of the underlying timer mechanism.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The get accessor calls the <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=nameWithType> method to get the timestamp. If the <xref:System.Diagnostics.Stopwatch> class uses a high-resolution performance counter, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the current value of that counter. If the <xref:System.Diagnostics.Stopwatch> class uses the system timer, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the <xref:System.DateTime.Ticks%2A> property of <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="HelpBuilder" FullName="System.CommandLine.Help.HelpBuilder">
  <TypeSignature Language="C#" Value="public class HelpBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HelpBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Help.HelpBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class HelpBuilder" />
  <TypeSignature Language="F#" Value="type HelpBuilder = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class HelpBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Formats output to be shown to users to describe how to use a command line tool.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HelpBuilder (System.CommandLine.LocalizationResources localizationResources, int maxWidth = 2147483647);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CommandLine.LocalizationResources localizationResources, int32 maxWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Help.HelpBuilder.#ctor(System.CommandLine.LocalizationResources,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localizationResources As LocalizationResources, Optional maxWidth As Integer = 2147483647)" />
      <MemberSignature Language="F#" Value="new System.CommandLine.Help.HelpBuilder : System.CommandLine.LocalizationResources * int -&gt; System.CommandLine.Help.HelpBuilder" Usage="new System.CommandLine.Help.HelpBuilder (localizationResources, maxWidth)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localizationResources" Type="System.CommandLine.LocalizationResources" />
        <Parameter Name="maxWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="localizationResources">Resources used to localize the help output.</param>
        <param name="maxWidth">The maximum width in characters after which help output is wrapped.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomizeLayout">
      <MemberSignature Language="C#" Value="public void CustomizeLayout (Func&lt;System.CommandLine.Help.HelpContext,System.Collections.Generic.IEnumerable&lt;System.CommandLine.Help.HelpSectionDelegate&gt;&gt; getLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CustomizeLayout(class System.Func`2&lt;class System.CommandLine.Help.HelpContext, class System.Collections.Generic.IEnumerable`1&lt;class System.CommandLine.Help.HelpSectionDelegate&gt;&gt; getLayout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Help.HelpBuilder.CustomizeLayout(System.Func{System.CommandLine.Help.HelpContext,System.Collections.Generic.IEnumerable{System.CommandLine.Help.HelpSectionDelegate}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub CustomizeLayout (getLayout As Func(Of HelpContext, IEnumerable(Of HelpSectionDelegate)))" />
      <MemberSignature Language="F#" Value="member this.CustomizeLayout : Func&lt;System.CommandLine.Help.HelpContext, seq&lt;System.CommandLine.Help.HelpSectionDelegate&gt;&gt; -&gt; unit" Usage="helpBuilder.CustomizeLayout getLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CustomizeLayout(Func&lt;System::CommandLine::Help::HelpContext ^, System::Collections::Generic::IEnumerable&lt;System::CommandLine::Help::HelpSectionDelegate ^&gt; ^&gt; ^ getLayout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getLayout" Type="System.Func&lt;System.CommandLine.Help.HelpContext,System.Collections.Generic.IEnumerable&lt;System.CommandLine.Help.HelpSectionDelegate&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="getLayout">A delegate that returns the sections in the order in which they should be written.</param>
        <summary>
            Customizes the help sections that will be displayed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomizeSymbol">
      <MemberSignature Language="C#" Value="public void CustomizeSymbol (System.CommandLine.Symbol symbol, Func&lt;System.CommandLine.Help.HelpContext,string?&gt;? firstColumnText = default, Func&lt;System.CommandLine.Help.HelpContext,string?&gt;? secondColumnText = default, Func&lt;System.CommandLine.Help.HelpContext,string?&gt;? defaultValue = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CustomizeSymbol(class System.CommandLine.Symbol symbol, class System.Func`2&lt;class System.CommandLine.Help.HelpContext, string&gt; firstColumnText, class System.Func`2&lt;class System.CommandLine.Help.HelpContext, string&gt; secondColumnText, class System.Func`2&lt;class System.CommandLine.Help.HelpContext, string&gt; defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Help.HelpBuilder.CustomizeSymbol(System.CommandLine.Symbol,System.Func{System.CommandLine.Help.HelpContext,System.String},System.Func{System.CommandLine.Help.HelpContext,System.String},System.Func{System.CommandLine.Help.HelpContext,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub CustomizeSymbol (symbol As Symbol, Optional firstColumnText As Func(Of HelpContext, String) = Nothing, Optional secondColumnText As Func(Of HelpContext, String) = Nothing, Optional defaultValue As Func(Of HelpContext, String) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.CustomizeSymbol : System.CommandLine.Symbol * Func&lt;System.CommandLine.Help.HelpContext, string&gt; * Func&lt;System.CommandLine.Help.HelpContext, string&gt; * Func&lt;System.CommandLine.Help.HelpContext, string&gt; -&gt; unit" Usage="helpBuilder.CustomizeSymbol (symbol, firstColumnText, secondColumnText, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="symbol" Type="System.CommandLine.Symbol" />
        <Parameter Name="firstColumnText" Type="System.Func&lt;System.CommandLine.Help.HelpContext,System.String&gt;" />
        <Parameter Name="secondColumnText" Type="System.Func&lt;System.CommandLine.Help.HelpContext,System.String&gt;" />
        <Parameter Name="defaultValue" Type="System.Func&lt;System.CommandLine.Help.HelpContext,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="symbol">The symbol to specify custom help details for.</param>
        <param name="firstColumnText">A delegate to display the first help column (typically name and usage information).</param>
        <param name="secondColumnText">A delegate to display second help column (typically the description).</param>
        <param name="defaultValue">A delegate to display the default value for the symbol.</param>
        <summary>
            Specifies custom help details for a specific symbol.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTwoColumnRow">
      <MemberSignature Language="C#" Value="public System.CommandLine.Help.TwoColumnHelpRow GetTwoColumnRow (System.CommandLine.Symbol symbol, System.CommandLine.Help.HelpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CommandLine.Help.TwoColumnHelpRow GetTwoColumnRow(class System.CommandLine.Symbol symbol, class System.CommandLine.Help.HelpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Help.HelpBuilder.GetTwoColumnRow(System.CommandLine.Symbol,System.CommandLine.Help.HelpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTwoColumnRow (symbol As Symbol, context As HelpContext) As TwoColumnHelpRow" />
      <MemberSignature Language="F#" Value="member this.GetTwoColumnRow : System.CommandLine.Symbol * System.CommandLine.Help.HelpContext -&gt; System.CommandLine.Help.TwoColumnHelpRow" Usage="helpBuilder.GetTwoColumnRow (symbol, context)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CommandLine::Help::TwoColumnHelpRow ^ GetTwoColumnRow(System::CommandLine::Symbol ^ symbol, System::CommandLine::Help::HelpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Help.TwoColumnHelpRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="symbol" Type="System.CommandLine.Symbol" />
        <Parameter Name="context" Type="System.CommandLine.Help.HelpContext" />
      </Parameters>
      <Docs>
        <param name="symbol">The symbol to get a help item for.</param>
        <param name="context">The help context.</param>
        <summary>
            Gets a help item for the specified symbol.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalizationResources">
      <MemberSignature Language="C#" Value="public System.CommandLine.LocalizationResources LocalizationResources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CommandLine.LocalizationResources LocalizationResources" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Help.HelpBuilder.LocalizationResources" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalizationResources As LocalizationResources" />
      <MemberSignature Language="F#" Value="member this.LocalizationResources : System.CommandLine.LocalizationResources" Usage="System.CommandLine.Help.HelpBuilder.LocalizationResources" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CommandLine::LocalizationResources ^ LocalizationResources { System::CommandLine::LocalizationResources ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.LocalizationResources</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Provides localizable strings for help and error messages.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxWidth">
      <MemberSignature Language="C#" Value="public int MaxWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxWidth" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Help.HelpBuilder.MaxWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxWidth As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxWidth : int" Usage="System.CommandLine.Help.HelpBuilder.MaxWidth" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxWidth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The maximum width for which to format help output.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (System.CommandLine.Help.HelpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.CommandLine.Help.HelpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Help.HelpBuilder.Write(System.CommandLine.Help.HelpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (context As HelpContext)" />
      <MemberSignature Language="F#" Value="abstract member Write : System.CommandLine.Help.HelpContext -&gt; unit&#xA;override this.Write : System.CommandLine.Help.HelpContext -&gt; unit" Usage="helpBuilder.Write context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::CommandLine::Help::HelpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.CommandLine.Help.HelpContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
            Writes help output for the specified command.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteColumns">
      <MemberSignature Language="C#" Value="public void WriteColumns (System.Collections.Generic.IReadOnlyList&lt;System.CommandLine.Help.TwoColumnHelpRow&gt; items, System.CommandLine.Help.HelpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteColumns(class System.Collections.Generic.IReadOnlyList`1&lt;class System.CommandLine.Help.TwoColumnHelpRow&gt; items, class System.CommandLine.Help.HelpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Help.HelpBuilder.WriteColumns(System.Collections.Generic.IReadOnlyList{System.CommandLine.Help.TwoColumnHelpRow},System.CommandLine.Help.HelpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteColumns (items As IReadOnlyList(Of TwoColumnHelpRow), context As HelpContext)" />
      <MemberSignature Language="F#" Value="member this.WriteColumns : System.Collections.Generic.IReadOnlyList&lt;System.CommandLine.Help.TwoColumnHelpRow&gt; * System.CommandLine.Help.HelpContext -&gt; unit" Usage="helpBuilder.WriteColumns (items, context)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteColumns(System::Collections::Generic::IReadOnlyList&lt;System::CommandLine::Help::TwoColumnHelpRow ^&gt; ^ items, System::CommandLine::Help::HelpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IReadOnlyList&lt;System.CommandLine.Help.TwoColumnHelpRow&gt;" />
        <Parameter Name="context" Type="System.CommandLine.Help.HelpContext" />
      </Parameters>
      <Docs>
        <param name="items">The help items to write out in columns.</param>
        <param name="context">The help context.</param>
        <summary>
            Writes the specified help rows, aligning output in columns.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="IHybridCacheSerializer&lt;T&gt;" FullName="Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializer&lt;T&gt;">
  <TypeSignature Language="C#" Value="public interface IHybridCacheSerializer&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IHybridCacheSerializer`1&lt;T&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHybridCacheSerializer(Of T)" />
  <TypeSignature Language="F#" Value="type IHybridCacheSerializer&lt;'T&gt; = interface" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IHybridCacheSerializer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Caching.Hybrid</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Caching.Abstractions</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Attributes>
        <Attribute FrameworkAlternate="net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">The type being serialized/deserialized.</typeparam>
    <summary>
            Provides per-type serialization and deserialization support for <see cref="T:Microsoft.Extensions.Caching.Hybrid.HybridCache" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public T Deserialize (System.Buffers.ReadOnlySequence&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T Deserialize(valuetype System.Buffers.ReadOnlySequence`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializer`1.Deserialize(System.Buffers.ReadOnlySequence{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (source As ReadOnlySequence(Of Byte)) As T" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Buffers.ReadOnlySequence&lt;byte&gt; -&gt; 'T" Usage="iHybridCacheSerializer.Deserialize source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Deserialize(System::Buffers::ReadOnlySequence&lt;System::Byte&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Hybrid</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-9.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Buffers.ReadOnlySequence&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>
            Deserializes a <typeparamref name="T" /> value from the provided <paramref name="source" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (T value, System.Buffers.IBufferWriter&lt;byte&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(!T value, class System.Buffers.IBufferWriter`1&lt;unsigned int8&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializer`1.Serialize(`0,System.Buffers.IBufferWriter{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (value As T, target As IBufferWriter(Of Byte))" />
      <MemberSignature Language="F#" Value="abstract member Serialize : 'T * System.Buffers.IBufferWriter&lt;byte&gt; -&gt; unit" Usage="iHybridCacheSerializer.Serialize (value, target)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(T value, System::Buffers::IBufferWriter&lt;System::Byte&gt; ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Hybrid</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
        <Parameter Name="target" Type="System.Buffers.IBufferWriter&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="target">To be added.</param>
        <summary>
            Serializes <paramref name="value" /> to the provided <paramref name="target" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="HybridCacheBuilderExtensions" FullName="Microsoft.Extensions.Caching.Hybrid.HybridCacheBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class HybridCacheBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HybridCacheBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Caching.Hybrid.HybridCacheBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module HybridCacheBuilderExtensions" />
  <TypeSignature Language="F#" Value="type HybridCacheBuilderExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class HybridCacheBuilderExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Caching.Hybrid</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="WithSerializer&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder WithSerializer&lt;T&gt; (this Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder builder, Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializer&lt;T&gt; serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder WithSerializer&lt;T&gt;(class Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder builder, class Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializer`1&lt;!!T&gt; serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Hybrid.HybridCacheBuilderExtensions.WithSerializer``1(Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder,Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithSerializer(Of T) (builder As IHybridCacheBuilder, serializer As IHybridCacheSerializer(Of T)) As IHybridCacheBuilder" />
      <MemberSignature Language="F#" Value="static member WithSerializer : Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder * Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializer&lt;'T&gt; -&gt; Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder" Usage="Microsoft.Extensions.Caching.Hybrid.HybridCacheBuilderExtensions.WithSerializer (builder, serializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Caching::Hybrid::IHybridCacheBuilder ^ WithSerializer(Microsoft::Extensions::Caching::Hybrid::IHybridCacheBuilder ^ builder, Microsoft::Extensions::Caching::Hybrid::IHybridCacheSerializer&lt;T&gt; ^ serializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Hybrid</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute FrameworkAlternate="net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder" RefType="this" />
        <Parameter Name="serializer" Type="Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="builder">To be added.</param>
        <param name="serializer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSerializer&lt;T,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder WithSerializer&lt;T,TImplementation&gt; (this Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder builder) where TImplementation : class, Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializer&lt;T&gt;;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder WithSerializer&lt;T, class (class Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializer`1&lt;!!T&gt;) TImplementation&gt;(class Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Hybrid.HybridCacheBuilderExtensions.WithSerializer``2(Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithSerializer(Of T, TImplementation) (builder As IHybridCacheBuilder) As IHybridCacheBuilder" />
      <MemberSignature Language="F#" Value="static member WithSerializer : Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder -&gt; Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder (requires 'Implementation : null and 'Implementation :&gt; Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializer&lt;'T&gt;)" Usage="Microsoft.Extensions.Caching.Hybrid.HybridCacheBuilderExtensions.WithSerializer builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TImplementation&gt;&#xA; where TImplementation : class, Microsoft::Extensions::Caching::Hybrid::IHybridCacheSerializer&lt;T&gt;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Caching::Hybrid::IHybridCacheBuilder ^ WithSerializer(Microsoft::Extensions::Caching::Hybrid::IHybridCacheBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Hybrid</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute FrameworkAlternate="net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Attributes>
            <Attribute FrameworkAlternate="net-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializer&lt;T&gt;</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <typeparam name="TImplementation">To be added.</typeparam>
        <param name="builder">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSerializerFactory">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder WithSerializerFactory (this Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder builder, Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializerFactory factory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder WithSerializerFactory(class Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder builder, class Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializerFactory factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Hybrid.HybridCacheBuilderExtensions.WithSerializerFactory(Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder,Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializerFactory)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithSerializerFactory (builder As IHybridCacheBuilder, factory As IHybridCacheSerializerFactory) As IHybridCacheBuilder" />
      <MemberSignature Language="F#" Value="static member WithSerializerFactory : Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder * Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializerFactory -&gt; Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder" Usage="Microsoft.Extensions.Caching.Hybrid.HybridCacheBuilderExtensions.WithSerializerFactory (builder, factory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Caching::Hybrid::IHybridCacheBuilder ^ WithSerializerFactory(Microsoft::Extensions::Caching::Hybrid::IHybridCacheBuilder ^ builder, Microsoft::Extensions::Caching::Hybrid::IHybridCacheSerializerFactory ^ factory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Hybrid</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder" RefType="this" />
        <Parameter Name="factory" Type="Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializerFactory" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="factory">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSerializerFactory&lt;TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder WithSerializerFactory&lt;TImplementation&gt; (this Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder builder) where TImplementation : class, Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializerFactory;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder WithSerializerFactory&lt;class (class Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializerFactory) TImplementation&gt;(class Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Hybrid.HybridCacheBuilderExtensions.WithSerializerFactory``1(Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithSerializerFactory(Of TImplementation As {Class, IHybridCacheSerializerFactory}) (builder As IHybridCacheBuilder) As IHybridCacheBuilder" />
      <MemberSignature Language="F#" Value="static member WithSerializerFactory : Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder -&gt; Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder (requires 'Implementation : null and 'Implementation :&gt; Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializerFactory)" Usage="Microsoft.Extensions.Caching.Hybrid.HybridCacheBuilderExtensions.WithSerializerFactory builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TImplementation&gt;&#xA; where TImplementation : class, Microsoft::Extensions::Caching::Hybrid::IHybridCacheSerializerFactory[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Caching::Hybrid::IHybridCacheBuilder ^ WithSerializerFactory(Microsoft::Extensions::Caching::Hybrid::IHybridCacheBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Hybrid</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TImplementation">
          <Attributes>
            <Attribute FrameworkAlternate="net-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializerFactory</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TImplementation">To be added.</typeparam>
        <param name="builder">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

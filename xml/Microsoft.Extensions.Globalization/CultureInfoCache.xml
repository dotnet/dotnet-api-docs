<Type Name="CultureInfoCache" FullName="Microsoft.Extensions.Globalization.CultureInfoCache">
  <TypeSignature Language="C#" Value="public static class CultureInfoCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CultureInfoCache extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Globalization.CultureInfoCache" />
  <TypeSignature Language="VB.NET" Value="Public Class CultureInfoCache" />
  <TypeSignature Language="C++ CLI" Value="public ref class CultureInfoCache abstract sealed" />
  <TypeSignature Language="F#" Value="type CultureInfoCache = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Globalization.CultureInfoCache</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-plat-ext-1.1">
      <AttributeName>System.Obsolete("This type is obsolete and will be removed in a future version.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides read-only cached instances of <see cref="T:System.Globalization.CultureInfo" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (string name, System.Collections.Generic.IList&lt;System.Globalization.CultureInfo&gt; supportedCultures);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(string name, class System.Collections.Generic.IList`1&lt;class System.Globalization.CultureInfo&gt; supportedCultures) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Globalization.CultureInfoCache.GetCultureInfo(System.String,System.Collections.Generic.IList{System.Globalization.CultureInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (name As String, supportedCultures As IList(Of CultureInfo)) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(System::String ^ name, System::Collections::Generic::IList&lt;System::Globalization::CultureInfo ^&gt; ^ supportedCultures);" />
      <MemberSignature Language="F#" Value="static member GetCultureInfo : string * System.Collections.Generic.IList&lt;System.Globalization.CultureInfo&gt; -&gt; System.Globalization.CultureInfo" Usage="Microsoft.Extensions.Globalization.CultureInfoCache.GetCultureInfo (name, supportedCultures)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Globalization.CultureInfoCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="supportedCultures" Type="System.Collections.Generic.IList&lt;System.Globalization.CultureInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The culture name.</param>
        <param name="supportedCultures">The cultures supported by the application.</param>
        <summary>Gets a read-only cached <see cref="T:System.Globalization.CultureInfo" /> for the specified name. Only names that exist in
            <paramref name="supportedCultures" /> will be used.</summary>
        <returns>
            A read-only cached <see cref="T:System.Globalization.CultureInfo" /> or <see langword="null" /> if a match wasn't found in
            <paramref name="supportedCultures" />.
          .</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

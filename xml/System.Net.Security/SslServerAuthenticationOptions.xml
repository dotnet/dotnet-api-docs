<Type Name="SslServerAuthenticationOptions" FullName="System.Net.Security.SslServerAuthenticationOptions">
  <TypeSignature Language="C#" Value="public class SslServerAuthenticationOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SslServerAuthenticationOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.SslServerAuthenticationOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class SslServerAuthenticationOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class SslServerAuthenticationOptions" />
  <TypeSignature Language="F#" Value="type SslServerAuthenticationOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Net.Security" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>This struct represents a server authentication property bag for the <see cref="T:System.Net.Security.SslStream" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property bag is used as argument for <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.SslStream.AuthenticateAsServerAsync%2A>.
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslServerAuthenticationOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslServerAuthenticationOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslServerAuthenticationOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Security.SslServerAuthenticationOptions" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowRenegotiation">
      <MemberSignature Language="C#" Value="public bool AllowRenegotiation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRenegotiation" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslServerAuthenticationOptions.AllowRenegotiation" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowRenegotiation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowRenegotiation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowRenegotiation : bool with get, set" Usage="System.Net.Security.SslServerAuthenticationOptions.AllowRenegotiation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the <see cref="T:System.Net.Security.SslStream" /> should allow SSL renegotiation.</summary>
        <value>
          <see langword="true" /> to indicate that the <see cref="T:System.Net.Security.SslStream" /> allow SSL renegotiation; otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationProtocols">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Net.Security.SslApplicationProtocol&gt; ApplicationProtocols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;valuetype System.Net.Security.SslApplicationProtocol&gt; ApplicationProtocols" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslServerAuthenticationOptions.ApplicationProtocols" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationProtocols As List(Of SslApplicationProtocol)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::Net::Security::SslApplicationProtocol&gt; ^ ApplicationProtocols { System::Collections::Generic::List&lt;System::Net::Security::SslApplicationProtocol&gt; ^ get(); void set(System::Collections::Generic::List&lt;System::Net::Security::SslApplicationProtocol&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationProtocols : System.Collections.Generic.List&lt;System.Net.Security.SslApplicationProtocol&gt; with get, set" Usage="System.Net.Security.SslServerAuthenticationOptions.ApplicationProtocols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Net.Security.SslApplicationProtocol&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a list of ALPN protocols.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateRevocationCheckMode">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509RevocationMode CertificateRevocationCheckMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.X509Certificates.X509RevocationMode CertificateRevocationCheckMode" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslServerAuthenticationOptions.CertificateRevocationCheckMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateRevocationCheckMode As X509RevocationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509RevocationMode CertificateRevocationCheckMode { System::Security::Cryptography::X509Certificates::X509RevocationMode get(); void set(System::Security::Cryptography::X509Certificates::X509RevocationMode value); };" />
      <MemberSignature Language="F#" Value="member this.CertificateRevocationCheckMode : System.Security.Cryptography.X509Certificates.X509RevocationMode with get, set" Usage="System.Net.Security.SslServerAuthenticationOptions.CertificateRevocationCheckMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509RevocationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the certificate revocation mode for certificate validation.</summary>
        <value>One of the values in <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" />: <see langword="NoCheck" />, <see langword="Online" />, or <see langword="Offline" />. The default is <see langword="Online" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When using certificates, the system validates that the client certificate is not revoked, by checking that the client certificate is not in the revoked certificate list. This check can be performed either by checking online or by checking against a cached revocation list. Revocation checking can be turned off by setting this property to <xref:System.Security.Cryptography.X509Certificates.X509RevocationMode.NoCheck>.  
  
 For more information, see [Working with Certificates](/dotnet/framework/wcf/feature-details/working-with-certificates).  
    
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          The value contains an invalid enumeration value.</exception>
      </Docs>
    </Member>
    <Member MemberName="CipherSuitesPolicy">
      <MemberSignature Language="C#" Value="public System.Net.Security.CipherSuitesPolicy CipherSuitesPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Security.CipherSuitesPolicy CipherSuitesPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslServerAuthenticationOptions.CipherSuitesPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property CipherSuitesPolicy As CipherSuitesPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::CipherSuitesPolicy ^ CipherSuitesPolicy { System::Net::Security::CipherSuitesPolicy ^ get(); void set(System::Net::Security::CipherSuitesPolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CipherSuitesPolicy : System.Net.Security.CipherSuitesPolicy with get, set" Usage="System.Net.Security.SslServerAuthenticationOptions.CipherSuitesPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.CipherSuitesPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies the cipher suites allowed for TLS. When set to <see langword="null" />, the operating system default is used. Use extreme caution when changing this setting.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateRequired">
      <MemberSignature Language="C#" Value="public bool ClientCertificateRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ClientCertificateRequired" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslServerAuthenticationOptions.ClientCertificateRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificateRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ClientCertificateRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificateRequired : bool with get, set" Usage="System.Net.Security.SslServerAuthenticationOptions.ClientCertificateRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnabledSslProtocols">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.SslProtocols EnabledSslProtocols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.SslProtocols EnabledSslProtocols" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslServerAuthenticationOptions.EnabledSslProtocols" />
      <MemberSignature Language="VB.NET" Value="Public Property EnabledSslProtocols As SslProtocols" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::SslProtocols EnabledSslProtocols { System::Security::Authentication::SslProtocols get(); void set(System::Security::Authentication::SslProtocols value); };" />
      <MemberSignature Language="F#" Value="member this.EnabledSslProtocols : System.Security.Authentication.SslProtocols with get, set" Usage="System.Net.Security.SslServerAuthenticationOptions.EnabledSslProtocols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.SslProtocols</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents protocols used for authentication.</summary>
        <value>The default value is <see cref="F:System.Security.Authentication.SslProtocols.None" />, which is the recommended value. See <see cref="T:System.Security.Authentication.SslProtocols" /> for more details.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionPolicy">
      <MemberSignature Language="C#" Value="public System.Net.Security.EncryptionPolicy EncryptionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.EncryptionPolicy EncryptionPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslServerAuthenticationOptions.EncryptionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionPolicy As EncryptionPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::EncryptionPolicy EncryptionPolicy { System::Net::Security::EncryptionPolicy get(); void set(System::Net::Security::EncryptionPolicy value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionPolicy : System.Net.Security.EncryptionPolicy with get, set" Usage="System.Net.Security.SslServerAuthenticationOptions.EncryptionPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.EncryptionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Net.Security.EncryptionPolicy" />.</summary>
        <value>The default value is <see cref="F:System.Net.Security.EncryptionPolicy.RequireEncryption" /></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          The value contains an invalid enumeration value.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoteCertificateValidationCallback">
      <MemberSignature Language="C#" Value="public System.Net.Security.RemoteCertificateValidationCallback RemoteCertificateValidationCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Security.RemoteCertificateValidationCallback RemoteCertificateValidationCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslServerAuthenticationOptions.RemoteCertificateValidationCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property RemoteCertificateValidationCallback As RemoteCertificateValidationCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::RemoteCertificateValidationCallback ^ RemoteCertificateValidationCallback { System::Net::Security::RemoteCertificateValidationCallback ^ get(); void set(System::Net::Security::RemoteCertificateValidationCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RemoteCertificateValidationCallback : System.Net.Security.RemoteCertificateValidationCallback with get, set" Usage="System.Net.Security.SslServerAuthenticationOptions.RemoteCertificateValidationCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.RemoteCertificateValidationCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for custom validating the certificate supplied by the remote party.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate ServerCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate ServerCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate ^ ServerCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); void set(System::Security::Cryptography::X509Certificates::X509Certificate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServerCertificate : System.Security.Cryptography.X509Certificates.X509Certificate with get, set" Usage="System.Net.Security.SslServerAuthenticationOptions.ServerCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the server certificate.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerCertificateSelectionCallback">
      <MemberSignature Language="C#" Value="public System.Net.Security.ServerCertificateSelectionCallback ServerCertificateSelectionCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Security.ServerCertificateSelectionCallback ServerCertificateSelectionCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificateSelectionCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerCertificateSelectionCallback As ServerCertificateSelectionCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ServerCertificateSelectionCallback ^ ServerCertificateSelectionCallback { System::Net::Security::ServerCertificateSelectionCallback ^ get(); void set(System::Net::Security::ServerCertificateSelectionCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServerCertificateSelectionCallback : System.Net.Security.ServerCertificateSelectionCallback with get, set" Usage="System.Net.Security.SslServerAuthenticationOptions.ServerCertificateSelectionCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.ServerCertificateSelectionCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Net.Security.ServerCertificateSelectionCallback" /> delegate responsible for the server certificate selection.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks         
        During the server connection establishment, the server first uses <xref:System.Net.Security.SslServerAuthenticationOptions.ServerCertificateSelectionCallback> callback. If the delegate is not provided server uses  <xref:System.Net.Security.LocalCertificateSelectionCallback> provided as argument of <xref:System.Net.Security.SslStream.%23ctor%2a?displayProperty=nameWithType> (for the .NET Framework compatibility). If none/neither of those callback are provided, the server falls back to <xref:System.Net.Security.SslServerAuthenticationOptions.ServerCertificate>.
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

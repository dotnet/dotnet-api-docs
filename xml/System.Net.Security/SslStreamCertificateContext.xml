<Type Name="SslStreamCertificateContext" FullName="System.Net.Security.SslStreamCertificateContext">
  <TypeSignature Language="C#" Value="public sealed class SslStreamCertificateContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SslStreamCertificateContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.SslStreamCertificateContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SslStreamCertificateContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SslStreamCertificateContext sealed" />
  <TypeSignature Language="F#" Value="type SslStreamCertificateContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a set of certificates used for building a certificate chain.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.Security.SslStreamCertificateContext Create (System.Security.Cryptography.X509Certificates.X509Certificate2 target, System.Security.Cryptography.X509Certificates.X509Certificate2Collection? additionalCertificates, bool offline = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Security.SslStreamCertificateContext Create(class System.Security.Cryptography.X509Certificates.X509Certificate2 target, class System.Security.Cryptography.X509Certificates.X509Certificate2Collection additionalCertificates, bool offline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStreamCertificateContext.Create(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (target As X509Certificate2, additionalCertificates As X509Certificate2Collection, Optional offline As Boolean = false) As SslStreamCertificateContext" />
      <MemberSignature Language="F#" Value="static member Create : System.Security.Cryptography.X509Certificates.X509Certificate2 * System.Security.Cryptography.X509Certificates.X509Certificate2Collection * bool -&gt; System.Net.Security.SslStreamCertificateContext" Usage="System.Net.Security.SslStreamCertificateContext.Create (target, additionalCertificates, offline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.SslStreamCertificateContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="additionalCertificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />
        <Parameter Name="offline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">The server certificate.</param>
        <param name="additionalCertificates">The certificates to chain.</param>
        <param name="offline">
          <see langword="true" /> to indicate that the missing certificates can be downloaded; otherwise, <see langword="false" />.</param>
        <summary>Attempts to build the certificate chain from the provided certificates.</summary>
        <returns>The certificate context with the newly created certificate chain.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="target" /> doesn't have an associated private key.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

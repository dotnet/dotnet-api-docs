<Type Name="SslStreamCertificateContext" FullName="System.Net.Security.SslStreamCertificateContext">
  <TypeSignature Language="C#" Value="public sealed class SslStreamCertificateContext" FrameworkAlternate="net-5.0;net-6.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SslStreamCertificateContext extends System.Object" FrameworkAlternate="net-5.0;net-6.0" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.SslStreamCertificateContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SslStreamCertificateContext" FrameworkAlternate="net-5.0;net-6.0" />
  <TypeSignature Language="F#" Value="type SslStreamCertificateContext = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class SslStreamCertificateContext sealed" FrameworkAlternate="net-5.0;net-6.0" />
  <TypeSignature Language="C#" Value="public class SslStreamCertificateContext" FrameworkAlternate="net-7.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SslStreamCertificateContext extends System.Object" FrameworkAlternate="net-7.0" />
  <TypeSignature Language="VB.NET" Value="Public Class SslStreamCertificateContext" FrameworkAlternate="net-7.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class SslStreamCertificateContext" FrameworkAlternate="net-7.0" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a set of certificates used for building a certificate chain.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[ 

## Remarks

The certificates are normalized. If a certificate is missing in the constructed X509Chain, SslStream will try to resolve them either by searching for the certificate in the certificate stores or by fetching them over the network, if allowed.

The <xref:System.Net.Security.SslStreamCertificateContext> can be used across multiple streams to save chain construction and improve performance.

]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.Security.SslStreamCertificateContext Create (System.Security.Cryptography.X509Certificates.X509Certificate2 target, System.Security.Cryptography.X509Certificates.X509Certificate2Collection? additionalCertificates, bool offline = false);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Security.SslStreamCertificateContext Create(class System.Security.Cryptography.X509Certificates.X509Certificate2 target, class System.Security.Cryptography.X509Certificates.X509Certificate2Collection additionalCertificates, bool offline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStreamCertificateContext.Create(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (target As X509Certificate2, additionalCertificates As X509Certificate2Collection, Optional offline As Boolean = false) As SslStreamCertificateContext" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="static member Create : System.Security.Cryptography.X509Certificates.X509Certificate2 * System.Security.Cryptography.X509Certificates.X509Certificate2Collection * bool -&gt; System.Net.Security.SslStreamCertificateContext" Usage="System.Net.Security.SslStreamCertificateContext.Create (target, additionalCertificates, offline)" />
      <MemberSignature Language="C#" Value="public static System.Net.Security.SslStreamCertificateContext Create (System.Security.Cryptography.X509Certificates.X509Certificate2 target, System.Security.Cryptography.X509Certificates.X509Certificate2Collection? additionalCertificates, bool offline);" FrameworkAlternate="net-6.0;net-7.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (target As X509Certificate2, additionalCertificates As X509Certificate2Collection, offline As Boolean) As SslStreamCertificateContext" FrameworkAlternate="net-6.0;net-7.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Security::SslStreamCertificateContext ^ Create(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ target, System::Security::Cryptography::X509Certificates::X509Certificate2Collection ^ additionalCertificates, bool offline);" FrameworkAlternate="net-6.0;net-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-6.0;net-7.0">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.SslStreamCertificateContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="additionalCertificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />
        <Parameter Name="offline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">The server certificate.</param>
        <param name="additionalCertificates">Supplementary certificates used to build the certificate chain.</param>
        <param name="offline">
          <see langword="false" /> to indicate that the missing certificates can be downloaded from the network; <see langword="true" /> to indicate that only available X509Certificate stores should be searched for missing certificates.</param>
        <summary>Attempts to build the certificate chain from the provided certificates.</summary>
        <returns>The certificate context with the newly created certificate chain.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks

The provided certificates should not be disposed during the lifetime of the <xref:System.Net.Security.SslStreamCertificateContext>.

> [!IMPORTANT]
> The target certificate must include a private key.

]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="target" /> doesn't have an associated private key.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.Security.SslStreamCertificateContext Create (System.Security.Cryptography.X509Certificates.X509Certificate2 target, System.Security.Cryptography.X509Certificates.X509Certificate2Collection? additionalCertificates, bool offline = false, System.Net.Security.SslCertificateTrust? trust = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Security.SslStreamCertificateContext Create(class System.Security.Cryptography.X509Certificates.X509Certificate2 target, class System.Security.Cryptography.X509Certificates.X509Certificate2Collection additionalCertificates, bool offline, class System.Net.Security.SslCertificateTrust trust) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStreamCertificateContext.Create(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean,System.Net.Security.SslCertificateTrust)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (target As X509Certificate2, additionalCertificates As X509Certificate2Collection, Optional offline As Boolean = false, Optional trust As SslCertificateTrust = Nothing) As SslStreamCertificateContext" />
      <MemberSignature Language="F#" Value="static member Create : System.Security.Cryptography.X509Certificates.X509Certificate2 * System.Security.Cryptography.X509Certificates.X509Certificate2Collection * bool * System.Net.Security.SslCertificateTrust -&gt; System.Net.Security.SslStreamCertificateContext" Usage="System.Net.Security.SslStreamCertificateContext.Create (target, additionalCertificates, offline, trust)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.SslStreamCertificateContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" Index="0" FrameworkAlternate="net-6.0;net-7.0" />
        <Parameter Name="additionalCertificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" Index="1" FrameworkAlternate="net-6.0;net-7.0" />
        <Parameter Name="offline" Type="System.Boolean" Index="2" FrameworkAlternate="net-6.0;net-7.0" />
        <Parameter Name="trust" Type="System.Net.Security.SslCertificateTrust" Index="3" FrameworkAlternate="net-6.0;net-7.0" />
      </Parameters>
      <Docs>
        <param name="target">The server certificate.</param>
        <param name="additionalCertificates">Supplementary certificates used to build the certificate chain.</param>
        <param name="offline">
          <see langword="false" /> to indicate that the missing certificates can be downloaded from the network; <see langword="true" /> to indicate that only available X509Certificate stores should be searched for missing certificates.</param>
        <param name="trust">An optional trust policy, to replace the default system trust.</param>
        <summary>Attempts to build the certificate chain from the provided certificates.</summary>
        <returns>The certificate context with the newly created certificate chain.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks

The provided certificates should not be disposed during the lifetime of the <xref:System.Net.Security.SslStreamCertificateContext>.

> [!IMPORTANT]
> The target certificate must include a private key.

]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="target" /> doesn't have an associated private key.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

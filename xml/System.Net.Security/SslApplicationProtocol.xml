<Type Name="SslApplicationProtocol" FullName="System.Net.Security.SslApplicationProtocol">
  <TypeSignature Language="C#" Value="public struct SslApplicationProtocol : IEquatable&lt;System.Net.Security.SslApplicationProtocol&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SslApplicationProtocol extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Net.Security.SslApplicationProtocol&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.SslApplicationProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Structure SslApplicationProtocol&#xA;Implements IEquatable(Of SslApplicationProtocol)" />
  <TypeSignature Language="C++ CLI" Value="public value class SslApplicationProtocol : IEquatable&lt;System::Net::Security::SslApplicationProtocol&gt;" />
  <TypeSignature Language="F#" Value="type SslApplicationProtocol = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Net.Security" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Net.Security.SslApplicationProtocol&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a value of TLS Application protocol.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
   
This type contains static fields with predefined <xref:System.Net.Security.SslApplicationProtocol> values for HTTP versions.

During the handshake, the client sends a list of available ALPN protocols and the server chooses the best match from that list. 

For a complete list of supported protocols, see [TLS Application-Layer Protocol Negotiation (ALPN) Protocol IDs](https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids).
    
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslApplicationProtocol (byte[] protocol);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] protocol) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslApplicationProtocol.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (protocol As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslApplicationProtocol(cli::array &lt;System::Byte&gt; ^ protocol);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslApplicationProtocol : byte[] -&gt; System.Net.Security.SslApplicationProtocol" Usage="new System.Net.Security.SslApplicationProtocol protocol" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="protocol" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="protocol">TLS Application protocol.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Security.SslApplicationProtocol" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslApplicationProtocol (string protocol);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string protocol) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslApplicationProtocol.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (protocol As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslApplicationProtocol(System::String ^ protocol);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslApplicationProtocol : string -&gt; System.Net.Security.SslApplicationProtocol" Usage="new System.Net.Security.SslApplicationProtocol protocol" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="protocol" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="protocol">TLS Application protocol.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Security.SslApplicationProtocol" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Net.Security.SslApplicationProtocol other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Net.Security.SslApplicationProtocol other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslApplicationProtocol.Equals(System.Net.Security.SslApplicationProtocol)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As SslApplicationProtocol) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Net::Security::SslApplicationProtocol other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Net.Security.SslApplicationProtocol -&gt; bool" Usage="sslApplicationProtocol.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Net.Security.SslApplicationProtocol" />
      </Parameters>
      <Docs>
        <param name="other">The <see cref="T:System.Net.Security.SslApplicationProtocol" /> instance to test for equality.</param>
        <summary>Compares a <see cref="T:System.Net.Security.SslApplicationProtocol" /> to the specified <see cref="T:System.Net.Security.SslApplicationProtocol" /> instance.</summary>
        <returns>
          <see langword="true" /> if the <see cref="T:System.Net.Security.SslApplicationProtocol" /> instance provided has matching data; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslApplicationProtocol.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="sslApplicationProtocol.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to test for equality.</param>
        <summary>Compares the <see cref="T:System.Net.Security.SslApplicationProtocol" /> to the specified object.</summary>
        <returns>
          <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Net.Security.SslApplicationProtocol" /> instance, and the <see cref="T:System.Net.Security.SslApplicationProtocol" /> instances have matching data; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslApplicationProtocol.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="sslApplicationProtocol.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code for the <see cref="T:System.Net.Security.SslApplicationProtocol" /> instance.</summary>
        <returns>A 32-bit signed integer hash code used to compare instances of this type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Http11">
      <MemberSignature Language="C#" Value="public static readonly System.Net.Security.SslApplicationProtocol Http11;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Net.Security.SslApplicationProtocol Http11" />
      <MemberSignature Language="DocId" Value="F:System.Net.Security.SslApplicationProtocol.Http11" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Http11 As SslApplicationProtocol " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Net::Security::SslApplicationProtocol Http11;" />
      <MemberSignature Language="F#" Value=" staticval mutable Http11 : System.Net.Security.SslApplicationProtocol" Usage="System.Net.Security.SslApplicationProtocol.Http11" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.SslApplicationProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Net.Security.SslApplicationProtocol" /> representing HTTP/1.1 TLS application protocol.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Http2">
      <MemberSignature Language="C#" Value="public static readonly System.Net.Security.SslApplicationProtocol Http2;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Net.Security.SslApplicationProtocol Http2" />
      <MemberSignature Language="DocId" Value="F:System.Net.Security.SslApplicationProtocol.Http2" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Http2 As SslApplicationProtocol " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Net::Security::SslApplicationProtocol Http2;" />
      <MemberSignature Language="F#" Value=" staticval mutable Http2 : System.Net.Security.SslApplicationProtocol" Usage="System.Net.Security.SslApplicationProtocol.Http2" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.SslApplicationProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Net.Security.SslApplicationProtocol" /> representing HTTP/2 TLS application protocol.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Http3">
      <MemberSignature Language="C#" Value="public static readonly System.Net.Security.SslApplicationProtocol Http3;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Net.Security.SslApplicationProtocol Http3" />
      <MemberSignature Language="DocId" Value="F:System.Net.Security.SslApplicationProtocol.Http3" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Http3 As SslApplicationProtocol " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Net::Security::SslApplicationProtocol Http3;" />
      <MemberSignature Language="F#" Value=" staticval mutable Http3 : System.Net.Security.SslApplicationProtocol" Usage="System.Net.Security.SslApplicationProtocol.Http3" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.SslApplicationProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Net.Security.SslApplicationProtocol" /> representing HTTP/3 TLS application protocol.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Net.Security.SslApplicationProtocol left, System.Net.Security.SslApplicationProtocol right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Net.Security.SslApplicationProtocol left, valuetype System.Net.Security.SslApplicationProtocol right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslApplicationProtocol.op_Equality(System.Net.Security.SslApplicationProtocol,System.Net.Security.SslApplicationProtocol)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As SslApplicationProtocol, right As SslApplicationProtocol) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Net::Security::SslApplicationProtocol left, System::Net::Security::SslApplicationProtocol right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Net.Security.SslApplicationProtocol * System.Net.Security.SslApplicationProtocol -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Net.Security.SslApplicationProtocol" />
        <Parameter Name="right" Type="System.Net.Security.SslApplicationProtocol" />
      </Parameters>
      <Docs>
        <param name="left">The left <see cref="T:System.Net.Security.SslApplicationProtocol" /> to an equality operator.</param>
        <param name="right">The right <see cref="T:System.Net.Security.SslApplicationProtocol" /> to an equality operator.</param>
        <summary>The equality operator for comparing two <see cref="T:System.Net.Security.SslApplicationProtocol" /> objects.</summary>
        <returns>
          <see langword="true" /> if the specified <paramref name="left" /> and <paramref name="right" /> parameters are equal; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Net.Security.SslApplicationProtocol left, System.Net.Security.SslApplicationProtocol right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Net.Security.SslApplicationProtocol left, valuetype System.Net.Security.SslApplicationProtocol right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslApplicationProtocol.op_Inequality(System.Net.Security.SslApplicationProtocol,System.Net.Security.SslApplicationProtocol)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As SslApplicationProtocol, right As SslApplicationProtocol) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Net::Security::SslApplicationProtocol left, System::Net::Security::SslApplicationProtocol right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Net.Security.SslApplicationProtocol * System.Net.Security.SslApplicationProtocol -&gt; bool" Usage="System.Net.Security.SslApplicationProtocol.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Net.Security.SslApplicationProtocol" />
        <Parameter Name="right" Type="System.Net.Security.SslApplicationProtocol" />
      </Parameters>
      <Docs>
        <param name="left">The left <see cref="T:System.Net.Security.SslApplicationProtocol" /> to an inequality operator.</param>
        <param name="right">The right  <see cref="T:System.Net.Security.SslApplicationProtocol" /> to an inequality operator.</param>
        <summary>The inequality operator for comparing two <see cref="T:System.Net.Security.SslApplicationProtocol" /> objects.</summary>
        <returns>
          <see langword="true" /> if the specified <paramref name="left" /> and <paramref name="right" /> parameters are inequal; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protocol">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;byte&gt; Protocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; Protocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslApplicationProtocol.Protocol" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Protocol As ReadOnlyMemory(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlyMemory&lt;System::Byte&gt; Protocol { ReadOnlyMemory&lt;System::Byte&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Protocol : ReadOnlyMemory&lt;byte&gt;" Usage="System.Net.Security.SslApplicationProtocol.Protocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a current TLS application protocol represented by this <see cref="T:System.Net.Security.SslApplicationProtocol" />.</summary>
        <value>
          The read-only byte memory representing a TLS application protocol.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslApplicationProtocol.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="sslApplicationProtocol.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Overrides the <see cref="M:System.Object.ToString" /> method.</summary>
        <returns>Returns a string representation of this <see cref="T:System.Net.Security.SslApplicationProtocol" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks  

If the <xref:System.Net.Security.SslApplicationProtocol.Protocol?displayProperty=nameWithType> contains valid UTF-8 bytes, `ToString` returns the text representation of the value; otherwise, the hex representation.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

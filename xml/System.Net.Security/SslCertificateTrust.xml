<Type Name="SslCertificateTrust" FullName="System.Net.Security.SslCertificateTrust">
  <TypeSignature Language="C#" Value="public sealed class SslCertificateTrust" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SslCertificateTrust extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.SslCertificateTrust" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SslCertificateTrust" />
  <TypeSignature Language="F#" Value="type SslCertificateTrust = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class SslCertificateTrust sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a trust policy for use with SSL/TLS connections.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateForX509Collection">
      <MemberSignature Language="C#" Value="public static System.Net.Security.SslCertificateTrust CreateForX509Collection (System.Security.Cryptography.X509Certificates.X509Certificate2Collection trustList, bool sendTrustInHandshake = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Security.SslCertificateTrust CreateForX509Collection(class System.Security.Cryptography.X509Certificates.X509Certificate2Collection trustList, bool sendTrustInHandshake) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslCertificateTrust.CreateForX509Collection(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateForX509Collection (trustList As X509Certificate2Collection, Optional sendTrustInHandshake As Boolean = false) As SslCertificateTrust" />
      <MemberSignature Language="F#" Value="static member CreateForX509Collection : System.Security.Cryptography.X509Certificates.X509Certificate2Collection * bool -&gt; System.Net.Security.SslCertificateTrust" Usage="System.Net.Security.SslCertificateTrust.CreateForX509Collection (trustList, sendTrustInHandshake)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-6.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.UnsupportedOSPlatform("windows")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.UnsupportedOSPlatform("windows")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.SslCertificateTrust</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trustList" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />
        <Parameter Name="sendTrustInHandshake" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="trustList">The collection containing the trusted certificates.</param>
        <param name="sendTrustInHandshake">
          <see langword="true" /> for the server to send a list of trusted certificate authorities during the TLS handshake; <see langword="false" /> not to send the list.</param>
        <summary>Creates a new <see cref="T:System.Net.Security.SslCertificateTrust" />.</summary>
        <returns>Represents a trust policy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

If the `sendTrustInHandshake` argument is `true`, the client can use the list of trusted certificate authorities from the server to select an appropriate client certificate. Sending trusted issuers list is not supported for `SslCertificateTrust` instances created using the `SslCertificaetTrust.CreateForX509Collection` in .NET 6.
 
Since .NET 7, the sending trusted issuers list is supported on Linux and OSX platforms.

> [!WARNING]
> The list of trusted CAs increases the size of the handshake message. It could also be viewed as an information leak about the system's configuration. For these reasons, we recommend setting `sendTrustInHandshake` to `false`.

]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <paramref name="sendTrustInHandshake" /> is <see langword="true" /> and the current platform does not support sending trusted issuers list in handshake.
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateForX509Store">
      <MemberSignature Language="C#" Value="public static System.Net.Security.SslCertificateTrust CreateForX509Store (System.Security.Cryptography.X509Certificates.X509Store store, bool sendTrustInHandshake = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Security.SslCertificateTrust CreateForX509Store(class System.Security.Cryptography.X509Certificates.X509Store store, bool sendTrustInHandshake) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslCertificateTrust.CreateForX509Store(System.Security.Cryptography.X509Certificates.X509Store,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateForX509Store (store As X509Store, Optional sendTrustInHandshake As Boolean = false) As SslCertificateTrust" />
      <MemberSignature Language="F#" Value="static member CreateForX509Store : System.Security.Cryptography.X509Certificates.X509Store * bool -&gt; System.Net.Security.SslCertificateTrust" Usage="System.Net.Security.SslCertificateTrust.CreateForX509Store (store, sendTrustInHandshake)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.SslCertificateTrust</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.Security.Cryptography.X509Certificates.X509Store" />
        <Parameter Name="sendTrustInHandshake" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="store">The store containing the trusted certificates.</param>
        <param name="sendTrustInHandshake">
          <see langword="true" /> for the server to send a list of trusted certificate authorities during the TLS handshake; <see langword="false" /> not to send the list.</param>
        <summary>Creates a new <see cref="T:System.Net.Security.SslCertificateTrust" />.</summary>
        <returns>Represents a trust policy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

If the `sendTrustInHandshake` argument is `true`, the client can use the list of trusted certificate authorities from the server to select an appropriate client certificate. In .NET 6, the list is only sent on Windows, and it depends on the "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\SendTrustedIssuerList" registry setting being set to 1. Since .NET 7, the list is sent on Linux and OSX platforms as well.

> [!WARNING]
> The list of trusted CAs increases the size of the handshake message. It could also be viewed as an information leak about the system's configuration. For these reasons, we recommend setting `sendTrustInHandshake` to `false`.

]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <paramref name="sendTrustInHandshake" /> is <see langword="true" /> and the current platform does not support sending trusted issuers list in handshake, or (on Windows) the <paramref name="store" />'s location is not <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine" />.
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>

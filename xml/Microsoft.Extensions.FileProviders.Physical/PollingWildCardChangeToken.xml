<Type Name="PollingWildCardChangeToken" FullName="Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken">
  <TypeSignature Language="C#" Value="public class PollingWildCardChangeToken : Microsoft.Extensions.Primitives.IChangeToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PollingWildCardChangeToken extends System.Object implements class Microsoft.Extensions.Primitives.IChangeToken" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken" />
  <TypeSignature Language="VB.NET" Value="Public Class PollingWildCardChangeToken&#xA;Implements IChangeToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class PollingWildCardChangeToken : Microsoft::Extensions::Primitives::IChangeToken" />
  <TypeSignature Language="F#" Value="type PollingWildCardChangeToken = class&#xA;    interface IChangeToken" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Primitives.IChangeToken</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A polling based <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> for wildcard patterns.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PollingWildCardChangeToken (string root, string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string root, string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (root As String, pattern As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PollingWildCardChangeToken(System::String ^ root, System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken : string * string -&gt; Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken" Usage="new Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken (root, pattern)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="root" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="root">The root of the file system.</param>
        <param name="pattern">The pattern to watch.</param>
        <summary>Initializes a new instance of <see cref="T:Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChangeCallbacks">
      <MemberSignature Language="C#" Value="public bool ActiveChangeCallbacks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ActiveChangeCallbacks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken.ActiveChangeCallbacks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChangeCallbacks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ActiveChangeCallbacks { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveChangeCallbacks : bool" Usage="Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken.ActiveChangeCallbacks" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="dotnet-plat-ext-1.1;dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-3.1">P:Microsoft.Extensions.Primitives.IChangeToken.ActiveChangeCallbacks</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetLastWriteUtc">
      <MemberSignature Language="C#" Value="protected virtual DateTime GetLastWriteUtc (string path);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.DateTime GetLastWriteUtc(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken.GetLastWriteUtc(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetLastWriteUtc (path As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual DateTime GetLastWriteUtc(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member GetLastWriteUtc : string -&gt; DateTime&#xA;override this.GetLastWriteUtc : string -&gt; DateTime" Usage="pollingWildCardChangeToken.GetLastWriteUtc path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The root relative path.</param>
        <summary>Gets the last write time of the file at the specified <paramref name="path" />.</summary>
        <returns>The <see cref="T:System.DateTime" /> that the file was last modified.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChanged">
      <MemberSignature Language="C#" Value="public bool HasChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanged" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken.HasChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanged { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanged : bool" Usage="Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken.HasChanged" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Extensions.Primitives.IChangeToken.RegisterChangeCallback">
      <MemberSignature Language="C#" Value="IDisposable IChangeToken.RegisterChangeCallback (Action&lt;object&gt; callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.IDisposable Microsoft.Extensions.Primitives.IChangeToken.RegisterChangeCallback(class System.Action`1&lt;object&gt; callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken.Microsoft#Extensions#Primitives#IChangeToken#RegisterChangeCallback(System.Action{System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function RegisterChangeCallback (callback As Action(Of Object), state As Object) As IDisposable Implements IChangeToken.RegisterChangeCallback" />
      <MemberSignature Language="C++ CLI" Value=" virtual IDisposable ^ Microsoft.Extensions.Primitives.IChangeToken.RegisterChangeCallback(Action&lt;System::Object ^&gt; ^ callback, System::Object ^ state) = Microsoft::Extensions::Primitives::IChangeToken::RegisterChangeCallback;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Extensions.Primitives.IChangeToken.RegisterChangeCallback : Action&lt;obj&gt; * obj -&gt; IDisposable&#xA;override this.Microsoft.Extensions.Primitives.IChangeToken.RegisterChangeCallback : Action&lt;obj&gt; * obj -&gt; IDisposable" Usage="pollingWildCardChangeToken.Microsoft.Extensions.Primitives.IChangeToken.RegisterChangeCallback (callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Primitives.IChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

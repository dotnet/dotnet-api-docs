<Type Name="PhysicalFilesWatcher" FullName="Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher">
  <TypeSignature Language="C#" Value="public class PhysicalFilesWatcher : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PhysicalFilesWatcher extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class PhysicalFilesWatcher&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PhysicalFilesWatcher : IDisposable" />
  <TypeSignature Language="F#" Value="type PhysicalFilesWatcher = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>A file watcher that watches a physical filesystem for changes.</para>
      <para>Triggers events on <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> when files are created, change, renamed, or deleted.</para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PhysicalFilesWatcher (string root, System.IO.FileSystemWatcher fileSystemWatcher, bool pollForChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string root, class System.IO.FileSystemWatcher fileSystemWatcher, bool pollForChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.#ctor(System.String,System.IO.FileSystemWatcher,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (root As String, fileSystemWatcher As FileSystemWatcher, pollForChanges As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PhysicalFilesWatcher(System::String ^ root, System::IO::FileSystemWatcher ^ fileSystemWatcher, bool pollForChanges);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher : string * System.IO.FileSystemWatcher * bool -&gt; Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher" Usage="new Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher (root, fileSystemWatcher, pollForChanges)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="root" Type="System.String" />
        <Parameter Name="fileSystemWatcher" Type="System.IO.FileSystemWatcher" />
        <Parameter Name="pollForChanges" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="root">Root directory for the watcher</param>
        <param name="fileSystemWatcher">The wrapped watcher that is watching <paramref name="root" /></param>
        <param name="pollForChanges">
            True when the watcher should use polling to trigger instances of
            <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> created by <see cref="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.CreateFileChangeToken(System.String)" /></param>
        <summary>Initializes an instance of <see cref="T:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher" /> that watches files in <paramref name="root" />.
            Wraps an instance of <see cref="T:System.IO.FileSystemWatcher" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PhysicalFilesWatcher (string root, System.IO.FileSystemWatcher fileSystemWatcher, bool pollForChanges, Microsoft.Extensions.FileProviders.Physical.ExclusionFilters filters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string root, class System.IO.FileSystemWatcher fileSystemWatcher, bool pollForChanges, valuetype Microsoft.Extensions.FileProviders.Physical.ExclusionFilters filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.#ctor(System.String,System.IO.FileSystemWatcher,System.Boolean,Microsoft.Extensions.FileProviders.Physical.ExclusionFilters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (root As String, fileSystemWatcher As FileSystemWatcher, pollForChanges As Boolean, filters As ExclusionFilters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PhysicalFilesWatcher(System::String ^ root, System::IO::FileSystemWatcher ^ fileSystemWatcher, bool pollForChanges, Microsoft::Extensions::FileProviders::Physical::ExclusionFilters filters);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher : string * System.IO.FileSystemWatcher * bool * Microsoft.Extensions.FileProviders.Physical.ExclusionFilters -&gt; Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher" Usage="new Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher (root, fileSystemWatcher, pollForChanges, filters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="root" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="fileSystemWatcher" Type="System.IO.FileSystemWatcher" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="pollForChanges" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="filters" Type="Microsoft.Extensions.FileProviders.Physical.ExclusionFilters" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      </Parameters>
      <Docs>
        <param name="root">Root directory for the watcher</param>
        <param name="fileSystemWatcher">The wrapped watcher that is watching <paramref name="root" /></param>
        <param name="pollForChanges">
            True when the watcher should use polling to trigger instances of
            <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> created by <see cref="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.CreateFileChangeToken(System.String)" /></param>
        <param name="filters">Specifies which files or directories are excluded. Notifications of changes to are not raised to these.</param>
        <summary>Initializes an instance of <see cref="T:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher" /> that watches files in <paramref name="root" />.
            Wraps an instance of <see cref="T:System.IO.FileSystemWatcher" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFileChangeToken">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.IChangeToken CreateFileChangeToken (string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.Primitives.IChangeToken CreateFileChangeToken(string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.CreateFileChangeToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFileChangeToken (filter As String) As IChangeToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Primitives::IChangeToken ^ CreateFileChangeToken(System::String ^ filter);" />
      <MemberSignature Language="F#" Value="member this.CreateFileChangeToken : string -&gt; Microsoft.Extensions.Primitives.IChangeToken" Usage="physicalFilesWatcher.CreateFileChangeToken filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.IChangeToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filter">A globbing pattern for files and directories to watch</param>
        <summary>
          <para>Creates an instance of <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> for all files and directories that match the
                <paramref name="filter" /></para>
          <para>Globbing patterns are relative to the root directory given in the constructor
                <seealso cref="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.#ctor(System.String,System.IO.FileSystemWatcher,System.Boolean)" />. Globbing patterns
                are interpreted by <seealso cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher" />.</para>
        </summary>
        <returns>A change token for all files that match the filter</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="filter" /> is null</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="physicalFilesWatcher.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes the provider. Change tokens may not trigger after the provider is disposed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="physicalFilesWatcher.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> is invoked from <see cref="M:System.IDisposable.Dispose" />.</param>
        <summary>Disposes the provider.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~PhysicalFilesWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!PhysicalFilesWatcher ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="physicalFilesWatcher.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Destructor for <see cref="T:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

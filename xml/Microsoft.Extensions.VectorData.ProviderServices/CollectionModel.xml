<Type Name="CollectionModel" FullName="Microsoft.Extensions.VectorData.ProviderServices.CollectionModel">
  <TypeSignature Language="C#" Value="public sealed class CollectionModel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CollectionModel extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.VectorData.ProviderServices.CollectionModel" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CollectionModel" />
  <TypeSignature Language="F#" Value="type CollectionModel = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class CollectionModel sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("MEVD9001")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("MEVD9001")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A model representing a record in a vector store collection.
            This is an internal support type meant for use by connectors only, and not for use by applications.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateRecord&lt;TRecord&gt;">
      <MemberSignature Language="C#" Value="public TRecord CreateRecord&lt;TRecord&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TRecord CreateRecord&lt;TRecord&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.VectorData.ProviderServices.CollectionModel.CreateRecord``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRecord(Of TRecord) () As TRecord" />
      <MemberSignature Language="F#" Value="member this.CreateRecord : unit -&gt; 'Record" Usage="collectionModel.CreateRecord " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRecord&gt;&#xA; TRecord CreateRecord();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TRecord</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRecord">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TRecord">To be added.</typeparam>
        <summary>
            Instantiates a new record of the specified type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.VectorData.ProviderServices.DataPropertyModel&gt; DataProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Extensions.VectorData.ProviderServices.DataPropertyModel&gt; DataProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.ProviderServices.CollectionModel.DataProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataProperties As IReadOnlyList(Of DataPropertyModel)" />
      <MemberSignature Language="F#" Value="member this.DataProperties : System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.VectorData.ProviderServices.DataPropertyModel&gt;" Usage="Microsoft.Extensions.VectorData.ProviderServices.CollectionModel.DataProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::Extensions::VectorData::ProviderServices::DataPropertyModel ^&gt; ^ DataProperties { System::Collections::Generic::IReadOnlyList&lt;Microsoft::Extensions::VectorData::ProviderServices::DataPropertyModel ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.VectorData.ProviderServices.DataPropertyModel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The data properties of the record.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmbeddingGenerationRequired">
      <MemberSignature Language="C#" Value="public bool EmbeddingGenerationRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EmbeddingGenerationRequired" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.ProviderServices.CollectionModel.EmbeddingGenerationRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmbeddingGenerationRequired As Boolean" />
      <MemberSignature Language="F#" Value="member this.EmbeddingGenerationRequired : bool" Usage="Microsoft.Extensions.VectorData.ProviderServices.CollectionModel.EmbeddingGenerationRequired" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EmbeddingGenerationRequired { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether any of the vector properties in the model require embedding generation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataOrKeyProperty&lt;TRecord&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.VectorData.ProviderServices.PropertyModel GetDataOrKeyProperty&lt;TRecord&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TRecord,object?&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.VectorData.ProviderServices.PropertyModel GetDataOrKeyProperty&lt;TRecord&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TRecord, object&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.VectorData.ProviderServices.CollectionModel.GetDataOrKeyProperty``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataOrKeyProperty(Of TRecord) (expression As Expression(Of Func(Of TRecord, Object))) As PropertyModel" />
      <MemberSignature Language="F#" Value="member this.GetDataOrKeyProperty : System.Linq.Expressions.Expression&lt;Func&lt;'Record, obj&gt;&gt; -&gt; Microsoft.Extensions.VectorData.ProviderServices.PropertyModel" Usage="collectionModel.GetDataOrKeyProperty expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRecord&gt;&#xA; Microsoft::Extensions::VectorData::ProviderServices::PropertyModel ^ GetDataOrKeyProperty(System::Linq::Expressions::Expression&lt;Func&lt;TRecord, System::Object ^&gt; ^&gt; ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.VectorData.ProviderServices.PropertyModel</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRecord">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TRecord,System.Object&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 1, 1, 2 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 1, 1, 2 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TRecord">To be added.</typeparam>
        <param name="expression">The property selector.</param>
        <summary>
            Get the data or key property selected by provided expression.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Thrown if the provided property name is not a valid data or key property name.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFullTextDataPropertyOrSingle&lt;TRecord&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.VectorData.ProviderServices.DataPropertyModel GetFullTextDataPropertyOrSingle&lt;TRecord&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TRecord,object?&gt;&gt;? expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.VectorData.ProviderServices.DataPropertyModel GetFullTextDataPropertyOrSingle&lt;TRecord&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TRecord, object&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.VectorData.ProviderServices.CollectionModel.GetFullTextDataPropertyOrSingle``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFullTextDataPropertyOrSingle(Of TRecord) (expression As Expression(Of Func(Of TRecord, Object))) As DataPropertyModel" />
      <MemberSignature Language="F#" Value="member this.GetFullTextDataPropertyOrSingle : System.Linq.Expressions.Expression&lt;Func&lt;'Record, obj&gt;&gt; -&gt; Microsoft.Extensions.VectorData.ProviderServices.DataPropertyModel" Usage="collectionModel.GetFullTextDataPropertyOrSingle expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRecord&gt;&#xA; Microsoft::Extensions::VectorData::ProviderServices::DataPropertyModel ^ GetFullTextDataPropertyOrSingle(System::Linq::Expressions::Expression&lt;Func&lt;TRecord, System::Object ^&gt; ^&gt; ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.VectorData.ProviderServices.DataPropertyModel</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRecord">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TRecord,System.Object&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1, 2 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1, 2 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TRecord">To be added.</typeparam>
        <param name="expression">The full text search property selector.</param>
        <summary>
            Get the text data property, that has full text search indexing enabled, with the provided name if a name is provided, and fall back
            to a text data property in the schema if not. If no name is provided and there is more than one text data property with
            full text search indexing enabled, an exception will be thrown.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Thrown if the provided property name is not a valid text data property name.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetVectorPropertyOrSingle&lt;TRecord&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.VectorData.ProviderServices.VectorPropertyModel GetVectorPropertyOrSingle&lt;TRecord&gt; (Microsoft.Extensions.VectorData.VectorSearchOptions&lt;TRecord&gt; searchOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.VectorData.ProviderServices.VectorPropertyModel GetVectorPropertyOrSingle&lt;TRecord&gt;(class Microsoft.Extensions.VectorData.VectorSearchOptions`1&lt;!!TRecord&gt; searchOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.VectorData.ProviderServices.CollectionModel.GetVectorPropertyOrSingle``1(Microsoft.Extensions.VectorData.VectorSearchOptions{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVectorPropertyOrSingle(Of TRecord) (searchOptions As VectorSearchOptions(Of TRecord)) As VectorPropertyModel" />
      <MemberSignature Language="F#" Value="member this.GetVectorPropertyOrSingle : Microsoft.Extensions.VectorData.VectorSearchOptions&lt;'Record&gt; -&gt; Microsoft.Extensions.VectorData.ProviderServices.VectorPropertyModel" Usage="collectionModel.GetVectorPropertyOrSingle searchOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRecord&gt;&#xA; Microsoft::Extensions::VectorData::ProviderServices::VectorPropertyModel ^ GetVectorPropertyOrSingle(Microsoft::Extensions::VectorData::VectorSearchOptions&lt;TRecord&gt; ^ searchOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.VectorData.ProviderServices.VectorPropertyModel</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRecord">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="searchOptions" Type="Microsoft.Extensions.VectorData.VectorSearchOptions&lt;TRecord&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRecord">To be added.</typeparam>
        <param name="searchOptions">The search options.</param>
        <summary>
            Get the vector property with the provided name if a name is provided, and fall back
            to a vector property in the schema if not. If no name is provided and there is more
            than one vector property, an exception will be thrown.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Thrown if the provided property name is not a valid vector property name.</exception>
      </Docs>
    </Member>
    <Member MemberName="KeyProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.VectorData.ProviderServices.KeyPropertyModel&gt; KeyProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Extensions.VectorData.ProviderServices.KeyPropertyModel&gt; KeyProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.ProviderServices.CollectionModel.KeyProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyProperties As IReadOnlyList(Of KeyPropertyModel)" />
      <MemberSignature Language="F#" Value="member this.KeyProperties : System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.VectorData.ProviderServices.KeyPropertyModel&gt;" Usage="Microsoft.Extensions.VectorData.ProviderServices.CollectionModel.KeyProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::Extensions::VectorData::ProviderServices::KeyPropertyModel ^&gt; ^ KeyProperties { System::Collections::Generic::IReadOnlyList&lt;Microsoft::Extensions::VectorData::ProviderServices::KeyPropertyModel ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.VectorData.ProviderServices.KeyPropertyModel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The key properties of the record.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.VectorData.ProviderServices.KeyPropertyModel KeyProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.VectorData.ProviderServices.KeyPropertyModel KeyProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.ProviderServices.CollectionModel.KeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyProperty As KeyPropertyModel" />
      <MemberSignature Language="F#" Value="member this.KeyProperty : Microsoft.Extensions.VectorData.ProviderServices.KeyPropertyModel" Usage="Microsoft.Extensions.VectorData.ProviderServices.CollectionModel.KeyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::VectorData::ProviderServices::KeyPropertyModel ^ KeyProperty { Microsoft::Extensions::VectorData::ProviderServices::KeyPropertyModel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.VectorData.ProviderServices.KeyPropertyModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the single key property in the model, and throws if there are multiple key properties.
            Suitable for connectors where validation is in place for single keys only (<see cref="P:Microsoft.Extensions.VectorData.ProviderServices.CollectionModelBuildingOptions.SupportsMultipleKeys" />).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.VectorData.ProviderServices.PropertyModel&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Extensions.VectorData.ProviderServices.PropertyModel&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.ProviderServices.CollectionModel.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IReadOnlyList(Of PropertyModel)" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.VectorData.ProviderServices.PropertyModel&gt;" Usage="Microsoft.Extensions.VectorData.ProviderServices.CollectionModel.Properties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::Extensions::VectorData::ProviderServices::PropertyModel ^&gt; ^ Properties { System::Collections::Generic::IReadOnlyList&lt;Microsoft::Extensions::VectorData::ProviderServices::PropertyModel ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.VectorData.ProviderServices.PropertyModel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            All properties of the record, of all types.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyMap">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,Microsoft.Extensions.VectorData.ProviderServices.PropertyModel&gt; PropertyMap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class Microsoft.Extensions.VectorData.ProviderServices.PropertyModel&gt; PropertyMap" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.ProviderServices.CollectionModel.PropertyMap" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyMap As IReadOnlyDictionary(Of String, PropertyModel)" />
      <MemberSignature Language="F#" Value="member this.PropertyMap : System.Collections.Generic.IReadOnlyDictionary&lt;string, Microsoft.Extensions.VectorData.ProviderServices.PropertyModel&gt;" Usage="Microsoft.Extensions.VectorData.ProviderServices.CollectionModel.PropertyMap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, Microsoft::Extensions::VectorData::ProviderServices::PropertyModel ^&gt; ^ PropertyMap { System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, Microsoft::Extensions::VectorData::ProviderServices::PropertyModel ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Microsoft.Extensions.VectorData.ProviderServices.PropertyModel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            All properties of the record, of all types, indexed by their model name.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.VectorData.ProviderServices.VectorPropertyModel&gt; VectorProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Extensions.VectorData.ProviderServices.VectorPropertyModel&gt; VectorProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.ProviderServices.CollectionModel.VectorProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VectorProperties As IReadOnlyList(Of VectorPropertyModel)" />
      <MemberSignature Language="F#" Value="member this.VectorProperties : System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.VectorData.ProviderServices.VectorPropertyModel&gt;" Usage="Microsoft.Extensions.VectorData.ProviderServices.CollectionModel.VectorProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::Extensions::VectorData::ProviderServices::VectorPropertyModel ^&gt; ^ VectorProperties { System::Collections::Generic::IReadOnlyList&lt;Microsoft::Extensions::VectorData::ProviderServices::VectorPropertyModel ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.VectorData.ProviderServices.VectorPropertyModel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The vector properties of the record.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.VectorData.ProviderServices.VectorPropertyModel VectorProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.VectorData.ProviderServices.VectorPropertyModel VectorProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.VectorData.ProviderServices.CollectionModel.VectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VectorProperty As VectorPropertyModel" />
      <MemberSignature Language="F#" Value="member this.VectorProperty : Microsoft.Extensions.VectorData.ProviderServices.VectorPropertyModel" Usage="Microsoft.Extensions.VectorData.ProviderServices.CollectionModel.VectorProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::VectorData::ProviderServices::VectorPropertyModel ^ VectorProperty { Microsoft::Extensions::VectorData::ProviderServices::VectorPropertyModel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.VectorData.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.VectorData.ProviderServices.VectorPropertyModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the single vector property in the model, and throws if there are multiple vector properties.
            Suitable for connectors where validation is in place for single vectors only (<see cref="P:Microsoft.Extensions.VectorData.ProviderServices.CollectionModelBuildingOptions.SupportsMultipleVectors" />).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

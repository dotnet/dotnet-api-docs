<Type Name="FakeLoggerProvider" FullName="Microsoft.Extensions.Logging.Testing.FakeLoggerProvider">
  <TypeSignature Language="C#" Value="public class FakeLoggerProvider : IDisposable, Microsoft.Extensions.Logging.ILoggerProvider, Microsoft.Extensions.Logging.ISupportExternalScope" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FakeLoggerProvider extends System.Object implements class Microsoft.Extensions.Logging.ILoggerProvider, class Microsoft.Extensions.Logging.ISupportExternalScope, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.Testing.FakeLoggerProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class FakeLoggerProvider&#xA;Implements IDisposable, ILoggerProvider, ISupportExternalScope" />
  <TypeSignature Language="F#" Value="type FakeLoggerProvider = class&#xA;    interface ILoggerProvider&#xA;    interface IDisposable&#xA;    interface ISupportExternalScope" />
  <TypeSignature Language="C++ CLI" Value="public ref class FakeLoggerProvider : IDisposable, Microsoft::Extensions::Logging::ILoggerProvider, Microsoft::Extensions::Logging::ISupportExternalScope" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.4.0.0</AssemblyVersion>
    <AssemblyVersion>8.5.0.0</AssemblyVersion>
    <AssemblyVersion>8.6.0.0</AssemblyVersion>
    <AssemblyVersion>8.7.0.0</AssemblyVersion>
    <AssemblyVersion>8.8.0.0</AssemblyVersion>
    <AssemblyVersion>8.9.1.0</AssemblyVersion>
    <AssemblyVersion>8.10.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Logging.ISupportExternalScope</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.Extensions.Logging.ProviderAlias("Fake")]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.Extensions.Logging.ProviderAlias("Fake")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Provides fake loggers.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FakeLoggerProvider (Microsoft.Extensions.Logging.Testing.FakeLogCollector? collector = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Logging.Testing.FakeLogCollector collector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.Testing.FakeLoggerProvider.#ctor(Microsoft.Extensions.Logging.Testing.FakeLogCollector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional collector As FakeLogCollector = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Logging.Testing.FakeLoggerProvider : Microsoft.Extensions.Logging.Testing.FakeLogCollector -&gt; Microsoft.Extensions.Logging.Testing.FakeLoggerProvider" Usage="new Microsoft.Extensions.Logging.Testing.FakeLoggerProvider collector" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collector" Type="Microsoft.Extensions.Logging.Testing.FakeLogCollector" />
      </Parameters>
      <Docs>
        <param name="collector">The collector that will receive all log records emitted to fake loggers.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.Testing.FakeLoggerProvider" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collector">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.Testing.FakeLogCollector Collector { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Logging.Testing.FakeLogCollector Collector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Testing.FakeLoggerProvider.Collector" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Collector As FakeLogCollector" />
      <MemberSignature Language="F#" Value="member this.Collector : Microsoft.Extensions.Logging.Testing.FakeLogCollector" Usage="Microsoft.Extensions.Logging.Testing.FakeLoggerProvider.Collector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Logging::Testing::FakeLogCollector ^ Collector { Microsoft::Extensions::Logging::Testing::FakeLogCollector ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.Testing.FakeLogCollector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the log record collector for all loggers created by this provider.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLogger">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.Testing.FakeLogger CreateLogger (string? categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.Logging.Testing.FakeLogger CreateLogger(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.Testing.FakeLoggerProvider.CreateLogger(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateLogger (categoryName As String) As FakeLogger" />
      <MemberSignature Language="F#" Value="member this.CreateLogger : string -&gt; Microsoft.Extensions.Logging.Testing.FakeLogger" Usage="fakeLoggerProvider.CreateLogger categoryName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Logging::Testing::FakeLogger ^ CreateLogger(System::String ^ categoryName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.Testing.FakeLogger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="categoryName">The category name for messages produced by the logger.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.Extensions.Logging.Testing.FakeLogger" /> instance.
            </summary>
        <returns>The instance of <see cref="T:Microsoft.Extensions.Logging.ILogger" /> that was created.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.Testing.FakeLoggerProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="fakeLoggerProvider.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Cleans up resources held by this object.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.Testing.FakeLoggerProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="fakeLoggerProvider.Dispose disposing" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> when called from the <see cref="M:Microsoft.Extensions.Logging.Testing.FakeLoggerProvider.Dispose" /> method, <see langword="false" /> when called from a finalizer.</param>
        <summary>
            Cleans up resources held by this object.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~FakeLoggerProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.Testing.FakeLoggerProvider.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="fakeLoggerProvider.Finalize " />
      <MemberSignature Language="C++ CLI" Value="!FakeLoggerProvider ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Finalizes an instance of the <see cref="T:Microsoft.Extensions.Logging.Testing.FakeLoggerProvider" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Extensions.Logging.ILoggerProvider.CreateLogger">
      <MemberSignature Language="C#" Value="Microsoft.Extensions.Logging.ILogger ILoggerProvider.CreateLogger (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Extensions.Logging.ILogger Microsoft.Extensions.Logging.ILoggerProvider.CreateLogger(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.Testing.FakeLoggerProvider.Microsoft#Extensions#Logging#ILoggerProvider#CreateLogger(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function CreateLogger (categoryName As String) As ILogger Implements ILoggerProvider.CreateLogger" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Extensions.Logging.ILoggerProvider.CreateLogger : string -&gt; Microsoft.Extensions.Logging.ILogger&#xA;override this.Microsoft.Extensions.Logging.ILoggerProvider.CreateLogger : string -&gt; Microsoft.Extensions.Logging.ILogger" Usage="fakeLoggerProvider.Microsoft.Extensions.Logging.ILoggerProvider.CreateLogger categoryName" />
      <MemberSignature Language="C++ CLI" Value=" virtual Microsoft::Extensions::Logging::ILogger ^ Microsoft.Extensions.Logging.ILoggerProvider.CreateLogger(System::String ^ categoryName) = Microsoft::Extensions::Logging::ILoggerProvider::CreateLogger;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Logging.ILoggerProvider.CreateLogger(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILogger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">The category name for messages produced by the logger.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.Extensions.Logging.ILogger" /> instance.
            </summary>
        <returns>The instance of <see cref="T:Microsoft.Extensions.Logging.ILogger" /> that was created.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScopeProvider">
      <MemberSignature Language="C#" Value="public void SetScopeProvider (Microsoft.Extensions.Logging.IExternalScopeProvider scopeProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetScopeProvider(class Microsoft.Extensions.Logging.IExternalScopeProvider scopeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.Testing.FakeLoggerProvider.SetScopeProvider(Microsoft.Extensions.Logging.IExternalScopeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetScopeProvider (scopeProvider As IExternalScopeProvider)" />
      <MemberSignature Language="F#" Value="abstract member SetScopeProvider : Microsoft.Extensions.Logging.IExternalScopeProvider -&gt; unit&#xA;override this.SetScopeProvider : Microsoft.Extensions.Logging.IExternalScopeProvider -&gt; unit" Usage="fakeLoggerProvider.SetScopeProvider scopeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetScopeProvider(Microsoft::Extensions::Logging::IExternalScopeProvider ^ scopeProvider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Logging.ISupportExternalScope.SetScopeProvider(Microsoft.Extensions.Logging.IExternalScopeProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeProvider" Type="Microsoft.Extensions.Logging.IExternalScopeProvider" />
      </Parameters>
      <Docs>
        <param name="scopeProvider">The provider of scope data.</param>
        <summary>
            Sets external scope information source for logger provider.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

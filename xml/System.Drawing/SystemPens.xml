<Type Name="SystemPens" FullName="System.Drawing.SystemPens">
  <TypeSignature Language="C#" Value="public static class SystemPens" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;dotnet-plat-ext-6.0;dotnet-plat-ext-7.0;windowsdesktop-3.0;windowsdesktop-3.1;windowsdesktop-5.0;windowsdesktop-6.0;windowsdesktop-7.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SystemPens extends System.Object" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;dotnet-plat-ext-6.0;dotnet-plat-ext-7.0;windowsdesktop-3.0;windowsdesktop-3.1;windowsdesktop-5.0;windowsdesktop-6.0;windowsdesktop-7.0" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.SystemPens" />
  <TypeSignature Language="VB.NET" Value="Public Class SystemPens" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;dotnet-plat-ext-6.0;dotnet-plat-ext-7.0;windowsdesktop-3.0;windowsdesktop-3.1;windowsdesktop-5.0;windowsdesktop-6.0;windowsdesktop-7.0" />
  <TypeSignature Language="F#" Value="type SystemPens = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class SystemPens abstract sealed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;dotnet-plat-ext-6.0;dotnet-plat-ext-7.0;windowsdesktop-3.0;windowsdesktop-3.1;windowsdesktop-5.0;windowsdesktop-6.0;windowsdesktop-7.0" />
  <TypeSignature Language="C#" Value="public sealed class SystemPens" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SystemPens extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SystemPens" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class SystemPens sealed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Each property of the <see cref="T:System.Drawing.SystemPens" /> class is a <see cref="T:System.Drawing.Pen" /> that is the color of a Windows display element and that has a width of 1 pixel.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

[!INCLUDE[System.Drawing.Common note](~/includes/system-drawing-common.md)]

## Examples
 The following code example creates points and sizes using several of the overloaded operators defined for these types. It also demonstrates how to use the <xref:System.Drawing.SystemPens> class.

 This example is designed to be used with Windows Forms. Create a form that contains a <xref:System.Windows.Forms.Button> named `subtractButton`. Paste the code into the form and call the `CreatePointsAndSizes` method from the form's `Paint` event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="cpp" source="~/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CPP/form1.cpp" id="Snippet1":::
 :::code language="csharp" source="~/snippets/csharp/System.Drawing/Color/Overview/form1.cs" id="Snippet1":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/VB/form1.vb" id="Snippet1":::

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActiveBorder">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen ActiveBorder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen ActiveBorder" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.ActiveBorder" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ActiveBorder As Pen" />
      <MemberSignature Language="F#" Value="static member ActiveBorder : System.Drawing.Pen" Usage="System.Drawing.SystemPens.ActiveBorder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ ActiveBorder { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the active window's border.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color of the active window's border.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.ActiveBorder%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithActiveBorderPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet13":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet13":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveCaption">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen ActiveCaption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen ActiveCaption" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.ActiveCaption" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ActiveCaption As Pen" />
      <MemberSignature Language="F#" Value="static member ActiveCaption : System.Drawing.Pen" Usage="System.Drawing.SystemPens.ActiveCaption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ ActiveCaption { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the background of the active window's title bar.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color of the background of the active window's title bar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.ActiveCaption%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithActiveCaptionPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet14":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet14":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveCaptionText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen ActiveCaptionText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen ActiveCaptionText" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.ActiveCaptionText" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ActiveCaptionText As Pen" />
      <MemberSignature Language="F#" Value="static member ActiveCaptionText : System.Drawing.Pen" Usage="System.Drawing.SystemPens.ActiveCaptionText" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ ActiveCaptionText { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the text in the active window's title bar.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color of the text in the active window's title bar.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppWorkspace">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen AppWorkspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen AppWorkspace" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.AppWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AppWorkspace As Pen" />
      <MemberSignature Language="F#" Value="static member AppWorkspace : System.Drawing.Pen" Usage="System.Drawing.SystemPens.AppWorkspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ AppWorkspace { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the application workspace.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color of the application workspace.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 The application workspace is the area in a multiple document view that is not being occupied by documents.



## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.AppWorkspace%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithActiveAppWorkspacePen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet14":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet14":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ButtonFace">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen ButtonFace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen ButtonFace" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.ButtonFace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ButtonFace As Pen" />
      <MemberSignature Language="F#" Value="static member ButtonFace : System.Drawing.Pen" Usage="System.Drawing.SystemPens.ButtonFace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ ButtonFace { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the face color of a 3-D element.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the face color of a 3-D element.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.ButtonFace%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithButtonSpacePen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet16":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet16":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ButtonHighlight">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen ButtonHighlight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen ButtonHighlight" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.ButtonHighlight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ButtonHighlight As Pen" />
      <MemberSignature Language="F#" Value="static member ButtonHighlight : System.Drawing.Pen" Usage="System.Drawing.SystemPens.ButtonHighlight" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ ButtonHighlight { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the highlight color of a 3-D element.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the highlight color of a 3-D element.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 This color is applied to parts of a 3-D element that face the light source.



## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.ButtonHighlight%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithButtonHighlightPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet17":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet17":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ButtonShadow">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen ButtonShadow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen ButtonShadow" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.ButtonShadow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ButtonShadow As Pen" />
      <MemberSignature Language="F#" Value="static member ButtonShadow : System.Drawing.Pen" Usage="System.Drawing.SystemPens.ButtonShadow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ ButtonShadow { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the shadow color of a 3-D element.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the shadow color of a 3-D element.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 This color is applied to parts of a 3-D element that face away from the light source.



## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.ButtonShadow%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithButtonShadowPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet18":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet18":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen Control" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.Control" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Control As Pen" />
      <MemberSignature Language="F#" Value="static member Control : System.Drawing.Pen" Usage="System.Drawing.SystemPens.Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ Control { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the face color of a 3-D element.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the face color of a 3-D element.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.Control%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithControlPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet19":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet19":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlDark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen ControlDark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen ControlDark" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.ControlDark" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ControlDark As Pen" />
      <MemberSignature Language="F#" Value="static member ControlDark : System.Drawing.Pen" Usage="System.Drawing.SystemPens.ControlDark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ ControlDark { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the shadow color of a 3-D element.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the shadow color of a 3-D element.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 This color is applied to parts of a 3-D element that face away from the light source.



## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.ControlDark%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithControlDarkPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet20":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet20":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlDarkDark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen ControlDarkDark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen ControlDarkDark" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.ControlDarkDark" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ControlDarkDark As Pen" />
      <MemberSignature Language="F#" Value="static member ControlDarkDark : System.Drawing.Pen" Usage="System.Drawing.SystemPens.ControlDarkDark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ ControlDarkDark { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the dark shadow color of a 3-D element.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the dark shadow color of a 3-D element.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 This color is applied to the parts of a 3-D element that are the darkest color.



## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.ControlDarkDark%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithControlDarkDarkPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet21":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet21":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlLight">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen ControlLight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen ControlLight" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.ControlLight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ControlLight As Pen" />
      <MemberSignature Language="F#" Value="static member ControlLight : System.Drawing.Pen" Usage="System.Drawing.SystemPens.ControlLight" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ ControlLight { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the light color of a 3-D element.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the light color of a 3-D element.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 This color is applied to parts of a 3-D element that face the light source.



## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.ControlLight%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithControlLightPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet22":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet22":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlLightLight">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen ControlLightLight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen ControlLightLight" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.ControlLightLight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ControlLightLight As Pen" />
      <MemberSignature Language="F#" Value="static member ControlLightLight : System.Drawing.Pen" Usage="System.Drawing.SystemPens.ControlLightLight" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ ControlLightLight { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the highlight color of a 3-D element.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the highlight color of a 3-D element.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 This color is applied to the parts of a 3-D element that are the lightest color.



## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.ControlLightLight%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithControlLightLightPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet23":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet23":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen ControlText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen ControlText" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.ControlText" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ControlText As Pen" />
      <MemberSignature Language="F#" Value="static member ControlText : System.Drawing.Pen" Usage="System.Drawing.SystemPens.ControlText" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ ControlText { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of text in a 3-D element.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color of text in a 3-D element.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.ControlText%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithControlTextPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet24":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet24":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Desktop">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen Desktop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen Desktop" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.Desktop" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Desktop As Pen" />
      <MemberSignature Language="F#" Value="static member Desktop : System.Drawing.Pen" Usage="System.Drawing.SystemPens.Desktop" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ Desktop { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the Windows desktop.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color of the Windows desktop.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.Desktop%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithControlDesktopPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet25":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet25":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromSystemColor">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen FromSystemColor (System.Drawing.Color c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Pen FromSystemColor(valuetype System.Drawing.Color c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.SystemPens.FromSystemColor(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromSystemColor (c As Color) As Pen" />
      <MemberSignature Language="F#" Value="static member FromSystemColor : System.Drawing.Color -&gt; System.Drawing.Pen" Usage="System.Drawing.SystemPens.FromSystemColor c" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Pen ^ FromSystemColor(System::Drawing::Color c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="c">The <see cref="T:System.Drawing.Color" /> for the new <see cref="T:System.Drawing.Pen" />.</param>
        <summary>Creates a <see cref="T:System.Drawing.Pen" /> from the specified <see cref="T:System.Drawing.Color" />.</summary>
        <returns>The <see cref="T:System.Drawing.Pen" /> this method creates.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GradientActiveCaption">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen GradientActiveCaption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen GradientActiveCaption" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.GradientActiveCaption" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GradientActiveCaption As Pen" />
      <MemberSignature Language="F#" Value="static member GradientActiveCaption : System.Drawing.Pen" Usage="System.Drawing.SystemPens.GradientActiveCaption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ GradientActiveCaption { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the lightest color in the color gradient of an active window's title bar.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the lightest color in the color gradient of an active window's title bar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.GradientActiveCaption%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithGradientActiveCaptionPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet26":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet26":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GradientInactiveCaption">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen GradientInactiveCaption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen GradientInactiveCaption" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.GradientInactiveCaption" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GradientInactiveCaption As Pen" />
      <MemberSignature Language="F#" Value="static member GradientInactiveCaption : System.Drawing.Pen" Usage="System.Drawing.SystemPens.GradientInactiveCaption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ GradientInactiveCaption { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the lightest color in the color gradient of an inactive window's title bar.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the lightest color in the color gradient of an inactive window's title bar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.GradientInactiveCaption%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithGradientInactiveCaptionPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet27":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet27":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GrayText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen GrayText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen GrayText" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.GrayText" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GrayText As Pen" />
      <MemberSignature Language="F#" Value="static member GrayText : System.Drawing.Pen" Usage="System.Drawing.SystemPens.GrayText" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ GrayText { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of dimmed text.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color of dimmed text.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Items in a list that are disabled are displayed in dimmed text.



## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.GrayText%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithGrayTextPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet28":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet28":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Highlight">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen Highlight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen Highlight" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.Highlight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Highlight As Pen" />
      <MemberSignature Language="F#" Value="static member Highlight : System.Drawing.Pen" Usage="System.Drawing.SystemPens.Highlight" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ Highlight { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the background of selected items.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color of the background of selected items.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Selected items may include menu items as well as selected text. For example, the pen may be the color used for the background of selected items in a list box.



## Examples
 The following code example creates points and sizes using several of the overloaded operators defined for these types. It also demonstrates how to use the <xref:System.Drawing.SystemPens.Highlight%2A> property.

 This example is designed to be used with Windows Forms. Create a form that contains a <xref:System.Windows.Forms.Button> named `subtractButton`. Paste the code into the form and call the `CreatePointsAndSizes` method from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="cpp" source="~/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CPP/form1.cpp" id="Snippet1":::
 :::code language="csharp" source="~/snippets/csharp/System.Drawing/Color/Overview/form1.cs" id="Snippet1":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/VB/form1.vb" id="Snippet1":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen HighlightText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen HighlightText" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.HighlightText" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HighlightText As Pen" />
      <MemberSignature Language="F#" Value="static member HighlightText : System.Drawing.Pen" Usage="System.Drawing.SystemPens.HighlightText" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ HighlightText { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the text of selected items.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color of the text of selected items.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Selected items may include menu items as well as selected text. For example, the pen may be the color used for the text of selected items in a list box.



## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.HighlightText%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithHighlightTextPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet30":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet30":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HotTrack">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen HotTrack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen HotTrack" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.HotTrack" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HotTrack As Pen" />
      <MemberSignature Language="F#" Value="static member HotTrack : System.Drawing.Pen" Usage="System.Drawing.SystemPens.HotTrack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ HotTrack { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color used to designate a hot-tracked item.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color used to designate a hot-tracked item.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.HotTrack%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithHotTrackPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet31":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet31":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InactiveBorder">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen InactiveBorder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen InactiveBorder" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.InactiveBorder" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InactiveBorder As Pen" />
      <MemberSignature Language="F#" Value="static member InactiveBorder : System.Drawing.Pen" Usage="System.Drawing.SystemPens.InactiveBorder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ InactiveBorder { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> is the color of the border of an inactive window.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color of the border of an inactive window.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.InactiveBorder%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithInactiveBorderPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet32":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet32":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InactiveCaption">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen InactiveCaption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen InactiveCaption" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.InactiveCaption" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InactiveCaption As Pen" />
      <MemberSignature Language="F#" Value="static member InactiveCaption : System.Drawing.Pen" Usage="System.Drawing.SystemPens.InactiveCaption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ InactiveCaption { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the title bar caption of an inactive window.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color of the title bar caption of an inactive window.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.InactiveCaption%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithInactiveCaptionPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet33":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet33":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InactiveCaptionText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen InactiveCaptionText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen InactiveCaptionText" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.InactiveCaptionText" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InactiveCaptionText As Pen" />
      <MemberSignature Language="F#" Value="static member InactiveCaptionText : System.Drawing.Pen" Usage="System.Drawing.SystemPens.InactiveCaptionText" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ InactiveCaptionText { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the text in an inactive window's title bar.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color of the text in an inactive window's title bar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.InactiveCaptionText%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithInactiveCaptionTextPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet34":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet34":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen Info { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen Info" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.Info" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Info As Pen" />
      <MemberSignature Language="F#" Value="static member Info : System.Drawing.Pen" Usage="System.Drawing.SystemPens.Info" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ Info { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the background of a ToolTip.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color of the background of a ToolTip.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.Info%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithInfoPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet35":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet35":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InfoText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen InfoText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen InfoText" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.InfoText" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InfoText As Pen" />
      <MemberSignature Language="F#" Value="static member InfoText : System.Drawing.Pen" Usage="System.Drawing.SystemPens.InfoText" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ InfoText { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the text of a ToolTip.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color of the text of a ToolTip.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.InfoText%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithInfoTextPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet36":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet36":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Menu">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen Menu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen Menu" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.Menu" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Menu As Pen" />
      <MemberSignature Language="F#" Value="static member Menu : System.Drawing.Pen" Usage="System.Drawing.SystemPens.Menu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ Menu { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of a menu's background.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color of a menu's background.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.Menu%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithMenuPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet37":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet37":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuBar">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen MenuBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen MenuBar" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.MenuBar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MenuBar As Pen" />
      <MemberSignature Language="F#" Value="static member MenuBar : System.Drawing.Pen" Usage="System.Drawing.SystemPens.MenuBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ MenuBar { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the background of a menu bar.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color of the background of a menu bar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.MenuBar%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithMenuBarPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet38":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet38":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuHighlight">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen MenuHighlight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen MenuHighlight" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.MenuHighlight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MenuHighlight As Pen" />
      <MemberSignature Language="F#" Value="static member MenuHighlight : System.Drawing.Pen" Usage="System.Drawing.SystemPens.MenuHighlight" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ MenuHighlight { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color used to highlight menu items when the menu appears as a flat menu.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color used to highlight menu items when the menu appears as a flat menu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.MenuHighlight%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithMenuHighlightPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet39":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet39":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen MenuText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen MenuText" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.MenuText" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MenuText As Pen" />
      <MemberSignature Language="F#" Value="static member MenuText : System.Drawing.Pen" Usage="System.Drawing.SystemPens.MenuText" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ MenuText { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of a menu's text.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color of a menu's text.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.MenuText%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithMenuTextPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet40":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet40":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBar">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen ScrollBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen ScrollBar" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.ScrollBar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ScrollBar As Pen" />
      <MemberSignature Language="F#" Value="static member ScrollBar : System.Drawing.Pen" Usage="System.Drawing.SystemPens.ScrollBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ ScrollBar { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the background of a scroll bar.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color of the background of a scroll bar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.ScrollBar%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithScrollBarPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet41":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet41":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Window">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen Window { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen Window" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.Window" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Window As Pen" />
      <MemberSignature Language="F#" Value="static member Window : System.Drawing.Pen" Usage="System.Drawing.SystemPens.Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ Window { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the background in the client area of a window.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color of the background in the client area of a window.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.Window%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithWindowPen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet42":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet42":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowFrame">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen WindowFrame { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen WindowFrame" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.WindowFrame" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WindowFrame As Pen" />
      <MemberSignature Language="F#" Value="static member WindowFrame : System.Drawing.Pen" Usage="System.Drawing.SystemPens.WindowFrame" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ WindowFrame { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of a window frame.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color of a window frame.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.WindowFrame%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithWindowFramePen` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet44":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet44":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Pen WindowText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Pen WindowText" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SystemPens.WindowText" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WindowText As Pen" />
      <MemberSignature Language="F#" Value="static member WindowText : System.Drawing.Pen" Usage="System.Drawing.SystemPens.WindowText" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Pen ^ WindowText { System::Drawing::Pen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the text in the client area of a window.</summary>
        <value>A <see cref="T:System.Drawing.Pen" /> that is the color of the text in the client area of a window.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example demonstrates how to use the <xref:System.Drawing.SystemPens.WindowText%2A> property. To run this example, paste it into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawWithWindowText` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.

 :::code language="csharp" source="~/snippets/csharp/System.Drawing/CharacterRange/Equals/Form1.cs" id="Snippet45":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb" id="Snippet45":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

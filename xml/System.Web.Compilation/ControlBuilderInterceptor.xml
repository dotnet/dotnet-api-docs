<Type Name="ControlBuilderInterceptor" FullName="System.Web.Compilation.ControlBuilderInterceptor">
  <TypeSignature Language="C#" Value="public abstract class ControlBuilderInterceptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ControlBuilderInterceptor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ControlBuilderInterceptor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ControlBuilderInterceptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlBuilderInterceptor abstract" />
  <TypeSignature Language="F#" Value="type ControlBuilderInterceptor = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Allows the compilation process to be customized or controlled.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.Compilation.ControlBuilderInterceptor> class is an abstract class. A type that extends this class can be registered in the web.config file using a `ControlBuilderInterceptorType` property.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ControlBuilderInterceptor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ControlBuilderInterceptor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ControlBuilderInterceptor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Compilation.ControlBuilderInterceptor" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProcessGeneratedCode">
      <MemberSignature Language="C#" Value="public virtual void OnProcessGeneratedCode (System.Web.UI.ControlBuilder controlBuilder, System.CodeDom.CodeCompileUnit codeCompileUnit, System.CodeDom.CodeTypeDeclaration baseType, System.CodeDom.CodeTypeDeclaration derivedType, System.CodeDom.CodeMemberMethod buildMethod, System.CodeDom.CodeMemberMethod dataBindingMethod, System.Collections.IDictionary additionalState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnProcessGeneratedCode(class System.Web.UI.ControlBuilder controlBuilder, class System.CodeDom.CodeCompileUnit codeCompileUnit, class System.CodeDom.CodeTypeDeclaration baseType, class System.CodeDom.CodeTypeDeclaration derivedType, class System.CodeDom.CodeMemberMethod buildMethod, class System.CodeDom.CodeMemberMethod dataBindingMethod, class System.Collections.IDictionary additionalState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ControlBuilderInterceptor.OnProcessGeneratedCode(System.Web.UI.ControlBuilder,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeMemberMethod,System.CodeDom.CodeMemberMethod,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnProcessGeneratedCode (controlBuilder As ControlBuilder, codeCompileUnit As CodeCompileUnit, baseType As CodeTypeDeclaration, derivedType As CodeTypeDeclaration, buildMethod As CodeMemberMethod, dataBindingMethod As CodeMemberMethod, additionalState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnProcessGeneratedCode(System::Web::UI::ControlBuilder ^ controlBuilder, System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::CodeDom::CodeTypeDeclaration ^ baseType, System::CodeDom::CodeTypeDeclaration ^ derivedType, System::CodeDom::CodeMemberMethod ^ buildMethod, System::CodeDom::CodeMemberMethod ^ dataBindingMethod, System::Collections::IDictionary ^ additionalState);" />
      <MemberSignature Language="F#" Value="abstract member OnProcessGeneratedCode : System.Web.UI.ControlBuilder * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeTypeDeclaration * System.CodeDom.CodeTypeDeclaration * System.CodeDom.CodeMemberMethod * System.CodeDom.CodeMemberMethod * System.Collections.IDictionary -&gt; unit&#xA;override this.OnProcessGeneratedCode : System.Web.UI.ControlBuilder * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeTypeDeclaration * System.CodeDom.CodeTypeDeclaration * System.CodeDom.CodeMemberMethod * System.CodeDom.CodeMemberMethod * System.Collections.IDictionary -&gt; unit" Usage="controlBuilderInterceptor.OnProcessGeneratedCode (controlBuilder, codeCompileUnit, baseType, derivedType, buildMethod, dataBindingMethod, additionalState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlBuilder" Type="System.Web.UI.ControlBuilder" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="baseType" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="derivedType" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="buildMethod" Type="System.CodeDom.CodeMemberMethod" />
        <Parameter Name="dataBindingMethod" Type="System.CodeDom.CodeMemberMethod" />
        <Parameter Name="additionalState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="controlBuilder">The control builder instance.</param>
        <param name="codeCompileUnit">A <see cref="T:System.CodeDom.CodeCompileUnit" /> object that is generated by the compilation.</param>
        <param name="baseType">The type declaration of the code behind class or derived type.</param>
        <param name="derivedType">The type declaration of top level markup element.</param>
        <param name="buildMethod">The method with the necessary code to create the control and set the control's various properties, events, fields.</param>
        <param name="dataBindingMethod">The method with code to evaluate data binding expressions within the control.</param>
        <param name="additionalState">The additional state which can be used to store and retrieve data within several methods of  the <see cref="T:System.Web.Compilation.ControlBuilderInterceptor" /> class.</param>
        <summary>Called after the <see cref="T:System.Web.UI.ControlBuilder" /> has completed generating code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreControlBuilderInit">
      <MemberSignature Language="C#" Value="public virtual void PreControlBuilderInit (System.Web.UI.ControlBuilder controlBuilder, System.Web.UI.TemplateParser parser, System.Web.UI.ControlBuilder parentBuilder, Type type, string tagName, string id, System.Collections.IDictionary attributes, System.Collections.IDictionary additionalState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreControlBuilderInit(class System.Web.UI.ControlBuilder controlBuilder, class System.Web.UI.TemplateParser parser, class System.Web.UI.ControlBuilder parentBuilder, class System.Type type, string tagName, string id, class System.Collections.IDictionary attributes, class System.Collections.IDictionary additionalState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ControlBuilderInterceptor.PreControlBuilderInit(System.Web.UI.ControlBuilder,System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PreControlBuilderInit (controlBuilder As ControlBuilder, parser As TemplateParser, parentBuilder As ControlBuilder, type As Type, tagName As String, id As String, attributes As IDictionary, additionalState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PreControlBuilderInit(System::Web::UI::ControlBuilder ^ controlBuilder, System::Web::UI::TemplateParser ^ parser, System::Web::UI::ControlBuilder ^ parentBuilder, Type ^ type, System::String ^ tagName, System::String ^ id, System::Collections::IDictionary ^ attributes, System::Collections::IDictionary ^ additionalState);" />
      <MemberSignature Language="F#" Value="abstract member PreControlBuilderInit : System.Web.UI.ControlBuilder * System.Web.UI.TemplateParser * System.Web.UI.ControlBuilder * Type * string * string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; unit&#xA;override this.PreControlBuilderInit : System.Web.UI.ControlBuilder * System.Web.UI.TemplateParser * System.Web.UI.ControlBuilder * Type * string * string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; unit" Usage="controlBuilderInterceptor.PreControlBuilderInit (controlBuilder, parser, parentBuilder, type, tagName, id, attributes, additionalState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlBuilder" Type="System.Web.UI.ControlBuilder" />
        <Parameter Name="parser" Type="System.Web.UI.TemplateParser" />
        <Parameter Name="parentBuilder" Type="System.Web.UI.ControlBuilder" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
        <Parameter Name="additionalState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="controlBuilder">The control builder which is about to be initialized.</param>
        <param name="parser">The <see cref="T:System.Web.UI.TemplateParser" /> which was used to parse the markup.</param>
        <param name="parentBuilder">The parent control builder.</param>
        <param name="type">The type of the control that this builder will create.</param>
        <param name="tagName">The name of the tag to be built.</param>
        <param name="id">The ID of the element in the markup.</param>
        <param name="attributes">The list of attributes of the element in the markup.</param>
        <param name="additionalState">The additional state which can be used to store and retrieve data within several methods of  the <see cref="T:System.Web.Compilation.ControlBuilderInterceptor" /> class.</param>
        <summary>Called before the <see cref="T:System.Web.UI.ControlBuilder" /> of an element in the markup is initialized.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `parentBuilder` parameter is typically the builder corresponding to the parent element in the markup.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

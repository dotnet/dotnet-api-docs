<Type Name="ActivatingKeyTipEventArgs" FullName="System.Windows.Controls.ActivatingKeyTipEventArgs">
  <TypeSignature Language="C#" Value="public class ActivatingKeyTipEventArgs : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActivatingKeyTipEventArgs extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ActivatingKeyTipEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ActivatingKeyTipEventArgs&#xA;Inherits RoutedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivatingKeyTipEventArgs : System::Windows::RoutedEventArgs" />
  <TypeSignature Language="F#" Value="type ActivatingKeyTipEventArgs = class&#xA;    inherit RoutedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides data for the <see cref="E:System.Windows.Controls.KeyTipService.ActivatingKeyTip" /> event.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivatingKeyTipEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ActivatingKeyTipEventArgs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActivatingKeyTipEventArgs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ActivatingKeyTipEventArgs" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ActivatingKeyTipEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="activatingKeyTipEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">The event handler to invoke.</param>
        <param name="genericTarget">The target on which the handler is invoked.</param>
        <summary>Invokes the specified event handler on the specified object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This implementation casts the generic handler to an <xref:System.Windows.Controls.ActivatingKeyTipEventHandler> instance and invokes it.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyTipHorizontalOffset">
      <MemberSignature Language="C#" Value="public double KeyTipHorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 KeyTipHorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipHorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyTipHorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double KeyTipHorizontalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.KeyTipHorizontalOffset : double with get, set" Usage="System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipHorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the horizontal offset from the specified horizontal placement.</summary>
        <value>The amount to offset the KeyTip horizontally.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The property is set to a value that either evaluates to negative or positive infinity, or is not a number.</exception>
      </Docs>
    </Member>
    <Member MemberName="KeyTipHorizontalPlacement">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.KeyTipHorizontalPlacement KeyTipHorizontalPlacement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.KeyTipHorizontalPlacement KeyTipHorizontalPlacement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipHorizontalPlacement" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyTipHorizontalPlacement As KeyTipHorizontalPlacement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::KeyTipHorizontalPlacement KeyTipHorizontalPlacement { System::Windows::Controls::KeyTipHorizontalPlacement get(); void set(System::Windows::Controls::KeyTipHorizontalPlacement value); };" />
      <MemberSignature Language="F#" Value="member this.KeyTipHorizontalPlacement : System.Windows.Controls.KeyTipHorizontalPlacement with get, set" Usage="System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipHorizontalPlacement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.KeyTipHorizontalPlacement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the horizontal placement for the KeyTip relative to the placement target element.</summary>
        <value>The horizontal placement for the KeyTip relative to the placement target element.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyTipVerticalOffset">
      <MemberSignature Language="C#" Value="public double KeyTipVerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 KeyTipVerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipVerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyTipVerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double KeyTipVerticalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.KeyTipVerticalOffset : double with get, set" Usage="System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipVerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the vertical offset from the specified vertical placement.</summary>
        <value>The amount to offset the KeyTip vertically.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The property is set to a value that either evaluates to negative or positive infinity, or is not a number.</exception>
      </Docs>
    </Member>
    <Member MemberName="KeyTipVerticalPlacement">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.KeyTipVerticalPlacement KeyTipVerticalPlacement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.KeyTipVerticalPlacement KeyTipVerticalPlacement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipVerticalPlacement" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyTipVerticalPlacement As KeyTipVerticalPlacement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::KeyTipVerticalPlacement KeyTipVerticalPlacement { System::Windows::Controls::KeyTipVerticalPlacement get(); void set(System::Windows::Controls::KeyTipVerticalPlacement value); };" />
      <MemberSignature Language="F#" Value="member this.KeyTipVerticalPlacement : System.Windows.Controls.KeyTipVerticalPlacement with get, set" Usage="System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipVerticalPlacement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.KeyTipVerticalPlacement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the vertical placement for the KeyTip relative to the placement target element.</summary>
        <value>The vertical placement for the KeyTip relative to the placement target element.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyTipVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Visibility KeyTipVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Visibility KeyTipVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyTipVisibility As Visibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Visibility KeyTipVisibility { System::Windows::Visibility get(); void set(System::Windows::Visibility value); };" />
      <MemberSignature Language="F#" Value="member this.KeyTipVisibility : System.Windows.Visibility with get, set" Usage="System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Visibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value that indicates whether the KeyTip is displayed and accessible.</summary>
        <value>The value that indicates whether the KeyTip is displayed and accessible.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the <xref:System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipVisibility%2A> property is set to <xref:System.Windows.Visibility.Visible>, the KeyTip is visible and accessible. When the <xref:System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipVisibility%2A> property is set to <xref:System.Windows.Visibility.Hidden>, the KeyTip is hidden but still accessible. When the <xref:System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipVisibility%2A> property is set to <xref:System.Windows.Visibility.Collapsed>, the KeyTip is not visible and not accessible.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementTarget">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement PlacementTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement PlacementTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ActivatingKeyTipEventArgs.PlacementTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementTarget As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ PlacementTarget { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PlacementTarget : System.Windows.UIElement with get, set" Usage="System.Windows.Controls.ActivatingKeyTipEventArgs.PlacementTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the user interface element that serves as the target for placing the KeyTip.</summary>
        <value>The element that serves as the target for placing the KeyTip.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

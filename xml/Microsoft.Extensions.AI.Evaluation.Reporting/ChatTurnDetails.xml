<Type Name="ChatTurnDetails" FullName="Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails">
  <TypeSignature Language="C#" Value="public sealed class ChatTurnDetails" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ChatTurnDetails extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ChatTurnDetails" />
  <TypeSignature Language="F#" Value="type ChatTurnDetails = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChatTurnDetails sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
    <AssemblyVersion>9.5.0.0</AssemblyVersion>
    <AssemblyVersion>9.6.0.0</AssemblyVersion>
    <AssemblyVersion>9.7.0.0</AssemblyVersion>
    <AssemblyVersion>9.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <param name="latency">
            The duration between the time when the request was sent to the LLM and the time when the response was received for
            the chat conversation turn.
            </param>
    <param name="model">
            The model that was used in the creation of the response for the chat conversation turn. Can be
            <see langword="null" /> if this information was not available via <see cref="P:Microsoft.Extensions.AI.ChatResponse.ModelId" />.
            </param>
    <param name="usage">
            Usage details for the chat conversation turn (including input and output token counts). Can be
            <see langword="null" /> if usage details were not available via <see cref="P:Microsoft.Extensions.AI.ChatResponse.Usage" />.
            </param>
    <param name="cacheKey">
            The cache key for the cached model response for the chat conversation turn if response caching was enabled;
            <see langword="null" /> otherwise.
            </param>
    <param name="cacheHit">
      <see langword="true" /> if response caching was enabled and the model response for the chat conversation turn was
            retrieved from the cache; <see langword="false" /> if response caching was enabled and the model response was not
            retrieved from the cache; <see langword="null" /> if response caching was disabled.
            </param>
    <summary>
            A class that records details related to a particular LLM chat conversation turn involved in the execution of a
            particular <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatTurnDetails (TimeSpan latency, string? model = default, Microsoft.Extensions.AI.UsageDetails? usage = default, string? cacheKey = default, bool? cacheHit = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.TimeSpan latency, string model, class Microsoft.Extensions.AI.UsageDetails usage, string cacheKey, valuetype System.Nullable`1&lt;bool&gt; cacheHit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.#ctor(System.TimeSpan,System.String,Microsoft.Extensions.AI.UsageDetails,System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (latency As TimeSpan, Optional model As String = Nothing, Optional usage As UsageDetails = Nothing, Optional cacheKey As String = Nothing, Optional cacheHit As Nullable(Of Boolean) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails : TimeSpan * string * Microsoft.Extensions.AI.UsageDetails * string * Nullable&lt;bool&gt; -&gt; Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" Usage="new Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails (latency, model, usage, cacheKey, cacheHit)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="latency" Type="System.TimeSpan" />
        <Parameter Name="model" Type="System.String" />
        <Parameter Name="usage" Type="Microsoft.Extensions.AI.UsageDetails" />
        <Parameter Name="cacheKey" Type="System.String" />
        <Parameter Name="cacheHit" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="latency">
            The duration between the time when the request was sent to the LLM and the time when the response was received
            for the chat conversation turn.
            </param>
        <param name="model">
            The model that was used in the creation of the response for the chat conversation turn. Can be
            <see langword="null" /> if this information was not available via <see cref="P:Microsoft.Extensions.AI.ChatResponse.ModelId" />.
            </param>
        <param name="usage">
            Usage details for the chat conversation turn (including input and output token counts). Can be
            <see langword="null" /> if usage details were not available via <see cref="P:Microsoft.Extensions.AI.ChatResponse.Usage" />.
            </param>
        <param name="cacheKey">
            The cache key for the cached model response for the chat conversation turn if response caching was enabled;
            <see langword="null" /> otherwise.
            </param>
        <param name="cacheHit">
          <see langword="true" /> if response caching was enabled and the model response for the chat conversation turn
            was retrieved from the cache; <see langword="false" /> if response caching was enabled and the model response
            was not retrieved from the cache; <see langword="null" /> if response caching was disabled.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatTurnDetails (TimeSpan latency, string? model, string? modelProvider, Microsoft.Extensions.AI.UsageDetails? usage = default, string? cacheKey = default, bool? cacheHit = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.TimeSpan latency, string model, string modelProvider, class Microsoft.Extensions.AI.UsageDetails usage, string cacheKey, valuetype System.Nullable`1&lt;bool&gt; cacheHit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.#ctor(System.TimeSpan,System.String,System.String,Microsoft.Extensions.AI.UsageDetails,System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (latency As TimeSpan, model As String, modelProvider As String, Optional usage As UsageDetails = Nothing, Optional cacheKey As String = Nothing, Optional cacheHit As Nullable(Of Boolean) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails : TimeSpan * string * string * Microsoft.Extensions.AI.UsageDetails * string * Nullable&lt;bool&gt; -&gt; Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" Usage="new Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails (latency, model, modelProvider, usage, cacheKey, cacheHit)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonConstructor]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonConstructor&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="latency" Type="System.TimeSpan" />
        <Parameter Name="model" Type="System.String" />
        <Parameter Name="modelProvider" Type="System.String" />
        <Parameter Name="usage" Type="Microsoft.Extensions.AI.UsageDetails" />
        <Parameter Name="cacheKey" Type="System.String" />
        <Parameter Name="cacheHit" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="latency">
            The duration between the time when the request was sent to the LLM and the time when the response was received
            for the chat conversation turn.
            </param>
        <param name="model">
            The model that was used in the creation of the response for the chat conversation turn. Can be
            <see langword="null" /> if this information was not available via <see cref="P:Microsoft.Extensions.AI.ChatResponse.ModelId" />.
            </param>
        <param name="modelProvider">
            The name of the provider for the model identified by <paramref name="model" />. Can be <see langword="null" />
            if this information was not available via the <see cref="T:Microsoft.Extensions.AI.ChatClientMetadata" /> for the
            <see cref="T:Microsoft.Extensions.AI.IChatClient" />.
            </param>
        <param name="usage">
            Usage details for the chat conversation turn (including input and output token counts). Can be
            <see langword="null" /> if usage details were not available via <see cref="P:Microsoft.Extensions.AI.ChatResponse.Usage" />.
            </param>
        <param name="cacheKey">
            The cache key for the cached model response for the chat conversation turn if response caching was enabled;
            <see langword="null" /> otherwise.
            </param>
        <param name="cacheHit">
          <see langword="true" /> if response caching was enabled and the model response for the chat conversation turn
            was retrieved from the cache; <see langword="false" /> if response caching was enabled and the model response
            was not retrieved from the cache; <see langword="null" /> if response caching was disabled.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheHit">
      <MemberSignature Language="C#" Value="public bool? CacheHit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; CacheHit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.CacheHit" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheHit As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.CacheHit : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.CacheHit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; CacheHit { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the model response was retrieved from the cache.
            </summary>
        <value>To be added.</value>
        <remarks>
            Returns <see langword="null" /> if response caching was disabled.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheKey">
      <MemberSignature Language="C#" Value="public string? CacheKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.CacheKey" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheKey As String" />
      <MemberSignature Language="F#" Value="member this.CacheKey : string with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.CacheKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CacheKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the cache key for the cached model response for the chat conversation turn.
            </summary>
        <value>To be added.</value>
        <remarks>
            Returns <see langword="null" /> if response caching was disabled.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Latency">
      <MemberSignature Language="C#" Value="public TimeSpan Latency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Latency" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.Latency" />
      <MemberSignature Language="VB.NET" Value="Public Property Latency As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.Latency : TimeSpan with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.Latency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Latency { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the duration between the time when the request was sent to the LLM and the time when the response
            was received for the chat conversation turn.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public string? Model { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.Model" />
      <MemberSignature Language="VB.NET" Value="Public Property Model As String" />
      <MemberSignature Language="F#" Value="member this.Model : string with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.Model" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Model { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the model that was used in the creation of the response for the chat conversation turn.
            </summary>
        <value>To be added.</value>
        <remarks>
            Returns <see langword="null" /> if this information was not available via <see cref="P:Microsoft.Extensions.AI.ChatResponse.ModelId" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelProvider">
      <MemberSignature Language="C#" Value="public string? ModelProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ModelProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.ModelProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property ModelProvider As String" />
      <MemberSignature Language="F#" Value="member this.ModelProvider : string with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.ModelProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ModelProvider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the provider for the model identified by <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.Model" />.
            </summary>
        <value>To be added.</value>
        <remarks>
            Can be <see langword="null" /> if this information was not available via the <see cref="T:Microsoft.Extensions.AI.ChatClientMetadata" />
            for the <see cref="T:Microsoft.Extensions.AI.IChatClient" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Usage">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.UsageDetails? Usage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.UsageDetails Usage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.Usage" />
      <MemberSignature Language="VB.NET" Value="Public Property Usage As UsageDetails" />
      <MemberSignature Language="F#" Value="member this.Usage : Microsoft.Extensions.AI.UsageDetails with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.Usage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::AI::UsageDetails ^ Usage { Microsoft::Extensions::AI::UsageDetails ^ get(); void set(Microsoft::Extensions::AI::UsageDetails ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.UsageDetails</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets usage details for the chat conversation turn (including input and output token counts).
            </summary>
        <value>To be added.</value>
        <remarks>
            Returns <see langword="null" /> if usage details were not available via <see cref="P:Microsoft.Extensions.AI.ChatResponse.Usage" />.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

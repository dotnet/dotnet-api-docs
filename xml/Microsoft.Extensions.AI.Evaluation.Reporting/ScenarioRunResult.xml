<Type Name="ScenarioRunResult" FullName="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult">
  <TypeSignature Language="C#" Value="public sealed class ScenarioRunResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ScenarioRunResult extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ScenarioRunResult" />
  <TypeSignature Language="F#" Value="type ScenarioRunResult = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScenarioRunResult sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <param name="scenarioName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName" />.</param>
    <param name="iterationName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName" />.</param>
    <param name="executionName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName" />.</param>
    <param name="creationTime">The time at which this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> was created.</param>
    <param name="messages">
            The conversation history including the request that produced the <paramref name="modelResponse" /> being evaluated.
            </param>
    <param name="modelResponse">The response being evaluated.</param>
    <param name="evaluationResult">
            The <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> for the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> corresponding to the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> being constructed.
            </param>
    <param name="chatDetails">
            An optional <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" /> object that contains details related to all LLM chat conversation
            turns involved in the execution of the the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> corresponding to the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> being constructed. Can be <see langword="null" /> if none of the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />s invoked during the execution of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> use an LLM.
            </param>
    <param name="tags">An optional set of text tags applicable to this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.</param>
    <param name="formatVersion">
            The version of the format used to persist the current <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.
            </param>
    <summary>
            Represents the results of a single execution of a particular iteration of a particular scenario under evaluation.
            In other words, <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> represents the results of evaluating a <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />
            and includes the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> that is produced when
            <see cref="M:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.EvaluateAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatResponse,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)" />
            is invoked.
            </summary>
    <remarks>
            Each execution of an evaluation run is assigned a unique <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ExecutionName" />. A single such evaluation run
            can contain evaluations for multiple scenarios each with a unique <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ScenarioName" />. The execution of each
            such scenario in turn can include multiple iterations each with a unique <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.IterationName" />.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScenarioRunResult (string scenarioName, string iterationName, string executionName, DateTime creationTime, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt; messages, Microsoft.Extensions.AI.ChatResponse modelResponse, Microsoft.Extensions.AI.Evaluation.EvaluationResult evaluationResult, Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails? chatDetails = default, System.Collections.Generic.IEnumerable&lt;string&gt;? tags = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scenarioName, string iterationName, string executionName, valuetype System.DateTime creationTime, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; messages, class Microsoft.Extensions.AI.ChatResponse modelResponse, class Microsoft.Extensions.AI.Evaluation.EvaluationResult evaluationResult, class Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails chatDetails, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.#ctor(System.String,System.String,System.String,System.DateTime,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatResponse,Microsoft.Extensions.AI.Evaluation.EvaluationResult,Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scenarioName As String, iterationName As String, executionName As String, creationTime As DateTime, messages As IEnumerable(Of ChatMessage), modelResponse As ChatResponse, evaluationResult As EvaluationResult, Optional chatDetails As ChatDetails = Nothing, Optional tags As IEnumerable(Of String) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult : string * string * string * DateTime * seq&lt;Microsoft.Extensions.AI.ChatMessage&gt; * Microsoft.Extensions.AI.ChatResponse * Microsoft.Extensions.AI.Evaluation.EvaluationResult * Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails * seq&lt;string&gt; -&gt; Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" Usage="new Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult (scenarioName, iterationName, executionName, creationTime, messages, modelResponse, evaluationResult, chatDetails, tags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scenarioName" Type="System.String" />
        <Parameter Name="iterationName" Type="System.String" />
        <Parameter Name="executionName" Type="System.String" />
        <Parameter Name="creationTime" Type="System.DateTime" />
        <Parameter Name="messages" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt;" />
        <Parameter Name="modelResponse" Type="Microsoft.Extensions.AI.ChatResponse" />
        <Parameter Name="evaluationResult" Type="Microsoft.Extensions.AI.Evaluation.EvaluationResult" />
        <Parameter Name="chatDetails" Type="Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="scenarioName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName" />.</param>
        <param name="iterationName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName" />.</param>
        <param name="executionName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName" />.</param>
        <param name="creationTime">The time at which this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> was created.</param>
        <param name="messages">
            The conversation history including the request that produced the <paramref name="modelResponse" /> being
            evaluated.
            </param>
        <param name="modelResponse">The response being evaluated.</param>
        <param name="evaluationResult">
            The <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> for the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> corresponding to the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> being constructed.
            </param>
        <param name="chatDetails">
            An optional <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" /> object that contains details related to all LLM chat
            conversation turns involved in the execution of the the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> corresponding to the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> being constructed. Can be <see langword="null" /> if none of the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />s invoked during the execution of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> use an LLM.
            </param>
        <param name="tags">An optional set of text tags applicable to this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScenarioRunResult (string scenarioName, string iterationName, string executionName, DateTime creationTime, System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; messages, Microsoft.Extensions.AI.ChatResponse modelResponse, Microsoft.Extensions.AI.Evaluation.EvaluationResult evaluationResult, Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails? chatDetails = default, System.Collections.Generic.IList&lt;string&gt;? tags = default, int? formatVersion = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scenarioName, string iterationName, string executionName, valuetype System.DateTime creationTime, class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; messages, class Microsoft.Extensions.AI.ChatResponse modelResponse, class Microsoft.Extensions.AI.Evaluation.EvaluationResult evaluationResult, class Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails chatDetails, class System.Collections.Generic.IList`1&lt;string&gt; tags, valuetype System.Nullable`1&lt;int32&gt; formatVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.#ctor(System.String,System.String,System.String,System.DateTime,System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatResponse,Microsoft.Extensions.AI.Evaluation.EvaluationResult,Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails,System.Collections.Generic.IList{System.String},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scenarioName As String, iterationName As String, executionName As String, creationTime As DateTime, messages As IList(Of ChatMessage), modelResponse As ChatResponse, evaluationResult As EvaluationResult, Optional chatDetails As ChatDetails = Nothing, Optional tags As IList(Of String) = Nothing, Optional formatVersion As Nullable(Of Integer) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult : string * string * string * DateTime * System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; * Microsoft.Extensions.AI.ChatResponse * Microsoft.Extensions.AI.Evaluation.EvaluationResult * Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails * System.Collections.Generic.IList&lt;string&gt; * Nullable&lt;int&gt; -&gt; Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" Usage="new Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult (scenarioName, iterationName, executionName, creationTime, messages, modelResponse, evaluationResult, chatDetails, tags, formatVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonConstructor]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonConstructor&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="scenarioName" Type="System.String" />
        <Parameter Name="iterationName" Type="System.String" />
        <Parameter Name="executionName" Type="System.String" />
        <Parameter Name="creationTime" Type="System.DateTime" />
        <Parameter Name="messages" Type="System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;" />
        <Parameter Name="modelResponse" Type="Microsoft.Extensions.AI.ChatResponse" />
        <Parameter Name="evaluationResult" Type="Microsoft.Extensions.AI.Evaluation.EvaluationResult" />
        <Parameter Name="chatDetails" Type="Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="tags" Type="System.Collections.Generic.IList&lt;System.String&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="formatVersion" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="scenarioName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName" />.</param>
        <param name="iterationName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName" />.</param>
        <param name="executionName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName" />.</param>
        <param name="creationTime">The time at which this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> was created.</param>
        <param name="messages">
            The conversation history including the request that produced the <paramref name="modelResponse" /> being evaluated.
            </param>
        <param name="modelResponse">The response being evaluated.</param>
        <param name="evaluationResult">
            The <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> for the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> corresponding to the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> being constructed.
            </param>
        <param name="chatDetails">
            An optional <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" /> object that contains details related to all LLM chat conversation
            turns involved in the execution of the the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> corresponding to the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> being constructed. Can be <see langword="null" /> if none of the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />s invoked during the execution of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> use an LLM.
            </param>
        <param name="tags">An optional set of text tags applicable to this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.</param>
        <param name="formatVersion">
            The version of the format used to persist the current <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.
            </param>
        <summary>
            Represents the results of a single execution of a particular iteration of a particular scenario under evaluation.
            In other words, <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> represents the results of evaluating a <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />
            and includes the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> that is produced when
            <see cref="M:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.EvaluateAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatResponse,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)" />
            is invoked.
            </summary>
        <remarks>
            Each execution of an evaluation run is assigned a unique <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ExecutionName" />. A single such evaluation run
            can contain evaluations for multiple scenarios each with a unique <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ScenarioName" />. The execution of each
            such scenario in turn can include multiple iterations each with a unique <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.IterationName" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChatDetails">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails? ChatDetails { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails ChatDetails" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ChatDetails" />
      <MemberSignature Language="VB.NET" Value="Public Property ChatDetails As ChatDetails" />
      <MemberSignature Language="F#" Value="member this.ChatDetails : Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ChatDetails" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::AI::Evaluation::Reporting::ChatDetails ^ ChatDetails { Microsoft::Extensions::AI::Evaluation::Reporting::ChatDetails ^ get(); void set(Microsoft::Extensions::AI::Evaluation::Reporting::ChatDetails ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an optional <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" /> object that contains details related to all LLM
            chat conversation turns involved in the execution of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> corresponding to this
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.
            </summary>
        <value>To be added.</value>
        <remarks>
            Can be <see langword="null" /> if none of the <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />s invoked during the execution of the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> use an LLM.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreationTime">
      <MemberSignature Language="C#" Value="public DateTime CreationTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CreationTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.CreationTime" />
      <MemberSignature Language="VB.NET" Value="Public Property CreationTime As DateTime" />
      <MemberSignature Language="F#" Value="member this.CreationTime : DateTime with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.CreationTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CreationTime { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the time at which this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> was created.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationResult">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.Evaluation.EvaluationResult EvaluationResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.Evaluation.EvaluationResult EvaluationResult" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.EvaluationResult" />
      <MemberSignature Language="VB.NET" Value="Public Property EvaluationResult As EvaluationResult" />
      <MemberSignature Language="F#" Value="member this.EvaluationResult : Microsoft.Extensions.AI.Evaluation.EvaluationResult with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.EvaluationResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::AI::Evaluation::EvaluationResult ^ EvaluationResult { Microsoft::Extensions::AI::Evaluation::EvaluationResult ^ get(); void set(Microsoft::Extensions::AI::Evaluation::EvaluationResult ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.Evaluation.EvaluationResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> for the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> corresponding to
            this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.
            </summary>
        <value>To be added.</value>
        <remarks>
            This is the same <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> that is returned when
            <see cref="M:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.EvaluateAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatResponse,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)" />
            is invoked.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionName">
      <MemberSignature Language="C#" Value="public string ExecutionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExecutionName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ExecutionName" />
      <MemberSignature Language="VB.NET" Value="Public Property ExecutionName As String" />
      <MemberSignature Language="F#" Value="member this.ExecutionName : string with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ExecutionName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExecutionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatVersion">
      <MemberSignature Language="C#" Value="public int? FormatVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; FormatVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.FormatVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatVersion As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.FormatVersion : Nullable&lt;int&gt; with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.FormatVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; FormatVersion { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the version of the format used to persist the current <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IterationName">
      <MemberSignature Language="C#" Value="public string IterationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IterationName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.IterationName" />
      <MemberSignature Language="VB.NET" Value="Public Property IterationName As String" />
      <MemberSignature Language="F#" Value="member this.IterationName : string with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.IterationName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IterationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Messages">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; Messages { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; Messages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.Messages" />
      <MemberSignature Language="VB.NET" Value="Public Property Messages As IList(Of ChatMessage)" />
      <MemberSignature Language="F#" Value="member this.Messages : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.Messages" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ Messages { System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the conversation history including the request that produced the <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ModelResponse" /> being
            evaluated in this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelResponse">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.ChatResponse ModelResponse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.ChatResponse ModelResponse" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ModelResponse" />
      <MemberSignature Language="VB.NET" Value="Public Property ModelResponse As ChatResponse" />
      <MemberSignature Language="F#" Value="member this.ModelResponse : Microsoft.Extensions.AI.ChatResponse with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ModelResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::AI::ChatResponse ^ ModelResponse { Microsoft::Extensions::AI::ChatResponse ^ get(); void set(Microsoft::Extensions::AI::ChatResponse ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.ChatResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the response being evaluated in this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScenarioName">
      <MemberSignature Language="C#" Value="public string ScenarioName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScenarioName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ScenarioName" />
      <MemberSignature Language="VB.NET" Value="Public Property ScenarioName As String" />
      <MemberSignature Language="F#" Value="member this.ScenarioName : string with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ScenarioName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScenarioName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tags">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt;? Tags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; Tags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.Tags" />
      <MemberSignature Language="VB.NET" Value="Public Property Tags As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.Tags : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.Tags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::String ^&gt; ^ Tags { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a set of text tags applicable to this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ChatDetailsExtensions" FullName="Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetailsExtensions">
  <TypeSignature Language="C#" Value="public static class ChatDetailsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ChatDetailsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetailsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ChatDetailsExtensions" />
  <TypeSignature Language="F#" Value="type ChatDetailsExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChatDetailsExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
    <AssemblyVersion>9.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extension methods for <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddTurnDetails">
      <MemberSignature Language="C#" Value="public static void AddTurnDetails (this Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails chatDetails, params Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails[] turnDetails);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddTurnDetails(class Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails chatDetails, class Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails[] turnDetails) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetailsExtensions.AddTurnDetails(Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails,Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddTurnDetails (chatDetails As ChatDetails, ParamArray turnDetails As ChatTurnDetails())" />
      <MemberSignature Language="F#" Value="static member AddTurnDetails : Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails * Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails[] -&gt; unit" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetailsExtensions.AddTurnDetails (chatDetails, turnDetails)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddTurnDetails(Microsoft::Extensions::AI::Evaluation::Reporting::ChatDetails ^ chatDetails, ... cli::array &lt;Microsoft::Extensions::AI::Evaluation::Reporting::ChatTurnDetails ^&gt; ^ turnDetails);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chatDetails" Type="Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" RefType="this" />
        <Parameter Name="turnDetails" Type="Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="chatDetails">
            The <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" /> object to which the <paramref name="turnDetails" /> are to be added.
            </param>
        <param name="turnDetails">
            The <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" /> for one or more LLM chat conversation turns.
            </param>
        <summary>
            Adds <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" /> for one or more LLM chat conversation turns to the
            <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails.TurnDetails" /> collection.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTurnDetails">
      <MemberSignature Language="C#" Value="public static void AddTurnDetails (this Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails chatDetails, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails&gt; turnDetails);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddTurnDetails(class Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails chatDetails, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails&gt; turnDetails) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetailsExtensions.AddTurnDetails(Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddTurnDetails (chatDetails As ChatDetails, turnDetails As IEnumerable(Of ChatTurnDetails))" />
      <MemberSignature Language="F#" Value="static member AddTurnDetails : Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails * seq&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails&gt; -&gt; unit" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetailsExtensions.AddTurnDetails (chatDetails, turnDetails)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddTurnDetails(Microsoft::Extensions::AI::Evaluation::Reporting::ChatDetails ^ chatDetails, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::AI::Evaluation::Reporting::ChatTurnDetails ^&gt; ^ turnDetails);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chatDetails" Type="Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" RefType="this" />
        <Parameter Name="turnDetails" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails&gt;" />
      </Parameters>
      <Docs>
        <param name="chatDetails">
            The <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" /> object to which the <paramref name="turnDetails" /> are to be added.
            </param>
        <param name="turnDetails">
            The <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" /> for one or more LLM chat conversation turns.
            </param>
        <summary>
            Adds <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" /> for one or more LLM chat conversation turns to the
            <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails.TurnDetails" /> collection.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

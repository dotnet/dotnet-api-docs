<Type Name="ChatDetails" FullName="Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails">
  <TypeSignature Language="C#" Value="public sealed class ChatDetails" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ChatDetails extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ChatDetails" />
  <TypeSignature Language="F#" Value="type ChatDetails = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChatDetails sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
    <AssemblyVersion>9.5.0.0</AssemblyVersion>
    <AssemblyVersion>9.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A class that records details related to all LLM chat conversation turns involved in the execution of a particular
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatDetails (params Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails[] turnDetails);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails[] turnDetails) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails.#ctor(Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray turnDetails As ChatTurnDetails())" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails : Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails[] -&gt; Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" Usage="new Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails turnDetails" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChatDetails(... cli::array &lt;Microsoft::Extensions::AI::Evaluation::Reporting::ChatTurnDetails ^&gt; ^ turnDetails);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="turnDetails" Type="Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="turnDetails">
            An array of <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" /> objects.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatDetails (System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails&gt; turnDetails);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails&gt; turnDetails) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (turnDetails As IEnumerable(Of ChatTurnDetails))" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails : seq&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails&gt; -&gt; Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" Usage="new Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails turnDetails" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChatDetails(System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::AI::Evaluation::Reporting::ChatTurnDetails ^&gt; ^ turnDetails);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="turnDetails" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails&gt;" />
      </Parameters>
      <Docs>
        <param name="turnDetails">
            An enumeration of <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" /> objects.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatDetails (System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails&gt; turnDetails);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails&gt; turnDetails) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (turnDetails As IList(Of ChatTurnDetails))" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails&gt; -&gt; Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" Usage="new Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails turnDetails" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChatDetails(System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::Evaluation::Reporting::ChatTurnDetails ^&gt; ^ turnDetails);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonConstructor]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonConstructor&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="turnDetails" Type="System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails&gt;" />
      </Parameters>
      <Docs>
        <param name="turnDetails">
            A list of <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" /> objects.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TurnDetails">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails&gt; TurnDetails { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails&gt; TurnDetails" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails.TurnDetails" />
      <MemberSignature Language="VB.NET" Value="Public Property TurnDetails As IList(Of ChatTurnDetails)" />
      <MemberSignature Language="F#" Value="member this.TurnDetails : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails&gt; with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails.TurnDetails" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::Evaluation::Reporting::ChatTurnDetails ^&gt; ^ TurnDetails { System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::Evaluation::Reporting::ChatTurnDetails ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::Evaluation::Reporting::ChatTurnDetails ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>9.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" /> for the LLM chat conversation turns recorded in this
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" /> object.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="MediaPermissionAttribute" FullName="System.Security.Permissions.MediaPermissionAttribute">
  <TypeSignature Language="C#" Value="public sealed class MediaPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MediaPermissionAttribute extends System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.MediaPermissionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MediaPermissionAttribute&#xA;Inherits CodeAccessSecurityAttribute" />
  <TypeSignature Language="F#" Value="type MediaPermissionAttribute = class&#xA;    inherit CodeAccessSecurityAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class MediaPermissionAttribute sealed : System::Security::Permissions::CodeAccessSecurityAttribute" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="WindowsBase" FromVersion="4.0.0.0" To="System.Security.Permissions" ToVersion="4.0.2.0" FrameworkAlternate="windowsdesktop-3.0" />
    <TypeForwarding From="WindowsBase" FromVersion="4.0.0.0" To="System.Security.Permissions" ToVersion="4.0.3.0" FrameworkAlternate="windowsdesktop-3.1" />
    <TypeForwarding From="WindowsBase" FromVersion="5.0.0.0" To="System.Security.Permissions" ToVersion="5.0.0.0" FrameworkAlternate="windowsdesktop-5.0" />
    <TypeForwarding From="WindowsBase" FromVersion="6.0.0.0" To="System.Security.Permissions" ToVersion="6.0.0.0" FrameworkAlternate="windowsdesktop-6.0" />
    <TypeForwarding From="WindowsBase" FromVersion="7.0.0.0" To="System.Security.Permissions" ToVersion="7.0.0.0" FrameworkAlternate="windowsdesktop-7.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Security.Permissions.CodeAccessSecurityAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Struct, AllowMultiple=true, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Struct, AllowMultiple=true, Inherited=false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="dotnet-plat-ext-5.0;dotnet-plat-ext-6.0;dotnet-plat-ext-7.0;windowsdesktop-5.0;windowsdesktop-6.0;windowsdesktop-7.0">
      <AttributeName Language="C#">[System.Obsolete("Code Access Security is not supported or honored by the runtime.", DiagnosticId="SYSLIB0003", UrlFormat="https://aka.ms/dotnet-warnings/{0}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Code Access Security is not supported or honored by the runtime.", DiagnosticId="SYSLIB0003", UrlFormat="https://aka.ms/dotnet-warnings/{0}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Allows security actions for <see cref="T:System.Security.Permissions.MediaPermission" /> to be applied to code using declarative security.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

[!INCLUDE[cas-deprecated](~/includes/cas-deprecated.md)]

 <xref:System.Security.Permissions.MediaPermissionAttribute> controls the ability for audio, image, and video media to work in a partial-trust Windows Presentation Foundation (WPF) application. The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.  
  
 The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. For imperative security, use the corresponding permission class, <xref:System.Security.Permissions.MediaPermission>.
  
## Examples  
 The following example shows how to demand that the calling code has unrestricted <xref:System.Security.Permissions.MediaPermissionAudio> at link time. Demands are typically made in managed libraries (DLLs) to help protect methods or classes from potentially harmful code.  
  
 :::code language="csharp" source="~/snippets/csharp/System.Security.Permissions/MediaPermission/.ctor/Window1.xaml.cs" id="Snippetmediapermissionattribute1":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Wpf/SecurityPermissionsSnippets/visualbasic/window1.xaml.vb" id="Snippetmediapermissionattribute1":::  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/attributes/">Extending Metadata Using Attributes</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaPermissionAttribute (System.Security.Permissions.SecurityAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.SecurityAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As SecurityAction)" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.MediaPermissionAttribute : System.Security.Permissions.SecurityAction -&gt; System.Security.Permissions.MediaPermissionAttribute" Usage="new System.Security.Permissions.MediaPermissionAttribute action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MediaPermissionAttribute(System::Security::Permissions::SecurityAction action);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
      </Parameters>
      <Docs>
        <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        <summary>Initializes a new instance of <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default media values are <xref:System.Security.Permissions.MediaPermissionAudio.AllAudio>, <xref:System.Security.Permissions.MediaPermissionImage.NoImage>, and <xref:System.Security.Permissions.MediaPermissionVideo.NoVideo>.  
  
   
  
## Examples  
 The following code example shows how to create a <xref:System.Security.Permissions.MediaPermissionAttribute>.  
  
 :::code language="csharp" source="~/snippets/csharp/System.Security.Permissions/MediaPermission/.ctor/Window1.xaml.cs" id="Snippetmediapermissionattribute13":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Wpf/SecurityPermissionsSnippets/visualbasic/window1.xaml.vb" id="Snippetmediapermissionattribute13":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Audio">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.MediaPermissionAudio Audio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.MediaPermissionAudio Audio" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.MediaPermissionAttribute.Audio" />
      <MemberSignature Language="VB.NET" Value="Public Property Audio As MediaPermissionAudio" />
      <MemberSignature Language="F#" Value="member this.Audio : System.Security.Permissions.MediaPermissionAudio with get, set" Usage="System.Security.Permissions.MediaPermissionAttribute.Audio" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::MediaPermissionAudio Audio { System::Security::Permissions::MediaPermissionAudio get(); void set(System::Security::Permissions::MediaPermissionAudio value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.MediaPermissionAudio</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the audio permission level for the <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
        <value>The state of the <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default is <xref:System.Security.Permissions.MediaPermissionAudio.SafeAudio>.  
  
   
  
## Examples  
 The following code example shows the use of the <xref:System.Security.Permissions.MediaPermissionAttribute.Audio%2A> property.  
  
 :::code language="csharp" source="~/snippets/csharp/System.Security.Permissions/MediaPermission/.ctor/Window1.xaml.cs" id="Snippetmediapermissionattribute4":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Wpf/SecurityPermissionsSnippets/visualbasic/window1.xaml.vb" id="Snippetmediapermissionattribute4":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission CreatePermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission CreatePermission() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreatePermission () As IPermission" />
      <MemberSignature Language="F#" Value="override this.CreatePermission : unit -&gt; System.Security.IPermission" Usage="mediaPermissionAttribute.CreatePermission " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ CreatePermission();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates and returns a new <see cref="T:System.Security.Permissions.MediaPermission" />.</summary>
        <returns>A <see cref="T:System.Security.Permissions.MediaPermission" /> that corresponds to this attribute.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method should only be called by the security system, never by application code.  
  
 At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.MediaPermissionImage Image { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.MediaPermissionImage Image" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.MediaPermissionAttribute.Image" />
      <MemberSignature Language="VB.NET" Value="Public Property Image As MediaPermissionImage" />
      <MemberSignature Language="F#" Value="member this.Image : System.Security.Permissions.MediaPermissionImage with get, set" Usage="System.Security.Permissions.MediaPermissionAttribute.Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::MediaPermissionImage Image { System::Security::Permissions::MediaPermissionImage get(); void set(System::Security::Permissions::MediaPermissionImage value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.MediaPermissionImage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the image permission level for the <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
        <value>The state of the <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default is <xref:System.Security.Permissions.MediaPermissionImage.SafeImage>.  
  
   
  
## Examples  
 The following code example shows the use of the <xref:System.Security.Permissions.MediaPermissionAttribute.Image%2A> property.  
  
 :::code language="csharp" source="~/snippets/csharp/System.Security.Permissions/MediaPermission/.ctor/Window1.xaml.cs" id="Snippetmediapermissionattribute5":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Wpf/SecurityPermissionsSnippets/visualbasic/window1.xaml.vb" id="Snippetmediapermissionattribute5":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Video">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.MediaPermissionVideo Video { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.MediaPermissionVideo Video" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.MediaPermissionAttribute.Video" />
      <MemberSignature Language="VB.NET" Value="Public Property Video As MediaPermissionVideo" />
      <MemberSignature Language="F#" Value="member this.Video : System.Security.Permissions.MediaPermissionVideo with get, set" Usage="System.Security.Permissions.MediaPermissionAttribute.Video" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::MediaPermissionVideo Video { System::Security::Permissions::MediaPermissionVideo get(); void set(System::Security::Permissions::MediaPermissionVideo value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.MediaPermissionVideo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the video permission level for the <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
        <value>The state of the <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default is <xref:System.Security.Permissions.MediaPermissionVideo.SafeVideo>.  
  
   
  
## Examples  
 The following code example shows the use of the <xref:System.Security.Permissions.MediaPermissionAttribute.Video%2A> property.  
  
 :::code language="csharp" source="~/snippets/csharp/System.Security.Permissions/MediaPermission/.ctor/Window1.xaml.cs" id="Snippetmediapermissionattribute10":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Wpf/SecurityPermissionsSnippets/visualbasic/window1.xaml.vb" id="Snippetmediapermissionattribute10":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

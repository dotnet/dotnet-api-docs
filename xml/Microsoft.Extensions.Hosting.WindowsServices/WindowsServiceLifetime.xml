<Type Name="WindowsServiceLifetime" FullName="Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime">
  <TypeSignature Language="C#" Value="public class WindowsServiceLifetime : System.ServiceProcess.ServiceBase, Microsoft.Extensions.Hosting.IHostLifetime" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WindowsServiceLifetime extends System.ServiceProcess.ServiceBase implements class Microsoft.Extensions.Hosting.IHostLifetime" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsServiceLifetime&#xA;Inherits ServiceBase&#xA;Implements IHostLifetime" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsServiceLifetime : System::ServiceProcess::ServiceBase, Microsoft::Extensions::Hosting::IHostLifetime" />
  <TypeSignature Language="F#" Value="type WindowsServiceLifetime = class&#xA;    inherit ServiceBase&#xA;    interface IHostLifetime" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Hosting.WindowsServices</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceProcess.ServiceBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Hosting.IHostLifetime</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsServiceLifetime (Microsoft.Extensions.Hosting.IHostEnvironment environment, Microsoft.Extensions.Hosting.IHostApplicationLifetime applicationLifetime, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, Microsoft.Extensions.Options.IOptions&lt;Microsoft.Extensions.Hosting.HostOptions&gt; optionsAccessor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Hosting.IHostEnvironment environment, class Microsoft.Extensions.Hosting.IHostApplicationLifetime applicationLifetime, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.Extensions.Hosting.HostOptions&gt; optionsAccessor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.#ctor(Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Hosting.IHostApplicationLifetime,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.HostOptions})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (environment As IHostEnvironment, applicationLifetime As IHostApplicationLifetime, loggerFactory As ILoggerFactory, optionsAccessor As IOptions(Of HostOptions))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsServiceLifetime(Microsoft::Extensions::Hosting::IHostEnvironment ^ environment, Microsoft::Extensions::Hosting::IHostApplicationLifetime ^ applicationLifetime, Microsoft::Extensions::Logging::ILoggerFactory ^ loggerFactory, Microsoft::Extensions::Options::IOptions&lt;Microsoft::Extensions::Hosting::HostOptions ^&gt; ^ optionsAccessor);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime : Microsoft.Extensions.Hosting.IHostEnvironment * Microsoft.Extensions.Hosting.IHostApplicationLifetime * Microsoft.Extensions.Logging.ILoggerFactory * Microsoft.Extensions.Options.IOptions&lt;Microsoft.Extensions.Hosting.HostOptions&gt; -&gt; Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime" Usage="new Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime (environment, applicationLifetime, loggerFactory, optionsAccessor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.WindowsServices</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="environment" Type="Microsoft.Extensions.Hosting.IHostEnvironment" />
        <Parameter Name="applicationLifetime" Type="Microsoft.Extensions.Hosting.IHostApplicationLifetime" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
        <Parameter Name="optionsAccessor" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.Extensions.Hosting.HostOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="environment">To be added.</param>
        <param name="applicationLifetime">To be added.</param>
        <param name="loggerFactory">To be added.</param>
        <param name="optionsAccessor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="windowsServiceLifetime.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.WindowsServices</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStart">
      <MemberSignature Language="C#" Value="protected override void OnStart (string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStart(string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.OnStart(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStart (args As String())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStart(cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.OnStart : string[] -&gt; unit" Usage="windowsServiceLifetime.OnStart args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.WindowsServices</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStop">
      <MemberSignature Language="C#" Value="protected override void OnStop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.OnStop" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStop ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStop();" />
      <MemberSignature Language="F#" Value="override this.OnStop : unit -&gt; unit" Usage="windowsServiceLifetime.OnStop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.WindowsServices</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StopAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task StopAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.StopAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function StopAsync (cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ StopAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member StopAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.StopAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="windowsServiceLifetime.StopAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Hosting.IHostLifetime.StopAsync(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.WindowsServices</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForStartAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WaitForStartAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WaitForStartAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.WaitForStartAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForStartAsync (cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WaitForStartAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member WaitForStartAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WaitForStartAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="windowsServiceLifetime.WaitForStartAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Hosting.IHostLifetime.WaitForStartAsync(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Hosting.WindowsServices</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

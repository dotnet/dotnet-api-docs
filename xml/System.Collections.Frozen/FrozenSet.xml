<Type Name="FrozenSet" FullName="System.Collections.Frozen.FrozenSet">
  <TypeSignature Language="C#" Value="public static class FrozenSet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FrozenSet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Frozen.FrozenSet" />
  <TypeSignature Language="VB.NET" Value="Public Module FrozenSet" />
  <TypeSignature Language="F#" Value="type FrozenSet = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrozenSet abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ToFrozenSet&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Frozen.FrozenSet&lt;T&gt; ToFrozenSet&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source, bool optimizeForReading);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Frozen.FrozenSet`1&lt;!!T&gt; ToFrozenSet&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source, bool optimizeForReading) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Frozen.FrozenSet.ToFrozenSet``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToFrozenSet(Of T) (source As IEnumerable(Of T), optimizeForReading As Boolean) As FrozenSet(Of T)" />
      <MemberSignature Language="F#" Value="static member ToFrozenSet : seq&lt;'T&gt; * bool -&gt; System.Collections.Frozen.FrozenSet&lt;'T&gt;" Usage="System.Collections.Frozen.FrozenSet.ToFrozenSet (source, optimizeForReading)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Frozen::FrozenSet&lt;T&gt; ^ ToFrozenSet(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source, bool optimizeForReading);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Frozen.FrozenSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="optimizeForReading" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="optimizeForReading">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToFrozenSet&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Frozen.FrozenSet&lt;T&gt; ToFrozenSet&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source, System.Collections.Generic.IEqualityComparer&lt;T&gt;? comparer = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Frozen.FrozenSet`1&lt;!!T&gt; ToFrozenSet&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Frozen.FrozenSet.ToFrozenSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToFrozenSet(Of T) (source As IEnumerable(Of T), Optional comparer As IEqualityComparer(Of T) = Nothing) As FrozenSet(Of T)" />
      <MemberSignature Language="F#" Value="static member ToFrozenSet : seq&lt;'T&gt; * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; System.Collections.Frozen.FrozenSet&lt;'T&gt;" Usage="System.Collections.Frozen.FrozenSet.ToFrozenSet (source, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Frozen.FrozenSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="comparer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToFrozenSet&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Frozen.FrozenSet&lt;T&gt; ToFrozenSet&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source, System.Collections.Generic.IEqualityComparer&lt;T&gt;? comparer, bool optimizeForReading);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Frozen.FrozenSet`1&lt;!!T&gt; ToFrozenSet&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; comparer, bool optimizeForReading) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Frozen.FrozenSet.ToFrozenSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToFrozenSet(Of T) (source As IEnumerable(Of T), comparer As IEqualityComparer(Of T), optimizeForReading As Boolean) As FrozenSet(Of T)" />
      <MemberSignature Language="F#" Value="static member ToFrozenSet : seq&lt;'T&gt; * System.Collections.Generic.IEqualityComparer&lt;'T&gt; * bool -&gt; System.Collections.Frozen.FrozenSet&lt;'T&gt;" Usage="System.Collections.Frozen.FrozenSet.ToFrozenSet (source, comparer, optimizeForReading)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Frozen::FrozenSet&lt;T&gt; ^ ToFrozenSet(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ comparer, bool optimizeForReading);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Frozen.FrozenSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
        <Parameter Name="optimizeForReading" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="comparer">To be added.</param>
        <param name="optimizeForReading">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

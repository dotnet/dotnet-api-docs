<Type Name="IBuildEngine7" FullName="Microsoft.Build.Framework.IBuildEngine7">
  <TypeSignature Language="C#" Value="public interface IBuildEngine7 : Microsoft.Build.Framework.IBuildEngine6" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBuildEngine7 implements class Microsoft.Build.Framework.IBuildEngine, class Microsoft.Build.Framework.IBuildEngine2, class Microsoft.Build.Framework.IBuildEngine3, class Microsoft.Build.Framework.IBuildEngine4, class Microsoft.Build.Framework.IBuildEngine5, class Microsoft.Build.Framework.IBuildEngine6" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.IBuildEngine7" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBuildEngine7&#xA;Implements IBuildEngine6" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBuildEngine7 : Microsoft::Build::Framework::IBuildEngine6" />
  <TypeSignature Language="F#" Value="type IBuildEngine7 = interface&#xA;    interface IBuildEngine6&#xA;    interface IBuildEngine5&#xA;    interface IBuildEngine4&#xA;    interface IBuildEngine3&#xA;    interface IBuildEngine2&#xA;    interface IBuildEngine" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine2</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine3</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine4</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine5</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine6</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            This interface extends <see cref="T:Microsoft.Build.Framework.IBuildEngine6" /> to allow tasks to set whether they want to
            log an error when a task returns without logging an error.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowFailureWithoutError">
      <MemberSignature Language="C#" Value="public bool AllowFailureWithoutError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFailureWithoutError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.IBuildEngine7.AllowFailureWithoutError" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowFailureWithoutError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFailureWithoutError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowFailureWithoutError : bool with get, set" Usage="Microsoft.Build.Framework.IBuildEngine7.AllowFailureWithoutError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

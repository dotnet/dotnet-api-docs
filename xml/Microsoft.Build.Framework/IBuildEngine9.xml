<Type Name="IBuildEngine9" FullName="Microsoft.Build.Framework.IBuildEngine9">
  <TypeSignature Language="C#" Value="public interface IBuildEngine9 : Microsoft.Build.Framework.IBuildEngine8" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBuildEngine9 implements class Microsoft.Build.Framework.IBuildEngine, class Microsoft.Build.Framework.IBuildEngine2, class Microsoft.Build.Framework.IBuildEngine3, class Microsoft.Build.Framework.IBuildEngine4, class Microsoft.Build.Framework.IBuildEngine5, class Microsoft.Build.Framework.IBuildEngine6, class Microsoft.Build.Framework.IBuildEngine7, class Microsoft.Build.Framework.IBuildEngine8" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.IBuildEngine9" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBuildEngine9&#xA;Implements IBuildEngine8" />
  <TypeSignature Language="F#" Value="type IBuildEngine9 = interface&#xA;    interface IBuildEngine8&#xA;    interface IBuildEngine7&#xA;    interface IBuildEngine6&#xA;    interface IBuildEngine5&#xA;    interface IBuildEngine4&#xA;    interface IBuildEngine3&#xA;    interface IBuildEngine2&#xA;    interface IBuildEngine" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBuildEngine9 : Microsoft::Build::Framework::IBuildEngine8" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine2</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine3</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine4</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine5</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine6</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine7</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine8</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            This interface extends <see cref="T:Microsoft.Build.Framework.IBuildEngine8" /> to provide resource management API to tasks.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ReleaseCores">
      <MemberSignature Language="C#" Value="public void ReleaseCores (int coresToRelease);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseCores(int32 coresToRelease) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine9.ReleaseCores(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseCores (coresToRelease As Integer)" />
      <MemberSignature Language="F#" Value="abstract member ReleaseCores : int -&gt; unit" Usage="iBuildEngine9.ReleaseCores coresToRelease" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseCores(int coresToRelease);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coresToRelease" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="coresToRelease">Number of cores no longer in use.</param>
        <summary>
            A task should notify the build manager when all or some of the requested cores are not used anymore.
            When task is finished, the cores it requested are automatically released.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestCores">
      <MemberSignature Language="C#" Value="public int RequestCores (int requestedCores);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 RequestCores(int32 requestedCores) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine9.RequestCores(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RequestCores (requestedCores As Integer) As Integer" />
      <MemberSignature Language="F#" Value="abstract member RequestCores : int -&gt; int" Usage="iBuildEngine9.RequestCores requestedCores" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int RequestCores(int requestedCores);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestedCores" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="requestedCores">The number of cores a task can potentially use.</param>
        <summary>
            If a task launches multiple parallel processes, it should ask how many cores it can use.
            </summary>
        <returns>The number of cores a task is allowed to use.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

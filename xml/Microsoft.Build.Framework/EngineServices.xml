<Type Name="EngineServices" FullName="Microsoft.Build.Framework.EngineServices">
  <TypeSignature Language="C#" Value="public abstract class EngineServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit EngineServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.EngineServices" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EngineServices" />
  <TypeSignature Language="F#" Value="type EngineServices = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class EngineServices abstract" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Exposes build engine functionality that was made available in newer versions of MSBuild.
            </summary>
    <remarks>
            Make all members virtual but not abstract, ensuring that implementations can override them and external implementations
            won't break when the class is extended with new members. This base implementation should be throwing <see cref="T:System.NotImplementedException" />.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EngineServices ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.EngineServices.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EngineServices();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTaskInputLoggingEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsTaskInputLoggingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTaskInputLoggingEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.EngineServices.IsTaskInputLoggingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsTaskInputLoggingEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsTaskInputLoggingEnabled : bool" Usage="Microsoft.Build.Framework.EngineServices.IsTaskInputLoggingEnabled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsTaskInputLoggingEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns <see langword="true" /> if the build is configured to log all task inputs.
            </summary>
        <value>To be added.</value>
        <remarks>
            This is a performance optimization allowing tasks to skip expensive double-logging.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogsMessagesOfImportance">
      <MemberSignature Language="C#" Value="public virtual bool LogsMessagesOfImportance (Microsoft.Build.Framework.MessageImportance importance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LogsMessagesOfImportance(valuetype Microsoft.Build.Framework.MessageImportance importance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.EngineServices.LogsMessagesOfImportance(Microsoft.Build.Framework.MessageImportance)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LogsMessagesOfImportance (importance As MessageImportance) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member LogsMessagesOfImportance : Microsoft.Build.Framework.MessageImportance -&gt; bool&#xA;override this.LogsMessagesOfImportance : Microsoft.Build.Framework.MessageImportance -&gt; bool" Usage="engineServices.LogsMessagesOfImportance importance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool LogsMessagesOfImportance(Microsoft::Build::Framework::MessageImportance importance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importance" Type="Microsoft.Build.Framework.MessageImportance" />
      </Parameters>
      <Docs>
        <param name="importance">The importance to check.</param>
        <summary>
            Returns <see langword="true" /> if the given message importance is not guaranteed to be ignored by registered loggers.
            </summary>
        <returns>True if messages of the given importance should be logged, false if it's guaranteed that such messages would be ignored.</returns>
        <remarks>
            Example: If we know that no logger is interested in <see cref="F:Microsoft.Build.Framework.MessageImportance.Low" />, this method returns <see langword="true" />
            for <see cref="F:Microsoft.Build.Framework.MessageImportance.Normal" /> and <see cref="F:Microsoft.Build.Framework.MessageImportance.High" />, and returns <see langword="false" />
            for <see cref="F:Microsoft.Build.Framework.MessageImportance.Low" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public virtual int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.EngineServices.Version" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Version As Integer" />
      <MemberSignature Language="F#" Value="member this.Version : int" Usage="Microsoft.Build.Framework.EngineServices.Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Version { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An explicit version of this class. Must be incremented whenever new members are added. Derived classes should override
            the property to return the version actually being implemented.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version1">
      <MemberSignature Language="C#" Value="public const int Version1 = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Version1 = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Framework.EngineServices.Version1" />
      <MemberSignature Language="VB.NET" Value="Public Const Version1 As Integer  = 1" />
      <MemberSignature Language="F#" Value="val mutable Version1 : int" Usage="Microsoft.Build.Framework.EngineServices.Version1" />
      <MemberSignature Language="C++ CLI" Value="public: int Version1 = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
            Initial version with LogsMessagesOfImportance() and IsTaskInputLoggingEnabled as the only exposed members.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ServiceCollectionExtensions" FullName="Microsoft.Extensions.ML.ServiceCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class ServiceCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ServiceCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.ML.ServiceCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ServiceCollectionExtensions" />
  <TypeSignature Language="F#" Value="type ServiceCollectionExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceCollectionExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.ML</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddPredictionEnginePool&lt;TData,TPrediction&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.ML.PredictionEnginePoolBuilder&lt;TData,TPrediction&gt; AddPredictionEnginePool&lt;TData,TPrediction&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services) where TData : class where TPrediction : class, new();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.ML.PredictionEnginePoolBuilder`2&lt;!!TData, !!TPrediction&gt; AddPredictionEnginePool&lt;class TData, class .ctor TPrediction&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.ML.ServiceCollectionExtensions.AddPredictionEnginePool``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddPredictionEnginePool(Of TData As Class, TPrediction As Class) (services As IServiceCollection) As PredictionEnginePoolBuilder(Of TData, TPrediction)" />
      <MemberSignature Language="F#" Value="static member AddPredictionEnginePool : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.ML.PredictionEnginePoolBuilder&lt;'Data, 'Prediction (requires 'Data : null and 'Prediction : null and 'Prediction : (new : unit -&gt; 'Prediction))&gt; (requires 'Data : null and 'Prediction : null and 'Prediction : (new : unit -&gt; 'Prediction))" Usage="Microsoft.Extensions.ML.ServiceCollectionExtensions.AddPredictionEnginePool services" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TData, typename TPrediction&gt;&#xA; where TData : class where TPrediction : class, gcnew()[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::ML::PredictionEnginePoolBuilder&lt;TData, TPrediction&gt; ^ AddPredictionEnginePool(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.ML.PredictionEnginePoolBuilder&lt;TData,TPrediction&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TData">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TPrediction">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TData">To be added.</typeparam>
        <typeparam name="TPrediction">To be added.</typeparam>
        <param name="services">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPredictionEnginePool&lt;TData,TPrediction&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.ML.PredictionEnginePoolBuilder&lt;TData,TPrediction&gt; AddPredictionEnginePool&lt;TData,TPrediction&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Func&lt;IServiceProvider,Microsoft.Extensions.ML.PredictionEnginePool&lt;TData,TPrediction&gt;&gt; implementationFactory) where TData : class where TPrediction : class, new();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.ML.PredictionEnginePoolBuilder`2&lt;!!TData, !!TPrediction&gt; AddPredictionEnginePool&lt;class TData, class .ctor TPrediction&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Func`2&lt;class System.IServiceProvider, class Microsoft.Extensions.ML.PredictionEnginePool`2&lt;!!TData, !!TPrediction&gt;&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.ML.ServiceCollectionExtensions.AddPredictionEnginePool``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,Microsoft.Extensions.ML.PredictionEnginePool{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddPredictionEnginePool(Of TData As Class, TPrediction As Class) (services As IServiceCollection, implementationFactory As Func(Of IServiceProvider, PredictionEnginePool(Of TData, TPrediction))) As PredictionEnginePoolBuilder(Of TData, TPrediction)" />
      <MemberSignature Language="F#" Value="static member AddPredictionEnginePool : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;IServiceProvider, Microsoft.Extensions.ML.PredictionEnginePool&lt;'Data, 'Prediction&gt;&gt; -&gt; Microsoft.Extensions.ML.PredictionEnginePoolBuilder&lt;'Data, 'Prediction (requires 'Data : null and 'Prediction : null and 'Prediction : (new : unit -&gt; 'Prediction))&gt; (requires 'Data : null and 'Prediction : null and 'Prediction : (new : unit -&gt; 'Prediction))" Usage="Microsoft.Extensions.ML.ServiceCollectionExtensions.AddPredictionEnginePool (services, implementationFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TData, typename TPrediction&gt;&#xA; where TData : class where TPrediction : class, gcnew()[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::ML::PredictionEnginePoolBuilder&lt;TData, TPrediction&gt; ^ AddPredictionEnginePool(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Func&lt;IServiceProvider ^, Microsoft::Extensions::ML::PredictionEnginePool&lt;TData, TPrediction&gt; ^&gt; ^ implementationFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.ML.PredictionEnginePoolBuilder&lt;TData,TPrediction&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TData">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TPrediction">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,Microsoft.Extensions.ML.PredictionEnginePool&lt;TData,TPrediction&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TData">To be added.</typeparam>
        <typeparam name="TPrediction">To be added.</typeparam>
        <param name="services">To be added.</param>
        <param name="implementationFactory">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRequiredPredictionEnginePoolServices">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddRequiredPredictionEnginePoolServices (this Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddRequiredPredictionEnginePoolServices(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.ML.ServiceCollectionExtensions.AddRequiredPredictionEnginePoolServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddRequiredPredictionEnginePoolServices (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddRequiredPredictionEnginePoolServices : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.ML.ServiceCollectionExtensions.AddRequiredPredictionEnginePoolServices services" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddRequiredPredictionEnginePoolServices(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="EvaluationContext" FullName="Microsoft.Extensions.AI.Evaluation.EvaluationContext">
  <TypeSignature Language="C#" Value="public abstract class EvaluationContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EvaluationContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EvaluationContext" />
  <TypeSignature Language="F#" Value="type EvaluationContext = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class EvaluationContext abstract" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            An <see langword="abstract" /> base class that models additional contextual information (beyond that which is
            available in the conversation history) or other data that an <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" /> may need to accurately
            evaluate supplied responses.
            </summary>
    <remarks>
      <para>
        <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" /> objects are intended to be simple data containers that contain the contextual
            information required for evaluation and little (if any) behavior.
            </para>
      <para>
            An <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" /> that needs additional contextual information can require that callers should include an
            instance of a specific derived <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" /> (containing the required contextual information)
            when they call
            <see cref="M:Microsoft.Extensions.AI.Evaluation.IEvaluator.EvaluateAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatResponse,Microsoft.Extensions.AI.Evaluation.ChatConfiguration,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)" />.
            </para>
      <para>
            Derived implementations of <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" /> are free to include any additional properties as needed.
            However, the expectation is that the <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationContext.Contents" /> property will always return a collection of
            <see cref="T:Microsoft.Extensions.AI.AIContent" />s that represent <b>all</b> the contextual information that is modeled by the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" />.
            </para>
      <para>
            This is because an <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" /> can (optionally) choose to record any <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" />s
            that it used, in the <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationMetric.Context" /> property of each <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" /> that it
            produces. When <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s are serialized (for example, as part of the result storage and
            report generation functionality available in the Microsoft.Extensions.AI.Evaluation.Reporting NuGet package), the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" />s recorded within the <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationMetric.Context" /> will also be
            serialized. However, for each such <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" />, only the information captured within
            <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationContext.Contents" /> will be serialized. Any information that is (only) present in custom derived
            properties will not be serialized. Therefore, in order to ensure that the contextual information included as part
            of an <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" /> is stored and reported accurately, it is important to ensure that the
            <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationContext.Contents" /> property returns a collection of <see cref="T:Microsoft.Extensions.AI.AIContent" />s that represent <b>all</b> the
            contextual information that is modeled by the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" />.
            </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EvaluationContext (string name, params Microsoft.Extensions.AI.AIContent[] contents);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, class Microsoft.Extensions.AI.AIContent[] contents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.EvaluationContext.#ctor(System.String,Microsoft.Extensions.AI.AIContent[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String, ParamArray contents As AIContent())" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.Evaluation.EvaluationContext : string * Microsoft.Extensions.AI.AIContent[] -&gt; Microsoft.Extensions.AI.Evaluation.EvaluationContext" Usage="new Microsoft.Extensions.AI.Evaluation.EvaluationContext (name, contents)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EvaluationContext(System::String ^ name, ... cli::array &lt;Microsoft::Extensions::AI::AIContent ^&gt; ^ contents);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="contents" Type="Microsoft.Extensions.AI.AIContent[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">The name of the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" />.</param>
        <param name="contents">
            The contents of the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" />. (See <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationContext.Contents" />.)
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EvaluationContext (string name, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.AIContent&gt; contents);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.AIContent&gt; contents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.EvaluationContext.#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.AIContent})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String, contents As IEnumerable(Of AIContent))" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.Evaluation.EvaluationContext : string * seq&lt;Microsoft.Extensions.AI.AIContent&gt; -&gt; Microsoft.Extensions.AI.Evaluation.EvaluationContext" Usage="new Microsoft.Extensions.AI.Evaluation.EvaluationContext (name, contents)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EvaluationContext(System::String ^ name, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::AI::AIContent ^&gt; ^ contents);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="contents" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.AIContent&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The name of the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" />.</param>
        <param name="contents">
            The contents of the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" />. (See <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationContext.Contents" />.)
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EvaluationContext (string name, string content);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.EvaluationContext.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String, content As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.Evaluation.EvaluationContext : string * string -&gt; Microsoft.Extensions.AI.Evaluation.EvaluationContext" Usage="new Microsoft.Extensions.AI.Evaluation.EvaluationContext (name, content)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EvaluationContext(System::String ^ name, System::String ^ content);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" />.</param>
        <param name="content">
            The content of the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" />. (See <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationContext.Contents" />.)
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.AIContent&gt; Contents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.AIContent&gt; Contents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.EvaluationContext.Contents" />
      <MemberSignature Language="VB.NET" Value="Public Property Contents As IList(Of AIContent)" />
      <MemberSignature Language="F#" Value="member this.Contents : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.AIContent&gt; with get, set" Usage="Microsoft.Extensions.AI.Evaluation.EvaluationContext.Contents" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::AIContent ^&gt; ^ Contents { System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::AIContent ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::AIContent ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.AIContent&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a list of <see cref="T:Microsoft.Extensions.AI.AIContent" /> objects that include all the information present in this
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" />.
            </summary>
        <value>
            A list of <see cref="T:Microsoft.Extensions.AI.AIContent" /> objects that include all the information present in this
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" />.
            </value>
        <remarks>
          <para>
            This property allows decomposition of the information present in an <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" /> into
            <see cref="T:Microsoft.Extensions.AI.TextContent" /> objects for text, <see cref="T:Microsoft.Extensions.AI.DataContent" /> or <see cref="T:Microsoft.Extensions.AI.UriContent" /> objects for
            images, and other similar <see cref="T:Microsoft.Extensions.AI.AIContent" /> objects for other modalities such as audio and video in the
            future.
            </para>
          <para>
            For simple <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" />s that only contain text, this property can return a
            <see cref="T:Microsoft.Extensions.AI.TextContent" /> object that includes the contained text.
            </para>
          <para>
            Derived implementations of <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" /> are free to include any additional properties as
            needed. However, the expectation is that the <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationContext.Contents" /> property will always return a collection of
            <see cref="T:Microsoft.Extensions.AI.AIContent" />s that represent <b>all</b> the contextual information that is modeled by the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" />.
            </para>
          <para>
            This is because an <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" /> can (optionally) choose to record any
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" />s that it used, in the <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationMetric.Context" /> property of each
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" /> that it produces. When <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s are serialized (for
            example, as part of the result storage and report generation functionality available in the
            Microsoft.Extensions.AI.Evaluation.Reporting NuGet package), the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" />s recorded
            within the <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationMetric.Context" /> will also be serialized. However, for each such
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" />, only the information captured within <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationContext.Contents" /> will be
            serialized. Any information that is (only) present in custom derived properties will not be serialized.
            Therefore, in order to ensure that the contextual information included as part of an
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" /> is stored and reported accurately, it is important to ensure that the
            <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationContext.Contents" /> property returns a collection of <see cref="T:Microsoft.Extensions.AI.AIContent" />s that represent <b>all</b> the
            contextual information that is modeled by the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" />.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.EvaluationContext.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.Extensions.AI.Evaluation.EvaluationContext.Name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name for this <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationContext" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

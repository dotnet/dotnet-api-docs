<Type Name="IEvaluator" FullName="Microsoft.Extensions.AI.Evaluation.IEvaluator">
  <TypeSignature Language="C#" Value="public interface IEvaluator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IEvaluator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEvaluator" />
  <TypeSignature Language="F#" Value="type IEvaluator = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEvaluator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Evaluates responses produced by an AI model.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EvaluateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt; EvaluateAsync (System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt; messages, Microsoft.Extensions.AI.ChatMessage modelResponse, Microsoft.Extensions.AI.Evaluation.ChatConfiguration? chatConfiguration = default, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt;? additionalContext = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt; EvaluateAsync(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; messages, class Microsoft.Extensions.AI.ChatMessage modelResponse, class Microsoft.Extensions.AI.Evaluation.ChatConfiguration chatConfiguration, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt; additionalContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.IEvaluator.EvaluateAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatMessage,Microsoft.Extensions.AI.Evaluation.ChatConfiguration,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluateAsync (messages As IEnumerable(Of ChatMessage), modelResponse As ChatMessage, Optional chatConfiguration As ChatConfiguration = Nothing, Optional additionalContext As IEnumerable(Of EvaluationContext) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of EvaluationResult)" />
      <MemberSignature Language="F#" Value="abstract member EvaluateAsync : seq&lt;Microsoft.Extensions.AI.ChatMessage&gt; * Microsoft.Extensions.AI.ChatMessage * Microsoft.Extensions.AI.Evaluation.ChatConfiguration * seq&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt;" Usage="iEvaluator.EvaluateAsync (messages, modelResponse, chatConfiguration, additionalContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-10.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messages" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt;" />
        <Parameter Name="modelResponse" Type="Microsoft.Extensions.AI.ChatMessage" />
        <Parameter Name="chatConfiguration" Type="Microsoft.Extensions.AI.Evaluation.ChatConfiguration">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="additionalContext" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messages">
            The conversation history including the request that produced the supplied <paramref name="modelResponse" />.
            </param>
        <param name="modelResponse">The response that is to be evaluated.</param>
        <param name="chatConfiguration">
            A <see cref="T:Microsoft.Extensions.AI.Evaluation.ChatConfiguration" /> that specifies the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> and the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluationTokenCounter" /> that should be used if the evaluation is performed using an AI model.
            </param>
        <param name="additionalContext">
            Additional contextual information (beyond that which is available in <paramref name="messages" />) that the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" /> may need to accurately evaluate the supplied <paramref name="modelResponse" />.
            </param>
        <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> that can cancel the evaluation operation.
            </param>
        <summary>
            Evaluates the supplied <paramref name="modelResponse" /> and returns an <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" />
            containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.
            </summary>
        <returns>An <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.</returns>
        <remarks>
          <para>
            The <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationMetric.Name" />s of the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s contained in the returned
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> should match <see cref="P:Microsoft.Extensions.AI.Evaluation.IEvaluator.EvaluationMetricNames" />.
            </para>
          <para>
            Also note that <paramref name="chatConfiguration" /> must not be omitted if the evaluation is performed using an
            AI model.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationMetricNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyCollection&lt;string&gt; EvaluationMetricNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;string&gt; EvaluationMetricNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.IEvaluator.EvaluationMetricNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluationMetricNames As IReadOnlyCollection(Of String)" />
      <MemberSignature Language="F#" Value="member this.EvaluationMetricNames : System.Collections.Generic.IReadOnlyCollection&lt;string&gt;" Usage="Microsoft.Extensions.AI.Evaluation.IEvaluator.EvaluationMetricNames" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyCollection&lt;System::String ^&gt; ^ EvaluationMetricNames { System::Collections::Generic::IReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationMetric.Name" />s of the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s produced by this
            <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

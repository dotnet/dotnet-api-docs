<Type Name="EvaluatorExtensions" FullName="Microsoft.Extensions.AI.Evaluation.EvaluatorExtensions">
  <TypeSignature Language="C#" Value="public static class EvaluatorExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EvaluatorExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.Evaluation.EvaluatorExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EvaluatorExtensions" />
  <TypeSignature Language="F#" Value="type EvaluatorExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class EvaluatorExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extension methods for <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EvaluateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt; EvaluateAsync (this Microsoft.Extensions.AI.Evaluation.IEvaluator evaluator, Microsoft.Extensions.AI.ChatMessage modelResponse, Microsoft.Extensions.AI.Evaluation.ChatConfiguration? chatConfiguration = default, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt;? additionalContext = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt; EvaluateAsync(class Microsoft.Extensions.AI.Evaluation.IEvaluator evaluator, class Microsoft.Extensions.AI.ChatMessage modelResponse, class Microsoft.Extensions.AI.Evaluation.ChatConfiguration chatConfiguration, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt; additionalContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.EvaluatorExtensions.EvaluateAsync(Microsoft.Extensions.AI.Evaluation.IEvaluator,Microsoft.Extensions.AI.ChatMessage,Microsoft.Extensions.AI.Evaluation.ChatConfiguration,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EvaluateAsync (evaluator As IEvaluator, modelResponse As ChatMessage, Optional chatConfiguration As ChatConfiguration = Nothing, Optional additionalContext As IEnumerable(Of EvaluationContext) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of EvaluationResult)" />
      <MemberSignature Language="F#" Value="static member EvaluateAsync : Microsoft.Extensions.AI.Evaluation.IEvaluator * Microsoft.Extensions.AI.ChatMessage * Microsoft.Extensions.AI.Evaluation.ChatConfiguration * seq&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt;" Usage="Microsoft.Extensions.AI.Evaluation.EvaluatorExtensions.EvaluateAsync (evaluator, modelResponse, chatConfiguration, additionalContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluator" Type="Microsoft.Extensions.AI.Evaluation.IEvaluator" RefType="this" />
        <Parameter Name="modelResponse" Type="Microsoft.Extensions.AI.ChatMessage" />
        <Parameter Name="chatConfiguration" Type="Microsoft.Extensions.AI.Evaluation.ChatConfiguration">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="additionalContext" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="evaluator">The <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" /> that should perform the evaluation.</param>
        <param name="modelResponse">The response that is to be evaluated.</param>
        <param name="chatConfiguration">
            A <see cref="T:Microsoft.Extensions.AI.Evaluation.ChatConfiguration" /> that specifies the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> and the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluationTokenCounter" /> that should be used if the evaluation is performed using an AI model.
            </param>
        <param name="additionalContext">
            Additional contextual information that the <paramref name="evaluator" /> may need to accurately evaluate the
            supplied <paramref name="modelResponse" />.
            </param>
        <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> that can cancel the evaluation operation.
            </param>
        <summary>
            Evaluates the supplied <paramref name="modelResponse" /> and returns an <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" />
            containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.
            </summary>
        <returns>An <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.</returns>
        <remarks>
          <para>
            The <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationMetric.Name" />s of the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s contained in the returned
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> should match <see cref="P:Microsoft.Extensions.AI.Evaluation.IEvaluator.EvaluationMetricNames" />.
            </para>
          <para>
            Also note that <paramref name="chatConfiguration" /> must not be omitted if the evaluation is performed using an
            AI model.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt; EvaluateAsync (this Microsoft.Extensions.AI.Evaluation.IEvaluator evaluator, string modelResponse, Microsoft.Extensions.AI.Evaluation.ChatConfiguration? chatConfiguration = default, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt;? additionalContext = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt; EvaluateAsync(class Microsoft.Extensions.AI.Evaluation.IEvaluator evaluator, string modelResponse, class Microsoft.Extensions.AI.Evaluation.ChatConfiguration chatConfiguration, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt; additionalContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.EvaluatorExtensions.EvaluateAsync(Microsoft.Extensions.AI.Evaluation.IEvaluator,System.String,Microsoft.Extensions.AI.Evaluation.ChatConfiguration,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EvaluateAsync (evaluator As IEvaluator, modelResponse As String, Optional chatConfiguration As ChatConfiguration = Nothing, Optional additionalContext As IEnumerable(Of EvaluationContext) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of EvaluationResult)" />
      <MemberSignature Language="F#" Value="static member EvaluateAsync : Microsoft.Extensions.AI.Evaluation.IEvaluator * string * Microsoft.Extensions.AI.Evaluation.ChatConfiguration * seq&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt;" Usage="Microsoft.Extensions.AI.Evaluation.EvaluatorExtensions.EvaluateAsync (evaluator, modelResponse, chatConfiguration, additionalContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluator" Type="Microsoft.Extensions.AI.Evaluation.IEvaluator" RefType="this" />
        <Parameter Name="modelResponse" Type="System.String" />
        <Parameter Name="chatConfiguration" Type="Microsoft.Extensions.AI.Evaluation.ChatConfiguration">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="additionalContext" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="evaluator">The <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" /> that should perform the evaluation.</param>
        <param name="modelResponse">The response that is to be evaluated.</param>
        <param name="chatConfiguration">
            A <see cref="T:Microsoft.Extensions.AI.Evaluation.ChatConfiguration" /> that specifies the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> and the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluationTokenCounter" /> that should be used if the evaluation is performed using an AI model.
            </param>
        <param name="additionalContext">
            Additional contextual information that the <paramref name="evaluator" /> may need to accurately evaluate the
            supplied <paramref name="modelResponse" />.
            </param>
        <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> that can cancel the evaluation operation.
            </param>
        <summary>
            Evaluates the supplied <paramref name="modelResponse" /> and returns an <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" />
            containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.
            </summary>
        <returns>An <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.</returns>
        <remarks>
          <para>
            The <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationMetric.Name" />s of the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s contained in the returned
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> should match <see cref="P:Microsoft.Extensions.AI.Evaluation.IEvaluator.EvaluationMetricNames" />.
            </para>
          <para>
            Also note that <paramref name="chatConfiguration" /> must not be omitted if the evaluation is performed using an
            AI model.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt; EvaluateAsync (this Microsoft.Extensions.AI.Evaluation.IEvaluator evaluator, Microsoft.Extensions.AI.ChatMessage userRequest, Microsoft.Extensions.AI.ChatMessage modelResponse, Microsoft.Extensions.AI.Evaluation.ChatConfiguration? chatConfiguration = default, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt;? additionalContext = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt; EvaluateAsync(class Microsoft.Extensions.AI.Evaluation.IEvaluator evaluator, class Microsoft.Extensions.AI.ChatMessage userRequest, class Microsoft.Extensions.AI.ChatMessage modelResponse, class Microsoft.Extensions.AI.Evaluation.ChatConfiguration chatConfiguration, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt; additionalContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.EvaluatorExtensions.EvaluateAsync(Microsoft.Extensions.AI.Evaluation.IEvaluator,Microsoft.Extensions.AI.ChatMessage,Microsoft.Extensions.AI.ChatMessage,Microsoft.Extensions.AI.Evaluation.ChatConfiguration,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EvaluateAsync (evaluator As IEvaluator, userRequest As ChatMessage, modelResponse As ChatMessage, Optional chatConfiguration As ChatConfiguration = Nothing, Optional additionalContext As IEnumerable(Of EvaluationContext) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of EvaluationResult)" />
      <MemberSignature Language="F#" Value="static member EvaluateAsync : Microsoft.Extensions.AI.Evaluation.IEvaluator * Microsoft.Extensions.AI.ChatMessage * Microsoft.Extensions.AI.ChatMessage * Microsoft.Extensions.AI.Evaluation.ChatConfiguration * seq&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt;" Usage="Microsoft.Extensions.AI.Evaluation.EvaluatorExtensions.EvaluateAsync (evaluator, userRequest, modelResponse, chatConfiguration, additionalContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluator" Type="Microsoft.Extensions.AI.Evaluation.IEvaluator" RefType="this" />
        <Parameter Name="userRequest" Type="Microsoft.Extensions.AI.ChatMessage" />
        <Parameter Name="modelResponse" Type="Microsoft.Extensions.AI.ChatMessage" />
        <Parameter Name="chatConfiguration" Type="Microsoft.Extensions.AI.Evaluation.ChatConfiguration">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="additionalContext" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="evaluator">The <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" /> that should perform the evaluation.</param>
        <param name="userRequest">
            The request that produced the <paramref name="modelResponse" /> that is to be evaluated.
            </param>
        <param name="modelResponse">The response that is to be evaluated.</param>
        <param name="chatConfiguration">
            A <see cref="T:Microsoft.Extensions.AI.Evaluation.ChatConfiguration" /> that specifies the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> and the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluationTokenCounter" /> that should be used if the evaluation is performed using an AI model.
            </param>
        <param name="additionalContext">
            Additional contextual information (beyond that which is available in <paramref name="userRequest" />) that the
            <paramref name="evaluator" /> may need to accurately evaluate the supplied <paramref name="modelResponse" />.
            </param>
        <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> that can cancel the evaluation operation.
            </param>
        <summary>
            Evaluates the supplied <paramref name="modelResponse" /> and returns an <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" />
            containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.
            </summary>
        <returns>An <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.</returns>
        <remarks>
          <para>
            The <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationMetric.Name" />s of the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s contained in the returned
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> should match <see cref="P:Microsoft.Extensions.AI.Evaluation.IEvaluator.EvaluationMetricNames" />.
            </para>
          <para>
            Also note that <paramref name="chatConfiguration" /> must not be omitted if the evaluation is performed using an
            AI model.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt; EvaluateAsync (this Microsoft.Extensions.AI.Evaluation.IEvaluator evaluator, string userRequest, string modelResponse, Microsoft.Extensions.AI.Evaluation.ChatConfiguration? chatConfiguration = default, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt;? additionalContext = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt; EvaluateAsync(class Microsoft.Extensions.AI.Evaluation.IEvaluator evaluator, string userRequest, string modelResponse, class Microsoft.Extensions.AI.Evaluation.ChatConfiguration chatConfiguration, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt; additionalContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.EvaluatorExtensions.EvaluateAsync(Microsoft.Extensions.AI.Evaluation.IEvaluator,System.String,System.String,Microsoft.Extensions.AI.Evaluation.ChatConfiguration,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EvaluateAsync (evaluator As IEvaluator, userRequest As String, modelResponse As String, Optional chatConfiguration As ChatConfiguration = Nothing, Optional additionalContext As IEnumerable(Of EvaluationContext) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of EvaluationResult)" />
      <MemberSignature Language="F#" Value="static member EvaluateAsync : Microsoft.Extensions.AI.Evaluation.IEvaluator * string * string * Microsoft.Extensions.AI.Evaluation.ChatConfiguration * seq&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt;" Usage="Microsoft.Extensions.AI.Evaluation.EvaluatorExtensions.EvaluateAsync (evaluator, userRequest, modelResponse, chatConfiguration, additionalContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.Extensions.AI.Evaluation.EvaluationResult&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluator" Type="Microsoft.Extensions.AI.Evaluation.IEvaluator" RefType="this" />
        <Parameter Name="userRequest" Type="System.String" />
        <Parameter Name="modelResponse" Type="System.String" />
        <Parameter Name="chatConfiguration" Type="Microsoft.Extensions.AI.Evaluation.ChatConfiguration">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="additionalContext" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationContext&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="evaluator">The <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" /> that should perform the evaluation.</param>
        <param name="userRequest">
            The request that produced the <paramref name="modelResponse" /> that is to be evaluated.
            </param>
        <param name="modelResponse">The response that is to be evaluated.</param>
        <param name="chatConfiguration">
            A <see cref="T:Microsoft.Extensions.AI.Evaluation.ChatConfiguration" /> that specifies the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> and the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluationTokenCounter" /> that should be used if the evaluation is performed using an AI model.
            </param>
        <param name="additionalContext">
            Additional contextual information (beyond that which is available in <paramref name="userRequest" />) that the
            <paramref name="evaluator" /> may need to accurately evaluate the supplied <paramref name="modelResponse" />.
            </param>
        <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> that can cancel the evaluation operation.
            </param>
        <summary>
            Evaluates the supplied <paramref name="modelResponse" /> and returns an <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" />
            containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.
            </summary>
        <returns>An <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.</returns>
        <remarks>
          <para>
            The <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationMetric.Name" />s of the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s contained in the returned
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> should match <see cref="P:Microsoft.Extensions.AI.Evaluation.IEvaluator.EvaluationMetricNames" />.
            </para>
          <para>
            Also note that <paramref name="chatConfiguration" /> must not be omitted if the evaluation is performed using an
            AI model.
            </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="EvaluationResult" FullName="Microsoft.Extensions.AI.Evaluation.EvaluationResult">
  <TypeSignature Language="C#" Value="public sealed class EvaluationResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EvaluationResult extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EvaluationResult" />
  <TypeSignature Language="F#" Value="type EvaluationResult = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class EvaluationResult sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EvaluationResult (params Microsoft.Extensions.AI.Evaluation.EvaluationMetric[] metrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.AI.Evaluation.EvaluationMetric[] metrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.EvaluationResult.#ctor(Microsoft.Extensions.AI.Evaluation.EvaluationMetric[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray metrics As EvaluationMetric())" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.Evaluation.EvaluationResult : Microsoft.Extensions.AI.Evaluation.EvaluationMetric[] -&gt; Microsoft.Extensions.AI.Evaluation.EvaluationResult" Usage="new Microsoft.Extensions.AI.Evaluation.EvaluationResult metrics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EvaluationResult(... cli::array &lt;Microsoft::Extensions::AI::Evaluation::EvaluationMetric ^&gt; ^ metrics);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metrics" Type="Microsoft.Extensions.AI.Evaluation.EvaluationMetric[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="metrics">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EvaluationResult (System.Collections.Generic.IDictionary&lt;string,Microsoft.Extensions.AI.Evaluation.EvaluationMetric&gt; metrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Extensions.AI.Evaluation.EvaluationMetric&gt; metrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.EvaluationResult.#ctor(System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.AI.Evaluation.EvaluationMetric})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metrics As IDictionary(Of String, EvaluationMetric))" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.Evaluation.EvaluationResult : System.Collections.Generic.IDictionary&lt;string, Microsoft.Extensions.AI.Evaluation.EvaluationMetric&gt; -&gt; Microsoft.Extensions.AI.Evaluation.EvaluationResult" Usage="new Microsoft.Extensions.AI.Evaluation.EvaluationResult metrics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EvaluationResult(System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::AI::Evaluation::EvaluationMetric ^&gt; ^ metrics);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonConstructor]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonConstructor&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="metrics" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Extensions.AI.Evaluation.EvaluationMetric&gt;" />
      </Parameters>
      <Docs>
        <param name="metrics">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EvaluationResult (System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationMetric&gt; metrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationMetric&gt; metrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.EvaluationResult.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationMetric})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metrics As IEnumerable(Of EvaluationMetric))" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.Evaluation.EvaluationResult : seq&lt;Microsoft.Extensions.AI.Evaluation.EvaluationMetric&gt; -&gt; Microsoft.Extensions.AI.Evaluation.EvaluationResult" Usage="new Microsoft.Extensions.AI.Evaluation.EvaluationResult metrics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EvaluationResult(System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::AI::Evaluation::EvaluationMetric ^&gt; ^ metrics);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metrics" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationMetric&gt;" />
      </Parameters>
      <Docs>
        <param name="metrics">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Get&lt;T&gt; (string metricName) where T : Microsoft.Extensions.AI.Evaluation.EvaluationMetric;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Get&lt;(class Microsoft.Extensions.AI.Evaluation.EvaluationMetric) T&gt;(string metricName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.EvaluationResult.Get``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get(Of T As EvaluationMetric) (metricName As String) As T" />
      <MemberSignature Language="F#" Value="member this.Get : string -&gt; 'T (requires 'T :&gt; Microsoft.Extensions.AI.Evaluation.EvaluationMetric)" Usage="evaluationResult.Get metricName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::AI::Evaluation::EvaluationMetric T Get(System::String ^ metricName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Extensions.AI.Evaluation.EvaluationMetric</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="metricName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="metricName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metrics">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Extensions.AI.Evaluation.EvaluationMetric&gt; Metrics { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Extensions.AI.Evaluation.EvaluationMetric&gt; Metrics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.EvaluationResult.Metrics" />
      <MemberSignature Language="VB.NET" Value="Public Property Metrics As IDictionary(Of String, EvaluationMetric)" />
      <MemberSignature Language="F#" Value="member this.Metrics : System.Collections.Generic.IDictionary&lt;string, Microsoft.Extensions.AI.Evaluation.EvaluationMetric&gt; with get, set" Usage="Microsoft.Extensions.AI.Evaluation.EvaluationResult.Metrics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::AI::Evaluation::EvaluationMetric ^&gt; ^ Metrics { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::AI::Evaluation::EvaluationMetric ^&gt; ^ get(); void set(System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::AI::Evaluation::EvaluationMetric ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Extensions.AI.Evaluation.EvaluationMetric&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGet&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGet&lt;T&gt; (string metricName, out T? value) where T : Microsoft.Extensions.AI.Evaluation.EvaluationMetric;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGet&lt;(class Microsoft.Extensions.AI.Evaluation.EvaluationMetric) T&gt;(string metricName, [out] !!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.EvaluationResult.TryGet``1(System.String,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGet(Of T As EvaluationMetric) (metricName As String, ByRef value As T) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryGet : string * 'T -&gt; bool (requires 'T :&gt; Microsoft.Extensions.AI.Evaluation.EvaluationMetric)" Usage="evaluationResult.TryGet (metricName, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::AI::Evaluation::EvaluationMetric bool TryGet(System::String ^ metricName, [Runtime::InteropServices::Out] T % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Extensions.AI.Evaluation.EvaluationMetric</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="metricName" Type="System.String" />
        <Parameter Name="value" Type="T" RefType="out">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="net-8.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="metricName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="EvaluationMetricExtensions" FullName="Microsoft.Extensions.AI.Evaluation.EvaluationMetricExtensions">
  <TypeSignature Language="C#" Value="public static class EvaluationMetricExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EvaluationMetricExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetricExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EvaluationMetricExtensions" />
  <TypeSignature Language="F#" Value="type EvaluationMetricExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class EvaluationMetricExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extension methods for <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddDiagnostic">
      <MemberSignature Language="C#" Value="public static void AddDiagnostic (this Microsoft.Extensions.AI.Evaluation.EvaluationMetric metric, Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic diagnostic);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDiagnostic(class Microsoft.Extensions.AI.Evaluation.EvaluationMetric metric, class Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic diagnostic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.EvaluationMetricExtensions.AddDiagnostic(Microsoft.Extensions.AI.Evaluation.EvaluationMetric,Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddDiagnostic (metric As EvaluationMetric, diagnostic As EvaluationDiagnostic)" />
      <MemberSignature Language="F#" Value="static member AddDiagnostic : Microsoft.Extensions.AI.Evaluation.EvaluationMetric * Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic -&gt; unit" Usage="Microsoft.Extensions.AI.Evaluation.EvaluationMetricExtensions.AddDiagnostic (metric, diagnostic)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddDiagnostic(Microsoft::Extensions::AI::Evaluation::EvaluationMetric ^ metric, Microsoft::Extensions::AI::Evaluation::EvaluationDiagnostic ^ diagnostic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metric" Type="Microsoft.Extensions.AI.Evaluation.EvaluationMetric" RefType="this" />
        <Parameter Name="diagnostic" Type="Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic" />
      </Parameters>
      <Docs>
        <param name="metric">The <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />.</param>
        <param name="diagnostic">The <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic" /> to be added.</param>
        <summary>
            Adds the supplied <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic" /> to the supplied <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />'s
            <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationMetric.Diagnostics" /> collection.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDiagnostics">
      <MemberSignature Language="C#" Value="public static void AddDiagnostics (this Microsoft.Extensions.AI.Evaluation.EvaluationMetric metric, params Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic[] diagnostics);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDiagnostics(class Microsoft.Extensions.AI.Evaluation.EvaluationMetric metric, class Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic[] diagnostics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.EvaluationMetricExtensions.AddDiagnostics(Microsoft.Extensions.AI.Evaluation.EvaluationMetric,Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddDiagnostics (metric As EvaluationMetric, ParamArray diagnostics As EvaluationDiagnostic())" />
      <MemberSignature Language="F#" Value="static member AddDiagnostics : Microsoft.Extensions.AI.Evaluation.EvaluationMetric * Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic[] -&gt; unit" Usage="Microsoft.Extensions.AI.Evaluation.EvaluationMetricExtensions.AddDiagnostics (metric, diagnostics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddDiagnostics(Microsoft::Extensions::AI::Evaluation::EvaluationMetric ^ metric, ... cli::array &lt;Microsoft::Extensions::AI::Evaluation::EvaluationDiagnostic ^&gt; ^ diagnostics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metric" Type="Microsoft.Extensions.AI.Evaluation.EvaluationMetric" RefType="this" />
        <Parameter Name="diagnostics" Type="Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="metric">The <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />.</param>
        <param name="diagnostics">The <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic" />s to be added.</param>
        <summary>
            Adds the supplied <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic" />s to the supplied <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />'s
            <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationMetric.Diagnostics" /> collection.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDiagnostics">
      <MemberSignature Language="C#" Value="public static void AddDiagnostics (this Microsoft.Extensions.AI.Evaluation.EvaluationMetric metric, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic&gt; diagnostics);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDiagnostics(class Microsoft.Extensions.AI.Evaluation.EvaluationMetric metric, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic&gt; diagnostics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.EvaluationMetricExtensions.AddDiagnostics(Microsoft.Extensions.AI.Evaluation.EvaluationMetric,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddDiagnostics (metric As EvaluationMetric, diagnostics As IEnumerable(Of EvaluationDiagnostic))" />
      <MemberSignature Language="F#" Value="static member AddDiagnostics : Microsoft.Extensions.AI.Evaluation.EvaluationMetric * seq&lt;Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic&gt; -&gt; unit" Usage="Microsoft.Extensions.AI.Evaluation.EvaluationMetricExtensions.AddDiagnostics (metric, diagnostics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddDiagnostics(Microsoft::Extensions::AI::Evaluation::EvaluationMetric ^ metric, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::AI::Evaluation::EvaluationDiagnostic ^&gt; ^ diagnostics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metric" Type="Microsoft.Extensions.AI.Evaluation.EvaluationMetric" RefType="this" />
        <Parameter Name="diagnostics" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic&gt;" />
      </Parameters>
      <Docs>
        <param name="metric">The <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />.</param>
        <param name="diagnostics">The <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic" />s to be added.</param>
        <summary>
            Adds the supplied <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic" />s to the supplied <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />'s
            <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationMetric.Diagnostics" /> collection.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdateMetadata">
      <MemberSignature Language="C#" Value="public static void AddOrUpdateMetadata (this Microsoft.Extensions.AI.Evaluation.EvaluationMetric metric, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddOrUpdateMetadata(class Microsoft.Extensions.AI.Evaluation.EvaluationMetric metric, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.EvaluationMetricExtensions.AddOrUpdateMetadata(Microsoft.Extensions.AI.Evaluation.EvaluationMetric,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddOrUpdateMetadata (metric As EvaluationMetric, metadata As IDictionary(Of String, String))" />
      <MemberSignature Language="F#" Value="static member AddOrUpdateMetadata : Microsoft.Extensions.AI.Evaluation.EvaluationMetric * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="Microsoft.Extensions.AI.Evaluation.EvaluationMetricExtensions.AddOrUpdateMetadata (metric, metadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddOrUpdateMetadata(Microsoft::Extensions::AI::Evaluation::EvaluationMetric ^ metric, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metric" Type="Microsoft.Extensions.AI.Evaluation.EvaluationMetric" RefType="this" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="metric">The <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />.</param>
        <param name="metadata">The metadata to be added or updated.</param>
        <summary>
            Adds or updates the supplied <parameterref name="metadata" /> to the supplied <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />'s
            <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationMetric.Metadata" /> collection.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdateMetadata">
      <MemberSignature Language="C#" Value="public static void AddOrUpdateMetadata (this Microsoft.Extensions.AI.Evaluation.EvaluationMetric metric, string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddOrUpdateMetadata(class Microsoft.Extensions.AI.Evaluation.EvaluationMetric metric, string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.EvaluationMetricExtensions.AddOrUpdateMetadata(Microsoft.Extensions.AI.Evaluation.EvaluationMetric,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddOrUpdateMetadata (metric As EvaluationMetric, name As String, value As String)" />
      <MemberSignature Language="F#" Value="static member AddOrUpdateMetadata : Microsoft.Extensions.AI.Evaluation.EvaluationMetric * string * string -&gt; unit" Usage="Microsoft.Extensions.AI.Evaluation.EvaluationMetricExtensions.AddOrUpdateMetadata (metric, name, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddOrUpdateMetadata(Microsoft::Extensions::AI::Evaluation::EvaluationMetric ^ metric, System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metric" Type="Microsoft.Extensions.AI.Evaluation.EvaluationMetric" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="metric">The <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />.</param>
        <param name="name">The name of the metadata.</param>
        <param name="value">The value of the metadata.</param>
        <summary>
            Adds or updates metadata with the specified <paramref name="name" /> and <paramref name="value" /> in the
            supplied <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />'s <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationMetric.Metadata" /> collection.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsDiagnostics">
      <MemberSignature Language="C#" Value="public static bool ContainsDiagnostics (this Microsoft.Extensions.AI.Evaluation.EvaluationMetric metric, Func&lt;Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic,bool&gt;? predicate = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsDiagnostics(class Microsoft.Extensions.AI.Evaluation.EvaluationMetric metric, class System.Func`2&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.EvaluationMetricExtensions.ContainsDiagnostics(Microsoft.Extensions.AI.Evaluation.EvaluationMetric,System.Func{Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ContainsDiagnostics (metric As EvaluationMetric, Optional predicate As Func(Of EvaluationDiagnostic, Boolean) = Nothing) As Boolean" />
      <MemberSignature Language="F#" Value="static member ContainsDiagnostics : Microsoft.Extensions.AI.Evaluation.EvaluationMetric * Func&lt;Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic, bool&gt; -&gt; bool" Usage="Microsoft.Extensions.AI.Evaluation.EvaluationMetricExtensions.ContainsDiagnostics (metric, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metric" Type="Microsoft.Extensions.AI.Evaluation.EvaluationMetric" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic,System.Boolean&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-10.0-pp;net-8.0-pp;net-9.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="metric">The <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" /> that is to be inspected.</param>
        <param name="predicate">
            A predicate that returns <see langword="true" /> if a matching <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic" /> is found;
            <see langword="false" /> otherwise.
            </param>
        <summary>
            Returns <see langword="true" /> if the supplied <paramref name="metric" /> contains any
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic" /> matching the supplied <paramref name="predicate" />; <see langword="false" />
            otherwise.
            </summary>
        <returns>
          <see langword="true" /> if the supplied <paramref name="metric" /> contains any
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic" /> matching the supplied <paramref name="predicate" />; <see langword="false" />
            otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

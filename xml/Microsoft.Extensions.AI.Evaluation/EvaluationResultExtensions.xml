<Type Name="EvaluationResultExtensions" FullName="Microsoft.Extensions.AI.Evaluation.EvaluationResultExtensions">
  <TypeSignature Language="C#" Value="public static class EvaluationResultExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EvaluationResultExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.Evaluation.EvaluationResultExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EvaluationResultExtensions" />
  <TypeSignature Language="F#" Value="type EvaluationResultExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class EvaluationResultExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddDiagnosticToAllMetrics">
      <MemberSignature Language="C#" Value="public static void AddDiagnosticToAllMetrics (this Microsoft.Extensions.AI.Evaluation.EvaluationResult result, Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic diagnostic);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDiagnosticToAllMetrics(class Microsoft.Extensions.AI.Evaluation.EvaluationResult result, class Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic diagnostic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.EvaluationResultExtensions.AddDiagnosticToAllMetrics(Microsoft.Extensions.AI.Evaluation.EvaluationResult,Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddDiagnosticToAllMetrics (result As EvaluationResult, diagnostic As EvaluationDiagnostic)" />
      <MemberSignature Language="F#" Value="static member AddDiagnosticToAllMetrics : Microsoft.Extensions.AI.Evaluation.EvaluationResult * Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic -&gt; unit" Usage="Microsoft.Extensions.AI.Evaluation.EvaluationResultExtensions.AddDiagnosticToAllMetrics (result, diagnostic)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddDiagnosticToAllMetrics(Microsoft::Extensions::AI::Evaluation::EvaluationResult ^ result, Microsoft::Extensions::AI::Evaluation::EvaluationDiagnostic ^ diagnostic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="Microsoft.Extensions.AI.Evaluation.EvaluationResult" RefType="this" />
        <Parameter Name="diagnostic" Type="Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <param name="diagnostic">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsDiagnostics">
      <MemberSignature Language="C#" Value="public static bool ContainsDiagnostics (this Microsoft.Extensions.AI.Evaluation.EvaluationResult result, Func&lt;Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic,bool&gt;? predicate = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsDiagnostics(class Microsoft.Extensions.AI.Evaluation.EvaluationResult result, class System.Func`2&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.EvaluationResultExtensions.ContainsDiagnostics(Microsoft.Extensions.AI.Evaluation.EvaluationResult,System.Func{Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ContainsDiagnostics (result As EvaluationResult, Optional predicate As Func(Of EvaluationDiagnostic, Boolean) = Nothing) As Boolean" />
      <MemberSignature Language="F#" Value="static member ContainsDiagnostics : Microsoft.Extensions.AI.Evaluation.EvaluationResult * Func&lt;Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic, bool&gt; -&gt; bool" Usage="Microsoft.Extensions.AI.Evaluation.EvaluationResultExtensions.ContainsDiagnostics (result, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="Microsoft.Extensions.AI.Evaluation.EvaluationResult" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic,System.Boolean&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <param name="predicate">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interpret">
      <MemberSignature Language="C#" Value="public static void Interpret (this Microsoft.Extensions.AI.Evaluation.EvaluationResult result, Func&lt;Microsoft.Extensions.AI.Evaluation.EvaluationMetric,Microsoft.Extensions.AI.Evaluation.EvaluationMetricInterpretation?&gt; interpret);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Interpret(class Microsoft.Extensions.AI.Evaluation.EvaluationResult result, class System.Func`2&lt;class Microsoft.Extensions.AI.Evaluation.EvaluationMetric, class Microsoft.Extensions.AI.Evaluation.EvaluationMetricInterpretation&gt; interpret) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.EvaluationResultExtensions.Interpret(Microsoft.Extensions.AI.Evaluation.EvaluationResult,System.Func{Microsoft.Extensions.AI.Evaluation.EvaluationMetric,Microsoft.Extensions.AI.Evaluation.EvaluationMetricInterpretation})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Interpret (result As EvaluationResult, interpret As Func(Of EvaluationMetric, EvaluationMetricInterpretation))" />
      <MemberSignature Language="F#" Value="static member Interpret : Microsoft.Extensions.AI.Evaluation.EvaluationResult * Func&lt;Microsoft.Extensions.AI.Evaluation.EvaluationMetric, Microsoft.Extensions.AI.Evaluation.EvaluationMetricInterpretation&gt; -&gt; unit" Usage="Microsoft.Extensions.AI.Evaluation.EvaluationResultExtensions.Interpret (result, interpret)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Interpret(Microsoft::Extensions::AI::Evaluation::EvaluationResult ^ result, Func&lt;Microsoft::Extensions::AI::Evaluation::EvaluationMetric ^, Microsoft::Extensions::AI::Evaluation::EvaluationMetricInterpretation ^&gt; ^ interpret);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="Microsoft.Extensions.AI.Evaluation.EvaluationResult" RefType="this" />
        <Parameter Name="interpret" Type="System.Func&lt;Microsoft.Extensions.AI.Evaluation.EvaluationMetric,Microsoft.Extensions.AI.Evaluation.EvaluationMetricInterpretation&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0-pp">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 1, 2 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 1, 2 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <param name="interpret">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

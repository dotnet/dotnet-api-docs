<Type Name="JsonSerializerDefaults" FullName="System.Text.Json.JsonSerializerDefaults">
  <TypeSignature Language="C#" Value="public enum JsonSerializerDefaults" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed JsonSerializerDefaults extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonSerializerDefaults" />
  <TypeSignature Language="VB.NET" Value="Public Enum JsonSerializerDefaults" />
  <TypeSignature Language="C++ CLI" Value="public enum class JsonSerializerDefaults" />
  <TypeSignature Language="F#" Value="type JsonSerializerDefaults = " />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifies scenario-based default serialization options that can be used to construct a <see cref="T:System.Text.Json.JsonSerializerOptions" /> instance.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="General">
      <MemberSignature Language="C#" Value="General" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.Json.JsonSerializerDefaults General = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Text.Json.JsonSerializerDefaults.General" />
      <MemberSignature Language="VB.NET" Value="General" />
      <MemberSignature Language="C++ CLI" Value="General" />
      <MemberSignature Language="F#" Value="General = 0" Usage="System.Text.Json.JsonSerializerDefaults.General" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonSerializerDefaults</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>General-purpose option values. These are the same settings that are applied if a <see cref="T:System.Text.Json.JsonSerializerDefaults" /> member isn't specified in the <see cref="T:System.Text.Json.JsonSerializerOptions" /> constructor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This option implies that property names are treated as case-sensitive and that "PascalCase" name formatting should be employed.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Web">
      <MemberSignature Language="C#" Value="Web" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.Json.JsonSerializerDefaults Web = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Text.Json.JsonSerializerDefaults.Web" />
      <MemberSignature Language="VB.NET" Value="Web" />
      <MemberSignature Language="C++ CLI" Value="Web" />
      <MemberSignature Language="F#" Value="Web = 1" Usage="System.Text.Json.JsonSerializerDefaults.Web" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonSerializerDefaults</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Option values appropriate to web-based scenarios.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This option implies that property names are treated as case-insensitive, "camelCase" name formatting should be employed, and quoted numbers (JSON strings) are allowed.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

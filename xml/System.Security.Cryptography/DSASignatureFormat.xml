<Type Name="DSASignatureFormat" FullName="System.Security.Cryptography.DSASignatureFormat">
  <TypeSignature Language="C#" Value="public enum DSASignatureFormat" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DSASignatureFormat extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.DSASignatureFormat" />
  <TypeSignature Language="VB.NET" Value="Public Enum DSASignatureFormat" />
  <TypeSignature Language="C++ CLI" Value="public enum class DSASignatureFormat" />
  <TypeSignature Language="F#" Value="type DSASignatureFormat = " />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifies the data format for signatures with the DSA family of algorithms.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
> The creators of the DSA algorithm have withdrawn their support for it. Consider using the <xref:System.Security.Cryptography.RSA> class or the <xref:System.Security.Cryptography.ECDsa> class instead of the <xref:System.Security.Cryptography.DSA> class. Use <xref:System.Security.Cryptography.DSA> only for compatibility with legacy applications and data.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IeeeP1363FixedFieldConcatenation">
      <MemberSignature Language="C#" Value="IeeeP1363FixedFieldConcatenation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.DSASignatureFormat IeeeP1363FixedFieldConcatenation = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.DSASignatureFormat.IeeeP1363FixedFieldConcatenation" />
      <MemberSignature Language="VB.NET" Value="IeeeP1363FixedFieldConcatenation" />
      <MemberSignature Language="C++ CLI" Value="IeeeP1363FixedFieldConcatenation" />
      <MemberSignature Language="F#" Value="IeeeP1363FixedFieldConcatenation = 0" Usage="System.Security.Cryptography.DSASignatureFormat.IeeeP1363FixedFieldConcatenation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSASignatureFormat</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>The signature format from IEEE P1363, which produces a fixed size signature for a given key.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This signature format encodes the `(r, s)` tuple as the concatenation of the big-endian representation
of `r` and the big-endian representation of `s`, each value encoding using the number of bytes required
for encoding the maximum integer value in the key's mathematical field. For example, an ECDSA signature
from the curve `secp521r1`, a 521-bit field, will encode each of `r` and `s` as 66 bytes, producing a
signature output of 132 bytes.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rfc3279DerSequence">
      <MemberSignature Language="C#" Value="Rfc3279DerSequence" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.DSASignatureFormat Rfc3279DerSequence = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.DSASignatureFormat.Rfc3279DerSequence" />
      <MemberSignature Language="VB.NET" Value="Rfc3279DerSequence" />
      <MemberSignature Language="C++ CLI" Value="Rfc3279DerSequence" />
      <MemberSignature Language="F#" Value="Rfc3279DerSequence = 1" Usage="System.Security.Cryptography.DSASignatureFormat.Rfc3279DerSequence" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSASignatureFormat</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The signature format from IETF RFC 3279, which produces a variably-sized signature.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This signature format encodes the `(r, s)` tuple as the DER encoding of `SEQUENCE(INTEGER(r), INTEGER(s))`. Because the length of a DER INTEGER encoding varies according to the value being encoded, this signature format does not produce a consistent signature length. Signatures in this format always start with `0x30`, and on average are 7 bytes longer than signatures in the <xref:System.Security.Cryptography.DSASignatureFormat.IeeeP1363FixedFieldConcatenation> format.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

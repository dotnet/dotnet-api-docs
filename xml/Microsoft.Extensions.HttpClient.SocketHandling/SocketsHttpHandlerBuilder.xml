<Type Name="SocketsHttpHandlerBuilder" FullName="Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder">
  <TypeSignature Language="C#" Value="public class SocketsHttpHandlerBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SocketsHttpHandlerBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class SocketsHttpHandlerBuilder" />
  <TypeSignature Language="F#" Value="type SocketsHttpHandlerBuilder = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class SocketsHttpHandlerBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.HttpClient.SocketHandling</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A builder for configuring named <see cref="T:System.Net.Http.SocketsHttpHandler" /> instances.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SocketsHttpHandlerBuilder (Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder.#ctor(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As IHttpClientBuilder)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder -&gt; Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder" Usage="new Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SocketsHttpHandlerBuilder(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.HttpClient.SocketHandling</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureClientCertificate">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder ConfigureClientCertificate (Func&lt;IServiceProvider,System.Security.Cryptography.X509Certificates.X509Certificate2&gt; clientCertificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder ConfigureClientCertificate(class System.Func`2&lt;class System.IServiceProvider, class System.Security.Cryptography.X509Certificates.X509Certificate2&gt; clientCertificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder.ConfigureClientCertificate(System.Func{System.IServiceProvider,System.Security.Cryptography.X509Certificates.X509Certificate2})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureClientCertificate (clientCertificate As Func(Of IServiceProvider, X509Certificate2)) As SocketsHttpHandlerBuilder" />
      <MemberSignature Language="F#" Value="member this.ConfigureClientCertificate : Func&lt;IServiceProvider, System.Security.Cryptography.X509Certificates.X509Certificate2&gt; -&gt; Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder" Usage="socketsHttpHandlerBuilder.ConfigureClientCertificate clientCertificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::HttpClient::SocketHandling::SocketsHttpHandlerBuilder ^ ConfigureClientCertificate(Func&lt;IServiceProvider ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ clientCertificate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.HttpClient.SocketHandling</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientCertificate" Type="System.Func&lt;System.IServiceProvider,System.Security.Cryptography.X509Certificates.X509Certificate2&gt;" />
      </Parameters>
      <Docs>
        <param name="clientCertificate">The function to fetch the client certificate instance.</param>
        <summary>
            Adds a delegate to set a single client certificate for all remote endpoints.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureHandler">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder ConfigureHandler (Action&lt;IServiceProvider,System.Net.Http.SocketsHttpHandler&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder ConfigureHandler(class System.Action`2&lt;class System.IServiceProvider, class System.Net.Http.SocketsHttpHandler&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder.ConfigureHandler(System.Action{System.IServiceProvider,System.Net.Http.SocketsHttpHandler})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureHandler (configure As Action(Of IServiceProvider, SocketsHttpHandler)) As SocketsHttpHandlerBuilder" />
      <MemberSignature Language="F#" Value="member this.ConfigureHandler : Action&lt;IServiceProvider, System.Net.Http.SocketsHttpHandler&gt; -&gt; Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder" Usage="socketsHttpHandlerBuilder.ConfigureHandler configure" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::HttpClient::SocketHandling::SocketsHttpHandlerBuilder ^ ConfigureHandler(Action&lt;IServiceProvider ^, System::Net::Http::SocketsHttpHandler ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.HttpClient.SocketHandling</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configure" Type="System.Action&lt;System.IServiceProvider,System.Net.Http.SocketsHttpHandler&gt;" />
      </Parameters>
      <Docs>
        <param name="configure">The delegate to execute.</param>
        <summary>
            Adds a delegate that will execute the action on the primary handler.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureHandler">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder ConfigureHandler (Action&lt;System.Net.Http.SocketsHttpHandler&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder ConfigureHandler(class System.Action`1&lt;class System.Net.Http.SocketsHttpHandler&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder.ConfigureHandler(System.Action{System.Net.Http.SocketsHttpHandler})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureHandler (configure As Action(Of SocketsHttpHandler)) As SocketsHttpHandlerBuilder" />
      <MemberSignature Language="F#" Value="member this.ConfigureHandler : Action&lt;System.Net.Http.SocketsHttpHandler&gt; -&gt; Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder" Usage="socketsHttpHandlerBuilder.ConfigureHandler configure" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::HttpClient::SocketHandling::SocketsHttpHandlerBuilder ^ ConfigureHandler(Action&lt;System::Net::Http::SocketsHttpHandler ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.HttpClient.SocketHandling</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configure" Type="System.Action&lt;System.Net.Http.SocketsHttpHandler&gt;" />
      </Parameters>
      <Docs>
        <param name="configure">The delegate to execute.</param>
        <summary>
            Adds a delegate that will execute the action on the primary handler.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder ConfigureOptions (Microsoft.Extensions.Configuration.IConfigurationSection section);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder ConfigureOptions(class Microsoft.Extensions.Configuration.IConfigurationSection section) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder.ConfigureOptions(Microsoft.Extensions.Configuration.IConfigurationSection)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureOptions (section As IConfigurationSection) As SocketsHttpHandlerBuilder" />
      <MemberSignature Language="F#" Value="member this.ConfigureOptions : Microsoft.Extensions.Configuration.IConfigurationSection -&gt; Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder" Usage="socketsHttpHandlerBuilder.ConfigureOptions section" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::HttpClient::SocketHandling::SocketsHttpHandlerBuilder ^ ConfigureOptions(Microsoft::Extensions::Configuration::IConfigurationSection ^ section);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.HttpClient.SocketHandling</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicDependency(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties, typeof(Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerOptions))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicDependency(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties, typeof(Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerOptions))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessage("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code", Justification="Addressed by [DynamicDependency]")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessage("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code", Justification="Addressed by [DynamicDependency]")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="section" Type="Microsoft.Extensions.Configuration.IConfigurationSection" />
      </Parameters>
      <Docs>
        <param name="section">Configuration for <see cref="T:Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerOptions" />.</param>
        <summary>
            Adds a delegate that will set <see cref="T:System.Net.Http.SocketsHttpHandler" /> as the primary <see cref="T:System.Net.Http.HttpMessageHandler" />
            for a named <see cref="N:Microsoft.Extensions.HttpClient" /> and will use <see cref="T:Microsoft.Extensions.Configuration.IConfigurationSection" /> to configure it.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder ConfigureOptions (Action&lt;Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerOptions&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder ConfigureOptions(class System.Action`1&lt;class Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder.ConfigureOptions(System.Action{Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerOptions})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureOptions (configure As Action(Of SocketsHttpHandlerOptions)) As SocketsHttpHandlerBuilder" />
      <MemberSignature Language="F#" Value="member this.ConfigureOptions : Action&lt;Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerOptions&gt; -&gt; Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder" Usage="socketsHttpHandlerBuilder.ConfigureOptions configure" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::HttpClient::SocketHandling::SocketsHttpHandlerBuilder ^ ConfigureOptions(Action&lt;Microsoft::Extensions::HttpClient::SocketHandling::SocketsHttpHandlerOptions ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.HttpClient.SocketHandling</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="configure">Configuration for <see cref="T:Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerOptions" />.</param>
        <summary>
            Adds a delegate that will set <see cref="T:System.Net.Http.SocketsHttpHandler" /> as the primary <see cref="T:System.Net.Http.HttpMessageHandler" />
            for a named <see cref="N:Microsoft.Extensions.HttpClient" /> and will use the delegate to configure it.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableRemoteCertificateValidation">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder DisableRemoteCertificateValidation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder DisableRemoteCertificateValidation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder.DisableRemoteCertificateValidation" />
      <MemberSignature Language="VB.NET" Value="Public Function DisableRemoteCertificateValidation () As SocketsHttpHandlerBuilder" />
      <MemberSignature Language="F#" Value="member this.DisableRemoteCertificateValidation : unit -&gt; Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder" Usage="socketsHttpHandlerBuilder.DisableRemoteCertificateValidation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::HttpClient::SocketHandling::SocketsHttpHandlerBuilder ^ DisableRemoteCertificateValidation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.HttpClient.SocketHandling</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Disable verification of remote certificate on SSL/TLS connections.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder.Name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.HttpClient.SocketHandling</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of <see cref="T:System.Net.Http.SocketsHttpHandler" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Services">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.DependencyInjection.IServiceCollection Services { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.DependencyInjection.IServiceCollection Services" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder.Services" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Services As IServiceCollection" />
      <MemberSignature Language="F#" Value="member this.Services : Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.HttpClient.SocketHandling.SocketsHttpHandlerBuilder.Services" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::DependencyInjection::IServiceCollection ^ Services { Microsoft::Extensions::DependencyInjection::IServiceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.HttpClient.SocketHandling</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets services collection.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="RuleReadAttribute" FullName="System.Workflow.Activities.Rules.RuleReadAttribute">
  <TypeSignature Language="C#" Value="public sealed class RuleReadAttribute : System.Workflow.Activities.Rules.RuleReadWriteAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RuleReadAttribute extends System.Workflow.Activities.Rules.RuleReadWriteAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.Rules.RuleReadAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RuleReadAttribute&#xA;Inherits RuleReadWriteAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuleReadAttribute sealed : System::Workflow::Activities::Rules::RuleReadWriteAttribute" />
  <TypeSignature Language="F#" Value="type RuleReadAttribute = class&#xA;    inherit RuleReadWriteAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Activities.Rules.RuleReadWriteAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Indicates that a property is read by a <see cref="T:System.Workflow.Activities.Rules.Rule" />. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This attribute is used to support a forward chaining model that causes the re-evaluation of rules based on state change. The <xref:System.Workflow.Activities.Rules.RuleReadAttribute>, <xref:System.Workflow.Activities.Rules.RuleInvokeAttribute>, and <xref:System.Workflow.Activities.Rules.RuleWriteAttribute> classes each indicate the properties used to read a condition, write an action, and invoke a method. These attributes enable the workflow to only reevaluate rules that change the final output.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuleReadAttribute (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleReadAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuleReadAttribute(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.RuleReadAttribute : string -&gt; System.Workflow.Activities.Rules.RuleReadAttribute" Usage="new System.Workflow.Activities.Rules.RuleReadAttribute path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The logical path of the member read by the condition.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Workflow.Activities.Rules.RuleReadAttribute" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuleReadAttribute (string path, System.Workflow.Activities.Rules.RuleAttributeTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.Workflow.Activities.Rules.RuleAttributeTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleReadAttribute.#ctor(System.String,System.Workflow.Activities.Rules.RuleAttributeTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, target As RuleAttributeTarget)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuleReadAttribute(System::String ^ path, System::Workflow::Activities::Rules::RuleAttributeTarget target);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.RuleReadAttribute : string * System.Workflow.Activities.Rules.RuleAttributeTarget -&gt; System.Workflow.Activities.Rules.RuleReadAttribute" Usage="new System.Workflow.Activities.Rules.RuleReadAttribute (path, target)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="target" Type="System.Workflow.Activities.Rules.RuleAttributeTarget" />
      </Parameters>
      <Docs>
        <param name="path">The logical path of the member read by the condition.</param>
        <param name="target">
          <see cref="T:System.Workflow.Activities.Rules.RuleAttributeTarget" /> enumeration; specifies whether the path is relative to <see langword="this" /> or to a method parameter.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Workflow.Activities.Rules.RuleReadAttribute" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

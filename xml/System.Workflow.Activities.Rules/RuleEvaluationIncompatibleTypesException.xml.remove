<Type Name="RuleEvaluationIncompatibleTypesException" FullName="System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException">
  <TypeSignature Language="C#" Value="public class RuleEvaluationIncompatibleTypesException : System.Workflow.Activities.Rules.RuleException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RuleEvaluationIncompatibleTypesException extends System.Workflow.Activities.Rules.RuleException implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" />
  <TypeSignature Language="VB.NET" Value="Public Class RuleEvaluationIncompatibleTypesException&#xA;Inherits RuleException" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuleEvaluationIncompatibleTypesException : System::Workflow::Activities::Rules::RuleException" />
  <TypeSignature Language="F#" Value="type RuleEvaluationIncompatibleTypesException = class&#xA;    inherit RuleException&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Activities.Rules.RuleException</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The exception that is thrown when attempting to apply an operator to incompatible operands when you evaluate a rule.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuleEvaluationIncompatibleTypesException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuleEvaluationIncompatibleTypesException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuleEvaluationIncompatibleTypesException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuleEvaluationIncompatibleTypesException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException : string -&gt; System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" Usage="new System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">A <see langword="string" /> that contains the error message to associate with this instance.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" /> with a specified error message.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor initializes the <xref:System.ArgumentException.Message%2A> property of the new instance using the message parameter.  
  
 The following table shows the initial property values for an instance of Exception.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  
|<xref:System.Exception.Message%2A>|The error message string.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RuleEvaluationIncompatibleTypesException (System.Runtime.Serialization.SerializationInfo serializeInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializeInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (serializeInfo As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RuleEvaluationIncompatibleTypesException(System::Runtime::Serialization::SerializationInfo ^ serializeInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" Usage="new System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException (serializeInfo, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializeInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializeInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
        <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" /> class with serialized data.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor is called during de-serialization to reconstitute the exception object transmitted over a stream.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serializeInfo" /> is a null reference (Visual Basic <see langword="Nothing" />).</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is a null reference (Visual Basic <see langword="Nothing" />) or the <see cref="P:System.Exception.HResult" /> is zero.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuleEvaluationIncompatibleTypesException (string message, Exception ex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception ex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, ex As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuleEvaluationIncompatibleTypesException(System::String ^ message, Exception ^ ex);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException : string * Exception -&gt; System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" Usage="new System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException (message, ex)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="ex" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">A message that describes the current exception.</param>
        <param name="ex">The <see cref="T:System.Exception" /> instance that caused the current exception.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" /> class with a specified error message and a reference to the inner <see cref="T:System.Exception" /> that is the cause of this <see cref="T:System.Exception" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 An <xref:System.Exception> that is thrown as a direct result of a previous <xref:System.Exception> should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuleEvaluationIncompatibleTypesException (string message, Type left, System.CodeDom.CodeBinaryOperatorType op, Type right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Type left, valuetype System.CodeDom.CodeBinaryOperatorType op, class System.Type right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String,System.Type,System.CodeDom.CodeBinaryOperatorType,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, left As Type, op As CodeBinaryOperatorType, right As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuleEvaluationIncompatibleTypesException(System::String ^ message, Type ^ left, System::CodeDom::CodeBinaryOperatorType op, Type ^ right);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException : string * Type * System.CodeDom.CodeBinaryOperatorType * Type -&gt; System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" Usage="new System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException (message, left, op, right)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="left" Type="System.Type" />
        <Parameter Name="op" Type="System.CodeDom.CodeBinaryOperatorType" />
        <Parameter Name="right" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="message">A message that describes the current <see cref="T:System.Exception" /> .</param>
        <param name="left">The <see cref="T:System.Type" /> appearing on the left side of the operator.</param>
        <param name="op">The <see cref="T:System.CodeDom.CodeBinaryOperatorType" /> representing the operator whose compatibility is violated.</param>
        <param name="right">The <see cref="T:System.Type" /> appearing on the right side of the operator.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" /> class with the details of the compatibility violation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following table shows the initial property values for an instance of Exception represented by this class.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  
|<xref:System.Exception.Message%2A>|The value of the argument `message`|  
|<xref:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Left%2A>|The value of the argument `left.`|  
|<xref:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Operator%2A>|The value of the argument `op.`|  
|<xref:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Right%2A>|The value of the argument `right.`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuleEvaluationIncompatibleTypesException (string message, Type left, System.CodeDom.CodeBinaryOperatorType op, Type right, Exception ex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Type left, valuetype System.CodeDom.CodeBinaryOperatorType op, class System.Type right, class System.Exception ex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String,System.Type,System.CodeDom.CodeBinaryOperatorType,System.Type,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, left As Type, op As CodeBinaryOperatorType, right As Type, ex As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuleEvaluationIncompatibleTypesException(System::String ^ message, Type ^ left, System::CodeDom::CodeBinaryOperatorType op, Type ^ right, Exception ^ ex);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException : string * Type * System.CodeDom.CodeBinaryOperatorType * Type * Exception -&gt; System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" Usage="new System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException (message, left, op, right, ex)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="left" Type="System.Type" />
        <Parameter Name="op" Type="System.CodeDom.CodeBinaryOperatorType" />
        <Parameter Name="right" Type="System.Type" />
        <Parameter Name="ex" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">A message that describes the current <see cref="T:System.Exception" /> .</param>
        <param name="left">The <see cref="T:System.Type" /> appearing on the left side of the operator.</param>
        <param name="op">The <see cref="T:System.CodeDom.CodeBinaryOperatorType" /> representing the operator whose compatibility is violated.</param>
        <param name="right">The <see cref="T:System.Type" /> appearing on the right side of the operator.</param>
        <param name="ex">The <see cref="T:System.Exception" /> instance that caused the current exception.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" /> class with the details of the compatibility violation. This includes the <see cref="P:System.Exception.InnerException" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following table shows the initial property values for an instance of Exception represented by this class.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|The value of the argument `ex.`|  
|<xref:System.Exception.Message%2A>|The value of the argument `message`|  
|<xref:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Left%2A>|The value of the argument `left.`|  
|<xref:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Operator%2A>|The value of the argument `op.`|  
|<xref:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Right%2A>|The value of the argument `right.`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="ruleEvaluationIncompatibleTypesException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
        <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.GetObjectData%2A> sets a <xref:System.Runtime.Serialization.SerializationInfo> with all the <xref:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException> object data targeted for serialization. During de-serialization, this exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public Type Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Left" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Left { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Left : Type with get, set" Usage="System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Type" /> of the left argument of the expression causing the exception.</summary>
        <value>The <see cref="T:System.Type" /> of the left argument of the expression causing the exception.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeBinaryOperatorType Operator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.CodeBinaryOperatorType Operator" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Operator" />
      <MemberSignature Language="VB.NET" Value="Public Property Operator As CodeBinaryOperatorType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeBinaryOperatorType Operator { System::CodeDom::CodeBinaryOperatorType get(); void set(System::CodeDom::CodeBinaryOperatorType value); };" />
      <MemberSignature Language="F#" Value="member this.Operator : System.CodeDom.CodeBinaryOperatorType with get, set" Usage="System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Operator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.CodeDom.CodeBinaryOperatorType" /> representing the operator which caused the exception.</summary>
        <value>The <see cref="T:System.CodeDom.CodeBinaryOperatorType" /> representing the operator which caused the exception.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public Type Right { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Right" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Right" />
      <MemberSignature Language="VB.NET" Value="Public Property Right As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Right { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Right : Type with get, set" Usage="System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Type" /> of the right argument of the expression causing the exception.</summary>
        <value>The <see cref="T:System.Type" /> of the right argument of the expression causing the exception.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

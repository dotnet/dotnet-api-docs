<Type Name="RuleLiteralResult" FullName="System.Workflow.Activities.Rules.RuleLiteralResult">
  <TypeSignature Language="C#" Value="public class RuleLiteralResult : System.Workflow.Activities.Rules.RuleExpressionResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RuleLiteralResult extends System.Workflow.Activities.Rules.RuleExpressionResult" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.Rules.RuleLiteralResult" />
  <TypeSignature Language="VB.NET" Value="Public Class RuleLiteralResult&#xA;Inherits RuleExpressionResult" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuleLiteralResult : System::Workflow::Activities::Rules::RuleExpressionResult" />
  <TypeSignature Language="F#" Value="type RuleLiteralResult = class&#xA;    inherit RuleExpressionResult" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Activities.Rules.RuleExpressionResult</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the literal result of a custom expression written using <see cref="T:System.Workflow.Activities.Rules.IRuleExpression" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuleLiteralResult (object literal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object literal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleLiteralResult.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (literal As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuleLiteralResult(System::Object ^ literal);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.RuleLiteralResult : obj -&gt; System.Workflow.Activities.Rules.RuleLiteralResult" Usage="new System.Workflow.Activities.Rules.RuleLiteralResult literal" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="literal" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="literal">The literal result of the expression.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Workflow.Activities.Rules.RuleLiteralResult" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.RuleLiteralResult.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Workflow.Activities.Rules.RuleLiteralResult.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the result of the expression.</summary>
        <value>The result of the expression.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.InvalidOperationException> is thrown every time an attempt to set <xref:System.Workflow.Activities.Rules.RuleLiteralResult.Value%2A> occurs.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Workflow.Activities.Rules.RuleLiteralResult.Value" /> is set.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="SseParser&lt;T&gt;" FullName="System.Net.ServerSentEvents.SseParser&lt;T&gt;">
  <TypeSignature Language="C#" Value="public sealed class SseParser&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SseParser`1&lt;T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.ServerSentEvents.SseParser`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SseParser(Of T)" />
  <TypeSignature Language="F#" Value="type SseParser&lt;'T&gt; = class" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class SseParser sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Net.ServerSentEvents</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">Specifies the type of data parsed from an event.</typeparam>
    <summary>Provides a parser for server-sent events information.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Enumerate">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Net.ServerSentEvents.SseItem&lt;T&gt;&gt; Enumerate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Net.ServerSentEvents.SseItem`1&lt;!T&gt;&gt; Enumerate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServerSentEvents.SseParser`1.Enumerate" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function Enumerate () As IEnumerable(Of SseItem(Of T))" />
      <MemberSignature Language="F#" Value="member this.Enumerate : unit -&gt; seq&lt;System.Net.ServerSentEvents.SseItem&lt;'T&gt;&gt;" Usage="sseParser.Enumerate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Net::ServerSentEvents::SseItem&lt;T&gt;&gt; ^ Enumerate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServerSentEvents</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Net.ServerSentEvents.SseParser&lt;&gt;+&lt;Enumerate&gt;d__19))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Net.ServerSentEvents.SseParser&lt;&gt;+&lt;Enumerate&gt;d__19))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Net.ServerSentEvents.SseItem&lt;T&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets an enumerable of the server-sent events from this parser.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The parser has already been enumerated. Such an exception may propagate out of a call to <see cref="M:System.Collections.IEnumerator.MoveNext" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateAsync">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IAsyncEnumerable&lt;System.Net.ServerSentEvents.SseItem&lt;T&gt;&gt; EnumerateAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IAsyncEnumerable`1&lt;valuetype System.Net.ServerSentEvents.SseItem`1&lt;!T&gt;&gt; EnumerateAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServerSentEvents.SseParser`1.EnumerateAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateAsync (Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of SseItem(Of T))" />
      <MemberSignature Language="F#" Value="member this.EnumerateAsync : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;System.Net.ServerSentEvents.SseItem&lt;'T&gt;&gt;" Usage="sseParser.EnumerateAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServerSentEvents</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(System.Net.ServerSentEvents.SseParser&lt;&gt;+&lt;EnumerateAsync&gt;d__20))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(System.Net.ServerSentEvents.SseParser&lt;&gt;+&lt;EnumerateAsync&gt;d__20))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;System.Net.ServerSentEvents.SseItem&lt;T&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.EnumeratorCancellation]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.EnumeratorCancellation&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token to use to cancel the enumeration.</param>
        <summary>Gets an asynchronous enumerable of the server-sent events from this parser.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The parser has already been enumerated. Such an exception may propagate out of a call to <see cref="M:System.Collections.Generic.IAsyncEnumerator`1.MoveNextAsync" />.</exception>
        <exception cref="T:System.OperationCanceledException">The enumeration was canceled. Such an exception may propagate out of a call to <see cref="M:System.Collections.Generic.IAsyncEnumerator`1.MoveNextAsync" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LastEventId">
      <MemberSignature Language="C#" Value="public string LastEventId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LastEventId" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServerSentEvents.SseParser`1.LastEventId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastEventId As String" />
      <MemberSignature Language="F#" Value="member this.LastEventId : string" Usage="System.Net.ServerSentEvents.SseParser&lt;'T&gt;.LastEventId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LastEventId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServerSentEvents</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the last event ID.</summary>
        <value>To be added.</value>
        <remarks>This value is updated any time a new last event ID is parsed. It is not reset between SSE items.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReconnectionInterval">
      <MemberSignature Language="C#" Value="public TimeSpan ReconnectionInterval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ReconnectionInterval" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServerSentEvents.SseParser`1.ReconnectionInterval" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReconnectionInterval As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.ReconnectionInterval : TimeSpan" Usage="System.Net.ServerSentEvents.SseParser&lt;'T&gt;.ReconnectionInterval" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ReconnectionInterval { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServerSentEvents</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the reconnection interval.</summary>
        <value>To be added.</value>
        <remarks>
            If no retry event was received, this defaults to <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />, and it will only
            ever be <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> in that situation. If a client wishes to retry, the server-sent
            events specification states that the interval may then be decided by the client implementation and should be a
            few seconds.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="SseParser" FullName="System.Net.ServerSentEvents.SseParser">
  <TypeSignature Language="C#" Value="public static class SseParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SseParser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.ServerSentEvents.SseParser" />
  <TypeSignature Language="VB.NET" Value="Public Class SseParser" />
  <TypeSignature Language="F#" Value="type SseParser = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class SseParser abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Net.ServerSentEvents</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides a parser for parsing server-sent events.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.ServerSentEvents.SseParser&lt;string&gt; Create (System.IO.Stream sseStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.ServerSentEvents.SseParser`1&lt;string&gt; Create(class System.IO.Stream sseStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServerSentEvents.SseParser.Create(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (sseStream As Stream) As SseParser(Of String)" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream -&gt; System.Net.ServerSentEvents.SseParser&lt;string&gt;" Usage="System.Net.ServerSentEvents.SseParser.Create sseStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::ServerSentEvents::SseParser&lt;System::String ^&gt; ^ Create(System::IO::Stream ^ sseStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServerSentEvents</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ServerSentEvents.SseParser&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sseStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="sseStream">The stream containing the data to parse.</param>
        <summary>Creates a parser for parsing a <paramref name="sseStream" /> of server-sent events into a sequence of <see cref="T:System.Net.ServerSentEvents.SseItem`1" /> values.</summary>
        <returns>
            The enumerable of strings, which may be enumerated synchronously or asynchronously. The strings
            are decoded from the UTF8-encoded bytes of the payload of each event.
            </returns>
        <remarks>
            This overload has behavior equivalent to calling <see cref="M:System.Net.ServerSentEvents.SseParser.Create``1(System.IO.Stream,System.Net.ServerSentEvents.SseItemParser{``0})" /> with a delegate
            that decodes the data of each event using <see cref="P:System.Text.Encoding.UTF8" />'s GetString method.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sseStream" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Net.ServerSentEvents.SseParser&lt;T&gt; Create&lt;T&gt; (System.IO.Stream sseStream, System.Net.ServerSentEvents.SseItemParser&lt;T&gt; itemParser);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.ServerSentEvents.SseParser`1&lt;!!T&gt; Create&lt;T&gt;(class System.IO.Stream sseStream, class System.Net.ServerSentEvents.SseItemParser`1&lt;!!T&gt; itemParser) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServerSentEvents.SseParser.Create``1(System.IO.Stream,System.Net.ServerSentEvents.SseItemParser{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T) (sseStream As Stream, itemParser As SseItemParser(Of T)) As SseParser(Of T)" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.Net.ServerSentEvents.SseItemParser&lt;'T&gt; -&gt; System.Net.ServerSentEvents.SseParser&lt;'T&gt;" Usage="System.Net.ServerSentEvents.SseParser.Create (sseStream, itemParser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Net::ServerSentEvents::SseParser&lt;T&gt; ^ Create(System::IO::Stream ^ sseStream, System::Net::ServerSentEvents::SseItemParser&lt;T&gt; ^ itemParser);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServerSentEvents</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ServerSentEvents.SseParser&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="sseStream" Type="System.IO.Stream" />
        <Parameter Name="itemParser" Type="System.Net.ServerSentEvents.SseItemParser&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">Specifies the type of data in each event.</typeparam>
        <param name="sseStream">The stream containing the data to parse.</param>
        <param name="itemParser">The parser to use to transform each payload of bytes into a data element.</param>
        <summary>Creates a parser for parsing a <paramref name="sseStream" /> of server-sent events into a sequence of <see cref="T:System.Net.ServerSentEvents.SseItem`1" /> values.</summary>
        <returns>The enumerable, which may be enumerated synchronously or asynchronously.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="itemParser" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="EventTypeDefault">
      <MemberSignature Language="C#" Value="public const string EventTypeDefault;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EventTypeDefault" />
      <MemberSignature Language="DocId" Value="F:System.Net.ServerSentEvents.SseParser.EventTypeDefault" />
      <MemberSignature Language="VB.NET" Value="Public Const EventTypeDefault As String " />
      <MemberSignature Language="F#" Value="val mutable EventTypeDefault : string" Usage="System.Net.ServerSentEvents.SseParser.EventTypeDefault" />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EventTypeDefault;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServerSentEvents</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The default <see cref="P:System.Net.ServerSentEvents.SseItem`1.EventType" /> ("message") for an event that did not explicitly specify a type.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

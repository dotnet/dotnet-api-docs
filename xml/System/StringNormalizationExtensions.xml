<Type Name="StringNormalizationExtensions" FullName="System.StringNormalizationExtensions">
  <TypeSignature Language="C#" Value="public static class StringNormalizationExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit StringNormalizationExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.StringNormalizationExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module StringNormalizationExtensions" />
  <TypeSignature Language="F#" Value="type StringNormalizationExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringNormalizationExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="10.0.0.0" FrameworkAlternate="net-10.0" />
    <TypeForwarding From="System.Globalization.Extensions" FromVersion="10.0.0.0" To="System.Runtime" ToVersion="10.0.0.0" FrameworkAlternate="net-10.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="10.0.0.0" To="System.Runtime" ToVersion="10.0.0.0" FrameworkAlternate="net-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Globalization.Extensions" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="6.0.0.0" FrameworkAlternate="net-6.0" />
    <TypeForwarding From="System.Globalization.Extensions" FromVersion="6.0.0.0" To="System.Runtime" ToVersion="6.0.0.0" FrameworkAlternate="net-6.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="6.0.0.0" To="System.Runtime" ToVersion="6.0.0.0" FrameworkAlternate="net-6.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="7.0.0.0" FrameworkAlternate="net-7.0" />
    <TypeForwarding From="System.Globalization.Extensions" FromVersion="7.0.0.0" To="System.Runtime" ToVersion="7.0.0.0" FrameworkAlternate="net-7.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="7.0.0.0" To="System.Runtime" ToVersion="7.0.0.0" FrameworkAlternate="net-7.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="8.0.0.0" FrameworkAlternate="net-8.0" />
    <TypeForwarding From="System.Globalization.Extensions" FromVersion="8.0.0.0" To="System.Runtime" ToVersion="8.0.0.0" FrameworkAlternate="net-8.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="8.0.0.0" To="System.Runtime" ToVersion="8.0.0.0" FrameworkAlternate="net-8.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="9.0.0.0" FrameworkAlternate="net-9.0" />
    <TypeForwarding From="System.Globalization.Extensions" FromVersion="9.0.0.0" To="System.Runtime" ToVersion="9.0.0.0" FrameworkAlternate="net-9.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="9.0.0.0" To="System.Runtime" ToVersion="9.0.0.0" FrameworkAlternate="net-9.0" />
    <TypeForwarding From="System.Globalization.Extensions" FromVersion="4.1.0.0" To="System.Runtime.Extensions" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Globalization.Extensions" FromVersion="4.1.1.0" To="System.Runtime.Extensions" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Globalization.Extensions" FromVersion="4.1.2.0" To="System.Runtime.Extensions" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-4.8.1;netstandard-2.0;netstandard-2.1">
      <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides extension methods to work with string normalization.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

The extension methods of the <xref:System.StringNormalizationExtensions> class are designed to work with .NET implementations that do not support the <xref:System.String.IsNormalized%2A?displayProperty=nameWithType> and <xref:System.String.Normalize%2A?displayProperty=nameWithType> methods. However, these methods are included in the <xref:System.String> class in .NET Standard 2.0 and are therefore available on all .NET implementations that support the .NET Standard 2.0. For more information, see [.NET Standard](/dotnet/standard/net-standard).
  
        ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetNormalizedLength">
      <MemberSignature Language="C#" Value="public static int GetNormalizedLength (this ReadOnlySpan&lt;char&gt; source, System.Text.NormalizationForm normalizationForm = System.Text.NormalizationForm.FormC);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNormalizedLength(valuetype System.ReadOnlySpan`1&lt;char&gt; source, valuetype System.Text.NormalizationForm normalizationForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringNormalizationExtensions.GetNormalizedLength(System.ReadOnlySpan{System.Char},System.Text.NormalizationForm)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNormalizedLength (source As ReadOnlySpan(Of Char), Optional normalizationForm As NormalizationForm = System.Text.NormalizationForm.FormC) As Integer" />
      <MemberSignature Language="F#" Value="static member GetNormalizedLength : ReadOnlySpan&lt;char&gt; * System.Text.NormalizationForm -&gt; int" Usage="System.StringNormalizationExtensions.GetNormalizedLength (source, normalizationForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="net-10.0" RefType="this" />
        <Parameter Name="normalizationForm" Type="System.Text.NormalizationForm" Index="1" FrameworkAlternate="net-10.0" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="normalizationForm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNormalized">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Indicates whether a string is normalized.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNormalized">
      <MemberSignature Language="C#" Value="public static bool IsNormalized (this ReadOnlySpan&lt;char&gt; source, System.Text.NormalizationForm normalizationForm = System.Text.NormalizationForm.FormC);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNormalized(valuetype System.ReadOnlySpan`1&lt;char&gt; source, valuetype System.Text.NormalizationForm normalizationForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringNormalizationExtensions.IsNormalized(System.ReadOnlySpan{System.Char},System.Text.NormalizationForm)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsNormalized (source As ReadOnlySpan(Of Char), Optional normalizationForm As NormalizationForm = System.Text.NormalizationForm.FormC) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsNormalized : ReadOnlySpan&lt;char&gt; * System.Text.NormalizationForm -&gt; bool" Usage="System.StringNormalizationExtensions.IsNormalized (source, normalizationForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="net-10.0" RefType="this" />
        <Parameter Name="normalizationForm" Type="System.Text.NormalizationForm" Index="1" FrameworkAlternate="net-10.0" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="normalizationForm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNormalized">
      <MemberSignature Language="C#" Value="public static bool IsNormalized (this string value);" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNormalized(string value) cil managed" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="DocId" Value="M:System.StringNormalizationExtensions.IsNormalized(System.String)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsNormalized (value As String) As Boolean" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsNormalized(System::String ^ value);" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="F#" Value="static member IsNormalized : string -&gt; bool" Usage="System.StringNormalizationExtensions.IsNormalized value" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="C#" Value="public static bool IsNormalized (this string strInput);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNormalized(string strInput) cil managed" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsNormalized (strInput As String) As Boolean" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsNormalized(System::String ^ strInput);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="static member IsNormalized : string -&gt; bool" Usage="System.StringNormalizationExtensions.IsNormalized strInput" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="dotnet-uwp-10.0;net-5.0">System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0" RefType="this" />
        <Parameter Name="strInput" Type="System.String" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="value">A string.</param>
        <param name="strInput">To be added.</param>
        <summary>Indicates whether the specified string is in Unicode normalization form C.</summary>
        <returns>
          <see langword="true" /> if <paramref name="value" /> is in normalization form C; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> contains invalid Unicode characters.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNormalized">
      <MemberSignature Language="C#" Value="public static bool IsNormalized (this string value, System.Text.NormalizationForm normalizationForm);" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNormalized(string value, valuetype System.Text.NormalizationForm normalizationForm) cil managed" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="DocId" Value="M:System.StringNormalizationExtensions.IsNormalized(System.String,System.Text.NormalizationForm)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsNormalized (value As String, normalizationForm As NormalizationForm) As Boolean" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsNormalized(System::String ^ value, System::Text::NormalizationForm normalizationForm);" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="F#" Value="static member IsNormalized : string * System.Text.NormalizationForm -&gt; bool" Usage="System.StringNormalizationExtensions.IsNormalized (value, normalizationForm)" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="C#" Value="public static bool IsNormalized (this string strInput, System.Text.NormalizationForm normalizationForm);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNormalized(string strInput, valuetype System.Text.NormalizationForm normalizationForm) cil managed" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsNormalized (strInput As String, normalizationForm As NormalizationForm) As Boolean" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsNormalized(System::String ^ strInput, System::Text::NormalizationForm normalizationForm);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="static member IsNormalized : string * System.Text.NormalizationForm -&gt; bool" Usage="System.StringNormalizationExtensions.IsNormalized (strInput, normalizationForm)" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-uwp-10.0">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType FrameworkAlternate="dotnet-uwp-10.0;net-5.0">System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0" RefType="this" />
        <Parameter Name="strInput" Type="System.String" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="normalizationForm" Type="System.Text.NormalizationForm" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value">A string.</param>
        <param name="normalizationForm">A Unicode normalization form.</param>
        <param name="strInput">To be added.</param>
        <summary>Indicates whether a string is in a specified Unicode normalization form.</summary>
        <returns>
          <see langword="true" /> if <paramref name="value" /> is in normalization form <paramref name="normalizationForm" />; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> contains invalid Unicode characters.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Normalize">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Normalizes a string.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public static string Normalize (this string value);" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Normalize(string value) cil managed" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="DocId" Value="M:System.StringNormalizationExtensions.Normalize(System.String)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Normalize (value As String) As String" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ Normalize(System::String ^ value);" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="F#" Value="static member Normalize : string -&gt; string" Usage="System.StringNormalizationExtensions.Normalize value" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="C#" Value="public static string Normalize (this string strInput);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Normalize(string strInput) cil managed" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Normalize (strInput As String) As String" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ Normalize(System::String ^ strInput);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="static member Normalize : string -&gt; string" Usage="System.StringNormalizationExtensions.Normalize strInput" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="dotnet-uwp-10.0;net-5.0">System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0" RefType="this" />
        <Parameter Name="strInput" Type="System.String" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="value">The string to normalize.</param>
        <param name="strInput">To be added.</param>
        <summary>Normalizes a string to a Unicode normalization form C.</summary>
        <returns>A new string whose textual value is the same as <paramref name="value" /> but whose binary representation is in Unicode normalization form C.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> contains invalid Unicode characters.</exception>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public static string Normalize (this string value, System.Text.NormalizationForm normalizationForm);" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Normalize(string value, valuetype System.Text.NormalizationForm normalizationForm) cil managed" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="DocId" Value="M:System.StringNormalizationExtensions.Normalize(System.String,System.Text.NormalizationForm)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Normalize (value As String, normalizationForm As NormalizationForm) As String" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ Normalize(System::String ^ value, System::Text::NormalizationForm normalizationForm);" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="F#" Value="static member Normalize : string * System.Text.NormalizationForm -&gt; string" Usage="System.StringNormalizationExtensions.Normalize (value, normalizationForm)" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="C#" Value="public static string Normalize (this string strInput, System.Text.NormalizationForm normalizationForm);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Normalize(string strInput, valuetype System.Text.NormalizationForm normalizationForm) cil managed" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Normalize (strInput As String, normalizationForm As NormalizationForm) As String" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ Normalize(System::String ^ strInput, System::Text::NormalizationForm normalizationForm);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="static member Normalize : string * System.Text.NormalizationForm -&gt; string" Usage="System.StringNormalizationExtensions.Normalize (strInput, normalizationForm)" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-uwp-10.0">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType FrameworkAlternate="dotnet-uwp-10.0;net-5.0">System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0" RefType="this" />
        <Parameter Name="strInput" Type="System.String" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="normalizationForm" Type="System.Text.NormalizationForm" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value">The string to normalize.</param>
        <param name="normalizationForm">The Unicode normalization form.</param>
        <param name="strInput">To be added.</param>
        <summary>Normalizes a string to the specified Unicode normalization form.</summary>
        <returns>A new string whose textual value is the same as <paramref name="value" /> but whose binary representation is in the <paramref name="normalizationForm" /> normalization form.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> contains invalid Unicode characters.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryNormalize">
      <MemberSignature Language="C#" Value="public static bool TryNormalize (this ReadOnlySpan&lt;char&gt; source, Span&lt;char&gt; destination, out int charsWritten, System.Text.NormalizationForm normalizationForm = System.Text.NormalizationForm.FormC);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryNormalize(valuetype System.ReadOnlySpan`1&lt;char&gt; source, valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.Text.NormalizationForm normalizationForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringNormalizationExtensions.TryNormalize(System.ReadOnlySpan{System.Char},System.Span{System.Char},System.Int32@,System.Text.NormalizationForm)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryNormalize (source As ReadOnlySpan(Of Char), destination As Span(Of Char), ByRef charsWritten As Integer, Optional normalizationForm As NormalizationForm = System.Text.NormalizationForm.FormC) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryNormalize : ReadOnlySpan&lt;char&gt; * Span&lt;char&gt; * int * System.Text.NormalizationForm -&gt; bool" Usage="System.StringNormalizationExtensions.TryNormalize (source, destination, charsWritten, normalizationForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="net-10.0" RefType="this" />
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="1" FrameworkAlternate="net-10.0" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="net-10.0" />
        <Parameter Name="normalizationForm" Type="System.Text.NormalizationForm" Index="3" FrameworkAlternate="net-10.0" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="normalizationForm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="IEqualityOperators&lt;TSelf,TOther&gt;" FullName="System.IEqualityOperators&lt;TSelf,TOther&gt;">
  <TypeSignature Language="C#" Value="public interface IEqualityOperators&lt;TSelf,TOther&gt; : IEquatable&lt;TOther&gt; where TSelf : IEqualityOperators&lt;TSelf,TOther&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEqualityOperators`2&lt;(class System.IEqualityOperators`2&lt;!TSelf, !TOther&gt;) TSelf, TOther&gt; implements class System.IEquatable`1&lt;!TOther&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IEqualityOperators`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEqualityOperators(Of TSelf, TOther)&#xA;Implements IEquatable(Of TOther)" />
  <TypeSignature Language="F#" Value="type IEqualityOperators&lt;'Self, 'Other (requires 'Self :&gt; IEqualityOperators&lt;'Self, 'Other&gt;)&gt; = interface&#xA;    interface IEquatable&lt;'Other&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TSelf, typename TOther&gt;&#xA; where TSelf : IEqualityOperators&lt;TSelf, TOther&gt;public interface class IEqualityOperators : IEquatable&lt;TOther&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSelf">
      <Constraints>
        <InterfaceName>System.IEqualityOperators&lt;TSelf,TOther&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TOther" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;TOther&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.RequiresPreviewFeatures("Generic Math is in preview.", Url="https://aka.ms/dotnet-warnings/generic-math-preview")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.RequiresPreviewFeatures("Generic Math is in preview.", Url="https://aka.ms/dotnet-warnings/generic-math-preview")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TSelf">The type that implements this interface.</typeparam>
    <typeparam name="TOther">The type that will be compared with <typeparamref name="TSelf" />.</typeparam>
    <summary>Defines a mechanism for comparing two values to determine equality.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (TSelf left, TOther right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname virtual bool op_Equality(!TSelf left, !TOther right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IEqualityOperators`2.op_Equality(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As TSelf, right As TOther) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : 'Self * 'Other -&gt; bool" Usage="left = right" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(TSelf left, TOther right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="TSelf" />
        <Parameter Name="right" Type="TOther" />
      </Parameters>
      <Docs>
        <param name="left">The value to compare with <paramref name="right" />.</param>
        <param name="right">The value to compare with <paramref name="left" />.</param>
        <summary>Compares two values to determine equality.</summary>
        <returns>
          <see langword="true" /> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (TSelf left, TOther right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname virtual bool op_Inequality(!TSelf left, !TOther right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IEqualityOperators`2.op_Inequality(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As TSelf, right As TOther) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : 'Self * 'Other -&gt; bool" Usage="System.IEqualityOperators&lt;'Self, 'Other (requires 'Self :&gt; System.IEqualityOperators&lt;'Self, 'Other&gt;)&gt;.op_Inequality (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(TSelf left, TOther right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="TSelf" />
        <Parameter Name="right" Type="TOther" />
      </Parameters>
      <Docs>
        <param name="left">The value to compare with <paramref name="right" />.</param>
        <param name="right">The value to compare with <paramref name="left" />.</param>
        <summary>Compares two values to determine inequality.</summary>
        <returns>
          <see langword="true" /> if <paramref name="left" /> is not equal to <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="IBinaryNumber&lt;TSelf&gt;" FullName="System.IBinaryNumber&lt;TSelf&gt;">
  <TypeSignature Language="C#" Value="public interface IBinaryNumber&lt;TSelf&gt; : IAdditionOperators&lt;TSelf,TSelf,TSelf&gt;, IAdditiveIdentity&lt;TSelf,TSelf&gt;, IBitwiseOperators&lt;TSelf,TSelf,TSelf&gt;, IComparable&lt;TSelf&gt;, IComparisonOperators&lt;TSelf,TSelf&gt;, IDecrementOperators&lt;TSelf&gt;, IDivisionOperators&lt;TSelf,TSelf,TSelf&gt;, IEqualityOperators&lt;TSelf,TSelf&gt;, IEquatable&lt;TSelf&gt;, IIncrementOperators&lt;TSelf&gt;, IModulusOperators&lt;TSelf,TSelf,TSelf&gt;, IMultiplicativeIdentity&lt;TSelf,TSelf&gt;, IMultiplyOperators&lt;TSelf,TSelf,TSelf&gt;, INumber&lt;TSelf&gt;, IParseable&lt;TSelf&gt;, ISpanParseable&lt;TSelf&gt;, ISubtractionOperators&lt;TSelf,TSelf,TSelf&gt;, IUnaryNegationOperators&lt;TSelf,TSelf&gt;, IUnaryPlusOperators&lt;TSelf,TSelf&gt; where TSelf : IBinaryNumber&lt;TSelf&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBinaryNumber`1&lt;(class System.IBinaryNumber`1&lt;!TSelf&gt;) TSelf&gt; implements class System.IAdditionOperators`3&lt;!TSelf, !TSelf, !TSelf&gt;, class System.IAdditiveIdentity`2&lt;!TSelf, !TSelf&gt;, class System.IBitwiseOperators`3&lt;!TSelf, !TSelf, !TSelf&gt;, class System.IComparable, class System.IComparable`1&lt;!TSelf&gt;, class System.IComparisonOperators`2&lt;!TSelf, !TSelf&gt;, class System.IDecrementOperators`1&lt;!TSelf&gt;, class System.IDivisionOperators`3&lt;!TSelf, !TSelf, !TSelf&gt;, class System.IEqualityOperators`2&lt;!TSelf, !TSelf&gt;, class System.IEquatable`1&lt;!TSelf&gt;, class System.IFormattable, class System.IIncrementOperators`1&lt;!TSelf&gt;, class System.IModulusOperators`3&lt;!TSelf, !TSelf, !TSelf&gt;, class System.IMultiplicativeIdentity`2&lt;!TSelf, !TSelf&gt;, class System.IMultiplyOperators`3&lt;!TSelf, !TSelf, !TSelf&gt;, class System.INumber`1&lt;!TSelf&gt;, class System.IParseable`1&lt;!TSelf&gt;, class System.ISpanFormattable, class System.ISpanParseable`1&lt;!TSelf&gt;, class System.ISubtractionOperators`3&lt;!TSelf, !TSelf, !TSelf&gt;, class System.IUnaryNegationOperators`2&lt;!TSelf, !TSelf&gt;, class System.IUnaryPlusOperators`2&lt;!TSelf, !TSelf&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IBinaryNumber`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBinaryNumber(Of TSelf)&#xA;Implements IAdditionOperators(Of TSelf, TSelf, TSelf), IAdditiveIdentity(Of TSelf, TSelf), IBitwiseOperators(Of TSelf, TSelf, TSelf), IComparable(Of TSelf), IComparisonOperators(Of TSelf, TSelf), IDecrementOperators(Of TSelf), IDivisionOperators(Of TSelf, TSelf, TSelf), IEqualityOperators(Of TSelf, TSelf), IEquatable(Of TSelf), IIncrementOperators(Of TSelf), IModulusOperators(Of TSelf, TSelf, TSelf), IMultiplicativeIdentity(Of TSelf, TSelf), IMultiplyOperators(Of TSelf, TSelf, TSelf), INumber(Of TSelf), IParseable(Of TSelf), ISpanParseable(Of TSelf), ISubtractionOperators(Of TSelf, TSelf, TSelf), IUnaryNegationOperators(Of TSelf, TSelf), IUnaryPlusOperators(Of TSelf, TSelf)" />
  <TypeSignature Language="F#" Value="type IBinaryNumber&lt;'Self (requires 'Self :&gt; IBinaryNumber&lt;'Self&gt;)&gt; = interface&#xA;    interface IBitwiseOperators&lt;'Self, 'Self, 'Self (requires 'Self :&gt; IBinaryNumber&lt;'Self&gt; and 'Self :&gt; IBinaryNumber&lt;'Self&gt; and 'Self :&gt; IBinaryNumber&lt;'Self&gt;)&gt;&#xA;    interface INumber&lt;'Self (requires 'Self :&gt; IBinaryNumber&lt;'Self&gt;)&gt;&#xA;    interface IAdditionOperators&lt;'Self, 'Self, 'Self (requires 'Self :&gt; IBinaryNumber&lt;'Self&gt; and 'Self :&gt; IBinaryNumber&lt;'Self&gt; and 'Self :&gt; IBinaryNumber&lt;'Self&gt;)&gt;&#xA;    interface IAdditiveIdentity&lt;'Self, 'Self (requires 'Self :&gt; IBinaryNumber&lt;'Self&gt; and 'Self :&gt; IBinaryNumber&lt;'Self&gt;)&gt;&#xA;    interface IComparable&#xA;    interface IComparable&lt;'Self (requires 'Self :&gt; IBinaryNumber&lt;'Self&gt;)&gt;&#xA;    interface IComparisonOperators&lt;'Self, 'Self (requires 'Self :&gt; IBinaryNumber&lt;'Self&gt; and 'Self :&gt; IBinaryNumber&lt;'Self&gt;)&gt;&#xA;    interface IEqualityOperators&lt;'Self, 'Self (requires 'Self :&gt; IBinaryNumber&lt;'Self&gt; and 'Self :&gt; IBinaryNumber&lt;'Self&gt;)&gt;&#xA;    interface IEquatable&lt;'Self (requires 'Self :&gt; IBinaryNumber&lt;'Self&gt;)&gt;&#xA;    interface IDecrementOperators&lt;'Self (requires 'Self :&gt; IBinaryNumber&lt;'Self&gt;)&gt;&#xA;    interface IDivisionOperators&lt;'Self, 'Self, 'Self (requires 'Self :&gt; IBinaryNumber&lt;'Self&gt; and 'Self :&gt; IBinaryNumber&lt;'Self&gt; and 'Self :&gt; IBinaryNumber&lt;'Self&gt;)&gt;&#xA;    interface IFormattable&#xA;    interface IIncrementOperators&lt;'Self (requires 'Self :&gt; IBinaryNumber&lt;'Self&gt;)&gt;&#xA;    interface IModulusOperators&lt;'Self, 'Self, 'Self (requires 'Self :&gt; IBinaryNumber&lt;'Self&gt; and 'Self :&gt; IBinaryNumber&lt;'Self&gt; and 'Self :&gt; IBinaryNumber&lt;'Self&gt;)&gt;&#xA;    interface IMultiplicativeIdentity&lt;'Self, 'Self (requires 'Self :&gt; IBinaryNumber&lt;'Self&gt; and 'Self :&gt; IBinaryNumber&lt;'Self&gt;)&gt;&#xA;    interface IMultiplyOperators&lt;'Self, 'Self, 'Self (requires 'Self :&gt; IBinaryNumber&lt;'Self&gt; and 'Self :&gt; IBinaryNumber&lt;'Self&gt; and 'Self :&gt; IBinaryNumber&lt;'Self&gt;)&gt;&#xA;    interface IParseable&lt;'Self (requires 'Self :&gt; IBinaryNumber&lt;'Self&gt;)&gt;&#xA;    interface ISpanFormattable&#xA;    interface ISpanParseable&lt;'Self (requires 'Self :&gt; IBinaryNumber&lt;'Self&gt;)&gt;&#xA;    interface ISubtractionOperators&lt;'Self, 'Self, 'Self (requires 'Self :&gt; IBinaryNumber&lt;'Self&gt; and 'Self :&gt; IBinaryNumber&lt;'Self&gt; and 'Self :&gt; IBinaryNumber&lt;'Self&gt;)&gt;&#xA;    interface IUnaryNegationOperators&lt;'Self, 'Self (requires 'Self :&gt; IBinaryNumber&lt;'Self&gt; and 'Self :&gt; IBinaryNumber&lt;'Self&gt;)&gt;&#xA;    interface IUnaryPlusOperators&lt;'Self, 'Self (requires 'Self :&gt; IBinaryNumber&lt;'Self&gt; and 'Self :&gt; IBinaryNumber&lt;'Self&gt;)&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TSelf&gt;&#xA; where TSelf : IBinaryNumber&lt;TSelf&gt;public interface class IBinaryNumber : IAdditionOperators&lt;TSelf, TSelf, TSelf&gt;, IAdditiveIdentity&lt;TSelf, TSelf&gt;, IBitwiseOperators&lt;TSelf, TSelf, TSelf&gt;, IComparable&lt;TSelf&gt;, IComparisonOperators&lt;TSelf, TSelf&gt;, IDecrementOperators&lt;TSelf&gt;, IDivisionOperators&lt;TSelf, TSelf, TSelf&gt;, IEqualityOperators&lt;TSelf, TSelf&gt;, IEquatable&lt;TSelf&gt;, IIncrementOperators&lt;TSelf&gt;, IModulusOperators&lt;TSelf, TSelf, TSelf&gt;, IMultiplicativeIdentity&lt;TSelf, TSelf&gt;, IMultiplyOperators&lt;TSelf, TSelf, TSelf&gt;, INumber&lt;TSelf&gt;, IParseable&lt;TSelf&gt;, ISpanParseable&lt;TSelf&gt;, ISubtractionOperators&lt;TSelf, TSelf, TSelf&gt;, IUnaryNegationOperators&lt;TSelf, TSelf&gt;, IUnaryPlusOperators&lt;TSelf, TSelf&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSelf">
      <Constraints>
        <InterfaceName>System.IBinaryNumber&lt;TSelf&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAdditionOperators&lt;TSelf,TSelf,TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IAdditiveIdentity&lt;TSelf,TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IBitwiseOperators&lt;TSelf,TSelf,TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;TOther&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparisonOperators&lt;TSelf,TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDecrementOperators&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDivisionOperators&lt;TSelf,TSelf,TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEqualityOperators&lt;TSelf,TOther&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEqualityOperators&lt;TSelf,TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;TOther&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IIncrementOperators&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IModulusOperators&lt;TSelf,TSelf,TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IMultiplicativeIdentity&lt;TSelf,TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IMultiplyOperators&lt;TSelf,TSelf,TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.INumber&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IParseable&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ISpanFormattable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ISpanParseable&lt;TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ISubtractionOperators&lt;TSelf,TSelf,TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IUnaryNegationOperators&lt;TSelf,TSelf&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IUnaryPlusOperators&lt;TSelf,TSelf&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.RequiresPreviewFeatures("Generic Math is in preview.", Url="https://aka.ms/dotnet-warnings/generic-math-preview")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.RequiresPreviewFeatures("Generic Math is in preview.", Url="https://aka.ms/dotnet-warnings/generic-math-preview")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TSelf">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="IsPow2">
      <MemberSignature Language="C#" Value="public static bool IsPow2 (TSelf value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual bool IsPow2(!TSelf value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IBinaryNumber`1.IsPow2(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPow2 (value As TSelf) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsPow2 : 'Self -&gt; bool" Usage="System.IBinaryNumber&lt;'Self (requires 'Self :&gt; System.IBinaryNumber&lt;'Self&gt;)&gt;.IsPow2 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPow2(TSelf value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log2">
      <MemberSignature Language="C#" Value="public static TSelf Log2 (TSelf value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig virtual !TSelf Log2(!TSelf value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IBinaryNumber`1.Log2(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log2 (value As TSelf) As TSelf" />
      <MemberSignature Language="F#" Value="static member Log2 : 'Self -&gt; 'Self" Usage="System.IBinaryNumber&lt;'Self (requires 'Self :&gt; System.IBinaryNumber&lt;'Self&gt;)&gt;.Log2 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TSelf Log2(TSelf value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSelf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TSelf" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="OperatingSystem" FullName="System.OperatingSystem">
  <TypeSignature Language="C#" Value="public sealed class OperatingSystem : ICloneable, System.Runtime.Serialization.ISerializable" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperatingSystem extends System.Object implements class System.ICloneable, class System.Runtime.Serialization.ISerializable" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.OperatingSystem" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperatingSystem&#xA;Implements ICloneable, ISerializable" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type OperatingSystem = class&#xA;    interface ICloneable&#xA;    interface ISerializable" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperatingSystem sealed : ICloneable, System::Runtime::Serialization::ISerializable" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public sealed class OperatingSystem : ICloneable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit OperatingSystem extends System.Object implements class System.ICloneable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperatingSystem&#xA;Implements ICloneable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type OperatingSystem = class&#xA;    interface ICloneable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperatingSystem sealed : ICloneable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit OperatingSystem extends System.Object implements class System.ICloneable, class System.Runtime.Serialization.ISerializable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="6.0.0.0" FrameworkAlternate="net-6.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="6.0.0.0" To="System.Runtime" ToVersion="6.0.0.0" FrameworkAlternate="net-6.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="7.0.0.0" FrameworkAlternate="net-7.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="7.0.0.0" To="System.Runtime" ToVersion="7.0.0.0" FrameworkAlternate="net-7.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents information about an operating system, such as the version and platform identifier. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 The <xref:System.OperatingSystem> class contains information about an operating system.

 For information about the current runtime operating system, retrieve the <xref:System.OperatingSystem> object returned by the <xref:System.Environment.OSVersion%2A?displayProperty=nameWithType> property. For a list of Windows operating system versions and their corresponding version numbers returned by the <xref:System.OperatingSystem.Version%2A> and <xref:System.OperatingSystem.VersionString%2A> properties and the <xref:System.OperatingSystem.ToString%2A> method, see [Operating System Version](/windows/win32/sysinfo/operating-system-version).

 By design, the <xref:System.OperatingSystem> class is not a general purpose means of describing an operating system, and you cannot derive a more inclusive type from the <xref:System.OperatingSystem> class. If you need a type to contain other information about an operating system, create your own type, then include a field of type <xref:System.OperatingSystem> and any additional fields, properties, or methods that you require.



## Examples
 The following code example uses the <xref:System.OperatingSystem> object to display information about the runtime operating system.

 :::code language="csharp" source="~/snippets/csharp/System/OperatingSystem/Overview/osinfo1.cs" id="Snippet1":::
 :::code language="fsharp" source="~/snippets/fsharp/System/OperatingSystem/Overview/osinfo1.fs" id="Snippet1":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_CLR_System/system.environment.osversion/vb/osinfo1.vb" id="Snippet1":::

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperatingSystem (PlatformID platform, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.PlatformID platform, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.#ctor(System.PlatformID,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (platform As PlatformID, version As Version)" />
      <MemberSignature Language="F#" Value="new OperatingSystem : PlatformID * Version -&gt; OperatingSystem" Usage="new System.OperatingSystem (platform, version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperatingSystem(PlatformID platform, Version ^ version);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="platform" Type="System.PlatformID" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="platform">One of the <see cref="T:System.PlatformID" /> values that indicates the operating system platform.</param>
        <param name="version">A <see cref="T:System.Version" /> object that indicates the version of the operating system.</param>
        <summary>Initializes a new instance of the <see cref="T:System.OperatingSystem" /> class, using the specified platform identifier value and version object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="version" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="platform" /> is not a <see cref="T:System.PlatformID" /> enumeration value.</exception>
        <block subset="none" type="usage">
          <para>If you are using the <see cref="T:System.OperatingSystem" /> class to retrieve information about the runtime operating system, you should not call this constructor to instantiate an <see cref="T:System.OperatingSystem" /> object. Instead, you can retrieve an <see cref="T:System.OperatingSystem" /> object that describes the operating system from the <see cref="P:System.Environment.OSVersion" /> property.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="operatingSystem.Clone " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an <see cref="T:System.OperatingSystem" /> object that is identical to this instance.</summary>
        <returns>An <see cref="T:System.OperatingSystem" /> object that is a copy of this instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example illustrates the use of the <xref:System.OperatingSystem.Clone%2A> method to make a copy of an <xref:System.OperatingSystem> object. The clone is compared with the original object to show that they are not the same object.

 :::code language="cpp" source="~/snippets/cpp/VS_Snippets_CLR_System/system.OperatingSystem.Clone/CPP/clone.cpp" id="Snippet1":::
 :::code language="csharp" source="~/snippets/csharp/System/OperatingSystem/Clone/clone.cs" id="Snippet1":::
 :::code language="fsharp" source="~/snippets/fsharp/System/OperatingSystem/Clone/clone.fs" id="Snippet1":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_CLR_System/system.OperatingSystem.Clone/VB/clone.vb" id="Snippet1":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="operatingSystem.GetObjectData (info, context)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="net-5.0;net-6.0;net-7.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info">The object to populate with serialization information.</param>
        <param name="context">The place to store and retrieve serialized data. Reserved for future use.</param>
        <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data necessary to deserialize this instance.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 The `context` parameter is reserved for future use; it is currently not implemented in the <xref:System.OperatingSystem.GetObjectData%2A> method.

 For more information, see the <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A?displayProperty=nameWithType> method.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="info" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsAndroid">
      <MemberSignature Language="C#" Value="public static bool IsAndroid ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAndroid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.IsAndroid" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAndroid () As Boolean" />
      <MemberSignature Language="F#" Value="static member IsAndroid : unit -&gt; bool" Usage="System.OperatingSystem.IsAndroid " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAndroid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether the current application is running on Android.</summary>
        <returns>
          <see langword="true" /> if the current application is running on Android; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAndroidVersionAtLeast">
      <MemberSignature Language="C#" Value="public static bool IsAndroidVersionAtLeast (int major, int minor = 0, int build = 0, int revision = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAndroidVersionAtLeast(int32 major, int32 minor, int32 build, int32 revision) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.IsAndroidVersionAtLeast(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAndroidVersionAtLeast (major As Integer, Optional minor As Integer = 0, Optional build As Integer = 0, Optional revision As Integer = 0) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsAndroidVersionAtLeast : int * int * int * int -&gt; bool" Usage="System.OperatingSystem.IsAndroidVersionAtLeast (major, minor, build, revision)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
        <Parameter Name="minor" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
        <Parameter Name="build" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
        <Parameter Name="revision" Type="System.Int32" Index="3" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
      </Parameters>
      <Docs>
        <param name="major">The major release number.</param>
        <param name="minor">The minor release number.</param>
        <param name="build">The build release number.</param>
        <param name="revision">The revision release number.</param>
        <summary>Checks if the Android version (returned by the Linux command <c>uname</c>) is greater than or equal to the specified version. This method can be used to guard APIs that were added in the specified version.</summary>
        <returns>
          <see langword="true" /> if the current application is running on an Android version that is at least what was specified in the parameters; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBrowser">
      <MemberSignature Language="C#" Value="public static bool IsBrowser ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBrowser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.IsBrowser" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsBrowser () As Boolean" />
      <MemberSignature Language="F#" Value="static member IsBrowser : unit -&gt; bool" Usage="System.OperatingSystem.IsBrowser " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsBrowser();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether the current application is running as WASM in a browser.</summary>
        <returns>
          <see langword="true" /> if the current application is running as WASM in a browser; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFreeBSD">
      <MemberSignature Language="C#" Value="public static bool IsFreeBSD ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFreeBSD() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.IsFreeBSD" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsFreeBSD () As Boolean" />
      <MemberSignature Language="F#" Value="static member IsFreeBSD : unit -&gt; bool" Usage="System.OperatingSystem.IsFreeBSD " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsFreeBSD();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether the current application is running on FreeBSD.</summary>
        <returns>
          <see langword="true" /> if the current application is running on FreeBSD; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFreeBSDVersionAtLeast">
      <MemberSignature Language="C#" Value="public static bool IsFreeBSDVersionAtLeast (int major, int minor = 0, int build = 0, int revision = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFreeBSDVersionAtLeast(int32 major, int32 minor, int32 build, int32 revision) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.IsFreeBSDVersionAtLeast(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsFreeBSDVersionAtLeast (major As Integer, Optional minor As Integer = 0, Optional build As Integer = 0, Optional revision As Integer = 0) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsFreeBSDVersionAtLeast : int * int * int * int -&gt; bool" Usage="System.OperatingSystem.IsFreeBSDVersionAtLeast (major, minor, build, revision)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
        <Parameter Name="minor" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
        <Parameter Name="build" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
        <Parameter Name="revision" Type="System.Int32" Index="3" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
      </Parameters>
      <Docs>
        <param name="major">The major release number.</param>
        <param name="minor">The minor release number.</param>
        <param name="build">The build release number.</param>
        <param name="revision">The revision release number.</param>
        <summary>Checks if the FreeBSD version (returned by the Linux command <c>uname</c>) is greater than or equal to the specified version. This method can be used to guard APIs that were added in the specified version.</summary>
        <returns>
          <see langword="true" /> if the current application is running on a FreeBSD version that is at least what was specified in the parameters; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIOS">
      <MemberSignature Language="C#" Value="public static bool IsIOS ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsIOS() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.IsIOS" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsIOS () As Boolean" />
      <MemberSignature Language="F#" Value="static member IsIOS : unit -&gt; bool" Usage="System.OperatingSystem.IsIOS " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsIOS();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-6.0;net-7.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatformGuard("maccatalyst")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatformGuard("maccatalyst")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether the current application is running on iOS or MacCatalyst.</summary>
        <returns>
          <see langword="true" /> if the current application is running on iOS or MacCatalyst; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIOSVersionAtLeast">
      <MemberSignature Language="C#" Value="public static bool IsIOSVersionAtLeast (int major, int minor = 0, int build = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsIOSVersionAtLeast(int32 major, int32 minor, int32 build) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.IsIOSVersionAtLeast(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsIOSVersionAtLeast (major As Integer, Optional minor As Integer = 0, Optional build As Integer = 0) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsIOSVersionAtLeast : int * int * int -&gt; bool" Usage="System.OperatingSystem.IsIOSVersionAtLeast (major, minor, build)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-6.0;net-7.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatformGuard("maccatalyst")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatformGuard("maccatalyst")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
        <Parameter Name="minor" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
        <Parameter Name="build" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
      </Parameters>
      <Docs>
        <param name="major">The major release number.</param>
        <param name="minor">The minor release number.</param>
        <param name="build">The build release number.</param>
        <summary>Checks if the iOS/MacCatalyst version (returned by <c>libobjc.get_operatingSystemVersion</c>) is greater than or equal to the specified version. This method can be used to guard APIs that were added in the specified iOS version.</summary>
        <returns>
          <see langword="true" /> if the current application is running on an iOS/MacCatalyst version that is at least what was specified in the parameters; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLinux">
      <MemberSignature Language="C#" Value="public static bool IsLinux ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLinux() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.IsLinux" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLinux () As Boolean" />
      <MemberSignature Language="F#" Value="static member IsLinux : unit -&gt; bool" Usage="System.OperatingSystem.IsLinux " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLinux();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether the current application is running on Linux.</summary>
        <returns>
          <see langword="true" /> if the current application is running on Linux; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMacCatalyst">
      <MemberSignature Language="C#" Value="public static bool IsMacCatalyst ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMacCatalyst() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.IsMacCatalyst" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMacCatalyst () As Boolean" />
      <MemberSignature Language="F#" Value="static member IsMacCatalyst : unit -&gt; bool" Usage="System.OperatingSystem.IsMacCatalyst " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMacCatalyst();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether the current application is running on Mac Catalyst.</summary>
        <returns>
          <see langword="true" /> if the current application is running on Mac Catalyst; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMacCatalystVersionAtLeast">
      <MemberSignature Language="C#" Value="public static bool IsMacCatalystVersionAtLeast (int major, int minor = 0, int build = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMacCatalystVersionAtLeast(int32 major, int32 minor, int32 build) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.IsMacCatalystVersionAtLeast(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMacCatalystVersionAtLeast (major As Integer, Optional minor As Integer = 0, Optional build As Integer = 0) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsMacCatalystVersionAtLeast : int * int * int -&gt; bool" Usage="System.OperatingSystem.IsMacCatalystVersionAtLeast (major, minor, build)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" Index="0" FrameworkAlternate="net-6.0;net-7.0" />
        <Parameter Name="minor" Type="System.Int32" Index="1" FrameworkAlternate="net-6.0;net-7.0" />
        <Parameter Name="build" Type="System.Int32" Index="2" FrameworkAlternate="net-6.0;net-7.0" />
      </Parameters>
      <Docs>
        <param name="major">The version major number.</param>
        <param name="minor">The version minor number.</param>
        <param name="build">The version build number.</param>
        <summary>Check for the Mac Catalyst version (iOS version as presented in Apple documentation) with a ≤ version comparison. Used to guard APIs that were added in the given Mac Catalyst release.</summary>
        <returns>
          <see langword="true" /> if the Mac Catalyst version is greater or equal than the specified version comparison; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMacOS">
      <MemberSignature Language="C#" Value="public static bool IsMacOS ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMacOS() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.IsMacOS" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMacOS () As Boolean" />
      <MemberSignature Language="F#" Value="static member IsMacOS : unit -&gt; bool" Usage="System.OperatingSystem.IsMacOS " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMacOS();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether the current application is running on macOS.</summary>
        <returns>
          <see langword="true" /> if the current application is running on macOS; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMacOSVersionAtLeast">
      <MemberSignature Language="C#" Value="public static bool IsMacOSVersionAtLeast (int major, int minor = 0, int build = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMacOSVersionAtLeast(int32 major, int32 minor, int32 build) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.IsMacOSVersionAtLeast(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMacOSVersionAtLeast (major As Integer, Optional minor As Integer = 0, Optional build As Integer = 0) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsMacOSVersionAtLeast : int * int * int -&gt; bool" Usage="System.OperatingSystem.IsMacOSVersionAtLeast (major, minor, build)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
        <Parameter Name="minor" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
        <Parameter Name="build" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
      </Parameters>
      <Docs>
        <param name="major">The major release number.</param>
        <param name="minor">The minor release number.</param>
        <param name="build">The build release number.</param>
        <summary>Checks if the macOS version (returned by <c>libobjc.get_operatingSystemVersion</c>) is greater than or equal to the specified version. This method can be used to guard APIs that were added in the specified macOS version.</summary>
        <returns>
          <see langword="true" /> if the current application is running on an macOS version that is at least what was specified in the parameters; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOSPlatform">
      <MemberSignature Language="C#" Value="public static bool IsOSPlatform (string platform);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsOSPlatform(string platform) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.IsOSPlatform(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsOSPlatform (platform As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsOSPlatform : string -&gt; bool" Usage="System.OperatingSystem.IsOSPlatform platform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsOSPlatform(System::String ^ platform);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="platform" Type="System.String" Index="0" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
      </Parameters>
      <Docs>
        <param name="platform">The case-insensitive platform name. Examples: Browser, Linux, FreeBSD, Android, iOS, macOS, tvOS, watchOS, Windows.</param>
        <summary>Indicates whether the current application is running on the specified platform.</summary>
        <returns>
          <see langword="true" /> if the current application is running on the specified platform; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOSPlatformVersionAtLeast">
      <MemberSignature Language="C#" Value="public static bool IsOSPlatformVersionAtLeast (string platform, int major, int minor = 0, int build = 0, int revision = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsOSPlatformVersionAtLeast(string platform, int32 major, int32 minor, int32 build, int32 revision) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.IsOSPlatformVersionAtLeast(System.String,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsOSPlatformVersionAtLeast (platform As String, major As Integer, Optional minor As Integer = 0, Optional build As Integer = 0, Optional revision As Integer = 0) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsOSPlatformVersionAtLeast : string * int * int * int * int -&gt; bool" Usage="System.OperatingSystem.IsOSPlatformVersionAtLeast (platform, major, minor, build, revision)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="platform" Type="System.String" Index="0" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
        <Parameter Name="major" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
        <Parameter Name="minor" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
        <Parameter Name="build" Type="System.Int32" Index="3" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
        <Parameter Name="revision" Type="System.Int32" Index="4" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
      </Parameters>
      <Docs>
        <param name="platform">The case-insensitive platform name. Examples: Browser, Linux, FreeBSD, Android, iOS, macOS, tvOS, watchOS, Windows.</param>
        <param name="major">The major release number.</param>
        <param name="minor">The minor release number (optional).</param>
        <param name="build">The build release number (optional).</param>
        <param name="revision">The revision release number (optional).</param>
        <summary>Checks if the operating system version is greater than or equal to the specified platform version. This method can be used to guard APIs that were added in the specified OS version.</summary>
        <returns>
          <see langword="true" /> if the current application is running on the specified platform and is at least in the version specified in the parameters; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTvOS">
      <MemberSignature Language="C#" Value="public static bool IsTvOS ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTvOS() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.IsTvOS" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsTvOS () As Boolean" />
      <MemberSignature Language="F#" Value="static member IsTvOS : unit -&gt; bool" Usage="System.OperatingSystem.IsTvOS " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTvOS();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether the current application is running on tvOS.</summary>
        <returns>
          <see langword="true" /> if the current application is running on tvOS; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTvOSVersionAtLeast">
      <MemberSignature Language="C#" Value="public static bool IsTvOSVersionAtLeast (int major, int minor = 0, int build = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTvOSVersionAtLeast(int32 major, int32 minor, int32 build) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.IsTvOSVersionAtLeast(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsTvOSVersionAtLeast (major As Integer, Optional minor As Integer = 0, Optional build As Integer = 0) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsTvOSVersionAtLeast : int * int * int -&gt; bool" Usage="System.OperatingSystem.IsTvOSVersionAtLeast (major, minor, build)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
        <Parameter Name="minor" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
        <Parameter Name="build" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
      </Parameters>
      <Docs>
        <param name="major">The major release number.</param>
        <param name="minor">The minor release number.</param>
        <param name="build">The build release number.</param>
        <summary>Checks if the tvOS version (returned by <c>libobjc.get_operatingSystemVersion</c>) is greater than or equal to the specified version. This method can be used to guard APIs that were added in the specified tvOS version.</summary>
        <returns>
          <see langword="true" /> if the current application is running on a tvOS version that is at least what was specified in the parameters; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWatchOS">
      <MemberSignature Language="C#" Value="public static bool IsWatchOS ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWatchOS() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.IsWatchOS" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWatchOS () As Boolean" />
      <MemberSignature Language="F#" Value="static member IsWatchOS : unit -&gt; bool" Usage="System.OperatingSystem.IsWatchOS " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWatchOS();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether the current application is running on watchOS.</summary>
        <returns>
          <see langword="true" /> if the current application is running on watchOS; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWatchOSVersionAtLeast">
      <MemberSignature Language="C#" Value="public static bool IsWatchOSVersionAtLeast (int major, int minor = 0, int build = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWatchOSVersionAtLeast(int32 major, int32 minor, int32 build) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.IsWatchOSVersionAtLeast(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWatchOSVersionAtLeast (major As Integer, Optional minor As Integer = 0, Optional build As Integer = 0) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsWatchOSVersionAtLeast : int * int * int -&gt; bool" Usage="System.OperatingSystem.IsWatchOSVersionAtLeast (major, minor, build)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
        <Parameter Name="minor" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
        <Parameter Name="build" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
      </Parameters>
      <Docs>
        <param name="major">The major release number.</param>
        <param name="minor">The minor release number.</param>
        <param name="build">The build release number.</param>
        <summary>Checks if the watchOS version (returned by <c>libobjc.get_operatingSystemVersion</c>) is greater than or equal to the specified version. This method can be used to guard APIs that were added in the specified watchOS version.</summary>
        <returns>
          <see langword="true" /> if the current application is running on a watchOS version that is at least what was specified in the parameters; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWindows">
      <MemberSignature Language="C#" Value="public static bool IsWindows ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWindows() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.IsWindows" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWindows () As Boolean" />
      <MemberSignature Language="F#" Value="static member IsWindows : unit -&gt; bool" Usage="System.OperatingSystem.IsWindows " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWindows();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether the current application is running on Windows.</summary>
        <returns>
          <see langword="true" /> if the current application is running on Windows; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWindowsVersionAtLeast">
      <MemberSignature Language="C#" Value="public static bool IsWindowsVersionAtLeast (int major, int minor = 0, int build = 0, int revision = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWindowsVersionAtLeast(int32 major, int32 minor, int32 build, int32 revision) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.IsWindowsVersionAtLeast(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWindowsVersionAtLeast (major As Integer, Optional minor As Integer = 0, Optional build As Integer = 0, Optional revision As Integer = 0) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsWindowsVersionAtLeast : int * int * int * int -&gt; bool" Usage="System.OperatingSystem.IsWindowsVersionAtLeast (major, minor, build, revision)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
        <Parameter Name="minor" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
        <Parameter Name="build" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
        <Parameter Name="revision" Type="System.Int32" Index="3" FrameworkAlternate="net-5.0;net-6.0;net-7.0" />
      </Parameters>
      <Docs>
        <param name="major">The major release number.</param>
        <param name="minor">The minor release number.</param>
        <param name="build">The build release number.</param>
        <param name="revision">The revision release number.</param>
        <summary>Checks if the Windows version (returned by <c>RtlGetVersion</c>) is greater than or equal to the specified version. This method can be used to guard APIs that were added in the specified Windows version.</summary>
        <returns>
          <see langword="true" /> if the current application is running on a Windows version that is at least what was specified in the parameters; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Platform">
      <MemberSignature Language="C#" Value="public PlatformID Platform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.PlatformID Platform" />
      <MemberSignature Language="DocId" Value="P:System.OperatingSystem.Platform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Platform As PlatformID" />
      <MemberSignature Language="F#" Value="member this.Platform : PlatformID" Usage="System.OperatingSystem.Platform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property PlatformID Platform { PlatformID get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.PlatformID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.PlatformID" /> enumeration value that identifies the operating system platform.</summary>
        <value>One of the <see cref="T:System.PlatformID" /> values.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 The following code example creates several <xref:System.OperatingSystem> objects and displays the <xref:System.OperatingSystem.Platform%2A> property for each.

 :::code language="cpp" source="~/snippets/cpp/VS_Snippets_CLR_System/system.OperatingSystem.Platform_Version/CPP/plat_ver.cpp" id="Snippet1":::
 :::code language="csharp" source="~/snippets/csharp/System/OperatingSystem/Platform/plat_ver.cs" id="Snippet1":::
 :::code language="fsharp" source="~/snippets/fsharp/System/OperatingSystem/Platform/plat_ver.fs" id="Snippet1":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_CLR_System/system.OperatingSystem.Platform_Version/VB/plat_ver.vb" id="Snippet1":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServicePack">
      <MemberSignature Language="C#" Value="public string ServicePack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServicePack" />
      <MemberSignature Language="DocId" Value="P:System.OperatingSystem.ServicePack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePack As String" />
      <MemberSignature Language="F#" Value="member this.ServicePack : string" Usage="System.OperatingSystem.ServicePack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServicePack { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the service pack version represented by this <see cref="T:System.OperatingSystem" /> object.</summary>
        <value>The service pack version, if service packs are supported and at least one is installed; otherwise, an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 A service pack is used to distribute software updates for the operating system on which it is installed. However, not every operating system uses service packs.

 The service pack version, if available, is already correctly formatted for display.



## Examples
 The following code example demonstrates the <xref:System.OperatingSystem.ServicePack%2A> property.

 :::code language="cpp" source="~/snippets/cpp/VS_Snippets_CLR/OperatingSystem.ServicePack/CPP/sp.cpp" id="Snippet1":::
 :::code language="csharp" source="~/snippets/csharp/System/OperatingSystem/ServicePack/sp.cs" id="Snippet1":::
 :::code language="fsharp" source="~/snippets/fsharp/System/OperatingSystem/ServicePack/sp.fs" id="Snippet1":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_CLR/OperatingSystem.ServicePack/VB/sp.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OperatingSystem.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="operatingSystem.ToString " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts the value of this <see cref="T:System.OperatingSystem" /> object to its equivalent string representation.</summary>
        <returns>The string representation of the values returned by the <see cref="P:System.OperatingSystem.Platform" />, <see cref="P:System.OperatingSystem.Version" />, and <see cref="P:System.OperatingSystem.ServicePack" /> properties.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

For a list of Windows operating system versions and their corresponding version numbers, see [Operating System Version](/windows/win32/sysinfo/operating-system-version).



## Examples
 The following code example illustrates the use of the <xref:System.OperatingSystem.ToString%2A> method to display <xref:System.OperatingSystem> objects.

 :::code language="cpp" source="~/snippets/cpp/VS_Snippets_CLR_System/system.OperatingSystem.Ctor_ToString/CPP/ctor_tostr.cpp" id="Snippet1":::
 :::code language="csharp" source="~/snippets/csharp/System/OperatingSystem/ToString/ctor_tostr.cs" id="Snippet1":::
 :::code language="fsharp" source="~/snippets/fsharp/System/OperatingSystem/ToString/ctor_tostr.fs" id="Snippet1":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_CLR_System/system.OperatingSystem.Ctor_ToString/VB/ctor_tostr.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <altmember cref="P:System.OperatingSystem.VersionString" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.OperatingSystem.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Version" />
      <MemberSignature Language="F#" Value="member this.Version : Version" Usage="System.OperatingSystem.Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Version" /> object that identifies the operating system.</summary>
        <value>A <see cref="T:System.Version" /> object that describes the major version, minor version, build, and revision numbers for the operating system.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

For a list of Windows operating system versions and their corresponding version numbers, see [Operating System Version](/windows/win32/sysinfo/operating-system-version).



## Examples
 The following code example creates several <xref:System.OperatingSystem> objects and displays the <xref:System.OperatingSystem.Version%2A> property for each.

 :::code language="cpp" source="~/snippets/cpp/VS_Snippets_CLR_System/system.OperatingSystem.Platform_Version/CPP/plat_ver.cpp" id="Snippet1":::
 :::code language="csharp" source="~/snippets/csharp/System/OperatingSystem/Platform/plat_ver.cs" id="Snippet1":::
 :::code language="fsharp" source="~/snippets/fsharp/System/OperatingSystem/Platform/plat_ver.fs" id="Snippet1":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_CLR_System/system.OperatingSystem.Platform_Version/VB/plat_ver.vb" id="Snippet1":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VersionString">
      <MemberSignature Language="C#" Value="public string VersionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VersionString" />
      <MemberSignature Language="DocId" Value="P:System.OperatingSystem.VersionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VersionString As String" />
      <MemberSignature Language="F#" Value="member this.VersionString : string" Usage="System.OperatingSystem.VersionString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VersionString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the concatenated string representation of the platform identifier, version, and service pack that are currently installed on the operating system.</summary>
        <value>The string representation of the values returned by the <see cref="P:System.OperatingSystem.Platform" />, <see cref="P:System.OperatingSystem.Version" />, and <see cref="P:System.OperatingSystem.ServicePack" /> properties.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 By default, the value returned by <xref:System.OperatingSystem.VersionString%2A> is the same as the value returned by the <xref:System.OperatingSystem.ToString%2A> method. However, an implementation of the .NET Framework for a different platform might return a more appropriate string for that platform.

For a list of Windows operating system versions and their corresponding version numbers, see [Operating System Version](/windows/win32/sysinfo/operating-system-version).



## Examples
 The following code example demonstrates the <xref:System.OperatingSystem.VersionString%2A> property.

 :::code language="cpp" source="~/snippets/cpp/VS_Snippets_CLR/OperatingSystem.VersionString/CPP/osvs.cpp" id="Snippet1":::
 :::code language="csharp" source="~/snippets/csharp/System/OperatingSystem/VersionString/osvs.cs" id="Snippet1":::
 :::code language="fsharp" source="~/snippets/fsharp/System/OperatingSystem/VersionString/osvs.fs" id="Snippet1":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_CLR/OperatingSystem.VersionString/VB/osvs.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <altmember cref="M:System.OperatingSystem.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="HashCode" FullName="System.HashCode">
  <TypeSignature Language="C#" Value="public struct HashCode" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit HashCode extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.HashCode" />
  <TypeSignature Language="VB.NET" Value="Public Structure HashCode" />
  <TypeSignature Language="C++ CLI" Value="public value class HashCode" />
  <TypeSignature Language="F#" Value="type HashCode = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bcl.HashCode</AssemblyName>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="Microsoft.Bcl.HashCode" FromVersion="1.0.0.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="dotnet-plat-ext-3.0" />
    <TypeForwarding From="Microsoft.Bcl.HashCode" FromVersion="1.0.0.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="dotnet-plat-ext-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Combines the hash code for multiple values into a single hash code.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

You can use <xref:System.HashCode> to combine multiple values (for example, fields on a structure or class) into a
single hash code. This structure operates in one of two ways:

 * Static methods that accept a set of up to eight values to combine.
 * Two instance methods that operate in a streaming fashion, accepting values one at a time.

> [!WARNING]
> It is best-practice to consider hash codes as an implementation detail, as the implementation may change across
> assembly versions. Do not store hash codes produced by <xref:System.HashCode> in serialized structures, for example,
> on-disk. <xref:System.HashCode> uses a statically initialized random seed to enforce this best practice, meaning that
> the hash codes are only deterministic within the scope of an operating system process.

### Static Methods

The static methods combine the default hash codes of up to eight values.
 
 [!code-csharp[System.HashCode.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.hashcode.structure/cs/example1.cs#1)]
 [!code-vb[System.HashCode.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.hashcode.structure/vb/example1.vb#1)] 

### Instance Methods

> [!IMPORTANT]
> <xref:System.HashCode.ToHashCode> must be called at most once per instance of <xref:System.HashCode>.

The instance methods combine the hash codes of more than eight values.
 
 [!code-csharp[System.HashCode.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.hashcode.structure/cs/example2.cs#1)]
 [!code-vb[System.HashCode.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.hashcode.structure/vb/example2.vb#1)]

The instance methods also combine the hash codes produced by a specific
<xref:System.Collections.Generic.IEqualityComparer%601> implementation.

 [!code-csharp[System.HashCode.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.hashcode.structure/cs/example3.cs#1)]
 [!code-vb[System.HashCode.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.hashcode.structure/vb/example3.vb#1)]

The <xref:System.HashCode> structure must be passed by-reference to other methods, as it is a value type.
 
 [!code-csharp[System.HashCode.Structure#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.hashcode.structure/cs/example4.cs#1)]
 [!code-vb[System.HashCode.Structure#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.hashcode.structure/vb/example4.vb#1)]

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Add&lt;T&gt; (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add&lt;T&gt;(!!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Add``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add(Of T) (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Add(T value);" />
      <MemberSignature Language="F#" Value="member this.Add : 'T -&gt; unit" Usage="hashCode.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bcl.HashCode</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the value to add to the hash code.</typeparam>
        <param name="value">The value to add to the hash code.</param>
        <summary>Adds a single value to the hash code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Add&lt;T&gt; (T value, System.Collections.Generic.IEqualityComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add&lt;T&gt;(!!T value, class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Add``1(``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add(Of T) (value As T, comparer As IEqualityComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Add(T value, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.Add : 'T * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; unit" Usage="hashCode.Add (value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bcl.HashCode</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the value to add to the hash code.</typeparam>
        <param name="value">The value to add to the hash code.</param>
        <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to use to calculate the hash code.
This value can be a null reference (Nothing in Visual Basic), which will use the default equality comparer for <typeparamref name="T" />.</param>
        <summary>Adds a single value to the hash code, specifying the type that provides the hash code function.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1&gt; (T1 value1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1&gt;(!!T1 value1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1) (value1 As T1) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1&gt;&#xA; static int Combine(T1 value1);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 -&gt; int" Usage="System.HashCode.Combine value1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bcl.HashCode</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
      </Parameters>
      <Docs>
        <typeparam name="T1">The type of the value to add the hash code.</typeparam>
        <param name="value1">The value to add to the hash code.</param>
        <summary>Diffuses the hash code returned by the specified value.</summary>
        <returns>The hash code that represents the single value.</returns>
        <remarks>
          Some data structures assume that hash codes are diffused across a large range. This method improves the quality of the hash code returned by the value and is useful when the underlying data type is simple, for example, an integer value.
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2&gt; (T1 value1, T2 value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2&gt;(!!T1 value1, !!T2 value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``2(``0,``1)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2) (value1 As T1, value2 As T2) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static int Combine(T1 value1, T2 value2);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 -&gt; int" Usage="System.HashCode.Combine (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bcl.HashCode</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
      </Parameters>
      <Docs>
        <typeparam name="T1">The type of the first value to combine into the hash code.</typeparam>
        <typeparam name="T2">The type of the second value to combine into the hash code.</typeparam>
        <param name="value1">The first value to combine into the hash code.</param>
        <param name="value2">The second value to combine into the hash code.</param>
        <summary>Combines two values into a hash code.</summary>
        <returns>The hash code that represents the two values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3&gt; (T1 value1, T2 value2, T3 value3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3&gt;(!!T1 value1, !!T2 value2, !!T3 value3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``3(``0,``1,``2)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3) (value1 As T1, value2 As T2, value3 As T3) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bcl.HashCode</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
      </Parameters>
      <Docs>
        <typeparam name="T1">The type of the first value to combine into the hash code.</typeparam>
        <typeparam name="T2">The type of the second value to combine into the hash code.</typeparam>
        <typeparam name="T3">The type of the third value to combine into the hash code.</typeparam>
        <param name="value1">The first value to combine into the hash code.</param>
        <param name="value2">The second value to combine into the hash code.</param>
        <param name="value3">The third value to combine into the hash code.</param>
        <summary>Combines three values into a hash code.</summary>
        <returns>The hash code that represents the three values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3,T4&gt; (T1 value1, T2 value2, T3 value3, T4 value4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3, T4&gt;(!!T1 value1, !!T2 value2, !!T3 value3, !!T4 value4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``4(``0,``1,``2,``3)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3, T4) (value1 As T1, value2 As T2, value3 As T3, value4 As T4) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3, T4 value4);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 * 'T4 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3, value4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bcl.HashCode</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
        <Parameter Name="value4" Type="T4" />
      </Parameters>
      <Docs>
        <typeparam name="T1">The type of the first value to combine into the hash code.</typeparam>
        <typeparam name="T2">The type of the second value to combine into the hash code.</typeparam>
        <typeparam name="T3">The type of the third value to combine into the hash code.</typeparam>
        <typeparam name="T4">The type of the fourth value to combine into the hash code.</typeparam>
        <param name="value1">The first value to combine into the hash code.</param>
        <param name="value2">The second value to combine into the hash code.</param>
        <param name="value3">The third value to combine into the hash code.</param>
        <param name="value4">The fourth value to combine into the hash code.</param>
        <summary>Combines four values into a hash code.</summary>
        <returns>The hash code that represents the four values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3,T4,T5&gt; (T1 value1, T2 value2, T3 value3, T4 value4, T5 value5);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3, T4, T5&gt;(!!T1 value1, !!T2 value2, !!T3 value3, !!T4 value4, !!T5 value5) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``5(``0,``1,``2,``3,``4)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3, T4, T5) (value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3, value4, value5)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bcl.HashCode</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
        <Parameter Name="value4" Type="T4" />
        <Parameter Name="value5" Type="T5" />
      </Parameters>
      <Docs>
        <typeparam name="T1">The type of the first value to combine into the hash code.</typeparam>
        <typeparam name="T2">The type of the second value to combine into the hash code.</typeparam>
        <typeparam name="T3">The type of the third value to combine into the hash code.</typeparam>
        <typeparam name="T4">The type of the fourth value to combine into the hash code.</typeparam>
        <typeparam name="T5">The type of the fifth value to combine into the hash code.</typeparam>
        <param name="value1">The first value to combine into the hash code.</param>
        <param name="value2">The second value to combine into the hash code.</param>
        <param name="value3">The third value to combine into the hash code.</param>
        <param name="value4">The fourth value to combine into the hash code.</param>
        <param name="value5">The fifth value to combine into the hash code.</param>
        <summary>Combines five values into a hash code.</summary>
        <returns>The hash code that represents the five values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3,T4,T5,T6&gt; (T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3, T4, T5, T6&gt;(!!T1 value1, !!T2 value2, !!T3 value3, !!T4 value4, !!T5 value5, !!T6 value6) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``6(``0,``1,``2,``3,``4,``5)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3, T4, T5, T6) (value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5, value6 As T6) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3, value4, value5, value6)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bcl.HashCode</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
        <Parameter Name="value4" Type="T4" />
        <Parameter Name="value5" Type="T5" />
        <Parameter Name="value6" Type="T6" />
      </Parameters>
      <Docs>
        <typeparam name="T1">The type of the first value to combine into the hash code.</typeparam>
        <typeparam name="T2">The type of the second value to combine into the hash code.</typeparam>
        <typeparam name="T3">The type of the third value to combine into the hash code.</typeparam>
        <typeparam name="T4">The type of the fourth value to combine into the hash code.</typeparam>
        <typeparam name="T5">The type of the fifth value to combine into the hash code.</typeparam>
        <typeparam name="T6">The type of the sixth value to combine into the hash code.</typeparam>
        <param name="value1">The first value to combine into the hash code.</param>
        <param name="value2">The second value to combine into the hash code.</param>
        <param name="value3">The third value to combine into the hash code.</param>
        <param name="value4">The fourth value to combine into the hash code.</param>
        <param name="value5">The fifth value to combine into the hash code.</param>
        <param name="value6">The sixth value to combine into the hash code.</param>
        <summary>Combines six values into a hash code.</summary>
        <returns>The hash code that represents the six values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3,T4,T5,T6,T7&gt; (T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3, T4, T5, T6, T7&gt;(!!T1 value1, !!T2 value2, !!T3 value3, !!T4 value4, !!T5 value5, !!T6 value6, !!T7 value7) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``7(``0,``1,``2,``3,``4,``5,``6)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3, T4, T5, T6, T7) (value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5, value6 As T6, value7 As T7) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3, value4, value5, value6, value7)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bcl.HashCode</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
        <Parameter Name="value4" Type="T4" />
        <Parameter Name="value5" Type="T5" />
        <Parameter Name="value6" Type="T6" />
        <Parameter Name="value7" Type="T7" />
      </Parameters>
      <Docs>
        <typeparam name="T1">The type of the first value to combine into the hash code.</typeparam>
        <typeparam name="T2">The type of the second value to combine into the hash code.</typeparam>
        <typeparam name="T3">The type of the third value to combine into the hash code.</typeparam>
        <typeparam name="T4">The type of the fourth value to combine into the hash code.</typeparam>
        <typeparam name="T5">The type of the fifth value to combine into the hash code.</typeparam>
        <typeparam name="T6">The type of the sixth value to combine into the hash code.</typeparam>
        <typeparam name="T7">The type of the seventh value to combine into the hash code.</typeparam>
        <param name="value1">The first value to combine into the hash code.</param>
        <param name="value2">The second value to combine into the hash code.</param>
        <param name="value3">The third value to combine into the hash code.</param>
        <param name="value4">The fourth value to combine into the hash code.</param>
        <param name="value5">The fifth value to combine into the hash code.</param>
        <param name="value6">The sixth value to combine into the hash code.</param>
        <param name="value7">The seventh value to combine into the hash code.</param>
        <summary>Combines seven values into a hash code.</summary>
        <returns>The hash code that represents the seven values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7, T8 value8);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(!!T1 value1, !!T2 value2, !!T3 value3, !!T4 value4, !!T5 value5, !!T6 value6, !!T7 value7, !!T8 value8) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``8(``0,``1,``2,``3,``4,``5,``6,``7)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3, T4, T5, T6, T7, T8) (value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5, value6 As T6, value7 As T7, value8 As T8) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7, T8 value8);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3, value4, value5, value6, value7, value8)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bcl.HashCode</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
        <Parameter Name="value4" Type="T4" />
        <Parameter Name="value5" Type="T5" />
        <Parameter Name="value6" Type="T6" />
        <Parameter Name="value7" Type="T7" />
        <Parameter Name="value8" Type="T8" />
      </Parameters>
      <Docs>
        <typeparam name="T1">The type of the first value to combine into the hash code.</typeparam>
        <typeparam name="T2">The type of the second value to combine into the hash code.</typeparam>
        <typeparam name="T3">The type of the third value to combine into the hash code.</typeparam>
        <typeparam name="T4">The type of the fourth value to combine into the hash code.</typeparam>
        <typeparam name="T5">The type of the fifth value to combine into the hash code.</typeparam>
        <typeparam name="T6">The type of the sixth value to combine into the hash code.</typeparam>
        <typeparam name="T7">The type of the seventh value to combine into the hash code.</typeparam>
        <typeparam name="T8">The type of the eighth value to combine into the hash code.</typeparam>
        <param name="value1">The first value to combine into the hash code.</param>
        <param name="value2">The second value to combine into the hash code.</param>
        <param name="value3">The third value to combine into the hash code.</param>
        <param name="value4">The fourth value to combine into the hash code.</param>
        <param name="value5">The fifth value to combine into the hash code.</param>
        <param name="value6">The sixth value to combine into the hash code.</param>
        <param name="value7">The seventh value to combine into the hash code.</param>
        <param name="value8">The eighth value to combine into the hash code.</param>
        <summary>Combines eight values into a hash code.</summary>
        <returns>The hash code that represents the eight values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="hashCode.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bcl.HashCode</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.Obsolete("HashCode is a mutable struct and should not be compared with other HashCodes.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Ignored.</param>
        <summary>This method is not supported and should not be called.</summary>
        <returns>This method will always throw a <see cref="T:System.NotSupportedException" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Always thrown when this method is called.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="hashCode.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bcl.HashCode</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.Obsolete("HashCode is a mutable struct and should not be compared with other HashCodes. Use ToHashCode to retrieve the computed hash code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method is not supported and should not be called.</summary>
        <returns>This method will always throw a <see cref="T:System.NotSupportedException" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Always thrown when this method is called.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToHashCode">
      <MemberSignature Language="C#" Value="public int ToHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ToHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.ToHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function ToHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ToHashCode();" />
      <MemberSignature Language="F#" Value="member this.ToHashCode : unit -&gt; int" Usage="hashCode.ToHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bcl.HashCode</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calculates the final hash code after consecutive <see cref="Overload:System.HashCode.Add" /> invocations.</summary>
        <returns>The calculated hash code.</returns>
        <remarks>
          This method must be called at most once per instance of <see cref="T:System.HashCode" />.
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

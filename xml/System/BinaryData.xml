<Type Name="BinaryData" FullName="System.BinaryData">
  <TypeSignature Language="C#" Value="public class BinaryData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BinaryData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.BinaryData" />
  <TypeSignature Language="VB.NET" Value="Public Class BinaryData" />
  <TypeSignature Language="F#" Value="type BinaryData = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryData" />
  <AssemblyInfo>
    <AssemblyName>System.Memory.Data</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-plat-ext-7.0">
      <AttributeName Language="C#">[System.Text.Json.Serialization.JsonConverter(typeof(System.BinaryDataConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonConverter(typeof(System.BinaryDataConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A lightweight abstraction for a payload of bytes that supports converting between string, stream, JSON, and bytes.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryData (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As Byte())" />
      <MemberSignature Language="F#" Value="new BinaryData : byte[] -&gt; BinaryData" Usage="new System.BinaryData data" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryData(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data">The byte array to wrap.</param>
        <summary>Creates a <see cref="T:System.BinaryData" /> instance by wrapping the provided byte array.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryData (ReadOnlyMemory&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.#ctor(System.ReadOnlyMemory{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As ReadOnlyMemory(Of Byte))" />
      <MemberSignature Language="F#" Value="new BinaryData : ReadOnlyMemory&lt;byte&gt; -&gt; BinaryData" Usage="new System.BinaryData data" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryData(ReadOnlyMemory&lt;System::Byte&gt; data);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data">The byte data to wrap.</param>
        <summary>Creates a <see cref="T:System.BinaryData" /> instance by wrapping the provided bytes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryData (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As String)" />
      <MemberSignature Language="F#" Value="new BinaryData : string -&gt; BinaryData" Usage="new System.BinaryData data" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryData(System::String ^ data);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">The string data.</param>
        <summary>Creates a <see cref="T:System.BinaryData" /> instance from a string by converting the string to bytes using the UTF-8 encoding.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryData (object? jsonSerializable, System.Text.Json.JsonSerializerOptions? options = default, Type? type = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object jsonSerializable, class System.Text.Json.JsonSerializerOptions options, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.#ctor(System.Object,System.Text.Json.JsonSerializerOptions,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (jsonSerializable As Object, Optional options As JsonSerializerOptions = Nothing, Optional type As Type = Nothing)" />
      <MemberSignature Language="F#" Value="new BinaryData : obj * System.Text.Json.JsonSerializerOptions * Type -&gt; BinaryData" Usage="new System.BinaryData (jsonSerializable, options, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-6.0;dotnet-plat-ext-7.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="jsonSerializable" Type="System.Object" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="jsonSerializable">The object to serialize to JSON using <see cref="T:System.Text.Json.JsonSerializer" />.</param>
        <param name="options">The options to use when serializing to JSON.</param>
        <param name="type">The type to use when serializing the data. If not specified, <see cref="M:System.Object.GetType" /> will be used to determine the type.</param>
        <summary>Creates a <see cref="T:System.BinaryData" /> instance by serializing the provided object to JSON using <see cref="T:System.Text.Json.JsonSerializer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryData (object? jsonSerializable, System.Text.Json.Serialization.JsonSerializerContext context, Type? type = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object jsonSerializable, class System.Text.Json.Serialization.JsonSerializerContext context, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.#ctor(System.Object,System.Text.Json.Serialization.JsonSerializerContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (jsonSerializable As Object, context As JsonSerializerContext, Optional type As Type = Nothing)" />
      <MemberSignature Language="F#" Value="new BinaryData : obj * System.Text.Json.Serialization.JsonSerializerContext * Type -&gt; BinaryData" Usage="new System.BinaryData (jsonSerializable, context, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="jsonSerializable" Type="System.Object" Index="0" FrameworkAlternate="dotnet-plat-ext-7.0" />
        <Parameter Name="context" Type="System.Text.Json.Serialization.JsonSerializerContext" Index="1" FrameworkAlternate="dotnet-plat-ext-7.0" />
        <Parameter Name="type" Type="System.Type" Index="2" FrameworkAlternate="dotnet-plat-ext-7.0" />
      </Parameters>
      <Docs>
        <param name="jsonSerializable">The object that will be serialized to JSON using <see cref="T:System.Text.Json.JsonSerializer" />.</param>
        <param name="context">The <see cref="T:System.Text.Json.Serialization.JsonSerializerContext" /> to use when serializing to JSON.</param>
        <param name="type">The type to use when serializing the data. If not specified, <see cref="M:System.Object.GetType" /> will be used to determine the type.</param>
        <summary>Creates a <see cref="T:System.BinaryData" /> instance by serializing the provided object to JSON using <see cref="T:System.Text.Json.JsonSerializer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static BinaryData Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.BinaryData Empty" />
      <MemberSignature Language="DocId" Value="P:System.BinaryData.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As BinaryData" />
      <MemberSignature Language="F#" Value="static member Empty : BinaryData" Usage="System.BinaryData.Empty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property BinaryData ^ Empty { BinaryData ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an empty <see cref="T:System.BinaryData" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="binaryData.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-6.0;dotnet-plat-ext-7.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="obj">The object to compare with the current object.</param>
        <summary>Determines whether the specified object is equal to the current object.</summary>
        <returns>
          <see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBytes">
      <MemberSignature Language="C#" Value="public static BinaryData FromBytes (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.BinaryData FromBytes(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.FromBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBytes (data As Byte()) As BinaryData" />
      <MemberSignature Language="F#" Value="static member FromBytes : byte[] -&gt; BinaryData" Usage="System.BinaryData.FromBytes data" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static BinaryData ^ FromBytes(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data">The byte array to wrap.</param>
        <summary>Creates a <see cref="T:System.BinaryData" /> instance by wrapping the provided byte array.</summary>
        <returns>A wrapper over <paramref name="data" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBytes">
      <MemberSignature Language="C#" Value="public static BinaryData FromBytes (ReadOnlyMemory&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.BinaryData FromBytes(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.FromBytes(System.ReadOnlyMemory{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBytes (data As ReadOnlyMemory(Of Byte)) As BinaryData" />
      <MemberSignature Language="F#" Value="static member FromBytes : ReadOnlyMemory&lt;byte&gt; -&gt; BinaryData" Usage="System.BinaryData.FromBytes data" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static BinaryData ^ FromBytes(ReadOnlyMemory&lt;System::Byte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data">The byte data to wrap.</param>
        <summary>Creates a <see cref="T:System.BinaryData" /> instance by wrapping the provided <see cref="T:System.ReadOnlyMemory`1" />.</summary>
        <returns>A wrapper over <paramref name="data" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromObjectAsJson&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static BinaryData FromObjectAsJson&lt;T&gt; (T jsonSerializable, System.Text.Json.JsonSerializerOptions? options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.BinaryData FromObjectAsJson&lt;T&gt;(!!T jsonSerializable, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromObjectAsJson(Of T) (jsonSerializable As T, Optional options As JsonSerializerOptions = Nothing) As BinaryData" />
      <MemberSignature Language="F#" Value="static member FromObjectAsJson : 'T * System.Text.Json.JsonSerializerOptions -&gt; BinaryData" Usage="System.BinaryData.FromObjectAsJson (jsonSerializable, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-6.0;dotnet-plat-ext-7.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="jsonSerializable" Type="T" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type to use when serializing the data.</typeparam>
        <param name="jsonSerializable">The data to use.</param>
        <param name="options">The options to use when serializing to JSON.</param>
        <summary>Creates a <see cref="T:System.BinaryData" /> instance by serializing the provided object using the <see cref="T:System.Text.Json.JsonSerializer" />.</summary>
        <returns>A value representing the UTF-8 encoding of the JSON representation of <paramref name="jsonSerializable" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromObjectAsJson&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static BinaryData FromObjectAsJson&lt;T&gt; (T jsonSerializable, System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;T&gt; jsonTypeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.BinaryData FromObjectAsJson&lt;T&gt;(!!T jsonSerializable, class System.Text.Json.Serialization.Metadata.JsonTypeInfo`1&lt;!!T&gt; jsonTypeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromObjectAsJson(Of T) (jsonSerializable As T, jsonTypeInfo As JsonTypeInfo(Of T)) As BinaryData" />
      <MemberSignature Language="F#" Value="static member FromObjectAsJson : 'T * System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;'T&gt; -&gt; BinaryData" Usage="System.BinaryData.FromObjectAsJson (jsonSerializable, jsonTypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static BinaryData ^ FromObjectAsJson(T jsonSerializable, System::Text::Json::Serialization::Metadata::JsonTypeInfo&lt;T&gt; ^ jsonTypeInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="jsonSerializable" Type="T" Index="0" FrameworkAlternate="dotnet-plat-ext-7.0" />
        <Parameter Name="jsonTypeInfo" Type="System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;T&gt;" Index="1" FrameworkAlternate="dotnet-plat-ext-7.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type to use when serializing the data.</typeparam>
        <param name="jsonSerializable">The data to use.</param>
        <param name="jsonTypeInfo">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> to use when serializing to JSON.</param>
        <summary>Creates a <see cref="T:System.BinaryData" /> instance by serializing the provided object using the <see cref="T:System.Text.Json.JsonSerializer" />.</summary>
        <returns>A value representing the UTF-8 encoding of the JSON representation of <paramref name="jsonSerializable" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromStream">
      <MemberSignature Language="C#" Value="public static BinaryData FromStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.BinaryData FromStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.FromStream(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromStream (stream As Stream) As BinaryData" />
      <MemberSignature Language="F#" Value="static member FromStream : System.IO.Stream -&gt; BinaryData" Usage="System.BinaryData.FromStream stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static BinaryData ^ FromStream(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">The stream containing the data.</param>
        <summary>Creates a <see cref="T:System.BinaryData" /> instance from the specified stream. The stream is not disposed by this method.</summary>
        <returns>A value representing all of the data remaining in <paramref name="stream" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromStreamAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;BinaryData&gt; FromStreamAsync (System.IO.Stream stream, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.BinaryData&gt; FromStreamAsync(class System.IO.Stream stream, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.FromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromStreamAsync (stream As Stream, Optional cancellationToken As CancellationToken = Nothing) As Task(Of BinaryData)" />
      <MemberSignature Language="F#" Value="static member FromStreamAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;BinaryData&gt;" Usage="System.BinaryData.FromStreamAsync (stream, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="stream">The stream containing the data.</param>
        <param name="cancellationToken">A token that may be used to cancel the operation.</param>
        <summary>Creates a <see cref="T:System.BinaryData" /> instance from the specified stream. The stream is not disposed by this method.</summary>
        <returns>A value representing all of the data remaining in <paramref name="stream" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromString">
      <MemberSignature Language="C#" Value="public static BinaryData FromString (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.BinaryData FromString(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.FromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromString (data As String) As BinaryData" />
      <MemberSignature Language="F#" Value="static member FromString : string -&gt; BinaryData" Usage="System.BinaryData.FromString data" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static BinaryData ^ FromString(System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">The string data.</param>
        <summary>Creates a <see cref="T:System.BinaryData" /> instance from a string by converting the string to bytes using the UTF-8 encoding.</summary>
        <returns>A value representing the UTF-8 encoding of <paramref name="data" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="binaryData.GetHashCode " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code for the current <see cref="T:System.BinaryData" /> object.</summary>
        <returns>A 32-bit signed integer hash code.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator ReadOnlyMemory&lt;byte&gt; (BinaryData? data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; op_Implicit(class System.BinaryData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.op_Implicit(System.BinaryData)~System.ReadOnlyMemory{System.Byte}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (data As BinaryData) As ReadOnlyMemory(Of Byte)" />
      <MemberSignature Language="F#" Value="static member op_Implicit : BinaryData -&gt; ReadOnlyMemory&lt;byte&gt;" Usage="System.BinaryData.op_Implicit data" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator ReadOnlyMemory&lt;System::Byte&gt;(BinaryData ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
      </Parameters>
      <Docs>
        <param name="data">The value to be converted.</param>
        <summary>Defines an implicit conversion from a <see cref="T:System.BinaryData" /> to a <see cref="T:System.ReadOnlyMemory`1" />.</summary>
        <returns>A read-only memory of bytes representing the implicitly converted <see cref="T:System.BinaryData" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator ReadOnlySpan&lt;byte&gt; (BinaryData? data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; op_Implicit(class System.BinaryData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.op_Implicit(System.BinaryData)~System.ReadOnlySpan{System.Byte}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (data As BinaryData) As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="F#" Value="static member op_Implicit : BinaryData -&gt; ReadOnlySpan&lt;byte&gt;" Usage="System.BinaryData.op_Implicit data" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator ReadOnlySpan&lt;System::Byte&gt;(BinaryData ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
      </Parameters>
      <Docs>
        <param name="data">The value to be converted.</param>
        <summary>Defines an implicit conversion from a <see cref="T:System.BinaryData" /> to a <see cref="T:System.ReadOnlySpan`1" />.</summary>
        <returns>A read-only span of bytes representing the implicitly converted <see cref="T:System.BinaryData" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public byte[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As Byte()" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; byte[]" Usage="binaryData.ToArray " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ToArray();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts the <see cref="T:System.BinaryData" /> to a byte array.</summary>
        <returns>A byte array representing the data.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToMemory">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;byte&gt; ToMemory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; ToMemory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.ToMemory" />
      <MemberSignature Language="VB.NET" Value="Public Function ToMemory () As ReadOnlyMemory(Of Byte)" />
      <MemberSignature Language="F#" Value="member this.ToMemory : unit -&gt; ReadOnlyMemory&lt;byte&gt;" Usage="binaryData.ToMemory " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlyMemory&lt;System::Byte&gt; ToMemory();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the value of this instance as bytes without any further interpretation.</summary>
        <returns>The value of this instance as bytes without any further interpretation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToObjectFromJson&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T ToObjectFromJson&lt;T&gt; (System.Text.Json.JsonSerializerOptions? options = default);" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T ToObjectFromJson&lt;T&gt;(class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.ToObjectFromJson``1(System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToObjectFromJson(Of T) (Optional options As JsonSerializerOptions = Nothing) As T" />
      <MemberSignature Language="F#" Value="member this.ToObjectFromJson : System.Text.Json.JsonSerializerOptions -&gt; 'T" Usage="binaryData.ToObjectFromJson options" />
      <MemberSignature Language="C#" Value="public T? ToObjectFromJson&lt;T&gt; (System.Text.Json.JsonSerializerOptions? options = default);" FrameworkAlternate="dotnet-plat-ext-6.0;dotnet-plat-ext-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-6.0;dotnet-plat-ext-7.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type that the data should be converted to.</typeparam>
        <param name="options">The <see cref="T:System.Text.Json.JsonSerializerOptions" /> to use when serializing to JSON.</param>
        <summary>Converts the <see cref="T:System.BinaryData" /> to the specified type using <see cref="T:System.Text.Json.JsonSerializer" />.</summary>
        <returns>The data converted to the specified type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToObjectFromJson&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T? ToObjectFromJson&lt;T&gt; (System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;T&gt; jsonTypeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T ToObjectFromJson&lt;T&gt;(class System.Text.Json.Serialization.Metadata.JsonTypeInfo`1&lt;!!T&gt; jsonTypeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.ToObjectFromJson``1(System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ToObjectFromJson(Of T) (jsonTypeInfo As JsonTypeInfo(Of T)) As T" />
      <MemberSignature Language="F#" Value="member this.ToObjectFromJson : System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;'T&gt; -&gt; 'T" Usage="binaryData.ToObjectFromJson jsonTypeInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T ToObjectFromJson(System::Text::Json::Serialization::Metadata::JsonTypeInfo&lt;T&gt; ^ jsonTypeInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="jsonTypeInfo" Type="System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;T&gt;" Index="0" FrameworkAlternate="dotnet-plat-ext-7.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type that the data should be converted to.</typeparam>
        <param name="jsonTypeInfo">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> to use when serializing to JSON.</param>
        <summary>Converts the <see cref="T:System.BinaryData" /> to the specified type using <see cref="T:System.Text.Json.JsonSerializer" />.</summary>
        <returns>The data converted to the specified type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream ToStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream ToStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.ToStream" />
      <MemberSignature Language="VB.NET" Value="Public Function ToStream () As Stream" />
      <MemberSignature Language="F#" Value="member this.ToStream : unit -&gt; System.IO.Stream" Usage="binaryData.ToStream " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ ToStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts the <see cref="T:System.BinaryData" /> to a read-only stream.</summary>
        <returns>A stream representing the data.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BinaryData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="binaryData.ToString " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory.Data</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts the value of this instance to a string using UTF-8.</summary>
        <returns>A string representation of the value of this instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

No special treatment is given to the contents of the data. It is merely decoded as a UTF-8 string.
            For a JPEG or other binary file format, the string will largely be nonsense with many embedded NUL characters.
            UTF-8 JSON values will look like their file or network representation,
            including starting and stopping quotes on a string.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

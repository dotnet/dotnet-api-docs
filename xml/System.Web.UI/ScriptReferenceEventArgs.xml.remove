<Type Name="ScriptReferenceEventArgs" FullName="System.Web.UI.ScriptReferenceEventArgs">
  <TypeSignature Language="C#" Value="public class ScriptReferenceEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScriptReferenceEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptReferenceEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptReferenceEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptReferenceEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ScriptReferenceEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides data for the <see cref="E:System.Web.UI.ScriptManager.ResolveScriptReference" /> event.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When a script reference is rendered, the <xref:System.Web.UI.ScriptReferenceEventArgs> object contains the <xref:System.Web.UI.ScriptReference> object that is defined in the <xref:System.Web.UI.ScriptManager> instance. You can create an event handler for the <xref:System.Web.UI.ScriptManager.ResolveScriptReference> event to check the <xref:System.Web.UI.ScriptReference> object and modify it as needed.  
  
   
  
## Examples  
 The following example shows an ASP.NET Web page that references a script file that is named CustomScript.js. When the Web application is hosted on the www.contoso.com domain, the [ScriptReference.Path]<xref:System.Web.UI.ScriptReferenceBase.Path%2A> property is set to a value specific for that domain. An event handler for the <xref:System.Web.UI.ScriptManager.ResolveScriptReference> event checks the host URL and changes the value for the [ScriptReference.Path]<xref:System.Web.UI.ScriptReferenceBase.Path%2A> property if it is necessary.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReferenceEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReferenceEventArgs/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReferenceEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReferenceEventArgs/VB/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReferenceEventArgs (System.Web.UI.ScriptReference script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.ScriptReference script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReferenceEventArgs.#ctor(System.Web.UI.ScriptReference)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (script As ScriptReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReferenceEventArgs(System::Web::UI::ScriptReference ^ script);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptReferenceEventArgs : System.Web.UI.ScriptReference -&gt; System.Web.UI.ScriptReferenceEventArgs" Usage="new System.Web.UI.ScriptReferenceEventArgs script" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="script" Type="System.Web.UI.ScriptReference" />
      </Parameters>
      <Docs>
        <param name="script">A <see cref="T:System.Web.UI.ScriptReference" /> object that contains the client script referenced on the Web page.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptReferenceEventArgs" /> class.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="script" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Script">
      <MemberSignature Language="C#" Value="public System.Web.UI.ScriptReference Script { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ScriptReference Script" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReferenceEventArgs.Script" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Script As ScriptReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ScriptReference ^ Script { System::Web::UI::ScriptReference ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Script : System.Web.UI.ScriptReference" Usage="System.Web.UI.ScriptReferenceEventArgs.Script" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ScriptReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Web.UI.ScriptReference" /> object that contains the script library.</summary>
        <value>A <see cref="T:System.Web.UI.ScriptReference" /> object that contains the client script referenced on the Web page.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.ScriptReference> object in the <xref:System.Web.UI.ScriptReferenceEventArgs.Script%2A> property is added to the <xref:System.Web.UI.ScriptManager.Scripts%2A> property when the <xref:System.Web.UI.ScriptManager.ResolveScriptReference> event is raised.  
  
   
  
## Examples  
 The following code example shows an ASP.NET Web page that references a script file that is named CustomScript.js. When the Web application is hosted on the www.contoso.com domain, the [ScriptReference.Path]<xref:System.Web.UI.ScriptReferenceBase.Path%2A> property is set to a value specific for that domain. An event handler for the <xref:System.Web.UI.ScriptManager.ResolveScriptReference> event checks the host URL and changes the value for the [ScriptReference.Path]<xref:System.Web.UI.ScriptReferenceBase.Path%2A> property if it is necessary. The <xref:System.Web.UI.ScriptReference> object is retrieved through the <xref:System.Web.UI.ScriptReferenceEventArgs.Script%2A> property.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReferenceEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReferenceEventArgs/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReferenceEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReferenceEventArgs/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

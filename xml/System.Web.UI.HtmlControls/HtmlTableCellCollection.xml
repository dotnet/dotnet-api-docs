<Type Name="HtmlTableCellCollection" FullName="System.Web.UI.HtmlControls.HtmlTableCellCollection">
  <TypeSignature Language="C#" Value="public sealed class HtmlTableCellCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HtmlTableCellCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HtmlTableCellCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTableCellCollection sealed : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type HtmlTableCellCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A collection of <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> objects that represent the cells in a single row of an <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> class to programmatically manage a collection of <xref:System.Web.UI.HtmlControls.HtmlTableCell> objects that represent the cells of a single row in an <xref:System.Web.UI.HtmlControls.HtmlTable> control. This class is commonly used to add, remove, or modify the contents of a cell in a row of an <xref:System.Web.UI.HtmlControls.HtmlTable> control.  
  
> [!NOTE]
>  An <xref:System.Web.UI.HtmlControls.HtmlTable> control contains a <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> property that contains a collection of <xref:System.Web.UI.HtmlControls.HtmlTableRow> objects. Each <xref:System.Web.UI.HtmlControls.HtmlTableRow> object represents an individual row in the table. An <xref:System.Web.UI.HtmlControls.HtmlTableRow> object contains a <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> property that represents a collection of <xref:System.Web.UI.HtmlControls.HtmlTableCell> objects. These objects, in turn, represent the individual cells of a row. To retrieve an individual cell, first get the <xref:System.Web.UI.HtmlControls.HtmlTableRow> object that represents the row containing the cell in the table (from the <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> collection of the <xref:System.Web.UI.HtmlControls.HtmlTable> control). You can then get the <xref:System.Web.UI.HtmlControls.HtmlTableCell> object that represents the cell in the row (from the <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> collection of the <xref:System.Web.UI.HtmlControls.HtmlTableRow> object).  
  
   
  
## Examples  
 The following code example demonstrates how to dynamically generate the contents of an <xref:System.Web.UI.HtmlControls.HtmlTable> control by adding cells to an <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. Notice that the <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> property of a row, represented by an <xref:System.Web.UI.HtmlControls.HtmlTableRow> object, is the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  
  
 [!code-aspx-csharp[HtmlTableCellCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollection/CS/htmltablecellcollectioncs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollection/VB/htmltablecellcollectionvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Rows" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.HtmlControls.HtmlTableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.HtmlControls.HtmlTableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Add(System.Web.UI.HtmlControls.HtmlTableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (cell As HtmlTableCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::HtmlControls::HtmlTableCell ^ cell);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.HtmlControls.HtmlTableCell -&gt; unit" Usage="htmlTableCellCollection.Add cell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.HtmlControls.HtmlTableCell" />
      </Parameters>
      <Docs>
        <param name="cell">The <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> to add to the collection.</param>
        <summary>Appends the specified <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> object to the end of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this method to add the specified <xref:System.Web.UI.HtmlControls.HtmlTableCell> object to the end of an <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. If you want to insert an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object in a specified location in the collection, use the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert%2A> method.  
  
   
  
## Examples  
 The following code example demonstrates how to use the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Add%2A> method to append a cell of a table, represented by an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object, to the end of an <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. Notice that the <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> property of a row represented by an <xref:System.Web.UI.HtmlControls.HtmlTableRow> object is the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  
  
 [!code-aspx-csharp[HtmlTableCellCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollection/CS/htmltablecellcollectioncs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollection/VB/htmltablecellcollectionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="htmlTableCellCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> objects from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this method to remove all <xref:System.Web.UI.HtmlControls.HtmlTableCell> objects from the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection and reset the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A> property to `0`.  
  
> [!NOTE]
>  This method removes the cells from a row, but it does not remove the row from the table. To remove a row from the table, be sure to also remove the <xref:System.Web.UI.HtmlControls.HtmlTableRow> object that represents the row from the <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> collection of the <xref:System.Web.UI.HtmlControls.HtmlTable> control.  
  
   
  
## Examples  
 The following code example demonstrates how to use the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear%2A> method to remove all items from the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. New entries are then added to the collection and displayed in the <xref:System.Web.UI.HtmlControls.HtmlTable> control.  
  
 [!code-aspx-csharp[HtmlTableCellCollectioncClear#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectioncClear/CS/htmltablecellcollectionclearcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectioncClear#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectioncClear/VB/htmltablecellcollectionclearvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="htmlTableCellCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</param>
        <param name="index">The first index in the specified <see cref="T:System.Array" /> to receive the items.</param>
        <summary>Copies the items from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection to the specified <see cref="T:System.Array" />, beginning with the specified index in the <see cref="T:System.Array" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this method to copy the contents of the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection into the specified <xref:System.Array?displayProperty=nameWithType>, starting at the specified index of the array.  
  
> [!NOTE]
>  The `array` parameter must be a zero-based <xref:System.Array?displayProperty=nameWithType>.  
  
   
  
## Examples  
 The following code example demonstrates how to use the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo%2A> method to create an array that contains the same contents as the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. The array is then iterated through to display the contents of the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionCopyTo/CS/htmltablecellcollectioncopytocs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionCopyTo/VB/htmltablecellcollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.HtmlControls.HtmlTableCellCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> objects in the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection.</summary>
        <value>The number of <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> objects in the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />. The default value is <see langword="0" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A> property to determine the number of cells contained in the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. The <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A> property is commonly used when iterating through the collection to determine the upper bound.  
  
   
  
## Examples  
 The following code example demonstrates how to use the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A> property to determine the number of cells in a row of the <xref:System.Web.UI.HtmlControls.HtmlTable> control. This value is then used as the upper bound of a loop to iterate through the cells of a row in the table.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionCount/CS/htmltablecellcollectioncountcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionCount/VB/htmltablecellcollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="htmlTableCellCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <see cref="T:System.Collections.IEnumerator" />-implemented object that contains all <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> objects in the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection.</summary>
        <returns>A <see cref="T:System.Collections.IEnumerator" />-implemented object that contains all <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> objects in the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this method to create a <xref:System.Collections.IEnumerator?displayProperty=nameWithType>-implemented object that can be iterated through to retrieve the contents of each item in the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  
  
 Use the <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> property to get the item currently pointed to in the collection.  
  
 Use the <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> method to move to the next item in the collection.  
  
 Use the <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> method to move the enumerator to the initial position.  
  
> [!NOTE]
>  The <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> method must be called after creating the <xref:System.Collections.IEnumerator?displayProperty=nameWithType>-implemented object, or after using the <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> method to move the enumerator to the first item in the collection. Otherwise, the item represented by the <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> property is undefined.  
  
   
  
## Examples  
 The following code example demonstrates how to use the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator%2A> method to create a <xref:System.Collections.IEnumerator?displayProperty=nameWithType>-implemented object. The object is then iterated through to display the contents of the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionienumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionienumerator/CS/htmltablecellcollectionienumeratorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionienumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionienumerator/VB/htmltablecellcollectionienumeratorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.HtmlControls.HtmlTableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.HtmlControls.HtmlTableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert(System.Int32,System.Web.UI.HtmlControls.HtmlTableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, cell As HtmlTableCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::UI::HtmlControls::HtmlTableCell ^ cell);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Web.UI.HtmlControls.HtmlTableCell -&gt; unit" Usage="htmlTableCellCollection.Insert (index, cell)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cell" Type="System.Web.UI.HtmlControls.HtmlTableCell" />
      </Parameters>
      <Docs>
        <param name="index">The location in the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> at which to add the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />.</param>
        <param name="cell">The <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> to add to the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</param>
        <summary>Adds the specified <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> object at the specified index location of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert%2A> method to add the specified <xref:System.Web.UI.HtmlControls.HtmlTableCell> object to an <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection at the specified index. If you want to simply append an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object to the end of the collection, use the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Add%2A> method.  
  
   
  
## Examples  
 The following code example demonstrates how to use the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert%2A> method to dynamically insert a cell of a table, represented by an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object, in an <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionInsert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionInsert/CS/htmltablecellcollectioninsertcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionInsert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionInsert/VB/htmltablecellcollectioninsertvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection is read-only.</summary>
        <value>
          <see langword="false" /> for all cases.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property always returns `false` to indicate that the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection can be written to in all cases.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether access to the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection is synchronized (thread safe).</summary>
        <value>
          <see langword="false" /> for all cases, which indicates that access to the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> is not synchronized (not thread safe).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is derived from <xref:System.Collections.ICollection?displayProperty=nameWithType> and is overridden to always return `false` to indicate that access to the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection is not synchronized (not thread safe).  
  
 For more information on the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized%2A> property, see the <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> property of the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.HtmlControls.HtmlTableCell this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.HtmlControls.HtmlTableCell Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As HtmlTableCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::HtmlControls::HtmlTableCell ^ default[int] { System::Web::UI::HtmlControls::HtmlTableCell ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.HtmlControls.HtmlTableCell" Usage="System.Web.UI.HtmlControls.HtmlTableCellCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlControls.HtmlTableCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">An ordinal index value that specifies the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> to return.</param>
        <summary>Gets the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> object at the specified index from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection.</summary>
        <value>An <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> that represents a cell contained in the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this indexer to get an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object from the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. You can access an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object at a specified index by using simple array notation.  
  
> [!NOTE]
>  The collection is zero-based; therefore, the first element in the collection contains an index value of `0`.  
  
   
  
## Examples  
 The following code example demonstrates how to use the indexer to retrieve a cell of a table, represented by an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object, from the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. The cell is then updated with new content. Notice that the <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> property of a row represented by an <xref:System.Web.UI.HtmlControls.HtmlTableRow> object is the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  
  
 [!code-aspx-csharp[HtmlTableCellCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollection/CS/htmltablecellcollectioncs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollection/VB/htmltablecellcollectionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.HtmlControls.HtmlTableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.HtmlControls.HtmlTableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove(System.Web.UI.HtmlControls.HtmlTableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (cell As HtmlTableCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::HtmlControls::HtmlTableCell ^ cell);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.HtmlControls.HtmlTableCell -&gt; unit" Usage="htmlTableCellCollection.Remove cell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.HtmlControls.HtmlTableCell" />
      </Parameters>
      <Docs>
        <param name="cell">The <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> to remove from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</param>
        <summary>Removes the specified <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> object from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this method to remove the specified <xref:System.Web.UI.HtmlControls.HtmlTableCell> object from the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  
  
> [!NOTE]
>  If you specify an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object that does not exist in the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection, no item is removed from the collection.  
  
   
  
## Examples  
 The following code example demonstrates how to use the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove%2A> method to remove the specified cell of a table, represented by an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object, from the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. This example removes the cells from the first column of the <xref:System.Web.UI.HtmlControls.HtmlTable> control.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionRemove/CS/htmltablecellcollectionremovecs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionRemove/VB/htmltablecellcollectionremovevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt(System.Int32)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="htmlTableCellCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> to remove from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</param>
        <summary>Removes the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> object at the specified index from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this method to remove the <xref:System.Web.UI.HtmlControls.HtmlTableCell> object at the specified index from an <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. The index number is zero-based; therefore, the first item in the collection has an index value of `0`.  
  
> [!NOTE]
>  If you specify an index that is outside the range of index values, an exception is raised.  
  
   
  
## Examples  
 The following code example demonstrates how to use the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt%2A> method to remove the item at the specified index from the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. This example removes the cells from the first column of the <xref:System.Web.UI.HtmlControls.HtmlTable> control.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionRemoveAt#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionRemoveAt/CS/htmltablecellcollectionremoveatcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionRemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionRemoveAt/VB/htmltablecellcollectionremoveatvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The specified index is outside the range of index values in the collection.</exception>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove(System.Web.UI.HtmlControls.HtmlTableCell)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the object that can be used to synchronize access to the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection.</summary>
        <value>An object that can be used to synchronize access to the collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The object returned in this implementation is the current instance of the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> class.  
  
 For more information on the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot%2A> property, see the <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> property of the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="CodeArrayCreateExpression" FullName="System.CodeDom.CodeArrayCreateExpression">
  <TypeSignature Language="C#" Value="public class CodeArrayCreateExpression : System.CodeDom.CodeExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeArrayCreateExpression extends System.CodeDom.CodeExpression" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeArrayCreateExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeArrayCreateExpression&#xA;Inherits CodeExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeArrayCreateExpression : System::CodeDom::CodeExpression" />
  <TypeSignature Language="F#" Value="type CodeArrayCreateExpression = class&#xA;    inherit CodeExpression" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents an expression that creates an array.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.CodeDom.CodeArrayCreateExpression> can be used to represent a code expression that creates an array. Expressions that create an array should specify either a number of elements, or a list of expressions to use to initialize the array.  
  
 Most arrays can be initialized immediately following declaration. The <xref:System.CodeDom.CodeArrayCreateExpression.Initializers%2A> property can be set to the expression to use to initialize the array.  
  
 A <xref:System.CodeDom.CodeArrayCreateExpression> only directly supports creating single-dimension arrays. If a language allows arrays of arrays, it is possible to create them by nesting a <xref:System.CodeDom.CodeArrayCreateExpression> within a <xref:System.CodeDom.CodeArrayCreateExpression>. Not all languages support arrays of arrays. You can check whether an <xref:System.CodeDom.Compiler.ICodeGenerator> for a language declares support for nested arrays by calling <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> with the <xref:System.CodeDom.Compiler.GeneratorSupport.ArraysOfArrays> flag.  
  
   
  
## Examples  
 The following code uses a <xref:System.CodeDom.CodeArrayCreateExpression> to create an array of integers with 10 indexes.  
  
 [!code-cpp[CodeArrayCreateExpressionSnippet#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeArrayCreateExpressionSnippet/CPP/codearraycreateexpressionsnippet.cpp#1)]
 [!code-csharp[CodeArrayCreateExpressionSnippet#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeArrayCreateExpressionSnippet/CS/codearraycreateexpressionsnippet.cs#1)]
 [!code-vb[CodeArrayCreateExpressionSnippet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeArrayCreateExpressionSnippet/VB/codearraycreateexpressionsnippet.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.CodeDom.CodeObjectCreateExpression" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeArrayCreateExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeArrayCreateExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeArrayCreateExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeArrayCreateExpression (System.CodeDom.CodeTypeReference createType, System.CodeDom.CodeExpression size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeReference createType, class System.CodeDom.CodeExpression size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (createType As CodeTypeReference, size As CodeExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeArrayCreateExpression(System::CodeDom::CodeTypeReference ^ createType, System::CodeDom::CodeExpression ^ size);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeArrayCreateExpression : System.CodeDom.CodeTypeReference * System.CodeDom.CodeExpression -&gt; System.CodeDom.CodeArrayCreateExpression" Usage="new System.CodeDom.CodeArrayCreateExpression (createType, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="createType" Type="System.CodeDom.CodeTypeReference" />
        <Parameter Name="size" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="createType">A <see cref="T:System.CodeDom.CodeTypeReference"></see> indicating the data type of the array to create.</param>
        <param name="size">An expression that indicates the number of indexes of the array to create.</param>
        <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> class using the specified array data type and code expression indicating the number of indexes for the array.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeArrayCreateExpression (System.CodeDom.CodeTypeReference createType, params System.CodeDom.CodeExpression[] initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeReference createType, class System.CodeDom.CodeExpression[] initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (createType As CodeTypeReference, ParamArray initializers As CodeExpression())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeArrayCreateExpression(System::CodeDom::CodeTypeReference ^ createType, ... cli::array &lt;System::CodeDom::CodeExpression ^&gt; ^ initializers);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeArrayCreateExpression : System.CodeDom.CodeTypeReference * System.CodeDom.CodeExpression[] -&gt; System.CodeDom.CodeArrayCreateExpression" Usage="new System.CodeDom.CodeArrayCreateExpression (createType, initializers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="createType" Type="System.CodeDom.CodeTypeReference" />
        <Parameter Name="initializers" Type="System.CodeDom.CodeExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="createType">A <see cref="T:System.CodeDom.CodeTypeReference"></see> that indicates the data type of the array to create.</param>
        <param name="initializers">An array of expressions to use to initialize the array.</param>
        <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> class using the specified array data type and initialization expressions.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeArrayCreateExpression (System.CodeDom.CodeTypeReference createType, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeReference createType, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (createType As CodeTypeReference, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeArrayCreateExpression(System::CodeDom::CodeTypeReference ^ createType, int size);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeArrayCreateExpression : System.CodeDom.CodeTypeReference * int -&gt; System.CodeDom.CodeArrayCreateExpression" Usage="new System.CodeDom.CodeArrayCreateExpression (createType, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="createType" Type="System.CodeDom.CodeTypeReference" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="createType">A <see cref="T:System.CodeDom.CodeTypeReference"></see> indicating the data type of the array to create.</param>
        <param name="size">The number of indexes of the array to create.</param>
        <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> class using the specified array data type and number of indexes for the array.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeArrayCreateExpression (string createType, System.CodeDom.CodeExpression size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string createType, class System.CodeDom.CodeExpression size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.String,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (createType As String, size As CodeExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeArrayCreateExpression(System::String ^ createType, System::CodeDom::CodeExpression ^ size);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeArrayCreateExpression : string * System.CodeDom.CodeExpression -&gt; System.CodeDom.CodeArrayCreateExpression" Usage="new System.CodeDom.CodeArrayCreateExpression (createType, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="createType" Type="System.String" />
        <Parameter Name="size" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="createType">The name of the data type of the array to create.</param>
        <param name="size">An expression that indicates the number of indexes of the array to create.</param>
        <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> class using the specified array data type name and code expression indicating the number of indexes for the array.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeArrayCreateExpression (string createType, params System.CodeDom.CodeExpression[] initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string createType, class System.CodeDom.CodeExpression[] initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.String,System.CodeDom.CodeExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (createType As String, ParamArray initializers As CodeExpression())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeArrayCreateExpression(System::String ^ createType, ... cli::array &lt;System::CodeDom::CodeExpression ^&gt; ^ initializers);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeArrayCreateExpression : string * System.CodeDom.CodeExpression[] -&gt; System.CodeDom.CodeArrayCreateExpression" Usage="new System.CodeDom.CodeArrayCreateExpression (createType, initializers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="createType" Type="System.String" />
        <Parameter Name="initializers" Type="System.CodeDom.CodeExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="createType">The name of the data type of the array to create.</param>
        <param name="initializers">An array of expressions to use to initialize the array.</param>
        <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> class using the specified array data type name and initializers.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeArrayCreateExpression (string createType, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string createType, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (createType As String, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeArrayCreateExpression(System::String ^ createType, int size);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeArrayCreateExpression : string * int -&gt; System.CodeDom.CodeArrayCreateExpression" Usage="new System.CodeDom.CodeArrayCreateExpression (createType, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="createType" Type="System.String" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="createType">The name of the data type of the array to create.</param>
        <param name="size">The number of indexes of the array to create.</param>
        <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> class using the specified array data type name and number of indexes for the array.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeArrayCreateExpression (Type createType, System.CodeDom.CodeExpression size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type createType, class System.CodeDom.CodeExpression size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.Type,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (createType As Type, size As CodeExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeArrayCreateExpression(Type ^ createType, System::CodeDom::CodeExpression ^ size);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeArrayCreateExpression : Type * System.CodeDom.CodeExpression -&gt; System.CodeDom.CodeArrayCreateExpression" Usage="new System.CodeDom.CodeArrayCreateExpression (createType, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="createType" Type="System.Type" />
        <Parameter Name="size" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="createType">The data type of the array to create.</param>
        <param name="size">An expression that indicates the number of indexes of the array to create.</param>
        <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> class using the specified array data type and code expression indicating the number of indexes for the array.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeArrayCreateExpression (Type createType, params System.CodeDom.CodeExpression[] initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type createType, class System.CodeDom.CodeExpression[] initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.Type,System.CodeDom.CodeExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (createType As Type, ParamArray initializers As CodeExpression())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeArrayCreateExpression(Type ^ createType, ... cli::array &lt;System::CodeDom::CodeExpression ^&gt; ^ initializers);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeArrayCreateExpression : Type * System.CodeDom.CodeExpression[] -&gt; System.CodeDom.CodeArrayCreateExpression" Usage="new System.CodeDom.CodeArrayCreateExpression (createType, initializers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="createType" Type="System.Type" />
        <Parameter Name="initializers" Type="System.CodeDom.CodeExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="createType">The data type of the array to create.</param>
        <param name="initializers">An array of expressions to use to initialize the array.</param>
        <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> class using the specified array data type and initializers.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeArrayCreateExpression (Type createType, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type createType, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (createType As Type, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeArrayCreateExpression(Type ^ createType, int size);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeArrayCreateExpression : Type * int -&gt; System.CodeDom.CodeArrayCreateExpression" Usage="new System.CodeDom.CodeArrayCreateExpression (createType, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="createType" Type="System.Type" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="createType">The data type of the array to create.</param>
        <param name="size">The number of indexes of the array to create.</param>
        <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> class using the specified array data type and number of indexes for the array.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference CreateType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference CreateType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeArrayCreateExpression.CreateType" />
      <MemberSignature Language="VB.NET" Value="Public Property CreateType As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ CreateType { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CreateType : System.CodeDom.CodeTypeReference with get, set" Usage="System.CodeDom.CodeArrayCreateExpression.CreateType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type of array to create.</summary>
        <value>A <see cref="System.CodeDom.CodeTypeReference"></see> that indicates the type of the array.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initializers">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpressionCollection Initializers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeExpressionCollection Initializers" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeArrayCreateExpression.Initializers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Initializers As CodeExpressionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeExpressionCollection ^ Initializers { System::CodeDom::CodeExpressionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Initializers : System.CodeDom.CodeExpressionCollection" Usage="System.CodeDom.CodeArrayCreateExpression.Initializers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpressionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the initializers with which to initialize the array.</summary>
        <value>A <see cref="System.CodeDom.CodeExpressionCollection"></see> that indicates the initialization values.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeArrayCreateExpression.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Size : int with get, set" Usage="System.CodeDom.CodeArrayCreateExpression.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the number of indexes in the array.</summary>
        <value>The number of indexes in the array.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeExpression">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpression SizeExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeExpression SizeExpression" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeArrayCreateExpression.SizeExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeExpression As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeExpression ^ SizeExpression { System::CodeDom::CodeExpression ^ get(); void set(System::CodeDom::CodeExpression ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SizeExpression : System.CodeDom.CodeExpression with get, set" Usage="System.CodeDom.CodeArrayCreateExpression.SizeExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the expression that indicates the size of the array.</summary>
        <value>A <see cref="System.CodeDom.CodeExpression"></see> that indicates the size of the array.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The size of the array can be represented with a <xref:System.CodeDom.CodeExpression>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
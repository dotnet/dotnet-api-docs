<Type Name="CodeNamespaceCollection" FullName="System.CodeDom.CodeNamespaceCollection">
  <TypeSignature Language="C#" Value="public class CodeNamespaceCollection : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeNamespaceCollection extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeNamespaceCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeNamespaceCollection&#xA;Inherits CollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeNamespaceCollection : System::Collections::CollectionBase" />
  <TypeSignature Language="F#" Value="type CodeNamespaceCollection = class&#xA;    inherit CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a collection of <see cref="T:System.CodeDom.CodeNamespace" /> objects.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.CodeDom.CodeNamespaceCollection> class provides a simple collection object that can be used to store a set of <xref:System.CodeDom.CodeNamespace> objects.  
  
   
  
## Examples  
 The following example demonstrates how to use the <xref:System.CodeDom.CodeNamespaceCollection> class. The example creates a new instance of the class and uses several methods to add statements to the collection, return their index, and add or remove attributes at a specific index point.  
  
 [!code-cpp[CodeNamespaceCollectionExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeNamespaceCollectionExample/CPP/class1.cpp#1)]
 [!code-csharp[CodeNamespaceCollectionExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeNamespaceCollectionExample/CS/class1.cs#1)]
 [!code-vb[CodeNamespaceCollectionExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeNamespaceCollectionExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.CodeDom.CodeNamespace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeNamespaceCollection" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeNamespaceCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeNamespaceCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeNamespaceCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeNamespaceCollection" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to create an empty instance of the <xref:System.CodeDom.CodeNamespaceCollection> class.  
  
 [!code-cpp[CodeNamespaceCollectionExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeNamespaceCollectionExample/CPP/class1.cpp#2)]
 [!code-csharp[CodeNamespaceCollectionExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeNamespaceCollectionExample/CS/class1.cs#2)]
 [!code-vb[CodeNamespaceCollectionExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeNamespaceCollectionExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeNamespaceCollection (System.CodeDom.CodeNamespace[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeNamespaceCollection.#ctor(System.CodeDom.CodeNamespace[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As CodeNamespace())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeNamespaceCollection(cli::array &lt;System::CodeDom::CodeNamespace ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeNamespaceCollection : System.CodeDom.CodeNamespace[] -&gt; System.CodeDom.CodeNamespaceCollection" Usage="new System.CodeDom.CodeNamespaceCollection value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeNamespace[]" />
      </Parameters>
      <Docs>
        <param name="value">An array of <see cref="T:System.CodeDom.CodeNamespace"></see> objects with which to initialize the collection.</param>
        <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeNamespaceCollection" /> class that contains the specified array of <see cref="T:System.CodeDom.CodeNamespace" /> objects.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">One or more objects in the array are null.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeNamespaceCollection (System.CodeDom.CodeNamespaceCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespaceCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeNamespaceCollection.#ctor(System.CodeDom.CodeNamespaceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As CodeNamespaceCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeNamespaceCollection(System::CodeDom::CodeNamespaceCollection ^ value);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeNamespaceCollection : System.CodeDom.CodeNamespaceCollection -&gt; System.CodeDom.CodeNamespaceCollection" Usage="new System.CodeDom.CodeNamespaceCollection value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeNamespaceCollection" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.CodeDom.CodeNamespaceCollection"></see> with which to initialize the collection.</param>
        <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeNamespaceCollection" /> class that contains the elements of the specified source collection.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value">value</paramref> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.CodeDom.CodeNamespace value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.CodeDom.CodeNamespace value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeNamespaceCollection.Add(System.CodeDom.CodeNamespace)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As CodeNamespace) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::CodeDom::CodeNamespace ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.CodeDom.CodeNamespace -&gt; int" Usage="codeNamespaceCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeNamespace" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.CodeDom.CodeNamespace"></see> to add.</param>
        <summary>Adds the specified <see cref="T:System.CodeDom.CodeNamespace" /> object to the collection.</summary>
        <returns>The index at which the new element was inserted.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to use the <xref:System.CodeDom.CodeNamespaceCollection.Add%2A> method to add a <xref:System.CodeDom.CodeNamespace> object to a <xref:System.CodeDom.CodeNamespaceCollection> instance.  
  
 [!code-cpp[CodeNamespaceCollectionExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeNamespaceCollectionExample/CPP/class1.cpp#3)]
 [!code-csharp[CodeNamespaceCollectionExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeNamespaceCollectionExample/CS/class1.cs#3)]
 [!code-vb[CodeNamespaceCollectionExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeNamespaceCollectionExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.CodeNamespaceCollection.AddRange(System.CodeDom.CodeNamespace[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Copies the elements of the specified <see cref="T:System.CodeDom.CodeNamespace" /> array to the end of the collection.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.CodeDom.CodeNamespace[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.CodeDom.CodeNamespace[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeNamespaceCollection.AddRange(System.CodeDom.CodeNamespace[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As CodeNamespace())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::CodeDom::CodeNamespace ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.CodeDom.CodeNamespace[] -&gt; unit" Usage="codeNamespaceCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeNamespace[]" />
      </Parameters>
      <Docs>
        <param name="value">An array of type <see cref="T:System.CodeDom.CodeNamespace"></see> that contains the objects to add to the collection.</param>
        <summary>Copies the elements of the specified <see cref="T:System.CodeDom.CodeNamespace" /> array to the end of the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to use the <xref:System.CodeDom.CodeNamespaceCollection.AddRange%28System.CodeDom.CodeNamespaceCollection%29> method overload to add members of a <xref:System.CodeDom.CodeNamespace> array to the <xref:System.CodeDom.CodeNamespaceCollection>.  
  
 [!code-cpp[CodeNamespaceCollectionExample#4](~/samples/snippets/cpp/VS_Snippets_CLR/CodeNamespaceCollectionExample/CPP/class1.cpp#4)]
 [!code-csharp[CodeNamespaceCollectionExample#4](~/samples/snippets/csharp/VS_Snippets_CLR/CodeNamespaceCollectionExample/CS/class1.cs#4)]
 [!code-vb[CodeNamespaceCollectionExample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeNamespaceCollectionExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value">value</paramref> is null.</exception>
        <altmember cref="M:System.CodeDom.CodeNamespaceCollection.Add(System.CodeDom.CodeNamespace)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.CodeDom.CodeNamespaceCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.CodeDom.CodeNamespaceCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeNamespaceCollection.AddRange(System.CodeDom.CodeNamespaceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As CodeNamespaceCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::CodeDom::CodeNamespaceCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.CodeDom.CodeNamespaceCollection -&gt; unit" Usage="codeNamespaceCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeNamespaceCollection" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.CodeDom.CodeNamespaceCollection"></see> that contains the objects to add to the collection.</param>
        <summary>Adds the contents of the specified <see cref="T:System.CodeDom.CodeNamespaceCollection" /> object to the end of the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to use the <xref:System.CodeDom.CodeNamespaceCollection.AddRange%28System.CodeDom.CodeNamespaceCollection%29> method overload to add <xref:System.CodeDom.CodeNamespace> objects from one <xref:System.CodeDom.CodeNamespaceCollection> to another <xref:System.CodeDom.CodeNamespaceCollection>.  
  
 [!code-cpp[CodeNamespaceCollectionExample#4](~/samples/snippets/cpp/VS_Snippets_CLR/CodeNamespaceCollectionExample/CPP/class1.cpp#4)]
 [!code-csharp[CodeNamespaceCollectionExample#4](~/samples/snippets/csharp/VS_Snippets_CLR/CodeNamespaceCollectionExample/CS/class1.cs#4)]
 [!code-vb[CodeNamespaceCollectionExample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeNamespaceCollectionExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value">value</paramref> is null.</exception>
        <altmember cref="M:System.CodeDom.CodeNamespaceCollection.Add(System.CodeDom.CodeNamespace)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.CodeDom.CodeNamespace value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.CodeDom.CodeNamespace value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeNamespaceCollection.Contains(System.CodeDom.CodeNamespace)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As CodeNamespace) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::CodeDom::CodeNamespace ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.CodeDom.CodeNamespace -&gt; bool" Usage="codeNamespaceCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeNamespace" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.CodeDom.CodeNamespace"></see> to search for in the collection.</param>
        <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.CodeDom.CodeNamespace" /> object.</summary>
        <returns>true if the <see cref="System.CodeDom.CodeNamespace"></see> is contained in the collection; otherwise, false.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example uses the <xref:System.CodeDom.CodeNamespaceCollection.Contains%2A> method to find a <xref:System.CodeDom.CodeNamespace> object in a <xref:System.CodeDom.CodeNamespaceCollection>.  
  
 [!code-cpp[CodeNamespaceCollectionExample#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeNamespaceCollectionExample/CPP/class1.cpp#5)]
 [!code-csharp[CodeNamespaceCollectionExample#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeNamespaceCollectionExample/CS/class1.cs#5)]
 [!code-vb[CodeNamespaceCollectionExample#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeNamespaceCollectionExample/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.CodeNamespaceCollection.IndexOf(System.CodeDom.CodeNamespace)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.CodeDom.CodeNamespace[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.CodeDom.CodeNamespace[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeNamespaceCollection.CopyTo(System.CodeDom.CodeNamespace[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As CodeNamespace(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::CodeDom::CodeNamespace ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.CodeDom.CodeNamespace[] * int -&gt; unit" Usage="codeNamespaceCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.CodeDom.CodeNamespace[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the values copied from the collection.</param>
        <param name="index">The index of the array at which to begin inserting.</param>
        <summary>Copies the collection objects to a one-dimensional <see cref="T:System.Array" /> instance, starting at the specified index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to use the <xref:System.CodeDom.CodeNamespaceCollection.CopyTo%2A> method to copy the contents of a <xref:System.CodeDom.CodeNamespaceCollection> object to an array, starting at the specified index value.  
  
 [!code-cpp[CodeNamespaceCollectionExample#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeNamespaceCollectionExample/CPP/class1.cpp#6)]
 [!code-csharp[CodeNamespaceCollectionExample#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeNamespaceCollectionExample/CS/class1.cs#6)]
 [!code-vb[CodeNamespaceCollectionExample#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeNamespaceCollectionExample/VB/class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The destination array is multidimensional.  
 -or-  
 The number of elements in the <see cref="System.CodeDom.CodeNamespaceCollection"></see> is greater than the available space between the index of the target array specified by the <paramref name="index">index</paramref> parameter and the end of the target array.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="array">array</paramref> parameter is null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> parameter is less than the target array&amp;#39;s minimum index.</exception>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.CodeDom.CodeNamespace value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.CodeDom.CodeNamespace value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeNamespaceCollection.IndexOf(System.CodeDom.CodeNamespace)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As CodeNamespace) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::CodeDom::CodeNamespace ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.CodeDom.CodeNamespace -&gt; int" Usage="codeNamespaceCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeNamespace" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.CodeDom.CodeNamespace"></see> to locate.</param>
        <summary>Gets the index of the specified <see cref="T:System.CodeDom.CodeNamespace" /> object in the <see cref="T:System.CodeDom.CodeNamespaceCollection" />, if it exists in the collection.</summary>
        <returns>The index of the specified <see cref="System.CodeDom.CodeNamespace"></see>, if it is found, in the collection; otherwise, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example searches for the presence of a specific <xref:System.CodeDom.CodeNamespace> and uses the <xref:System.CodeDom.CodeNamespaceCollection.IndexOf%2A> method to retrieve the index value at which it was found.  
  
 [!code-cpp[CodeNamespaceCollectionExample#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeNamespaceCollectionExample/CPP/class1.cpp#5)]
 [!code-csharp[CodeNamespaceCollectionExample#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeNamespaceCollectionExample/CS/class1.cs#5)]
 [!code-vb[CodeNamespaceCollectionExample#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeNamespaceCollectionExample/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.CodeNamespaceCollection.Contains(System.CodeDom.CodeNamespace)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.CodeDom.CodeNamespace value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.CodeDom.CodeNamespace value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeNamespaceCollection.Insert(System.Int32,System.CodeDom.CodeNamespace)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As CodeNamespace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::CodeDom::CodeNamespace ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.CodeDom.CodeNamespace -&gt; unit" Usage="codeNamespaceCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.CodeDom.CodeNamespace" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index where the new item should be inserted.</param>
        <param name="value">The <see cref="T:System.CodeDom.CodeNamespace"></see> to insert.</param>
        <summary>Inserts the specified <see cref="T:System.CodeDom.CodeNamespace" /> object into the collection at the specified index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to use the <xref:System.CodeDom.CodeNamespaceCollection.Insert%2A> method to insert a <xref:System.CodeDom.CodeNamespace> object into a <xref:System.CodeDom.CodeNamespaceCollection>.  
  
 [!code-cpp[CodeNamespaceCollectionExample#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeNamespaceCollectionExample/CPP/class1.cpp#8)]
 [!code-csharp[CodeNamespaceCollectionExample#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeNamespaceCollectionExample/CS/class1.cs#8)]
 [!code-vb[CodeNamespaceCollectionExample#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeNamespaceCollectionExample/VB/class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.CodeNamespaceCollection.Add(System.CodeDom.CodeNamespace)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeNamespace this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeNamespace Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeNamespaceCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As CodeNamespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeNamespace ^ default[int] { System::CodeDom::CodeNamespace ^ get(int index); void set(int index, System::CodeDom::CodeNamespace ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.CodeDom.CodeNamespace with get, set" Usage="System.CodeDom.CodeNamespaceCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeNamespace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the collection to access.</param>
        <summary>Gets or sets the <see cref="T:System.CodeDom.CodeNamespaceCollection" /> object at the specified index in the collection.</summary>
        <value>A <see cref="System.CodeDom.CodeNamespace"></see> at each valid index.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is an indexer that can be used to access the collection.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> parameter is outside the valid range of indexes for the collection.</exception>
        <altmember cref="T:System.CodeDom.CodeNamespace" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.CodeDom.CodeNamespace value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.CodeDom.CodeNamespace value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeNamespaceCollection.Remove(System.CodeDom.CodeNamespace)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As CodeNamespace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::CodeDom::CodeNamespace ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.CodeDom.CodeNamespace -&gt; unit" Usage="codeNamespaceCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeNamespace" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.CodeDom.CodeNamespace"></see> to remove from the collection.</param>
        <summary>Removes the specified <see cref="T:System.CodeDom.CodeNamespace" /> object from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to use the <xref:System.CodeDom.CodeNamespaceCollection.Remove%2A> method to delete a <xref:System.CodeDom.CodeNamespace> object from a <xref:System.CodeDom.CodeNamespaceCollection>.  
  
 [!code-cpp[CodeNamespaceCollectionExample#9](~/samples/snippets/cpp/VS_Snippets_CLR/CodeNamespaceCollectionExample/CPP/class1.cpp#9)]
 [!code-csharp[CodeNamespaceCollectionExample#9](~/samples/snippets/csharp/VS_Snippets_CLR/CodeNamespaceCollectionExample/CS/class1.cs#9)]
 [!code-vb[CodeNamespaceCollectionExample#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeNamespaceCollectionExample/VB/class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The specified object is not found in the collection.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
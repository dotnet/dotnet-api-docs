<Type Name="CodeBinaryOperatorType" FullName="System.CodeDom.CodeBinaryOperatorType">
  <TypeSignature Language="C#" Value="public enum CodeBinaryOperatorType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed CodeBinaryOperatorType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeBinaryOperatorType" />
  <TypeSignature Language="VB.NET" Value="Public Enum CodeBinaryOperatorType" />
  <TypeSignature Language="C++ CLI" Value="public enum class CodeBinaryOperatorType" />
  <TypeSignature Language="F#" Value="type CodeBinaryOperatorType = " />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines identifiers for supported binary operators.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.CodeDom.CodeBinaryOperatorType> defines identifiers for the most common types of binary operators. These operator identifiers are used by <xref:System.CodeDom.CodeBinaryOperatorExpression> to indicate the type of operator in each expression.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.CodeDom.CodeBinaryOperatorExpression" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="Add" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType Add = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.Add" />
      <MemberSignature Language="VB.NET" Value="Add" />
      <MemberSignature Language="C++ CLI" Value="Add" />
      <MemberSignature Language="F#" Value="Add = 0" Usage="System.CodeDom.CodeBinaryOperatorType.Add" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Addition operator.</summary>
      </Docs>
    </Member>
    <Member MemberName="Assign">
      <MemberSignature Language="C#" Value="Assign" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType Assign = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.Assign" />
      <MemberSignature Language="VB.NET" Value="Assign" />
      <MemberSignature Language="C++ CLI" Value="Assign" />
      <MemberSignature Language="F#" Value="Assign = 5" Usage="System.CodeDom.CodeBinaryOperatorType.Assign" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Assignment operator.</summary>
      </Docs>
    </Member>
    <Member MemberName="BitwiseAnd">
      <MemberSignature Language="C#" Value="BitwiseAnd" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType BitwiseAnd = int32(10)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.BitwiseAnd" />
      <MemberSignature Language="VB.NET" Value="BitwiseAnd" />
      <MemberSignature Language="C++ CLI" Value="BitwiseAnd" />
      <MemberSignature Language="F#" Value="BitwiseAnd = 10" Usage="System.CodeDom.CodeBinaryOperatorType.BitwiseAnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>Bitwise and operator.</summary>
      </Docs>
    </Member>
    <Member MemberName="BitwiseOr">
      <MemberSignature Language="C#" Value="BitwiseOr" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType BitwiseOr = int32(9)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.BitwiseOr" />
      <MemberSignature Language="VB.NET" Value="BitwiseOr" />
      <MemberSignature Language="C++ CLI" Value="BitwiseOr" />
      <MemberSignature Language="F#" Value="BitwiseOr = 9" Usage="System.CodeDom.CodeBinaryOperatorType.BitwiseOr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>Bitwise or operator.</summary>
      </Docs>
    </Member>
    <Member MemberName="BooleanAnd">
      <MemberSignature Language="C#" Value="BooleanAnd" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType BooleanAnd = int32(12)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.BooleanAnd" />
      <MemberSignature Language="VB.NET" Value="BooleanAnd" />
      <MemberSignature Language="C++ CLI" Value="BooleanAnd" />
      <MemberSignature Language="F#" Value="BooleanAnd = 12" Usage="System.CodeDom.CodeBinaryOperatorType.BooleanAnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary>Boolean and operator. This represents a short circuiting operator. A short circuiting operator will evaluate only as many expressions as necessary before returning a correct value.</summary>
      </Docs>
    </Member>
    <Member MemberName="BooleanOr">
      <MemberSignature Language="C#" Value="BooleanOr" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType BooleanOr = int32(11)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.BooleanOr" />
      <MemberSignature Language="VB.NET" Value="BooleanOr" />
      <MemberSignature Language="C++ CLI" Value="BooleanOr" />
      <MemberSignature Language="F#" Value="BooleanOr = 11" Usage="System.CodeDom.CodeBinaryOperatorType.BooleanOr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>Boolean or operator. This represents a short circuiting operator. A short circuiting operator will evaluate only as many expressions as necessary before returning a correct value.</summary>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="Divide" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType Divide = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.Divide" />
      <MemberSignature Language="VB.NET" Value="Divide" />
      <MemberSignature Language="C++ CLI" Value="Divide" />
      <MemberSignature Language="F#" Value="Divide = 3" Usage="System.CodeDom.CodeBinaryOperatorType.Divide" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Division operator.</summary>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="GreaterThan" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType GreaterThan = int32(15)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.GreaterThan" />
      <MemberSignature Language="VB.NET" Value="GreaterThan" />
      <MemberSignature Language="C++ CLI" Value="GreaterThan" />
      <MemberSignature Language="F#" Value="GreaterThan = 15" Usage="System.CodeDom.CodeBinaryOperatorType.GreaterThan" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary>Greater than operator.</summary>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="GreaterThanOrEqual" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType GreaterThanOrEqual = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.GreaterThanOrEqual" />
      <MemberSignature Language="VB.NET" Value="GreaterThanOrEqual" />
      <MemberSignature Language="C++ CLI" Value="GreaterThanOrEqual" />
      <MemberSignature Language="F#" Value="GreaterThanOrEqual = 16" Usage="System.CodeDom.CodeBinaryOperatorType.GreaterThanOrEqual" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Greater than or equal operator.</summary>
      </Docs>
    </Member>
    <Member MemberName="IdentityEquality">
      <MemberSignature Language="C#" Value="IdentityEquality" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType IdentityEquality = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.IdentityEquality" />
      <MemberSignature Language="VB.NET" Value="IdentityEquality" />
      <MemberSignature Language="C++ CLI" Value="IdentityEquality" />
      <MemberSignature Language="F#" Value="IdentityEquality = 7" Usage="System.CodeDom.CodeBinaryOperatorType.IdentityEquality" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>Identity equal operator.</summary>
      </Docs>
    </Member>
    <Member MemberName="IdentityInequality">
      <MemberSignature Language="C#" Value="IdentityInequality" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType IdentityInequality = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.IdentityInequality" />
      <MemberSignature Language="VB.NET" Value="IdentityInequality" />
      <MemberSignature Language="C++ CLI" Value="IdentityInequality" />
      <MemberSignature Language="F#" Value="IdentityInequality = 6" Usage="System.CodeDom.CodeBinaryOperatorType.IdentityInequality" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>Identity not equal operator.</summary>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="LessThan" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType LessThan = int32(13)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.LessThan" />
      <MemberSignature Language="VB.NET" Value="LessThan" />
      <MemberSignature Language="C++ CLI" Value="LessThan" />
      <MemberSignature Language="F#" Value="LessThan = 13" Usage="System.CodeDom.CodeBinaryOperatorType.LessThan" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary>Less than operator.</summary>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="LessThanOrEqual" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType LessThanOrEqual = int32(14)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.LessThanOrEqual" />
      <MemberSignature Language="VB.NET" Value="LessThanOrEqual" />
      <MemberSignature Language="C++ CLI" Value="LessThanOrEqual" />
      <MemberSignature Language="F#" Value="LessThanOrEqual = 14" Usage="System.CodeDom.CodeBinaryOperatorType.LessThanOrEqual" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary>Less than or equal operator.</summary>
      </Docs>
    </Member>
    <Member MemberName="Modulus">
      <MemberSignature Language="C#" Value="Modulus" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType Modulus = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.Modulus" />
      <MemberSignature Language="VB.NET" Value="Modulus" />
      <MemberSignature Language="C++ CLI" Value="Modulus" />
      <MemberSignature Language="F#" Value="Modulus = 4" Usage="System.CodeDom.CodeBinaryOperatorType.Modulus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Modulus operator.</summary>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="Multiply" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType Multiply = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.Multiply" />
      <MemberSignature Language="VB.NET" Value="Multiply" />
      <MemberSignature Language="C++ CLI" Value="Multiply" />
      <MemberSignature Language="F#" Value="Multiply = 2" Usage="System.CodeDom.CodeBinaryOperatorType.Multiply" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Multiplication operator.</summary>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="Subtract" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType Subtract = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.Subtract" />
      <MemberSignature Language="VB.NET" Value="Subtract" />
      <MemberSignature Language="C++ CLI" Value="Subtract" />
      <MemberSignature Language="F#" Value="Subtract = 1" Usage="System.CodeDom.CodeBinaryOperatorType.Subtract" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Subtraction operator.</summary>
      </Docs>
    </Member>
    <Member MemberName="ValueEquality">
      <MemberSignature Language="C#" Value="ValueEquality" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType ValueEquality = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.ValueEquality" />
      <MemberSignature Language="VB.NET" Value="ValueEquality" />
      <MemberSignature Language="C++ CLI" Value="ValueEquality" />
      <MemberSignature Language="F#" Value="ValueEquality = 8" Usage="System.CodeDom.CodeBinaryOperatorType.ValueEquality" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Value equal operator.</summary>
      </Docs>
    </Member>
  </Members>
</Type>

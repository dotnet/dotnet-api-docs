<Type Name="ArrayRecord" FullName="System.Formats.Nrbf.ArrayRecord">
  <TypeSignature Language="C#" Value="public abstract class ArrayRecord : System.Formats.Nrbf.SerializationRecord" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ArrayRecord extends System.Formats.Nrbf.SerializationRecord" />
  <TypeSignature Language="DocId" Value="T:System.Formats.Nrbf.ArrayRecord" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ArrayRecord&#xA;Inherits SerializationRecord" />
  <TypeSignature Language="F#" Value="type ArrayRecord = class&#xA;    inherit SerializationRecord" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArrayRecord abstract : System::Formats::Nrbf::SerializationRecord" />
  <AssemblyInfo>
    <AssemblyName>System.Formats.Nrbf</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Formats.Nrbf.SerializationRecord</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines the core behavior for NRBF array records and provides a base for derived classes.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetArray">
      <MemberSignature Language="C#" Value="public Array GetArray (Type expectedArrayType, bool allowNulls = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Array GetArray(class System.Type expectedArrayType, bool allowNulls) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Nrbf.ArrayRecord.GetArray(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArray (expectedArrayType As Type, Optional allowNulls As Boolean = true) As Array" />
      <MemberSignature Language="F#" Value="member this.GetArray : Type * bool -&gt; Array" Usage="arrayRecord.GetArray (expectedArrayType, allowNulls)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Nrbf</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0;windowsdesktop-9.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresDynamicCode("The code for an array of the specified type might not be available.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresDynamicCode("The code for an array of the specified type might not be available.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-8.0;net-9.0;windowsdesktop-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedArrayType" Type="System.Type" />
        <Parameter Name="allowNulls" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="expectedArrayType">Expected array type.</param>
        <param name="allowNulls">
          <see langword="true" /> to permit <see langword="null" /> values within the array;
              otherwise, <see langword="false" />.
            </param>
        <summary>
            Allocates an array and fills it with the data provided in the serialized records (in case of primitive types like <see cref="T:System.String" /> or <see cref="T:System.Int32" />) or the serialized records themselves.
            </summary>
        <returns>An array filled with the data provided in the serialized records.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="expectedArrayType" /> does not match the data from the payload.</exception>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override System.Formats.Nrbf.SerializationRecordId Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Formats.Nrbf.SerializationRecordId Id" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Nrbf.ArrayRecord.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As SerializationRecordId" />
      <MemberSignature Language="F#" Value="member this.Id : System.Formats.Nrbf.SerializationRecordId" Usage="System.Formats.Nrbf.ArrayRecord.Id" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Formats::Nrbf::SerializationRecordId Id { System::Formats::Nrbf::SerializationRecordId get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Nrbf</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Formats.Nrbf.SerializationRecordId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Lengths">
      <MemberSignature Language="C#" Value="public abstract ReadOnlySpan&lt;int&gt; Lengths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;int32&gt; Lengths" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Nrbf.ArrayRecord.Lengths" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Lengths As ReadOnlySpan(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Lengths : ReadOnlySpan&lt;int&gt;" Usage="System.Formats.Nrbf.ArrayRecord.Lengths" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property ReadOnlySpan&lt;int&gt; Lengths { ReadOnlySpan&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Nrbf</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When overridden in a derived class, gets a buffer of integers that represent the number of elements in every dimension.
            </summary>
        <value>A buffer of integers that represent the number of elements in every dimension.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rank">
      <MemberSignature Language="C#" Value="public int Rank { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rank" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Nrbf.ArrayRecord.Rank" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rank As Integer" />
      <MemberSignature Language="F#" Value="member this.Rank : int" Usage="System.Formats.Nrbf.ArrayRecord.Rank" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rank { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Nrbf</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the rank of the array.
            </summary>
        <value>The rank of the array.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

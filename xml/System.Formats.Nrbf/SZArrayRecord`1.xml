<Type Name="SZArrayRecord&lt;T&gt;" FullName="System.Formats.Nrbf.SZArrayRecord&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class SZArrayRecord&lt;T&gt; : System.Formats.Nrbf.ArrayRecord" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SZArrayRecord`1&lt;T&gt; extends System.Formats.Nrbf.ArrayRecord" />
  <TypeSignature Language="DocId" Value="T:System.Formats.Nrbf.SZArrayRecord`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SZArrayRecord(Of T)&#xA;Inherits ArrayRecord" />
  <TypeSignature Language="F#" Value="type SZArrayRecord&lt;'T&gt; = class&#xA;    inherit ArrayRecord" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class SZArrayRecord abstract : System::Formats::Nrbf::ArrayRecord" />
  <AssemblyInfo>
    <AssemblyName>System.Formats.Nrbf</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0;windowsdesktop-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Formats.Nrbf.ArrayRecord</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T" />
    <summary>
            Defines the core behavior for NRBF single dimensional, zero-indexed array records and provides a base for derived classes.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetArray">
      <MemberSignature Language="C#" Value="public abstract T?[] GetArray (bool allowNulls = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T[] GetArray(bool allowNulls) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Nrbf.SZArrayRecord`1.GetArray(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetArray (Optional allowNulls As Boolean = true) As T()" />
      <MemberSignature Language="F#" Value="override this.GetArray : bool -&gt; 'T[]" Usage="sZArrayRecord.GetArray allowNulls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Nrbf</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowNulls" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowNulls">
          <see langword="true" /> to permit <see langword="null" /> values within the array;
              otherwise, <see langword="false" />.
            </param>
        <summary>
            When overridden in a derived class, allocates an array of <typeparamref name="T" /> and fills it with the data provided in the serialized records (in case of primitive types like <see cref="T:System.String" /> or <see cref="T:System.Int32" />) or the serialized records themselves.
            </summary>
        <returns>An array filled with the data provided in the serialized records.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Nrbf.SZArrayRecord`1.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Formats.Nrbf.SZArrayRecord&lt;'T&gt;.Length" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Nrbf</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the length of the array.
            </summary>
        <value>The length of the array.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lengths">
      <MemberSignature Language="C#" Value="public override ReadOnlySpan&lt;int&gt; Lengths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;int32&gt; Lengths" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Nrbf.SZArrayRecord`1.Lengths" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Lengths As ReadOnlySpan(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Lengths : ReadOnlySpan&lt;int&gt;" Usage="System.Formats.Nrbf.SZArrayRecord&lt;'T&gt;.Lengths" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property ReadOnlySpan&lt;int&gt; Lengths { ReadOnlySpan&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Nrbf</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>

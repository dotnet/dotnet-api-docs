<Type Name="SerializationRecord" FullName="System.Formats.Nrbf.SerializationRecord">
  <TypeSignature Language="C#" Value="public abstract class SerializationRecord" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SerializationRecord extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Formats.Nrbf.SerializationRecord" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SerializationRecord" />
  <TypeSignature Language="F#" Value="type SerializationRecord = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class SerializationRecord abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Formats.Nrbf</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0;net-9.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-4.8.1;netstandard-2.0">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{RecordType}, {Id}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{RecordType}, {Id}")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-8.0;net-9.0;windowsdesktop-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-8.0;net-9.0;windowsdesktop-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Abstract class that represents the serialization record.
            </summary>
    <remarks>
      <para>
              Every instance returned to the end user can be either <see cref="T:System.Formats.Nrbf.PrimitiveTypeRecord`1" />,
              a <see cref="T:System.Formats.Nrbf.ClassRecord" /> or an <see cref="T:System.Formats.Nrbf.ArrayRecord" />.
             </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public abstract System.Formats.Nrbf.SerializationRecordId Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Formats.Nrbf.SerializationRecordId Id" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Nrbf.SerializationRecord.Id" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Id As SerializationRecordId" />
      <MemberSignature Language="F#" Value="member this.Id : System.Formats.Nrbf.SerializationRecordId" Usage="System.Formats.Nrbf.SerializationRecord.Id" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Formats::Nrbf::SerializationRecordId Id { System::Formats::Nrbf::SerializationRecordId get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Nrbf</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Formats.Nrbf.SerializationRecordId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the ID of the record.
            </summary>
        <value>The ID of the record.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordType">
      <MemberSignature Language="C#" Value="public abstract System.Formats.Nrbf.SerializationRecordType RecordType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Formats.Nrbf.SerializationRecordType RecordType" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Nrbf.SerializationRecord.RecordType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RecordType As SerializationRecordType" />
      <MemberSignature Language="F#" Value="member this.RecordType : System.Formats.Nrbf.SerializationRecordType" Usage="System.Formats.Nrbf.SerializationRecord.RecordType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Formats::Nrbf::SerializationRecordType RecordType { System::Formats::Nrbf::SerializationRecordType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Nrbf</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Formats.Nrbf.SerializationRecordType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type of the record.
            </summary>
        <value>The type of the record.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.Metadata.TypeName TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Metadata.TypeName TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Nrbf.SerializationRecord.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TypeName As TypeName" />
      <MemberSignature Language="F#" Value="member this.TypeName : System.Reflection.Metadata.TypeName" Usage="System.Formats.Nrbf.SerializationRecord.TypeName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::Metadata::TypeName ^ TypeName { System::Reflection::Metadata::TypeName ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Nrbf</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.TypeName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the serialized type.
            </summary>
        <value>The name of the serialized type.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeNameMatches">
      <MemberSignature Language="C#" Value="public bool TypeNameMatches (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TypeNameMatches(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Nrbf.SerializationRecord.TypeNameMatches(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function TypeNameMatches (type As Type) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TypeNameMatches : Type -&gt; bool" Usage="serializationRecord.TypeNameMatches type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TypeNameMatches(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Nrbf</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">The type to compare against.</param>
        <summary>
            Compares the type name read from the payload against the specified type.
            </summary>
        <returns>
          <see langword="true" /> if the serialized type name match provided type; otherwise, <see langword="false" />.</returns>
        <remarks>
          <para>This method ignores assembly names.</para>
          <para>This method does NOT take into account member names or their types.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

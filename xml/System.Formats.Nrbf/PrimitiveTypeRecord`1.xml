<Type Name="PrimitiveTypeRecord&lt;T&gt;" FullName="System.Formats.Nrbf.PrimitiveTypeRecord&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class PrimitiveTypeRecord&lt;T&gt; : System.Formats.Nrbf.PrimitiveTypeRecord" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PrimitiveTypeRecord`1&lt;T&gt; extends System.Formats.Nrbf.PrimitiveTypeRecord" />
  <TypeSignature Language="DocId" Value="T:System.Formats.Nrbf.PrimitiveTypeRecord`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PrimitiveTypeRecord(Of T)&#xA;Inherits PrimitiveTypeRecord" />
  <TypeSignature Language="F#" Value="type PrimitiveTypeRecord&lt;'T&gt; = class&#xA;    inherit PrimitiveTypeRecord" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class PrimitiveTypeRecord abstract : System::Formats::Nrbf::PrimitiveTypeRecord" />
  <AssemblyInfo>
    <AssemblyName>System.Formats.Nrbf</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0;windowsdesktop-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Formats.Nrbf.PrimitiveTypeRecord</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0;net-9.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-4.8.1;netstandard-2.0">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{Value}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{Value}")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-8.0;net-9.0;windowsdesktop-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-8.0;net-9.0;windowsdesktop-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">The type of the primitive value.</typeparam>
    <summary>
            Represents a record that itself represents the primitive value of <typeparamref name="T" /> type.
            </summary>
    <remarks>
      <para>
            The NRBF specification considers the following types to be primitive:
            <see cref="T:System.String" />, <see cref="T:System.Boolean" />, <see cref="T:System.Byte" />, <see cref="T:System.SByte" /><see cref="T:System.Char" />, <see cref="T:System.Int16" />, <see cref="T:System.UInt16" />,
            <see cref="T:System.Int32" />, <see cref="T:System.UInt32" />, <see cref="T:System.Int64" />, <see cref="T:System.UInt64" />,
            <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.Decimal" />,
            <see cref="T:System.DateTime" /> and <see cref="T:System.TimeSpan" />.
            </para>
      <para>Other serialization records are represented with <see cref="T:System.Formats.Nrbf.ClassRecord" /> or <see cref="T:System.Formats.Nrbf.ArrayRecord" />.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public override System.Reflection.Metadata.TypeName TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Metadata.TypeName TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Nrbf.PrimitiveTypeRecord`1.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeName As TypeName" />
      <MemberSignature Language="F#" Value="member this.TypeName : System.Reflection.Metadata.TypeName" Usage="System.Formats.Nrbf.PrimitiveTypeRecord&lt;'T&gt;.TypeName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Metadata::TypeName ^ TypeName { System::Reflection::Metadata::TypeName ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Nrbf</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.TypeName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public T Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Value" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Nrbf.PrimitiveTypeRecord`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As T" />
      <MemberSignature Language="F#" Value="member this.Value : 'T" Usage="System.Formats.Nrbf.PrimitiveTypeRecord&lt;'T&gt;.Value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Value { T get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Nrbf</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the serialized primitive value.
            </summary>
        <value>The primitive value.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ResourceStore" FullName="IdentityServer4.EntityFramework.Stores.ResourceStore">
  <TypeSignature Language="C#" Value="public class ResourceStore : IdentityServer4.Stores.IResourceStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourceStore extends System.Object implements class IdentityServer4.Stores.IResourceStore" />
  <TypeSignature Language="DocId" Value="T:IdentityServer4.EntityFramework.Stores.ResourceStore" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceStore&#xA;Implements IResourceStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceStore : IdentityServer4::Stores::IResourceStore" />
  <TypeSignature Language="F#" Value="type ResourceStore = class&#xA;    interface IResourceStore" />
  <AssemblyInfo>
    <AssemblyName>IdentityServer4.EntityFramework.Storage</AssemblyName>
    <AssemblyVersion>3.1.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>IdentityServer4.Stores.IResourceStore</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceStore (IdentityServer4.EntityFramework.Interfaces.IConfigurationDbContext context, Microsoft.Extensions.Logging.ILogger&lt;IdentityServer4.EntityFramework.Stores.ResourceStore&gt; logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class IdentityServer4.EntityFramework.Interfaces.IConfigurationDbContext context, class Microsoft.Extensions.Logging.ILogger`1&lt;class IdentityServer4.EntityFramework.Stores.ResourceStore&gt; logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:IdentityServer4.EntityFramework.Stores.ResourceStore.#ctor(IdentityServer4.EntityFramework.Interfaces.IConfigurationDbContext,Microsoft.Extensions.Logging.ILogger{IdentityServer4.EntityFramework.Stores.ResourceStore})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As IConfigurationDbContext, logger As ILogger(Of ResourceStore))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceStore(IdentityServer4::EntityFramework::Interfaces::IConfigurationDbContext ^ context, Microsoft::Extensions::Logging::ILogger&lt;IdentityServer4::EntityFramework::Stores::ResourceStore ^&gt; ^ logger);" />
      <MemberSignature Language="F#" Value="new IdentityServer4.EntityFramework.Stores.ResourceStore : IdentityServer4.EntityFramework.Interfaces.IConfigurationDbContext * Microsoft.Extensions.Logging.ILogger&lt;IdentityServer4.EntityFramework.Stores.ResourceStore&gt; -&gt; IdentityServer4.EntityFramework.Stores.ResourceStore" Usage="new IdentityServer4.EntityFramework.Stores.ResourceStore (context, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>IdentityServer4.EntityFramework.Storage</AssemblyName>
        <AssemblyVersion>3.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="IdentityServer4.EntityFramework.Interfaces.IConfigurationDbContext" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger&lt;IdentityServer4.EntityFramework.Stores.ResourceStore&gt;" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="logger">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="protected readonly IdentityServer4.EntityFramework.Interfaces.IConfigurationDbContext Context;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class IdentityServer4.EntityFramework.Interfaces.IConfigurationDbContext Context" />
      <MemberSignature Language="DocId" Value="F:IdentityServer4.EntityFramework.Stores.ResourceStore.Context" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Context As IConfigurationDbContext " />
      <MemberSignature Language="C++ CLI" Value="protected: initonly IdentityServer4::EntityFramework::Interfaces::IConfigurationDbContext ^ Context;" />
      <MemberSignature Language="F#" Value="val mutable Context : IdentityServer4.EntityFramework.Interfaces.IConfigurationDbContext" Usage="IdentityServer4.EntityFramework.Stores.ResourceStore.Context" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>IdentityServer4.EntityFramework.Storage</AssemblyName>
        <AssemblyVersion>3.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>IdentityServer4.EntityFramework.Interfaces.IConfigurationDbContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindApiResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;IdentityServer4.Models.ApiResource&gt; FindApiResourceAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class IdentityServer4.Models.ApiResource&gt; FindApiResourceAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:IdentityServer4.EntityFramework.Stores.ResourceStore.FindApiResourceAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindApiResourceAsync (name As String) As Task(Of ApiResource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;IdentityServer4::Models::ApiResource ^&gt; ^ FindApiResourceAsync(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member FindApiResourceAsync : string -&gt; System.Threading.Tasks.Task&lt;IdentityServer4.Models.ApiResource&gt;&#xA;override this.FindApiResourceAsync : string -&gt; System.Threading.Tasks.Task&lt;IdentityServer4.Models.ApiResource&gt;" Usage="resourceStore.FindApiResourceAsync name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:IdentityServer4.Stores.IResourceStore.FindApiResourceAsync(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>IdentityServer4.EntityFramework.Storage</AssemblyName>
        <AssemblyVersion>3.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;IdentityServer4.Models.ApiResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindApiResourcesByScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;IdentityServer4.Models.ApiResource&gt;&gt; FindApiResourcesByScopeAsync (System.Collections.Generic.IEnumerable&lt;string&gt; scopeNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class IdentityServer4.Models.ApiResource&gt;&gt; FindApiResourcesByScopeAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; scopeNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:IdentityServer4.EntityFramework.Stores.ResourceStore.FindApiResourcesByScopeAsync(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindApiResourcesByScopeAsync (scopeNames As IEnumerable(Of String)) As Task(Of IEnumerable(Of ApiResource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Collections::Generic::IEnumerable&lt;IdentityServer4::Models::ApiResource ^&gt; ^&gt; ^ FindApiResourcesByScopeAsync(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ scopeNames);" />
      <MemberSignature Language="F#" Value="abstract member FindApiResourcesByScopeAsync : seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;seq&lt;IdentityServer4.Models.ApiResource&gt;&gt;&#xA;override this.FindApiResourcesByScopeAsync : seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;seq&lt;IdentityServer4.Models.ApiResource&gt;&gt;" Usage="resourceStore.FindApiResourcesByScopeAsync scopeNames" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:IdentityServer4.Stores.IResourceStore.FindApiResourcesByScopeAsync(System.Collections.Generic.IEnumerable{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>IdentityServer4.EntityFramework.Storage</AssemblyName>
        <AssemblyVersion>3.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;IdentityServer4.Models.ApiResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="scopeNames">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindIdentityResourcesByScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;IdentityServer4.Models.IdentityResource&gt;&gt; FindIdentityResourcesByScopeAsync (System.Collections.Generic.IEnumerable&lt;string&gt; scopeNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class IdentityServer4.Models.IdentityResource&gt;&gt; FindIdentityResourcesByScopeAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; scopeNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:IdentityServer4.EntityFramework.Stores.ResourceStore.FindIdentityResourcesByScopeAsync(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindIdentityResourcesByScopeAsync (scopeNames As IEnumerable(Of String)) As Task(Of IEnumerable(Of IdentityResource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Collections::Generic::IEnumerable&lt;IdentityServer4::Models::IdentityResource ^&gt; ^&gt; ^ FindIdentityResourcesByScopeAsync(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ scopeNames);" />
      <MemberSignature Language="F#" Value="abstract member FindIdentityResourcesByScopeAsync : seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;seq&lt;IdentityServer4.Models.IdentityResource&gt;&gt;&#xA;override this.FindIdentityResourcesByScopeAsync : seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;seq&lt;IdentityServer4.Models.IdentityResource&gt;&gt;" Usage="resourceStore.FindIdentityResourcesByScopeAsync scopeNames" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:IdentityServer4.Stores.IResourceStore.FindIdentityResourcesByScopeAsync(System.Collections.Generic.IEnumerable{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>IdentityServer4.EntityFramework.Storage</AssemblyName>
        <AssemblyVersion>3.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;IdentityServer4.Models.IdentityResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="scopeNames">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllResourcesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;IdentityServer4.Models.Resources&gt; GetAllResourcesAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class IdentityServer4.Models.Resources&gt; GetAllResourcesAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:IdentityServer4.EntityFramework.Stores.ResourceStore.GetAllResourcesAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllResourcesAsync () As Task(Of Resources)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;IdentityServer4::Models::Resources ^&gt; ^ GetAllResourcesAsync();" />
      <MemberSignature Language="F#" Value="abstract member GetAllResourcesAsync : unit -&gt; System.Threading.Tasks.Task&lt;IdentityServer4.Models.Resources&gt;&#xA;override this.GetAllResourcesAsync : unit -&gt; System.Threading.Tasks.Task&lt;IdentityServer4.Models.Resources&gt;" Usage="resourceStore.GetAllResourcesAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:IdentityServer4.Stores.IResourceStore.GetAllResourcesAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>IdentityServer4.EntityFramework.Storage</AssemblyName>
        <AssemblyVersion>3.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;IdentityServer4.Models.Resources&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Logger">
      <MemberSignature Language="C#" Value="protected readonly Microsoft.Extensions.Logging.ILogger&lt;IdentityServer4.EntityFramework.Stores.ResourceStore&gt; Logger;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class Microsoft.Extensions.Logging.ILogger`1&lt;class IdentityServer4.EntityFramework.Stores.ResourceStore&gt; Logger" />
      <MemberSignature Language="DocId" Value="F:IdentityServer4.EntityFramework.Stores.ResourceStore.Logger" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Logger As ILogger(Of ResourceStore) " />
      <MemberSignature Language="C++ CLI" Value="protected: initonly Microsoft::Extensions::Logging::ILogger&lt;IdentityServer4::EntityFramework::Stores::ResourceStore ^&gt; ^ Logger;" />
      <MemberSignature Language="F#" Value="val mutable Logger : Microsoft.Extensions.Logging.ILogger&lt;IdentityServer4.EntityFramework.Stores.ResourceStore&gt;" Usage="IdentityServer4.EntityFramework.Stores.ResourceStore.Logger" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>IdentityServer4.EntityFramework.Storage</AssemblyName>
        <AssemblyVersion>3.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILogger&lt;IdentityServer4.EntityFramework.Stores.ResourceStore&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

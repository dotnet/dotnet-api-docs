<Type Name="ILatencyContextTokenIssuer" FullName="Microsoft.Extensions.Diagnostics.Latency.ILatencyContextTokenIssuer">
  <TypeSignature Language="C#" Value="public interface ILatencyContextTokenIssuer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ILatencyContextTokenIssuer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Diagnostics.Latency.ILatencyContextTokenIssuer" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILatencyContextTokenIssuer" />
  <TypeSignature Language="F#" Value="type ILatencyContextTokenIssuer = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILatencyContextTokenIssuer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.4.0.0</AssemblyVersion>
    <AssemblyVersion>8.5.0.0</AssemblyVersion>
    <AssemblyVersion>8.6.0.0</AssemblyVersion>
    <AssemblyVersion>8.7.0.0</AssemblyVersion>
    <AssemblyVersion>8.8.0.0</AssemblyVersion>
    <AssemblyVersion>8.9.1.0</AssemblyVersion>
    <AssemblyVersion>8.10.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Issues tokens for various object types.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCheckpointToken">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Diagnostics.Latency.CheckpointToken GetCheckpointToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Extensions.Diagnostics.Latency.CheckpointToken GetCheckpointToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Latency.ILatencyContextTokenIssuer.GetCheckpointToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCheckpointToken (name As String) As CheckpointToken" />
      <MemberSignature Language="F#" Value="abstract member GetCheckpointToken : string -&gt; Microsoft.Extensions.Diagnostics.Latency.CheckpointToken" Usage="iLatencyContextTokenIssuer.GetCheckpointToken name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Diagnostics::Latency::CheckpointToken GetCheckpointToken(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Diagnostics.Latency.CheckpointToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Name of the checkpoint.</param>
        <summary>
            Gets a token for a named checkpoint.
            </summary>
        <returns>Token to use with <see cref="M:Microsoft.Extensions.Diagnostics.Latency.ILatencyContext.AddCheckpoint(Microsoft.Extensions.Diagnostics.Latency.CheckpointToken)" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMeasureToken">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Diagnostics.Latency.MeasureToken GetMeasureToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Extensions.Diagnostics.Latency.MeasureToken GetMeasureToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Latency.ILatencyContextTokenIssuer.GetMeasureToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMeasureToken (name As String) As MeasureToken" />
      <MemberSignature Language="F#" Value="abstract member GetMeasureToken : string -&gt; Microsoft.Extensions.Diagnostics.Latency.MeasureToken" Usage="iLatencyContextTokenIssuer.GetMeasureToken name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Diagnostics::Latency::MeasureToken GetMeasureToken(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Diagnostics.Latency.MeasureToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Name of the measure.</param>
        <summary>
            Gets a token for a named measure.
            </summary>
        <returns>Token to use with <see cref="M:Microsoft.Extensions.Diagnostics.Latency.ILatencyContext.AddMeasure(Microsoft.Extensions.Diagnostics.Latency.MeasureToken,System.Int64)" />
            and <see cref="M:Microsoft.Extensions.Diagnostics.Latency.ILatencyContext.RecordMeasure(Microsoft.Extensions.Diagnostics.Latency.MeasureToken,System.Int64)" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTagToken">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Diagnostics.Latency.TagToken GetTagToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Extensions.Diagnostics.Latency.TagToken GetTagToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Latency.ILatencyContextTokenIssuer.GetTagToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTagToken (name As String) As TagToken" />
      <MemberSignature Language="F#" Value="abstract member GetTagToken : string -&gt; Microsoft.Extensions.Diagnostics.Latency.TagToken" Usage="iLatencyContextTokenIssuer.GetTagToken name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Diagnostics::Latency::TagToken GetTagToken(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Diagnostics.Latency.TagToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Name of the tag.</param>
        <summary>
            Gets a token for a named tag.
            </summary>
        <returns>Token to use with <see cref="M:Microsoft.Extensions.Diagnostics.Latency.ILatencyContext.SetTag(Microsoft.Extensions.Diagnostics.Latency.TagToken,System.String)" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

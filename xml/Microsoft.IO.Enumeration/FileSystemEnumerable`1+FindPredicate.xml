<Type Name="FileSystemEnumerable&lt;TResult&gt;+FindPredicate" FullName="Microsoft.IO.Enumeration.FileSystemEnumerable&lt;TResult&gt;+FindPredicate">
  <TypeSignature Language="C#" Value="public delegate bool FileSystemEnumerable&lt;TResult&gt;.FindPredicate(ref FileSystemEntry entry);" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed FileSystemEnumerable`1/FindPredicate&lt;TResult&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.IO.Enumeration.FileSystemEnumerable`1.FindPredicate" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function FileSystemEnumerable(Of TResult).FindPredicate(ByRef entry As FileSystemEntry) As Boolean " />
  <TypeSignature Language="F#" Value="type FileSystemEnumerable&lt;'Result&gt;.FindPredicate = delegate of FileSystemEntry -&gt; bool" />
  <TypeSignature Language="C++ CLI" Value="public: delegate bool FileSystemEnumerable&lt;TResult&gt;::FindPredicate(FileSystemEntry % entry);" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.IO.Redist</AssemblyName>
    <AssemblyVersion>6.0.0.1</AssemblyVersion>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="entry" Type="Microsoft.IO.Enumeration.FileSystemEntry" RefType="ref" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="entry">To be added.</param>
    <summary>To be added.</summary>
    <returns>To be added.</returns>
    <remarks>To be added.</remarks>
  </Docs>
</Type>

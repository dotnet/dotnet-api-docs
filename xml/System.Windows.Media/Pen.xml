<Type Name="Pen" FullName="System.Windows.Media.Pen">
  <TypeSignature Language="C#" Value="public sealed class Pen : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Pen extends System.Windows.Media.Animation.Animatable" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Pen" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Pen&#xA;Inherits Animatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Pen sealed : System::Windows::Media::Animation::Animatable" />
  <TypeSignature Language="F#" Value="type Pen = class&#xA;    inherit Animatable" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Pen extends System.Windows.Media.Animation.Animatable" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type Pen = class&#xA;    inherit Animatable&#xA;    interface DUCE.IResource" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Describes how a shape is outlined.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Pen" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Pen.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pen();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Pen" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pen (System.Windows.Media.Brush brush, double thickness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Brush brush, float64 thickness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Pen.#ctor(System.Windows.Media.Brush,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (brush As Brush, thickness As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pen(System::Windows::Media::Brush ^ brush, double thickness);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Pen : System.Windows.Media.Brush * double -&gt; System.Windows.Media.Pen" Usage="new System.Windows.Media.Pen (brush, thickness)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="brush" Type="System.Windows.Media.Brush" />
        <Parameter Name="thickness" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="brush">The Brush for this Pen.</param>
        <param name="thickness">The thickness of the Pen.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Pen" /> class with the specified <see cref="T:System.Windows.Media.Brush" /> and thickness.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Thickness is relative to the geometry of the shape associated with this pen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Brush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Brush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Brush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Pen.Brush" />
      <MemberSignature Language="VB.NET" Value="Public Property Brush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ Brush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Brush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Media.Pen.Brush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the fill the outline produced by this <see cref="T:System.Windows.Media.Pen" />.</summary>
        <value>The fill of the outline produced by this <see cref="T:System.Windows.Media.Pen" />. The default value is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Brush"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Media.Pen.BrushProperty>|  
|Metadata properties set to `true`|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Pen.BrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Pen.BrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Media.Pen.Brush" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Pen Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Pen Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Pen.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Pen" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Pen ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Pen" Usage="pen.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Pen</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Pen" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
        <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  
  
 For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Pen CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Pen CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Pen.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As Pen" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Pen ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.Pen" Usage="pen.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Pen</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Pen" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
        <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  
  
 For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Pen.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="pen.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DashCap">
      <MemberSignature Language="C#" Value="public System.Windows.Media.PenLineCap DashCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.PenLineCap DashCap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Pen.DashCap" />
      <MemberSignature Language="VB.NET" Value="Public Property DashCap As PenLineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::PenLineCap DashCap { System::Windows::Media::PenLineCap get(); void set(System::Windows::Media::PenLineCap value); };" />
      <MemberSignature Language="F#" Value="member this.DashCap : System.Windows.Media.PenLineCap with get, set" Usage="System.Windows.Media.Pen.DashCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PenLineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies how the ends of each dash are drawn.</summary>
        <value>Specifies how the ends of each dash are drawn.  
  
 This setting applies to both ends of each dash. The default value is <see cref="F:System.Windows.Media.PenLineCap.Square" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_DashCap"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Media.Pen.DashCapProperty>|  
|Metadata properties set to `true`|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DashCapProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DashCapProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DashCapProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Pen.DashCapProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DashCapProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DashCapProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DashCapProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Pen.DashCapProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Media.Pen.DashCap" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DashStyle DashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.DashStyle DashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Pen.DashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DashStyle As DashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::DashStyle ^ DashStyle { System::Windows::Media::DashStyle ^ get(); void set(System::Windows::Media::DashStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DashStyle : System.Windows.Media.DashStyle with get, set" Usage="System.Windows.Media.Pen.DashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that describes the pattern of dashes generated by this <see cref="T:System.Windows.Media.Pen" />.</summary>
        <value>A value that describes the pattern of dashes generated by this <see cref="T:System.Windows.Media.Pen" />. The default is <see cref="P:System.Windows.Media.DashStyles.Solid" />, which indicates that there should be no dashes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Media.DashStyles> class provides a set of predefined dash patterns.  
  
<a name="dependencyPropertyInfo_DashStyle"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Media.Pen.DashStyleProperty>|  
|Metadata properties set to `true`|None|  
  
   
  
## Examples  
 The following example shows how to use the <xref:System.Windows.Media.DashStyle> property of a <xref:System.Windows.Media.Pen> to create a dashed line under text.  
  
 [!code-xaml[DrawingMiscSnippets_snip#DashStyle](~/samples/snippets/xaml/VS_Snippets_Wpf/DrawingMiscSnippets_snip/XAML/DashStyleExample.xaml#dashstyle)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.DashStyles" />
      </Docs>
    </Member>
    <Member MemberName="DashStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DashStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DashStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Pen.DashStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DashStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DashStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DashStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Pen.DashStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Media.Pen.DashStyle" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLineCap">
      <MemberSignature Language="C#" Value="public System.Windows.Media.PenLineCap EndLineCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.PenLineCap EndLineCap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Pen.EndLineCap" />
      <MemberSignature Language="VB.NET" Value="Public Property EndLineCap As PenLineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::PenLineCap EndLineCap { System::Windows::Media::PenLineCap get(); void set(System::Windows::Media::PenLineCap value); };" />
      <MemberSignature Language="F#" Value="member this.EndLineCap : System.Windows.Media.PenLineCap with get, set" Usage="System.Windows.Media.Pen.EndLineCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PenLineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type of shape to use at the end of a stroke.</summary>
        <value>The type of shape that ends the stroke. The default value is <see cref="F:System.Windows.Media.PenLineCap.Flat" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_EndLineCap"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Media.Pen.EndLineCapProperty>|  
|Metadata properties set to `true`|None|  
  
   
  
## Examples  
 The following example shows how to use the <xref:System.Windows.Media.Pen.StartLineCap%2A> and <xref:System.Windows.Media.Pen.EndLineCap%2A> properties to create a rounded end on one side of a stroke and a triangular end on the other side of the stroke.  
  
 [!code-xaml[DrawingMiscSnippets_snip#PenStartEndLineCapWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/DrawingMiscSnippets_snip/XAML/PenStartEndLineCapExample.xaml#penstartendlinecapwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Pen.StartLineCap" />
      </Docs>
    </Member>
    <Member MemberName="EndLineCapProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EndLineCapProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EndLineCapProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Pen.EndLineCapProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EndLineCapProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EndLineCapProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EndLineCapProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Pen.EndLineCapProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Media.Pen.EndLineCap" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineJoin">
      <MemberSignature Language="C#" Value="public System.Windows.Media.PenLineJoin LineJoin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.PenLineJoin LineJoin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Pen.LineJoin" />
      <MemberSignature Language="VB.NET" Value="Public Property LineJoin As PenLineJoin" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::PenLineJoin LineJoin { System::Windows::Media::PenLineJoin get(); void set(System::Windows::Media::PenLineJoin value); };" />
      <MemberSignature Language="F#" Value="member this.LineJoin : System.Windows.Media.PenLineJoin with get, set" Usage="System.Windows.Media.Pen.LineJoin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PenLineJoin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type of joint used at the vertices of a shape's outline.</summary>
        <value>The type of joint used at the vertices of a shape's outline. The default value is <see cref="F:System.Windows.Media.PenLineJoin.Miter" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_LineJoin"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Media.Pen.LineJoinProperty>|  
|Metadata properties set to `true`|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineJoinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineJoinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineJoinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Pen.LineJoinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineJoinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineJoinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LineJoinProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Pen.LineJoinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Media.Pen.LineJoin" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MiterLimit">
      <MemberSignature Language="C#" Value="public double MiterLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MiterLimit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Pen.MiterLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property MiterLimit As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MiterLimit { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MiterLimit : double with get, set" Usage="System.Windows.Media.Pen.MiterLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the limit on the ratio of the miter length to half this pen's <see cref="P:System.Windows.Media.Pen.Thickness" />.</summary>
        <value>The limit on the ratio of the miter length to half the pen's <see cref="P:System.Windows.Media.Pen.Thickness" />. This value is always a positive number greater than or equal to 1.  The default value is 10.0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A miter is a joint made by beveling each of two surfaces to be joined to form a corner. When two line segments meet at a sharp angle, the miter may extend beyond the thickness of the line that strokes the path.  
  
<a name="dependencyPropertyInfo_MiterLimit"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Media.Pen.MiterLimitProperty>|  
|Metadata properties set to `true`|None|  
  
   
  
## Examples  
 The following example shows how to use the <xref:System.Windows.Media.Pen.MiterLimit%2A> property to limit the size of a corner created by two line segments.  
  
 [!code-xaml[DrawingMiscSnippets_snip#PenMiterLimitExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/DrawingMiscSnippets_snip/XAML/PenMiterLimitExample.xaml#penmiterlimitexamplewholepage)]  
  
 The following illustration shows what this code example produces.  
  
 ![Shows MiterLimit example. Corner formed is cut.](~/add/media/graphicsmiterlimit.png "Shows MiterLimit example. Corner formed is cut.")  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shapes.Shape.StrokeMiterLimit" />
      </Docs>
    </Member>
    <Member MemberName="MiterLimitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MiterLimitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MiterLimitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Pen.MiterLimitProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MiterLimitProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MiterLimitProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MiterLimitProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Pen.MiterLimitProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Media.Pen.MiterLimit" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartLineCap">
      <MemberSignature Language="C#" Value="public System.Windows.Media.PenLineCap StartLineCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.PenLineCap StartLineCap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Pen.StartLineCap" />
      <MemberSignature Language="VB.NET" Value="Public Property StartLineCap As PenLineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::PenLineCap StartLineCap { System::Windows::Media::PenLineCap get(); void set(System::Windows::Media::PenLineCap value); };" />
      <MemberSignature Language="F#" Value="member this.StartLineCap : System.Windows.Media.PenLineCap with get, set" Usage="System.Windows.Media.Pen.StartLineCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PenLineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type of shape to use at the beginning of a stroke.</summary>
        <value>The type of shape that starts the stroke. The default value is <see cref="F:System.Windows.Media.PenLineCap.Flat" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StartLineCap"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Media.Pen.StartLineCapProperty>|  
|Metadata properties set to `true`|None|  
  
   
  
## Examples  
 The following example shows how to use the <xref:System.Windows.Media.Pen.StartLineCap%2A> and <xref:System.Windows.Media.Pen.EndLineCap%2A> properties to create a rounded end on one side of a stroke and a triangular end on the other side of the stroke.  
  
 [!code-xaml[DrawingMiscSnippets_snip#PenStartEndLineCapWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/DrawingMiscSnippets_snip/XAML/PenStartEndLineCapExample.xaml#penstartendlinecapwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Pen.EndLineCap" />
      </Docs>
    </Member>
    <Member MemberName="StartLineCapProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StartLineCapProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StartLineCapProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Pen.StartLineCapProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StartLineCapProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StartLineCapProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StartLineCapProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Pen.StartLineCapProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Media.Pen.StartLineCap" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Thickness">
      <MemberSignature Language="C#" Value="public double Thickness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Thickness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Pen.Thickness" />
      <MemberSignature Language="VB.NET" Value="Public Property Thickness As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Thickness { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Thickness : double with get, set" Usage="System.Windows.Media.Pen.Thickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the thickness of the stroke produced by this <see cref="T:System.Windows.Media.Pen" />.</summary>
        <value>The thickness of the stroke produced by this <see cref="T:System.Windows.Media.Pen" />. Default is <c>1</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Thickness is relative to the geometry of the shape associated with this pen. Negative values are treated as though they were positive.  
  
<a name="dependencyPropertyInfo_Thickness"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Media.Pen.ThicknessProperty>|  
|Metadata properties set to `true`|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThicknessProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ThicknessProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ThicknessProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Pen.ThicknessProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThicknessProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ThicknessProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThicknessProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Pen.ThicknessProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Media.Pen.Thickness" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="Redactor" FullName="Microsoft.Extensions.Compliance.Redaction.Redactor">
  <TypeSignature Language="C#" Value="public abstract class Redactor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Redactor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Compliance.Redaction.Redactor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Redactor" />
  <TypeSignature Language="F#" Value="type Redactor = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class Redactor abstract" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Compliance.Abstractions</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Enables the redaction of potentially sensitive data.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Redactor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Compliance.Redaction.Redactor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Redactor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Compliance.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRedactedLength">
      <MemberSignature Language="C#" Value="public abstract int GetRedactedLength (ReadOnlySpan&lt;char&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetRedactedLength(valuetype System.ReadOnlySpan`1&lt;char&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Compliance.Redaction.Redactor.GetRedactedLength(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRedactedLength (input As ReadOnlySpan(Of Char)) As Integer" />
      <MemberSignature Language="F#" Value="abstract member GetRedactedLength : ReadOnlySpan&lt;char&gt; -&gt; int" Usage="redactor.GetRedactedLength input" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetRedactedLength(ReadOnlySpan&lt;char&gt; input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Compliance.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="input">Value to be redacted.</param>
        <summary>
            Gets the number of characters produced by redacting the input.
            </summary>
        <returns>Minimum buffer size.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRedactedLength">
      <MemberSignature Language="C#" Value="public int GetRedactedLength (string? input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRedactedLength(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Compliance.Redaction.Redactor.GetRedactedLength(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRedactedLength (input As String) As Integer" />
      <MemberSignature Language="F#" Value="member this.GetRedactedLength : string -&gt; int" Usage="redactor.GetRedactedLength input" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetRedactedLength(System::String ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Compliance.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Value to be redacted.</param>
        <summary>
            Gets the number of characters produced by redacting the input.
            </summary>
        <returns>Minimum buffer size.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Redact">
      <MemberSignature Language="C#" Value="public string Redact (ReadOnlySpan&lt;char&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Redact(valuetype System.ReadOnlySpan`1&lt;char&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Compliance.Redaction.Redactor.Redact(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function Redact (source As ReadOnlySpan(Of Char)) As String" />
      <MemberSignature Language="F#" Value="member this.Redact : ReadOnlySpan&lt;char&gt; -&gt; string" Usage="redactor.Redact source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Redact(ReadOnlySpan&lt;char&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Compliance.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="source">Value to redact.</param>
        <summary>
            Redacts potentially sensitive data.
            </summary>
        <returns>Redacted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Redact">
      <MemberSignature Language="C#" Value="public virtual string Redact (string? source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Redact(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Compliance.Redaction.Redactor.Redact(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Redact (source As String) As String" />
      <MemberSignature Language="F#" Value="abstract member Redact : string -&gt; string&#xA;override this.Redact : string -&gt; string" Usage="redactor.Redact source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Redact(System::String ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Compliance.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">Value to redact.</param>
        <summary>
            Redacts potentially sensitive data.
            </summary>
        <returns>Redacted value.</returns>
        <remarks>
            Returns an empty string when <paramref name="source" /> is <see langword="null" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="source" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Redact">
      <MemberSignature Language="C#" Value="public abstract int Redact (ReadOnlySpan&lt;char&gt; source, Span&lt;char&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Redact(valuetype System.ReadOnlySpan`1&lt;char&gt; source, valuetype System.Span`1&lt;char&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Compliance.Redaction.Redactor.Redact(System.ReadOnlySpan{System.Char},System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Redact (source As ReadOnlySpan(Of Char), destination As Span(Of Char)) As Integer" />
      <MemberSignature Language="F#" Value="abstract member Redact : ReadOnlySpan&lt;char&gt; * Span&lt;char&gt; -&gt; int" Usage="redactor.Redact (source, destination)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Redact(ReadOnlySpan&lt;char&gt; source, Span&lt;char&gt; destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Compliance.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="source">Value to redact.</param>
        <param name="destination">Buffer to store redacted value.</param>
        <summary>
            Redacts potentially sensitive data.
            </summary>
        <returns>Number of characters produced when redacting the given source input.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">When <paramref name="destination" /> is too small.</exception>
      </Docs>
    </Member>
    <Member MemberName="Redact">
      <MemberSignature Language="C#" Value="public int Redact (string? source, Span&lt;char&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Redact(string source, valuetype System.Span`1&lt;char&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Compliance.Redaction.Redactor.Redact(System.String,System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function Redact (source As String, destination As Span(Of Char)) As Integer" />
      <MemberSignature Language="F#" Value="member this.Redact : string * Span&lt;char&gt; -&gt; int" Usage="redactor.Redact (source, destination)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Redact(System::String ^ source, Span&lt;char&gt; destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Compliance.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="source">Value to redact.</param>
        <param name="destination">Buffer to redact into.</param>
        <summary>
            Redacts potentially sensitive data.
            </summary>
        <returns>Number of characters written to the buffer.</returns>
        <remarks>
            Returns 0 when <paramref name="source" /> is <see langword="null" />.
            </remarks>
        <exception cref="T:System.ArgumentException">When <paramref name="destination" /> is too small.</exception>
      </Docs>
    </Member>
    <Member MemberName="Redact&lt;T&gt;">
      <MemberSignature Language="C#" Value="public string Redact&lt;T&gt; (T value, string? format = default, IFormatProvider? provider = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Redact&lt;T&gt;(!!T value, string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Compliance.Redaction.Redactor.Redact``1(``0,System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function Redact(Of T) (value As T, Optional format As String = Nothing, Optional provider As IFormatProvider = Nothing) As String" />
      <MemberSignature Language="F#" Value="member this.Redact : 'T * string * IFormatProvider -&gt; string" Usage="redactor.Redact (value, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Compliance.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.SkipLocalsInit]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.SkipLocalsInit&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of value to redact.</typeparam>
        <param name="value">Value to redact.</param>
        <param name="format">
            The optional format that selects the specific formatting operation performed. Refer to the
            documentation of the type being formatted to understand the values you can supply here.
            </param>
        <param name="provider">Format provider to retrieve format for span formattable.</param>
        <summary>
            Redacts potentially sensitive data.
            </summary>
        <returns>Redacted value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="value" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Redact&lt;T&gt;">
      <MemberSignature Language="C#" Value="public int Redact&lt;T&gt; (T value, Span&lt;char&gt; destination, string? format = default, IFormatProvider? provider = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Redact&lt;T&gt;(!!T value, valuetype System.Span`1&lt;char&gt; destination, string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Compliance.Redaction.Redactor.Redact``1(``0,System.Span{System.Char},System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function Redact(Of T) (value As T, destination As Span(Of Char), Optional format As String = Nothing, Optional provider As IFormatProvider = Nothing) As Integer" />
      <MemberSignature Language="F#" Value="member this.Redact : 'T * Span&lt;char&gt; * string * IFormatProvider -&gt; int" Usage="redactor.Redact (value, destination, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Compliance.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.SkipLocalsInit]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.SkipLocalsInit&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T" />
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of value to redact.</typeparam>
        <param name="value">Value to redact.</param>
        <param name="destination">Buffer to redact into.</param>
        <param name="format">
            The optional format string that selects the specific formatting operation performed. Refer to the
            documentation of the type being formatted to understand the values you can supply here.
            </param>
        <param name="provider">Format provider to retrieve format for span formattable.</param>
        <summary>
            Redacts potentially sensitive data.
            </summary>
        <returns>Number of characters written to the buffer.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="value" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

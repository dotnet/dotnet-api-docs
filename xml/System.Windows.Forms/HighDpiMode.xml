<Type Name="HighDpiMode" FullName="System.Windows.Forms.HighDpiMode">
  <TypeSignature Language="C#" Value="public enum HighDpiMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HighDpiMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.HighDpiMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum HighDpiMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class HighDpiMode" />
  <TypeSignature Language="F#" Value="type HighDpiMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Primitives</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Windows.Forms" FromVersion="5.0.0.0" To="System.Windows.Forms.Primitives" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifies the different high DPI modes that can be applied to an application.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

Specifying the high DPI mode is dependent on the OS version of the machine you're running your application on. Setting the high DPI mode will work on machines running Windows 10 Creators Update (version 1703) or later versions.

Changing the DPI mode after the application has started running doesn't impact scaling (that is, the change won't take effect).

If you're using the `PerMonitor` value and there is more than one monitor attached with different DPI settings, the DPI may change when the window is moved from one monitor to the other.
In this case, the application rescales according to the new monitor's DPI settings. 
Alternatively, the DPI of a window can be changed when the OS scaling setting is changed for the monitor the window is on.

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DpiUnaware">
      <MemberSignature Language="C#" Value="DpiUnaware" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.HighDpiMode DpiUnaware = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.HighDpiMode.DpiUnaware" />
      <MemberSignature Language="VB.NET" Value="DpiUnaware" />
      <MemberSignature Language="C++ CLI" Value="DpiUnaware" />
      <MemberSignature Language="F#" Value="DpiUnaware = 0" Usage="System.Windows.Forms.HighDpiMode.DpiUnaware" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Primitives</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HighDpiMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>The application window does not scale for DPI changes and always assumes a scale factor of 100%.</summary>
      </Docs>
    </Member>
    <Member MemberName="DpiUnawareGdiScaled">
      <MemberSignature Language="C#" Value="DpiUnawareGdiScaled" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.HighDpiMode DpiUnawareGdiScaled = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.HighDpiMode.DpiUnawareGdiScaled" />
      <MemberSignature Language="VB.NET" Value="DpiUnawareGdiScaled" />
      <MemberSignature Language="C++ CLI" Value="DpiUnawareGdiScaled" />
      <MemberSignature Language="F#" Value="DpiUnawareGdiScaled = 4" Usage="System.Windows.Forms.HighDpiMode.DpiUnawareGdiScaled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Primitives</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HighDpiMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Similar to <see cref="F:System.Windows.Forms.HighDpiMode.DpiUnaware" />, but improves the quality of GDI/GDI+ based content.</summary>
      </Docs>
    </Member>
    <Member MemberName="PerMonitor">
      <MemberSignature Language="C#" Value="PerMonitor" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.HighDpiMode PerMonitor = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.HighDpiMode.PerMonitor" />
      <MemberSignature Language="VB.NET" Value="PerMonitor" />
      <MemberSignature Language="C++ CLI" Value="PerMonitor" />
      <MemberSignature Language="F#" Value="PerMonitor = 2" Usage="System.Windows.Forms.HighDpiMode.PerMonitor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Primitives</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HighDpiMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>The window checks for DPI when it's created and adjusts scale factor when the DPI changes.</summary>
      </Docs>
    </Member>
    <Member MemberName="PerMonitorV2">
      <MemberSignature Language="C#" Value="PerMonitorV2" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.HighDpiMode PerMonitorV2 = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.HighDpiMode.PerMonitorV2" />
      <MemberSignature Language="VB.NET" Value="PerMonitorV2" />
      <MemberSignature Language="C++ CLI" Value="PerMonitorV2" />
      <MemberSignature Language="F#" Value="PerMonitorV2 = 3" Usage="System.Windows.Forms.HighDpiMode.PerMonitorV2" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Primitives</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HighDpiMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Similar to <see cref="F:System.Windows.Forms.HighDpiMode.PerMonitor" />, but enables child window DPI change notification, improved scaling of comctl32 controls, and dialog scaling.</summary>
      </Docs>
    </Member>
    <Member MemberName="SystemAware">
      <MemberSignature Language="C#" Value="SystemAware" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.HighDpiMode SystemAware = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.HighDpiMode.SystemAware" />
      <MemberSignature Language="VB.NET" Value="SystemAware" />
      <MemberSignature Language="C++ CLI" Value="SystemAware" />
      <MemberSignature Language="F#" Value="SystemAware = 1" Usage="System.Windows.Forms.HighDpiMode.SystemAware" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Primitives</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HighDpiMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The window queries for the DPI of the primary monitor once and uses this for the application on all monitors.</summary>
      </Docs>
    </Member>
  </Members>
</Type>

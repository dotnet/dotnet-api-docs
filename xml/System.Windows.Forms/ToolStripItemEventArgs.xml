<Type Name="ToolStripItemEventArgs" FullName="System.Windows.Forms.ToolStripItemEventArgs">
  <TypeSignature Language="C#" Value="public class ToolStripItemEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToolStripItemEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolStripItemEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolStripItemEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolStripItemEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ToolStripItemEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides data for <see cref="T:System.Windows.Forms.ToolStripItem" /> events.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the use of this type. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStrip.ItemAdded> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  
  
 To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStrip> named `ToolStrip1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStrip.ItemAdded> event.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#91](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#91)]
 [!code-vb[System.Windows.Forms.EventExamples#91](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#91)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripItemEventArgs (System.Windows.Forms.ToolStripItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ToolStripItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItemEventArgs.#ctor(System.Windows.Forms.ToolStripItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item As ToolStripItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripItemEventArgs(System::Windows::Forms::ToolStripItem ^ item);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolStripItemEventArgs : System.Windows.Forms.ToolStripItem -&gt; System.Windows.Forms.ToolStripItemEventArgs" Usage="new System.Windows.Forms.ToolStripItemEventArgs item" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ToolStripItem" />
      </Parameters>
      <Docs>
        <param name="item">The <see cref="T:System.Windows.Forms.ToolStripItem" /> for which to specify events.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ToolStripItemEventArgs" /> class, specifying a <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem Item" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItemEventArgs.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItem ^ Item { System::Windows::Forms::ToolStripItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : System.Windows.Forms.ToolStripItem" Usage="System.Windows.Forms.ToolStripItemEventArgs.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Windows.Forms.ToolStripItem" /> for which to handle events.</summary>
        <value>A <see cref="T:System.Windows.Forms.ToolStripItem" /> for which to handle events.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStrip.ItemAdded?displayProperty=nameWithType> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  
  
 To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStrip> named `ToolStrip1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStrip.ItemAdded?displayProperty=nameWithType> event.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#91](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#91)]
 [!code-vb[System.Windows.Forms.EventExamples#91](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#91)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="TaskDialogProgressBar" FullName="System.Windows.Forms.TaskDialogProgressBar">
  <TypeSignature Language="C#" Value="public sealed class TaskDialogProgressBar : System.Windows.Forms.TaskDialogControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TaskDialogProgressBar extends System.Windows.Forms.TaskDialogControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TaskDialogProgressBar" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TaskDialogProgressBar&#xA;Inherits TaskDialogControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaskDialogProgressBar sealed : System::Windows::Forms::TaskDialogControl" />
  <TypeSignature Language="F#" Value="type TaskDialogProgressBar = class&#xA;    inherit TaskDialogControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.TaskDialogControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a progress bar control of a task dialog.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskDialogProgressBar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TaskDialogProgressBar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskDialogProgressBar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.TaskDialogProgressBar" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskDialogProgressBar (System.Windows.Forms.TaskDialogProgressBarState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.TaskDialogProgressBarState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TaskDialogProgressBar.#ctor(System.Windows.Forms.TaskDialogProgressBarState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As TaskDialogProgressBarState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskDialogProgressBar(System::Windows::Forms::TaskDialogProgressBarState state);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TaskDialogProgressBar : System.Windows.Forms.TaskDialogProgressBarState -&gt; System.Windows.Forms.TaskDialogProgressBar" Usage="new System.Windows.Forms.TaskDialogProgressBar state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Forms.TaskDialogProgressBarState" />
      </Parameters>
      <Docs>
        <param name="state">The state of the progress bar.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.TaskDialogProgressBar" /> class using the given <paramref name="state" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarqueeSpeed">
      <MemberSignature Language="C#" Value="public int MarqueeSpeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarqueeSpeed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogProgressBar.MarqueeSpeed" />
      <MemberSignature Language="VB.NET" Value="Public Property MarqueeSpeed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarqueeSpeed { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MarqueeSpeed : int with get, set" Usage="System.Windows.Forms.TaskDialogProgressBar.MarqueeSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the speed of the marquee display of a progress bar.</summary>
        <value>The speed of the marquee display which is the time, in milliseconds, between marquee animation updates. If this value is <c>0</c>, the marquee animation is updated every 30 milliseconds. The default value is <c>0</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 This value is only used if the progress bar is a marquee progress bar (as defined by the <xref:System.Windows.Forms.TaskDialogProgressBar.State> property).

 This property can be set while the dialog is shown.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The property is set on a progress bar instance that is currently bound to a task dialog, but it's not visible as its initial <see cref="P:System.Windows.Forms.TaskDialogProgressBar.State" /> property value was <see cref="F:System.Windows.Forms.TaskDialogProgressBarState.None" />.
              - or - The property is set on a progress bar instance that is currently bound to a task dialog, but the dialog has just started navigating to a different page.</exception>
      </Docs>
    </Member>
    <Member MemberName="Maximum">
      <MemberSignature Language="C#" Value="public int Maximum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Maximum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogProgressBar.Maximum" />
      <MemberSignature Language="VB.NET" Value="Public Property Maximum As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Maximum { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Maximum : int with get, set" Usage="System.Windows.Forms.TaskDialogProgressBar.Maximum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum value of the range of the control.</summary>
        <value>The maximum value of the range. The default is <c>100</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 This value is only used if the progress bar is not a marquee progress bar (as defined by the <xref:System.Windows.Forms.TaskDialogProgressBar.State> property).

 This property can be set while the dialog is shown.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The value is less than 0 or greater than <see cref="F:System.UInt16.MaxValue" />.</exception>
        <exception cref="T:System.InvalidOperationException">The property is set on a progress bar instance that is currently bound to a task dialog, but it's not visible as its initial <see cref="P:System.Windows.Forms.TaskDialogProgressBar.State" /> property value was <see cref="F:System.Windows.Forms.TaskDialogProgressBarState.None" />.
              - or - The property is set on a progress bar instance that is currently bound to a task dialog, but the dialog has just started navigating to a different page.</exception>
      </Docs>
    </Member>
    <Member MemberName="Minimum">
      <MemberSignature Language="C#" Value="public int Minimum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minimum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogProgressBar.Minimum" />
      <MemberSignature Language="VB.NET" Value="Public Property Minimum As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minimum { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Minimum : int with get, set" Usage="System.Windows.Forms.TaskDialogProgressBar.Minimum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the minimum value of the range of the control.</summary>
        <value>The minimum value of the range. The default is <c>0</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 This value is only used if the progress bar is not a marquee progress bar (as defined by the <xref:System.Windows.Forms.TaskDialogProgressBar.State> property).

 This property can be set while the dialog is shown.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The value is less than 0 or greater than <see cref="F:System.UInt16.MaxValue" />.</exception>
        <exception cref="T:System.InvalidOperationException">The property is set on a progress bar instance that is currently bound to a task dialog, but it's not visible as its initial <see cref="P:System.Windows.Forms.TaskDialogProgressBar.State" /> property value was <see cref="F:System.Windows.Forms.TaskDialogProgressBarState.None" />.
              - or - The property is set on a progress bar instance that is currently bound to a task dialog, but the dialog has just started navigating to a different page.</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TaskDialogProgressBarState State { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TaskDialogProgressBarState State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogProgressBar.State" />
      <MemberSignature Language="VB.NET" Value="Public Property State As TaskDialogProgressBarState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TaskDialogProgressBarState State { System::Windows::Forms::TaskDialogProgressBarState get(); void set(System::Windows::Forms::TaskDialogProgressBarState value); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.TaskDialogProgressBarState with get, set" Usage="System.Windows.Forms.TaskDialogProgressBar.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogProgressBarState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the state of the progress bar.</summary>
        <value>The state of the progress bar. The default is <see cref="F:System.Windows.Forms.TaskDialogProgressBarState.Normal" />, except if this instance is the default instance created by a <see cref="T:System.Windows.Forms.TaskDialogPage" />, where the default value is <see cref="F:System.Windows.Forms.TaskDialogProgressBarState.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 This control will only be shown if this property is not <xref:System.Windows.Forms.TaskDialogProgressBarState.None>.

 This property can be set while the dialog is shown. However, while the dialog is shown, it is not possible to change the state from <xref:System.Windows.Forms.TaskDialogProgressBarState.None> to any other state, and vice versa.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The property is set on a progress bar instance that is currently bound to a task dialog, but the value to be set is <see cref="F:System.Windows.Forms.TaskDialogProgressBarState.None" />.
              - or - The property is set on a progress bar instance that is currently bound to a task dialog, but it's not visible as its initial <see cref="P:System.Windows.Forms.TaskDialogProgressBar.State" /> property value was <see cref="F:System.Windows.Forms.TaskDialogProgressBarState.None" />.
              - or - The property is set on a progress bar instance that is currently bound to a task dialog, but the dialog has just started navigating to a different page.</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public int Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogProgressBar.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Value { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Value : int with get, set" Usage="System.Windows.Forms.TaskDialogProgressBar.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the current position of the progress bar.</summary>
        <value>The position within the range of the progress bar. The default is <c>0</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 This value is only used if the progress bar is not a marquee progress bar (as defined by the <xref:System.Windows.Forms.TaskDialogProgressBar.State> property).

 This property can be set while the dialog is shown.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The value is less than 0 or greater than <see cref="F:System.UInt16.MaxValue" />.</exception>
        <exception cref="T:System.InvalidOperationException">The property is set on a progress bar instance that is currently bound to a task dialog, but it's not visible as its initial <see cref="P:System.Windows.Forms.TaskDialogProgressBar.State" /> property value was <see cref="F:System.Windows.Forms.TaskDialogProgressBarState.None" />.
              - or - The property is set on a progress bar instance that is currently bound to a task dialog, but the dialog has just started navigating to a different page.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

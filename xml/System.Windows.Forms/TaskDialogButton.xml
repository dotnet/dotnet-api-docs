<Type Name="TaskDialogButton" FullName="System.Windows.Forms.TaskDialogButton">
  <TypeSignature Language="C#" Value="public class TaskDialogButton : System.Windows.Forms.TaskDialogControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskDialogButton extends System.Windows.Forms.TaskDialogControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TaskDialogButton" />
  <TypeSignature Language="VB.NET" Value="Public Class TaskDialogButton&#xA;Inherits TaskDialogControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaskDialogButton : System::Windows::Forms::TaskDialogControl" />
  <TypeSignature Language="F#" Value="type TaskDialogButton = class&#xA;    inherit TaskDialogControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.TaskDialogControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a button control of a task dialog.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

 A button can either be a standard button (whose text is provided by the OS), or a custom button (or command link) where you can provide your own text.

 <xref:System.Windows.Forms.TaskDialogButton> instances retrieved by static getters like <xref:System.Windows.Forms.TaskDialogButton.OK> are standard buttons. Their <xref:System.Windows.Forms.TaskDialogButton.Text> property cannot be set as the OS will provide the localized text for the buttons when showing them in the dialog.

 Button instances created with one of the constructors are custom buttons, which allow you to provide your own text as button label.

> [!NOTE]
> It's not possible to show both custom buttons and command links (<xref:System.Windows.Forms.TaskDialogCommandLinkButton> instances) at the same time - it's only one or the other. In either case, you can combine them with standard buttons.

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskDialogButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TaskDialogButton.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskDialogButton();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.TaskDialogButton" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskDialogButton (string text, bool enabled = true, bool allowCloseDialog = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, bool enabled, bool allowCloseDialog) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TaskDialogButton.#ctor(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, Optional enabled As Boolean = true, Optional allowCloseDialog As Boolean = true)" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TaskDialogButton : string * bool * bool -&gt; System.Windows.Forms.TaskDialogButton" Usage="new System.Windows.Forms.TaskDialogButton (text, enabled, allowCloseDialog)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="enabled" Type="System.Boolean" />
        <Parameter Name="allowCloseDialog" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">The text of the control.</param>
        <param name="enabled">To be added.</param>
        <param name="allowCloseDialog">A value that indicates whether the task dialog should close when this button is clicked.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.TaskDialogButton" /> class using the given text and, optionally, a description text.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.TaskDialogButton Abort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.TaskDialogButton Abort" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogButton.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Abort As TaskDialogButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::TaskDialogButton ^ Abort { System::Windows::Forms::TaskDialogButton ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Abort : System.Windows.Forms.TaskDialogButton" Usage="System.Windows.Forms.TaskDialogButton.Abort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogButton</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a standard <see cref="T:System.Windows.Forms.TaskDialogButton" /> instance representing the <c>Abort</c> button.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCloseDialog">
      <MemberSignature Language="C#" Value="public bool AllowCloseDialog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCloseDialog" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogButton.AllowCloseDialog" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowCloseDialog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowCloseDialog { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowCloseDialog : bool with get, set" Usage="System.Windows.Forms.TaskDialogButton.AllowCloseDialog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the task dialog should close when this button is clicked. Or, if this button is the <see cref="P:System.Windows.Forms.TaskDialogButton.Help" /> button, indicates whether the <see cref="E:System.Windows.Forms.TaskDialogPage.HelpRequest" /> should be raised.</summary>
        <value>
          <see langword="true" /> if the task dialog should close when this button is clicked; otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.TaskDialogButton Cancel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.TaskDialogButton Cancel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogButton.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Cancel As TaskDialogButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::TaskDialogButton ^ Cancel { System::Windows::Forms::TaskDialogButton ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cancel : System.Windows.Forms.TaskDialogButton" Usage="System.Windows.Forms.TaskDialogButton.Cancel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogButton</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a standard <see cref="T:System.Windows.Forms.TaskDialogButton" /> instance representing the <c>Cancel</c> button.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 Note: Adding a Cancel button will automatically add a close button to the task dialog's title bar and will allow to close the dialog by pressing ESC or Alt+F4 (just as if you enabled <xref:System.Windows.Forms.TaskDialogPage.AllowCancel>).

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TaskDialogButton.Click" />
      <MemberSignature Language="VB.NET" Value="Public Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the button is clicked.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 By default, the dialog will be closed after the event handler returns (except for the <xref:System.Windows.Forms.TaskDialogButton.Help> button, which instead will raise the <xref:System.Windows.Forms.TaskDialogPage.HelpRequest> event afterwards).


 To prevent the dialog from closing when this button is clicked, set the <xref:System.Windows.Forms.TaskDialogButton.AllowCloseDialog> property to `false`.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.TaskDialogButton Close { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.TaskDialogButton Close" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogButton.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Close As TaskDialogButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::TaskDialogButton ^ Close { System::Windows::Forms::TaskDialogButton ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Close : System.Windows.Forms.TaskDialogButton" Usage="System.Windows.Forms.TaskDialogButton.Close" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogButton</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a standard <see cref="T:System.Windows.Forms.TaskDialogButton" /> instance representing the <c>Close</c> button.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Continue">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.TaskDialogButton Continue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.TaskDialogButton Continue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogButton.Continue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Continue As TaskDialogButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::TaskDialogButton ^ Continue { System::Windows::Forms::TaskDialogButton ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Continue : System.Windows.Forms.TaskDialogButton" Usage="System.Windows.Forms.TaskDialogButton.Continue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogButton</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a standard <see cref="T:System.Windows.Forms.TaskDialogButton" /> instance representing the <c>Continue</c> button.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogButton.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.TaskDialogButton.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the button can respond to user interaction.</summary>
        <value>
          <see langword="true" /> if the button can respond to user interaction; otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 This property can be set while the dialog is shown.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The property is set on a button that is currently bound to a task dialog, but the dialog has just started navigating to a different page.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TaskDialogButton.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="taskDialogButton.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TaskDialogButton.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="taskDialogButton.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.TaskDialogButton Help { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.TaskDialogButton Help" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogButton.Help" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Help As TaskDialogButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::TaskDialogButton ^ Help { System::Windows::Forms::TaskDialogButton ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Help : System.Windows.Forms.TaskDialogButton" Usage="System.Windows.Forms.TaskDialogButton.Help" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogButton</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a standard <see cref="T:System.Windows.Forms.TaskDialogButton" /> instance representing the <c>Help</c> button.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 Note: Clicking this button will not close the dialog, but will raise the <xref:System.Windows.Forms.TaskDialogPage.HelpRequest> event.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ignore">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.TaskDialogButton Ignore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.TaskDialogButton Ignore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogButton.Ignore" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Ignore As TaskDialogButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::TaskDialogButton ^ Ignore { System::Windows::Forms::TaskDialogButton ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Ignore : System.Windows.Forms.TaskDialogButton" Usage="System.Windows.Forms.TaskDialogButton.Ignore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogButton</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a standard <see cref="T:System.Windows.Forms.TaskDialogButton" /> instance representing the <c>Ignore</c> button.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="No">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.TaskDialogButton No { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.TaskDialogButton No" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogButton.No" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property No As TaskDialogButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::TaskDialogButton ^ No { System::Windows::Forms::TaskDialogButton ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.No : System.Windows.Forms.TaskDialogButton" Usage="System.Windows.Forms.TaskDialogButton.No" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogButton</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a standard <see cref="T:System.Windows.Forms.TaskDialogButton" /> instance representing the <c>No</c> button.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OK">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.TaskDialogButton OK { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.TaskDialogButton OK" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogButton.OK" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OK As TaskDialogButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::TaskDialogButton ^ OK { System::Windows::Forms::TaskDialogButton ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OK : System.Windows.Forms.TaskDialogButton" Usage="System.Windows.Forms.TaskDialogButton.OK" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogButton</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a standard <see cref="T:System.Windows.Forms.TaskDialogButton" /> instance representing the <c>OK</c> button.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Forms.TaskDialogButton b1, System.Windows.Forms.TaskDialogButton b2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Forms.TaskDialogButton b1, class System.Windows.Forms.TaskDialogButton b2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TaskDialogButton.op_Equality(System.Windows.Forms.TaskDialogButton,System.Windows.Forms.TaskDialogButton)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (b1 As TaskDialogButton, b2 As TaskDialogButton) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Forms::TaskDialogButton ^ b1, System::Windows::Forms::TaskDialogButton ^ b2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Forms.TaskDialogButton * System.Windows.Forms.TaskDialogButton -&gt; bool" Usage="b1 = b2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b1" Type="System.Windows.Forms.TaskDialogButton" />
        <Parameter Name="b2" Type="System.Windows.Forms.TaskDialogButton" />
      </Parameters>
      <Docs>
        <param name="b1">To be added.</param>
        <param name="b2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Forms.TaskDialogButton b1, System.Windows.Forms.TaskDialogButton b2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Forms.TaskDialogButton b1, class System.Windows.Forms.TaskDialogButton b2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TaskDialogButton.op_Inequality(System.Windows.Forms.TaskDialogButton,System.Windows.Forms.TaskDialogButton)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (b1 As TaskDialogButton, b2 As TaskDialogButton) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Forms::TaskDialogButton ^ b1, System::Windows::Forms::TaskDialogButton ^ b2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Forms.TaskDialogButton * System.Windows.Forms.TaskDialogButton -&gt; bool" Usage="System.Windows.Forms.TaskDialogButton.op_Inequality (b1, b2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b1" Type="System.Windows.Forms.TaskDialogButton" />
        <Parameter Name="b2" Type="System.Windows.Forms.TaskDialogButton" />
      </Parameters>
      <Docs>
        <param name="b1">To be added.</param>
        <param name="b2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public void PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TaskDialogButton.PerformClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformClick();" />
      <MemberSignature Language="F#" Value="member this.PerformClick : unit -&gt; unit" Usage="taskDialogButton.PerformClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Simulates a click on this button.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">This button instance is not currently bound to a task dialog.
              - or - The task dialog has started navigating to a new page containing this button instance, but the <see cref="E:System.Windows.Forms.TaskDialogPage.Created" /> event has not been raised yet.
              - or - This button is currently bound to a task dialog, but the dialog has just started navigating to a different page.</exception>
      </Docs>
    </Member>
    <Member MemberName="Retry">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.TaskDialogButton Retry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.TaskDialogButton Retry" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogButton.Retry" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Retry As TaskDialogButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::TaskDialogButton ^ Retry { System::Windows::Forms::TaskDialogButton ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Retry : System.Windows.Forms.TaskDialogButton" Usage="System.Windows.Forms.TaskDialogButton.Retry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogButton</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a standard <see cref="T:System.Windows.Forms.TaskDialogButton" /> instance representing the <c>Retry</c> button.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowShieldIcon">
      <MemberSignature Language="C#" Value="public bool ShowShieldIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowShieldIcon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogButton.ShowShieldIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowShieldIcon As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowShieldIcon { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowShieldIcon : bool with get, set" Usage="System.Windows.Forms.TaskDialogButton.ShowShieldIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates if the User Account Control (UAC) shield icon should be shown near the button; that is, whether the action invoked by the button requires elevation.</summary>
        <value>
          <see langword="true" /> to show the UAC shield icon; otherwise, <see langword="false" />.
              The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 This property can be set while the dialog is shown.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The property is set on a button that is currently bound to a task dialog, but the dialog has just started navigating to a different page.</exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string? Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogButton.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.TaskDialogButton.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text associated with this control.</summary>
        <value>The text associated with this control. The default value is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 You cannot set this property if this button is a standard button, as its text will be provided by the OS.

 This property must not be `null` or an empty string when showing or navigating the dialog; otherwise, the operation will fail.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The property is set and this button instance is a standard button, for which the text is provided by the OS.
              - or - The property is set and this button instance is currently bound to a task dialog.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TaskDialogButton.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="taskDialogButton.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string that represents the current <see cref="T:System.Windows.Forms.TaskDialogButton" /> control.</summary>
        <returns>A string that contains the control text.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAgain">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.TaskDialogButton TryAgain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.TaskDialogButton TryAgain" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogButton.TryAgain" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TryAgain As TaskDialogButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::TaskDialogButton ^ TryAgain { System::Windows::Forms::TaskDialogButton ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TryAgain : System.Windows.Forms.TaskDialogButton" Usage="System.Windows.Forms.TaskDialogButton.TryAgain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogButton</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a standard <see cref="T:System.Windows.Forms.TaskDialogButton" /> instance representing the <c>Try Again</c> button.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogButton.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Windows.Forms.TaskDialogButton.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates if this <see cref="T:System.Windows.Forms.TaskDialogButton" /> should be shown when displaying the task dialog.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 Setting this property to `false` allows you to still receive the <xref:System.Windows.Forms.TaskDialogButton.Click> event (e.g. for the <xref:System.Windows.Forms.TaskDialogButton.Cancel> button when <xref:System.Windows.Forms.TaskDialogPage.AllowCancel> is set), or to call the <xref:System.Windows.Forms.TaskDialogButton.PerformClick> method even if the button is not shown.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The property is set and this button instance is currently bound to a task dialog.</exception>
      </Docs>
    </Member>
    <Member MemberName="Yes">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.TaskDialogButton Yes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.TaskDialogButton Yes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogButton.Yes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Yes As TaskDialogButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::TaskDialogButton ^ Yes { System::Windows::Forms::TaskDialogButton ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Yes : System.Windows.Forms.TaskDialogButton" Usage="System.Windows.Forms.TaskDialogButton.Yes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogButton</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a standard <see cref="T:System.Windows.Forms.TaskDialogButton" /> instance representing the <c>Yes</c> button.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

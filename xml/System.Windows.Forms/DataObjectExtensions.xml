<Type Name="DataObjectExtensions" FullName="System.Windows.Forms.DataObjectExtensions">
  <TypeSignature Language="C#" Value="public static class DataObjectExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataObjectExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataObjectExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DataObjectExtensions" />
  <TypeSignature Language="F#" Value="type DataObjectExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataObjectExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryGetData&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TryGetData&lt;T&gt; (this System.Windows.Forms.IDataObject dataObject, out T data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetData&lt;T&gt;(class System.Windows.Forms.IDataObject dataObject, [out] !!T&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObjectExtensions.TryGetData``1(System.Windows.Forms.IDataObject,``0@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryGetData(Of T) (dataObject As IDataObject, ByRef data As T) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryGetData : System.Windows.Forms.IDataObject * 'T -&gt; bool" Usage="System.Windows.Forms.DataObjectExtensions.TryGetData (dataObject, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryGetData(System::Windows::Forms::IDataObject ^ dataObject, [Runtime::InteropServices::Out] T % data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="dataObject" Type="System.Windows.Forms.IDataObject" RefType="this" />
        <Parameter Name="data" Type="T" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.MaybeNullWhen(false)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.MaybeNullWhen(false)&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="dataObject">To be added.</param>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetData&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TryGetData&lt;T&gt; (this System.Windows.Forms.IDataObject dataObject, string format, out T data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetData&lt;T&gt;(class System.Windows.Forms.IDataObject dataObject, string format, [out] !!T&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObjectExtensions.TryGetData``1(System.Windows.Forms.IDataObject,System.String,``0@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryGetData(Of T) (dataObject As IDataObject, format As String, ByRef data As T) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryGetData : System.Windows.Forms.IDataObject * string * 'T -&gt; bool" Usage="System.Windows.Forms.DataObjectExtensions.TryGetData (dataObject, format, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryGetData(System::Windows::Forms::IDataObject ^ dataObject, System::String ^ format, [Runtime::InteropServices::Out] T % data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="dataObject" Type="System.Windows.Forms.IDataObject" RefType="this" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="T" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.MaybeNullWhen(false)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.MaybeNullWhen(false)&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="dataObject">To be added.</param>
        <param name="format">To be added.</param>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetData&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TryGetData&lt;T&gt; (this System.Windows.Forms.IDataObject dataObject, string format, bool autoConvert, out T data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetData&lt;T&gt;(class System.Windows.Forms.IDataObject dataObject, string format, bool autoConvert, [out] !!T&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObjectExtensions.TryGetData``1(System.Windows.Forms.IDataObject,System.String,System.Boolean,``0@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryGetData(Of T) (dataObject As IDataObject, format As String, autoConvert As Boolean, ByRef data As T) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryGetData : System.Windows.Forms.IDataObject * string * bool * 'T -&gt; bool" Usage="System.Windows.Forms.DataObjectExtensions.TryGetData (dataObject, format, autoConvert, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryGetData(System::Windows::Forms::IDataObject ^ dataObject, System::String ^ format, bool autoConvert, [Runtime::InteropServices::Out] T % data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="dataObject" Type="System.Windows.Forms.IDataObject" RefType="this" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
        <Parameter Name="data" Type="T" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.MaybeNullWhen(false)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.MaybeNullWhen(false)&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="dataObject">To be added.</param>
        <param name="format">To be added.</param>
        <param name="autoConvert">To be added.</param>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetData&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TryGetData&lt;T&gt; (this System.Windows.Forms.IDataObject dataObject, string format, Func&lt;System.Reflection.Metadata.TypeName,Type&gt; resolver, bool autoConvert, out T data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetData&lt;T&gt;(class System.Windows.Forms.IDataObject dataObject, string format, class System.Func`2&lt;class System.Reflection.Metadata.TypeName, class System.Type&gt; resolver, bool autoConvert, [out] !!T&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObjectExtensions.TryGetData``1(System.Windows.Forms.IDataObject,System.String,System.Func{System.Reflection.Metadata.TypeName,System.Type},System.Boolean,``0@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryGetData(Of T) (dataObject As IDataObject, format As String, resolver As Func(Of TypeName, Type), autoConvert As Boolean, ByRef data As T) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryGetData : System.Windows.Forms.IDataObject * string * Func&lt;System.Reflection.Metadata.TypeName, Type&gt; * bool * 'T -&gt; bool" Usage="System.Windows.Forms.DataObjectExtensions.TryGetData (dataObject, format, resolver, autoConvert, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryGetData(System::Windows::Forms::IDataObject ^ dataObject, System::String ^ format, Func&lt;System::Reflection::Metadata::TypeName ^, Type ^&gt; ^ resolver, bool autoConvert, [Runtime::InteropServices::Out] T % data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="dataObject" Type="System.Windows.Forms.IDataObject" RefType="this" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="resolver" Type="System.Func&lt;System.Reflection.Metadata.TypeName,System.Type&gt;" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
        <Parameter Name="data" Type="T" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.MaybeNullWhen(false)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.MaybeNullWhen(false)&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="dataObject">To be added.</param>
        <param name="format">To be added.</param>
        <param name="resolver">To be added.</param>
        <param name="autoConvert">To be added.</param>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

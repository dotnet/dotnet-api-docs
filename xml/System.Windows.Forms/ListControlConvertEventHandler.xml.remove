<Type Name="ListControlConvertEventHandler" FullName="System.Windows.Forms.ListControlConvertEventHandler">
  <TypeSignature Language="C#" Value="public delegate void ListControlConvertEventHandler(object sender, ListControlConvertEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ListControlConvertEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListControlConvertEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ListControlConvertEventHandler(sender As Object, e As ListControlConvertEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ListControlConvertEventHandler(System::Object ^ sender, ListControlConvertEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ListControlConvertEventHandler = delegate of obj * ListControlConvertEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Forms.ListControlConvertEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">A reference to the event sender.</param>
    <param name="e">A <see cref="T:System.Windows.Forms.ListControlConvertEventArgs" /> that contains the event data.</param>
    <summary>Represents the method that will handle converting a <see cref="T:System.Windows.Forms.ListControl" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you create a <xref:System.Windows.Forms.ListControlConvertEventHandler> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>

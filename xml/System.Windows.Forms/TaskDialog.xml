<Type Name="TaskDialog" FullName="System.Windows.Forms.TaskDialog">
  <TypeSignature Language="C#" Value="public class TaskDialog : System.Windows.Forms.IWin32Window" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskDialog extends System.Object implements class System.Windows.Forms.IWin32Window" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TaskDialog" />
  <TypeSignature Language="VB.NET" Value="Public Class TaskDialog&#xA;Implements IWin32Window" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaskDialog : System::Windows::Forms::IWin32Window" />
  <TypeSignature Language="F#" Value="type TaskDialog = class&#xA;    interface IWin32Window" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Forms.IWin32Window</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A task dialog allows to display information and get simple input from the user. It is similar to a <see cref="T:System.Windows.Forms.MessageBox" /> (in that it is formatted by the operating system) but provides a lot more features.</summary>
    <remarks>
      <format type="text/markdown">
  <![CDATA[

## Remarks

 For more information, see [About Task Dialogs](https://docs.microsoft.com/windows/desktop/Controls/task-dialogs-overview).

> [!NOTE]
> In order to use the dialog, you need ensure <xref:System.Windows.Forms.Application.EnableVisualStyles> has been called before showing the dialog, or the application needs to be compiled with a manifest that contains a dependency to Microsoft.Windows.Common-Controls (6.0.0.0).
> Additionally, the current thread should use the single-threaded apartment (STA) model.

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TaskDialog.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="taskDialog.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the shown task dialog with <see cref="P:System.Windows.Forms.TaskDialogButton.Cancel" /> as resulting button.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 To close the dialog with a different result, call the <xref:System.Windows.Forms.TaskDialogButton.PerformClick> method of the <xref:System.Windows.Forms.TaskDialogButton> that you want to set as a result.

 This method can be called while the dialog is waiting for navigation to complete, whereas <xref:System.Windows.Forms.TaskDialogButton.PerformClick> would throw in that case. When calling this method, the <xref:System.Windows.Forms.TaskDialogButton.Click> event won't be raised.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialog.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.TaskDialog.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IWin32Window.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the window handle of the task dialog window, or <see cref="F:System.IntPtr.Zero" /> if the dialog is currently not being shown.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.TaskDialogButton ShowDialog (System.Windows.Forms.TaskDialogPage page, System.Windows.Forms.TaskDialogStartupLocation startupLocation = System.Windows.Forms.TaskDialogStartupLocation.CenterOwner);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.TaskDialogButton ShowDialog(class System.Windows.Forms.TaskDialogPage page, valuetype System.Windows.Forms.TaskDialogStartupLocation startupLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TaskDialog.ShowDialog(System.Windows.Forms.TaskDialogPage,System.Windows.Forms.TaskDialogStartupLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShowDialog (page As TaskDialogPage, Optional startupLocation As TaskDialogStartupLocation = System.Windows.Forms.TaskDialogStartupLocation.CenterOwner) As TaskDialogButton" />
      <MemberSignature Language="F#" Value="static member ShowDialog : System.Windows.Forms.TaskDialogPage * System.Windows.Forms.TaskDialogStartupLocation -&gt; System.Windows.Forms.TaskDialogButton" Usage="System.Windows.Forms.TaskDialog.ShowDialog (page, startupLocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogButton</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Windows.Forms.TaskDialogPage" />
        <Parameter Name="startupLocation" Type="System.Windows.Forms.TaskDialogStartupLocation" />
      </Parameters>
      <Docs>
        <param name="page">The page instance that contains the contents which this task dialog will display.</param>
        <param name="startupLocation">Gets or sets the position of the task dialog when it is shown.</param>
        <summary>Shows the task dialog.</summary>
        <returns>The <see cref="T:System.Windows.Forms.TaskDialogButton" /> which was clicked by the user to close the dialog.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 Showing the dialog will bind the `page` and its controls until this method returns or the dialog is navigated to a different page.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="page" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The specified <paramref name="page" /> contains an invalid configuration.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.TaskDialogButton ShowDialog (IntPtr hwndOwner, System.Windows.Forms.TaskDialogPage page, System.Windows.Forms.TaskDialogStartupLocation startupLocation = System.Windows.Forms.TaskDialogStartupLocation.CenterOwner);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.TaskDialogButton ShowDialog(native int hwndOwner, class System.Windows.Forms.TaskDialogPage page, valuetype System.Windows.Forms.TaskDialogStartupLocation startupLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TaskDialog.ShowDialog(System.IntPtr,System.Windows.Forms.TaskDialogPage,System.Windows.Forms.TaskDialogStartupLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShowDialog (hwndOwner As IntPtr, page As TaskDialogPage, Optional startupLocation As TaskDialogStartupLocation = System.Windows.Forms.TaskDialogStartupLocation.CenterOwner) As TaskDialogButton" />
      <MemberSignature Language="F#" Value="static member ShowDialog : nativeint * System.Windows.Forms.TaskDialogPage * System.Windows.Forms.TaskDialogStartupLocation -&gt; System.Windows.Forms.TaskDialogButton" Usage="System.Windows.Forms.TaskDialog.ShowDialog (hwndOwner, page, startupLocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogButton</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwndOwner" Type="System.IntPtr" />
        <Parameter Name="page" Type="System.Windows.Forms.TaskDialogPage" />
        <Parameter Name="startupLocation" Type="System.Windows.Forms.TaskDialogStartupLocation" />
      </Parameters>
      <Docs>
        <param name="hwndOwner">The handle of the owner window, or <see cref="F:System.IntPtr.Zero" /> to show a modeless dialog.</param>
        <param name="page">The page instance that contains the contents which this task dialog will display.</param>
        <param name="startupLocation">Gets or sets the position of the task dialog when it is shown.</param>
        <summary>Shows the task dialog with the specified owner.</summary>
        <returns>The <see cref="T:System.Windows.Forms.TaskDialogButton" /> which was clicked by the user to close the dialog.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 Showing the dialog will bind the `page` and its controls until this method returns or the dialog is navigated to a different page.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="page" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The specified <paramref name="page" /> contains an invalid configuration.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.TaskDialogButton ShowDialog (System.Windows.Forms.IWin32Window owner, System.Windows.Forms.TaskDialogPage page, System.Windows.Forms.TaskDialogStartupLocation startupLocation = System.Windows.Forms.TaskDialogStartupLocation.CenterOwner);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.TaskDialogButton ShowDialog(class System.Windows.Forms.IWin32Window owner, class System.Windows.Forms.TaskDialogPage page, valuetype System.Windows.Forms.TaskDialogStartupLocation startupLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TaskDialog.ShowDialog(System.Windows.Forms.IWin32Window,System.Windows.Forms.TaskDialogPage,System.Windows.Forms.TaskDialogStartupLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShowDialog (owner As IWin32Window, page As TaskDialogPage, Optional startupLocation As TaskDialogStartupLocation = System.Windows.Forms.TaskDialogStartupLocation.CenterOwner) As TaskDialogButton" />
      <MemberSignature Language="F#" Value="static member ShowDialog : System.Windows.Forms.IWin32Window * System.Windows.Forms.TaskDialogPage * System.Windows.Forms.TaskDialogStartupLocation -&gt; System.Windows.Forms.TaskDialogButton" Usage="System.Windows.Forms.TaskDialog.ShowDialog (owner, page, startupLocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogButton</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="page" Type="System.Windows.Forms.TaskDialogPage" />
        <Parameter Name="startupLocation" Type="System.Windows.Forms.TaskDialogStartupLocation" />
      </Parameters>
      <Docs>
        <param name="owner">The owner window, or <see langword="null" /> to show a modeless dialog.</param>
        <param name="page">The page instance that contains the contents which this task dialog will display.</param>
        <param name="startupLocation">Gets or sets the position of the task dialog when it is shown.</param>
        <summary>Shows the task dialog with the specified owner.</summary>
        <returns>The <see cref="T:System.Windows.Forms.TaskDialogButton" /> which was clicked by the user to close the dialog.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 Showing the dialog will bind the `page` and its controls until this method returns or the dialog is navigated to a different page.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="owner" /> is <see langword="null" /> - or - <paramref name="page" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The specified <paramref name="page" /> contains an invalid configuration.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="InputLanguageChangedEventArgs" FullName="System.Windows.Forms.InputLanguageChangedEventArgs">
  <TypeSignature Language="C#" Value="public class InputLanguageChangedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputLanguageChangedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.InputLanguageChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class InputLanguageChangedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="F#" Value="type InputLanguageChangedEventArgs = class&#xA;    inherit EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class InputLanguageChangedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides data for the <see cref="E:System.Windows.Forms.Form.InputLanguageChanged" /> event.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can use the data from the <xref:System.Windows.Forms.InputLanguageChangedEventArgs> to make decisions about whether to change Input Method Editors (IMEs) or swap right-to-left values. You can also change the <xref:System.Threading.Thread.CurrentCulture%2A> of a thread and the <xref:System.Threading.Thread.CurrentUICulture%2A> properties so that different resources get picked up.  
  
 An <xref:System.Windows.Forms.InputLanguageChangedEventArgs> identifies the locale and the character set of the new input language.  
  
 The <xref:System.Windows.Forms.Form.InputLanguageChanging> event precedes the <xref:System.Windows.Forms.Form.InputLanguageChanged> event.
  
## Examples  
 The following example creates a new <xref:System.Windows.Forms.Form> and attaches an event handler to the <xref:System.Windows.Forms.Form.InputLanguageChanged> event. This event changes the `IMEmode` when the input language changes to Japanese.  
  
 :::code language="cpp" source="~/snippets/cpp/VS_Snippets_Winforms/InputLanguageChanged/CPP/form1.cpp" id="Snippet1":::
 :::code language="csharp" source="~/snippets/csharp/System.Windows.Forms/ImeMode/Overview/form1.cs" id="Snippet1":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/InputLanguageChanged/VB/form1.vb" id="Snippet1":::  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.InputLanguage" />
    <altmember cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputLanguageChangedEventArgs (System.Globalization.CultureInfo culture, byte charSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Globalization.CultureInfo culture, unsigned int8 charSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.InputLanguageChangedEventArgs.#ctor(System.Globalization.CultureInfo,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As CultureInfo, charSet As Byte)" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.InputLanguageChangedEventArgs : System.Globalization.CultureInfo * byte -&gt; System.Windows.Forms.InputLanguageChangedEventArgs" Usage="new System.Windows.Forms.InputLanguageChangedEventArgs (culture, charSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InputLanguageChangedEventArgs(System::Globalization::CultureInfo ^ culture, System::Byte charSet);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="charSet" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="culture">The locale of the input language.</param>
        <param name="charSet">The character set associated with the new input language.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /> class with the specified locale and character set.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">.NET 5 and later: An <see cref="T:System.Windows.Forms.InputLanguage" /> cannot be retrieved for <paramref name="culture" />.</exception>
        <altmember cref="T:System.Windows.Forms.InputLanguage" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputLanguageChangedEventArgs (System.Windows.Forms.InputLanguage inputLanguage, byte charSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.InputLanguage inputLanguage, unsigned int8 charSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.InputLanguageChangedEventArgs.#ctor(System.Windows.Forms.InputLanguage,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (inputLanguage As InputLanguage, charSet As Byte)" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.InputLanguageChangedEventArgs : System.Windows.Forms.InputLanguage * byte -&gt; System.Windows.Forms.InputLanguageChangedEventArgs" Usage="new System.Windows.Forms.InputLanguageChangedEventArgs (inputLanguage, charSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InputLanguageChangedEventArgs(System::Windows::Forms::InputLanguage ^ inputLanguage, System::Byte charSet);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inputLanguage" Type="System.Windows.Forms.InputLanguage" />
        <Parameter Name="charSet" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="inputLanguage">The input language.</param>
        <param name="charSet">The character set associated with the new input language.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /> class with the specified input language and character set.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The input language specifies a culture/keyboard layout pair.  
  
 See the <xref:System.Windows.Forms.InputLanguageChangedEventArgs.CharSet%2A> property for a list of valid character sets.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.InputLanguage" />
        <altmember cref="P:System.Windows.Forms.InputLanguageChangedEventArgs.CharSet" />
      </Docs>
    </Member>
    <Member MemberName="CharSet">
      <MemberSignature Language="C#" Value="public byte CharSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 CharSet" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.InputLanguageChangedEventArgs.CharSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CharSet As Byte" />
      <MemberSignature Language="F#" Value="member this.CharSet : byte" Usage="System.Windows.Forms.InputLanguageChangedEventArgs.CharSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte CharSet { System::Byte get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the character set associated with the new input language.</summary>
        <value>An 8-bit unsigned integer that corresponds to the character set, as shown in the following table.  
  Character Set  

  Value  

  ANSI_CHARSET  

  0  

  DEFAULT_CHARSET  

  1  

  SYMBOL_CHARSET  

  2  

  MAC_CHARSET  

  77  

  SHIFTJI_CHARSET  

  128  

  HANGEUL_CHARSET  

  129  

  HANGUL_CHARSET  

  129  

  JOHAB_CHARSET  

  130  

  GB2312_CHARSET  

  134  

  CHINESEBIG5_CHARSET  

  136  

  GREEK_CHARSET  

  161  

  TURKISH_CHARSET  

  162  

  VIETNAMESE_CHARSET  

  163  

  HEBREW_CHARSET  

  177  

  ARABIC_CHARSET  

  178  

  BALTIC_CHARSET  

  186  

  RUSSIAN_CHARSET  

  204  

  THAI_CHARSET  

  222  

  EASTEUROPE_CHARSET  

  238  

  OEM_CHARSET  

  255</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is the Win32 character set that the user switched to. On ANSI systems, this property can be used to create fonts that can display the correct character set. On Unicode systems, you typically do not need to use this property. Instead, use the <xref:System.Globalization.CultureInfo> class for these functionalities.
  
## Examples  
 The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  
  
 To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType> event.  
  
 :::code language="csharp" source="~/snippets/csharp/System.ComponentModel/CollectionChangeEventArgs/Overview/EventExamples.cs" id="Snippet400":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb" id="Snippet400":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.InputLanguageChangedEventArgs.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo" Usage="System.Windows.Forms.InputLanguageChangedEventArgs.Culture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the locale of the input language.</summary>
        <value>A <see cref="T:System.Globalization.CultureInfo" /> that specifies the locale of the input language.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Forms.InputLanguageChangedEventArgs.Culture%2A> property specifies a <xref:System.Globalization.CultureInfo> and defines a set of user preference information dependent on the language, sublanguage, country/region, and cultural conventions of the user.
  
## Examples  
 The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  
  
 To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType> event.  
  
 :::code language="csharp" source="~/snippets/csharp/System.ComponentModel/CollectionChangeEventArgs/Overview/EventExamples.cs" id="Snippet400":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb" id="Snippet400":::  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="InputLanguage">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.InputLanguage InputLanguage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.InputLanguage InputLanguage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.InputLanguageChangedEventArgs.InputLanguage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputLanguage As InputLanguage" />
      <MemberSignature Language="F#" Value="member this.InputLanguage : System.Windows.Forms.InputLanguage" Usage="System.Windows.Forms.InputLanguageChangedEventArgs.InputLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::InputLanguage ^ InputLanguage { System::Windows::Forms::InputLanguage ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating the input language.</summary>
        <value>The input language associated with the object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  
  
 To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType> event.  
  
 :::code language="csharp" source="~/snippets/csharp/System.ComponentModel/CollectionChangeEventArgs/Overview/EventExamples.cs" id="Snippet400":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb" id="Snippet400":::  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.InputLanguage" />
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="WebBrowser+WebBrowserSite" FullName="System.Windows.Forms.WebBrowser+WebBrowserSite">
  <TypeSignature Language="C#" Value="protected class WebBrowser.WebBrowserSite : System.Windows.Forms.WebBrowserSiteBase" />
  <TypeSignature Language="ILAsm" Value=".class nested protected auto ansi beforefieldinit WebBrowser/WebBrowserSite extends System.Windows.Forms.WebBrowserSiteBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.WebBrowser.WebBrowserSite" />
  <TypeSignature Language="VB.NET" Value="Protected Class WebBrowser.WebBrowserSite&#xA;Inherits WebBrowserSiteBase" />
  <TypeSignature Language="C++ CLI" Value="protected: ref class WebBrowser::WebBrowserSite : System::Windows::Forms::WebBrowserSiteBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.WebBrowserSiteBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents the host window of a <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you are familiar with OLE development using the unmanaged `WebBrowser` ActiveX control, you can extend the functionality of the Windows Forms <xref:System.Windows.Forms.WebBrowser> control, which is a managed wrapper for the ActiveX control. You can use this extensibility, for example, to customize the browser shortcut menu and shortcut keys or to provide a custom security configuration for hosted documents.  
  
 To use this feature, implement classes that inherit from the <xref:System.Windows.Forms.WebBrowser> and <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> classes. The unmanaged `WebBrowser` ActiveX control uses the protected <xref:System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase%2A?displayProperty=nameWithType> method to retrieve extensibility interfaces implemented by the <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> class. Override the <xref:System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase%2A> method to return an instance of your own class that inherits from the <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> class. The <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> class provides a default implementations of the OLE `IDocHostUIHandler` interface. For more information, see [IDocHostUIHandler Interface](https://go.microsoft.com/fwlink/?LinkId=98895) in the MSDN library. You can provide your own implementation of this interface or implement any other `WebBrowser` ActiveX control interface in order to customize the behavior of the control. For more information, see [WebBrowser Control](https://go.microsoft.com/fwlink/?LinkID=98894) in the MSDN library.  
  
> [!NOTE]
>  If you provide your own implementation for any `IDocHostUIHandler` members, you must implement all the members of that interface.  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=98894">WebBrowser Control</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=98895">IDocHostUIHandler Interface</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebBrowserSite (System.Windows.Forms.WebBrowser host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.WebBrowser host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.WebBrowserSite.#ctor(System.Windows.Forms.WebBrowser)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As WebBrowser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebBrowserSite(System::Windows::Forms::WebBrowser ^ host);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.WebBrowser.WebBrowserSite : System.Windows.Forms.WebBrowser -&gt; System.Windows.Forms.WebBrowser.WebBrowserSite" Usage="new System.Windows.Forms.WebBrowser.WebBrowserSite host" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="host" Type="System.Windows.Forms.WebBrowser" />
      </Parameters>
      <Docs>
        <param name="host">The <see cref="T:System.Windows.Forms.WebBrowser" /></param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.WebBrowser.WebBrowserSite" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

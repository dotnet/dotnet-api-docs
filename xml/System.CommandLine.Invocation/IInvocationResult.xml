<Type Name="IInvocationResult" FullName="System.CommandLine.Invocation.IInvocationResult">
  <TypeSignature Language="C#" Value="public interface IInvocationResult" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInvocationResult" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Invocation.IInvocationResult" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInvocationResult" />
  <TypeSignature Language="F#" Value="type IInvocationResult = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInvocationResult" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            The result of a command handler invocation.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply (System.CommandLine.Invocation.InvocationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply(class System.CommandLine.Invocation.InvocationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Invocation.IInvocationResult.Apply(System.CommandLine.Invocation.InvocationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply (context As InvocationContext)" />
      <MemberSignature Language="F#" Value="abstract member Apply : System.CommandLine.Invocation.InvocationContext -&gt; unit" Usage="iInvocationResult.Apply context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply(System::CommandLine::Invocation::InvocationContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.CommandLine.Invocation.InvocationContext" />
      </Parameters>
      <Docs>
        <param name="context">The context for the current invocation.</param>
        <summary>
            Applies the result to the current invocation context.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

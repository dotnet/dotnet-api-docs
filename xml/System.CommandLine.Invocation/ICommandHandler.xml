<Type Name="ICommandHandler" FullName="System.CommandLine.Invocation.ICommandHandler">
  <TypeSignature Language="C#" Value="public interface ICommandHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommandHandler" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Invocation.ICommandHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommandHandler" />
  <TypeSignature Language="F#" Value="type ICommandHandler = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommandHandler" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Defines the behavior of a command.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; InvokeAsync (System.CommandLine.Invocation.InvocationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; InvokeAsync(class System.CommandLine.Invocation.InvocationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Invocation.ICommandHandler.InvokeAsync(System.CommandLine.Invocation.InvocationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync (context As InvocationContext) As Task(Of Integer)" />
      <MemberSignature Language="F#" Value="abstract member InvokeAsync : System.CommandLine.Invocation.InvocationContext -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="iCommandHandler.InvokeAsync context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ InvokeAsync(System::CommandLine::Invocation::InvocationContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.CommandLine.Invocation.InvocationContext" />
      </Parameters>
      <Docs>
        <param name="context">Provides context for the invocation, including parse results  and binding support.</param>
        <summary>
            Performs an action when the associated command is invoked on the command line.
            </summary>
        <returns>A value that can be used as the exit code for the process.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

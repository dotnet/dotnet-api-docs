<Type Name="InvocationContext" FullName="System.CommandLine.Invocation.InvocationContext">
  <TypeSignature Language="C#" Value="public sealed class InvocationContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InvocationContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Invocation.InvocationContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InvocationContext" />
  <TypeSignature Language="F#" Value="type InvocationContext = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class InvocationContext sealed" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Supports command invocation by providing access to parse results and other services.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvocationContext (System.CommandLine.Parsing.ParseResult parseResult, System.CommandLine.IConsole? console = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CommandLine.Parsing.ParseResult parseResult, class System.CommandLine.IConsole console) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Invocation.InvocationContext.#ctor(System.CommandLine.Parsing.ParseResult,System.CommandLine.IConsole)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parseResult As ParseResult, Optional console As IConsole = Nothing)" />
      <MemberSignature Language="F#" Value="new System.CommandLine.Invocation.InvocationContext : System.CommandLine.Parsing.ParseResult * System.CommandLine.IConsole -&gt; System.CommandLine.Invocation.InvocationContext" Usage="new System.CommandLine.Invocation.InvocationContext (parseResult, console)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parseResult" Type="System.CommandLine.Parsing.ParseResult" />
        <Parameter Name="console" Type="System.CommandLine.IConsole" />
      </Parameters>
      <Docs>
        <param name="parseResult">The result of the current parse operation.</param>
        <param name="console">The console to which output is to be written.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContext">
      <MemberSignature Language="C#" Value="public System.CommandLine.Binding.BindingContext BindingContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CommandLine.Binding.BindingContext BindingContext" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Invocation.InvocationContext.BindingContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingContext As BindingContext" />
      <MemberSignature Language="F#" Value="member this.BindingContext : System.CommandLine.Binding.BindingContext" Usage="System.CommandLine.Invocation.InvocationContext.BindingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CommandLine::Binding::BindingContext ^ BindingContext { System::CommandLine::Binding::BindingContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Binding.BindingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The binding context for the current invocation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Console">
      <MemberSignature Language="C#" Value="public System.CommandLine.IConsole Console { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CommandLine.IConsole Console" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Invocation.InvocationContext.Console" />
      <MemberSignature Language="VB.NET" Value="Public Property Console As IConsole" />
      <MemberSignature Language="F#" Value="member this.Console : System.CommandLine.IConsole with get, set" Usage="System.CommandLine.Invocation.InvocationContext.Console" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CommandLine::IConsole ^ Console { System::CommandLine::IConsole ^ get(); void set(System::CommandLine::IConsole ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.IConsole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The console to which output should be written during the current invocation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitCode">
      <MemberSignature Language="C#" Value="public int ExitCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExitCode" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Invocation.InvocationContext.ExitCode" />
      <MemberSignature Language="VB.NET" Value="Public Property ExitCode As Integer" />
      <MemberSignature Language="F#" Value="member this.ExitCode : int with get, set" Usage="System.CommandLine.Invocation.InvocationContext.ExitCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExitCode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A value that can be used to set the exit code for the process.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken GetCancellationToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.CancellationToken GetCancellationToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Invocation.InvocationContext.GetCancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCancellationToken () As CancellationToken" />
      <MemberSignature Language="F#" Value="member this.GetCancellationToken : unit -&gt; System.Threading.CancellationToken" Usage="invocationContext.GetCancellationToken " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::CancellationToken GetCancellationToken();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets token to implement cancellation handling.
            </summary>
        <returns>Token used by the caller to implement cancellation handling.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpBuilder">
      <MemberSignature Language="C#" Value="public System.CommandLine.Help.HelpBuilder HelpBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CommandLine.Help.HelpBuilder HelpBuilder" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Invocation.InvocationContext.HelpBuilder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HelpBuilder As HelpBuilder" />
      <MemberSignature Language="F#" Value="member this.HelpBuilder : System.CommandLine.Help.HelpBuilder" Usage="System.CommandLine.Invocation.InvocationContext.HelpBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CommandLine::Help::HelpBuilder ^ HelpBuilder { System::CommandLine::Help::HelpBuilder ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Help.HelpBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Enables writing help output.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvocationResult">
      <MemberSignature Language="C#" Value="public System.CommandLine.Invocation.IInvocationResult? InvocationResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CommandLine.Invocation.IInvocationResult InvocationResult" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Invocation.InvocationContext.InvocationResult" />
      <MemberSignature Language="VB.NET" Value="Public Property InvocationResult As IInvocationResult" />
      <MemberSignature Language="F#" Value="member this.InvocationResult : System.CommandLine.Invocation.IInvocationResult with get, set" Usage="System.CommandLine.Invocation.InvocationContext.InvocationResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CommandLine::Invocation::IInvocationResult ^ InvocationResult { System::CommandLine::Invocation::IInvocationResult ^ get(); void set(System::CommandLine::Invocation::IInvocationResult ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.IInvocationResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The result of the current invocation.
            </summary>
        <value>To be added.</value>
        <remarks>As the <see cref="T:System.CommandLine.Invocation.InvocationContext" /> is passed through the invocation pipeline to the <see cref="T:System.CommandLine.Invocation.ICommandHandler" /> associated with the invoked command, only the last value of this property will be the one applied.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalizationResources">
      <MemberSignature Language="C#" Value="public System.CommandLine.LocalizationResources LocalizationResources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CommandLine.LocalizationResources LocalizationResources" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Invocation.InvocationContext.LocalizationResources" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalizationResources As LocalizationResources" />
      <MemberSignature Language="F#" Value="member this.LocalizationResources : System.CommandLine.LocalizationResources" Usage="System.CommandLine.Invocation.InvocationContext.LocalizationResources" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CommandLine::LocalizationResources ^ LocalizationResources { System::CommandLine::LocalizationResources ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.LocalizationResources</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Provides localizable strings for help and error messages.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parser">
      <MemberSignature Language="C#" Value="public System.CommandLine.Parsing.Parser Parser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CommandLine.Parsing.Parser Parser" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Invocation.InvocationContext.Parser" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parser As Parser" />
      <MemberSignature Language="F#" Value="member this.Parser : System.CommandLine.Parsing.Parser" Usage="System.CommandLine.Invocation.InvocationContext.Parser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CommandLine::Parsing::Parser ^ Parser { System::CommandLine::Parsing::Parser ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Parsing.Parser</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The parser used to create the <see cref="P:System.CommandLine.Invocation.InvocationContext.ParseResult" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseResult">
      <MemberSignature Language="C#" Value="public System.CommandLine.Parsing.ParseResult ParseResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CommandLine.Parsing.ParseResult ParseResult" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Invocation.InvocationContext.ParseResult" />
      <MemberSignature Language="VB.NET" Value="Public Property ParseResult As ParseResult" />
      <MemberSignature Language="F#" Value="member this.ParseResult : System.CommandLine.Parsing.ParseResult with get, set" Usage="System.CommandLine.Invocation.InvocationContext.ParseResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CommandLine::Parsing::ParseResult ^ ParseResult { System::CommandLine::Parsing::ParseResult ^ get(); void set(System::CommandLine::Parsing::ParseResult ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Parsing.ParseResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The parse result for the current invocation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

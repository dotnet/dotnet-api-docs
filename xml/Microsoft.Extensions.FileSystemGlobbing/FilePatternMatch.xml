<Type Name="FilePatternMatch" FullName="Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch">
  <TypeSignature Language="C#" Value="public struct FilePatternMatch : IEquatable&lt;Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit FilePatternMatch extends System.ValueType implements class System.IEquatable`1&lt;valuetype Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch" />
  <TypeSignature Language="VB.NET" Value="Public Structure FilePatternMatch&#xA;Implements IEquatable(Of FilePatternMatch)" />
  <TypeSignature Language="C++ CLI" Value="public value class FilePatternMatch : IEquatable&lt;Microsoft::Extensions::FileSystemGlobbing::FilePatternMatch&gt;" />
  <TypeSignature Language="F#" Value="type FilePatternMatch = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.FileSystemGlobbing</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents a file that was matched by searching using a globbing pattern.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FilePatternMatch (string path, string stem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string stem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, stem As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FilePatternMatch(System::String ^ path, System::String ^ stem);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch : string * string -&gt; Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch" Usage="new Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch (path, stem)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileSystemGlobbing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="stem" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The path to the matched file</param>
        <param name="stem">The stem</param>
        <summary>Initializes new instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.Equals(Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As FilePatternMatch) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Microsoft::Extensions::FileSystemGlobbing::FilePatternMatch other);" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch -&gt; bool" Usage="filePatternMatch.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileSystemGlobbing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch" />
      </Parameters>
      <Docs>
        <param name="other">The other match to be compared</param>
        <summary>Determines if the specified match is equivalent to the current match using a case-insensitive comparison.</summary>
        <returns>
          <see langword="true" /> if <see cref="P:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.Path" /> and <see cref="P:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.Stem" /> are equal using case-insensitive comparison</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="filePatternMatch.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileSystemGlobbing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to be compared</param>
        <summary>Determines if the specified object is equivalent to the current match using a case-insensitive comparison.</summary>
        <returns>
          <see langword="true" /> when <see cref="M:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.Equals(Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch)" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="filePatternMatch.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileSystemGlobbing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a hash for the file pattern match.</summary>
        <returns>Some number</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileSystemGlobbing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The path to the file matched.</summary>
        <value>To be added.</value>
        <remarks>If the matcher searched for "**/*.cs" using "src/Project" as the directory base and the pattern matcher found
            "src/Project/Interfaces/IFile.cs", then Stem = "Interfaces/IFile.cs" and Path = "src/Project/Interfaces/IFile.cs".</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stem">
      <MemberSignature Language="C#" Value="public string Stem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Stem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.Stem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Stem As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Stem { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Stem : string" Usage="Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.Stem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileSystemGlobbing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The subpath to the matched file under the base directory searched.</summary>
        <value>To be added.</value>
        <remarks>If the matcher searched for "**/*.cs" using "src/Project" as the directory base and the pattern matcher found
            "src/Project/Interfaces/IFile.cs",
            then Stem = "Interfaces/IFile.cs" and Path = "src/Project/Interfaces/IFile.cs".</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="Matcher" FullName="Microsoft.Extensions.FileSystemGlobbing.Matcher">
  <TypeSignature Language="C#" Value="public class Matcher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Matcher extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.FileSystemGlobbing.Matcher" />
  <TypeSignature Language="VB.NET" Value="Public Class Matcher" />
  <TypeSignature Language="C++ CLI" Value="public ref class Matcher" />
  <TypeSignature Language="F#" Value="type Matcher = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.FileSystemGlobbing</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Searches the file system for files with names that match specified patterns.</summary>
    <remarks>
      <para>Patterns specified in <see cref="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.AddInclude(System.String)" /> and <see cref="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.AddExclude(System.String)" /> can use the following formats to match multiple files or directories.</para>
      <list type="bullet">
        <item>
          <description>Exact directory and file name.
            <list type="bullet"><item><description><c>one.txt</c></description></item><item><description><c>dir/two.txt</c></description></item></list></description>
        </item>
        <item>
          <description>Wildcards (*) in file and directory names that represent zero to many characters not including directory separators characters.
            <list type="table"><listheader><term>Value</term><description>Description</description></listheader><item><term><c>*.txt</c></term><description>All files with .txt file extension.</description></item><item><term><c>*.*</c></term><description>All files with an extension.</description></item><item><term><c>*</c></term><description>All files in top-level directory.</description></item><item><term><c>.*</c></term><description>File names beginning with '.'.</description></item><item><term><c>*word*</c></term><description>All files with 'word' in the filename.</description></item><item><term><c>readme.*</c></term><description>All files named 'readme' with any file extension.</description></item><item><term><c>styles/*.css</c></term><description>All files with extension '.css' in the directory 'styles/'.</description></item><item><term><c>scripts/*/*</c></term><description>All files in 'scripts/' or one level of subdirectory under 'scripts/'.</description></item><item><term><c>images*/*</c></term><description>All files in a folder with name that is or begins with 'images'.</description></item></list></description>
        </item>
        <item>
          <description>Arbitrary directory depth (<c>/**/</c>).
            <list type="table"><listheader><term>Value</term><description>Description</description></listheader><item><term><c>**/*</c></term><description>All files in any subdirectory.</description></item><item><term><c>dir/**/*</c></term><description>All files in any subdirectory under 'dir/'.</description></item></list></description>
        </item>
        <item>
          <description>Relative paths.
            <list type="table"><listheader><term>Value</term><description>Description</description></listheader><item><term><c>../shared/*</c></term><description>All files in a diretory named "shared" at the sibling level to the base directory given to <see cref="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.Execute(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)" />.
                </description></item></list></description>
        </item>
      </list>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileSystemGlobbing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes an instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher" /> using case-insensitive matching.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matcher (StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.#ctor(System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparisonType As StringComparison)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matcher(StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.FileSystemGlobbing.Matcher : StringComparison -&gt; Microsoft.Extensions.FileSystemGlobbing.Matcher" Usage="new Microsoft.Extensions.FileSystemGlobbing.Matcher comparisonType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileSystemGlobbing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="comparisonType">The <see cref="T:System.StringComparison" /> to use</param>
        <summary>Initializes an instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher" /> using the string comparsion method specified.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExclude">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.FileSystemGlobbing.Matcher AddExclude (string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.FileSystemGlobbing.Matcher AddExclude(string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.AddExclude(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddExclude (pattern As String) As Matcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::FileSystemGlobbing::Matcher ^ AddExclude(System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="abstract member AddExclude : string -&gt; Microsoft.Extensions.FileSystemGlobbing.Matcher&#xA;override this.AddExclude : string -&gt; Microsoft.Extensions.FileSystemGlobbing.Matcher" Usage="matcher.AddExclude pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileSystemGlobbing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.FileSystemGlobbing.Matcher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern">The globbing pattern</param>
        <summary>
          <para>Add a file name pattern for files the matcher should exclude from the results. Patterns are relative to the
                root directory given when <see cref="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.Execute(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)" /> is called.</para>
          <para>Use the forward slash '/' to represent directory separator. Use '*' to represent wildcards in file and
                directory names. Use '**' to represent arbitrary directory depth. Use '..' to represent a parent directory.</para>
        </summary>
        <returns>The matcher</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInclude">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.FileSystemGlobbing.Matcher AddInclude (string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.FileSystemGlobbing.Matcher AddInclude(string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.AddInclude(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddInclude (pattern As String) As Matcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::FileSystemGlobbing::Matcher ^ AddInclude(System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="abstract member AddInclude : string -&gt; Microsoft.Extensions.FileSystemGlobbing.Matcher&#xA;override this.AddInclude : string -&gt; Microsoft.Extensions.FileSystemGlobbing.Matcher" Usage="matcher.AddInclude pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileSystemGlobbing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.FileSystemGlobbing.Matcher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern">The globbing pattern</param>
        <summary>
          <para>Add a file name pattern that the matcher should use to discover files. Patterns are relative to the root
                directory given when <see cref="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.Execute(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)" /> is called.</para>
          <para>Use the forward slash '/' to represent directory separator. Use '*' to represent wildcards in file and
                directory names. Use '**' to represent arbitrary directory depth. Use '..' to represent a parent directory.</para>
        </summary>
        <returns>The matcher</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult Execute (Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase directoryInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult Execute(class Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase directoryInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.Execute(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Execute (directoryInfo As DirectoryInfoBase) As PatternMatchingResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::FileSystemGlobbing::PatternMatchingResult ^ Execute(Microsoft::Extensions::FileSystemGlobbing::Abstractions::DirectoryInfoBase ^ directoryInfo);" />
      <MemberSignature Language="F#" Value="abstract member Execute : Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase -&gt; Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult&#xA;override this.Execute : Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase -&gt; Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult" Usage="matcher.Execute directoryInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileSystemGlobbing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directoryInfo" Type="Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase" />
      </Parameters>
      <Docs>
        <param name="directoryInfo">The root directory for the search</param>
        <summary>Searches the directory specified for all files matching patterns added to this instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher" /></summary>
        <returns>Always returns instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult" />, even if not files were matched</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

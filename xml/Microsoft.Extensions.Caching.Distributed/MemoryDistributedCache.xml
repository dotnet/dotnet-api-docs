<Type Name="MemoryDistributedCache" FullName="Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache">
  <TypeSignature Language="C#" Value="public class MemoryDistributedCache : Microsoft.Extensions.Caching.Distributed.IDistributedCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemoryDistributedCache extends System.Object implements class Microsoft.Extensions.Caching.Distributed.IDistributedCache" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache" />
  <TypeSignature Language="VB.NET" Value="Public Class MemoryDistributedCache&#xA;Implements IDistributedCache" />
  <TypeSignature Language="F#" Value="type MemoryDistributedCache = class&#xA;    interface IDistributedCache" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemoryDistributedCache : Microsoft::Extensions::Caching::Distributed::IDistributedCache" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Caching.Memory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Caching.Distributed.IDistributedCache</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Implements <see cref="T:Microsoft.Extensions.Caching.Distributed.IDistributedCache" /> using <see cref="T:Microsoft.Extensions.Caching.Memory.IMemoryCache" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemoryDistributedCache (Microsoft.Extensions.Options.IOptions&lt;Microsoft.Extensions.Caching.Memory.MemoryDistributedCacheOptions&gt; optionsAccessor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.Extensions.Caching.Memory.MemoryDistributedCacheOptions&gt; optionsAccessor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Caching.Memory.MemoryDistributedCacheOptions})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (optionsAccessor As IOptions(Of MemoryDistributedCacheOptions))" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache : Microsoft.Extensions.Options.IOptions&lt;Microsoft.Extensions.Caching.Memory.MemoryDistributedCacheOptions&gt; -&gt; Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache" Usage="new Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache optionsAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MemoryDistributedCache(Microsoft::Extensions::Options::IOptions&lt;Microsoft::Extensions::Caching::Memory::MemoryDistributedCacheOptions ^&gt; ^ optionsAccessor);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Memory</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="optionsAccessor" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.Extensions.Caching.Memory.MemoryDistributedCacheOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="optionsAccessor">The options of the cache.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemoryDistributedCache (Microsoft.Extensions.Options.IOptions&lt;Microsoft.Extensions.Caching.Memory.MemoryDistributedCacheOptions&gt; optionsAccessor, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.Extensions.Caching.Memory.MemoryDistributedCacheOptions&gt; optionsAccessor, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Caching.Memory.MemoryDistributedCacheOptions},Microsoft.Extensions.Logging.ILoggerFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (optionsAccessor As IOptions(Of MemoryDistributedCacheOptions), loggerFactory As ILoggerFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache : Microsoft.Extensions.Options.IOptions&lt;Microsoft.Extensions.Caching.Memory.MemoryDistributedCacheOptions&gt; * Microsoft.Extensions.Logging.ILoggerFactory -&gt; Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache" Usage="new Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache (optionsAccessor, loggerFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MemoryDistributedCache(Microsoft::Extensions::Options::IOptions&lt;Microsoft::Extensions::Caching::Memory::MemoryDistributedCacheOptions ^&gt; ^ optionsAccessor, Microsoft::Extensions::Logging::ILoggerFactory ^ loggerFactory);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Memory</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="optionsAccessor" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.Extensions.Caching.Memory.MemoryDistributedCacheOptions&gt;" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
      </Parameters>
      <Docs>
        <param name="optionsAccessor">The options of the cache.</param>
        <param name="loggerFactory">The logger factory to create <see cref="T:Microsoft.Extensions.Logging.ILogger" /> used to log messages.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public byte[]? Get (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] Get(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (key As String) As Byte()" />
      <MemberSignature Language="F#" Value="abstract member Get : string -&gt; byte[]&#xA;override this.Get : string -&gt; byte[]" Usage="memoryDistributedCache.Get key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ Get(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.Get(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Memory</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key of the item to get.</param>
        <summary>
            Gets the specified item associated with a key from the <see cref="T:Microsoft.Extensions.Caching.Memory.IMemoryCache" /> as a byte array.
            </summary>
        <returns>The byte array value of the key.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]?&gt; GetAsync (string key, System.Threading.CancellationToken token = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; GetAsync(string key, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (key As String, Optional token As CancellationToken = Nothing) As Task(Of Byte())" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;&#xA;override this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="memoryDistributedCache.GetAsync (key, token)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.GetAsync(System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Memory</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-8.0-pp">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">The key of the item to get.</param>
        <param name="token">The <see cref="T:System.Threading.CancellationToken" /> to use to cancel operation.</param>
        <summary>
            Asynchronously gets the specified item associated with a key from the <see cref="T:Microsoft.Extensions.Caching.Memory.IMemoryCache" /> as a byte array.
            </summary>
        <returns>The task for getting the byte array value associated with the specified key from the cache.</returns>
        <remarks>This method stores in the task it returns all non-usage exceptions that the method's synchronous counterpart can throw. If an exception is stored into the returned task, that exception will be thrown when the task is awaited. Usage exceptions, such as <see cref="T:System.ArgumentException" />, are still thrown synchronously. For the stored exceptions, see the exceptions thrown by <see cref="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Get(System.String)" />.</remarks>
        <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Refresh(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (key As String)" />
      <MemberSignature Language="F#" Value="abstract member Refresh : string -&gt; unit&#xA;override this.Refresh : string -&gt; unit" Usage="memoryDistributedCache.Refresh key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Refresh(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.Refresh(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Memory</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key of the item to refresh.</param>
        <summary>
            Refreshes the specified item associated with a key from the <see cref="T:Microsoft.Extensions.Caching.Memory.IMemoryCache" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RefreshAsync (string key, System.Threading.CancellationToken token = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RefreshAsync(string key, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.RefreshAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function RefreshAsync (key As String, Optional token As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member RefreshAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.RefreshAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="memoryDistributedCache.RefreshAsync (key, token)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.RefreshAsync(System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Memory</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">The key of the item to refresh.</param>
        <param name="token">The <see cref="T:System.Threading.CancellationToken" /> to use to cancel operation.</param>
        <summary>
            Asynchronously refreshes the specified item associated with a key from the <see cref="T:Microsoft.Extensions.Caching.Memory.IMemoryCache" />.
            </summary>
        <returns>The task for refreshing the specified key in the cache.</returns>
        <remarks>This method stores in the task it returns all non-usage exceptions that the method's synchronous counterpart can throw. If an exception is stored into the returned task, that exception will be thrown when the task is awaited. Usage exceptions, such as <see cref="T:System.ArgumentException" />, are still thrown synchronously. For the stored exceptions, see the exceptions thrown by <see cref="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Refresh(System.String)" />.</remarks>
        <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (key As String)" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; unit&#xA;override this.Remove : string -&gt; unit" Usage="memoryDistributedCache.Remove key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.Remove(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Memory</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key of the item to remove.</param>
        <summary>
            Removes the specified item associated with a key from the <see cref="T:Microsoft.Extensions.Caching.Memory.IMemoryCache" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveAsync (string key, System.Threading.CancellationToken token = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveAsync(string key, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.RemoveAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAsync (key As String, Optional token As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member RemoveAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.RemoveAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="memoryDistributedCache.RemoveAsync (key, token)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.RemoveAsync(System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Memory</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">The key of the item to remove.</param>
        <param name="token">The <see cref="T:System.Threading.CancellationToken" /> to use to cancel operation.</param>
        <summary>
            Asynchronously removes the specified item associated with a key from the <see cref="T:Microsoft.Extensions.Caching.Memory.IMemoryCache" />.
            </summary>
        <returns>The task for removing the specified key from the cache.</returns>
        <remarks>This method stores in the task it returns all non-usage exceptions that the method's synchronous counterpart can throw. If an exception is stored into the returned task, that exception will be thrown when the task is awaited. Usage exceptions, such as <see cref="T:System.ArgumentException" />, are still thrown synchronously. For the stored exceptions, see the exceptions thrown by <see cref="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Remove(System.String)" />.</remarks>
        <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (string key, byte[] value, Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, unsigned int8[] value, class Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Set(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (key As String, value As Byte(), options As DistributedCacheEntryOptions)" />
      <MemberSignature Language="F#" Value="abstract member Set : string * byte[] * Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions -&gt; unit&#xA;override this.Set : string * byte[] * Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions -&gt; unit" Usage="memoryDistributedCache.Set (key, value, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Set(System::String ^ key, cli::array &lt;System::Byte&gt; ^ value, Microsoft::Extensions::Caching::Distributed::DistributedCacheEntryOptions ^ options);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.Set(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Memory</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="options" Type="Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions" />
      </Parameters>
      <Docs>
        <param name="key">The key of the item to set.</param>
        <param name="value">The byte array value of the item to set.</param>
        <param name="options">The cache options for the item to set.</param>
        <summary>
            Sets the specified item associated with a key in the <see cref="T:Microsoft.Extensions.Caching.Memory.IMemoryCache" /> as a byte array.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetAsync (string key, byte[] value, Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions options, System.Threading.CancellationToken token = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetAsync(string key, unsigned int8[] value, class Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions options, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.SetAsync(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetAsync (key As String, value As Byte(), options As DistributedCacheEntryOptions, Optional token As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetAsync : string * byte[] * Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SetAsync : string * byte[] * Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="memoryDistributedCache.SetAsync (key, value, options, token)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.SetAsync(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Memory</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="options" Type="Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">The key of the item to set.</param>
        <param name="value">The byte array value of the item to set.</param>
        <param name="options">The cache options for the item to set.</param>
        <param name="token">The <see cref="T:System.Threading.CancellationToken" /> to use to cancel operation.</param>
        <summary>
            Asynchronously sets the specified item associated with a key in the <see cref="T:Microsoft.Extensions.Caching.Memory.IMemoryCache" /> as a byte array.
            </summary>
        <returns>The task for setting the byte array value associated with the specified key in the cache.</returns>
        <remarks>This method stores in the task it returns all non-usage exceptions that the method's synchronous counterpart can throw. If an exception is stored into the returned task, that exception will be thrown when the task is awaited. Usage exceptions, such as <see cref="T:System.ArgumentException" />, are still thrown synchronously. For the stored exceptions, see the exceptions thrown by <see cref="M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Set(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)" />.</remarks>
        <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

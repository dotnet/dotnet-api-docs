<Type Name="NamedWaitHandleOptions" FullName="System.Threading.NamedWaitHandleOptions">
  <TypeSignature Language="C#" Value="public struct NamedWaitHandleOptions" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit NamedWaitHandleOptions extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Threading.NamedWaitHandleOptions" />
  <TypeSignature Language="VB.NET" Value="Public Structure NamedWaitHandleOptions" />
  <TypeSignature Language="F#" Value="type NamedWaitHandleOptions = struct" />
  <TypeSignature Language="C++ CLI" Value="public value class NamedWaitHandleOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a set of options for named synchronization objects that are wait handles and can be shared between processes, such as <see cref="T:System.Threading.Mutex" />, <see cref="T:System.Threading.Semaphore" />, and <see cref="T:System.Threading.EventWaitHandle" />.</summary>
    <remarks>
          <format type="text/markdown"><![CDATA[

This structure is used with constructors and methods that create or open named synchronization objects that are wait handles and can be shared between processes, such as <xref:System.Threading.Mutex>, <xref:System.Threading.Semaphore>, and <xref:System.Threading.EventWaitHandle>.

As an alternative to the methods that accept a <xref:System.Threading.NamedWaitHandleOptions> parameter to set the scope, methods that only take a `name` parameter can prefix the parameter with `Global\` or `Local\` to specify a namespace. When the `Global` namespace is specified, the synchronization object can be shared with any processes on the system. When the `Local` namespace is specified, which is also the default when no namespace is specified, the synchronization object can be shared with processes in the same session. On Windows, a session is a login session, and services typically run in a different non-interactive session. On Unix-like operating systems, each shell has its own session. Session-local synchronization objects might be appropriate for synchronizing between processes with a parent/child relationship where they all run in the same session. For more information about synchronization object names on Windows, see [Object Names](https://learn.microsoft.com/windows/win32/sync/object-names).

 ]]></format>
        </remarks>
  </Docs>
  <Members>
    <Member MemberName="CurrentSessionOnly">
      <MemberSignature Language="C#" Value="public bool CurrentSessionOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CurrentSessionOnly" />
      <MemberSignature Language="DocId" Value="P:System.Threading.NamedWaitHandleOptions.CurrentSessionOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentSessionOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.CurrentSessionOnly : bool with get, set" Usage="System.Threading.NamedWaitHandleOptions.CurrentSessionOnly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CurrentSessionOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the named synchronization object is limited in access to the current session.</summary>
        <value>
          <see langword="true" /> if the named synchronization object is limited in access to the current session; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

Each session has namespaces for the object's name that are used when the option is `true`. These session-scoped namespaces are distinct from session-scoped namespaces for other sessions, and also distinct from namespaces used when the option is `false`.

If the option is `true` when creating a named synchronization object, the object is limited in scope to the current session, and can't be opened by processes running in different sessions.

If the option is `false` when creating a named synchronization object, the object is not limited in access to a session.

On Windows, a session is a Terminal Services session. On Unix-like operating systems, a session is typically a shell session, where each shell gets its own session in which processes started from the shell run.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUserOnly">
      <MemberSignature Language="C#" Value="public bool CurrentUserOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CurrentUserOnly" />
      <MemberSignature Language="DocId" Value="P:System.Threading.NamedWaitHandleOptions.CurrentUserOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentUserOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.CurrentUserOnly : bool with get, set" Usage="System.Threading.NamedWaitHandleOptions.CurrentUserOnly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CurrentUserOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the named synchronization object is limited in access to the current user.</summary>
        <value>
          <see langword="true" /> if the named synchronization object is limited in access to the current user; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

If the option is `true` when creating a named synchronization object, the object is limited in access to the calling user. If the option is `true` when opening an existing named synchronization object, the object's access controls are verified for the calling user.

If the option is `false` when creating a named synchronization object, the object is not limited in access to a user.

On Unix-like operating systems, each user has namespaces for the object's name that are used when the option is `true`. These user-scoped namespaces are distinct from user-scoped namespaces for other users, and also distinct from namespaces used when the option is `false`.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="HttpProtocolException" FullName="System.Net.Http.HttpProtocolException">
  <TypeSignature Language="C#" Value="public sealed class HttpProtocolException : System.IO.IOException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpProtocolException extends System.IO.IOException" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpProtocolException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpProtocolException&#xA;Inherits IOException" />
  <TypeSignature Language="F#" Value="type HttpProtocolException = class&#xA;    inherit IOException" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpProtocolException sealed : System::IO::IOException" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.IOException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The exception thrown when an HTTP/2 or an HTTP/3 protocol error occurs.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

When calling <xref:System.Net.Http.HttpClient> or <xref:System.Net.Http.SocketsHttpHandler> methods, <xref:System.Net.Http.HttpProtocolException> will be the inner exception of
            <xref:System.Net.Http.HttpRequestException> if a protocol error occurs.
            When calling <xref:System.IO.Stream> methods on the stream returned by <xref:System.Net.Http.HttpContent.ReadAsStream> or
            <xref:System.Net.Http.HttpContent.ReadAsStreamAsync(System.Threading.CancellationToken)>, <xref:System.Net.Http.HttpProtocolException> can be thrown directly.

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpProtocolException (long errorCode, string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 errorCode, string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpProtocolException.#ctor(System.Int64,System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (errorCode As Long, message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="new System.Net.Http.HttpProtocolException : int64 * string * Exception -&gt; System.Net.Http.HttpProtocolException" Usage="new System.Net.Http.HttpProtocolException (errorCode, message, innerException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpProtocolException(long errorCode, System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int64" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="errorCode">The HTTP/2 or HTTP/3 error code.</param>
        <param name="message">The error message that explains the reason for the exception.</param>
        <param name="innerException">The exception that is the cause of the current exception.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Http.HttpProtocolException" /> class with the specified error code, message, and inner exception.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorCode">
      <MemberSignature Language="C#" Value="public long ErrorCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ErrorCode" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpProtocolException.ErrorCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorCode As Long" />
      <MemberSignature Language="F#" Value="member this.ErrorCode : int64" Usage="System.Net.Http.HttpProtocolException.ErrorCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ErrorCode { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the HTTP/2 or HTTP/3 error code associated with this exception.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="CollectedMeasurement&lt;T&gt;" FullName="Microsoft.Extensions.Diagnostics.Metrics.Testing.CollectedMeasurement&lt;T&gt;">
  <TypeSignature Language="C#" Value="public sealed class CollectedMeasurement&lt;T&gt; where T : struct" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CollectedMeasurement`1&lt;struct .ctor (class System.ValueType) T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Diagnostics.Metrics.Testing.CollectedMeasurement`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CollectedMeasurement(Of T)" />
  <TypeSignature Language="F#" Value="type CollectedMeasurement&lt;'T (requires 'T : struct)&gt; = class" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : value classpublic ref class CollectedMeasurement sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.4.0.0</AssemblyVersion>
    <AssemblyVersion>8.5.0.0</AssemblyVersion>
    <AssemblyVersion>8.6.0.0</AssemblyVersion>
    <AssemblyVersion>8.7.0.0</AssemblyVersion>
    <AssemblyVersion>8.8.0.0</AssemblyVersion>
    <AssemblyVersion>8.9.1.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{DebuggerToString(),nq}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{DebuggerToString(),nq}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">The type of metric measurement value.</typeparam>
    <summary>
            Represents a single measurement performed by an instrument.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ContainsTags">
      <MemberSignature Language="C#" Value="public bool ContainsTags (params System.Collections.Generic.KeyValuePair&lt;string,object&gt;[] tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsTags(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;[] tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Metrics.Testing.CollectedMeasurement`1.ContainsTags(System.Collections.Generic.KeyValuePair{System.String,System.Object}[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsTags (ParamArray tags As KeyValuePair(Of String, Object)()) As Boolean" />
      <MemberSignature Language="F#" Value="member this.ContainsTags : System.Collections.Generic.KeyValuePair&lt;string, obj&gt;[] -&gt; bool" Usage="collectedMeasurement.ContainsTags tags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsTags(... cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ tags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 0, 1, 2 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 0, 1, 2 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="tags">The set of tags to check.</param>
        <summary>
            Checks that the measurement includes a specific set of tags with specific values.
            </summary>
        <returns>
          <see langword="true" /> if all the tags exist in the measurement with matching values, otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsTags">
      <MemberSignature Language="C#" Value="public bool ContainsTags (params string[] tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsTags(string[] tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Metrics.Testing.CollectedMeasurement`1.ContainsTags(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsTags (ParamArray tags As String()) As Boolean" />
      <MemberSignature Language="F#" Value="member this.ContainsTags : string[] -&gt; bool" Usage="collectedMeasurement.ContainsTags tags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsTags(... cli::array &lt;System::String ^&gt; ^ tags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="tags">The set of tag names to check.</param>
        <summary>
            Checks that the measurement includes a specific set of tags with any value.
            </summary>
        <returns>
          <see langword="true" /> if all the tags exist in the measurement, otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesTags">
      <MemberSignature Language="C#" Value="public bool MatchesTags (params System.Collections.Generic.KeyValuePair&lt;string,object&gt;[] tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MatchesTags(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;[] tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Metrics.Testing.CollectedMeasurement`1.MatchesTags(System.Collections.Generic.KeyValuePair{System.String,System.Object}[])" />
      <MemberSignature Language="VB.NET" Value="Public Function MatchesTags (ParamArray tags As KeyValuePair(Of String, Object)()) As Boolean" />
      <MemberSignature Language="F#" Value="member this.MatchesTags : System.Collections.Generic.KeyValuePair&lt;string, obj&gt;[] -&gt; bool" Usage="collectedMeasurement.MatchesTags tags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MatchesTags(... cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ tags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 0, 1, 2 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 0, 1, 2 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="tags">The set of tags to check.</param>
        <summary>
            Checks that the measurement has an exactly matching set of tags with specific values.
            </summary>
        <returns>
          <see langword="true" /> if all the tags exist in the measurement with matching values, otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesTags">
      <MemberSignature Language="C#" Value="public bool MatchesTags (params string[] tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MatchesTags(string[] tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Metrics.Testing.CollectedMeasurement`1.MatchesTags(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function MatchesTags (ParamArray tags As String()) As Boolean" />
      <MemberSignature Language="F#" Value="member this.MatchesTags : string[] -&gt; bool" Usage="collectedMeasurement.MatchesTags tags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MatchesTags(... cli::array &lt;System::String ^&gt; ^ tags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="tags">The set of tag names to check.</param>
        <summary>
            Checks that the measurement has a exactly matching set of tags with any value.
            </summary>
        <returns>
          <see langword="true" /> if all the tag names exist in the measurement, otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tags">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,object?&gt; Tags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; Tags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Metrics.Testing.CollectedMeasurement`1.Tags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tags As IReadOnlyDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="member this.Tags : System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt;" Usage="Microsoft.Extensions.Diagnostics.Metrics.Testing.CollectedMeasurement&lt;'T (requires 'T : struct)&gt;.Tags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, System::Object ^&gt; ^ Tags { System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 1, 2 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 1, 2 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the measurement's dimensions.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public DateTimeOffset Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset Timestamp" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Metrics.Testing.CollectedMeasurement`1.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As DateTimeOffset" />
      <MemberSignature Language="F#" Value="member this.Timestamp : DateTimeOffset" Usage="Microsoft.Extensions.Diagnostics.Metrics.Testing.CollectedMeasurement&lt;'T (requires 'T : struct)&gt;.Timestamp" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTimeOffset Timestamp { DateTimeOffset get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a timestamp indicating when the measurement was recorded.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public T Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Metrics.Testing.CollectedMeasurement`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As T" />
      <MemberSignature Language="F#" Value="member this.Value : 'T" Usage="Microsoft.Extensions.Diagnostics.Metrics.Testing.CollectedMeasurement&lt;'T (requires 'T : struct)&gt;.Value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Value { T get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a measurement's value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="MetricCollector&lt;T&gt;" FullName="Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector&lt;T&gt;">
  <TypeSignature Language="C#" Value="public sealed class MetricCollector&lt;T&gt; : IDisposable where T : struct" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MetricCollector`1&lt;struct .ctor (class System.ValueType) T&gt; extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MetricCollector(Of T)&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type MetricCollector&lt;'T (requires 'T : struct)&gt; = class&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : value classpublic ref class MetricCollector sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.4.0.0</AssemblyVersion>
    <AssemblyVersion>8.5.0.0</AssemblyVersion>
    <AssemblyVersion>8.6.0.0</AssemblyVersion>
    <AssemblyVersion>8.7.0.0</AssemblyVersion>
    <AssemblyVersion>8.8.0.0</AssemblyVersion>
    <AssemblyVersion>8.9.1.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{_measurements.Count} measurements")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{_measurements.Count} measurements")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">The type of metric data being recorded.</typeparam>
    <summary>
            Collects the measurements published from an <see cref="T:System.Diagnostics.Metrics.Instrument`1" /> or <see cref="T:System.Diagnostics.Metrics.ObservableInstrument`1" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetricCollector (System.Diagnostics.Metrics.Instrument&lt;T&gt; instrument, TimeProvider? timeProvider = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.Metrics.Instrument`1&lt;!T&gt; instrument, class System.TimeProvider timeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector`1.#ctor(System.Diagnostics.Metrics.Instrument{`0},System.TimeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instrument As Instrument(Of T), Optional timeProvider As TimeProvider = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector&lt;'T (requires 'T : struct)&gt; : System.Diagnostics.Metrics.Instrument&lt;'T (requires 'T : struct)&gt; * TimeProvider -&gt; Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector&lt;'T (requires 'T : struct)&gt;" Usage="new Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector&lt;'T (requires 'T : struct)&gt; (instrument, timeProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="instrument" Type="System.Diagnostics.Metrics.Instrument&lt;T&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 0 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 0 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="timeProvider" Type="System.TimeProvider" />
      </Parameters>
      <Docs>
        <param name="instrument">The <see cref="T:System.Diagnostics.Metrics.Instrument`1" /> to record measurements from.</param>
        <param name="timeProvider">The time provider to use, or <see langword="null" /> to use the system time provider.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector`1" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetricCollector (System.Diagnostics.Metrics.ObservableInstrument&lt;T&gt; instrument, TimeProvider? timeProvider = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.Metrics.ObservableInstrument`1&lt;!T&gt; instrument, class System.TimeProvider timeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector`1.#ctor(System.Diagnostics.Metrics.ObservableInstrument{`0},System.TimeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instrument As ObservableInstrument(Of T), Optional timeProvider As TimeProvider = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector&lt;'T (requires 'T : struct)&gt; : System.Diagnostics.Metrics.ObservableInstrument&lt;'T (requires 'T : struct)&gt; * TimeProvider -&gt; Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector&lt;'T (requires 'T : struct)&gt;" Usage="new Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector&lt;'T (requires 'T : struct)&gt; (instrument, timeProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="instrument" Type="System.Diagnostics.Metrics.ObservableInstrument&lt;T&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 0 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 0 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="timeProvider" Type="System.TimeProvider" />
      </Parameters>
      <Docs>
        <param name="instrument">The <see cref="T:System.Diagnostics.Metrics.ObservableInstrument`1" /> to record measurements from.</param>
        <param name="timeProvider">The time provider to use, or <see langword="null" /> to use the system time provider.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector`1" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetricCollector (System.Diagnostics.Metrics.Meter meter, string instrumentName, TimeProvider? timeProvider = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.Metrics.Meter meter, string instrumentName, class System.TimeProvider timeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector`1.#ctor(System.Diagnostics.Metrics.Meter,System.String,System.TimeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (meter As Meter, instrumentName As String, Optional timeProvider As TimeProvider = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector&lt;'T (requires 'T : struct)&gt; : System.Diagnostics.Metrics.Meter * string * TimeProvider -&gt; Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector&lt;'T (requires 'T : struct)&gt;" Usage="new Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector&lt;'T (requires 'T : struct)&gt; (meter, instrumentName, timeProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="meter" Type="System.Diagnostics.Metrics.Meter" />
        <Parameter Name="instrumentName" Type="System.String" />
        <Parameter Name="timeProvider" Type="System.TimeProvider">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="meter">The meter that publishes the instrument to record.</param>
        <param name="instrumentName">The name of the instrument to record.</param>
        <param name="timeProvider">The time provider to use, or <see langword="null" /> to use the system time provider.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector`1" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetricCollector (object? meterScope, string meterName, string instrumentName, TimeProvider? timeProvider = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object meterScope, string meterName, string instrumentName, class System.TimeProvider timeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector`1.#ctor(System.Object,System.String,System.String,System.TimeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (meterScope As Object, meterName As String, instrumentName As String, Optional timeProvider As TimeProvider = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector&lt;'T (requires 'T : struct)&gt; : obj * string * string * TimeProvider -&gt; Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector&lt;'T (requires 'T : struct)&gt;" Usage="new Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector&lt;'T (requires 'T : struct)&gt; (meterScope, meterName, instrumentName, timeProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="meterScope" Type="System.Object">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="meterName" Type="System.String" />
        <Parameter Name="instrumentName" Type="System.String" />
        <Parameter Name="timeProvider" Type="System.TimeProvider">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="meterScope">The scope of the meter that publishes the instrument to record.
            Take caution when using Meters in the global scope (scope == null). This interacts with
            static mutable data and tests doing this should not be run in parallel with each other.
            </param>
        <param name="meterName">The name of the meter that publishes the instrument to record.</param>
        <param name="instrumentName">The name of the instrument to record.</param>
        <param name="timeProvider">The time provider to use, or <see langword="null" /> to use the system time provider.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector`1" /> class.
            </summary>
        <remarks>
            Both the meter name and scope are used to identity the meter of interest.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="metricCollector.Clear " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Removes all accumulated measurements from the collector.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="metricCollector.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Disposes the <see cref="T:Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector`1" /> and stops recording measurements.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMeasurementSnapshot">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.Diagnostics.Metrics.Testing.CollectedMeasurement&lt;T&gt;&gt; GetMeasurementSnapshot (bool clear = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Extensions.Diagnostics.Metrics.Testing.CollectedMeasurement`1&lt;!T&gt;&gt; GetMeasurementSnapshot(bool clear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector`1.GetMeasurementSnapshot(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMeasurementSnapshot (Optional clear As Boolean = false) As IReadOnlyList(Of CollectedMeasurement(Of T))" />
      <MemberSignature Language="F#" Value="member this.GetMeasurementSnapshot : bool -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.Diagnostics.Metrics.Testing.CollectedMeasurement&lt;'T&gt;&gt;" Usage="metricCollector.GetMeasurementSnapshot clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Extensions.Diagnostics.Metrics.Testing.CollectedMeasurement&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clear" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="clear">Setting this to <see langword="true" /> will atomically clear the set of accumulated measurements.</param>
        <summary>
            Gets a snapshot of measurements collected by this collector.
            </summary>
        <returns>The measurements recorded by this collector, ordered by recording time.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instrument">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Metrics.Instrument? Instrument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.Metrics.Instrument Instrument" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector`1.Instrument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Instrument As Instrument" />
      <MemberSignature Language="F#" Value="member this.Instrument : System.Diagnostics.Metrics.Instrument" Usage="Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector&lt;'T (requires 'T : struct)&gt;.Instrument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Metrics::Instrument ^ Instrument { System::Diagnostics::Metrics::Instrument ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Metrics.Instrument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector`1.Instrument" /> that is being recorded.
            </summary>
        <value>To be added.</value>
        <remarks>
            This may be <see langword="null" /> until the instrument is published.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastMeasurement">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Diagnostics.Metrics.Testing.CollectedMeasurement&lt;T&gt;? LastMeasurement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Diagnostics.Metrics.Testing.CollectedMeasurement`1&lt;!T&gt; LastMeasurement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector`1.LastMeasurement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastMeasurement As CollectedMeasurement(Of T)" />
      <MemberSignature Language="F#" Value="member this.LastMeasurement : Microsoft.Extensions.Diagnostics.Metrics.Testing.CollectedMeasurement&lt;'T (requires 'T : struct)&gt;" Usage="Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector&lt;'T (requires 'T : struct)&gt;.LastMeasurement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Diagnostics::Metrics::Testing::CollectedMeasurement&lt;T&gt; ^ LastMeasurement { Microsoft::Extensions::Diagnostics::Metrics::Testing::CollectedMeasurement&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-8.0;net-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 0 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 0 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Diagnostics.Metrics.Testing.CollectedMeasurement&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the latest measurement collected, if any.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordObservableInstruments">
      <MemberSignature Language="C#" Value="public void RecordObservableInstruments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RecordObservableInstruments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector`1.RecordObservableInstruments" />
      <MemberSignature Language="VB.NET" Value="Public Sub RecordObservableInstruments ()" />
      <MemberSignature Language="F#" Value="member this.RecordObservableInstruments : unit -&gt; unit" Usage="metricCollector.RecordObservableInstruments " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RecordObservableInstruments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Scan all registered observable instruments.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForMeasurementsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WaitForMeasurementsAsync (int minCount, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WaitForMeasurementsAsync(int32 minCount, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector`1.WaitForMeasurementsAsync(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForMeasurementsAsync (minCount As Integer, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.WaitForMeasurementsAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="metricCollector.WaitForMeasurementsAsync (minCount, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minCount" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="minCount">The minimum number of measurements to wait for.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Returns a task that completes when the collector has collected a minimum number of measurements.
            </summary>
        <returns>A task that completes when the collector has collected the requisite number of measurements.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForMeasurementsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WaitForMeasurementsAsync (int minCount, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WaitForMeasurementsAsync(int32 minCount, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Metrics.Testing.MetricCollector`1.WaitForMeasurementsAsync(System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForMeasurementsAsync (minCount As Integer, timeout As TimeSpan) As Task" />
      <MemberSignature Language="F#" Value="member this.WaitForMeasurementsAsync : int * TimeSpan -&gt; System.Threading.Tasks.Task" Usage="metricCollector.WaitForMeasurementsAsync (minCount, timeout)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WaitForMeasurementsAsync(int minCount, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Testing</AssemblyName>
        <AssemblyVersion>8.9.1.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minCount" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="minCount">The minimum number of measurements to wait for.</param>
        <param name="timeout">How long to wait.</param>
        <summary>
            Returns a task that completes when the collector has collected a minimum number of measurements.
            </summary>
        <returns>A task that completes when the collector has collected the requisite number of measurements.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

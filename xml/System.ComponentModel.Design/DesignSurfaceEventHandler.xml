<Type Name="DesignSurfaceEventHandler" FullName="System.ComponentModel.Design.DesignSurfaceEventHandler">
  <TypeSignature Language="C#" Value="public delegate void DesignSurfaceEventHandler(object sender, DesignSurfaceEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DesignSurfaceEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignSurfaceEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DesignSurfaceEventHandler(sender As Object, e As DesignSurfaceEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DesignSurfaceEventHandler(System::Object ^ sender, DesignSurfaceEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type DesignSurfaceEventHandler = delegate of obj * DesignSurfaceEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.Design.DesignSurfaceEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">The source of the event.</param>
    <param name="e">A <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" /> that contains the event data.</param>
    <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> event of a <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you create a <xref:System.ComponentModel.Design.DesignSurfaceEventHandler> delegate, you identify a method to handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>

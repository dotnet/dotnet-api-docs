<Type Name="ColorPalette" FullName="System.Drawing.Imaging.ColorPalette">
  <TypeSignature Language="C#" Value="public sealed class ColorPalette" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ColorPalette extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Imaging.ColorPalette" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ColorPalette" />
  <TypeSignature Language="C++ CLI" Value="public ref class ColorPalette sealed" />
  <TypeSignature Language="F#" Value="type ColorPalette = class" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Defines an array of colors that make up a color palette. The colors are 32-bit ARGB colors. Not inheritable.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You are not allowed to construct a <xref:System.Drawing.Imaging.ColorPalette> object directly. If you created a <xref:System.Drawing.Imaging.ColorPalette> object, you could then manipulate the palette size for a particular image, which is not allowed. Use the <xref:System.Drawing.Image.Palette%2A?displayProperty=nameWithType> property to obtain a <xref:System.Drawing.Imaging.ColorPalette> object.  
  
 The colors in the palette are limited to 32-bit ARGB colors. A 32-bit ARGB color has 8 bits each for alpha, red, green, and blue values. The lowest 8 bits make up the blue bit, the next 8 bits are green, the next 8 bits are red, and the most significant 8 bits are alpha. This means each component can vary from 0 to 255. Fully on is 255 and fully off is 0. Alpha is used to make the color value transparent (alpha = 0) or opaque (alpha = 255). The number of intensity levels in the image can be increased without increasing the number of colors used. This process creates what is called a halftone, and it offers increased contrast at a cost of decreased resolution.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Entries">
      <MemberSignature Language="C#" Value="public System.Drawing.Color[] Entries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color[] Entries" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.ColorPalette.Entries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entries As Color()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::Color&gt; ^ Entries { cli::array &lt;System::Drawing::Color&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Entries : System.Drawing.Color[]" Usage="System.Drawing.Imaging.ColorPalette.Entries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an array of <see cref="T:System.Drawing.Color" /> structures.</summary>
        <value>The array of <see cref="T:System.Drawing.Color" /> structure that make up this <see cref="T:System.Drawing.Imaging.ColorPalette" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public int Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Flags" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.ColorPalette.Flags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Flags As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Flags { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Flags : int" Usage="System.Drawing.Imaging.ColorPalette.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that specifies how to interpret the color information in the array of colors.</summary>
        <value>The following flag values are valid:  
  
 0x00000001  
 The color values in the array contain alpha information.  
  
 0x00000002  
 The colors in the array are grayscale values.  
  
 0x00000004  
 The colors in the array are halftone values.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

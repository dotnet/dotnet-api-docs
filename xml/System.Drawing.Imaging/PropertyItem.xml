<Type Name="PropertyItem" FullName="System.Drawing.Imaging.PropertyItem">
  <TypeSignature Language="C#" Value="public sealed class PropertyItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PropertyItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Imaging.PropertyItem" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyItem sealed" />
  <TypeSignature Language="F#" Value="type PropertyItem = class" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Encapsulates a metadata property to be included in an image file. Not inheritable.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The data consists of: an identifier, the length (in bytes) of the property, the property type, and a pointer to the property value.  
  
 A <xref:System.Drawing.Imaging.PropertyItem> is not intended to be used as a stand-alone object. A <xref:System.Drawing.Imaging.PropertyItem> object is intended to be used by classes that are derived from <xref:System.Drawing.Image>. A <xref:System.Drawing.Imaging.PropertyItem> object is used to retrieve and to change the metadata of existing image files, not to create the metadata. Therefore, the <xref:System.Drawing.Imaging.PropertyItem> class does not have a defined `Public` constructor, and you cannot create an instance of a <xref:System.Drawing.Imaging.PropertyItem> object.  
  
 To work around the absence of a `Public` constructor, use an existing <xref:System.Drawing.Imaging.PropertyItem> object instead of creating a new instance of the <xref:System.Drawing.Imaging.PropertyItem> class. For more information, see <xref:System.Drawing.Image.GetPropertyItem%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 The following code example demonstrates how to read and display the metadata in an image file using the <xref:System.Drawing.Imaging.PropertyItem> class and the <xref:System.Drawing.Image.PropertyItems%2A?displayProperty=nameWithType> property.  
  
 This example is designed to be used in a Windows Form that imports the <xref:System.Drawing.Imaging?displayProperty=nameWithType> namespace. Paste the code into the form and change the path to `fakePhoto.jpg` to point to an image file on your system. Call the `ExtractMetaData` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.ImageExample#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ImageExample#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ImageExample#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.PropertyItem.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Id : int with get, set" Usage="System.Drawing.Imaging.PropertyItem.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the ID of the property.</summary>
        <value>The integer that represents the ID of the property.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following table shows the property tags and their IDs. For more information about property tags, see [Image Property Tag Constants](http://go.microsoft.com/fwlink/?LinkId=145387). For a description of each property tag, see [Property Item Descriptions](http://go.microsoft.com/fwlink/?LinkId=145383).  
  
|ID|Property tag|  
|--------|------------------|  
|0x0000|PropertyTagGpsVer|  
|0x0001|PropertyTagGpsLatitudeRef|  
|0x0002|PropertyTagGpsLatitude|  
|0x0003|PropertyTagGpsLongitudeRef|  
|0x0004|PropertyTagGpsLongitude|  
|0x0005|PropertyTagGpsAltitudeRef|  
|0x0006|PropertyTagGpsAltitude|  
|0x0007|PropertyTagGpsGpsTime|  
|0x0008|PropertyTagGpsGpsSatellites|  
|0x0009|PropertyTagGpsGpsStatus|  
|0x000A|PropertyTagGpsGpsMeasureMode|  
|0x000B|PropertyTagGpsGpsDop|  
|0x000C|PropertyTagGpsSpeedRef|  
|0x000D|PropertyTagGpsSpeed|  
|0x000E|PropertyTagGpsTrackRef|  
|0x000F|PropertyTagGpsTrack|  
|0x0010|PropertyTagGpsImgDirRef|  
|0x0011|PropertyTagGpsImgDir|  
|0x0012|PropertyTagGpsMapDatum|  
|0x0013|PropertyTagGpsDestLatRef|  
|0x0014|PropertyTagGpsDestLat|  
|0x0015|PropertyTagGpsDestLongRef|  
|0x0016|PropertyTagGpsDestLong|  
|0x0017|PropertyTagGpsDestBearRef|  
|0x0018|PropertyTagGpsDestBear|  
|0x0019|PropertyTagGpsDestDistRef|  
|0x001A|PropertyTagGpsDestDist|  
|0x00FE|PropertyTagNewSubfileType|  
|0x00FF|PropertyTagSubfileType|  
|0x0100|PropertyTagImageWidth|  
|0x0101|PropertyTagImageHeight|  
|0x0102|PropertyTagBitsPerSample|  
|0x0103|PropertyTagCompression|  
|0x0106|PropertyTagPhotometricInterp|  
|0x0107|PropertyTagThreshHolding|  
|0x0108|PropertyTagCellWidth|  
|0x0109|PropertyTagCellHeight|  
|0x010A|PropertyTagFillOrder|  
|0x010D|PropertyTagDocumentName|  
|0x010E|PropertyTagImageDescription|  
|0x010F|PropertyTagEquipMake|  
|0x0110|PropertyTagEquipModel|  
|0x0111|PropertyTagStripOffsets|  
|0x0112|PropertyTagOrientation|  
|0x0115|PropertyTagSamplesPerPixel|  
|0x0116|PropertyTagRowsPerStrip|  
|0x0117|PropertyTagStripBytesCount|  
|0x0118|PropertyTagMinSampleValue|  
|0x0119|PropertyTagMaxSampleValue|  
|0x011A|PropertyTagXResolution|  
|0x011B|PropertyTagYResolution|  
|0x011C|PropertyTagPlanarConfig|  
|0x011D|PropertyTagPageName|  
|0x011E|PropertyTagXPosition|  
|0x011F|PropertyTagYPosition|  
|0x0120|PropertyTagFreeOffset|  
|0x0121|PropertyTagFreeByteCounts|  
|0x0122|PropertyTagGrayResponseUnit|  
|0x0123|PropertyTagGrayResponseCurve|  
|0x0124|PropertyTagT4Option|  
|0x0125|PropertyTagT6Option|  
|0x0128|PropertyTagResolutionUnit|  
|0x0129|PropertyTagPageNumber|  
|0x012D|PropertyTagTransferFunction|  
|0x0131|PropertyTagSoftwareUsed|  
|0x0132|PropertyTagDateTime|  
|0x013B|PropertyTagArtist|  
|0x013C|PropertyTagHostComputer|  
|0x013D|PropertyTagPredictor|  
|0x013E|PropertyTagWhitePoint|  
|0x013F|PropertyTagPrimaryChromaticities|  
|0x0140|PropertyTagColorMap|  
|0x0141|PropertyTagHalftoneHints|  
|0x0142|PropertyTagTileWidth|  
|0x0143|PropertyTagTileLength|  
|0x0144|PropertyTagTileOffset|  
|0x0145|PropertyTagTileByteCounts|  
|0x014C|PropertyTagInkSet|  
|0x014D|PropertyTagInkNames|  
|0x014E|PropertyTagNumberOfInks|  
|0x0150|PropertyTagDotRange|  
|0x0151|PropertyTagTargetPrinter|  
|0x0152|PropertyTagExtraSamples|  
|0x0153|PropertyTagSampleFormat|  
|0x0154|PropertyTagSMinSampleValue|  
|0x0155|PropertyTagSMaxSampleValue|  
|0x0156|PropertyTagTransferRange|  
|0x0200|PropertyTagJPEGProc|  
|0x0201|PropertyTagJPEGInterFormat|  
|0x0202|PropertyTagJPEGInterLength|  
|0x0203|PropertyTagJPEGRestartInterval|  
|0x0205|PropertyTagJPEGLosslessPredictors|  
|0x0206|PropertyTagJPEGPointTransforms|  
|0x0207|PropertyTagJPEGQTables|  
|0x0208|PropertyTagJPEGDCTables|  
|0x0209|PropertyTagJPEGACTables|  
|0x0211|PropertyTagYCbCrCoefficients|  
|0x0212|PropertyTagYCbCrSubsampling|  
|0x0213|PropertyTagYCbCrPositioning|  
|0x0214|PropertyTagREFBlackWhite|  
|0x0301|PropertyTagGamma|  
|0x0302|PropertyTagICCProfileDescriptor|  
|0x0303|PropertyTagSRGBRenderingIntent|  
|0x0320|PropertyTagImageTitle|  
|0x5001|PropertyTagResolutionXUnit|  
|0x5002|PropertyTagResolutionYUnit|  
|0x5003|PropertyTagResolutionXLengthUnit|  
|0x5004|PropertyTagResolutionYLengthUnit|  
|0x5005|PropertyTagPrintFlags|  
|0x5006|PropertyTagPrintFlagsVersion|  
|0x5007|PropertyTagPrintFlagsCrop|  
|0x5008|PropertyTagPrintFlagsBleedWidth|  
|0x5009|PropertyTagPrintFlagsBleedWidthScale|  
|0x500A|PropertyTagHalftoneLPI|  
|0x500B|PropertyTagHalftoneLPIUnit|  
|0x500C|PropertyTagHalftoneDegree|  
|0x500D|PropertyTagHalftoneShape|  
|0x500E|PropertyTagHalftoneMisc|  
|0x500F|PropertyTagHalftoneScreen|  
|0x5010|PropertyTagJPEGQuality|  
|0x5011|PropertyTagGridSize|  
|0x5012|PropertyTagThumbnailFormat|  
|0x5013|PropertyTagThumbnailWidth|  
|0x5014|PropertyTagThumbnailHeight|  
|0x5015|PropertyTagThumbnailColorDepth|  
|0x5016|PropertyTagThumbnailPlanes|  
|0x5017|PropertyTagThumbnailRawBytes|  
|0x5018|PropertyTagThumbnailSize|  
|0x5019|PropertyTagThumbnailCompressedSize|  
|0x501A|PropertyTagColorTransferFunction|  
|0x501B|PropertyTagThumbnailData|  
|0x5020|PropertyTagThumbnailImageWidth|  
|0x5021|PropertyTagThumbnailImageHeight|  
|0x5022|PropertyTagThumbnailBitsPerSample|  
|0x5023|PropertyTagThumbnailCompression|  
|0x5024|PropertyTagThumbnailPhotometricInterp|  
|0x5025|PropertyTagThumbnailImageDescription|  
|0x5026|PropertyTagThumbnailEquipMake|  
|0x5027|PropertyTagThumbnailEquipModel|  
|0x5028|PropertyTagThumbnailStripOffsets|  
|0x5029|PropertyTagThumbnailOrientation|  
|0x502A|PropertyTagThumbnailSamplesPerPixel|  
|0x502B|PropertyTagThumbnailRowsPerStrip|  
|0x502C|PropertyTagThumbnailStripBytesCount|  
|0x502D|PropertyTagThumbnailResolutionX|  
|0x502E|PropertyTagThumbnailResolutionY|  
|0x502F|PropertyTagThumbnailPlanarConfig|  
|0x5030|PropertyTagThumbnailResolutionUnit|  
|0x5031|PropertyTagThumbnailTransferFunction|  
|0x5032|PropertyTagThumbnailSoftwareUsed|  
|0x5033|PropertyTagThumbnailDateTime|  
|0x5034|PropertyTagThumbnailArtist|  
|0x5035|PropertyTagThumbnailWhitePoint|  
|0x5036|PropertyTagThumbnailPrimaryChromaticities|  
|0x5037|PropertyTagThumbnailYCbCrCoefficients|  
|0x5038|PropertyTagThumbnailYCbCrSubsampling|  
|0x5039|PropertyTagThumbnailYCbCrPositioning|  
|0x503A|PropertyTagThumbnailRefBlackWhite|  
|0x503B|PropertyTagThumbnailCopyRight|  
|0x5090|PropertyTagLuminanceTable|  
|0x5091|PropertyTagChrominanceTable|  
|0x5100|PropertyTagFrameDelay|  
|0x5101|PropertyTagLoopCount|  
|0x5102|PropertyTagGlobalPalette|  
|0x5103|PropertyTagIndexBackground|  
|0x5104|PropertyTagIndexTransparent|  
|0x5110|PropertyTagPixelUnit|  
|0x5111|PropertyTagPixelPerUnitX|  
|0x5112|PropertyTagPixelPerUnitY|  
|0x5113|PropertyTagPaletteHistogram|  
|0x8298|PropertyTagCopyright|  
|0x829A|PropertyTagExifExposureTime|  
|0x829D|PropertyTagExifFNumber|  
|0x8769|PropertyTagExifIFD|  
|0x8773|PropertyTagICCProfile|  
|0x8822|PropertyTagExifExposureProg|  
|0x8824|PropertyTagExifSpectralSense|  
|0x8825|PropertyTagGpsIFD|  
|0x8827|PropertyTagExifISOSpeed|  
|0x8828|PropertyTagExifOECF|  
|0x9000|PropertyTagExifVer|  
|0x9003|PropertyTagExifDTOrig|  
|0x9004|PropertyTagExifDTDigitized|  
|0x9101|PropertyTagExifCompConfig|  
|0x9102|PropertyTagExifCompBPP|  
|0x9201|PropertyTagExifShutterSpeed|  
|0x9202|PropertyTagExifAperture|  
|0x9203|PropertyTagExifBrightness|  
|0x9204|PropertyTagExifExposureBias|  
|0x9205|PropertyTagExifMaxAperture|  
|0x9206|PropertyTagExifSubjectDist|  
|0x9207|PropertyTagExifMeteringMode|  
|0x9208|PropertyTagExifLightSource|  
|0x9209|PropertyTagExifFlash|  
|0x920A|PropertyTagExifFocalLength|  
|0x927C|PropertyTagExifMakerNote|  
|0x9286|PropertyTagExifUserComment|  
|0x9290|PropertyTagExifDTSubsec|  
|0x9291|PropertyTagExifDTOrigSS|  
|0x9292|PropertyTagExifDTDigSS|  
|0xA000|PropertyTagExifFPXVer|  
|0xA001|PropertyTagExifColorSpace|  
|0xA002|PropertyTagExifPixXDim|  
|0xA003|PropertyTagExifPixYDim|  
|0xA004|PropertyTagExifRelatedWav|  
|0xA005|PropertyTagExifInterop|  
|0xA20B|PropertyTagExifFlashEnergy|  
|0xA20C|PropertyTagExifSpatialFR|  
|0xA20E|PropertyTagExifFocalXRes|  
|0xA20F|PropertyTagExifFocalYRes|  
|0xA210|PropertyTagExifFocalResUnit|  
|0xA214|PropertyTagExifSubjectLoc|  
|0xA215|PropertyTagExifExposureIndex|  
|0xA217|PropertyTagExifSensingMethod|  
|0xA300|PropertyTagExifFileSource|  
|0xA301|PropertyTagExifSceneType|  
|0xA302|PropertyTagExifCfaPattern|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public int Len { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Len" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.PropertyItem.Len" />
      <MemberSignature Language="VB.NET" Value="Public Property Len As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Len { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Len : int with get, set" Usage="System.Drawing.Imaging.PropertyItem.Len" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the length (in bytes) of the <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> property.</summary>
        <value>An integer that represents the length (in bytes) of the <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> byte array.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public short Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Type" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.PropertyItem.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short Type { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.Type : int16 with get, set" Usage="System.Drawing.Imaging.PropertyItem.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets an integer that defines the type of data contained in the <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> property.</summary>
        <value>An integer that defines the type of data contained in <see cref="P:System.Drawing.Imaging.PropertyItem.Value" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following table shows integers and the types they represent.  
  
|Integer|Represented Type|  
|-------------|----------------------|  
|1|Specifies that <xref:System.Drawing.Imaging.PropertyItem.Value%2A> is an array of bytes.|  
|2|Specifies that <xref:System.Drawing.Imaging.PropertyItem.Value%2A> is a null-terminated ASCII string. If you set the type data member to ASCII type, you should set the <xref:System.Drawing.Imaging.PropertyItem.Len%2A> property to the length of the string including the null terminator. For example, the string "Hello" would have a length of 6.|  
|3|Specifies that <xref:System.Drawing.Imaging.PropertyItem.Value%2A> is an array of unsigned short (16-bit) integers.|  
|4|Specifies that <xref:System.Drawing.Imaging.PropertyItem.Value%2A> is an array of unsigned long (32-bit) integers.|  
|5|Specifies that <xref:System.Drawing.Imaging.PropertyItem.Value%2A> data member is an array of pairs of unsigned long integers. Each pair represents a fraction; the first integer is the numerator and the second integer is the denominator.|  
|6|Specifies that <xref:System.Drawing.Imaging.PropertyItem.Value%2A> is an array of bytes that can hold values of any data type.|  
|7|Specifies that <xref:System.Drawing.Imaging.PropertyItem.Value%2A> is an array of signed long (32-bit) integers.|  
|10|Specifies that <xref:System.Drawing.Imaging.PropertyItem.Value%2A> is an array of pairs of signed long integers. Each pair represents a fraction; the first integer is the numerator and the second integer is the denominator.|  
  
 For more information about property tags, see "Image Property Tag Constants" in the MSDN library at http://msdn.microsoft.com/library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public byte[] Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Value" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.PropertyItem.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Value { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : byte[] with get, set" Usage="System.Drawing.Imaging.PropertyItem.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value of the property item.</summary>
        <value>A byte array that represents the value of the property item.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The byte array returned by the <xref:System.Drawing.Imaging.PropertyItem.Value%2A> property contains data in one of several different primitive types. To use the data, determine the data type using the <xref:System.Drawing.Imaging.PropertyItem.Type%2A> property and convert the byte array accordingly.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
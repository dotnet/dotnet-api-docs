<Type Name="ProjectChooseElement" FullName="Microsoft.Build.Construction.ProjectChooseElement">
  <TypeSignature Language="C#" Value="public class ProjectChooseElement : Microsoft.Build.Construction.ProjectElementContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectChooseElement extends Microsoft.Build.Construction.ProjectElementContainer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Construction.ProjectChooseElement" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectChooseElement&#xA;Inherits ProjectElementContainer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectChooseElement : Microsoft::Build::Construction::ProjectElementContainer" />
  <TypeSignature Language="F#" Value="type ProjectChooseElement = class&#xA;    inherit ProjectElementContainer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Construction.ProjectElementContainer</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("ProjectChooseElement (#Children={Count} HasOtherwise={OtherwiseElement != null})")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            ProjectChooseElement represents the Choose element in the MSBuild project.
            Currently it does not allow a Condition.
            </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Does not allow a Condition attribute.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public override string Condition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Condition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectChooseElement.Condition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Condition As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Condition { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Condition : string with get, set" Usage="Microsoft.Build.Construction.ProjectChooseElement.Condition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Condition should never be set, but the getter returns null instead of throwing 
            because a nonexistent condition is implicitly true
            </summary>
        <value>Always returns <see langword="null" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionLocation">
      <MemberSignature Language="C#" Value="public override Microsoft.Build.Construction.ElementLocation ConditionLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ConditionLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectChooseElement.ConditionLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConditionLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::Build::Construction::ElementLocation ^ ConditionLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Construction.ProjectChooseElement.ConditionLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This does not allow conditions, so it should not be called.
            </summary>
        <value>Returns <see cref="T:Microsoft.Build.Construction.ElementLocation" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNewInstance">
      <MemberSignature Language="C#" Value="protected override Microsoft.Build.Construction.ProjectElement CreateNewInstance (Microsoft.Build.Construction.ProjectRootElement owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.Build.Construction.ProjectElement CreateNewInstance(class Microsoft.Build.Construction.ProjectRootElement owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectChooseElement.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateNewInstance (owner As ProjectRootElement) As ProjectElement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override Microsoft::Build::Construction::ProjectElement ^ CreateNewInstance(Microsoft::Build::Construction::ProjectRootElement ^ owner);" />
      <MemberSignature Language="F#" Value="override this.CreateNewInstance : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Construction.ProjectElement" Usage="projectChooseElement.CreateNewInstance owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="Microsoft.Build.Construction.ProjectRootElement" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="owner">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="OtherwiseElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectOtherwiseElement OtherwiseElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectOtherwiseElement OtherwiseElement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectChooseElement.OtherwiseElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OtherwiseElement As ProjectOtherwiseElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectOtherwiseElement ^ OtherwiseElement { Microsoft::Build::Construction::ProjectOtherwiseElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OtherwiseElement : Microsoft.Build.Construction.ProjectOtherwiseElement" Usage="Microsoft.Build.Construction.ProjectChooseElement.OtherwiseElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectOtherwiseElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get any Otherwise child.
            May be null.
            </summary>
        <value>Any Otherwise child, or <see langword="null" /> if no Otherwise child exists.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WhenElements">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectWhenElement&gt; WhenElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectWhenElement&gt; WhenElements" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectChooseElement.WhenElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WhenElements As ICollection(Of ProjectWhenElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectWhenElement ^&gt; ^ WhenElements { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectWhenElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WhenElements : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectWhenElement&gt;" Usage="Microsoft.Build.Construction.ProjectChooseElement.WhenElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectWhenElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the When children.
            Will contain at least one entry.
            </summary>
        <value>All the When children. There is always at least one When child.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

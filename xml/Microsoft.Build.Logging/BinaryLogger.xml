<Type Name="BinaryLogger" FullName="Microsoft.Build.Logging.BinaryLogger">
  <TypeSignature Language="C#" Value="public sealed class BinaryLogger : Microsoft.Build.Framework.ILogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BinaryLogger extends System.Object implements class Microsoft.Build.Framework.ILogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Logging.BinaryLogger" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BinaryLogger&#xA;Implements ILogger" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryLogger sealed : Microsoft::Build::Framework::ILogger" />
  <TypeSignature Language="F#" Value="type BinaryLogger = class&#xA;    interface ILogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ILogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A logger that serializes all incoming BuildEventArgs in a compressed binary file (*.binlog). The file
            can later be played back and piped into other loggers (file, console, etc) to reconstruct the log contents
            as if a real build was happening. Additionally, this format can be read by tools for
            analysis or visualization. Since the file format preserves structure, tools don't have to parse
            text logs that erase a lot of useful information.
            </summary>
    <remarks>The logger is public so that it can be instantiated from MSBuild.exe via command-line switch.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryLogger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Logging.BinaryLogger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryLogger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectProjectImports">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Logging.BinaryLogger.ProjectImportsCollectionMode CollectProjectImports { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Logging.BinaryLogger/ProjectImportsCollectionMode CollectProjectImports" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Logging.BinaryLogger.CollectProjectImports" />
      <MemberSignature Language="VB.NET" Value="Public Property CollectProjectImports As BinaryLogger.ProjectImportsCollectionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Logging::BinaryLogger::ProjectImportsCollectionMode CollectProjectImports { Microsoft::Build::Logging::BinaryLogger::ProjectImportsCollectionMode get(); void set(Microsoft::Build::Logging::BinaryLogger::ProjectImportsCollectionMode value); };" />
      <MemberSignature Language="F#" Value="member this.CollectProjectImports : Microsoft.Build.Logging.BinaryLogger.ProjectImportsCollectionMode with get, set" Usage="Microsoft.Build.Logging.BinaryLogger.CollectProjectImports" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Logging.BinaryLogger+ProjectImportsCollectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether to capture and embed project and target source files used during the build.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Logging.BinaryLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit&#xA;override this.Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit" Usage="binaryLogger.Initialize eventSource" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource">To be added.</param>
        <summary>
            Initializes the logger by subscribing to events of IEventSource
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Logging.BinaryLogger.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Parameters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : string with get, set" Usage="Microsoft.Build.Logging.BinaryLogger.Parameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The only supported parameter is the output log file path (e.g. "msbuild.binlog") 
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Logging.BinaryLogger.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit&#xA;override this.Shutdown : unit -&gt; unit" Usage="binaryLogger.Shutdown " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Shutdown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Closes the underlying file stream.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Logging.BinaryLogger.Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Property Verbosity As LoggerVerbosity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::LoggerVerbosity Verbosity { Microsoft::Build::Framework::LoggerVerbosity get(); void set(Microsoft::Build::Framework::LoggerVerbosity value); };" />
      <MemberSignature Language="F#" Value="member this.Verbosity : Microsoft.Build.Framework.LoggerVerbosity with get, set" Usage="Microsoft.Build.Logging.BinaryLogger.Verbosity" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Verbosity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The binary logger Verbosity is always maximum (Diagnostic). It tries to capture as much
            information as possible.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ProjectCachePluginBase" FullName="Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase">
  <TypeSignature Language="C#" Value="public abstract class ProjectCachePluginBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ProjectCachePluginBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ProjectCachePluginBase" />
  <TypeSignature Language="F#" Value="type ProjectCachePluginBase = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectCachePluginBase abstract" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Only one plugin instance can exist for a given BuildManager BeginBuild / EndBuild session.
                Any exceptions thrown by the plugin will cause MSBuild to fail the build.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ProjectCachePluginBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ProjectCachePluginBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginBuildAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task BeginBuildAsync (Microsoft.Build.Experimental.ProjectCache.CacheContext context, Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase logger, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task BeginBuildAsync(class Microsoft.Build.Experimental.ProjectCache.CacheContext context, class Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase logger, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase.BeginBuildAsync(Microsoft.Build.Experimental.ProjectCache.CacheContext,Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginBuildAsync (context As CacheContext, logger As PluginLoggerBase, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member BeginBuildAsync : Microsoft.Build.Experimental.ProjectCache.CacheContext * Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="projectCachePluginBase.BeginBuildAsync (context, logger, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::Task ^ BeginBuildAsync(Microsoft::Build::Experimental::ProjectCache::CacheContext ^ context, Microsoft::Build::Experimental::ProjectCache::PluginLoggerBase ^ logger, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Build.Experimental.ProjectCache.CacheContext" />
        <Parameter Name="logger" Type="Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="logger">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                Called once before the build, to have the plugin instantiate its state.
                Errors are checked via <see cref="P:Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase.HasLoggedErrors" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndBuildAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task EndBuildAsync (Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase logger, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task EndBuildAsync(class Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase logger, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase.EndBuildAsync(Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndBuildAsync (logger As PluginLoggerBase, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member EndBuildAsync : Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="projectCachePluginBase.EndBuildAsync (logger, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::Task ^ EndBuildAsync(Microsoft::Build::Experimental::ProjectCache::PluginLoggerBase ^ logger, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                Called once after all the build to let the plugin do any post build operations (log metrics, cleanup, etc).
                Errors are checked via <see cref="P:Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase.HasLoggedErrors" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheResultAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Microsoft.Build.Experimental.ProjectCache.CacheResult&gt; GetCacheResultAsync (Microsoft.Build.Execution.BuildRequestData buildRequest, Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase logger, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Build.Experimental.ProjectCache.CacheResult&gt; GetCacheResultAsync(class Microsoft.Build.Execution.BuildRequestData buildRequest, class Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase logger, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase.GetCacheResultAsync(Microsoft.Build.Execution.BuildRequestData,Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCacheResultAsync (buildRequest As BuildRequestData, logger As PluginLoggerBase, cancellationToken As CancellationToken) As Task(Of CacheResult)" />
      <MemberSignature Language="F#" Value="abstract member GetCacheResultAsync : Microsoft.Build.Execution.BuildRequestData * Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Build.Experimental.ProjectCache.CacheResult&gt;" Usage="projectCachePluginBase.GetCacheResultAsync (buildRequest, logger, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::Task&lt;Microsoft::Build::Experimental::ProjectCache::CacheResult ^&gt; ^ GetCacheResultAsync(Microsoft::Build::Execution::BuildRequestData ^ buildRequest, Microsoft::Build::Experimental::ProjectCache::PluginLoggerBase ^ logger, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Build.Experimental.ProjectCache.CacheResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildRequest" Type="Microsoft.Build.Execution.BuildRequestData" />
        <Parameter Name="logger" Type="Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buildRequest">To be added.</param>
        <param name="logger">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                Called once for each build request.
                Operation needs to be atomic. Any side effects (IO, environment variables, etc) need to be reverted upon
                cancellation.
                MSBuild may choose to cancel this method and build the project itself.
                Errors are checked via <see cref="P:Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase.HasLoggedErrors" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="PluginTargetResult" FullName="Microsoft.Build.Experimental.ProjectCache.PluginTargetResult">
  <TypeSignature Language="C#" Value="public struct PluginTargetResult" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit PluginTargetResult extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Experimental.ProjectCache.PluginTargetResult" />
  <TypeSignature Language="VB.NET" Value="Public Structure PluginTargetResult" />
  <TypeSignature Language="F#" Value="type PluginTargetResult = struct" />
  <TypeSignature Language="C++ CLI" Value="public value class PluginTargetResult" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                A cache hit can use this to instruct MSBuild to construct a BuildResult with the target result specified in this
                type.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PluginTargetResult (string targetName, System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Framework.ITaskItem2&gt; taskItems, Microsoft.Build.Execution.BuildResultCode resultCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string targetName, class System.Collections.Generic.IReadOnlyCollection`1&lt;class Microsoft.Build.Framework.ITaskItem2&gt; taskItems, valuetype Microsoft.Build.Execution.BuildResultCode resultCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Experimental.ProjectCache.PluginTargetResult.#ctor(System.String,System.Collections.Generic.IReadOnlyCollection{Microsoft.Build.Framework.ITaskItem2},Microsoft.Build.Execution.BuildResultCode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetName As String, taskItems As IReadOnlyCollection(Of ITaskItem2), resultCode As BuildResultCode)" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Experimental.ProjectCache.PluginTargetResult : string * System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Framework.ITaskItem2&gt; * Microsoft.Build.Execution.BuildResultCode -&gt; Microsoft.Build.Experimental.ProjectCache.PluginTargetResult" Usage="new Microsoft.Build.Experimental.ProjectCache.PluginTargetResult (targetName, taskItems, resultCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PluginTargetResult(System::String ^ targetName, System::Collections::Generic::IReadOnlyCollection&lt;Microsoft::Build::Framework::ITaskItem2 ^&gt; ^ taskItems, Microsoft::Build::Execution::BuildResultCode resultCode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="taskItems" Type="System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Framework.ITaskItem2&gt;" />
        <Parameter Name="resultCode" Type="Microsoft.Build.Execution.BuildResultCode" />
      </Parameters>
      <Docs>
        <param name="targetName">To be added.</param>
        <param name="taskItems">To be added.</param>
        <param name="resultCode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResultCode">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.BuildResultCode ResultCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Execution.BuildResultCode ResultCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Experimental.ProjectCache.PluginTargetResult.ResultCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResultCode As BuildResultCode" />
      <MemberSignature Language="F#" Value="member this.ResultCode : Microsoft.Build.Execution.BuildResultCode" Usage="Microsoft.Build.Experimental.ProjectCache.PluginTargetResult.ResultCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Execution::BuildResultCode ResultCode { Microsoft::Build::Execution::BuildResultCode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildResultCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="public string TargetName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Experimental.ProjectCache.PluginTargetResult.TargetName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetName As String" />
      <MemberSignature Language="F#" Value="member this.TargetName : string" Usage="Microsoft.Build.Experimental.ProjectCache.PluginTargetResult.TargetName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Framework.ITaskItem2&gt; TaskItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;class Microsoft.Build.Framework.ITaskItem2&gt; TaskItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Experimental.ProjectCache.PluginTargetResult.TaskItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TaskItems As IReadOnlyCollection(Of ITaskItem2)" />
      <MemberSignature Language="F#" Value="member this.TaskItems : System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Framework.ITaskItem2&gt;" Usage="Microsoft.Build.Experimental.ProjectCache.PluginTargetResult.TaskItems" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyCollection&lt;Microsoft::Build::Framework::ITaskItem2 ^&gt; ^ TaskItems { System::Collections::Generic::IReadOnlyCollection&lt;Microsoft::Build::Framework::ITaskItem2 ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Framework.ITaskItem2&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

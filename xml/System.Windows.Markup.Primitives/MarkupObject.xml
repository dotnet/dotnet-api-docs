<Type Name="MarkupObject" FullName="System.Windows.Markup.Primitives.MarkupObject">
  <TypeSignature Language="C#" Value="public abstract class MarkupObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MarkupObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.Primitives.MarkupObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarkupObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarkupObject abstract" />
  <TypeSignature Language="F#" Value="type MarkupObject = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Abstract class that represents an object that can be used to navigate a tree of objects.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To instantiate a <xref:System.Windows.Markup.Primitives.MarkupObject>, see <xref:System.Windows.Markup.Primitives.MarkupWriter.GetMarkupObjectFor%2A> method on the <xref:System.Windows.Markup.Primitives.MarkupWriter> class.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.Primitives.MarkupWriter" />
    <altmember cref="T:System.Windows.Markup.Primitives.MarkupProperty" />
  </Docs>
  <Members>
    <Member MemberName="AssignRootContext">
      <MemberSignature Language="C#" Value="public abstract void AssignRootContext (System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AssignRootContext(class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.Primitives.MarkupObject.AssignRootContext(System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AssignRootContext (context As IValueSerializerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AssignRootContext(System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member AssignRootContext : System.Windows.Markup.IValueSerializerContext -&gt; unit" Usage="markupObject.AssignRootContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:System.Windows.Markup.IValueSerializerContext" /> to assign a root context for.</param>
        <summary>When overridden in a derived class, assigns a root context for <see cref="T:System.Windows.Markup.ValueSerializer" /> classes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupObject.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.ComponentModel.AttributeCollection" Usage="System.Windows.Markup.Primitives.MarkupObject.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the attributes associated with this <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
        <value>The collection of attributes.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public abstract object Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Instance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupObject.Instance" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Instance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Instance { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Instance : obj" Usage="System.Windows.Markup.Primitives.MarkupObject.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the instance of the object represented by this <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
        <value>The instance of the object</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The type of the object may not be equal to <xref:System.Windows.Markup.Primitives.MarkupObject.ObjectType%2A> if the instance represents a factory which creates instances of type <xref:System.Windows.Markup.Primitives.MarkupObject.ObjectType%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectType">
      <MemberSignature Language="C#" Value="public abstract Type ObjectType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ObjectType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupObject.ObjectType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ObjectType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ObjectType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ObjectType : Type" Usage="System.Windows.Markup.Primitives.MarkupObject.ObjectType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the type of the <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> instance.</summary>
        <value>The type of the object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.Primitives.MarkupObject.ObjectType%2A> returns the type of the <xref:System.Windows.Markup.Primitives.MarkupObject>.  For example, an item representing a <xref:System.Windows.Controls.Button> would return the equivalent of **typeof(System.Windows.Button)**.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Windows.Markup.Primitives.MarkupProperty&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Markup.Primitives.MarkupProperty&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupObject.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Properties As IEnumerable(Of MarkupProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Windows::Markup::Primitives::MarkupProperty ^&gt; ^ Properties { System::Collections::Generic::IEnumerable&lt;System::Windows::Markup::Primitives::MarkupProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : seq&lt;System.Windows.Markup.Primitives.MarkupProperty&gt;" Usage="System.Windows.Markup.Primitives.MarkupObject.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Markup.Primitives.MarkupProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the properties of this <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> instance that should be written to [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</summary>
        <value>The properties.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

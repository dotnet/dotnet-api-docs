<Type Name="DirectiveConfigurationExtensions" FullName="System.CommandLine.Hosting.DirectiveConfigurationExtensions">
  <TypeSignature Language="C#" Value="public static class DirectiveConfigurationExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DirectiveConfigurationExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Hosting.DirectiveConfigurationExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DirectiveConfigurationExtensions" />
  <TypeSignature Language="F#" Value="type DirectiveConfigurationExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectiveConfigurationExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine.Hosting</AssemblyName>
    <AssemblyVersion>0.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddCommandLineDirectives">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Configuration.IConfigurationBuilder AddCommandLineDirectives (this Microsoft.Extensions.Configuration.IConfigurationBuilder config, System.CommandLine.Parsing.ParseResult commandline, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Configuration.IConfigurationBuilder AddCommandLineDirectives(class Microsoft.Extensions.Configuration.IConfigurationBuilder config, class System.CommandLine.Parsing.ParseResult commandline, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.DirectiveConfigurationExtensions.AddCommandLineDirectives(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.CommandLine.Parsing.ParseResult,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddCommandLineDirectives (config As IConfigurationBuilder, commandline As ParseResult, name As String) As IConfigurationBuilder" />
      <MemberSignature Language="F#" Value="static member AddCommandLineDirectives : Microsoft.Extensions.Configuration.IConfigurationBuilder * System.CommandLine.Parsing.ParseResult * string -&gt; Microsoft.Extensions.Configuration.IConfigurationBuilder" Usage="System.CommandLine.Hosting.DirectiveConfigurationExtensions.AddCommandLineDirectives (config, commandline, name)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Configuration::IConfigurationBuilder ^ AddCommandLineDirectives(Microsoft::Extensions::Configuration::IConfigurationBuilder ^ config, System::CommandLine::Parsing::ParseResult ^ commandline, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Configuration.IConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="config" Type="Microsoft.Extensions.Configuration.IConfigurationBuilder" RefType="this" />
        <Parameter Name="commandline" Type="System.CommandLine.Parsing.ParseResult" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="config">To be added.</param>
        <param name="commandline">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

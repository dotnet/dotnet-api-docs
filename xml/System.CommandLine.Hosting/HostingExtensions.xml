<Type Name="HostingExtensions" FullName="System.CommandLine.Hosting.HostingExtensions">
  <TypeSignature Language="C#" Value="public static class HostingExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HostingExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Hosting.HostingExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module HostingExtensions" />
  <TypeSignature Language="F#" Value="type HostingExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostingExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine.Hosting</AssemblyName>
    <AssemblyVersion>0.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BindCommandLine&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Options.OptionsBuilder&lt;TOptions&gt; BindCommandLine&lt;TOptions&gt; (this Microsoft.Extensions.Options.OptionsBuilder&lt;TOptions&gt; optionsBuilder) where TOptions : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Options.OptionsBuilder`1&lt;!!TOptions&gt; BindCommandLine&lt;class TOptions&gt;(class Microsoft.Extensions.Options.OptionsBuilder`1&lt;!!TOptions&gt; optionsBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.HostingExtensions.BindCommandLine``1(Microsoft.Extensions.Options.OptionsBuilder{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BindCommandLine(Of TOptions As Class) (optionsBuilder As OptionsBuilder(Of TOptions)) As OptionsBuilder(Of TOptions)" />
      <MemberSignature Language="F#" Value="static member BindCommandLine : Microsoft.Extensions.Options.OptionsBuilder&lt;'Options (requires 'Options : null)&gt; -&gt; Microsoft.Extensions.Options.OptionsBuilder&lt;'Options (requires 'Options : null)&gt; (requires 'Options : null)" Usage="System.CommandLine.Hosting.HostingExtensions.BindCommandLine optionsBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOptions&gt;&#xA; where TOptions : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Options::OptionsBuilder&lt;TOptions&gt; ^ BindCommandLine(Microsoft::Extensions::Options::OptionsBuilder&lt;TOptions&gt; ^ optionsBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Options.OptionsBuilder&lt;TOptions&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="optionsBuilder" Type="Microsoft.Extensions.Options.OptionsBuilder&lt;TOptions&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">To be added.</typeparam>
        <param name="optionsBuilder">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHost">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Hosting.IHost GetHost (this System.CommandLine.Invocation.InvocationContext invocationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Hosting.IHost GetHost(class System.CommandLine.Invocation.InvocationContext invocationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.HostingExtensions.GetHost(System.CommandLine.Invocation.InvocationContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHost (invocationContext As InvocationContext) As IHost" />
      <MemberSignature Language="F#" Value="static member GetHost : System.CommandLine.Invocation.InvocationContext -&gt; Microsoft.Extensions.Hosting.IHost" Usage="System.CommandLine.Hosting.HostingExtensions.GetHost invocationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Hosting::IHost ^ GetHost(System::CommandLine::Invocation::InvocationContext ^ invocationContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invocationContext" Type="System.CommandLine.Invocation.InvocationContext" RefType="this" />
      </Parameters>
      <Docs>
        <param name="invocationContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInvocationContext">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.InvocationContext GetInvocationContext (this Microsoft.Extensions.Hosting.HostBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.InvocationContext GetInvocationContext(class Microsoft.Extensions.Hosting.HostBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.HostingExtensions.GetInvocationContext(Microsoft.Extensions.Hosting.HostBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInvocationContext (context As HostBuilderContext) As InvocationContext" />
      <MemberSignature Language="F#" Value="static member GetInvocationContext : Microsoft.Extensions.Hosting.HostBuilderContext -&gt; System.CommandLine.Invocation.InvocationContext" Usage="System.CommandLine.Hosting.HostingExtensions.GetInvocationContext context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::CommandLine::Invocation::InvocationContext ^ GetInvocationContext(Microsoft::Extensions::Hosting::HostBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.InvocationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Extensions.Hosting.HostBuilderContext" RefType="this" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInvocationContext">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Invocation.InvocationContext GetInvocationContext (this Microsoft.Extensions.Hosting.IHostBuilder hostBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Invocation.InvocationContext GetInvocationContext(class Microsoft.Extensions.Hosting.IHostBuilder hostBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.HostingExtensions.GetInvocationContext(Microsoft.Extensions.Hosting.IHostBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInvocationContext (hostBuilder As IHostBuilder) As InvocationContext" />
      <MemberSignature Language="F#" Value="static member GetInvocationContext : Microsoft.Extensions.Hosting.IHostBuilder -&gt; System.CommandLine.Invocation.InvocationContext" Usage="System.CommandLine.Hosting.HostingExtensions.GetInvocationContext hostBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::CommandLine::Invocation::InvocationContext ^ GetInvocationContext(Microsoft::Extensions::Hosting::IHostBuilder ^ hostBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Invocation.InvocationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostBuilder" Type="Microsoft.Extensions.Hosting.IHostBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="hostBuilder">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCommandHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Hosting.IHostBuilder UseCommandHandler (this Microsoft.Extensions.Hosting.IHostBuilder builder, Type commandType, Type handlerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Hosting.IHostBuilder UseCommandHandler(class Microsoft.Extensions.Hosting.IHostBuilder builder, class System.Type commandType, class System.Type handlerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.HostingExtensions.UseCommandHandler(Microsoft.Extensions.Hosting.IHostBuilder,System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseCommandHandler (builder As IHostBuilder, commandType As Type, handlerType As Type) As IHostBuilder" />
      <MemberSignature Language="F#" Value="static member UseCommandHandler : Microsoft.Extensions.Hosting.IHostBuilder * Type * Type -&gt; Microsoft.Extensions.Hosting.IHostBuilder" Usage="System.CommandLine.Hosting.HostingExtensions.UseCommandHandler (builder, commandType, handlerType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Hosting::IHostBuilder ^ UseCommandHandler(Microsoft::Extensions::Hosting::IHostBuilder ^ builder, Type ^ commandType, Type ^ handlerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Hosting.IHostBuilder" RefType="this" />
        <Parameter Name="commandType" Type="System.Type" />
        <Parameter Name="handlerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="commandType">To be added.</param>
        <param name="handlerType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCommandHandler&lt;TCommand,THandler&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Hosting.IHostBuilder UseCommandHandler&lt;TCommand,THandler&gt; (this Microsoft.Extensions.Hosting.IHostBuilder builder) where TCommand : System.CommandLine.Command where THandler : System.CommandLine.Invocation.ICommandHandler;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Hosting.IHostBuilder UseCommandHandler&lt;(class System.CommandLine.Command) TCommand, (class System.CommandLine.Invocation.ICommandHandler) THandler&gt;(class Microsoft.Extensions.Hosting.IHostBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.HostingExtensions.UseCommandHandler``2(Microsoft.Extensions.Hosting.IHostBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseCommandHandler(Of TCommand As Command, THandler As Command) (builder As IHostBuilder) As IHostBuilder" />
      <MemberSignature Language="F#" Value="static member UseCommandHandler : Microsoft.Extensions.Hosting.IHostBuilder -&gt; Microsoft.Extensions.Hosting.IHostBuilder (requires 'Command :&gt; System.CommandLine.Command and 'Handler :&gt; System.CommandLine.Invocation.ICommandHandler)" Usage="System.CommandLine.Hosting.HostingExtensions.UseCommandHandler builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TCommand, typename THandler&gt;&#xA; where TCommand : System::CommandLine::Command where THandler : System::CommandLine::Invocation::ICommandHandler[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Hosting::IHostBuilder ^ UseCommandHandler(Microsoft::Extensions::Hosting::IHostBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHostBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TCommand">
          <Constraints>
            <BaseTypeName>System.CommandLine.Command</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="THandler">
          <Constraints>
            <InterfaceName>System.CommandLine.Invocation.ICommandHandler</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Hosting.IHostBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TCommand">To be added.</typeparam>
        <typeparam name="THandler">To be added.</typeparam>
        <param name="builder">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseHost">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Builder.CommandLineBuilder UseHost (this System.CommandLine.Builder.CommandLineBuilder builder, Action&lt;Microsoft.Extensions.Hosting.IHostBuilder&gt; configureHost = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Builder.CommandLineBuilder UseHost(class System.CommandLine.Builder.CommandLineBuilder builder, class System.Action`1&lt;class Microsoft.Extensions.Hosting.IHostBuilder&gt; configureHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.HostingExtensions.UseHost(System.CommandLine.Builder.CommandLineBuilder,System.Action{Microsoft.Extensions.Hosting.IHostBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseHost (builder As CommandLineBuilder, Optional configureHost As Action(Of IHostBuilder) = Nothing) As CommandLineBuilder" />
      <MemberSignature Language="F#" Value="static member UseHost : System.CommandLine.Builder.CommandLineBuilder * Action&lt;Microsoft.Extensions.Hosting.IHostBuilder&gt; -&gt; System.CommandLine.Builder.CommandLineBuilder" Usage="System.CommandLine.Hosting.HostingExtensions.UseHost (builder, configureHost)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Builder.CommandLineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.CommandLine.Builder.CommandLineBuilder" RefType="this" />
        <Parameter Name="configureHost" Type="System.Action&lt;Microsoft.Extensions.Hosting.IHostBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="configureHost">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseHost">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Builder.CommandLineBuilder UseHost (this System.CommandLine.Builder.CommandLineBuilder builder, Func&lt;string[],Microsoft.Extensions.Hosting.IHostBuilder&gt; hostBuilderFactory, Action&lt;Microsoft.Extensions.Hosting.IHostBuilder&gt; configureHost = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Builder.CommandLineBuilder UseHost(class System.CommandLine.Builder.CommandLineBuilder builder, class System.Func`2&lt;string[], class Microsoft.Extensions.Hosting.IHostBuilder&gt; hostBuilderFactory, class System.Action`1&lt;class Microsoft.Extensions.Hosting.IHostBuilder&gt; configureHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.HostingExtensions.UseHost(System.CommandLine.Builder.CommandLineBuilder,System.Func{System.String[],Microsoft.Extensions.Hosting.IHostBuilder},System.Action{Microsoft.Extensions.Hosting.IHostBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseHost (builder As CommandLineBuilder, hostBuilderFactory As Func(Of String(), IHostBuilder), Optional configureHost As Action(Of IHostBuilder) = Nothing) As CommandLineBuilder" />
      <MemberSignature Language="F#" Value="static member UseHost : System.CommandLine.Builder.CommandLineBuilder * Func&lt;string[], Microsoft.Extensions.Hosting.IHostBuilder&gt; * Action&lt;Microsoft.Extensions.Hosting.IHostBuilder&gt; -&gt; System.CommandLine.Builder.CommandLineBuilder" Usage="System.CommandLine.Hosting.HostingExtensions.UseHost (builder, hostBuilderFactory, configureHost)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Builder.CommandLineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.CommandLine.Builder.CommandLineBuilder" RefType="this" />
        <Parameter Name="hostBuilderFactory" Type="System.Func&lt;System.String[],Microsoft.Extensions.Hosting.IHostBuilder&gt;" />
        <Parameter Name="configureHost" Type="System.Action&lt;Microsoft.Extensions.Hosting.IHostBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="hostBuilderFactory">To be added.</param>
        <param name="configureHost">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseInvocationLifetime">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Hosting.IHostBuilder UseInvocationLifetime (this Microsoft.Extensions.Hosting.IHostBuilder host, System.CommandLine.Invocation.InvocationContext invocation, Action&lt;System.CommandLine.Hosting.InvocationLifetimeOptions&gt; configureOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Hosting.IHostBuilder UseInvocationLifetime(class Microsoft.Extensions.Hosting.IHostBuilder host, class System.CommandLine.Invocation.InvocationContext invocation, class System.Action`1&lt;class System.CommandLine.Hosting.InvocationLifetimeOptions&gt; configureOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.HostingExtensions.UseInvocationLifetime(Microsoft.Extensions.Hosting.IHostBuilder,System.CommandLine.Invocation.InvocationContext,System.Action{System.CommandLine.Hosting.InvocationLifetimeOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseInvocationLifetime (host As IHostBuilder, invocation As InvocationContext, Optional configureOptions As Action(Of InvocationLifetimeOptions) = Nothing) As IHostBuilder" />
      <MemberSignature Language="F#" Value="static member UseInvocationLifetime : Microsoft.Extensions.Hosting.IHostBuilder * System.CommandLine.Invocation.InvocationContext * Action&lt;System.CommandLine.Hosting.InvocationLifetimeOptions&gt; -&gt; Microsoft.Extensions.Hosting.IHostBuilder" Usage="System.CommandLine.Hosting.HostingExtensions.UseInvocationLifetime (host, invocation, configureOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Microsoft.Extensions.Hosting.IHostBuilder" RefType="this" />
        <Parameter Name="invocation" Type="System.CommandLine.Invocation.InvocationContext" />
        <Parameter Name="configureOptions" Type="System.Action&lt;System.CommandLine.Hosting.InvocationLifetimeOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="host">To be added.</param>
        <param name="invocation">To be added.</param>
        <param name="configureOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="HostingExtensions" FullName="System.CommandLine.Hosting.HostingExtensions">
  <TypeSignature Language="C#" Value="public static class HostingExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HostingExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Hosting.HostingExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module HostingExtensions" />
  <TypeSignature Language="F#" Value="type HostingExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostingExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine.Hosting</AssemblyName>
    <AssemblyVersion>0.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BindCommandLine&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Options.OptionsBuilder&lt;TOptions&gt; BindCommandLine&lt;TOptions&gt; (this Microsoft.Extensions.Options.OptionsBuilder&lt;TOptions&gt; optionsBuilder) where TOptions : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Options.OptionsBuilder`1&lt;!!TOptions&gt; BindCommandLine&lt;class TOptions&gt;(class Microsoft.Extensions.Options.OptionsBuilder`1&lt;!!TOptions&gt; optionsBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.HostingExtensions.BindCommandLine``1(Microsoft.Extensions.Options.OptionsBuilder{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BindCommandLine(Of TOptions As Class) (optionsBuilder As OptionsBuilder(Of TOptions)) As OptionsBuilder(Of TOptions)" />
      <MemberSignature Language="F#" Value="static member BindCommandLine : Microsoft.Extensions.Options.OptionsBuilder&lt;'Options (requires 'Options : null)&gt; -&gt; Microsoft.Extensions.Options.OptionsBuilder&lt;'Options (requires 'Options : null)&gt; (requires 'Options : null)" Usage="System.CommandLine.Hosting.HostingExtensions.BindCommandLine optionsBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOptions&gt;&#xA; where TOptions : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Options::OptionsBuilder&lt;TOptions&gt; ^ BindCommandLine(Microsoft::Extensions::Options::OptionsBuilder&lt;TOptions&gt; ^ optionsBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Options.OptionsBuilder&lt;TOptions&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="optionsBuilder" Type="Microsoft.Extensions.Options.OptionsBuilder&lt;TOptions&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">To be added.</typeparam>
        <param name="optionsBuilder">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHost">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Hosting.IHost GetHost (this System.CommandLine.ParseResult parseResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Hosting.IHost GetHost(class System.CommandLine.ParseResult parseResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.HostingExtensions.GetHost(System.CommandLine.ParseResult)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHost (parseResult As ParseResult) As IHost" />
      <MemberSignature Language="F#" Value="static member GetHost : System.CommandLine.ParseResult -&gt; Microsoft.Extensions.Hosting.IHost" Usage="System.CommandLine.Hosting.HostingExtensions.GetHost parseResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Hosting::IHost ^ GetHost(System::CommandLine::ParseResult ^ parseResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parseResult" Type="System.CommandLine.ParseResult" RefType="this" />
      </Parameters>
      <Docs>
        <param name="parseResult">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParseResult">
      <MemberSignature Language="C#" Value="public static System.CommandLine.ParseResult GetParseResult (this Microsoft.Extensions.Hosting.HostBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.ParseResult GetParseResult(class Microsoft.Extensions.Hosting.HostBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.HostingExtensions.GetParseResult(Microsoft.Extensions.Hosting.HostBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetParseResult (context As HostBuilderContext) As ParseResult" />
      <MemberSignature Language="F#" Value="static member GetParseResult : Microsoft.Extensions.Hosting.HostBuilderContext -&gt; System.CommandLine.ParseResult" Usage="System.CommandLine.Hosting.HostingExtensions.GetParseResult context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::CommandLine::ParseResult ^ GetParseResult(Microsoft::Extensions::Hosting::HostBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.ParseResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Extensions.Hosting.HostBuilderContext" RefType="this" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParseResult">
      <MemberSignature Language="C#" Value="public static System.CommandLine.ParseResult GetParseResult (this Microsoft.Extensions.Hosting.IHostBuilder hostBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.ParseResult GetParseResult(class Microsoft.Extensions.Hosting.IHostBuilder hostBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.HostingExtensions.GetParseResult(Microsoft.Extensions.Hosting.IHostBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetParseResult (hostBuilder As IHostBuilder) As ParseResult" />
      <MemberSignature Language="F#" Value="static member GetParseResult : Microsoft.Extensions.Hosting.IHostBuilder -&gt; System.CommandLine.ParseResult" Usage="System.CommandLine.Hosting.HostingExtensions.GetParseResult hostBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::CommandLine::ParseResult ^ GetParseResult(Microsoft::Extensions::Hosting::IHostBuilder ^ hostBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.ParseResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostBuilder" Type="Microsoft.Extensions.Hosting.IHostBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="hostBuilder">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCommandHandler&lt;THandler&gt;">
      <MemberSignature Language="C#" Value="public static System.CommandLine.Command UseCommandHandler&lt;THandler&gt; (this System.CommandLine.Command command) where THandler : System.CommandLine.Invocation.CommandLineAction;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.Command UseCommandHandler&lt;(class System.CommandLine.Invocation.CommandLineAction) THandler&gt;(class System.CommandLine.Command command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.HostingExtensions.UseCommandHandler``1(System.CommandLine.Command)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseCommandHandler(Of THandler As CommandLineAction) (command As Command) As Command" />
      <MemberSignature Language="F#" Value="static member UseCommandHandler : System.CommandLine.Command -&gt; System.CommandLine.Command (requires 'Handler :&gt; System.CommandLine.Invocation.CommandLineAction)" Usage="System.CommandLine.Hosting.HostingExtensions.UseCommandHandler command" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename THandler&gt;&#xA; where THandler : System::CommandLine::Invocation::CommandLineAction[System::Runtime::CompilerServices::Extension]&#xA; static System::CommandLine::Command ^ UseCommandHandler(System::CommandLine::Command ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Command</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="THandler">
          <Constraints>
            <BaseTypeName>System.CommandLine.Invocation.CommandLineAction</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="command" Type="System.CommandLine.Command" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="THandler">To be added.</typeparam>
        <param name="command">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseHost">
      <MemberSignature Language="C#" Value="public static System.CommandLine.CommandLineConfiguration UseHost (this System.CommandLine.CommandLineConfiguration config, Action&lt;Microsoft.Extensions.Hosting.IHostBuilder&gt; configureHost = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.CommandLineConfiguration UseHost(class System.CommandLine.CommandLineConfiguration config, class System.Action`1&lt;class Microsoft.Extensions.Hosting.IHostBuilder&gt; configureHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.HostingExtensions.UseHost(System.CommandLine.CommandLineConfiguration,System.Action{Microsoft.Extensions.Hosting.IHostBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseHost (config As CommandLineConfiguration, Optional configureHost As Action(Of IHostBuilder) = Nothing) As CommandLineConfiguration" />
      <MemberSignature Language="F#" Value="static member UseHost : System.CommandLine.CommandLineConfiguration * Action&lt;Microsoft.Extensions.Hosting.IHostBuilder&gt; -&gt; System.CommandLine.CommandLineConfiguration" Usage="System.CommandLine.Hosting.HostingExtensions.UseHost (config, configureHost)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.CommandLineConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="config" Type="System.CommandLine.CommandLineConfiguration" RefType="this" />
        <Parameter Name="configureHost" Type="System.Action&lt;Microsoft.Extensions.Hosting.IHostBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="config">To be added.</param>
        <param name="configureHost">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseHost">
      <MemberSignature Language="C#" Value="public static System.CommandLine.CommandLineConfiguration UseHost (this System.CommandLine.CommandLineConfiguration config, Func&lt;string[],Microsoft.Extensions.Hosting.IHostBuilder&gt; hostBuilderFactory, Action&lt;Microsoft.Extensions.Hosting.IHostBuilder&gt; configureHost = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CommandLine.CommandLineConfiguration UseHost(class System.CommandLine.CommandLineConfiguration config, class System.Func`2&lt;string[], class Microsoft.Extensions.Hosting.IHostBuilder&gt; hostBuilderFactory, class System.Action`1&lt;class Microsoft.Extensions.Hosting.IHostBuilder&gt; configureHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.HostingExtensions.UseHost(System.CommandLine.CommandLineConfiguration,System.Func{System.String[],Microsoft.Extensions.Hosting.IHostBuilder},System.Action{Microsoft.Extensions.Hosting.IHostBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseHost (config As CommandLineConfiguration, hostBuilderFactory As Func(Of String(), IHostBuilder), Optional configureHost As Action(Of IHostBuilder) = Nothing) As CommandLineConfiguration" />
      <MemberSignature Language="F#" Value="static member UseHost : System.CommandLine.CommandLineConfiguration * Func&lt;string[], Microsoft.Extensions.Hosting.IHostBuilder&gt; * Action&lt;Microsoft.Extensions.Hosting.IHostBuilder&gt; -&gt; System.CommandLine.CommandLineConfiguration" Usage="System.CommandLine.Hosting.HostingExtensions.UseHost (config, hostBuilderFactory, configureHost)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.CommandLineConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="config" Type="System.CommandLine.CommandLineConfiguration" RefType="this" />
        <Parameter Name="hostBuilderFactory" Type="System.Func&lt;System.String[],Microsoft.Extensions.Hosting.IHostBuilder&gt;" />
        <Parameter Name="configureHost" Type="System.Action&lt;Microsoft.Extensions.Hosting.IHostBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="config">To be added.</param>
        <param name="hostBuilderFactory">To be added.</param>
        <param name="configureHost">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseInvocationLifetime">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Hosting.IHostBuilder UseInvocationLifetime (this Microsoft.Extensions.Hosting.IHostBuilder host, Action&lt;System.CommandLine.Hosting.InvocationLifetimeOptions&gt; configureOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Hosting.IHostBuilder UseInvocationLifetime(class Microsoft.Extensions.Hosting.IHostBuilder host, class System.Action`1&lt;class System.CommandLine.Hosting.InvocationLifetimeOptions&gt; configureOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.HostingExtensions.UseInvocationLifetime(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{System.CommandLine.Hosting.InvocationLifetimeOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseInvocationLifetime (host As IHostBuilder, Optional configureOptions As Action(Of InvocationLifetimeOptions) = Nothing) As IHostBuilder" />
      <MemberSignature Language="F#" Value="static member UseInvocationLifetime : Microsoft.Extensions.Hosting.IHostBuilder * Action&lt;System.CommandLine.Hosting.InvocationLifetimeOptions&gt; -&gt; Microsoft.Extensions.Hosting.IHostBuilder" Usage="System.CommandLine.Hosting.HostingExtensions.UseInvocationLifetime (host, configureOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Microsoft.Extensions.Hosting.IHostBuilder" RefType="this" />
        <Parameter Name="configureOptions" Type="System.Action&lt;System.CommandLine.Hosting.InvocationLifetimeOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="host">To be added.</param>
        <param name="configureOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

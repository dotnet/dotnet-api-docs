<Type Name="InvocationLifetime" FullName="System.CommandLine.Hosting.InvocationLifetime">
  <TypeSignature Language="C#" Value="public class InvocationLifetime : Microsoft.Extensions.Hosting.IHostLifetime" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InvocationLifetime extends System.Object implements class Microsoft.Extensions.Hosting.IHostLifetime" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Hosting.InvocationLifetime" />
  <TypeSignature Language="VB.NET" Value="Public Class InvocationLifetime&#xA;Implements IHostLifetime" />
  <TypeSignature Language="F#" Value="type InvocationLifetime = class&#xA;    interface IHostLifetime" />
  <TypeSignature Language="C++ CLI" Value="public ref class InvocationLifetime : Microsoft::Extensions::Hosting::IHostLifetime" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine.Hosting</AssemblyName>
    <AssemblyVersion>0.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Hosting.IHostLifetime</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvocationLifetime (Microsoft.Extensions.Options.IOptions&lt;System.CommandLine.Hosting.InvocationLifetimeOptions&gt; options, Microsoft.Extensions.Hosting.IHostEnvironment environment, Microsoft.Extensions.Hosting.IHostApplicationLifetime applicationLifetime, System.CommandLine.Invocation.InvocationContext context = default, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Options.IOptions`1&lt;class System.CommandLine.Hosting.InvocationLifetimeOptions&gt; options, class Microsoft.Extensions.Hosting.IHostEnvironment environment, class Microsoft.Extensions.Hosting.IHostApplicationLifetime applicationLifetime, class System.CommandLine.Invocation.InvocationContext context, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.InvocationLifetime.#ctor(Microsoft.Extensions.Options.IOptions{System.CommandLine.Hosting.InvocationLifetimeOptions},Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Hosting.IHostApplicationLifetime,System.CommandLine.Invocation.InvocationContext,Microsoft.Extensions.Logging.ILoggerFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As IOptions(Of InvocationLifetimeOptions), environment As IHostEnvironment, applicationLifetime As IHostApplicationLifetime, Optional context As InvocationContext = Nothing, Optional loggerFactory As ILoggerFactory = Nothing)" />
      <MemberSignature Language="F#" Value="new System.CommandLine.Hosting.InvocationLifetime : Microsoft.Extensions.Options.IOptions&lt;System.CommandLine.Hosting.InvocationLifetimeOptions&gt; * Microsoft.Extensions.Hosting.IHostEnvironment * Microsoft.Extensions.Hosting.IHostApplicationLifetime * System.CommandLine.Invocation.InvocationContext * Microsoft.Extensions.Logging.ILoggerFactory -&gt; System.CommandLine.Hosting.InvocationLifetime" Usage="new System.CommandLine.Hosting.InvocationLifetime (options, environment, applicationLifetime, context, loggerFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Options.IOptions&lt;System.CommandLine.Hosting.InvocationLifetimeOptions&gt;" Index="0" FrameworkAlternate="netstandard-2.1-pp" />
        <Parameter Name="environment" Type="Microsoft.Extensions.Hosting.IHostEnvironment" Index="1" FrameworkAlternate="netstandard-2.1-pp" />
        <Parameter Name="applicationLifetime" Type="Microsoft.Extensions.Hosting.IHostApplicationLifetime" Index="2" FrameworkAlternate="netstandard-2.1-pp" />
        <Parameter Name="context" Type="System.CommandLine.Invocation.InvocationContext" Index="3" FrameworkAlternate="netstandard-2.1-pp" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" Index="4" FrameworkAlternate="netstandard-2.1-pp" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <param name="environment">To be added.</param>
        <param name="applicationLifetime">To be added.</param>
        <param name="context">To be added.</param>
        <param name="loggerFactory">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvocationLifetime (Microsoft.Extensions.Options.IOptions&lt;System.CommandLine.Hosting.InvocationLifetimeOptions&gt; options, Microsoft.Extensions.Hosting.IHostingEnvironment environment, Microsoft.Extensions.Hosting.IApplicationLifetime applicationLifetime, System.CommandLine.Invocation.InvocationContext context = default, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Options.IOptions`1&lt;class System.CommandLine.Hosting.InvocationLifetimeOptions&gt; options, class Microsoft.Extensions.Hosting.IHostingEnvironment environment, class Microsoft.Extensions.Hosting.IApplicationLifetime applicationLifetime, class System.CommandLine.Invocation.InvocationContext context, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.InvocationLifetime.#ctor(Microsoft.Extensions.Options.IOptions{System.CommandLine.Hosting.InvocationLifetimeOptions},Microsoft.Extensions.Hosting.IHostingEnvironment,Microsoft.Extensions.Hosting.IApplicationLifetime,System.CommandLine.Invocation.InvocationContext,Microsoft.Extensions.Logging.ILoggerFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As IOptions(Of InvocationLifetimeOptions), environment As IHostingEnvironment, applicationLifetime As IApplicationLifetime, Optional context As InvocationContext = Nothing, Optional loggerFactory As ILoggerFactory = Nothing)" />
      <MemberSignature Language="F#" Value="new System.CommandLine.Hosting.InvocationLifetime : Microsoft.Extensions.Options.IOptions&lt;System.CommandLine.Hosting.InvocationLifetimeOptions&gt; * Microsoft.Extensions.Hosting.IHostingEnvironment * Microsoft.Extensions.Hosting.IApplicationLifetime * System.CommandLine.Invocation.InvocationContext * Microsoft.Extensions.Logging.ILoggerFactory -&gt; System.CommandLine.Hosting.InvocationLifetime" Usage="new System.CommandLine.Hosting.InvocationLifetime (options, environment, applicationLifetime, context, loggerFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Options.IOptions&lt;System.CommandLine.Hosting.InvocationLifetimeOptions&gt;" Index="0" FrameworkAlternate="netstandard-2.0-pp" />
        <Parameter Name="environment" Type="Microsoft.Extensions.Hosting.IHostingEnvironment" Index="1" FrameworkAlternate="netstandard-2.0-pp" />
        <Parameter Name="applicationLifetime" Type="Microsoft.Extensions.Hosting.IApplicationLifetime" Index="2" FrameworkAlternate="netstandard-2.0-pp" />
        <Parameter Name="context" Type="System.CommandLine.Invocation.InvocationContext" Index="3" FrameworkAlternate="netstandard-2.0-pp" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" Index="4" FrameworkAlternate="netstandard-2.0-pp" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <param name="environment">To be added.</param>
        <param name="applicationLifetime">To be added.</param>
        <param name="context">To be added.</param>
        <param name="loggerFactory">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationLifetime">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Hosting.IApplicationLifetime ApplicationLifetime { get; }" FrameworkAlternate="netstandard-2.0-pp" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Hosting.IApplicationLifetime ApplicationLifetime" FrameworkAlternate="netstandard-2.0-pp" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Hosting.InvocationLifetime.ApplicationLifetime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationLifetime As IApplicationLifetime" FrameworkAlternate="netstandard-2.0-pp" />
      <MemberSignature Language="F#" Value="member this.ApplicationLifetime : Microsoft.Extensions.Hosting.IApplicationLifetime" Usage="System.CommandLine.Hosting.InvocationLifetime.ApplicationLifetime" FrameworkAlternate="netstandard-2.0-pp" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Hosting::IApplicationLifetime ^ ApplicationLifetime { Microsoft::Extensions::Hosting::IApplicationLifetime ^ get(); };" FrameworkAlternate="netstandard-2.0-pp" />
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Hosting.IHostApplicationLifetime ApplicationLifetime { get; }" FrameworkAlternate="netstandard-2.1-pp" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Hosting.IHostApplicationLifetime ApplicationLifetime" FrameworkAlternate="netstandard-2.1-pp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationLifetime As IHostApplicationLifetime" FrameworkAlternate="netstandard-2.1-pp" />
      <MemberSignature Language="F#" Value="member this.ApplicationLifetime : Microsoft.Extensions.Hosting.IHostApplicationLifetime" Usage="System.CommandLine.Hosting.InvocationLifetime.ApplicationLifetime" FrameworkAlternate="netstandard-2.1-pp" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Hosting::IHostApplicationLifetime ^ ApplicationLifetime { Microsoft::Extensions::Hosting::IHostApplicationLifetime ^ get(); };" FrameworkAlternate="netstandard-2.1-pp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="netstandard-2.0-pp">Microsoft.Extensions.Hosting.IApplicationLifetime</ReturnType>
        <ReturnType FrameworkAlternate="netstandard-2.1-pp">Microsoft.Extensions.Hosting.IHostApplicationLifetime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.InvocationLifetime.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="member this.Dispose : unit -&gt; unit" Usage="invocationLifetime.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Environment">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Hosting.IHostingEnvironment Environment { get; }" FrameworkAlternate="netstandard-2.0-pp" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Hosting.IHostingEnvironment Environment" FrameworkAlternate="netstandard-2.0-pp" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Hosting.InvocationLifetime.Environment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Environment As IHostingEnvironment" FrameworkAlternate="netstandard-2.0-pp" />
      <MemberSignature Language="F#" Value="member this.Environment : Microsoft.Extensions.Hosting.IHostingEnvironment" Usage="System.CommandLine.Hosting.InvocationLifetime.Environment" FrameworkAlternate="netstandard-2.0-pp" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Hosting::IHostingEnvironment ^ Environment { Microsoft::Extensions::Hosting::IHostingEnvironment ^ get(); };" FrameworkAlternate="netstandard-2.0-pp" />
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Hosting.IHostEnvironment Environment { get; }" FrameworkAlternate="netstandard-2.1-pp" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Hosting.IHostEnvironment Environment" FrameworkAlternate="netstandard-2.1-pp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Environment As IHostEnvironment" FrameworkAlternate="netstandard-2.1-pp" />
      <MemberSignature Language="F#" Value="member this.Environment : Microsoft.Extensions.Hosting.IHostEnvironment" Usage="System.CommandLine.Hosting.InvocationLifetime.Environment" FrameworkAlternate="netstandard-2.1-pp" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Hosting::IHostEnvironment ^ Environment { Microsoft::Extensions::Hosting::IHostEnvironment ^ get(); };" FrameworkAlternate="netstandard-2.1-pp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="netstandard-2.0-pp">Microsoft.Extensions.Hosting.IHostingEnvironment</ReturnType>
        <ReturnType FrameworkAlternate="netstandard-2.1-pp">Microsoft.Extensions.Hosting.IHostEnvironment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.CommandLine.Hosting.InvocationLifetimeOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CommandLine.Hosting.InvocationLifetimeOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Hosting.InvocationLifetime.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As InvocationLifetimeOptions" />
      <MemberSignature Language="F#" Value="member this.Options : System.CommandLine.Hosting.InvocationLifetimeOptions" Usage="System.CommandLine.Hosting.InvocationLifetime.Options" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CommandLine::Hosting::InvocationLifetimeOptions ^ Options { System::CommandLine::Hosting::InvocationLifetimeOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Hosting.InvocationLifetimeOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StopAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task StopAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.InvocationLifetime.StopAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function StopAsync (cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member StopAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.StopAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="invocationLifetime.StopAsync cancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ StopAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Hosting.IHostLifetime.StopAsync(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForStartAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WaitForStartAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WaitForStartAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Hosting.InvocationLifetime.WaitForStartAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForStartAsync (cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member WaitForStartAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WaitForStartAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="invocationLifetime.WaitForStartAsync cancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WaitForStartAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Hosting.IHostLifetime.WaitForStartAsync(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Hosting</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

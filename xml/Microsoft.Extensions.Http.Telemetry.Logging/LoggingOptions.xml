<Type Name="LoggingOptions" FullName="Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions">
  <TypeSignature Language="C#" Value="public class LoggingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LoggingOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class LoggingOptions" />
  <TypeSignature Language="F#" Value="type LoggingOptions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoggingOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Options to configure HTTP client requests logging.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoggingOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LoggingOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BodyReadTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan BodyReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan BodyReadTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.BodyReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyReadTimeout As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.BodyReadTimeout : TimeSpan with get, set" Usage="Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.BodyReadTimeout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan BodyReadTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating the maximum amount of time to wait for the request or response body to be read.
            </summary>
        <value>To be added.</value>
        <remarks>
            The number should be above 1 millisecond and below 1 hour.
            Default set to 1 second.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="BodySizeLimit">
      <MemberSignature Language="C#" Value="public int BodySizeLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BodySizeLimit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.BodySizeLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property BodySizeLimit As Integer" />
      <MemberSignature Language="F#" Value="member this.BodySizeLimit : int with get, set" Usage="Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.BodySizeLimit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BodySizeLimit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Range(1, 1572864)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Range(1, 1572864)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating the maximum number of bytes of the request or response body to read.
            </summary>
        <value>To be added.</value>
        <remarks>
            The number should ideally be below 85K to not be allocated on the <see href="https://docs.microsoft.com/en-us/dotnet/standard/garbage-collection/large-object-heap">large object heap</see>.
            Default set to â‰ˆ 32K.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogBody">
      <MemberSignature Language="C#" Value="public bool LogBody { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogBody" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.LogBody" />
      <MemberSignature Language="VB.NET" Value="Public Property LogBody As Boolean" />
      <MemberSignature Language="F#" Value="member this.LogBody : bool with get, set" Usage="Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.LogBody" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogBody { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether HTTP request and response body will be logged.
            </summary>
        <value>To be added.</value>
        <remarks>
            Please avoid enabling this options in production environment as it might lead to leaking privacy information.
            Default set to <see langword="false" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRequestStart">
      <MemberSignature Language="C#" Value="public bool LogRequestStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogRequestStart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.LogRequestStart" />
      <MemberSignature Language="VB.NET" Value="Public Property LogRequestStart As Boolean" />
      <MemberSignature Language="F#" Value="member this.LogRequestStart : bool with get, set" Usage="Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.LogRequestStart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogRequestStart { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether request will be logged additionally before any further processing.
            </summary>
        <value>To be added.</value>
        <remarks>
            When enabled, two entries will be logged for each incoming request - one for request and one for response, if available.
            When disabled, only one entry will be logged for each incoming request which includes both request and response data.
            Default set to <see langword="false" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestBodyContentTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ISet&lt;string&gt; RequestBodyContentTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;string&gt; RequestBodyContentTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.RequestBodyContentTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestBodyContentTypes As ISet(Of String)" />
      <MemberSignature Language="F#" Value="member this.RequestBodyContentTypes : System.Collections.Generic.ISet&lt;string&gt; with get, set" Usage="Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.RequestBodyContentTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ISet&lt;System::String ^&gt; ^ RequestBodyContentTypes { System::Collections::Generic::ISet&lt;System::String ^&gt; ^ get(); void set(System::Collections::Generic::ISet&lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Required&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the list of HTTP request content types which are considered text and thus possible to serialize.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestHeadersDataClasses">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Extensions.Compliance.Classification.DataClassification&gt; RequestHeadersDataClasses { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, valuetype Microsoft.Extensions.Compliance.Classification.DataClassification&gt; RequestHeadersDataClasses" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.RequestHeadersDataClasses" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestHeadersDataClasses As IDictionary(Of String, DataClassification)" />
      <MemberSignature Language="F#" Value="member this.RequestHeadersDataClasses : System.Collections.Generic.IDictionary&lt;string, Microsoft.Extensions.Compliance.Classification.DataClassification&gt; with get, set" Usage="Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.RequestHeadersDataClasses" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::Compliance::Classification::DataClassification&gt; ^ RequestHeadersDataClasses { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::Compliance::Classification::DataClassification&gt; ^ get(); void set(System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::Compliance::Classification::DataClassification&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Required&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Extensions.Compliance.Classification.DataClassification&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the set of HTTP request headers to log and their respective data classes to use for redaction.
            </summary>
        <value>To be added.</value>
        <remarks>
            If empty, no HTTP request headers will be logged.
            If the data class is <see cref="P:Microsoft.Extensions.Compliance.Classification.DataClassification.None" />, no redaction will be done.
            Default set to <see cref="T:System.Collections.Generic.HashSet`1" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPathLoggingMode">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Http.Telemetry.Logging.OutgoingPathLoggingMode RequestPathLoggingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Http.Telemetry.Logging.OutgoingPathLoggingMode RequestPathLoggingMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.RequestPathLoggingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPathLoggingMode As OutgoingPathLoggingMode" />
      <MemberSignature Language="F#" Value="member this.RequestPathLoggingMode : Microsoft.Extensions.Http.Telemetry.Logging.OutgoingPathLoggingMode with get, set" Usage="Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.RequestPathLoggingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Http::Telemetry::Logging::OutgoingPathLoggingMode RequestPathLoggingMode { Microsoft::Extensions::Http::Telemetry::Logging::OutgoingPathLoggingMode get(); void set(Microsoft::Extensions::Http::Telemetry::Logging::OutgoingPathLoggingMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Http.Telemetry.Logging.OutgoingPathLoggingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating how outgoing HTTP request path should be logged.
            </summary>
        <value>To be added.</value>
        <remarks>
            Default set to <see cref="F:Microsoft.Extensions.Http.Telemetry.Logging.OutgoingPathLoggingMode.Formatted" />.
            This option is applied only when the <see cref="P:Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.RequestPathLoggingMode" /> option is not set to <see cref="F:Microsoft.Extensions.Http.Telemetry.HttpRouteParameterRedactionMode.None" />,
            otherwise this setting is ignored and unredacted HTTP request path is logged.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPathParameterRedactionMode">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Http.Telemetry.HttpRouteParameterRedactionMode RequestPathParameterRedactionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Http.Telemetry.HttpRouteParameterRedactionMode RequestPathParameterRedactionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.RequestPathParameterRedactionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPathParameterRedactionMode As HttpRouteParameterRedactionMode" />
      <MemberSignature Language="F#" Value="member this.RequestPathParameterRedactionMode : Microsoft.Extensions.Http.Telemetry.HttpRouteParameterRedactionMode with get, set" Usage="Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.RequestPathParameterRedactionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Http::Telemetry::HttpRouteParameterRedactionMode RequestPathParameterRedactionMode { Microsoft::Extensions::Http::Telemetry::HttpRouteParameterRedactionMode get(); void set(Microsoft::Extensions::Http::Telemetry::HttpRouteParameterRedactionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Http.Telemetry.HttpRouteParameterRedactionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating how outgoing HTTP request path parameters should be redacted.
            </summary>
        <value>To be added.</value>
        <remarks>
            Default set to <see cref="F:Microsoft.Extensions.Http.Telemetry.HttpRouteParameterRedactionMode.Strict" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseBodyContentTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ISet&lt;string&gt; ResponseBodyContentTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;string&gt; ResponseBodyContentTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.ResponseBodyContentTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseBodyContentTypes As ISet(Of String)" />
      <MemberSignature Language="F#" Value="member this.ResponseBodyContentTypes : System.Collections.Generic.ISet&lt;string&gt; with get, set" Usage="Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.ResponseBodyContentTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ISet&lt;System::String ^&gt; ^ ResponseBodyContentTypes { System::Collections::Generic::ISet&lt;System::String ^&gt; ^ get(); void set(System::Collections::Generic::ISet&lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Required&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the list of HTTP response content types which are considered text and thus possible to serialize.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseHeadersDataClasses">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Extensions.Compliance.Classification.DataClassification&gt; ResponseHeadersDataClasses { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, valuetype Microsoft.Extensions.Compliance.Classification.DataClassification&gt; ResponseHeadersDataClasses" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.ResponseHeadersDataClasses" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseHeadersDataClasses As IDictionary(Of String, DataClassification)" />
      <MemberSignature Language="F#" Value="member this.ResponseHeadersDataClasses : System.Collections.Generic.IDictionary&lt;string, Microsoft.Extensions.Compliance.Classification.DataClassification&gt; with get, set" Usage="Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.ResponseHeadersDataClasses" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::Compliance::Classification::DataClassification&gt; ^ ResponseHeadersDataClasses { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::Compliance::Classification::DataClassification&gt; ^ get(); void set(System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::Compliance::Classification::DataClassification&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Required&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Extensions.Compliance.Classification.DataClassification&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the set of HTTP response headers to log and their respective data classes to use for redaction.
            </summary>
        <value>To be added.</value>
        <remarks>
            If the data class is <see cref="P:Microsoft.Extensions.Compliance.Classification.DataClassification.None" />, no redaction will be done.
            If empty, no HTTP response headers will be logged.
            Default set to <see cref="T:System.Collections.Generic.HashSet`1" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteParameterDataClasses">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Extensions.Compliance.Classification.DataClassification&gt; RouteParameterDataClasses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, valuetype Microsoft.Extensions.Compliance.Classification.DataClassification&gt; RouteParameterDataClasses" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.RouteParameterDataClasses" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RouteParameterDataClasses As IDictionary(Of String, DataClassification)" />
      <MemberSignature Language="F#" Value="member this.RouteParameterDataClasses : System.Collections.Generic.IDictionary&lt;string, Microsoft.Extensions.Compliance.Classification.DataClassification&gt;" Usage="Microsoft.Extensions.Http.Telemetry.Logging.LoggingOptions.RouteParameterDataClasses" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::Compliance::Classification::DataClassification&gt; ^ RouteParameterDataClasses { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Extensions::Compliance::Classification::DataClassification&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Required&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Extensions.Compliance.Classification.DataClassification&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the route parameters to redact with their corresponding data classes to apply appropriate redaction.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

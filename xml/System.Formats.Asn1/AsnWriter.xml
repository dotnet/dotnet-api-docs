<Type Name="AsnWriter" FullName="System.Formats.Asn1.AsnWriter">
  <TypeSignature Language="C#" Value="public sealed class AsnWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AsnWriter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Formats.Asn1.AsnWriter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AsnWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsnWriter sealed" />
  <TypeSignature Language="F#" Value="type AsnWriter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Formats.Asn1</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A writer for BER-, CER-, and DER-encoded ASN.1 data.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AsnWriter (System.Formats.Asn1.AsnEncodingRules ruleSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Formats.Asn1.AsnEncodingRules ruleSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.#ctor(System.Formats.Asn1.AsnEncodingRules)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ruleSet As AsnEncodingRules)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AsnWriter(System::Formats::Asn1::AsnEncodingRules ruleSet);" />
      <MemberSignature Language="F#" Value="new System.Formats.Asn1.AsnWriter : System.Formats.Asn1.AsnEncodingRules -&gt; System.Formats.Asn1.AsnWriter" Usage="new System.Formats.Asn1.AsnWriter ruleSet" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ruleSet" Type="System.Formats.Asn1.AsnEncodingRules" />
      </Parameters>
      <Docs>
        <param name="ruleSet">The encoding constraints for the writer.</param>
        <summary>Create a new <see cref="T:System.Formats.Asn1.AsnWriter" /> with a given set of encoding rules.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="ruleSet" /> is not defined.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Formats.Asn1.AsnWriter destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Formats.Asn1.AsnWriter destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.CopyTo(System.Formats.Asn1.AsnWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As AsnWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(System::Formats::Asn1::AsnWriter ^ destination);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Formats.Asn1.AsnWriter -&gt; unit" Usage="asnWriter.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Formats.Asn1.AsnWriter" />
      </Parameters>
      <Docs>
        <param name="destination">The writer to receive the value.</param>
        <summary>Copy the value of this writer into another.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destination" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> or <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> has not been closed via <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> or <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.
             -or- 
               This writer is empty.
             -or- 
               This writer represents more than one top-level value.
             -or- 
               This writer's value is encoded in a manner that is not compatible with the ruleset for the destination writer.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public byte[] Encode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.Encode" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encode();" />
      <MemberSignature Language="F#" Value="member this.Encode : unit -&gt; byte[]" Usage="asnWriter.Encode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return a new array containing the encoded value.</summary>
        <returns>A precisely-sized array containing the encoded value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">A <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> or <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> has not been closed via <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> or <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public int Encode (Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Encode(valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.Encode(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode (destination As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Encode(Span&lt;System::Byte&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.Encode : Span&lt;byte&gt; -&gt; int" Usage="asnWriter.Encode destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="destination">The buffer in which to write.</param>
        <summary>Writes the encoded representation of the data to <paramref name="destination" />.</summary>
        <returns>The number of bytes written to <paramref name="destination" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">A <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> or <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> has not been closed via <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> or <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncodedValueEquals">
      <MemberSignature Language="C#" Value="public bool EncodedValueEquals (System.Formats.Asn1.AsnWriter other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EncodedValueEquals(class System.Formats.Asn1.AsnWriter other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.Formats.Asn1.AsnWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodedValueEquals (other As AsnWriter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EncodedValueEquals(System::Formats::Asn1::AsnWriter ^ other);" />
      <MemberSignature Language="F#" Value="member this.EncodedValueEquals : System.Formats.Asn1.AsnWriter -&gt; bool" Usage="asnWriter.EncodedValueEquals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Formats.Asn1.AsnWriter" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>Determines if <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> would produce an output identical to <paramref name="other" />.</summary>
        <returns>
          <see langword="true" /> if the pending encoded data is identical to <paramref name="other" />, <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="other" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> or <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> has not been closed via <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> or <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncodedValueEquals">
      <MemberSignature Language="C#" Value="public bool EncodedValueEquals (ReadOnlySpan&lt;byte&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EncodedValueEquals(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodedValueEquals (other As ReadOnlySpan(Of Byte)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EncodedValueEquals(ReadOnlySpan&lt;System::Byte&gt; other);" />
      <MemberSignature Language="F#" Value="member this.EncodedValueEquals : ReadOnlySpan&lt;byte&gt; -&gt; bool" Usage="asnWriter.EncodedValueEquals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>Determines if <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> would produce an output identical to <paramref name="other" />.</summary>
        <returns>
          <see langword="true" /> if the pending encoded data is identical to <paramref name="other" />, <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">A <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> or <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> has not been closed via <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> or <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEncodedLength">
      <MemberSignature Language="C#" Value="public int GetEncodedLength ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEncodedLength() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.GetEncodedLength" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEncodedLength () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetEncodedLength();" />
      <MemberSignature Language="F#" Value="member this.GetEncodedLength : unit -&gt; int" Usage="asnWriter.GetEncodedLength " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the number of bytes that would be written by <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" />.</summary>
        <returns>The number of bytes that would be written by <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />, <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />, or <see cref="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> was called without the corresponding Pop method.</exception>
      </Docs>
    </Member>
    <Member MemberName="PopOctetString">
      <MemberSignature Language="C#" Value="public void PopOctetString (System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PopOctetString(valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub PopOctetString (Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.PopOctetString : Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.PopOctetString tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 4).</param>
        <summary>Indicate that the open Octet String with the tag UNIVERSAL 4 is closed, returning the writer to the parent context.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

In <xref:System.Formats.Asn1.AsnEncodingRules.BER> and <xref:System.Formats.Asn1.AsnEncodingRules.DER> modes the encoded contents will remain in a single primitive Octet String.
              In <xref:System.Formats.Asn1.AsnEncodingRules.CER> mode the contents will be broken up into multiple segments, when required.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.</exception>
        <exception cref="T:System.InvalidOperationException">the writer is not currently positioned within an Octet String with the specified tag.</exception>
      </Docs>
    </Member>
    <Member MemberName="PopSequence">
      <MemberSignature Language="C#" Value="public void PopSequence (System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PopSequence(valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub PopSequence (Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.PopSequence : Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.PopSequence tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 16).</param>
        <summary>Indicate that the open Sequence with the specified tag is closed, returning the writer to the parent context.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.</exception>
        <exception cref="T:System.InvalidOperationException">the writer is not currently positioned within a Sequence with the specified tag.</exception>
      </Docs>
    </Member>
    <Member MemberName="PopSetOf">
      <MemberSignature Language="C#" Value="public void PopSetOf (System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PopSetOf(valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub PopSetOf (Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.PopSetOf : Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.PopSetOf tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 17).</param>
        <summary>Indicate that the open Set-Of with the specified tag is closed, returning the writer to the parent context.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

In <xref:System.Formats.Asn1.AsnEncodingRules.CER> and <xref:System.Formats.Asn1.AsnEncodingRules.DER> modes the writer will sort the Set-Of elements when the tag is closed.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.</exception>
        <exception cref="T:System.InvalidOperationException">the writer is not currently positioned within a Set-Of with the specified tag.</exception>
      </Docs>
    </Member>
    <Member MemberName="PushOctetString">
      <MemberSignature Language="C#" Value="public System.Formats.Asn1.AsnWriter.Scope PushOctetString (System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Formats.Asn1.AsnWriter/Scope PushOctetString(valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Function PushOctetString (Optional tag As Nullable(Of Asn1Tag) = Nothing) As AsnWriter.Scope" />
      <MemberSignature Language="F#" Value="member this.PushOctetString : Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; System.Formats.Asn1.AsnWriter.Scope" Usage="asnWriter.PushOctetString tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Formats.Asn1.AsnWriter+Scope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 4).</param>
        <summary>Begin writing an Octet String value with a specified tag.</summary>
        <returns>A disposable value which will automatically call <see cref="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This method is just an accelerator for writing an Octet String value where the contents are also ASN.1 data encoded under the same encoding system.
              When <xref:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})> is called the entire nested contents are normalized as a single Octet String value, encoded correctly for the current encoding rules.
              This method does not necessarily create a Constructed encoding, and it is not invalid to write values other than Octet String inside this Push/Pop.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PushSequence">
      <MemberSignature Language="C#" Value="public System.Formats.Asn1.AsnWriter.Scope PushSequence (System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Formats.Asn1.AsnWriter/Scope PushSequence(valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Function PushSequence (Optional tag As Nullable(Of Asn1Tag) = Nothing) As AsnWriter.Scope" />
      <MemberSignature Language="F#" Value="member this.PushSequence : Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; System.Formats.Asn1.AsnWriter.Scope" Usage="asnWriter.PushSequence tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Formats.Asn1.AsnWriter+Scope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 16).</param>
        <summary>Begin writing a Sequence with a specified tag.</summary>
        <returns>A disposable value which will automatically call <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.</exception>
      </Docs>
    </Member>
    <Member MemberName="PushSetOf">
      <MemberSignature Language="C#" Value="public System.Formats.Asn1.AsnWriter.Scope PushSetOf (System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Formats.Asn1.AsnWriter/Scope PushSetOf(valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Function PushSetOf (Optional tag As Nullable(Of Asn1Tag) = Nothing) As AsnWriter.Scope" />
      <MemberSignature Language="F#" Value="member this.PushSetOf : Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; System.Formats.Asn1.AsnWriter.Scope" Usage="asnWriter.PushSetOf tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Formats.Asn1.AsnWriter+Scope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 17).</param>
        <summary>Begin writing a Set-Of with a specified tag.</summary>
        <returns>A disposable value which will automatically call <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

In <xref:System.Formats.Asn1.AsnEncodingRules.CER> and <xref:System.Formats.Asn1.AsnEncodingRules.DER> modes the writer will sort the Set-Of elements when the tag is closed.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="asnWriter.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reset the writer to have no data, without releasing resources.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleSet">
      <MemberSignature Language="C#" Value="public System.Formats.Asn1.AsnEncodingRules RuleSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Formats.Asn1.AsnEncodingRules RuleSet" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Asn1.AsnWriter.RuleSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RuleSet As AsnEncodingRules" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Formats::Asn1::AsnEncodingRules RuleSet { System::Formats::Asn1::AsnEncodingRules get(); };" />
      <MemberSignature Language="F#" Value="member this.RuleSet : System.Formats.Asn1.AsnEncodingRules" Usage="System.Formats.Asn1.AsnWriter.RuleSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Formats.Asn1.AsnEncodingRules</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the encoding rules in use by this writer.</summary>
        <value>The encoding rules in use by this writer.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncode">
      <MemberSignature Language="C#" Value="public bool TryEncode (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncode(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncode (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncode(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncode : Span&lt;byte&gt; * int -&gt; bool" Usage="asnWriter.TryEncode (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">The buffer in which to write.</param>
        <param name="bytesWritten">On success, receives the number of bytes written to <paramref name="destination" />.</param>
        <summary>Attempts to write the encoded representation of the data to <paramref name="destination" />.</summary>
        <returns>
          <see langword="true" /> if the encode succeeded, <see langword="false" /> if <paramref name="destination" /> is too small.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">A <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> or <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> has not been closed via <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> or <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBitString">
      <MemberSignature Language="C#" Value="public void WriteBitString (ReadOnlySpan&lt;byte&gt; value, int unusedBitCount = 0, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBitString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value, int32 unusedBitCount, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteBitString(System.ReadOnlySpan{System.Byte},System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBitString (value As ReadOnlySpan(Of Byte), Optional unusedBitCount As Integer = 0, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteBitString : ReadOnlySpan&lt;byte&gt; * int * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteBitString (value, unusedBitCount, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="unusedBitCount" Type="System.Int32" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <param name="unusedBitCount">The number of trailing bits which are not semantic.</param>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 3).</param>
        <summary>Write a Bit String value with a specified tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.
             -or- 
               <paramref name="value" /> has length 0 and <paramref name="unusedBitCount" /> is not 0 
               -or- 
               <paramref name="value" /> is not empty and any of the bits identified by <paramref name="unusedBitCount" /> is set.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="unusedBitCount" /> is not in the range [0,7].</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public void WriteBoolean (bool value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBoolean(bool value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteBoolean(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBoolean (value As Boolean, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteBoolean : bool * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteBoolean (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 1).</param>
        <summary>Write a Boolean value with a specified tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharacterString">
      <MemberSignature Language="C#" Value="public void WriteCharacterString (System.Formats.Asn1.UniversalTagNumber encodingType, ReadOnlySpan&lt;char&gt; str, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteCharacterString(valuetype System.Formats.Asn1.UniversalTagNumber encodingType, valuetype System.ReadOnlySpan`1&lt;char&gt; str, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteCharacterString (encodingType As UniversalTagNumber, str As ReadOnlySpan(Of Char), Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteCharacterString : System.Formats.Asn1.UniversalTagNumber * ReadOnlySpan&lt;char&gt; * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteCharacterString (encodingType, str, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodingType" Type="System.Formats.Asn1.UniversalTagNumber" />
        <Parameter Name="str" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="encodingType">One of the enumeration values representing the encoding to use.</param>
        <param name="str">The string to write.</param>
        <param name="tag">The tag to write, or <see langword="null" /> for the universal tag that is appropriate to the requested encoding type.</param>
        <summary>Write the provided string using the specified encoding type using the specified tag corresponding to the encoding type.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="encodingType" /> is not a restricted character string encoding type.
             -or- 
               <paramref name="encodingType" /> is a restricted character string encoding type that is not currently supported by this method.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharacterString">
      <MemberSignature Language="C#" Value="public void WriteCharacterString (System.Formats.Asn1.UniversalTagNumber encodingType, string value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteCharacterString(valuetype System.Formats.Asn1.UniversalTagNumber encodingType, string value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteCharacterString (encodingType As UniversalTagNumber, value As String, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteCharacterString : System.Formats.Asn1.UniversalTagNumber * string * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteCharacterString (encodingType, value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodingType" Type="System.Formats.Asn1.UniversalTagNumber" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="encodingType">One of the enumeration values representing the encoding to use.</param>
        <param name="value">The string to write.</param>
        <param name="tag">The tag to write, or <see langword="null" /> for the universal tag that is appropriate to the requested encoding type.</param>
        <summary>Write the provided string using the specified encoding type using the specified tag corresponding to the encoding type.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="encodingType" /> is not a restricted character string encoding type.
             -or- 
               <paramref name="encodingType" /> is a restricted character string encoding type that is not currently supported by this method.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedValue">
      <MemberSignature Language="C#" Value="public void WriteEncodedValue (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEncodedValue(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteEncodedValue(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEncodedValue (value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEncodedValue(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteEncodedValue : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="asnWriter.WriteEncodedValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <summary>Write a single value which has already been encoded.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This method only checks that the tag and length are encoded according to the current ruleset, and that the end of the value is the end of the input. The contents are not evaluated for semantic meaning.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> could not be read under the current encoding rules.
             -or- 
               <paramref name="value" /> has data beyond the end of the first value.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEnumeratedValue">
      <MemberSignature Language="C#" Value="public void WriteEnumeratedValue (Enum value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEnumeratedValue(class System.Enum value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEnumeratedValue (value As Enum, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteEnumeratedValue : Enum * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteEnumeratedValue (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Enum" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The boxed enumeration value to write.</param>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 10).</param>
        <summary>Write a non-[<see cref="T:System.FlagsAttribute" />] enum value as an Enumerated with tag UNIVERSAL 10.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.
             -or- 
               <paramref name="value" /> is not a boxed enum value.
             -or- 
               the unboxed type of <paramref name="value" /> is declared [<see cref="T:System.FlagsAttribute" />].</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEnumeratedValue&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public void WriteEnumeratedValue&lt;TEnum&gt; (TEnum value, System.Formats.Asn1.Asn1Tag? tag = default) where TEnum : Enum;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEnumeratedValue&lt;(class System.Enum) TEnum&gt;(!!TEnum value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEnumeratedValue(Of TEnum As Enum) (value As TEnum, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteEnumeratedValue : 'Enum * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit (requires 'Enum :&gt; Enum)" Usage="asnWriter.WriteEnumeratedValue (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <BaseTypeName>System.Enum</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="TEnum" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum">To be added.</typeparam>
        <param name="value">The boxed enumeration value to write.</param>
        <param name="tag">The tag to write.</param>
        <summary>Write a non-[<see cref="T:System.FlagsAttribute" />] enum value as an Enumerated with tag UNIVERSAL 10.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.
             -or- 
               <typeparamref name="TEnum" /> is not an enum.
             -or- 
               <typeparamref name="TEnum" /> is declared [<see cref="T:System.FlagsAttribute" />].</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteGeneralizedTime">
      <MemberSignature Language="C#" Value="public void WriteGeneralizedTime (DateTimeOffset value, bool omitFractionalSeconds = false, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteGeneralizedTime(valuetype System.DateTimeOffset value, bool omitFractionalSeconds, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteGeneralizedTime(System.DateTimeOffset,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteGeneralizedTime (value As DateTimeOffset, Optional omitFractionalSeconds As Boolean = false, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteGeneralizedTime : DateTimeOffset * bool * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteGeneralizedTime (value, omitFractionalSeconds, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
        <Parameter Name="omitFractionalSeconds" Type="System.Boolean" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <param name="omitFractionalSeconds">
          <see langword="true" /> to treat the fractional seconds in <paramref name="value" /> as 0 even if a non-zero value is present.</param>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 24).</param>
        <summary>Write the provided <see cref="T:System.DateTimeOffset" /> as a GeneralizedTime with a specified UNIVERSAL 24, optionally excluding the fractional seconds.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteInteger">
      <MemberSignature Language="C#" Value="public void WriteInteger (long value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteInteger(int64 value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Int64,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteInteger (value As Long, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteInteger : int64 * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteInteger (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 2).</param>
        <summary>Write an Integer value with a specified tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteInteger">
      <MemberSignature Language="C#" Value="public void WriteInteger (System.Numerics.BigInteger value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteInteger(valuetype System.Numerics.BigInteger value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Numerics.BigInteger,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteInteger (value As BigInteger, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteInteger : System.Numerics.BigInteger * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteInteger (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 2).</param>
        <summary>Write an Integer value with a specified tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteInteger">
      <MemberSignature Language="C#" Value="public void WriteInteger (ReadOnlySpan&lt;byte&gt; value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteInteger(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteInteger (value As ReadOnlySpan(Of Byte), Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteInteger : ReadOnlySpan&lt;byte&gt; * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteInteger (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The integer value to write, in signed big-endian byte order.</param>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 2).</param>
        <summary>Write an Integer value with a specified tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.</exception>
        <exception cref="T:System.ArgumentException">the 9 most significant bits are all set.
             -or- 
               the 9 most significant bits are all unset.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteInteger">
      <MemberSignature Language="C#" Value="public void WriteInteger (ulong value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteInteger(unsigned int64 value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.UInt64,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteInteger (value As ULong, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteInteger : uint64 * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteInteger (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 2).</param>
        <summary>Write an Integer value with a specified tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteIntegerUnsigned">
      <MemberSignature Language="C#" Value="public void WriteIntegerUnsigned (ReadOnlySpan&lt;byte&gt; value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteIntegerUnsigned(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteIntegerUnsigned(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteIntegerUnsigned (value As ReadOnlySpan(Of Byte), Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteIntegerUnsigned : ReadOnlySpan&lt;byte&gt; * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteIntegerUnsigned (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The integer value to write, in unsigned big-endian byte order.</param>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 2).</param>
        <summary>Write an Integer value with a specified tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.</exception>
        <exception cref="T:System.ArgumentException">the 9 most significant bits are all unset.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNamedBitList">
      <MemberSignature Language="C#" Value="public void WriteNamedBitList (System.Collections.BitArray value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNamedBitList(class System.Collections.BitArray value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Collections.BitArray,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNamedBitList (value As BitArray, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteNamedBitList : System.Collections.BitArray * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteNamedBitList (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.BitArray" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The bits to write</param>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 3).</param>
        <summary>Write a bit array value as a NamedBitList with a specified tag.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

The index of the bit array corresponds to the bit number in the encoded format, which is different than the value produced by <xref:System.Collections.BitArray.CopyTo(System.Array,System.Int32)> with a byte array.
              For example, the bit array `{ false, true, true }` encodes as `0b0110_0000` with 5 unused bits.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNamedBitList">
      <MemberSignature Language="C#" Value="public void WriteNamedBitList (Enum value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNamedBitList(class System.Enum value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNamedBitList (value As Enum, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteNamedBitList : Enum * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteNamedBitList (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Enum" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The boxed enumeration value to write</param>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 3).</param>
        <summary>Write a [<see cref="T:System.FlagsAttribute" />] enum value as a NamedBitList with a specified tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.
             -or- 
               <paramref name="value" /> is not a boxed enum value.
             -or- 
               the unboxed type of <paramref name="value" /> is not declared [<see cref="T:System.FlagsAttribute" />].</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNamedBitList&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public void WriteNamedBitList&lt;TEnum&gt; (TEnum value, System.Formats.Asn1.Asn1Tag? tag = default) where TEnum : Enum;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNamedBitList&lt;(class System.Enum) TEnum&gt;(!!TEnum value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNamedBitList(Of TEnum As Enum) (value As TEnum, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteNamedBitList : 'Enum * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit (requires 'Enum :&gt; Enum)" Usage="asnWriter.WriteNamedBitList (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <BaseTypeName>System.Enum</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="TEnum" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum">To be added.</typeparam>
        <param name="value">The enumeration value to write</param>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 3).</param>
        <summary>Write a [<see cref="T:System.FlagsAttribute" />] enum value as a NamedBitList with a specified tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.
             -or- 
               <typeparamref name="TEnum" /> is not an enum value.
             -or- 
               <typeparamref name="TEnum" /> is not declared [<see cref="T:System.FlagsAttribute" />].</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNull">
      <MemberSignature Language="C#" Value="public void WriteNull (System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNull(valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteNull(System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNull (Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteNull : Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteNull tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 5).</param>
        <summary>Write NULL with a specified tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObjectIdentifier">
      <MemberSignature Language="C#" Value="public void WriteObjectIdentifier (ReadOnlySpan&lt;char&gt; oidValue, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteObjectIdentifier(valuetype System.ReadOnlySpan`1&lt;char&gt; oidValue, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteObjectIdentifier (oidValue As ReadOnlySpan(Of Char), Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteObjectIdentifier : ReadOnlySpan&lt;char&gt; * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteObjectIdentifier (oidValue, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oidValue" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="oidValue">The object identifier to write.</param>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 6).</param>
        <summary>Write an Object Identifier with a specified tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.
             -or- 
               <paramref name="oidValue" /> is not a valid dotted decimal object identifier.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObjectIdentifier">
      <MemberSignature Language="C#" Value="public void WriteObjectIdentifier (string oidValue, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteObjectIdentifier(string oidValue, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteObjectIdentifier (oidValue As String, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteObjectIdentifier : string * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteObjectIdentifier (oidValue, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oidValue" Type="System.String" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="oidValue">The object identifier to write.</param>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 6).</param>
        <summary>Write an Object Identifier with a specified tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.
             -or- 
               <paramref name="oidValue" /> is not a valid dotted decimal object identifier.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="oidValue" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteOctetString">
      <MemberSignature Language="C#" Value="public void WriteOctetString (ReadOnlySpan&lt;byte&gt; value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteOctetString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteOctetString(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteOctetString (value As ReadOnlySpan(Of Byte), Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteOctetString : ReadOnlySpan&lt;byte&gt; * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteOctetString (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 4).</param>
        <summary>Write an Octet String value with a specified tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteUtcTime">
      <MemberSignature Language="C#" Value="public void WriteUtcTime (DateTimeOffset value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteUtcTime(valuetype System.DateTimeOffset value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteUtcTime (value As DateTimeOffset, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteUtcTime : DateTimeOffset * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteUtcTime (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 23).</param>
        <summary>Write the provided value as a UTCTime with a specified tag, accepting the two-digit year as valid in context.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteUtcTime">
      <MemberSignature Language="C#" Value="public void WriteUtcTime (DateTimeOffset value, int twoDigitYearMax, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteUtcTime(valuetype System.DateTimeOffset value, int32 twoDigitYearMax, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteUtcTime (value As DateTimeOffset, twoDigitYearMax As Integer, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteUtcTime : DateTimeOffset * int * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteUtcTime (value, twoDigitYearMax, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
        <Parameter Name="twoDigitYearMax" Type="System.Int32" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <param name="twoDigitYearMax">The maximum valid year for <paramref name="value" />, after conversion to UTC.
              For the X.509 Time.utcTime range of 1950-2049, pass <c>2049</c>.</param>
        <param name="tag">The tag to write, or <see langword="null" /> for the default tag (Universal 23).</param>
        <summary>Write the provided value as a UTCTime with a specified tag, provided the year is in the allowed range.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> is <see cref="F:System.Formats.Asn1.TagClass.Universal" />, but <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> is not correct for the method.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="value" />.<see cref="P:System.DateTimeOffset.Year" /> (after conversion to UTC) is not in the range (<paramref name="twoDigitYearMax" /> - 100, <paramref name="twoDigitYearMax" />].</exception>
      </Docs>
    </Member>
  </Members>
</Type>
